
;; Function cldrad (cldrad_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=208, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=160, prev_offset=0)
Can eliminate 20 to 6 (offset=-32, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 16:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=2230 from oldreg=1197, assigning class GENERAL_REGS to r2230
   16: r2230:DI={(flags:CCGOC>=0)?r1088:DI:r2230:DI}
      REG_DEAD r1197:DI
      REG_DEAD r1088:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
 4444: r2230:DI=r1197:DI
    Inserting insn reload after:
 4445: r1089:DI=r2230:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 21:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=2231 from oldreg=1090, assigning class GENERAL_REGS to r2231
   21: {r2231:DI=r2231:DI*[frame:DI-0x50];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
 4446: r2231:DI=r1089:DI
    Inserting insn reload after:
 4447: r1090:DI=r2231:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 23:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 28:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 35:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (2) 0  (3) rm {*movdicc_noc}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 42:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=2232 from oldreg=1096, assigning class GENERAL_REGS to r2232
   42: r2232:DI=~r2232:DI
    Inserting insn reload before:
 4448: r2232:DI=r1089:DI
    Inserting insn reload after:
 4449: r1096:DI=r2232:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 43:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 49:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 51:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) rm {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 55:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 57:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 61:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 62:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 69:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (2) 0  (3) rm {*movdicc_noc}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 105:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 107:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 108
	 Choosing alt 0 in insn 108:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 109:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 110:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 111:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 112:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 113:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 119:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 125:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 126:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 127:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 131:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 139:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 148:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 152
	 Choosing alt 0 in insn 152:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 153:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 154:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 155:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 157:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 158:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 161
	 Choosing alt 0 in insn 161:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 162:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 163:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 164
	 Choosing alt 1 in insn 164:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 165:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 166:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 167:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 173:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 179:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 180:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 185:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 186:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 187:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 188:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 189:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 191:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 192:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 193:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 194:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 195:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2233 from oldreg=1227, assigning class DIREG to r2233
  195: {r1229:DI=0;r2233:DI=r1229:DI<<0x3+r2233:DI;[r2233:DI]=0;use r1228:DI;use r1229:DI;}
      REG_UNUSED r1229:DI
    Inserting insn reload before:
 4450: r2233:DI=r1227:DI
    Inserting insn reload after:
 4451: r1227:DI=r2233:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 196:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 197:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 198:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 199:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 202:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 210:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 212:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 213:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 214:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 215:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 220:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 221:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 222:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 237:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 245:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 250:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 252:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 260:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 262:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 267:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 268:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 269:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 270:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 271:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 272:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
      Creating newreg=2234, assigning class GENERAL_REGS to r2234
  272: [--sp:DI]=r2234:DI
      REG_ARGS_SIZE 0x10
    Inserting insn reload before:
 4452: r2234:DI=`egrid2.4381'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4452:  (0) r  (1) i {*movdi_internal} (sp_off=-8)
      Change to class INDEX_REGS for r2234
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 273:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 274:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 279:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 280:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 281:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 283:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 286:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 287:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 289:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 292:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 293:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 294:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 295:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 296:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 298:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 299:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 300:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 301:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 302:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2235 from oldreg=1252, assigning class DIREG to r2235
  302: {r1254:DI=0;r2235:DI=r1254:DI<<0x3+r2235:DI;[r2235:DI]=0;use r1253:DI;use r1254:DI;}
      REG_UNUSED r1254:DI
    Inserting insn reload before:
 4453: r2235:DI=r1252:DI
    Inserting insn reload after:
 4454: r1252:DI=r2235:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 303:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 304:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 307:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 312:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 315:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 317:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 318:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 319:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 320:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 325:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 326:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 327:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 335:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 336:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 337:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 341:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 342:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 343:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 344:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 345:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 346:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 347:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 348:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 352:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 354:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 356:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 357:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 362:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 363:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 364:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 366:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 367:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 372:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 373:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 374
	 Choosing alt 2 in insn 374:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 375:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 376:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 377:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 379:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 380:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 381:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 382:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 383
	 Choosing alt 2 in insn 383:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 384:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 385:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 386:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 388:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 389:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 390:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 391:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 392:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 398:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 406:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 407:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 410:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 411:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 412:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 415:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 416:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 417:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 420:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 421:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 422:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 425:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 430:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 431:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 432
	 Choosing alt 2 in insn 432:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 433:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 435:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 436:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 437:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 438:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 439:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 440:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 441
	 Choosing alt 2 in insn 441:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 442:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 443:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 444:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 445:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 446:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 447:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 448:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 449:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 450:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 456:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 464:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 465:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 466:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 467:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2236 from oldreg=1287, assigning class DIREG to r2236
  467: {r1289:DI=0;r2236:DI=r1289:DI<<0x3+r2236:DI;[r2236:DI]=0;use r1288:DI;use r1289:DI;}
      REG_UNUSED r1289:DI
    Inserting insn reload before:
 4455: r2236:DI=r1287:DI
    Inserting insn reload after:
 4456: r1287:DI=r2236:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 468:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 469:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 470:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 471:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 472:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 474:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 476:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 477:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 480:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 481:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 482:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 483:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 484:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 485:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 490:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 491:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 492:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 496:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 497:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 500:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 501:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 502:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 503:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 504:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 505:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 506:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 509:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 510:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 511:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 512:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 513:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 514:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 515:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 516:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 517:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 518:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 519:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2237 from oldreg=1300, assigning class DIREG to r2237
  519: {r1302:DI=0;r2237:DI=r1302:DI<<0x3+r2237:DI;[r2237:DI]=0;use r1301:DI;use r1302:DI;}
      REG_UNUSED r1302:DI
    Inserting insn reload before:
 4457: r2237:DI=r1300:DI
    Inserting insn reload after:
 4458: r1300:DI=r2237:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 520:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 521:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 522:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 523:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 524:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 526:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 528:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 532:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 534:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 535:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 536:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 537:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 542:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 543:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 544:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 545:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 548:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 549:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 552:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 553:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 554:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 555:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 558:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 559:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 560:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 561:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 562:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 563:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 564:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 565:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 566:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 567:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 568:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2238 from oldreg=1313, assigning class DIREG to r2238
  568: {r1315:DI=0;r2238:DI=r1315:DI<<0x3+r2238:DI;[r2238:DI]=0;use r1314:DI;use r1315:DI;}
      REG_UNUSED r1315:DI
    Inserting insn reload before:
 4459: r2238:DI=r1313:DI
    Inserting insn reload after:
 4460: r1313:DI=r2238:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 569:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 570:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 571:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 572:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 573:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 576:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 578:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 579:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 580:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 581:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 582:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 584:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 586:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 587:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 590:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 591:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 592:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 593:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 594:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 595:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 600:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 601:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 602:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 603:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 606:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 607:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 610:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 611:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 612:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 613:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 616:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 617:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 618:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 619:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 620:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 621:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 622:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 623:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 624:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 625:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 626:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2239 from oldreg=1329, assigning class DIREG to r2239
  626: {r1331:DI=0;r2239:DI=r1331:DI<<0x3+r2239:DI;[r2239:DI]=0;use r1330:DI;use r1331:DI;}
      REG_UNUSED r1331:DI
    Inserting insn reload before:
 4461: r2239:DI=r1329:DI
    Inserting insn reload after:
 4462: r1329:DI=r2239:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 627:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 628:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 629:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 630:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 631:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 634:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 636:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 637:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 638:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 639:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 640:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 645:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 648:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 649:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 650:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 651:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 652:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 653:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 658:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 659:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 660:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 661:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 664:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 665:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 668:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 669:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 671:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 674:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 675:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 676:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 677:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 678:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 679:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 680:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 681:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 682:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 683:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 684:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2240 from oldreg=1345, assigning class DIREG to r2240
  684: {r1347:DI=0;r2240:DI=r1347:DI<<0x3+r2240:DI;[r2240:DI]=0;use r1346:DI;use r1347:DI;}
      REG_UNUSED r1347:DI
    Inserting insn reload before:
 4463: r2240:DI=r1345:DI
    Inserting insn reload after:
 4464: r1345:DI=r2240:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 685:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 686:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 687:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 688:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 689:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 692:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 694:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 695:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 696:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 697:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 698:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 700:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 702:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 703:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 706:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 707:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 708:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 709:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 710:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 711:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 716:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 717:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 718:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 719:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 722:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 723:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 726:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 727:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 728:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 730:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 731:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 732:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 733:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 736:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 738:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 739:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 740:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 741:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 744:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 745:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 746:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 747:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 748:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 749
	 Choosing alt 0 in insn 749:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 750:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 751:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 752:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 753:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 754:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 755:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 756:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 757:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 758:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 759
	 Choosing alt 0 in insn 759:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 760:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 761:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 762:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 763:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 764:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 765:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 766:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 767:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 768:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 769:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 770
	 Choosing alt 0 in insn 770:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 771:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 776:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 777:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 778:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 779:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 780:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 781
	 Choosing alt 0 in insn 781:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 782:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 783:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 784:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 785:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 786:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 787:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 788:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 789:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 790:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 791:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 792
	 Choosing alt 0 in insn 792:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 793:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 798:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 799:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 800:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 801:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 802:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 803
	 Choosing alt 0 in insn 803:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 804:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 805:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 806:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 807:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 813:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 819:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 820:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 821:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 822:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 825:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 826:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 827:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 828:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 829:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 830:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 831:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 832:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 833:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 834:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 835:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2241 from oldreg=1382, assigning class DIREG to r2241
  835: {r1384:DI=0;r2241:DI=r1384:DI<<0x3+r2241:DI;[r2241:DI]=0;use r1383:DI;use r1384:DI;}
      REG_UNUSED r1384:DI
    Inserting insn reload before:
 4465: r2241:DI=r1382:DI
    Inserting insn reload after:
 4466: r1382:DI=r2241:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 836:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 837:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 838:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 839:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 840:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 843:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 845:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 846:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 847:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 848:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 849:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 851:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 853:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 854:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 857:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 858:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 859:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 860:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 861:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 862:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 867:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 868:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 869:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 870:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 873:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 874:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 877:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 878:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 879:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 881:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 882:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 883:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 884:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 887:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 889:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 890:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 891:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 892:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 895:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 896:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 897:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 898:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 899:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 900
	 Choosing alt 0 in insn 900:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 901:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 902:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 903:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 904:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 905:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 906:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 907:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 908:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 909:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 910
	 Choosing alt 0 in insn 910:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 911:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 912:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 913:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 914:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 915
	 Choosing alt 0 in insn 915:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 916:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 917:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 920:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 921:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 922:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 923:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 924:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 925
	 Choosing alt 0 in insn 925:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 926:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 927:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 928:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 929:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 930:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 931:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 932:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 933:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 934:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 935
	 Choosing alt 0 in insn 935:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 936:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 937:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 938:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 939:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 940
	 Choosing alt 1 in insn 940:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 942:  (0) v  (1) m {*floatsisf2_mixed}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 943:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 944:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 945:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 946:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 947:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 948
	 Choosing alt 0 in insn 948:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 949:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 950:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=2242 from oldreg=260, assigning class SSE_REGS to r2242
  950: r2242:SF=r2242:SF/r261:SF
      REG_DEAD r261:SF
      REG_DEAD r260:SF
    Inserting insn reload before:
 4467: r2242:SF=r260:SF
    Inserting insn reload after:
 4468: r267:SF=r2242:SF

            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 951:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 952:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 957:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 958:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 959:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 960:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 961:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 962
	 Choosing alt 0 in insn 962:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 963:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 964:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 965:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 966:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 969:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 975:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 981:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 982:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 983:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 984:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 987:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 988:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 989:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 990:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 991:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 992:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 993:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 994:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 995:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 996:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 997:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2243 from oldreg=1424, assigning class DIREG to r2243
  997: {r1426:DI=0;r2243:DI=r1426:DI<<0x3+r2243:DI;[r2243:DI]=0;use r1425:DI;use r1426:DI;}
      REG_UNUSED r1426:DI
    Inserting insn reload before:
 4469: r2243:DI=r1424:DI
    Inserting insn reload after:
 4470: r1424:DI=r2243:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 998:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 999:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1000:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1001:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1002:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1003:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1004:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1005:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1006:  (0) =r  (1) g {*movsi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1007:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1008:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1009:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1010:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1011:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1012:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1015:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1016:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1017:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1022:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1023:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1024:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1027:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1028:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1031:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1034:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1035:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1036:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1039:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1041:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1042:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1043:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1044:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1045:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1047:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1049:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1050:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1053:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1054:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1055:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1056:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1057:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1058:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1063:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1064:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1065:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1066:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1069:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1070:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1073:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1074:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1075:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1077:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1078:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1079:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1080:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1083:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1085:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1086:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1087:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1088:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1091:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1092:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1093:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1094:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1095:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1096
	 Choosing alt 0 in insn 1096:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1097:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1098:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1099:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1100:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1101:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1104:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1105:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1106:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1107:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1108:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1109
	 Choosing alt 0 in insn 1109:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1110:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1111:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1112:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1113:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1114:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1115:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1116:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1117:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1118:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1119
	 Choosing alt 0 in insn 1119:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1120:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1121:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1122:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1123:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1124:  (0) v  (1) r {*floatsisf2_mixed}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1125:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1126:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1127:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1128:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1129:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1130
	 Choosing alt 0 in insn 1130:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1131:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1132:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1133:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1134:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1139:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1140:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1141:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1142:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1143:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1144
	 Choosing alt 0 in insn 1144:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1145:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1146:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1147:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1148:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1151:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1157:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1163:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1164:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1165:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1166:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1169:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1170:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1171:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1172:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1173:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1174:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1175:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1176:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1177:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1178:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 1179:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2244 from oldreg=1471, assigning class DIREG to r2244
 1179: {r1473:DI=0;r2244:DI=r1473:DI<<0x3+r2244:DI;[r2244:DI]=0;use r1472:DI;use r1473:DI;}
      REG_UNUSED r1473:DI
    Inserting insn reload before:
 4471: r2244:DI=r1471:DI
    Inserting insn reload after:
 4472: r1471:DI=r2244:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1180:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1181:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1182:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1183:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1184:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1185:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1186:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1187:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1188:  (0) =r  (1) g {*movsi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1189:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1190:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1191:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1192:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1193:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1194:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1197:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1198:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1199:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1204:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1205:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1206:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1209:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1210:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1213:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1216:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1217:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1218:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1221:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1223:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1224:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1225:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1226:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1227:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1229:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1231:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1232:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1235:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1236:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1237:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1238:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1239:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1240:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1245:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1246:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1247:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1248:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1251:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1252:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1255:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1256:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1257:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1259:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1260:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1261:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1262:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1265:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1267:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1268:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1269:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1270:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1273:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1274:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1275:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1276:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1277:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1278
	 Choosing alt 0 in insn 1278:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1279:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1280:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1281:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1282:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1283:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1286:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1287:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1288:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1289:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1290:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1291
	 Choosing alt 0 in insn 1291:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1292:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1293:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1294:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1295:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1296:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1297:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1298:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1299:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1300:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1301
	 Choosing alt 0 in insn 1301:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1302:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1303:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1304:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1305:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1306:  (0) v  (1) r {*floatsisf2_mixed}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1307:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1308:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1309:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1310:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1311:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1312
	 Choosing alt 0 in insn 1312:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1313:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1314:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1315:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1316:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1321:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1322:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1323:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1324:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1325:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1326
	 Choosing alt 0 in insn 1326:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1327:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1328:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1329:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1330:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1333:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1339:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1345:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1346:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1347:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1348:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1351:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1352:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1353:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1354:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1355:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1356:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1357:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1358:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1359:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1360:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 1361:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2245 from oldreg=1518, assigning class DIREG to r2245
 1361: {r1520:DI=0;r2245:DI=r1520:DI<<0x3+r2245:DI;[r2245:DI]=0;use r1519:DI;use r1520:DI;}
      REG_UNUSED r1520:DI
    Inserting insn reload before:
 4473: r2245:DI=r1518:DI
    Inserting insn reload after:
 4474: r1518:DI=r2245:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1362:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1363:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1364:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1365:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1366:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1367:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1368:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1369:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1370:  (0) =r  (1) g {*movsi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1371:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1372:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1373:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1374:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1375:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1376:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1379:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1380:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1381:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1386:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1387:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1388:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1391:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1392:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1395:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1398:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1399:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1400:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1403:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1405:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1406:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1407:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1408:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1409:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1411:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1413:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1414:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1417:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1418:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1419:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1420:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1421:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1422:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1427:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1428:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1429:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1430:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1433:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1434:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1437:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1438:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1442:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1443:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1444:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1445:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1446:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1448:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1449:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1450:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1451:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1454:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1456:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1457:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1458:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1459:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1462:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1463:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1464:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1465:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1466:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1467
	 Choosing alt 0 in insn 1467:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1468:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1469:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1470:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1471:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1472:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1473:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1474:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1475:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1476
	 Choosing alt 0 in insn 1476:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1477:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1478:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1479:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1480:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1481:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1482:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1483:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1484:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1485:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1486
	 Choosing alt 0 in insn 1486:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1487:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1488:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1489:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1490:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1491:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1497:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1503:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1504:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1505:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1507:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1508:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1509:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1510:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1513:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1515:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1516:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1517:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1518:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1521:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1522:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1523:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1524:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1525:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1526
	 Choosing alt 0 in insn 1526:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1527:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1528:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1529:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1530:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1531:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1532:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1533:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1534:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1535:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1537:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1538:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1539:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1540:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1543:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1544:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1545:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1546:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1547:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1548:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1549:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1550:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1551:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1552
	 Choosing alt 0 in insn 1552:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1553:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1554:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1555:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1556:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1562:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1563:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1564:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1565:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1566:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1567
	 Choosing alt 0 in insn 1567:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1568:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1569:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1570:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1571:  (0) r {*cmpsi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1574:  (0) v  (1) m {*floatsisf2_mixed}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1575:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1576:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1577:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1578:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1579:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1580:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1581
	 Choosing alt 0 in insn 1581:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1582:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1583:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1584:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1585:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1586:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1592:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1593:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1594:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1595:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1596:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1597
	 Choosing alt 0 in insn 1597:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1598:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1599:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1600:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1601:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1602:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1605:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1606:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1607:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1608:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1609:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1610
	 Choosing alt 0 in insn 1610:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1611:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1612:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1613:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1616:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1622:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1623:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1625:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1626:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1632:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1633:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1634:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1635:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1636:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1637
	 Choosing alt 0 in insn 1637:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1638:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1639:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1640:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1641:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1642:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1643:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1644:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1645:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1646:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1647
	 Choosing alt 0 in insn 1647:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1648:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1649:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1650:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1651:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1656:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1657:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1659:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1660:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1666:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1667:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1668:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1669:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1670:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1671:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1672:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1673:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1674:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1675:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1676:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1677:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1678
	 Choosing alt 0 in insn 1678:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1679:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1680:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1681:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1682:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1683:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1684:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1685:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1686:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1687:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1688:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1689:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1690:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1691
	 Choosing alt 0 in insn 1691:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1692:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1693
	 Choosing alt 1 in insn 1693:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1694:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1695:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1696:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1697:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1698:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1699:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1700:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1701
	 Choosing alt 0 in insn 1701:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1702:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1703:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1704:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1705:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1706:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1707:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1708
	 Choosing alt 0 in insn 1708:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1709:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1710:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1711:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1712:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1713:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1714:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1719:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1720:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1721:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1722:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1723:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1724:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1725:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1726:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1727:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1728:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1729:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1730:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1731:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1732:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1733
	 Choosing alt 0 in insn 1733:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1734:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1735:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1736:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1737:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1738:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1739:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1740:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1741:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1742:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1743:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1744:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1745:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1746
	 Choosing alt 0 in insn 1746:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1747:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1748
	 Choosing alt 1 in insn 1748:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1749:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1750:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1751:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1752:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1753:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1754:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1755:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1756:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1757:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1758:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1759:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1760:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1761
	 Choosing alt 0 in insn 1761:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1762:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1763:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1764:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1765:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1766:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1767:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1768:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1769:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1770:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1771:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1772:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1773:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1774:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1775:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1776
	 Choosing alt 0 in insn 1776:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1777:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1778:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1779:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1780:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1781
	 Choosing alt 1 in insn 1781:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1782:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1783:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1784:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1785:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1786:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1787:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1788:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1789:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1790:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1791:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1792
	 Choosing alt 0 in insn 1792:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1793:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1794:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1795:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1796:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1797:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1798:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1799:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1800
	 Choosing alt 1 in insn 1800:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1802
	 Choosing alt 1 in insn 1802:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1803:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 1804:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=2246 from oldreg=509, assigning class SSE_REGS to r2246
 1804: r2246:SF=r2246:SF*r1641:SF
      REG_DEAD r1641:SF
      REG_DEAD r509:SF
    Inserting insn reload before:
 4475: r2246:SF=r509:SF
    Inserting insn reload after:
 4476: r510:SF=r2246:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4476:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1805:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1806:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1807:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1808:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1809:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1810:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1811:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1812:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1813:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1814:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1815
	 Choosing alt 0 in insn 1815:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1816:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1817:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1818:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1820:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1223,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            alt=3,overall=1221,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=4,overall=615,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1821:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1822:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1823:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1824:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1825:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1826:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1827
	 Choosing alt 0 in insn 1827:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1828:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1829:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1830:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1832:  (1) rBwBz {*call_value}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 1834:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=2247 from oldreg=521, assigning class SSE_REGS to r2247
 1834: r2247:SF=r2247:SF-r528:SF
      REG_DEAD r528:SF
      REG_DEAD r521:SF
    Inserting insn reload before:
 4477: r2247:SF=r521:SF
    Inserting insn reload after:
 4478: r529:SF=r2247:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4477:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
	 Choosing alt 1 in insn 1836:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=2248 from oldreg=510, assigning class SSE_REGS to r2248
 1836: r2248:SF=r2248:SF*r530:SF
      REG_DEAD r530:SF
      REG_DEAD r510:SF
    Inserting insn reload before:
 4479: r2248:SF=r510:SF
    Inserting insn reload after:
 4480: r531:SF=r2248:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4479:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1837:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1838:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1839:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1840:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1841:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1842:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1843:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1844:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1845:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1846:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1847
	 Choosing alt 0 in insn 1847:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1848:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1849:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1850:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1851:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1852:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1853:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1854:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1855:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1856:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1857
	 Choosing alt 0 in insn 1857:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1858:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1859
	 Choosing alt 1 in insn 1859:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1860:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1861:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1864:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1870:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1876:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1877:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1880:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1881:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1882:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1883:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1886:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1887:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1888:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1889:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1890:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1891:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1892:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1893:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1894:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1895:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 1896:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2249 from oldreg=1659, assigning class DIREG to r2249
 1896: {r1661:DI=0;r2249:DI=r1661:DI<<0x3+r2249:DI;[r2249:DI]=0;use r1660:DI;use r1661:DI;}
      REG_UNUSED r1661:DI
    Inserting insn reload before:
 4481: r2249:DI=r1659:DI
    Inserting insn reload after:
 4482: r1659:DI=r2249:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1897:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1898:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1899:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1900:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1901:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1903:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1905:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1906:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1909:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1910:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1911:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1912:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1913:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1914:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1919:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1920:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1921:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1922:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1925:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1926:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1929:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1930:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1931:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1932:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1935:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1936:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1937:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1938:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1939:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1940:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1941:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1942:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1943:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1944:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 1945:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2250 from oldreg=1672, assigning class DIREG to r2250
 1945: {r1674:DI=0;r2250:DI=r1674:DI<<0x3+r2250:DI;[r2250:DI]=0;use r1673:DI;use r1674:DI;}
      REG_UNUSED r1674:DI
    Inserting insn reload before:
 4483: r2250:DI=r1672:DI
    Inserting insn reload after:
 4484: r1672:DI=r2250:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1946:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1947:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1948:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1949:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1950:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1952:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1954:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1955:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1958:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1959:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1960:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1961:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1962:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1963:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1968:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1969:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1970:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1971:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1974:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1975:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1978:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1979:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1982:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1983:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1987:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1988:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1989:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1990:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1991:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1993:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1994:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1995:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1996:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1999:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2001:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2002:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2003:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2004:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2007:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2008:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2009:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2010:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2011:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2012
	 Choosing alt 0 in insn 2012:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2013:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2014:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2015:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2016:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2022:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2028:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2029:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2030:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2032:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2033:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2034:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2035:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2038:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2040:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2041:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2042:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2043:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2046:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2047:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2048:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2049:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2050:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2051:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2052:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2053
	 Choosing alt 0 in insn 2053:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2054:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2055:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2056:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2057:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2058:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2059:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2060:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2062:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2063:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2064:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2065:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2068:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2069:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2070:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2071:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2072:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2073:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2074:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2075:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2076:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2077
	 Choosing alt 0 in insn 2077:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2078:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2079:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2080:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2081:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2087:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2088:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2089:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2090:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2091:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2092
	 Choosing alt 0 in insn 2092:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2093:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2094:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2095:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2096:  (0) r {*cmpsi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2099:  (0) v  (1) m {*floatsisf2_mixed}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2100:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2101:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2102:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2103:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2104:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2105:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2106
	 Choosing alt 0 in insn 2106:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2107:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2108:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2109:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2110:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2111:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2112:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2118:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2119:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2120:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2121:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2122:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2123
	 Choosing alt 0 in insn 2123:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2124:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2125:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2126:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2127:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2128:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2131:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2132:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2133:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2134:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2135:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2136
	 Choosing alt 0 in insn 2136:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2137:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2138:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2139:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2142:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2148:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2149:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2151:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2152:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2158:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2159:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2160:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2161:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2162:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2163
	 Choosing alt 0 in insn 2163:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2164:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2165:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2166:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2167:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2168:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2169:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2170:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2171:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2172:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2173
	 Choosing alt 0 in insn 2173:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2174:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2175:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2176:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2177:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2178:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2179:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2180:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2181:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2182:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2183
	 Choosing alt 0 in insn 2183:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2184:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2185:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2186:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2187:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2188:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2189:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2190:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2191:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2192:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2193:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2194:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2195:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2196:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2197:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2198
	 Choosing alt 0 in insn 2198:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2199:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2200:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2201:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2202:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2203:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2204:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2205
	 Choosing alt 0 in insn 2205:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2206:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2207:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2208:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2209:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2210:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2211:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2216:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2217:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2219:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2220:  (0) v  (1) vm {*cmpiusf}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2226:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2227:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2228:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2229:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2230:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2231:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2232:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2233
	 Choosing alt 0 in insn 2233:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2234:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2235:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2236:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2237:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2238:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2239:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2240:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2241:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2242:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2243:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2244:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2245:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2246
	 Choosing alt 0 in insn 2246:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2247:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2248
	 Choosing alt 1 in insn 2248:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2249:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2250:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2251:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2252:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2253:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2254:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2255:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2256
	 Choosing alt 0 in insn 2256:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2257:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2258:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2259:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2260:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2261:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2262:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2263
	 Choosing alt 0 in insn 2263:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2264:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2265:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2266:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2267:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2268:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2269:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2270:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2271:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2272:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2273:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2274:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2275
	 Choosing alt 0 in insn 2275:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2276:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2277:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2278:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2279:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2280:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2281:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2282
	 Choosing alt 0 in insn 2282:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2283:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2284:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2285:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2286:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2287:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2288:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2293:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2294:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2295:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2296:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2297:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2298:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2299:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2300:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2301:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2302:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2303:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2304:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2305:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2306:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2307
	 Choosing alt 0 in insn 2307:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2308:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2309:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2310:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2311:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2312:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2313:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2314:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2315:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2316:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2317:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2318:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2319:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2320
	 Choosing alt 0 in insn 2320:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2321:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2322
	 Choosing alt 1 in insn 2322:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2323:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2324:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2325:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2326:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2327:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2328:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2329:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2330:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2331:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2332:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2333:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2334:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2335
	 Choosing alt 0 in insn 2335:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2336:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2337:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2338:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2339:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2340:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2341:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2342:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2343:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2344:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2345:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2346:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2347:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2348:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2349:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2350
	 Choosing alt 0 in insn 2350:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2351:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2352:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2353:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2354:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2355
	 Choosing alt 1 in insn 2355:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2356:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2357:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2358:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2359:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2360:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2361:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2362:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2363:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2364:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2365:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2366
	 Choosing alt 0 in insn 2366:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2367:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2368:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2369:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2370:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2371:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2372:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2373:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2374
	 Choosing alt 1 in insn 2374:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2376
	 Choosing alt 1 in insn 2376:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2377:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 2378:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=2251 from oldreg=723, assigning class SSE_REGS to r2251
 2378: r2251:SF=r2251:SF*r1795:SF
      REG_DEAD r1795:SF
      REG_DEAD r723:SF
    Inserting insn reload before:
 4485: r2251:SF=r723:SF
    Inserting insn reload after:
 4486: r724:SF=r2251:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4486:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2379:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2380:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2381:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2382:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2383:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2384:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2385:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2386:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2387:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2388:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2389
	 Choosing alt 0 in insn 2389:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2390:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2391:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2392:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2394:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1223,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            alt=3,overall=1221,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=4,overall=615,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2395:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2396:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2397:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2398:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2399:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2400:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2401
	 Choosing alt 0 in insn 2401:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2402:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2403:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2404:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2406:  (1) rBwBz {*call_value}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 2408:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=2252 from oldreg=735, assigning class SSE_REGS to r2252
 2408: r2252:SF=r2252:SF-r742:SF
      REG_DEAD r742:SF
      REG_DEAD r735:SF
    Inserting insn reload before:
 4487: r2252:SF=r735:SF
    Inserting insn reload after:
 4488: r743:SF=r2252:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4487:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
	 Choosing alt 1 in insn 2410:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=2253 from oldreg=724, assigning class SSE_REGS to r2253
 2410: r2253:SF=r2253:SF*r744:SF
      REG_DEAD r744:SF
      REG_DEAD r724:SF
    Inserting insn reload before:
 4489: r2253:SF=r724:SF
    Inserting insn reload after:
 4490: r745:SF=r2253:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4489:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2411:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2412:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2413:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2414:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2415:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2416:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2417:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2418:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2419:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2420:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2421
	 Choosing alt 0 in insn 2421:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2422:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2423:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2424:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2425:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2426:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2427:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2428:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2429:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2430:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2431
	 Choosing alt 0 in insn 2431:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2432:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2433
	 Choosing alt 1 in insn 2433:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2434:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2435:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2436:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2437:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2438:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2439:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2440:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2441:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2442:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2443:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2444:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2445
	 Choosing alt 0 in insn 2445:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2446:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2447:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2448:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2449:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2450:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2451:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2452
	 Choosing alt 0 in insn 2452:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2453:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2454:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2455:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2456:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2457:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2458:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2461:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2467:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2473:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2474:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2477:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2478:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2479:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2480:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2483:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2484:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2485:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2486:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2487:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2488:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2489:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2490:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2491:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2492:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2493:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2254 from oldreg=1821, assigning class DIREG to r2254
 2493: {r1823:DI=0;r2254:DI=r1823:DI<<0x3+r2254:DI;[r2254:DI]=0;use r1822:DI;use r1823:DI;}
      REG_UNUSED r1823:DI
    Inserting insn reload before:
 4491: r2254:DI=r1821:DI
    Inserting insn reload after:
 4492: r1821:DI=r2254:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2494:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2495:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2496:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2497:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2498:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2500:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2502:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2503:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2506:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2507:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2508:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2509:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2510:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2511:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2516:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2517:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2518:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2519:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2522:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2523:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2526:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2527:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2528:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2529:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2532:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2533:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2534:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2535:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2536:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2537:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2538:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2539:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2540:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2541:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2542:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2255 from oldreg=1834, assigning class DIREG to r2255
 2542: {r1836:DI=0;r2255:DI=r1836:DI<<0x3+r2255:DI;[r2255:DI]=0;use r1835:DI;use r1836:DI;}
      REG_UNUSED r1836:DI
    Inserting insn reload before:
 4493: r2255:DI=r1834:DI
    Inserting insn reload after:
 4494: r1834:DI=r2255:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2543:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2544:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2545:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2546:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2547:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2549:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2551:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2552:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2555:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2556:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2557:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2558:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2559:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2560:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2565:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2566:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2567:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2568:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2571:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2572:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2575:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2576:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2577:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2578:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2581:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2582:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2583:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2584:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2585:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2586:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2587:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2588:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2589:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2590:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2591:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2256 from oldreg=1847, assigning class DIREG to r2256
 2591: {r1849:DI=0;r2256:DI=r1849:DI<<0x3+r2256:DI;[r2256:DI]=0;use r1848:DI;use r1849:DI;}
      REG_UNUSED r1849:DI
    Inserting insn reload before:
 4495: r2256:DI=r1847:DI
    Inserting insn reload after:
 4496: r1847:DI=r2256:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2592:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2593:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2594:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2595:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2596:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2598:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2600:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2601:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2604:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2605:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2606:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2607:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2608:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2609:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2614:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2615:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2616:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2617:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2620:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2621:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2624:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2625:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2626:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2627:  (0) v  (1) vm {*cmpisf}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2633:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2634:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2635:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2636:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2637:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2642:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2643:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2646:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2647:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2648:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2650:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2651:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2652:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2653:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2656:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2658:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2659:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2660:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2661:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2664:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2665:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2666:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2667:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2668:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2669
	 Choosing alt 0 in insn 2669:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2670:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2671:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2672:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2673:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2674:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2675:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2676:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2677:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2678:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2679
	 Choosing alt 0 in insn 2679:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2680:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2681:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2682:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2683:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2684:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2690:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2696:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2697:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2698:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2699:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2702:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2703:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2704:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2705:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2706:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2707:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2708:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2709:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2710:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2711:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2712:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2257 from oldreg=1875, assigning class DIREG to r2257
 2712: {r1877:DI=0;r2257:DI=r1877:DI<<0x3+r2257:DI;[r2257:DI]=0;use r1876:DI;use r1877:DI;}
      REG_UNUSED r1877:DI
    Inserting insn reload before:
 4497: r2257:DI=r1875:DI
    Inserting insn reload after:
 4498: r1875:DI=r2257:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2713:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2714:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2715:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2716:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2717:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2718:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2719:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2720:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2721:  (0) =r  (1) g {*movsi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2722:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2723:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2724:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2725:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2726:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2727:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2730:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2731:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2732:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2737:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2738:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2739:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2742:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2743:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2746:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2749:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2750:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2751:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2753:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2755:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2756:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2759:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2760:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2761:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2762:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2763:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2764:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2769:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2770:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2771:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2772:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2775:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2776:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2779:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2780:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2781:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2782:  (0) v  (1) vm {*cmpisf}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2788:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2789:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2790:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2791:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2792:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2797:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2798:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2801:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2802:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2803:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2805:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2806:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2807:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2808:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2811:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2813:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2814:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2815:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2816:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2819:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2820:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2821:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2822:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2823:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2824
	 Choosing alt 0 in insn 2824:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2825:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2826:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2827:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2828:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2829:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2830:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2831:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2832:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2833:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2834
	 Choosing alt 0 in insn 2834:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2835:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2836:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2837:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2838:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2839:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2845:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2851:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2852:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2853:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2854:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2857:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2858:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2859:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2860:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2861:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2862:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2863:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2864:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2865:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2866:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2867:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2258 from oldreg=1913, assigning class DIREG to r2258
 2867: {r1915:DI=0;r2258:DI=r1915:DI<<0x3+r2258:DI;[r2258:DI]=0;use r1914:DI;use r1915:DI;}
      REG_UNUSED r1915:DI
    Inserting insn reload before:
 4499: r2258:DI=r1913:DI
    Inserting insn reload after:
 4500: r1913:DI=r2258:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2868:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2869:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2870:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2871:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2872:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2873:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2874:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2875:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2876:  (0) =r  (1) g {*movsi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2877:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2878:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2879:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2880:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2881:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2882:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2885:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2886:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2887:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2892:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2893:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2894:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2897:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2898:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2901:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2904:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2905:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2906:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2908:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2910:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2911:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2914:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2915:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2916:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2917:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2918:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2919:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2924:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2925:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2926:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2927:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2930:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2931:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2934:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2935:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2936:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2937:  (0) v  (1) vm {*cmpisf}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2943:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2944:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2945:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2946:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2947:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2952:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2953:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2956:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2957:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2958:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2960:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2961:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2962:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2963:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2966:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2968:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2969:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2970:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2971:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2974:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2975:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2976:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2977:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2978:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2979
	 Choosing alt 0 in insn 2979:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2980:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2981:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2982:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2983:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2984:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2985:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2986:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2987:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2988:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2989:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2990
	 Choosing alt 0 in insn 2990:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2991:  (0) r  (1) r  (2) le {*adddi_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2992:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2993:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2994:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2995:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2996:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3002:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3008:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3009:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3010:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3011:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3014:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3015:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3016:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3017:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3018:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3019:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3020:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3021:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3022:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3023:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 3024:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2259 from oldreg=1952, assigning class DIREG to r2259
 3024: {r1954:DI=0;r2259:DI=r1954:DI<<0x3+r2259:DI;[r2259:DI]=0;use r1953:DI;use r1954:DI;}
      REG_UNUSED r1954:DI
    Inserting insn reload before:
 4501: r2259:DI=r1952:DI
    Inserting insn reload after:
 4502: r1952:DI=r2259:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3025:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3026:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3027:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3028:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3029:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3030:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3031:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3032:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3033:  (0) =r  (1) g {*movsi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3034:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3035:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3036:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3037:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3038:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3039:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3042:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3043:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3044:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3049:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3050:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3051:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3054:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3055:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3058:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3061:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3062:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3063:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3065:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3067:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3068:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3071:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3072:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3073:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3074:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3075:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3076:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3081:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3082:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3083:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3084:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3087:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3088:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3091:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3092:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3093:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3094:  (0) v  (1) vm {*cmpisf}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3100:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3101:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3102:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3103:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3104:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3109:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3110:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3114:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3115:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3117:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3118:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3119:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3120:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3123:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3125:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3126:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3127:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3128:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3131:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3132:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3133:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3134:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3135:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3136
	 Choosing alt 0 in insn 3136:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3137:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3138:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3139:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3140:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3141:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3142:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3143:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3144:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3145:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3146:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3147
	 Choosing alt 0 in insn 3147:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3148:  (0) r  (1) r  (2) le {*adddi_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3149:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3150:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3151:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3152:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3153:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3159:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3165:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3166:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3167:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3168:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3171:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3172:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3173:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3174:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3175:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3176:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3177:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3178:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3179:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3180:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 3181:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2260 from oldreg=1991, assigning class DIREG to r2260
 3181: {r1993:DI=0;r2260:DI=r1993:DI<<0x3+r2260:DI;[r2260:DI]=0;use r1992:DI;use r1993:DI;}
      REG_UNUSED r1993:DI
    Inserting insn reload before:
 4503: r2260:DI=r1991:DI
    Inserting insn reload after:
 4504: r1991:DI=r2260:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3182:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3183:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3184:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3185:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3186:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3187:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3188:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3189:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3190:  (0) =r  (1) g {*movsi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3191:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3192:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3193:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3194:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3195:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3196:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3199:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3200:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3201:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3206:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3207:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3208:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3211:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3212:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3215:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3218:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3219:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3220:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3222:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3224:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3225:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3228:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3229:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3230:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3231:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3232:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3233:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3238:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3239:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3240:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3241:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3244:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3245:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3248:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3249:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3250:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3251:  (0) v  (1) vm {*cmpisf}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3257:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3258:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3259:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3260:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3261:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3266:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3267:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3270:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3271:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3272:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3274:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3275:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3276:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3277:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3280:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3282:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3283:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3284:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3285:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3288:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3289:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3290:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3291:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3292:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3293
	 Choosing alt 0 in insn 3293:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3294:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3295:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3296:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3297:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3298:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3299:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3300:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3301:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3302:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3303
	 Choosing alt 0 in insn 3303:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3304:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3305:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3306:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3307:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3308:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3314:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3320:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3321:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3322:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3323:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3326:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3327:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3328:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3329:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3330:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3331:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3332:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3333:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3334:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3335:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 3336:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2261 from oldreg=2029, assigning class DIREG to r2261
 3336: {r2031:DI=0;r2261:DI=r2031:DI<<0x3+r2261:DI;[r2261:DI]=0;use r2030:DI;use r2031:DI;}
      REG_UNUSED r2031:DI
    Inserting insn reload before:
 4505: r2261:DI=r2029:DI
    Inserting insn reload after:
 4506: r2029:DI=r2261:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3337:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3338:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3339:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3340:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3341:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3342:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3343:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3344:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3345:  (0) =r  (1) g {*movsi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3346:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3347:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3348:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3349:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3350:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3351:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3354:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3355:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3356:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3361:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3362:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3363:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3366:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3367:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3370:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3373:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3374:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3375:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3377:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3379:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3380:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3383:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3384:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3385:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3386:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3387:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3388:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3393:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3394:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3395:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3396:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3399:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3400:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3403:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3404:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3405:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3406:  (0) v  (1) vm {*cmpisf}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3412:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3413:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3414:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3415:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3416:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3421:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3422:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3425:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3426:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3427:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3429:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3430:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3431:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3432:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3435:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3437:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3438:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3439:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3440:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3443:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3444:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3445:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3446:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3447:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3448
	 Choosing alt 0 in insn 3448:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3449:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3450:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3451:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3452:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3453:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3454:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3455:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3456:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3457:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3458
	 Choosing alt 0 in insn 3458:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3459:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3460:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3461:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3462:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3463:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3469:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3475:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3476:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3477:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3478:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3481:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3482:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3483:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3484:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3485:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3486:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3487:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3488:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3489:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3490:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 3491:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2262 from oldreg=2067, assigning class DIREG to r2262
 3491: {r2069:DI=0;r2262:DI=r2069:DI<<0x3+r2262:DI;[r2262:DI]=0;use r2068:DI;use r2069:DI;}
      REG_UNUSED r2069:DI
    Inserting insn reload before:
 4507: r2262:DI=r2067:DI
    Inserting insn reload after:
 4508: r2067:DI=r2262:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3492:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3493:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3494:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3495:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3496:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3497:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3498:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3499:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3500:  (0) =r  (1) g {*movsi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3501:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3502:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3503:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3504:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3505:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3506:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3509:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3510:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3511:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3516:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3517:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3518:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3521:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3522:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3525:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3528:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3529:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3530:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3532:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3534:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3535:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3538:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3539:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3540:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3541:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3542:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3543:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3548:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3549:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3550:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3551:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3554:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3555:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3558:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3559:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3560:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3562:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3563:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3564:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3565:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3568:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3570:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3571:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3572:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3573:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3576:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3577:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3578:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3579:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3580:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3581
	 Choosing alt 0 in insn 3581:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3582:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3583:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3584:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3585:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3586:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3592:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3593:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3594:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3595:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3596:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3597
	 Choosing alt 0 in insn 3597:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3598:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3599:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3600:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3601:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3602:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3603:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3604:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3605:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3606:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3607
	 Choosing alt 0 in insn 3607:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3608:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3609:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3610:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3611:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3612:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3613:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3618:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3619:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3622:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3623:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3624:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3625:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3626:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3627
	 Choosing alt 0 in insn 3627:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3628:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3629:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3630:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3631:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3632:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3633:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3634:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3635:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3636
	 Choosing alt 0 in insn 3636:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3637:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3638:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3639:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3640:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3641
	 Choosing alt 1 in insn 3641:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3642:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3643:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3644:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3645:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3646:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3647
	 Choosing alt 0 in insn 3647:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3648:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3649:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3650:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3651:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3652:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3658:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3664:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3665:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3666:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3667:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3670:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3671:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3672:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3673:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3674:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3675:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3676:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3677:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3678:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3679:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 3680:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2263 from oldreg=2116, assigning class DIREG to r2263
 3680: {r2118:DI=0;r2263:DI=r2118:DI<<0x3+r2263:DI;[r2263:DI]=0;use r2117:DI;use r2118:DI;}
      REG_UNUSED r2118:DI
    Inserting insn reload before:
 4509: r2263:DI=r2116:DI
    Inserting insn reload after:
 4510: r2116:DI=r2263:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3681:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3682:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3683:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3684:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3685:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3687:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3689:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3690:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3693:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3694:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3695:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3696:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3697:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3698:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3703:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3704:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3705:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3706:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3709:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3710:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3713:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3714:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3715:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3717:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3718:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3719:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3720:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3723:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3725:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3726:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3727:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3728:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3731:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3732:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3733:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3734:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3735:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3736
	 Choosing alt 0 in insn 3736:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3737:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3738:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3739:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3740:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3741:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3742:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3748:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3749:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3750:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3751:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3752:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3753
	 Choosing alt 0 in insn 3753:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3754:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3755:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3756:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3757:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3758:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3759:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3760:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3761:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3762:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3763:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3764:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3765:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3766:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3767:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3768
	 Choosing alt 0 in insn 3768:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3769:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3770:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3771:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3772:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3773:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3774:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3775:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3776
	 Choosing alt 1 in insn 3776:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3777:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3778:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3779:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3780:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3781:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3782:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3783:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3784:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3785
	 Choosing alt 0 in insn 3785:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3786:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3787:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3788:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3789:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3790:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3791:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3796:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3797:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3800:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3801:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3802:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3803:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3804:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3805
	 Choosing alt 0 in insn 3805:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3806:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3807:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3808:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3809:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3810:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3811:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3812:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3813:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3814
	 Choosing alt 0 in insn 3814:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3815:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3816:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3817:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3818:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3819
	 Choosing alt 1 in insn 3819:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3820:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3821:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3822:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3823:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3824:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3825
	 Choosing alt 0 in insn 3825:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3826:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3827:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3828:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3829:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3830:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3836:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3842:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3843:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3844:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3845:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3848:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3849:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3850:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3851:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3852:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3853:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3854:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3855:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3856:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3857:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 3858:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2264 from oldreg=2165, assigning class DIREG to r2264
 3858: {r2167:DI=0;r2264:DI=r2167:DI<<0x3+r2264:DI;[r2264:DI]=0;use r2166:DI;use r2167:DI;}
      REG_UNUSED r2167:DI
    Inserting insn reload before:
 4511: r2264:DI=r2165:DI
    Inserting insn reload after:
 4512: r2165:DI=r2264:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3859:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3860:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3861:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3862:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3863:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3865:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3867:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3868:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3871:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3872:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3873:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3874:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3875:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3876:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3881:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3882:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3883:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3884:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3887:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3888:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3891:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3892:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3893:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3895:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3896:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3897:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3898:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3901:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3903:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3904:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3905:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3906:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3909:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3910:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3911:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3912:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3913:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3914
	 Choosing alt 0 in insn 3914:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3915:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3916:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3917:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3918:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3919:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3925:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3926:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3927:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3928:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3929:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3930
	 Choosing alt 0 in insn 3930:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3931:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3932:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3933:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3934:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3935:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3936:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3937:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3938:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3939:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3940
	 Choosing alt 0 in insn 3940:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3941:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3942:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3943:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3944:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3945:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3946:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3951:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3952:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3955:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3956:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3957:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3958:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3959:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3960
	 Choosing alt 0 in insn 3960:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3961:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3962:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3963:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3964:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3965:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3966:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3967:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3968:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3969
	 Choosing alt 0 in insn 3969:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3970:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3971:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3972:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3973:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3974
	 Choosing alt 1 in insn 3974:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3975:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3976:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3977:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3978:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3979:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3980
	 Choosing alt 0 in insn 3980:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3981:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3982:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3983:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3984:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3985:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3991:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3997:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3998:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3999:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4000:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4003:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4004:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4005:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4006:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4007:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4008:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4009:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4010:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4011:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4012:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 4013:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2265 from oldreg=2204, assigning class DIREG to r2265
 4013: {r2206:DI=0;r2265:DI=r2206:DI<<0x3+r2265:DI;[r2265:DI]=0;use r2205:DI;use r2206:DI;}
      REG_UNUSED r2206:DI
    Inserting insn reload before:
 4513: r2265:DI=r2204:DI
    Inserting insn reload after:
 4514: r2204:DI=r2265:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4014:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4015:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4016:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4017:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4018:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4020:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4022:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4023:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4026:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4027:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4028:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4029:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4030:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4031:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4036:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4037:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4038:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4039:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4042:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4043:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4046:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4047:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4048:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4049:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4052:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4053:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4054:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4055:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4056:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4057:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4058:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4059:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4060:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4061:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 4062:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2266 from oldreg=2217, assigning class DIREG to r2266
 4062: {r2219:DI=0;r2266:DI=r2219:DI<<0x3+r2266:DI;[r2266:DI]=0;use r2218:DI;use r2219:DI;}
      REG_UNUSED r2219:DI
    Inserting insn reload before:
 4515: r2266:DI=r2217:DI
    Inserting insn reload after:
 4516: r2217:DI=r2266:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4063:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4064:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4065:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4066:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4067:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4069:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4071:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4072:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4075:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4076:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4077:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4078:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4079:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4080:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4085:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4086:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4087:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4088:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4092:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4094:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4095:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4097:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4
EBB 5 6
EBB 7 8
EBB 309
EBB 9
EBB 308
EBB 10
EBB 11 12
EBB 13 14
EBB 311
EBB 15
EBB 310
EBB 16
EBB 17 18
EBB 19 20
EBB 21 22
EBB 23 24 25
EBB 26 27
EBB 28 29
EBB 313
EBB 30
EBB 312
EBB 31 32
EBB 33 34
EBB 35 36
EBB 315
EBB 37
EBB 314
EBB 38
EBB 39 40
EBB 41 42
EBB 43 44
EBB 45 46
EBB 47 48
EBB 49 50
EBB 51 52 53
EBB 54 55
EBB 56
EBB 317
EBB 57
EBB 316
EBB 58
EBB 59 60
EBB 61 62
EBB 63 64 65
EBB 66
EBB 67
EBB 319
EBB 68
EBB 318
EBB 69 70
EBB 71
EBB 72 73
EBB 74
EBB 75 76
EBB 77 78
EBB 79 80 81
EBB 82
EBB 83
EBB 321
EBB 84
EBB 320
EBB 85 86
EBB 87
EBB 88 89
EBB 90
EBB 91 92
EBB 93 94
EBB 95 96 97
EBB 98
EBB 99
EBB 323
EBB 100
EBB 322
EBB 101 102
EBB 103
EBB 104 105
EBB 106
EBB 107 108
EBB 109
EBB 110 111
EBB 112 113
EBB 325
EBB 114
EBB 324
EBB 115
EBB 116 117
EBB 118 119
EBB 120 121 122 123 124
EBB 125
EBB 126
EBB 328
EBB 127 128 129
EBB 130 131 132
EBB 133
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=2267 from oldreg=521, assigning class SSE_REGS to inheritance r2267
    Original reg change 521->2267 (bb133):
 1821: r2267:SF=xmm0:SF
      REG_DEAD xmm0:SF
    Add original<-inheritance after:
 4517: r521:SF=r2267:SF

    Inheritance reuse change 521->2267 (bb133):
 4477: r2247:SF=r2267:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=2268 from oldreg=510, assigning class SSE_REGS to inheritance r2268
    Original reg change 510->2268 (bb133):
 4476: r2268:SF=r2246:SF
    Add original<-inheritance after:
 4518: r510:SF=r2268:SF

    Inheritance reuse change 510->2268 (bb133):
 4479: r2248:SF=r2268:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  4517: r521:SF=r2267:SF
deleting insn with uid = 4517.
	    Removing dead insn:
  4518: r510:SF=r2268:SF
deleting insn with uid = 4518.
EBB 134
EBB 327
EBB 135
EBB 326
EBB 136 137
EBB 138 139
EBB 140 141 142
EBB 143
EBB 144 145
EBB 146 147
EBB 330
EBB 148
EBB 329
EBB 149
EBB 150 151
EBB 152 153
EBB 154 155 156 157 158
EBB 159
EBB 160
EBB 333
EBB 161 162 163
EBB 164 165 166
EBB 167
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=2269 from oldreg=735, assigning class SSE_REGS to inheritance r2269
    Original reg change 735->2269 (bb167):
 2395: r2269:SF=xmm0:SF
      REG_DEAD xmm0:SF
    Add original<-inheritance after:
 4519: r735:SF=r2269:SF

    Inheritance reuse change 735->2269 (bb167):
 4487: r2252:SF=r2269:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=2270 from oldreg=724, assigning class SSE_REGS to inheritance r2270
    Original reg change 724->2270 (bb167):
 4486: r2270:SF=r2251:SF
    Add original<-inheritance after:
 4520: r724:SF=r2270:SF

    Inheritance reuse change 724->2270 (bb167):
 4489: r2253:SF=r2270:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  4519: r735:SF=r2269:SF
deleting insn with uid = 4519.
	    Removing dead insn:
  4520: r724:SF=r2270:SF
deleting insn with uid = 4520.
EBB 168
EBB 332
EBB 169
EBB 331
EBB 170 171
EBB 172 173
EBB 174 175
EBB 176 177 178
EBB 179
EBB 180
EBB 181 182
EBB 183 184
EBB 335
EBB 185
EBB 334
EBB 186 187
EBB 188
EBB 189 190
EBB 191
EBB 192 193 194
EBB 195
EBB 196
EBB 197 198
EBB 199 200
EBB 337
EBB 201
EBB 336
EBB 202 203
EBB 204
EBB 205 206
EBB 207
EBB 208 209 210
EBB 211
EBB 212
EBB 213 214
EBB 215 216
EBB 339
EBB 217
EBB 338
EBB 218 219
EBB 220
EBB 221 222
EBB 223
EBB 224 225 226
EBB 227
EBB 228
EBB 229 230
EBB 231 232
EBB 341
EBB 233
EBB 340
EBB 234 235
EBB 236
EBB 237 238
EBB 239
EBB 240 241 242
EBB 243
EBB 244
EBB 245 246
EBB 247 248
EBB 343
EBB 249
EBB 342
EBB 250 251
EBB 252
EBB 253 254
EBB 255
EBB 256 257 258
EBB 259
EBB 260
EBB 261 262
EBB 263 264
EBB 345
EBB 265
EBB 344
EBB 266 267
EBB 268
EBB 269 270
EBB 271
EBB 272 273
EBB 274 275
EBB 276 277 278
EBB 279
EBB 280
EBB 347
EBB 281
EBB 346
EBB 282
EBB 283 284
EBB 285 286
EBB 287 288 289
EBB 290
EBB 291
EBB 349
EBB 292
EBB 348
EBB 293
EBB 294 295
EBB 296 297
EBB 298 299 300
EBB 301
EBB 302
EBB 351
EBB 303
EBB 350
EBB 304
EBB 305 306
EBB 352
EBB 307

********** Pseudo live ranges #1: **********

  BB 307
   Insn 4158: point = 0, n_alt = -1
   Insn 4097: point = 0, n_alt = 0
   Insn 4096: point = 0, n_alt = -2
   Insn 4095: point = 1, n_alt = 3
   Insn 4094: point = 2, n_alt = 0
   Insn 4093: point = 2, n_alt = -2
   Insn 4092: point = 3, n_alt = 3
  BB 352
   Insn 4442: point = 4, n_alt = -1
  BB 306
   Insn 4088: point = 4, n_alt = 0
   Insn 4087: point = 4, n_alt = 3
   Insn 4086: point = 4, n_alt = 2
   Insn 4085: point = 4, n_alt = 2
   Insn 4084: point = 4, n_alt = -2
   Insn 4083: point = 5, n_alt = -2
   Insn 4082: point = 6, n_alt = -2
   Insn 4081: point = 7, n_alt = -2
   Insn 4080: point = 8, n_alt = 3
   Insn 4079: point = 9, n_alt = 3
   Insn 4078: point = 10, n_alt = 3
   Insn 4077: point = 11, n_alt = 3
   Insn 4076: point = 13, n_alt = 0
   Insn 4075: point = 15, n_alt = 0
   Insn 4074: point = 17, n_alt = -2
   Insn 4073: point = 19, n_alt = -2
   Insn 4072: point = 21, n_alt = 0
   Insn 4071: point = 23, n_alt = 0
   Insn 4070: point = 24, n_alt = -2
   Insn 4069: point = 26, n_alt = 0
   Insn 4068: point = 28, n_alt = -2
   Insn 4067: point = 29, n_alt = 3
   Insn 4066: point = 31, n_alt = 0
   Insn 4065: point = 33, n_alt = 0
   Insn 4064: point = 34, n_alt = 0
   Insn 4063: point = 35, n_alt = 1
   Insn 4516: point = 36, n_alt = -2
	Hard reg 1 is preferable by r2266 with profit 1000
   Insn 4062: point = 38, n_alt = 0
   Insn 4515: point = 39, n_alt = -2
	Hard reg 1 is preferable by r2266 with profit 2000
   Insn 4061: point = 41, n_alt = 2
   Insn 4060: point = 42, n_alt = 2
   Insn 4059: point = 43, n_alt = 2
   Insn 4058: point = 44, n_alt = 0
   Insn 4057: point = 44, n_alt = 0
   Insn 4056: point = 44, n_alt = 3
   Insn 4055: point = 44, n_alt = 2
   Insn 4054: point = 44, n_alt = 2
   Insn 4053: point = 44, n_alt = 4
   Insn 4052: point = 44, n_alt = 4
   Insn 4051: point = 44, n_alt = -2
   Insn 4050: point = 45, n_alt = -2
   Insn 4049: point = 46, n_alt = 0
   Insn 4048: point = 46, n_alt = 0
   Insn 4047: point = 46, n_alt = 3
   Insn 4046: point = 47, n_alt = 3
  BB 305
   Insn 4044: point = 48, n_alt = -1
   Insn 4043: point = 48, n_alt = 0
   Insn 4042: point = 49, n_alt = 0
  BB 304
   Insn 4039: point = 50, n_alt = 0
   Insn 4038: point = 50, n_alt = 3
   Insn 4037: point = 50, n_alt = 2
   Insn 4036: point = 50, n_alt = 2
   Insn 4035: point = 50, n_alt = -2
   Insn 4034: point = 51, n_alt = -2
   Insn 4033: point = 52, n_alt = -2
   Insn 4032: point = 53, n_alt = -2
   Insn 4031: point = 54, n_alt = 3
   Insn 4030: point = 55, n_alt = 3
   Insn 4029: point = 56, n_alt = 3
   Insn 4028: point = 57, n_alt = 3
   Insn 4027: point = 59, n_alt = 0
   Insn 4026: point = 61, n_alt = 0
   Insn 4025: point = 63, n_alt = -2
   Insn 4024: point = 65, n_alt = -2
   Insn 4023: point = 67, n_alt = 0
   Insn 4022: point = 69, n_alt = 0
   Insn 4021: point = 70, n_alt = -2
   Insn 4020: point = 72, n_alt = 0
   Insn 4019: point = 74, n_alt = -2
   Insn 4018: point = 75, n_alt = 3
   Insn 4017: point = 77, n_alt = 0
   Insn 4016: point = 79, n_alt = 0
   Insn 4015: point = 80, n_alt = 0
   Insn 4014: point = 81, n_alt = 1
   Insn 4514: point = 82, n_alt = -2
	Hard reg 1 is preferable by r2265 with profit 1000
   Insn 4013: point = 84, n_alt = 0
   Insn 4513: point = 85, n_alt = -2
	Hard reg 1 is preferable by r2265 with profit 2000
   Insn 4012: point = 87, n_alt = 2
   Insn 4011: point = 88, n_alt = 2
   Insn 4010: point = 89, n_alt = 2
   Insn 4009: point = 90, n_alt = 0
   Insn 4008: point = 90, n_alt = 0
   Insn 4007: point = 90, n_alt = 3
   Insn 4006: point = 90, n_alt = 2
   Insn 4005: point = 90, n_alt = 2
   Insn 4004: point = 90, n_alt = 4
   Insn 4003: point = 90, n_alt = 4
   Insn 4002: point = 90, n_alt = -2
   Insn 4001: point = 91, n_alt = -2
   Insn 4000: point = 92, n_alt = 0
   Insn 3999: point = 92, n_alt = 0
   Insn 3998: point = 92, n_alt = 3
   Insn 3997: point = 93, n_alt = 3
  BB 350
   Insn 4434: point = 94, n_alt = -1
  BB 296
   Insn 3899: point = 94, n_alt = -1
   Insn 3898: point = 94, n_alt = 0
   Insn 3897: point = 95, n_alt = 0
   Insn 3896: point = 97, n_alt = 0
   Insn 3895: point = 98, n_alt = 0
  BB 303
   Insn 4304: point = 99, n_alt = -1
   Insn 3991: point = 99, n_alt = 1
  BB 351
   Insn 4437: point = 100, n_alt = -1
  BB 298
   Insn 3907: point = 101, n_alt = -1
   Insn 3906: point = 101, n_alt = 0
   Insn 3905: point = 102, n_alt = 0
   Insn 3904: point = 104, n_alt = 0
   Insn 3903: point = 105, n_alt = 0
  BB 302
   Insn 4302: point = 106, n_alt = -1
   Insn 3985: point = 106, n_alt = 1
   Insn 3984: point = 106, n_alt = 8
   Insn 3983: point = 107, n_alt = 4
   Insn 3982: point = 108, n_alt = 1
   Insn 3981: point = 110, n_alt = 3
   Insn 3980: point = 112, n_alt = 0
   Insn 3979: point = 114, n_alt = 1
   Insn 3978: point = 116, n_alt = 0
   Insn 3977: point = 117, n_alt = 0
   Insn 3976: point = 119, n_alt = 1
   Insn 3975: point = 121, n_alt = 0
   Insn 3974: point = 122, n_alt = 1
   Insn 3973: point = 124, n_alt = 7
   Insn 3972: point = 126, n_alt = 0
   Insn 3971: point = 128, n_alt = 4
   Insn 3970: point = 129, n_alt = 3
   Insn 3969: point = 131, n_alt = 0
   Insn 3968: point = 133, n_alt = 1
   Insn 3967: point = 135, n_alt = 0
   Insn 3966: point = 136, n_alt = 0
   Insn 3965: point = 138, n_alt = 1
   Insn 3964: point = 140, n_alt = 0
   Insn 3963: point = 141, n_alt = 7
   Insn 3962: point = 143, n_alt = 4
   Insn 3961: point = 144, n_alt = 3
   Insn 3960: point = 146, n_alt = 0
   Insn 3959: point = 148, n_alt = 1
   Insn 3958: point = 150, n_alt = 0
   Insn 3957: point = 151, n_alt = 0
   Insn 3956: point = 153, n_alt = 1
   Insn 3955: point = 155, n_alt = 0
  BB 300
   Insn 4300: point = 157, n_alt = -1
   Insn 3946: point = 157, n_alt = 8
   Insn 3945: point = 158, n_alt = 2
   Insn 3944: point = 160, n_alt = 7
   Insn 3943: point = 162, n_alt = 0
   Insn 3942: point = 164, n_alt = 4
   Insn 3941: point = 165, n_alt = 3
   Insn 3940: point = 167, n_alt = 0
   Insn 3939: point = 169, n_alt = 1
   Insn 3938: point = 171, n_alt = 0
   Insn 3937: point = 172, n_alt = 0
   Insn 3936: point = 174, n_alt = 1
   Insn 3935: point = 176, n_alt = 0
   Insn 3934: point = 177, n_alt = 7
   Insn 3933: point = 179, n_alt = 0
   Insn 3932: point = 181, n_alt = 4
   Insn 3931: point = 182, n_alt = 3
   Insn 3930: point = 184, n_alt = 0
   Insn 3929: point = 186, n_alt = 1
   Insn 3928: point = 188, n_alt = 0
   Insn 3927: point = 189, n_alt = 0
   Insn 3926: point = 191, n_alt = 1
   Insn 3925: point = 193, n_alt = 0
  BB 301
   Insn 3952: point = 195, n_alt = 8
   Insn 3951: point = 196, n_alt = 7
  BB 299
   Insn 3920: point = 198, n_alt = -1
   Insn 3919: point = 198, n_alt = 1
   Insn 3918: point = 199, n_alt = 7
   Insn 3917: point = 201, n_alt = 0
   Insn 3916: point = 203, n_alt = 4
   Insn 3915: point = 204, n_alt = 3
   Insn 3914: point = 206, n_alt = 0
   Insn 3913: point = 208, n_alt = 1
   Insn 3912: point = 210, n_alt = 0
   Insn 3911: point = 211, n_alt = 0
   Insn 3910: point = 213, n_alt = 1
   Insn 3909: point = 215, n_alt = 0
  BB 297
   Insn 3901: point = 217, n_alt = 1
  BB 295
   Insn 3893: point = 218, n_alt = 1
   Insn 3892: point = 219, n_alt = 0
   Insn 3891: point = 220, n_alt = 0
  BB 294
   Insn 3889: point = 221, n_alt = -1
   Insn 3888: point = 221, n_alt = 0
   Insn 3887: point = 222, n_alt = 0
  BB 293
   Insn 3884: point = 223, n_alt = 0
   Insn 3883: point = 223, n_alt = 3
   Insn 3882: point = 223, n_alt = 2
   Insn 3881: point = 223, n_alt = 2
   Insn 3880: point = 223, n_alt = -2
   Insn 3879: point = 224, n_alt = -2
   Insn 3878: point = 225, n_alt = -2
   Insn 3877: point = 226, n_alt = -2
   Insn 3876: point = 227, n_alt = 3
   Insn 3875: point = 228, n_alt = 3
   Insn 3874: point = 229, n_alt = 3
   Insn 3873: point = 230, n_alt = 3
   Insn 3872: point = 232, n_alt = 0
   Insn 3871: point = 234, n_alt = 0
   Insn 3870: point = 236, n_alt = -2
   Insn 3869: point = 238, n_alt = -2
   Insn 3868: point = 240, n_alt = 0
   Insn 3867: point = 242, n_alt = 0
   Insn 3866: point = 243, n_alt = -2
   Insn 3865: point = 245, n_alt = 0
   Insn 3864: point = 247, n_alt = -2
   Insn 3863: point = 248, n_alt = 3
   Insn 3862: point = 250, n_alt = 0
   Insn 3861: point = 252, n_alt = 0
   Insn 3860: point = 253, n_alt = 0
   Insn 3859: point = 254, n_alt = 1
   Insn 4512: point = 255, n_alt = -2
	Hard reg 1 is preferable by r2264 with profit 1000
   Insn 3858: point = 257, n_alt = 0
   Insn 4511: point = 258, n_alt = -2
	Hard reg 1 is preferable by r2264 with profit 2000
   Insn 3857: point = 260, n_alt = 2
   Insn 3856: point = 261, n_alt = 2
   Insn 3855: point = 262, n_alt = 2
   Insn 3854: point = 263, n_alt = 0
   Insn 3853: point = 263, n_alt = 0
   Insn 3852: point = 263, n_alt = 3
   Insn 3851: point = 263, n_alt = 2
   Insn 3850: point = 263, n_alt = 2
   Insn 3849: point = 263, n_alt = 4
   Insn 3848: point = 263, n_alt = 4
   Insn 3847: point = 263, n_alt = -2
   Insn 3846: point = 264, n_alt = -2
   Insn 3845: point = 265, n_alt = 0
   Insn 3844: point = 265, n_alt = 0
   Insn 3843: point = 265, n_alt = 3
   Insn 3842: point = 266, n_alt = 3
  BB 348
   Insn 4428: point = 267, n_alt = -1
  BB 285
   Insn 3721: point = 267, n_alt = -1
   Insn 3720: point = 267, n_alt = 0
   Insn 3719: point = 268, n_alt = 0
   Insn 3718: point = 270, n_alt = 0
   Insn 3717: point = 271, n_alt = 0
  BB 292
   Insn 4297: point = 272, n_alt = -1
   Insn 3836: point = 272, n_alt = 1
  BB 349
   Insn 4431: point = 273, n_alt = -1
  BB 287
   Insn 3729: point = 274, n_alt = -1
   Insn 3728: point = 274, n_alt = 0
   Insn 3727: point = 275, n_alt = 0
   Insn 3726: point = 277, n_alt = 0
   Insn 3725: point = 278, n_alt = 0
  BB 291
   Insn 4295: point = 279, n_alt = -1
   Insn 3830: point = 279, n_alt = 1
   Insn 3829: point = 279, n_alt = 8
   Insn 3828: point = 280, n_alt = 4
   Insn 3827: point = 281, n_alt = 1
   Insn 3826: point = 283, n_alt = 3
   Insn 3825: point = 285, n_alt = 0
   Insn 3824: point = 287, n_alt = 1
   Insn 3823: point = 289, n_alt = 0
   Insn 3822: point = 290, n_alt = 0
   Insn 3821: point = 292, n_alt = 1
   Insn 3820: point = 294, n_alt = 0
   Insn 3819: point = 295, n_alt = 1
   Insn 3818: point = 297, n_alt = 7
   Insn 3817: point = 299, n_alt = 0
   Insn 3816: point = 301, n_alt = 4
   Insn 3815: point = 302, n_alt = 3
   Insn 3814: point = 304, n_alt = 0
   Insn 3813: point = 306, n_alt = 1
   Insn 3812: point = 308, n_alt = 0
   Insn 3811: point = 309, n_alt = 0
   Insn 3810: point = 311, n_alt = 1
   Insn 3809: point = 313, n_alt = 0
   Insn 3808: point = 314, n_alt = 7
   Insn 3807: point = 316, n_alt = 4
   Insn 3806: point = 317, n_alt = 3
   Insn 3805: point = 319, n_alt = 0
   Insn 3804: point = 321, n_alt = 1
   Insn 3803: point = 323, n_alt = 0
   Insn 3802: point = 324, n_alt = 0
   Insn 3801: point = 326, n_alt = 1
   Insn 3800: point = 328, n_alt = 0
  BB 289
   Insn 4293: point = 330, n_alt = -1
   Insn 3791: point = 330, n_alt = 8
   Insn 3790: point = 331, n_alt = 2
   Insn 3789: point = 333, n_alt = 7
   Insn 3788: point = 335, n_alt = 0
   Insn 3787: point = 337, n_alt = 4
   Insn 3786: point = 338, n_alt = 3
   Insn 3785: point = 340, n_alt = 0
   Insn 3784: point = 342, n_alt = 1
   Insn 3783: point = 344, n_alt = 0
   Insn 3782: point = 345, n_alt = 0
   Insn 3781: point = 347, n_alt = 1
   Insn 3780: point = 349, n_alt = 0
   Insn 3779: point = 350, n_alt = 1
   Insn 3778: point = 352, n_alt = 1
   Insn 3777: point = 354, n_alt = 1
   Insn 3776: point = 356, n_alt = 1
   Insn 3775: point = 358, n_alt = 7
   Insn 3774: point = 359, n_alt = 7
   Insn 3773: point = 360, n_alt = 8
   Insn 3772: point = 361, n_alt = 7
   Insn 3771: point = 363, n_alt = 0
   Insn 3770: point = 365, n_alt = 4
   Insn 3769: point = 366, n_alt = 3
   Insn 3768: point = 368, n_alt = 0
   Insn 3767: point = 370, n_alt = 1
   Insn 3766: point = 372, n_alt = 0
   Insn 3765: point = 373, n_alt = 0
   Insn 3764: point = 375, n_alt = 0
   Insn 3763: point = 377, n_alt = 1
   Insn 3762: point = 379, n_alt = 0
   Insn 3761: point = 380, n_alt = 1
   Insn 3760: point = 382, n_alt = 1
   Insn 3759: point = 384, n_alt = 0
   Insn 3758: point = 385, n_alt = 1
   Insn 3757: point = 386, n_alt = 0
   Insn 3756: point = 388, n_alt = 0
   Insn 3755: point = 390, n_alt = 4
   Insn 3754: point = 391, n_alt = 3
   Insn 3753: point = 393, n_alt = 0
   Insn 3752: point = 395, n_alt = 1
   Insn 3751: point = 397, n_alt = 0
   Insn 3750: point = 398, n_alt = 0
   Insn 3749: point = 400, n_alt = 1
   Insn 3748: point = 402, n_alt = 0
  BB 290
   Insn 3797: point = 404, n_alt = 8
   Insn 3796: point = 405, n_alt = 7
  BB 288
   Insn 3743: point = 407, n_alt = -1
   Insn 3742: point = 407, n_alt = 1
   Insn 3741: point = 408, n_alt = 7
   Insn 3740: point = 409, n_alt = 7
   Insn 3739: point = 411, n_alt = 0
   Insn 3738: point = 413, n_alt = 4
   Insn 3737: point = 414, n_alt = 3
   Insn 3736: point = 416, n_alt = 0
   Insn 3735: point = 418, n_alt = 1
   Insn 3734: point = 420, n_alt = 0
   Insn 3733: point = 421, n_alt = 0
   Insn 3732: point = 423, n_alt = 1
   Insn 3731: point = 425, n_alt = 0
  BB 286
   Insn 3723: point = 427, n_alt = 1
  BB 284
   Insn 3715: point = 428, n_alt = 1
   Insn 3714: point = 429, n_alt = 0
   Insn 3713: point = 430, n_alt = 0
  BB 283
   Insn 3711: point = 431, n_alt = -1
   Insn 3710: point = 431, n_alt = 0
   Insn 3709: point = 432, n_alt = 0
  BB 282
   Insn 3706: point = 433, n_alt = 0
   Insn 3705: point = 433, n_alt = 3
   Insn 3704: point = 433, n_alt = 2
   Insn 3703: point = 433, n_alt = 2
   Insn 3702: point = 433, n_alt = -2
   Insn 3701: point = 434, n_alt = -2
   Insn 3700: point = 435, n_alt = -2
   Insn 3699: point = 436, n_alt = -2
   Insn 3698: point = 437, n_alt = 3
   Insn 3697: point = 438, n_alt = 3
   Insn 3696: point = 439, n_alt = 3
   Insn 3695: point = 440, n_alt = 3
   Insn 3694: point = 442, n_alt = 0
   Insn 3693: point = 444, n_alt = 0
   Insn 3692: point = 446, n_alt = -2
   Insn 3691: point = 448, n_alt = -2
   Insn 3690: point = 450, n_alt = 0
   Insn 3689: point = 452, n_alt = 0
   Insn 3688: point = 453, n_alt = -2
   Insn 3687: point = 455, n_alt = 0
   Insn 3686: point = 457, n_alt = -2
   Insn 3685: point = 458, n_alt = 3
   Insn 3684: point = 460, n_alt = 0
   Insn 3683: point = 462, n_alt = 0
   Insn 3682: point = 463, n_alt = 0
   Insn 3681: point = 464, n_alt = 1
   Insn 4510: point = 465, n_alt = -2
	Hard reg 1 is preferable by r2263 with profit 1000
   Insn 3680: point = 467, n_alt = 0
   Insn 4509: point = 468, n_alt = -2
	Hard reg 1 is preferable by r2263 with profit 2000
   Insn 3679: point = 470, n_alt = 2
   Insn 3678: point = 471, n_alt = 2
   Insn 3677: point = 472, n_alt = 2
   Insn 3676: point = 473, n_alt = 0
   Insn 3675: point = 473, n_alt = 0
   Insn 3674: point = 473, n_alt = 3
   Insn 3673: point = 473, n_alt = 2
   Insn 3672: point = 473, n_alt = 2
   Insn 3671: point = 473, n_alt = 4
   Insn 3670: point = 473, n_alt = 4
   Insn 3669: point = 473, n_alt = -2
   Insn 3668: point = 474, n_alt = -2
   Insn 3667: point = 475, n_alt = 0
   Insn 3666: point = 475, n_alt = 0
   Insn 3665: point = 475, n_alt = 3
   Insn 3664: point = 476, n_alt = 3
  BB 346
   Insn 4422: point = 477, n_alt = -1
  BB 274
   Insn 3566: point = 477, n_alt = -1
   Insn 3565: point = 477, n_alt = 0
   Insn 3564: point = 478, n_alt = 0
   Insn 3563: point = 480, n_alt = 0
   Insn 3562: point = 481, n_alt = 0
  BB 281
   Insn 4290: point = 482, n_alt = -1
   Insn 3658: point = 482, n_alt = 1
  BB 347
   Insn 4425: point = 483, n_alt = -1
  BB 276
   Insn 3574: point = 484, n_alt = -1
   Insn 3573: point = 484, n_alt = 0
   Insn 3572: point = 485, n_alt = 0
   Insn 3571: point = 487, n_alt = 0
   Insn 3570: point = 488, n_alt = 0
  BB 280
   Insn 4288: point = 489, n_alt = -1
   Insn 3652: point = 489, n_alt = 1
   Insn 3651: point = 489, n_alt = 8
   Insn 3650: point = 490, n_alt = 4
   Insn 3649: point = 491, n_alt = 1
   Insn 3648: point = 493, n_alt = 3
   Insn 3647: point = 495, n_alt = 0
   Insn 3646: point = 497, n_alt = 1
   Insn 3645: point = 499, n_alt = 0
   Insn 3644: point = 500, n_alt = 0
   Insn 3643: point = 502, n_alt = 1
   Insn 3642: point = 504, n_alt = 0
   Insn 3641: point = 505, n_alt = 1
   Insn 3640: point = 507, n_alt = 7
   Insn 3639: point = 509, n_alt = 0
   Insn 3638: point = 511, n_alt = 4
   Insn 3637: point = 512, n_alt = 3
   Insn 3636: point = 514, n_alt = 0
   Insn 3635: point = 516, n_alt = 1
   Insn 3634: point = 518, n_alt = 0
   Insn 3633: point = 519, n_alt = 0
   Insn 3632: point = 521, n_alt = 1
   Insn 3631: point = 523, n_alt = 0
   Insn 3630: point = 524, n_alt = 7
   Insn 3629: point = 526, n_alt = 4
   Insn 3628: point = 527, n_alt = 3
   Insn 3627: point = 529, n_alt = 0
   Insn 3626: point = 531, n_alt = 1
   Insn 3625: point = 533, n_alt = 0
   Insn 3624: point = 534, n_alt = 0
   Insn 3623: point = 536, n_alt = 1
   Insn 3622: point = 538, n_alt = 0
  BB 278
   Insn 4286: point = 540, n_alt = -1
   Insn 3613: point = 540, n_alt = 8
   Insn 3612: point = 541, n_alt = 2
   Insn 3611: point = 543, n_alt = 7
   Insn 3610: point = 545, n_alt = 0
   Insn 3609: point = 547, n_alt = 4
   Insn 3608: point = 548, n_alt = 3
   Insn 3607: point = 550, n_alt = 0
   Insn 3606: point = 552, n_alt = 1
   Insn 3605: point = 554, n_alt = 0
   Insn 3604: point = 555, n_alt = 0
   Insn 3603: point = 557, n_alt = 1
   Insn 3602: point = 559, n_alt = 0
   Insn 3601: point = 560, n_alt = 7
   Insn 3600: point = 562, n_alt = 0
   Insn 3599: point = 564, n_alt = 4
   Insn 3598: point = 565, n_alt = 3
   Insn 3597: point = 567, n_alt = 0
   Insn 3596: point = 569, n_alt = 1
   Insn 3595: point = 571, n_alt = 0
   Insn 3594: point = 572, n_alt = 0
   Insn 3593: point = 574, n_alt = 1
   Insn 3592: point = 576, n_alt = 0
  BB 279
   Insn 3619: point = 578, n_alt = 8
   Insn 3618: point = 579, n_alt = 7
  BB 277
   Insn 3587: point = 581, n_alt = -1
   Insn 3586: point = 581, n_alt = 1
   Insn 3585: point = 582, n_alt = 7
   Insn 3584: point = 584, n_alt = 0
   Insn 3583: point = 586, n_alt = 4
   Insn 3582: point = 587, n_alt = 3
   Insn 3581: point = 589, n_alt = 0
   Insn 3580: point = 591, n_alt = 1
   Insn 3579: point = 593, n_alt = 0
   Insn 3578: point = 594, n_alt = 0
   Insn 3577: point = 596, n_alt = 1
   Insn 3576: point = 598, n_alt = 0
  BB 275
   Insn 3568: point = 600, n_alt = 1
  BB 273
   Insn 3560: point = 601, n_alt = 1
   Insn 3559: point = 602, n_alt = 0
   Insn 3558: point = 603, n_alt = 0
  BB 272
   Insn 3556: point = 604, n_alt = -1
   Insn 3555: point = 604, n_alt = 0
   Insn 3554: point = 605, n_alt = 0
  BB 271
   Insn 3551: point = 606, n_alt = 0
   Insn 3550: point = 606, n_alt = 3
   Insn 3549: point = 606, n_alt = 2
   Insn 3548: point = 606, n_alt = 2
   Insn 3547: point = 606, n_alt = -2
   Insn 3546: point = 607, n_alt = -2
   Insn 3545: point = 608, n_alt = -2
   Insn 3544: point = 609, n_alt = -2
   Insn 3543: point = 610, n_alt = 3
   Insn 3542: point = 611, n_alt = 3
   Insn 3541: point = 612, n_alt = 3
   Insn 3540: point = 613, n_alt = 3
   Insn 3539: point = 615, n_alt = 0
   Insn 3538: point = 617, n_alt = 0
   Insn 3537: point = 619, n_alt = -2
   Insn 3536: point = 621, n_alt = -2
   Insn 3535: point = 623, n_alt = 0
   Insn 3534: point = 625, n_alt = 0
   Insn 3533: point = 626, n_alt = -2
   Insn 3532: point = 628, n_alt = 0
   Insn 3531: point = 630, n_alt = -2
   Insn 3530: point = 631, n_alt = 3
   Insn 3529: point = 633, n_alt = 0
   Insn 3528: point = 635, n_alt = 0
  BB 270
   Insn 3525: point = 636, n_alt = 1
  BB 269
   Insn 3523: point = 636, n_alt = -1
   Insn 3522: point = 636, n_alt = 0
   Insn 3521: point = 637, n_alt = 0
  BB 267
   Insn 4283: point = 638, n_alt = -1
   Insn 3511: point = 638, n_alt = 1
   Insn 3510: point = 639, n_alt = 1
   Insn 3509: point = 641, n_alt = 0
  BB 268
   Insn 3518: point = 642, n_alt = 1
   Insn 3517: point = 643, n_alt = 1
   Insn 3516: point = 645, n_alt = 0
  BB 266
   Insn 3507: point = 646, n_alt = -1
   Insn 3506: point = 646, n_alt = 1
   Insn 3505: point = 646, n_alt = 1
   Insn 3504: point = 646, n_alt = 1
   Insn 3503: point = 647, n_alt = 0
   Insn 3502: point = 648, n_alt = 1
   Insn 3501: point = 649, n_alt = 0
   Insn 3500: point = 651, n_alt = 0
   Insn 3499: point = 652, n_alt = 1
   Insn 3498: point = 653, n_alt = 0
   Insn 3497: point = 655, n_alt = 7
   Insn 3496: point = 657, n_alt = 4
   Insn 3495: point = 658, n_alt = 1
   Insn 3494: point = 659, n_alt = 0
   Insn 3493: point = 660, n_alt = 0
   Insn 3492: point = 661, n_alt = 1
   Insn 4508: point = 662, n_alt = -2
	Hard reg 1 is preferable by r2262 with profit 1000
   Insn 3491: point = 664, n_alt = 0
   Insn 4507: point = 665, n_alt = -2
	Hard reg 1 is preferable by r2262 with profit 2000
   Insn 3490: point = 667, n_alt = 2
   Insn 3489: point = 668, n_alt = 2
   Insn 3488: point = 669, n_alt = 2
   Insn 3487: point = 670, n_alt = 0
   Insn 3486: point = 670, n_alt = 0
   Insn 3485: point = 670, n_alt = 3
   Insn 3484: point = 670, n_alt = 2
   Insn 3483: point = 670, n_alt = 2
   Insn 3482: point = 670, n_alt = 4
   Insn 3481: point = 670, n_alt = 4
   Insn 3480: point = 670, n_alt = -2
   Insn 3479: point = 671, n_alt = -2
   Insn 3478: point = 672, n_alt = 0
   Insn 3477: point = 672, n_alt = 0
   Insn 3476: point = 672, n_alt = 3
   Insn 3475: point = 673, n_alt = 3
  BB 344
   Insn 4416: point = 674, n_alt = -1
  BB 261
   Insn 3433: point = 674, n_alt = -1
   Insn 3432: point = 674, n_alt = 0
   Insn 3431: point = 675, n_alt = 0
   Insn 3430: point = 677, n_alt = 0
   Insn 3429: point = 678, n_alt = 0
  BB 265
   Insn 4281: point = 679, n_alt = -1
   Insn 3469: point = 679, n_alt = 1
  BB 345
   Insn 4419: point = 680, n_alt = -1
  BB 263
   Insn 3441: point = 681, n_alt = -1
   Insn 3440: point = 681, n_alt = 0
   Insn 3439: point = 682, n_alt = 0
   Insn 3438: point = 684, n_alt = 0
   Insn 3437: point = 685, n_alt = 0
  BB 264
   Insn 4279: point = 686, n_alt = -1
   Insn 3463: point = 686, n_alt = 1
   Insn 3462: point = 686, n_alt = 8
   Insn 3461: point = 687, n_alt = 4
   Insn 3460: point = 688, n_alt = 1
   Insn 3459: point = 690, n_alt = 3
   Insn 3458: point = 692, n_alt = 0
   Insn 3457: point = 694, n_alt = 1
   Insn 3456: point = 696, n_alt = 0
   Insn 3455: point = 697, n_alt = 0
   Insn 3454: point = 699, n_alt = 1
   Insn 3453: point = 701, n_alt = 0
   Insn 3452: point = 702, n_alt = 7
   Insn 3451: point = 704, n_alt = 0
   Insn 3450: point = 706, n_alt = 4
   Insn 3449: point = 707, n_alt = 3
   Insn 3448: point = 709, n_alt = 0
   Insn 3447: point = 711, n_alt = 1
   Insn 3446: point = 713, n_alt = 0
   Insn 3445: point = 714, n_alt = 0
   Insn 3444: point = 716, n_alt = 1
   Insn 3443: point = 718, n_alt = 0
  BB 262
   Insn 3435: point = 720, n_alt = 1
  BB 260
   Insn 3427: point = 721, n_alt = 1
   Insn 3426: point = 722, n_alt = 0
   Insn 3425: point = 723, n_alt = 0
  BB 258
   Insn 4277: point = 724, n_alt = -1
   Insn 3416: point = 724, n_alt = 8
   Insn 3415: point = 725, n_alt = 2
   Insn 3414: point = 727, n_alt = 7
   Insn 3413: point = 728, n_alt = 7
   Insn 3412: point = 730, n_alt = 4
  BB 259
   Insn 3422: point = 731, n_alt = 8
   Insn 3421: point = 732, n_alt = 7
  BB 257
   Insn 3407: point = 733, n_alt = -1
   Insn 3406: point = 733, n_alt = 1
   Insn 3405: point = 734, n_alt = 7
   Insn 3404: point = 735, n_alt = 7
   Insn 3403: point = 737, n_alt = 4
  BB 256
   Insn 3401: point = 738, n_alt = -1
   Insn 3400: point = 738, n_alt = 0
   Insn 3399: point = 739, n_alt = 0
  BB 255
   Insn 3396: point = 740, n_alt = 0
   Insn 3395: point = 740, n_alt = 3
   Insn 3394: point = 740, n_alt = 2
   Insn 3393: point = 740, n_alt = 2
   Insn 3392: point = 740, n_alt = -2
   Insn 3391: point = 741, n_alt = -2
   Insn 3390: point = 742, n_alt = -2
   Insn 3389: point = 743, n_alt = -2
   Insn 3388: point = 744, n_alt = 3
   Insn 3387: point = 745, n_alt = 3
   Insn 3386: point = 746, n_alt = 3
   Insn 3385: point = 747, n_alt = 3
   Insn 3384: point = 749, n_alt = 0
   Insn 3383: point = 751, n_alt = 0
   Insn 3382: point = 753, n_alt = -2
   Insn 3381: point = 755, n_alt = -2
   Insn 3380: point = 757, n_alt = 0
   Insn 3379: point = 759, n_alt = 0
   Insn 3378: point = 760, n_alt = -2
   Insn 3377: point = 762, n_alt = 0
   Insn 3376: point = 764, n_alt = -2
   Insn 3375: point = 765, n_alt = 3
   Insn 3374: point = 767, n_alt = 0
   Insn 3373: point = 769, n_alt = 0
  BB 254
   Insn 3370: point = 770, n_alt = 1
  BB 253
   Insn 3368: point = 770, n_alt = -1
   Insn 3367: point = 770, n_alt = 0
   Insn 3366: point = 771, n_alt = 0
  BB 251
   Insn 4274: point = 772, n_alt = -1
   Insn 3356: point = 772, n_alt = 1
   Insn 3355: point = 773, n_alt = 1
   Insn 3354: point = 775, n_alt = 0
  BB 252
   Insn 3363: point = 776, n_alt = 1
   Insn 3362: point = 777, n_alt = 1
   Insn 3361: point = 779, n_alt = 0
  BB 250
   Insn 3352: point = 780, n_alt = -1
   Insn 3351: point = 780, n_alt = 1
   Insn 3350: point = 780, n_alt = 1
   Insn 3349: point = 780, n_alt = 1
   Insn 3348: point = 781, n_alt = 0
   Insn 3347: point = 782, n_alt = 1
   Insn 3346: point = 783, n_alt = 0
   Insn 3345: point = 785, n_alt = 0
   Insn 3344: point = 786, n_alt = 1
   Insn 3343: point = 787, n_alt = 0
   Insn 3342: point = 789, n_alt = 7
   Insn 3341: point = 791, n_alt = 4
   Insn 3340: point = 792, n_alt = 1
   Insn 3339: point = 793, n_alt = 0
   Insn 3338: point = 794, n_alt = 0
   Insn 3337: point = 795, n_alt = 1
   Insn 4506: point = 796, n_alt = -2
	Hard reg 1 is preferable by r2261 with profit 1000
   Insn 3336: point = 798, n_alt = 0
   Insn 4505: point = 799, n_alt = -2
	Hard reg 1 is preferable by r2261 with profit 2000
   Insn 3335: point = 801, n_alt = 2
   Insn 3334: point = 802, n_alt = 2
   Insn 3333: point = 803, n_alt = 2
   Insn 3332: point = 804, n_alt = 0
   Insn 3331: point = 804, n_alt = 0
   Insn 3330: point = 804, n_alt = 3
   Insn 3329: point = 804, n_alt = 2
   Insn 3328: point = 804, n_alt = 2
   Insn 3327: point = 804, n_alt = 4
   Insn 3326: point = 804, n_alt = 4
   Insn 3325: point = 804, n_alt = -2
   Insn 3324: point = 805, n_alt = -2
   Insn 3323: point = 806, n_alt = 0
   Insn 3322: point = 806, n_alt = 0
   Insn 3321: point = 806, n_alt = 3
   Insn 3320: point = 807, n_alt = 3
  BB 342
   Insn 4410: point = 808, n_alt = -1
  BB 245
   Insn 3278: point = 808, n_alt = -1
   Insn 3277: point = 808, n_alt = 0
   Insn 3276: point = 809, n_alt = 0
   Insn 3275: point = 811, n_alt = 0
   Insn 3274: point = 812, n_alt = 0
  BB 249
   Insn 4272: point = 813, n_alt = -1
   Insn 3314: point = 813, n_alt = 1
  BB 343
   Insn 4413: point = 814, n_alt = -1
  BB 247
   Insn 3286: point = 815, n_alt = -1
   Insn 3285: point = 815, n_alt = 0
   Insn 3284: point = 816, n_alt = 0
   Insn 3283: point = 818, n_alt = 0
   Insn 3282: point = 819, n_alt = 0
  BB 248
   Insn 4270: point = 820, n_alt = -1
   Insn 3308: point = 820, n_alt = 1
   Insn 3307: point = 820, n_alt = 8
   Insn 3306: point = 821, n_alt = 4
   Insn 3305: point = 822, n_alt = 1
   Insn 3304: point = 824, n_alt = 3
   Insn 3303: point = 826, n_alt = 0
   Insn 3302: point = 828, n_alt = 1
   Insn 3301: point = 830, n_alt = 0
   Insn 3300: point = 831, n_alt = 0
   Insn 3299: point = 833, n_alt = 1
   Insn 3298: point = 835, n_alt = 0
   Insn 3297: point = 836, n_alt = 7
   Insn 3296: point = 838, n_alt = 0
   Insn 3295: point = 840, n_alt = 4
   Insn 3294: point = 841, n_alt = 3
   Insn 3293: point = 843, n_alt = 0
   Insn 3292: point = 845, n_alt = 1
   Insn 3291: point = 847, n_alt = 0
   Insn 3290: point = 848, n_alt = 0
   Insn 3289: point = 850, n_alt = 1
   Insn 3288: point = 852, n_alt = 0
  BB 246
   Insn 3280: point = 854, n_alt = 1
  BB 244
   Insn 3272: point = 855, n_alt = 1
   Insn 3271: point = 856, n_alt = 0
   Insn 3270: point = 857, n_alt = 0
  BB 242
   Insn 4268: point = 858, n_alt = -1
   Insn 3261: point = 858, n_alt = 8
   Insn 3260: point = 859, n_alt = 2
   Insn 3259: point = 861, n_alt = 7
   Insn 3258: point = 862, n_alt = 7
   Insn 3257: point = 864, n_alt = 4
  BB 243
   Insn 3267: point = 865, n_alt = 8
   Insn 3266: point = 866, n_alt = 7
  BB 241
   Insn 3252: point = 867, n_alt = -1
   Insn 3251: point = 867, n_alt = 1
   Insn 3250: point = 868, n_alt = 7
   Insn 3249: point = 869, n_alt = 7
   Insn 3248: point = 871, n_alt = 4
  BB 240
   Insn 3246: point = 872, n_alt = -1
   Insn 3245: point = 872, n_alt = 0
   Insn 3244: point = 873, n_alt = 0
  BB 239
   Insn 3241: point = 874, n_alt = 0
   Insn 3240: point = 874, n_alt = 3
   Insn 3239: point = 874, n_alt = 2
   Insn 3238: point = 874, n_alt = 2
   Insn 3237: point = 874, n_alt = -2
   Insn 3236: point = 875, n_alt = -2
   Insn 3235: point = 876, n_alt = -2
   Insn 3234: point = 877, n_alt = -2
   Insn 3233: point = 878, n_alt = 3
   Insn 3232: point = 879, n_alt = 3
   Insn 3231: point = 880, n_alt = 3
   Insn 3230: point = 881, n_alt = 3
   Insn 3229: point = 883, n_alt = 0
   Insn 3228: point = 885, n_alt = 0
   Insn 3227: point = 887, n_alt = -2
   Insn 3226: point = 889, n_alt = -2
   Insn 3225: point = 891, n_alt = 0
   Insn 3224: point = 893, n_alt = 0
   Insn 3223: point = 894, n_alt = -2
   Insn 3222: point = 896, n_alt = 0
   Insn 3221: point = 898, n_alt = -2
   Insn 3220: point = 899, n_alt = 3
   Insn 3219: point = 901, n_alt = 0
   Insn 3218: point = 903, n_alt = 0
  BB 238
   Insn 3215: point = 904, n_alt = 1
  BB 237
   Insn 3213: point = 904, n_alt = -1
   Insn 3212: point = 904, n_alt = 0
   Insn 3211: point = 905, n_alt = 0
  BB 235
   Insn 4265: point = 906, n_alt = -1
   Insn 3201: point = 906, n_alt = 1
   Insn 3200: point = 907, n_alt = 1
   Insn 3199: point = 909, n_alt = 0
  BB 236
   Insn 3208: point = 910, n_alt = 1
   Insn 3207: point = 911, n_alt = 1
   Insn 3206: point = 913, n_alt = 0
  BB 234
   Insn 3197: point = 914, n_alt = -1
   Insn 3196: point = 914, n_alt = 1
   Insn 3195: point = 914, n_alt = 1
   Insn 3194: point = 914, n_alt = 1
   Insn 3193: point = 915, n_alt = 0
   Insn 3192: point = 916, n_alt = 1
   Insn 3191: point = 917, n_alt = 0
   Insn 3190: point = 919, n_alt = 0
   Insn 3189: point = 920, n_alt = 1
   Insn 3188: point = 921, n_alt = 0
   Insn 3187: point = 923, n_alt = 7
   Insn 3186: point = 925, n_alt = 4
   Insn 3185: point = 926, n_alt = 1
   Insn 3184: point = 927, n_alt = 0
   Insn 3183: point = 928, n_alt = 0
   Insn 3182: point = 929, n_alt = 1
   Insn 4504: point = 930, n_alt = -2
	Hard reg 1 is preferable by r2260 with profit 1000
   Insn 3181: point = 932, n_alt = 0
   Insn 4503: point = 933, n_alt = -2
	Hard reg 1 is preferable by r2260 with profit 2000
   Insn 3180: point = 935, n_alt = 2
   Insn 3179: point = 936, n_alt = 2
   Insn 3178: point = 937, n_alt = 2
   Insn 3177: point = 938, n_alt = 0
   Insn 3176: point = 938, n_alt = 0
   Insn 3175: point = 938, n_alt = 3
   Insn 3174: point = 938, n_alt = 2
   Insn 3173: point = 938, n_alt = 2
   Insn 3172: point = 938, n_alt = 4
   Insn 3171: point = 938, n_alt = 4
   Insn 3170: point = 938, n_alt = -2
   Insn 3169: point = 939, n_alt = -2
   Insn 3168: point = 940, n_alt = 0
   Insn 3167: point = 940, n_alt = 0
   Insn 3166: point = 940, n_alt = 3
   Insn 3165: point = 941, n_alt = 3
  BB 340
   Insn 4404: point = 942, n_alt = -1
  BB 229
   Insn 3121: point = 942, n_alt = -1
   Insn 3120: point = 942, n_alt = 0
   Insn 3119: point = 943, n_alt = 0
   Insn 3118: point = 945, n_alt = 0
   Insn 3117: point = 946, n_alt = 0
  BB 233
   Insn 4263: point = 947, n_alt = -1
   Insn 3159: point = 947, n_alt = 1
  BB 341
   Insn 4407: point = 948, n_alt = -1
  BB 231
   Insn 3129: point = 949, n_alt = -1
   Insn 3128: point = 949, n_alt = 0
   Insn 3127: point = 950, n_alt = 0
   Insn 3126: point = 952, n_alt = 0
   Insn 3125: point = 953, n_alt = 0
  BB 232
   Insn 4261: point = 954, n_alt = -1
   Insn 3153: point = 954, n_alt = 1
   Insn 3152: point = 954, n_alt = 8
   Insn 3151: point = 955, n_alt = 4
   Insn 3150: point = 956, n_alt = 0
   Insn 3149: point = 958, n_alt = 2
   Insn 3148: point = 959, n_alt = 3
   Insn 3147: point = 961, n_alt = 0
   Insn 3146: point = 963, n_alt = 1
   Insn 3145: point = 965, n_alt = 0
   Insn 3144: point = 966, n_alt = 0
   Insn 3143: point = 968, n_alt = 1
   Insn 3142: point = 970, n_alt = 0
   Insn 3141: point = 971, n_alt = 1
   Insn 3140: point = 973, n_alt = 7
   Insn 3139: point = 975, n_alt = 0
   Insn 3138: point = 977, n_alt = 4
   Insn 3137: point = 978, n_alt = 3
   Insn 3136: point = 980, n_alt = 0
   Insn 3135: point = 982, n_alt = 1
   Insn 3134: point = 984, n_alt = 0
   Insn 3133: point = 985, n_alt = 0
   Insn 3132: point = 987, n_alt = 1
   Insn 3131: point = 989, n_alt = 0
  BB 230
   Insn 3123: point = 991, n_alt = 1
  BB 228
   Insn 3115: point = 992, n_alt = 1
   Insn 3114: point = 993, n_alt = 0
   Insn 3113: point = 994, n_alt = 0
  BB 226
   Insn 4259: point = 995, n_alt = -1
   Insn 3104: point = 995, n_alt = 8
   Insn 3103: point = 996, n_alt = 2
   Insn 3102: point = 998, n_alt = 7
   Insn 3101: point = 999, n_alt = 7
   Insn 3100: point = 1001, n_alt = 4
  BB 227
   Insn 3110: point = 1002, n_alt = 8
   Insn 3109: point = 1003, n_alt = 7
  BB 225
   Insn 3095: point = 1004, n_alt = -1
   Insn 3094: point = 1004, n_alt = 1
   Insn 3093: point = 1005, n_alt = 7
   Insn 3092: point = 1006, n_alt = 7
   Insn 3091: point = 1008, n_alt = 4
  BB 224
   Insn 3089: point = 1009, n_alt = -1
   Insn 3088: point = 1009, n_alt = 0
   Insn 3087: point = 1010, n_alt = 0
  BB 223
   Insn 3084: point = 1011, n_alt = 0
   Insn 3083: point = 1011, n_alt = 3
   Insn 3082: point = 1011, n_alt = 2
   Insn 3081: point = 1011, n_alt = 2
   Insn 3080: point = 1011, n_alt = -2
   Insn 3079: point = 1012, n_alt = -2
   Insn 3078: point = 1013, n_alt = -2
   Insn 3077: point = 1014, n_alt = -2
   Insn 3076: point = 1015, n_alt = 3
   Insn 3075: point = 1016, n_alt = 3
   Insn 3074: point = 1017, n_alt = 3
   Insn 3073: point = 1018, n_alt = 3
   Insn 3072: point = 1020, n_alt = 0
   Insn 3071: point = 1022, n_alt = 0
   Insn 3070: point = 1024, n_alt = -2
   Insn 3069: point = 1026, n_alt = -2
   Insn 3068: point = 1028, n_alt = 0
   Insn 3067: point = 1030, n_alt = 0
   Insn 3066: point = 1031, n_alt = -2
   Insn 3065: point = 1033, n_alt = 0
   Insn 3064: point = 1035, n_alt = -2
   Insn 3063: point = 1036, n_alt = 3
   Insn 3062: point = 1038, n_alt = 0
   Insn 3061: point = 1040, n_alt = 0
  BB 222
   Insn 3058: point = 1041, n_alt = 1
  BB 221
   Insn 3056: point = 1041, n_alt = -1
   Insn 3055: point = 1041, n_alt = 0
   Insn 3054: point = 1042, n_alt = 0
  BB 219
   Insn 4256: point = 1043, n_alt = -1
   Insn 3044: point = 1043, n_alt = 1
   Insn 3043: point = 1044, n_alt = 1
   Insn 3042: point = 1046, n_alt = 0
  BB 220
   Insn 3051: point = 1047, n_alt = 1
   Insn 3050: point = 1048, n_alt = 1
   Insn 3049: point = 1050, n_alt = 0
  BB 218
   Insn 3040: point = 1051, n_alt = -1
   Insn 3039: point = 1051, n_alt = 1
   Insn 3038: point = 1051, n_alt = 1
   Insn 3037: point = 1051, n_alt = 1
   Insn 3036: point = 1052, n_alt = 0
   Insn 3035: point = 1053, n_alt = 1
   Insn 3034: point = 1054, n_alt = 0
   Insn 3033: point = 1056, n_alt = 0
   Insn 3032: point = 1057, n_alt = 1
   Insn 3031: point = 1058, n_alt = 0
   Insn 3030: point = 1060, n_alt = 7
   Insn 3029: point = 1062, n_alt = 4
   Insn 3028: point = 1063, n_alt = 1
   Insn 3027: point = 1064, n_alt = 0
   Insn 3026: point = 1065, n_alt = 0
   Insn 3025: point = 1066, n_alt = 1
   Insn 4502: point = 1067, n_alt = -2
	Hard reg 1 is preferable by r2259 with profit 1000
   Insn 3024: point = 1069, n_alt = 0
   Insn 4501: point = 1070, n_alt = -2
	Hard reg 1 is preferable by r2259 with profit 2000
   Insn 3023: point = 1072, n_alt = 2
   Insn 3022: point = 1073, n_alt = 2
   Insn 3021: point = 1074, n_alt = 2
   Insn 3020: point = 1075, n_alt = 0
   Insn 3019: point = 1075, n_alt = 0
   Insn 3018: point = 1075, n_alt = 3
   Insn 3017: point = 1075, n_alt = 2
   Insn 3016: point = 1075, n_alt = 2
   Insn 3015: point = 1075, n_alt = 4
   Insn 3014: point = 1075, n_alt = 4
   Insn 3013: point = 1075, n_alt = -2
   Insn 3012: point = 1076, n_alt = -2
   Insn 3011: point = 1077, n_alt = 0
   Insn 3010: point = 1077, n_alt = 0
   Insn 3009: point = 1077, n_alt = 3
   Insn 3008: point = 1078, n_alt = 3
  BB 338
   Insn 4398: point = 1079, n_alt = -1
  BB 213
   Insn 2964: point = 1079, n_alt = -1
   Insn 2963: point = 1079, n_alt = 0
   Insn 2962: point = 1080, n_alt = 0
   Insn 2961: point = 1082, n_alt = 0
   Insn 2960: point = 1083, n_alt = 0
  BB 217
   Insn 4254: point = 1084, n_alt = -1
   Insn 3002: point = 1084, n_alt = 1
  BB 339
   Insn 4401: point = 1085, n_alt = -1
  BB 215
   Insn 2972: point = 1086, n_alt = -1
   Insn 2971: point = 1086, n_alt = 0
   Insn 2970: point = 1087, n_alt = 0
   Insn 2969: point = 1089, n_alt = 0
   Insn 2968: point = 1090, n_alt = 0
  BB 216
   Insn 4252: point = 1091, n_alt = -1
   Insn 2996: point = 1091, n_alt = 1
   Insn 2995: point = 1091, n_alt = 8
   Insn 2994: point = 1092, n_alt = 4
   Insn 2993: point = 1093, n_alt = 0
   Insn 2992: point = 1095, n_alt = 2
   Insn 2991: point = 1096, n_alt = 3
   Insn 2990: point = 1098, n_alt = 0
   Insn 2989: point = 1100, n_alt = 1
   Insn 2988: point = 1102, n_alt = 0
   Insn 2987: point = 1103, n_alt = 0
   Insn 2986: point = 1105, n_alt = 1
   Insn 2985: point = 1107, n_alt = 0
   Insn 2984: point = 1108, n_alt = 1
   Insn 2983: point = 1110, n_alt = 7
   Insn 2982: point = 1112, n_alt = 0
   Insn 2981: point = 1114, n_alt = 4
   Insn 2980: point = 1115, n_alt = 3
   Insn 2979: point = 1117, n_alt = 0
   Insn 2978: point = 1119, n_alt = 1
   Insn 2977: point = 1121, n_alt = 0
   Insn 2976: point = 1122, n_alt = 0
   Insn 2975: point = 1124, n_alt = 1
   Insn 2974: point = 1126, n_alt = 0
  BB 214
   Insn 2966: point = 1128, n_alt = 1
  BB 212
   Insn 2958: point = 1129, n_alt = 1
   Insn 2957: point = 1130, n_alt = 0
   Insn 2956: point = 1131, n_alt = 0
  BB 210
   Insn 4250: point = 1132, n_alt = -1
   Insn 2947: point = 1132, n_alt = 8
   Insn 2946: point = 1133, n_alt = 2
   Insn 2945: point = 1135, n_alt = 7
   Insn 2944: point = 1136, n_alt = 7
   Insn 2943: point = 1138, n_alt = 4
  BB 211
   Insn 2953: point = 1139, n_alt = 8
   Insn 2952: point = 1140, n_alt = 7
  BB 209
   Insn 2938: point = 1141, n_alt = -1
   Insn 2937: point = 1141, n_alt = 1
   Insn 2936: point = 1142, n_alt = 7
   Insn 2935: point = 1143, n_alt = 7
   Insn 2934: point = 1145, n_alt = 4
  BB 208
   Insn 2932: point = 1146, n_alt = -1
   Insn 2931: point = 1146, n_alt = 0
   Insn 2930: point = 1147, n_alt = 0
  BB 207
   Insn 2927: point = 1148, n_alt = 0
   Insn 2926: point = 1148, n_alt = 3
   Insn 2925: point = 1148, n_alt = 2
   Insn 2924: point = 1148, n_alt = 2
   Insn 2923: point = 1148, n_alt = -2
   Insn 2922: point = 1149, n_alt = -2
   Insn 2921: point = 1150, n_alt = -2
   Insn 2920: point = 1151, n_alt = -2
   Insn 2919: point = 1152, n_alt = 3
   Insn 2918: point = 1153, n_alt = 3
   Insn 2917: point = 1154, n_alt = 3
   Insn 2916: point = 1155, n_alt = 3
   Insn 2915: point = 1157, n_alt = 0
   Insn 2914: point = 1159, n_alt = 0
   Insn 2913: point = 1161, n_alt = -2
   Insn 2912: point = 1163, n_alt = -2
   Insn 2911: point = 1165, n_alt = 0
   Insn 2910: point = 1167, n_alt = 0
   Insn 2909: point = 1168, n_alt = -2
   Insn 2908: point = 1170, n_alt = 0
   Insn 2907: point = 1172, n_alt = -2
   Insn 2906: point = 1173, n_alt = 3
   Insn 2905: point = 1175, n_alt = 0
   Insn 2904: point = 1177, n_alt = 0
  BB 206
   Insn 2901: point = 1178, n_alt = 1
  BB 205
   Insn 2899: point = 1178, n_alt = -1
   Insn 2898: point = 1178, n_alt = 0
   Insn 2897: point = 1179, n_alt = 0
  BB 203
   Insn 4247: point = 1180, n_alt = -1
   Insn 2887: point = 1180, n_alt = 1
   Insn 2886: point = 1181, n_alt = 1
   Insn 2885: point = 1183, n_alt = 0
  BB 204
   Insn 2894: point = 1184, n_alt = 1
   Insn 2893: point = 1185, n_alt = 1
   Insn 2892: point = 1187, n_alt = 0
  BB 202
   Insn 2883: point = 1188, n_alt = -1
   Insn 2882: point = 1188, n_alt = 1
   Insn 2881: point = 1188, n_alt = 1
   Insn 2880: point = 1188, n_alt = 1
   Insn 2879: point = 1189, n_alt = 0
   Insn 2878: point = 1190, n_alt = 1
   Insn 2877: point = 1191, n_alt = 0
   Insn 2876: point = 1193, n_alt = 0
   Insn 2875: point = 1194, n_alt = 1
   Insn 2874: point = 1195, n_alt = 0
   Insn 2873: point = 1197, n_alt = 7
   Insn 2872: point = 1199, n_alt = 4
   Insn 2871: point = 1200, n_alt = 1
   Insn 2870: point = 1201, n_alt = 0
   Insn 2869: point = 1202, n_alt = 0
   Insn 2868: point = 1203, n_alt = 1
   Insn 4500: point = 1204, n_alt = -2
	Hard reg 1 is preferable by r2258 with profit 1000
   Insn 2867: point = 1206, n_alt = 0
   Insn 4499: point = 1207, n_alt = -2
	Hard reg 1 is preferable by r2258 with profit 2000
   Insn 2866: point = 1209, n_alt = 2
   Insn 2865: point = 1210, n_alt = 2
   Insn 2864: point = 1211, n_alt = 2
   Insn 2863: point = 1212, n_alt = 0
   Insn 2862: point = 1212, n_alt = 0
   Insn 2861: point = 1212, n_alt = 3
   Insn 2860: point = 1212, n_alt = 2
   Insn 2859: point = 1212, n_alt = 2
   Insn 2858: point = 1212, n_alt = 4
   Insn 2857: point = 1212, n_alt = 4
   Insn 2856: point = 1212, n_alt = -2
   Insn 2855: point = 1213, n_alt = -2
   Insn 2854: point = 1214, n_alt = 0
   Insn 2853: point = 1214, n_alt = 0
   Insn 2852: point = 1214, n_alt = 3
   Insn 2851: point = 1215, n_alt = 3
  BB 336
   Insn 4392: point = 1216, n_alt = -1
  BB 197
   Insn 2809: point = 1216, n_alt = -1
   Insn 2808: point = 1216, n_alt = 0
   Insn 2807: point = 1217, n_alt = 0
   Insn 2806: point = 1219, n_alt = 0
   Insn 2805: point = 1220, n_alt = 0
  BB 201
   Insn 4245: point = 1221, n_alt = -1
   Insn 2845: point = 1221, n_alt = 1
  BB 337
   Insn 4395: point = 1222, n_alt = -1
  BB 199
   Insn 2817: point = 1223, n_alt = -1
   Insn 2816: point = 1223, n_alt = 0
   Insn 2815: point = 1224, n_alt = 0
   Insn 2814: point = 1226, n_alt = 0
   Insn 2813: point = 1227, n_alt = 0
  BB 200
   Insn 4243: point = 1228, n_alt = -1
   Insn 2839: point = 1228, n_alt = 1
   Insn 2838: point = 1228, n_alt = 8
   Insn 2837: point = 1229, n_alt = 4
   Insn 2836: point = 1230, n_alt = 1
   Insn 2835: point = 1232, n_alt = 3
   Insn 2834: point = 1234, n_alt = 0
   Insn 2833: point = 1236, n_alt = 1
   Insn 2832: point = 1238, n_alt = 0
   Insn 2831: point = 1239, n_alt = 0
   Insn 2830: point = 1241, n_alt = 1
   Insn 2829: point = 1243, n_alt = 0
   Insn 2828: point = 1244, n_alt = 7
   Insn 2827: point = 1246, n_alt = 0
   Insn 2826: point = 1248, n_alt = 4
   Insn 2825: point = 1249, n_alt = 3
   Insn 2824: point = 1251, n_alt = 0
   Insn 2823: point = 1253, n_alt = 1
   Insn 2822: point = 1255, n_alt = 0
   Insn 2821: point = 1256, n_alt = 0
   Insn 2820: point = 1258, n_alt = 1
   Insn 2819: point = 1260, n_alt = 0
  BB 198
   Insn 2811: point = 1262, n_alt = 1
  BB 196
   Insn 2803: point = 1263, n_alt = 1
   Insn 2802: point = 1264, n_alt = 0
   Insn 2801: point = 1265, n_alt = 0
  BB 194
   Insn 4241: point = 1266, n_alt = -1
   Insn 2792: point = 1266, n_alt = 8
   Insn 2791: point = 1267, n_alt = 2
   Insn 2790: point = 1269, n_alt = 7
   Insn 2789: point = 1270, n_alt = 7
   Insn 2788: point = 1272, n_alt = 4
  BB 195
   Insn 2798: point = 1273, n_alt = 8
   Insn 2797: point = 1274, n_alt = 7
  BB 193
   Insn 2783: point = 1275, n_alt = -1
   Insn 2782: point = 1275, n_alt = 1
   Insn 2781: point = 1276, n_alt = 7
   Insn 2780: point = 1277, n_alt = 7
   Insn 2779: point = 1279, n_alt = 4
  BB 192
   Insn 2777: point = 1280, n_alt = -1
   Insn 2776: point = 1280, n_alt = 0
   Insn 2775: point = 1281, n_alt = 0
  BB 191
   Insn 2772: point = 1282, n_alt = 0
   Insn 2771: point = 1282, n_alt = 3
   Insn 2770: point = 1282, n_alt = 2
   Insn 2769: point = 1282, n_alt = 2
   Insn 2768: point = 1282, n_alt = -2
   Insn 2767: point = 1283, n_alt = -2
   Insn 2766: point = 1284, n_alt = -2
   Insn 2765: point = 1285, n_alt = -2
   Insn 2764: point = 1286, n_alt = 3
   Insn 2763: point = 1287, n_alt = 3
   Insn 2762: point = 1288, n_alt = 3
   Insn 2761: point = 1289, n_alt = 3
   Insn 2760: point = 1291, n_alt = 0
   Insn 2759: point = 1293, n_alt = 0
   Insn 2758: point = 1295, n_alt = -2
   Insn 2757: point = 1297, n_alt = -2
   Insn 2756: point = 1299, n_alt = 0
   Insn 2755: point = 1301, n_alt = 0
   Insn 2754: point = 1302, n_alt = -2
   Insn 2753: point = 1304, n_alt = 0
   Insn 2752: point = 1306, n_alt = -2
   Insn 2751: point = 1307, n_alt = 3
   Insn 2750: point = 1309, n_alt = 0
   Insn 2749: point = 1311, n_alt = 0
  BB 190
   Insn 2746: point = 1312, n_alt = 1
  BB 189
   Insn 2744: point = 1312, n_alt = -1
   Insn 2743: point = 1312, n_alt = 0
   Insn 2742: point = 1313, n_alt = 0
  BB 187
   Insn 4238: point = 1314, n_alt = -1
   Insn 2732: point = 1314, n_alt = 1
   Insn 2731: point = 1315, n_alt = 1
   Insn 2730: point = 1317, n_alt = 0
  BB 188
   Insn 2739: point = 1318, n_alt = 1
   Insn 2738: point = 1319, n_alt = 1
   Insn 2737: point = 1321, n_alt = 0
  BB 186
   Insn 2728: point = 1322, n_alt = -1
   Insn 2727: point = 1322, n_alt = 1
   Insn 2726: point = 1322, n_alt = 1
   Insn 2725: point = 1322, n_alt = 1
   Insn 2724: point = 1323, n_alt = 0
   Insn 2723: point = 1324, n_alt = 1
   Insn 2722: point = 1325, n_alt = 0
   Insn 2721: point = 1327, n_alt = 0
   Insn 2720: point = 1328, n_alt = 1
   Insn 2719: point = 1329, n_alt = 0
   Insn 2718: point = 1331, n_alt = 7
   Insn 2717: point = 1333, n_alt = 4
   Insn 2716: point = 1334, n_alt = 1
   Insn 2715: point = 1335, n_alt = 0
   Insn 2714: point = 1336, n_alt = 0
   Insn 2713: point = 1337, n_alt = 1
   Insn 4498: point = 1338, n_alt = -2
	Hard reg 1 is preferable by r2257 with profit 1000
   Insn 2712: point = 1340, n_alt = 0
   Insn 4497: point = 1341, n_alt = -2
	Hard reg 1 is preferable by r2257 with profit 2000
   Insn 2711: point = 1343, n_alt = 2
   Insn 2710: point = 1344, n_alt = 2
   Insn 2709: point = 1345, n_alt = 2
   Insn 2708: point = 1346, n_alt = 0
   Insn 2707: point = 1346, n_alt = 0
   Insn 2706: point = 1346, n_alt = 3
   Insn 2705: point = 1346, n_alt = 2
   Insn 2704: point = 1346, n_alt = 2
   Insn 2703: point = 1346, n_alt = 4
   Insn 2702: point = 1346, n_alt = 4
   Insn 2701: point = 1346, n_alt = -2
   Insn 2700: point = 1347, n_alt = -2
   Insn 2699: point = 1348, n_alt = 0
   Insn 2698: point = 1348, n_alt = 0
   Insn 2697: point = 1348, n_alt = 3
   Insn 2696: point = 1349, n_alt = 3
  BB 334
   Insn 4386: point = 1350, n_alt = -1
  BB 181
   Insn 2654: point = 1350, n_alt = -1
   Insn 2653: point = 1350, n_alt = 0
   Insn 2652: point = 1351, n_alt = 0
   Insn 2651: point = 1353, n_alt = 0
   Insn 2650: point = 1354, n_alt = 0
  BB 185
   Insn 4236: point = 1355, n_alt = -1
   Insn 2690: point = 1355, n_alt = 1
  BB 335
   Insn 4389: point = 1356, n_alt = -1
  BB 183
   Insn 2662: point = 1357, n_alt = -1
   Insn 2661: point = 1357, n_alt = 0
   Insn 2660: point = 1358, n_alt = 0
   Insn 2659: point = 1360, n_alt = 0
   Insn 2658: point = 1361, n_alt = 0
  BB 184
   Insn 4234: point = 1362, n_alt = -1
   Insn 2684: point = 1362, n_alt = 1
   Insn 2683: point = 1362, n_alt = 8
   Insn 2682: point = 1363, n_alt = 4
   Insn 2681: point = 1364, n_alt = 1
   Insn 2680: point = 1366, n_alt = 3
   Insn 2679: point = 1368, n_alt = 0
   Insn 2678: point = 1370, n_alt = 1
   Insn 2677: point = 1372, n_alt = 0
   Insn 2676: point = 1373, n_alt = 0
   Insn 2675: point = 1375, n_alt = 1
   Insn 2674: point = 1377, n_alt = 0
   Insn 2673: point = 1378, n_alt = 7
   Insn 2672: point = 1380, n_alt = 0
   Insn 2671: point = 1382, n_alt = 4
   Insn 2670: point = 1383, n_alt = 3
   Insn 2669: point = 1385, n_alt = 0
   Insn 2668: point = 1387, n_alt = 1
   Insn 2667: point = 1389, n_alt = 0
   Insn 2666: point = 1390, n_alt = 0
   Insn 2665: point = 1392, n_alt = 1
   Insn 2664: point = 1394, n_alt = 0
  BB 182
   Insn 2656: point = 1396, n_alt = 1
  BB 180
   Insn 2648: point = 1397, n_alt = 1
   Insn 2647: point = 1398, n_alt = 0
   Insn 2646: point = 1399, n_alt = 0
  BB 178
   Insn 4232: point = 1400, n_alt = -1
   Insn 2637: point = 1400, n_alt = 8
   Insn 2636: point = 1401, n_alt = 2
   Insn 2635: point = 1403, n_alt = 7
   Insn 2634: point = 1404, n_alt = 7
   Insn 2633: point = 1406, n_alt = 4
  BB 179
   Insn 2643: point = 1407, n_alt = 8
   Insn 2642: point = 1408, n_alt = 7
  BB 177
   Insn 2628: point = 1409, n_alt = -1
   Insn 2627: point = 1409, n_alt = 1
   Insn 2626: point = 1410, n_alt = 7
   Insn 2625: point = 1411, n_alt = 7
   Insn 2624: point = 1413, n_alt = 4
  BB 176
   Insn 2622: point = 1414, n_alt = -1
   Insn 2621: point = 1414, n_alt = 0
   Insn 2620: point = 1415, n_alt = 0
  BB 175
   Insn 2617: point = 1416, n_alt = 0
   Insn 2616: point = 1416, n_alt = 3
   Insn 2615: point = 1416, n_alt = 2
   Insn 2614: point = 1416, n_alt = 2
   Insn 2613: point = 1416, n_alt = -2
   Insn 2612: point = 1417, n_alt = -2
   Insn 2611: point = 1418, n_alt = -2
   Insn 2610: point = 1419, n_alt = -2
   Insn 2609: point = 1420, n_alt = 3
   Insn 2608: point = 1421, n_alt = 3
   Insn 2607: point = 1422, n_alt = 3
   Insn 2606: point = 1423, n_alt = 3
   Insn 2605: point = 1425, n_alt = 0
   Insn 2604: point = 1427, n_alt = 0
   Insn 2603: point = 1429, n_alt = -2
   Insn 2602: point = 1431, n_alt = -2
   Insn 2601: point = 1433, n_alt = 0
   Insn 2600: point = 1435, n_alt = 0
   Insn 2599: point = 1436, n_alt = -2
   Insn 2598: point = 1438, n_alt = 0
   Insn 2597: point = 1440, n_alt = -2
   Insn 2596: point = 1441, n_alt = 3
   Insn 2595: point = 1443, n_alt = 0
   Insn 2594: point = 1445, n_alt = 0
   Insn 2593: point = 1446, n_alt = 0
   Insn 2592: point = 1447, n_alt = 1
   Insn 4496: point = 1448, n_alt = -2
	Hard reg 1 is preferable by r2256 with profit 1000
   Insn 2591: point = 1450, n_alt = 0
   Insn 4495: point = 1451, n_alt = -2
	Hard reg 1 is preferable by r2256 with profit 2000
   Insn 2590: point = 1453, n_alt = 2
   Insn 2589: point = 1454, n_alt = 2
   Insn 2588: point = 1455, n_alt = 2
   Insn 2587: point = 1456, n_alt = 0
   Insn 2586: point = 1456, n_alt = 0
   Insn 2585: point = 1456, n_alt = 3
   Insn 2584: point = 1456, n_alt = 2
   Insn 2583: point = 1456, n_alt = 2
   Insn 2582: point = 1456, n_alt = 4
   Insn 2581: point = 1456, n_alt = 4
   Insn 2580: point = 1456, n_alt = -2
   Insn 2579: point = 1457, n_alt = -2
   Insn 2578: point = 1458, n_alt = 0
   Insn 2577: point = 1458, n_alt = 0
   Insn 2576: point = 1458, n_alt = 3
   Insn 2575: point = 1459, n_alt = 3
  BB 174
   Insn 2573: point = 1460, n_alt = -1
   Insn 2572: point = 1460, n_alt = 0
   Insn 2571: point = 1461, n_alt = 0
  BB 173
   Insn 2568: point = 1462, n_alt = 0
   Insn 2567: point = 1462, n_alt = 3
   Insn 2566: point = 1462, n_alt = 2
   Insn 2565: point = 1462, n_alt = 2
   Insn 2564: point = 1462, n_alt = -2
   Insn 2563: point = 1463, n_alt = -2
   Insn 2562: point = 1464, n_alt = -2
   Insn 2561: point = 1465, n_alt = -2
   Insn 2560: point = 1466, n_alt = 3
   Insn 2559: point = 1467, n_alt = 3
   Insn 2558: point = 1468, n_alt = 3
   Insn 2557: point = 1469, n_alt = 3
   Insn 2556: point = 1471, n_alt = 0
   Insn 2555: point = 1473, n_alt = 0
   Insn 2554: point = 1475, n_alt = -2
   Insn 2553: point = 1477, n_alt = -2
   Insn 2552: point = 1479, n_alt = 0
   Insn 2551: point = 1481, n_alt = 0
   Insn 2550: point = 1482, n_alt = -2
   Insn 2549: point = 1484, n_alt = 0
   Insn 2548: point = 1486, n_alt = -2
   Insn 2547: point = 1487, n_alt = 3
   Insn 2546: point = 1489, n_alt = 0
   Insn 2545: point = 1491, n_alt = 0
   Insn 2544: point = 1492, n_alt = 0
   Insn 2543: point = 1493, n_alt = 1
   Insn 4494: point = 1494, n_alt = -2
	Hard reg 1 is preferable by r2255 with profit 1000
   Insn 2542: point = 1496, n_alt = 0
   Insn 4493: point = 1497, n_alt = -2
	Hard reg 1 is preferable by r2255 with profit 2000
   Insn 2541: point = 1499, n_alt = 2
   Insn 2540: point = 1500, n_alt = 2
   Insn 2539: point = 1501, n_alt = 2
   Insn 2538: point = 1502, n_alt = 0
   Insn 2537: point = 1502, n_alt = 0
   Insn 2536: point = 1502, n_alt = 3
   Insn 2535: point = 1502, n_alt = 2
   Insn 2534: point = 1502, n_alt = 2
   Insn 2533: point = 1502, n_alt = 4
   Insn 2532: point = 1502, n_alt = 4
   Insn 2531: point = 1502, n_alt = -2
   Insn 2530: point = 1503, n_alt = -2
   Insn 2529: point = 1504, n_alt = 0
   Insn 2528: point = 1504, n_alt = 0
   Insn 2527: point = 1504, n_alt = 3
   Insn 2526: point = 1505, n_alt = 3
  BB 172
   Insn 2524: point = 1506, n_alt = -1
   Insn 2523: point = 1506, n_alt = 0
   Insn 2522: point = 1507, n_alt = 0
  BB 171
   Insn 2519: point = 1508, n_alt = 0
   Insn 2518: point = 1508, n_alt = 3
   Insn 2517: point = 1508, n_alt = 2
   Insn 2516: point = 1508, n_alt = 2
   Insn 2515: point = 1508, n_alt = -2
   Insn 2514: point = 1509, n_alt = -2
   Insn 2513: point = 1510, n_alt = -2
   Insn 2512: point = 1511, n_alt = -2
   Insn 2511: point = 1512, n_alt = 3
   Insn 2510: point = 1513, n_alt = 3
   Insn 2509: point = 1514, n_alt = 3
   Insn 2508: point = 1515, n_alt = 3
   Insn 2507: point = 1517, n_alt = 0
   Insn 2506: point = 1519, n_alt = 0
   Insn 2505: point = 1521, n_alt = -2
   Insn 2504: point = 1523, n_alt = -2
   Insn 2503: point = 1525, n_alt = 0
   Insn 2502: point = 1527, n_alt = 0
   Insn 2501: point = 1528, n_alt = -2
   Insn 2500: point = 1530, n_alt = 0
   Insn 2499: point = 1532, n_alt = -2
   Insn 2498: point = 1533, n_alt = 3
   Insn 2497: point = 1535, n_alt = 0
   Insn 2496: point = 1537, n_alt = 0
   Insn 2495: point = 1538, n_alt = 0
   Insn 2494: point = 1539, n_alt = 1
   Insn 4492: point = 1540, n_alt = -2
	Hard reg 1 is preferable by r2254 with profit 1000
   Insn 2493: point = 1542, n_alt = 0
   Insn 4491: point = 1543, n_alt = -2
	Hard reg 1 is preferable by r2254 with profit 2000
   Insn 2492: point = 1545, n_alt = 2
   Insn 2491: point = 1546, n_alt = 2
   Insn 2490: point = 1547, n_alt = 2
   Insn 2489: point = 1548, n_alt = 0
   Insn 2488: point = 1548, n_alt = 0
   Insn 2487: point = 1548, n_alt = 3
   Insn 2486: point = 1548, n_alt = 2
   Insn 2485: point = 1548, n_alt = 2
   Insn 2484: point = 1548, n_alt = 4
   Insn 2483: point = 1548, n_alt = 4
   Insn 2482: point = 1548, n_alt = -2
   Insn 2481: point = 1549, n_alt = -2
   Insn 2480: point = 1550, n_alt = 0
   Insn 2479: point = 1550, n_alt = 0
   Insn 2478: point = 1550, n_alt = 3
   Insn 2477: point = 1551, n_alt = 3
  BB 170
   Insn 2475: point = 1552, n_alt = -1
   Insn 2474: point = 1552, n_alt = 0
   Insn 2473: point = 1553, n_alt = 0
  BB 331
   Insn 4377: point = 1554, n_alt = -1
  BB 150
   Insn 2036: point = 1554, n_alt = -1
   Insn 2035: point = 1554, n_alt = 0
   Insn 2034: point = 1555, n_alt = 0
   Insn 2033: point = 1557, n_alt = 0
   Insn 2032: point = 1558, n_alt = 0
  BB 169
   Insn 4229: point = 1559, n_alt = -1
   Insn 2467: point = 1559, n_alt = 1
  BB 332
   Insn 4380: point = 1560, n_alt = -1
  BB 152
   Insn 2044: point = 1561, n_alt = -1
   Insn 2043: point = 1561, n_alt = 0
   Insn 2042: point = 1562, n_alt = 0
   Insn 2041: point = 1564, n_alt = 0
   Insn 2040: point = 1565, n_alt = 0
  BB 168
   Insn 4227: point = 1566, n_alt = -1
   Insn 2461: point = 1566, n_alt = 1
  BB 166
   Insn 4225: point = 1567, n_alt = -1
   Insn 2288: point = 1567, n_alt = 8
   Insn 2287: point = 1568, n_alt = 4
   Insn 2286: point = 1569, n_alt = 7
   Insn 2285: point = 1571, n_alt = 0
   Insn 2284: point = 1573, n_alt = 4
   Insn 2283: point = 1574, n_alt = 3
   Insn 2282: point = 1576, n_alt = 0
   Insn 2281: point = 1578, n_alt = 0
   Insn 2280: point = 1580, n_alt = 0
   Insn 2279: point = 1581, n_alt = 0
   Insn 2278: point = 1583, n_alt = 0
   Insn 2277: point = 1585, n_alt = 0
   Insn 2276: point = 1586, n_alt = 3
   Insn 2275: point = 1588, n_alt = 0
   Insn 2274: point = 1590, n_alt = 0
   Insn 2273: point = 1592, n_alt = 0
   Insn 2272: point = 1593, n_alt = 0
   Insn 2271: point = 1595, n_alt = 0
   Insn 2270: point = 1597, n_alt = 0
   Insn 2269: point = 1598, n_alt = 8
   Insn 2268: point = 1599, n_alt = 4
   Insn 2267: point = 1600, n_alt = 7
   Insn 2266: point = 1602, n_alt = 0
   Insn 2265: point = 1604, n_alt = 4
   Insn 2264: point = 1605, n_alt = 3
   Insn 2263: point = 1607, n_alt = 0
   Insn 2262: point = 1609, n_alt = 0
   Insn 2261: point = 1611, n_alt = 0
   Insn 2260: point = 1612, n_alt = 0
   Insn 2259: point = 1614, n_alt = 0
   Insn 2258: point = 1616, n_alt = 0
   Insn 2257: point = 1617, n_alt = 3
   Insn 2256: point = 1619, n_alt = 0
   Insn 2255: point = 1621, n_alt = 0
   Insn 2254: point = 1623, n_alt = 0
   Insn 2253: point = 1624, n_alt = 0
   Insn 2252: point = 1626, n_alt = 0
   Insn 2251: point = 1628, n_alt = 0
   Insn 2250: point = 1629, n_alt = 8
   Insn 2249: point = 1630, n_alt = 4
   Insn 2248: point = 1631, n_alt = 1
   Insn 2247: point = 1633, n_alt = 3
   Insn 2246: point = 1635, n_alt = 0
   Insn 2245: point = 1637, n_alt = 0
   Insn 2244: point = 1639, n_alt = 0
   Insn 2243: point = 1640, n_alt = 0
   Insn 2242: point = 1642, n_alt = 0
   Insn 2241: point = 1644, n_alt = 0
   Insn 2240: point = 1645, n_alt = 7
   Insn 2239: point = 1647, n_alt = 4
   Insn 2238: point = 1648, n_alt = 1
   Insn 2237: point = 1650, n_alt = 7
   Insn 2236: point = 1652, n_alt = 0
   Insn 2235: point = 1654, n_alt = 4
   Insn 2234: point = 1655, n_alt = 3
   Insn 2233: point = 1657, n_alt = 0
   Insn 2232: point = 1659, n_alt = 0
   Insn 2231: point = 1661, n_alt = 0
   Insn 2230: point = 1662, n_alt = 0
   Insn 2229: point = 1664, n_alt = 0
   Insn 2228: point = 1666, n_alt = 0
   Insn 2227: point = 1667, n_alt = 7
   Insn 2226: point = 1669, n_alt = 4
  BB 163
   Insn 4223: point = 1671, n_alt = -1
   Insn 2211: point = 1671, n_alt = 8
   Insn 2210: point = 1672, n_alt = 4
   Insn 2209: point = 1673, n_alt = 7
   Insn 2208: point = 1675, n_alt = 0
   Insn 2207: point = 1677, n_alt = 4
   Insn 2206: point = 1678, n_alt = 3
   Insn 2205: point = 1680, n_alt = 0
   Insn 2204: point = 1682, n_alt = 0
   Insn 2203: point = 1684, n_alt = 0
   Insn 2202: point = 1685, n_alt = 0
   Insn 2201: point = 1687, n_alt = 0
   Insn 2200: point = 1689, n_alt = 0
   Insn 2199: point = 1690, n_alt = 3
   Insn 2198: point = 1692, n_alt = 0
   Insn 2197: point = 1694, n_alt = 0
   Insn 2196: point = 1696, n_alt = 0
   Insn 2195: point = 1697, n_alt = 0
   Insn 2194: point = 1699, n_alt = 0
   Insn 2193: point = 1701, n_alt = 0
   Insn 2192: point = 1703, n_alt = 0
   Insn 2191: point = 1704, n_alt = 1
   Insn 2190: point = 1706, n_alt = 0
   Insn 2189: point = 1708, n_alt = 0
   Insn 2188: point = 1709, n_alt = 1
   Insn 2187: point = 1710, n_alt = 0
   Insn 2186: point = 1712, n_alt = 0
   Insn 2185: point = 1714, n_alt = 4
   Insn 2184: point = 1715, n_alt = 3
   Insn 2183: point = 1717, n_alt = 0
   Insn 2182: point = 1719, n_alt = 0
   Insn 2181: point = 1721, n_alt = 0
   Insn 2180: point = 1722, n_alt = 0
   Insn 2179: point = 1724, n_alt = 0
   Insn 2178: point = 1726, n_alt = 0
   Insn 2177: point = 1727, n_alt = 8
   Insn 2176: point = 1728, n_alt = 4
   Insn 2175: point = 1729, n_alt = 7
   Insn 2174: point = 1730, n_alt = 3
   Insn 2173: point = 1732, n_alt = 0
   Insn 2172: point = 1734, n_alt = 0
   Insn 2171: point = 1736, n_alt = 0
   Insn 2170: point = 1737, n_alt = 0
   Insn 2169: point = 1739, n_alt = 0
   Insn 2168: point = 1741, n_alt = 0
   Insn 2167: point = 1742, n_alt = 8
   Insn 2166: point = 1743, n_alt = 4
   Insn 2165: point = 1744, n_alt = 7
   Insn 2164: point = 1745, n_alt = 3
   Insn 2163: point = 1747, n_alt = 0
   Insn 2162: point = 1749, n_alt = 0
   Insn 2161: point = 1751, n_alt = 0
   Insn 2160: point = 1752, n_alt = 0
   Insn 2159: point = 1754, n_alt = 0
   Insn 2158: point = 1756, n_alt = 0
  BB 167
   Insn 2458: point = 1758, n_alt = 8
   Insn 2457: point = 1759, n_alt = 4
   Insn 2456: point = 1760, n_alt = 7
   Insn 2455: point = 1762, n_alt = 0
   Insn 2454: point = 1764, n_alt = 4
   Insn 2453: point = 1765, n_alt = 3
   Insn 2452: point = 1767, n_alt = 0
   Insn 2451: point = 1769, n_alt = 0
   Insn 2450: point = 1771, n_alt = 0
   Insn 2449: point = 1772, n_alt = 0
   Insn 2448: point = 1774, n_alt = 0
   Insn 2447: point = 1776, n_alt = 0
   Insn 2446: point = 1777, n_alt = 3
   Insn 2445: point = 1779, n_alt = 0
   Insn 2444: point = 1781, n_alt = 0
   Insn 2443: point = 1783, n_alt = 0
   Insn 2442: point = 1784, n_alt = 0
   Insn 2441: point = 1786, n_alt = 0
   Insn 2440: point = 1788, n_alt = 0
   Insn 2439: point = 1790, n_alt = 0
   Insn 2438: point = 1791, n_alt = 1
   Insn 2437: point = 1793, n_alt = 0
   Insn 2436: point = 1795, n_alt = 0
   Insn 2435: point = 1796, n_alt = 8
   Insn 2434: point = 1797, n_alt = 4
   Insn 2433: point = 1798, n_alt = 1
   Insn 2432: point = 1800, n_alt = 3
   Insn 2431: point = 1802, n_alt = 0
   Insn 2430: point = 1804, n_alt = 0
   Insn 2429: point = 1806, n_alt = 0
   Insn 2428: point = 1807, n_alt = 0
   Insn 2427: point = 1809, n_alt = 0
   Insn 2426: point = 1811, n_alt = 0
   Insn 2425: point = 1812, n_alt = 7
   Insn 2424: point = 1814, n_alt = 0
   Insn 2423: point = 1816, n_alt = 4
   Insn 2422: point = 1817, n_alt = 3
   Insn 2421: point = 1819, n_alt = 0
   Insn 2420: point = 1821, n_alt = 0
   Insn 2419: point = 1823, n_alt = 0
   Insn 2418: point = 1824, n_alt = 0
   Insn 2417: point = 1826, n_alt = 0
   Insn 2416: point = 1828, n_alt = 0
   Insn 2415: point = 1830, n_alt = 0
   Insn 2414: point = 1831, n_alt = 1
   Insn 2413: point = 1833, n_alt = 0
   Insn 2412: point = 1835, n_alt = 0
   Insn 2411: point = 1837, n_alt = 0
   Insn 4490: point = 1838, n_alt = -2
	Hard reg 22 is preferable by r2253 with profit 1000
   Insn 2410: point = 1840, n_alt = 1
   Insn 4489: point = 1841, n_alt = 7
	   Creating copy r2253<-r2270@1000
   Insn 2409: point = 1843, n_alt = -2
   Insn 4488: point = 1845, n_alt = -2
	Hard reg 21 is preferable by r2252 with profit 1000
   Insn 2408: point = 1847, n_alt = 2
   Insn 4487: point = 1848, n_alt = 7
	   Creating copy r2252<-r2269@1000
   Insn 2407: point = 1850, n_alt = -2
   Insn 2406: point = 1851, n_alt = 0
   Insn 2405: point = 1851, n_alt = -2
   Insn 2404: point = 1852, n_alt = 7
   Insn 2403: point = 1854, n_alt = 4
   Insn 2402: point = 1855, n_alt = 3
   Insn 2401: point = 1857, n_alt = 0
   Insn 2400: point = 1859, n_alt = 0
   Insn 2399: point = 1861, n_alt = 0
   Insn 2398: point = 1862, n_alt = 0
   Insn 2397: point = 1864, n_alt = 0
   Insn 2396: point = 1866, n_alt = 0
   Insn 2395: point = 1867, n_alt = 8
	Hard reg 21 is preferable by r2269 with profit 1000
   Insn 2394: point = 1868, n_alt = 0
   Insn 2393: point = 1868, n_alt = -2
   Insn 2392: point = 1869, n_alt = 7
   Insn 2391: point = 1871, n_alt = 4
   Insn 2390: point = 1872, n_alt = 3
   Insn 2389: point = 1874, n_alt = 0
   Insn 2388: point = 1876, n_alt = 0
   Insn 2387: point = 1878, n_alt = 0
   Insn 2386: point = 1879, n_alt = 0
   Insn 2385: point = 1881, n_alt = 0
   Insn 2384: point = 1883, n_alt = 0
   Insn 2383: point = 1885, n_alt = 0
   Insn 2382: point = 1886, n_alt = 1
   Insn 2381: point = 1888, n_alt = 0
   Insn 2380: point = 1890, n_alt = 0
   Insn 2379: point = 1892, n_alt = 0
   Insn 4486: point = 1893, n_alt = 8
	   Creating copy r2251->r2270@1000
   Insn 2378: point = 1895, n_alt = 1
   Insn 4485: point = 1896, n_alt = -2
	Hard reg 22 is preferable by r2251 with profit 1000
   Insn 2377: point = 1898, n_alt = 7
   Insn 2376: point = 1899, n_alt = 1
   Insn 2375: point = 1901, n_alt = -2
   Insn 2374: point = 1903, n_alt = 1
   Insn 2373: point = 1905, n_alt = 7
   Insn 2372: point = 1906, n_alt = 1
   Insn 2371: point = 1908, n_alt = 7
   Insn 2370: point = 1909, n_alt = 7
   Insn 2369: point = 1911, n_alt = 0
   Insn 2368: point = 1913, n_alt = 4
   Insn 2367: point = 1914, n_alt = 3
   Insn 2366: point = 1916, n_alt = 0
   Insn 2365: point = 1918, n_alt = 0
   Insn 2364: point = 1920, n_alt = 0
   Insn 2363: point = 1921, n_alt = 0
   Insn 2362: point = 1923, n_alt = 0
   Insn 2361: point = 1925, n_alt = 0
   Insn 2360: point = 1927, n_alt = 0
   Insn 2359: point = 1928, n_alt = 1
   Insn 2358: point = 1930, n_alt = 0
   Insn 2357: point = 1932, n_alt = 0
   Insn 2356: point = 1934, n_alt = 0
   Insn 2355: point = 1935, n_alt = 1
   Insn 2354: point = 1937, n_alt = 7
   Insn 2353: point = 1939, n_alt = 0
   Insn 2352: point = 1941, n_alt = 4
   Insn 2351: point = 1942, n_alt = 3
   Insn 2350: point = 1944, n_alt = 0
   Insn 2349: point = 1946, n_alt = 0
   Insn 2348: point = 1948, n_alt = 0
   Insn 2347: point = 1949, n_alt = 0
   Insn 2346: point = 1951, n_alt = 0
   Insn 2345: point = 1953, n_alt = 0
   Insn 2344: point = 1955, n_alt = 0
   Insn 2343: point = 1956, n_alt = 1
   Insn 2342: point = 1958, n_alt = 0
   Insn 2341: point = 1960, n_alt = 0
   Insn 2340: point = 1962, n_alt = 0
   Insn 2339: point = 1963, n_alt = 7
   Insn 2338: point = 1965, n_alt = 0
   Insn 2337: point = 1967, n_alt = 4
   Insn 2336: point = 1968, n_alt = 3
   Insn 2335: point = 1970, n_alt = 0
   Insn 2334: point = 1972, n_alt = 0
   Insn 2333: point = 1974, n_alt = 0
   Insn 2332: point = 1975, n_alt = 0
   Insn 2331: point = 1977, n_alt = 0
   Insn 2330: point = 1979, n_alt = 0
   Insn 2329: point = 1981, n_alt = 0
   Insn 2328: point = 1982, n_alt = 1
   Insn 2327: point = 1984, n_alt = 0
   Insn 2326: point = 1986, n_alt = 0
   Insn 2325: point = 1988, n_alt = 0
   Insn 2324: point = 1989, n_alt = 8
   Insn 2323: point = 1990, n_alt = 4
   Insn 2322: point = 1991, n_alt = 1
   Insn 2321: point = 1993, n_alt = 3
   Insn 2320: point = 1995, n_alt = 0
   Insn 2319: point = 1997, n_alt = 0
   Insn 2318: point = 1999, n_alt = 0
   Insn 2317: point = 2000, n_alt = 0
   Insn 2316: point = 2002, n_alt = 0
   Insn 2315: point = 2004, n_alt = 0
   Insn 2314: point = 2005, n_alt = 7
   Insn 2313: point = 2007, n_alt = 4
   Insn 2312: point = 2008, n_alt = 1
   Insn 2311: point = 2010, n_alt = 7
   Insn 2310: point = 2012, n_alt = 0
   Insn 2309: point = 2014, n_alt = 4
   Insn 2308: point = 2015, n_alt = 3
   Insn 2307: point = 2017, n_alt = 0
   Insn 2306: point = 2019, n_alt = 0
   Insn 2305: point = 2021, n_alt = 0
   Insn 2304: point = 2022, n_alt = 0
   Insn 2303: point = 2024, n_alt = 0
   Insn 2302: point = 2026, n_alt = 0
   Insn 2301: point = 2027, n_alt = 7
   Insn 2300: point = 2029, n_alt = 0
   Insn 2299: point = 2031, n_alt = 4
   Insn 2298: point = 2032, n_alt = 3
   Insn 2297: point = 2034, n_alt = 0
   Insn 2296: point = 2036, n_alt = 0
   Insn 2295: point = 2037, n_alt = 1
   Insn 2294: point = 2038, n_alt = 0
   Insn 2293: point = 2040, n_alt = 7
  BB 165
   Insn 2221: point = 2042, n_alt = -1
   Insn 2220: point = 2042, n_alt = 1
   Insn 2219: point = 2043, n_alt = 7
  BB 164
   Insn 2218: point = 2045, n_alt = -1
   Insn 2217: point = 2045, n_alt = 1
   Insn 2216: point = 2046, n_alt = 7
  BB 162
   Insn 2153: point = 2048, n_alt = -1
   Insn 2152: point = 2048, n_alt = 1
   Insn 2151: point = 2049, n_alt = 7
  BB 161
   Insn 2150: point = 2051, n_alt = -1
   Insn 2149: point = 2051, n_alt = 1
   Insn 2148: point = 2052, n_alt = 7
  BB 333
   Insn 4383: point = 2054, n_alt = -1
  BB 154
   Insn 2066: point = 2055, n_alt = -1
   Insn 2065: point = 2055, n_alt = 0
   Insn 2064: point = 2056, n_alt = 0
   Insn 2063: point = 2058, n_alt = 0
   Insn 2062: point = 2059, n_alt = 0
  BB 160
   Insn 4221: point = 2060, n_alt = -1
   Insn 2142: point = 2060, n_alt = 1
  BB 159
   Insn 2139: point = 2061, n_alt = 1
   Insn 2138: point = 2062, n_alt = 4
   Insn 2137: point = 2063, n_alt = 3
   Insn 2136: point = 2065, n_alt = 0
   Insn 2135: point = 2067, n_alt = 1
   Insn 2134: point = 2069, n_alt = 0
   Insn 2133: point = 2070, n_alt = 0
   Insn 2132: point = 2072, n_alt = 1
   Insn 2131: point = 2074, n_alt = 0
  BB 158
   Insn 2128: point = 2076, n_alt = 8
   Insn 2127: point = 2077, n_alt = 7
   Insn 2126: point = 2079, n_alt = 0
   Insn 2125: point = 2081, n_alt = 4
   Insn 2124: point = 2082, n_alt = 3
   Insn 2123: point = 2084, n_alt = 0
   Insn 2122: point = 2086, n_alt = 1
   Insn 2121: point = 2088, n_alt = 0
   Insn 2120: point = 2089, n_alt = 0
   Insn 2119: point = 2091, n_alt = 1
   Insn 2118: point = 2093, n_alt = 0
  BB 157
   Insn 2113: point = 2095, n_alt = -1
   Insn 2112: point = 2095, n_alt = 1
   Insn 2111: point = 2096, n_alt = 7
   Insn 2110: point = 2097, n_alt = 7
   Insn 2109: point = 2099, n_alt = 0
   Insn 2108: point = 2101, n_alt = 4
   Insn 2107: point = 2102, n_alt = 3
   Insn 2106: point = 2104, n_alt = 0
   Insn 2105: point = 2106, n_alt = 1
   Insn 2104: point = 2108, n_alt = 0
   Insn 2103: point = 2109, n_alt = 0
   Insn 2102: point = 2111, n_alt = 1
   Insn 2101: point = 2113, n_alt = 0
   Insn 2100: point = 2114, n_alt = 8
   Insn 2099: point = 2115, n_alt = 2
  BB 156
   Insn 2097: point = 2117, n_alt = -1
   Insn 2096: point = 2117, n_alt = 0
   Insn 2095: point = 2118, n_alt = 0
   Insn 2094: point = 2120, n_alt = 4
   Insn 2093: point = 2121, n_alt = 3
   Insn 2092: point = 2123, n_alt = 0
   Insn 2091: point = 2125, n_alt = 1
   Insn 2090: point = 2127, n_alt = 0
   Insn 2089: point = 2128, n_alt = 0
   Insn 2088: point = 2130, n_alt = 1
   Insn 2087: point = 2132, n_alt = 0
  BB 155
   Insn 2082: point = 2134, n_alt = -1
   Insn 2081: point = 2134, n_alt = 1
   Insn 2080: point = 2135, n_alt = 7
   Insn 2079: point = 2137, n_alt = 4
   Insn 2078: point = 2138, n_alt = 3
   Insn 2077: point = 2140, n_alt = 0
   Insn 2076: point = 2142, n_alt = 1
   Insn 2075: point = 2144, n_alt = 0
   Insn 2074: point = 2145, n_alt = 0
   Insn 2073: point = 2147, n_alt = 0
   Insn 2072: point = 2149, n_alt = 1
   Insn 2071: point = 2151, n_alt = 0
   Insn 2070: point = 2152, n_alt = 1
   Insn 2069: point = 2154, n_alt = 1
   Insn 2068: point = 2156, n_alt = 0
  BB 153
   Insn 2060: point = 2158, n_alt = 1
   Insn 2059: point = 2158, n_alt = 0
   Insn 2058: point = 2159, n_alt = 1
   Insn 2057: point = 2160, n_alt = 0
   Insn 2056: point = 2162, n_alt = 0
   Insn 2055: point = 2164, n_alt = 4
   Insn 2054: point = 2165, n_alt = 3
   Insn 2053: point = 2167, n_alt = 0
   Insn 2052: point = 2169, n_alt = 0
   Insn 2051: point = 2171, n_alt = 0
   Insn 2050: point = 2172, n_alt = 0
   Insn 2049: point = 2174, n_alt = 0
   Insn 2048: point = 2176, n_alt = 0
   Insn 2047: point = 2177, n_alt = 8
   Insn 2046: point = 2178, n_alt = 7
  BB 151
   Insn 2038: point = 2180, n_alt = 1
  BB 149
   Insn 2030: point = 2181, n_alt = 1
   Insn 2029: point = 2182, n_alt = 0
   Insn 2028: point = 2183, n_alt = 0
  BB 329
   Insn 4371: point = 2184, n_alt = -1
  BB 144
   Insn 1997: point = 2184, n_alt = -1
   Insn 1996: point = 2184, n_alt = 0
   Insn 1995: point = 2185, n_alt = 0
   Insn 1994: point = 2187, n_alt = 0
   Insn 1993: point = 2188, n_alt = 0
  BB 148
   Insn 4219: point = 2189, n_alt = -1
   Insn 2022: point = 2189, n_alt = 1
  BB 330
   Insn 4374: point = 2190, n_alt = -1
  BB 146
   Insn 2005: point = 2191, n_alt = -1
   Insn 2004: point = 2191, n_alt = 0
   Insn 2003: point = 2192, n_alt = 0
   Insn 2002: point = 2194, n_alt = 0
   Insn 2001: point = 2195, n_alt = 0
  BB 147
   Insn 4217: point = 2196, n_alt = -1
   Insn 2016: point = 2196, n_alt = 1
   Insn 2015: point = 2196, n_alt = 1
   Insn 2014: point = 2197, n_alt = 4
   Insn 2013: point = 2198, n_alt = 3
   Insn 2012: point = 2200, n_alt = 0
   Insn 2011: point = 2202, n_alt = 1
   Insn 2010: point = 2204, n_alt = 0
   Insn 2009: point = 2205, n_alt = 0
   Insn 2008: point = 2207, n_alt = 1
   Insn 2007: point = 2209, n_alt = 0
  BB 145
   Insn 1999: point = 2211, n_alt = 1
  BB 143
   Insn 1991: point = 2212, n_alt = 1
   Insn 1990: point = 2213, n_alt = 0
   Insn 1989: point = 2214, n_alt = 0
   Insn 1988: point = 2215, n_alt = 8
   Insn 1987: point = 2216, n_alt = 7
  BB 142
   Insn 1984: point = 2217, n_alt = -1
   Insn 1983: point = 2217, n_alt = 0
   Insn 1982: point = 2218, n_alt = 0
  BB 141
   Insn 1980: point = 2219, n_alt = -1
   Insn 1979: point = 2219, n_alt = 0
   Insn 1978: point = 2220, n_alt = 0
  BB 140
   Insn 1976: point = 2221, n_alt = -1
   Insn 1975: point = 2221, n_alt = 0
   Insn 1974: point = 2222, n_alt = 0
  BB 139
   Insn 1971: point = 2223, n_alt = 0
   Insn 1970: point = 2223, n_alt = 3
   Insn 1969: point = 2223, n_alt = 2
   Insn 1968: point = 2223, n_alt = 2
   Insn 1967: point = 2223, n_alt = -2
   Insn 1966: point = 2224, n_alt = -2
   Insn 1965: point = 2225, n_alt = -2
   Insn 1964: point = 2226, n_alt = -2
   Insn 1963: point = 2227, n_alt = 3
   Insn 1962: point = 2228, n_alt = 3
   Insn 1961: point = 2229, n_alt = 3
   Insn 1960: point = 2230, n_alt = 3
   Insn 1959: point = 2232, n_alt = 0
   Insn 1958: point = 2234, n_alt = 0
   Insn 1957: point = 2236, n_alt = -2
   Insn 1956: point = 2238, n_alt = -2
   Insn 1955: point = 2240, n_alt = 0
   Insn 1954: point = 2242, n_alt = 0
   Insn 1953: point = 2243, n_alt = -2
   Insn 1952: point = 2245, n_alt = 0
   Insn 1951: point = 2247, n_alt = -2
   Insn 1950: point = 2248, n_alt = 3
   Insn 1949: point = 2250, n_alt = 0
   Insn 1948: point = 2252, n_alt = 0
   Insn 1947: point = 2253, n_alt = 0
   Insn 1946: point = 2254, n_alt = 1
   Insn 4484: point = 2255, n_alt = -2
	Hard reg 1 is preferable by r2250 with profit 1000
   Insn 1945: point = 2257, n_alt = 0
   Insn 4483: point = 2258, n_alt = -2
	Hard reg 1 is preferable by r2250 with profit 2000
   Insn 1944: point = 2260, n_alt = 2
   Insn 1943: point = 2261, n_alt = 2
   Insn 1942: point = 2262, n_alt = 2
   Insn 1941: point = 2263, n_alt = 0
   Insn 1940: point = 2263, n_alt = 0
   Insn 1939: point = 2263, n_alt = 3
   Insn 1938: point = 2263, n_alt = 2
   Insn 1937: point = 2263, n_alt = 2
   Insn 1936: point = 2263, n_alt = 4
   Insn 1935: point = 2263, n_alt = 4
   Insn 1934: point = 2263, n_alt = -2
   Insn 1933: point = 2264, n_alt = -2
   Insn 1932: point = 2265, n_alt = 0
   Insn 1931: point = 2265, n_alt = 0
   Insn 1930: point = 2265, n_alt = 3
   Insn 1929: point = 2266, n_alt = 3
  BB 138
   Insn 1927: point = 2267, n_alt = -1
   Insn 1926: point = 2267, n_alt = 0
   Insn 1925: point = 2268, n_alt = 0
  BB 137
   Insn 1922: point = 2269, n_alt = 0
   Insn 1921: point = 2269, n_alt = 3
   Insn 1920: point = 2269, n_alt = 2
   Insn 1919: point = 2269, n_alt = 2
   Insn 1918: point = 2269, n_alt = -2
   Insn 1917: point = 2270, n_alt = -2
   Insn 1916: point = 2271, n_alt = -2
   Insn 1915: point = 2272, n_alt = -2
   Insn 1914: point = 2273, n_alt = 3
   Insn 1913: point = 2274, n_alt = 3
   Insn 1912: point = 2275, n_alt = 3
   Insn 1911: point = 2276, n_alt = 3
   Insn 1910: point = 2278, n_alt = 0
   Insn 1909: point = 2280, n_alt = 0
   Insn 1908: point = 2282, n_alt = -2
   Insn 1907: point = 2284, n_alt = -2
   Insn 1906: point = 2286, n_alt = 0
   Insn 1905: point = 2288, n_alt = 0
   Insn 1904: point = 2289, n_alt = -2
   Insn 1903: point = 2291, n_alt = 0
   Insn 1902: point = 2293, n_alt = -2
   Insn 1901: point = 2294, n_alt = 3
   Insn 1900: point = 2296, n_alt = 0
   Insn 1899: point = 2298, n_alt = 0
   Insn 1898: point = 2299, n_alt = 0
   Insn 1897: point = 2300, n_alt = 1
   Insn 4482: point = 2301, n_alt = -2
	Hard reg 1 is preferable by r2249 with profit 1000
   Insn 1896: point = 2303, n_alt = 0
   Insn 4481: point = 2304, n_alt = -2
	Hard reg 1 is preferable by r2249 with profit 2000
   Insn 1895: point = 2306, n_alt = 2
   Insn 1894: point = 2307, n_alt = 2
   Insn 1893: point = 2308, n_alt = 2
   Insn 1892: point = 2309, n_alt = 0
   Insn 1891: point = 2309, n_alt = 0
   Insn 1890: point = 2309, n_alt = 3
   Insn 1889: point = 2309, n_alt = 2
   Insn 1888: point = 2309, n_alt = 2
   Insn 1887: point = 2309, n_alt = 4
   Insn 1886: point = 2309, n_alt = 4
   Insn 1885: point = 2309, n_alt = -2
   Insn 1884: point = 2310, n_alt = -2
   Insn 1883: point = 2311, n_alt = 0
   Insn 1882: point = 2311, n_alt = 0
   Insn 1881: point = 2311, n_alt = 3
   Insn 1880: point = 2312, n_alt = 3
  BB 136
   Insn 1878: point = 2313, n_alt = -1
   Insn 1877: point = 2313, n_alt = 0
   Insn 1876: point = 2314, n_alt = 0
  BB 326
   Insn 4362: point = 2315, n_alt = -1
  BB 116
   Insn 1511: point = 2315, n_alt = -1
   Insn 1510: point = 2315, n_alt = 0
   Insn 1509: point = 2316, n_alt = 0
   Insn 1508: point = 2318, n_alt = 0
   Insn 1507: point = 2319, n_alt = 0
  BB 135
   Insn 4215: point = 2320, n_alt = -1
   Insn 1870: point = 2320, n_alt = 1
  BB 327
   Insn 4365: point = 2321, n_alt = -1
  BB 118
   Insn 1519: point = 2322, n_alt = -1
   Insn 1518: point = 2322, n_alt = 0
   Insn 1517: point = 2323, n_alt = 0
   Insn 1516: point = 2325, n_alt = 0
   Insn 1515: point = 2326, n_alt = 0
  BB 134
   Insn 4213: point = 2327, n_alt = -1
   Insn 1864: point = 2327, n_alt = 1
  BB 132
   Insn 4211: point = 2328, n_alt = -1
   Insn 1714: point = 2328, n_alt = 8
   Insn 1713: point = 2329, n_alt = 4
   Insn 1712: point = 2330, n_alt = 7
   Insn 1711: point = 2332, n_alt = 0
   Insn 1710: point = 2334, n_alt = 4
   Insn 1709: point = 2335, n_alt = 3
   Insn 1708: point = 2337, n_alt = 0
   Insn 1707: point = 2339, n_alt = 0
   Insn 1706: point = 2341, n_alt = 0
   Insn 1705: point = 2342, n_alt = 0
   Insn 1704: point = 2344, n_alt = 0
   Insn 1703: point = 2346, n_alt = 0
   Insn 1702: point = 2347, n_alt = 3
   Insn 1701: point = 2349, n_alt = 0
   Insn 1700: point = 2351, n_alt = 0
   Insn 1699: point = 2353, n_alt = 0
   Insn 1698: point = 2354, n_alt = 0
   Insn 1697: point = 2356, n_alt = 0
   Insn 1696: point = 2358, n_alt = 0
   Insn 1695: point = 2359, n_alt = 8
   Insn 1694: point = 2360, n_alt = 4
   Insn 1693: point = 2361, n_alt = 1
   Insn 1692: point = 2363, n_alt = 3
   Insn 1691: point = 2365, n_alt = 0
   Insn 1690: point = 2367, n_alt = 0
   Insn 1689: point = 2369, n_alt = 0
   Insn 1688: point = 2370, n_alt = 0
   Insn 1687: point = 2372, n_alt = 0
   Insn 1686: point = 2374, n_alt = 0
   Insn 1685: point = 2375, n_alt = 7
   Insn 1684: point = 2377, n_alt = 4
   Insn 1683: point = 2378, n_alt = 1
   Insn 1682: point = 2380, n_alt = 7
   Insn 1681: point = 2382, n_alt = 0
   Insn 1680: point = 2384, n_alt = 4
   Insn 1679: point = 2385, n_alt = 3
   Insn 1678: point = 2387, n_alt = 0
   Insn 1677: point = 2389, n_alt = 0
   Insn 1676: point = 2391, n_alt = 0
   Insn 1675: point = 2392, n_alt = 0
   Insn 1674: point = 2394, n_alt = 0
   Insn 1673: point = 2396, n_alt = 0
   Insn 1672: point = 2397, n_alt = 7
   Insn 1671: point = 2399, n_alt = 0
   Insn 1670: point = 2401, n_alt = 4
   Insn 1669: point = 2402, n_alt = 3
   Insn 1668: point = 2404, n_alt = 0
   Insn 1667: point = 2406, n_alt = 0
   Insn 1666: point = 2408, n_alt = 7
  BB 129
   Insn 4209: point = 2410, n_alt = -1
   Insn 1651: point = 2410, n_alt = 8
   Insn 1650: point = 2411, n_alt = 4
   Insn 1649: point = 2412, n_alt = 7
   Insn 1648: point = 2413, n_alt = 3
   Insn 1647: point = 2415, n_alt = 0
   Insn 1646: point = 2417, n_alt = 0
   Insn 1645: point = 2419, n_alt = 0
   Insn 1644: point = 2420, n_alt = 0
   Insn 1643: point = 2422, n_alt = 0
   Insn 1642: point = 2424, n_alt = 0
   Insn 1641: point = 2425, n_alt = 8
   Insn 1640: point = 2426, n_alt = 4
   Insn 1639: point = 2427, n_alt = 7
   Insn 1638: point = 2428, n_alt = 3
   Insn 1637: point = 2430, n_alt = 0
   Insn 1636: point = 2432, n_alt = 0
   Insn 1635: point = 2434, n_alt = 0
   Insn 1634: point = 2435, n_alt = 0
   Insn 1633: point = 2437, n_alt = 0
   Insn 1632: point = 2439, n_alt = 0
  BB 133
   Insn 1861: point = 2441, n_alt = 8
   Insn 1860: point = 2442, n_alt = 4
   Insn 1859: point = 2443, n_alt = 1
   Insn 1858: point = 2445, n_alt = 3
   Insn 1857: point = 2447, n_alt = 0
   Insn 1856: point = 2449, n_alt = 0
   Insn 1855: point = 2451, n_alt = 0
   Insn 1854: point = 2452, n_alt = 0
   Insn 1853: point = 2454, n_alt = 0
   Insn 1852: point = 2456, n_alt = 0
   Insn 1851: point = 2457, n_alt = 7
   Insn 1850: point = 2459, n_alt = 0
   Insn 1849: point = 2461, n_alt = 4
   Insn 1848: point = 2462, n_alt = 3
   Insn 1847: point = 2464, n_alt = 0
   Insn 1846: point = 2466, n_alt = 0
   Insn 1845: point = 2468, n_alt = 0
   Insn 1844: point = 2469, n_alt = 0
   Insn 1843: point = 2471, n_alt = 0
   Insn 1842: point = 2473, n_alt = 0
   Insn 1841: point = 2475, n_alt = 0
   Insn 1840: point = 2476, n_alt = 1
   Insn 1839: point = 2478, n_alt = 0
   Insn 1838: point = 2480, n_alt = 0
   Insn 1837: point = 2482, n_alt = 0
   Insn 4480: point = 2483, n_alt = -2
	Hard reg 22 is preferable by r2248 with profit 1000
   Insn 1836: point = 2485, n_alt = 1
   Insn 4479: point = 2486, n_alt = 7
	   Creating copy r2248<-r2268@1000
   Insn 1835: point = 2488, n_alt = -2
   Insn 4478: point = 2490, n_alt = -2
	Hard reg 21 is preferable by r2247 with profit 1000
   Insn 1834: point = 2492, n_alt = 2
   Insn 4477: point = 2493, n_alt = 7
	   Creating copy r2247<-r2267@1000
   Insn 1833: point = 2495, n_alt = -2
   Insn 1832: point = 2496, n_alt = 0
   Insn 1831: point = 2496, n_alt = -2
   Insn 1830: point = 2497, n_alt = 7
   Insn 1829: point = 2499, n_alt = 4
   Insn 1828: point = 2500, n_alt = 3
   Insn 1827: point = 2502, n_alt = 0
   Insn 1826: point = 2504, n_alt = 0
   Insn 1825: point = 2506, n_alt = 0
   Insn 1824: point = 2507, n_alt = 0
   Insn 1823: point = 2509, n_alt = 0
   Insn 1822: point = 2511, n_alt = 0
   Insn 1821: point = 2512, n_alt = 8
	Hard reg 21 is preferable by r2267 with profit 1000
   Insn 1820: point = 2513, n_alt = 0
   Insn 1819: point = 2513, n_alt = -2
   Insn 1818: point = 2514, n_alt = 7
   Insn 1817: point = 2516, n_alt = 4
   Insn 1816: point = 2517, n_alt = 3
   Insn 1815: point = 2519, n_alt = 0
   Insn 1814: point = 2521, n_alt = 0
   Insn 1813: point = 2523, n_alt = 0
   Insn 1812: point = 2524, n_alt = 0
   Insn 1811: point = 2526, n_alt = 0
   Insn 1810: point = 2528, n_alt = 0
   Insn 1809: point = 2530, n_alt = 0
   Insn 1808: point = 2531, n_alt = 1
   Insn 1807: point = 2533, n_alt = 0
   Insn 1806: point = 2535, n_alt = 0
   Insn 1805: point = 2537, n_alt = 0
   Insn 4476: point = 2538, n_alt = 8
	   Creating copy r2246->r2268@1000
   Insn 1804: point = 2540, n_alt = 1
   Insn 4475: point = 2541, n_alt = -2
	Hard reg 22 is preferable by r2246 with profit 1000
   Insn 1803: point = 2543, n_alt = 7
   Insn 1802: point = 2544, n_alt = 1
   Insn 1801: point = 2546, n_alt = -2
   Insn 1800: point = 2548, n_alt = 1
   Insn 1799: point = 2550, n_alt = 7
   Insn 1798: point = 2551, n_alt = 1
   Insn 1797: point = 2553, n_alt = 7
   Insn 1796: point = 2554, n_alt = 7
   Insn 1795: point = 2556, n_alt = 0
   Insn 1794: point = 2558, n_alt = 4
   Insn 1793: point = 2559, n_alt = 3
   Insn 1792: point = 2561, n_alt = 0
   Insn 1791: point = 2563, n_alt = 0
   Insn 1790: point = 2565, n_alt = 0
   Insn 1789: point = 2566, n_alt = 0
   Insn 1788: point = 2568, n_alt = 0
   Insn 1787: point = 2570, n_alt = 0
   Insn 1786: point = 2572, n_alt = 0
   Insn 1785: point = 2573, n_alt = 1
   Insn 1784: point = 2575, n_alt = 0
   Insn 1783: point = 2577, n_alt = 0
   Insn 1782: point = 2579, n_alt = 0
   Insn 1781: point = 2580, n_alt = 1
   Insn 1780: point = 2582, n_alt = 7
   Insn 1779: point = 2584, n_alt = 0
   Insn 1778: point = 2586, n_alt = 4
   Insn 1777: point = 2587, n_alt = 3
   Insn 1776: point = 2589, n_alt = 0
   Insn 1775: point = 2591, n_alt = 0
   Insn 1774: point = 2593, n_alt = 0
   Insn 1773: point = 2594, n_alt = 0
   Insn 1772: point = 2596, n_alt = 0
   Insn 1771: point = 2598, n_alt = 0
   Insn 1770: point = 2600, n_alt = 0
   Insn 1769: point = 2601, n_alt = 1
   Insn 1768: point = 2603, n_alt = 0
   Insn 1767: point = 2605, n_alt = 0
   Insn 1766: point = 2607, n_alt = 0
   Insn 1765: point = 2608, n_alt = 7
   Insn 1764: point = 2610, n_alt = 0
   Insn 1763: point = 2612, n_alt = 4
   Insn 1762: point = 2613, n_alt = 3
   Insn 1761: point = 2615, n_alt = 0
   Insn 1760: point = 2617, n_alt = 0
   Insn 1759: point = 2619, n_alt = 0
   Insn 1758: point = 2620, n_alt = 0
   Insn 1757: point = 2622, n_alt = 0
   Insn 1756: point = 2624, n_alt = 0
   Insn 1755: point = 2626, n_alt = 0
   Insn 1754: point = 2627, n_alt = 1
   Insn 1753: point = 2629, n_alt = 0
   Insn 1752: point = 2631, n_alt = 0
   Insn 1751: point = 2633, n_alt = 0
   Insn 1750: point = 2634, n_alt = 8
   Insn 1749: point = 2635, n_alt = 4
   Insn 1748: point = 2636, n_alt = 1
   Insn 1747: point = 2638, n_alt = 3
   Insn 1746: point = 2640, n_alt = 0
   Insn 1745: point = 2642, n_alt = 0
   Insn 1744: point = 2644, n_alt = 0
   Insn 1743: point = 2645, n_alt = 0
   Insn 1742: point = 2647, n_alt = 0
   Insn 1741: point = 2649, n_alt = 0
   Insn 1740: point = 2650, n_alt = 7
   Insn 1739: point = 2652, n_alt = 4
   Insn 1738: point = 2653, n_alt = 1
   Insn 1737: point = 2655, n_alt = 7
   Insn 1736: point = 2657, n_alt = 0
   Insn 1735: point = 2659, n_alt = 4
   Insn 1734: point = 2660, n_alt = 3
   Insn 1733: point = 2662, n_alt = 0
   Insn 1732: point = 2664, n_alt = 0
   Insn 1731: point = 2666, n_alt = 0
   Insn 1730: point = 2667, n_alt = 0
   Insn 1729: point = 2669, n_alt = 0
   Insn 1728: point = 2671, n_alt = 0
   Insn 1727: point = 2672, n_alt = 7
   Insn 1726: point = 2674, n_alt = 0
   Insn 1725: point = 2676, n_alt = 4
   Insn 1724: point = 2677, n_alt = 3
   Insn 1723: point = 2679, n_alt = 0
   Insn 1722: point = 2681, n_alt = 0
   Insn 1721: point = 2682, n_alt = 1
   Insn 1720: point = 2683, n_alt = 0
   Insn 1719: point = 2685, n_alt = 7
  BB 131
   Insn 1661: point = 2687, n_alt = -1
   Insn 1660: point = 2687, n_alt = 1
   Insn 1659: point = 2688, n_alt = 7
  BB 130
   Insn 1658: point = 2690, n_alt = -1
   Insn 1657: point = 2690, n_alt = 1
   Insn 1656: point = 2691, n_alt = 7
  BB 128
   Insn 1627: point = 2693, n_alt = -1
   Insn 1626: point = 2693, n_alt = 1
   Insn 1625: point = 2694, n_alt = 7
  BB 127
   Insn 1624: point = 2696, n_alt = -1
   Insn 1623: point = 2696, n_alt = 1
   Insn 1622: point = 2697, n_alt = 7
  BB 328
   Insn 4368: point = 2699, n_alt = -1
  BB 120
   Insn 1541: point = 2700, n_alt = -1
   Insn 1540: point = 2700, n_alt = 0
   Insn 1539: point = 2701, n_alt = 0
   Insn 1538: point = 2703, n_alt = 0
   Insn 1537: point = 2704, n_alt = 1
  BB 126
   Insn 4207: point = 2705, n_alt = -1
   Insn 1616: point = 2705, n_alt = 1
  BB 125
   Insn 1613: point = 2706, n_alt = 1
   Insn 1612: point = 2707, n_alt = 4
   Insn 1611: point = 2708, n_alt = 3
   Insn 1610: point = 2710, n_alt = 0
   Insn 1609: point = 2712, n_alt = 0
   Insn 1608: point = 2714, n_alt = 0
   Insn 1607: point = 2715, n_alt = 0
   Insn 1606: point = 2717, n_alt = 0
   Insn 1605: point = 2719, n_alt = 0
  BB 124
   Insn 1602: point = 2721, n_alt = 8
   Insn 1601: point = 2722, n_alt = 7
   Insn 1600: point = 2724, n_alt = 0
   Insn 1599: point = 2726, n_alt = 4
   Insn 1598: point = 2727, n_alt = 3
   Insn 1597: point = 2729, n_alt = 0
   Insn 1596: point = 2731, n_alt = 0
   Insn 1595: point = 2733, n_alt = 0
   Insn 1594: point = 2734, n_alt = 0
   Insn 1593: point = 2736, n_alt = 0
   Insn 1592: point = 2738, n_alt = 0
  BB 123
   Insn 1587: point = 2740, n_alt = -1
   Insn 1586: point = 2740, n_alt = 1
   Insn 1585: point = 2741, n_alt = 7
   Insn 1584: point = 2743, n_alt = 0
   Insn 1583: point = 2745, n_alt = 4
   Insn 1582: point = 2746, n_alt = 3
   Insn 1581: point = 2748, n_alt = 0
   Insn 1580: point = 2750, n_alt = 0
   Insn 1579: point = 2752, n_alt = 0
   Insn 1578: point = 2753, n_alt = 0
   Insn 1577: point = 2755, n_alt = 0
   Insn 1576: point = 2757, n_alt = 0
   Insn 1575: point = 2758, n_alt = 8
   Insn 1574: point = 2759, n_alt = 2
  BB 122
   Insn 1572: point = 2761, n_alt = -1
   Insn 1571: point = 2761, n_alt = 0
   Insn 1570: point = 2762, n_alt = 0
   Insn 1569: point = 2764, n_alt = 4
   Insn 1568: point = 2765, n_alt = 3
   Insn 1567: point = 2767, n_alt = 0
   Insn 1566: point = 2769, n_alt = 0
   Insn 1565: point = 2771, n_alt = 0
   Insn 1564: point = 2772, n_alt = 0
   Insn 1563: point = 2774, n_alt = 0
   Insn 1562: point = 2776, n_alt = 0
  BB 121
   Insn 1557: point = 2778, n_alt = -1
   Insn 1556: point = 2778, n_alt = 1
   Insn 1555: point = 2779, n_alt = 7
   Insn 1554: point = 2781, n_alt = 4
   Insn 1553: point = 2782, n_alt = 3
   Insn 1552: point = 2784, n_alt = 0
   Insn 1551: point = 2786, n_alt = 0
   Insn 1550: point = 2788, n_alt = 0
   Insn 1549: point = 2789, n_alt = 0
   Insn 1548: point = 2791, n_alt = 0
   Insn 1547: point = 2793, n_alt = 0
   Insn 1546: point = 2795, n_alt = 0
   Insn 1545: point = 2796, n_alt = 1
   Insn 1544: point = 2798, n_alt = 0
   Insn 1543: point = 2800, n_alt = 0
  BB 119
   Insn 1535: point = 2802, n_alt = 1
   Insn 1534: point = 2803, n_alt = 0
   Insn 1533: point = 2804, n_alt = 8
   Insn 1532: point = 2805, n_alt = 7
   Insn 1531: point = 2806, n_alt = 1
   Insn 1530: point = 2807, n_alt = 0
   Insn 1529: point = 2809, n_alt = 0
   Insn 1528: point = 2811, n_alt = 4
   Insn 1527: point = 2812, n_alt = 3
   Insn 1526: point = 2814, n_alt = 0
   Insn 1525: point = 2816, n_alt = 0
   Insn 1524: point = 2818, n_alt = 0
   Insn 1523: point = 2819, n_alt = 0
   Insn 1522: point = 2821, n_alt = 0
   Insn 1521: point = 2823, n_alt = 0
  BB 117
   Insn 1513: point = 2825, n_alt = 1
  BB 115
   Insn 1505: point = 2826, n_alt = 1
   Insn 1504: point = 2827, n_alt = 0
   Insn 1503: point = 2828, n_alt = 0
  BB 324
   Insn 4356: point = 2829, n_alt = -1
  BB 110
   Insn 1452: point = 2829, n_alt = -1
   Insn 1451: point = 2829, n_alt = 0
   Insn 1450: point = 2830, n_alt = 0
   Insn 1449: point = 2832, n_alt = 0
   Insn 1448: point = 2833, n_alt = 0
  BB 114
   Insn 4205: point = 2834, n_alt = -1
   Insn 1497: point = 2834, n_alt = 1
  BB 325
   Insn 4359: point = 2835, n_alt = -1
  BB 112
   Insn 1460: point = 2836, n_alt = -1
   Insn 1459: point = 2836, n_alt = 0
   Insn 1458: point = 2837, n_alt = 0
   Insn 1457: point = 2839, n_alt = 0
   Insn 1456: point = 2840, n_alt = 0
  BB 113
   Insn 4203: point = 2841, n_alt = -1
   Insn 1491: point = 2841, n_alt = 1
   Insn 1490: point = 2841, n_alt = 8
   Insn 1489: point = 2842, n_alt = 4
   Insn 1488: point = 2843, n_alt = 7
   Insn 1487: point = 2844, n_alt = 3
   Insn 1486: point = 2846, n_alt = 0
   Insn 1485: point = 2848, n_alt = 1
   Insn 1484: point = 2850, n_alt = 0
   Insn 1483: point = 2851, n_alt = 0
   Insn 1482: point = 2853, n_alt = 1
   Insn 1481: point = 2855, n_alt = 0
   Insn 1480: point = 2856, n_alt = 8
   Insn 1479: point = 2857, n_alt = 4
   Insn 1478: point = 2858, n_alt = 7
   Insn 1477: point = 2859, n_alt = 3
   Insn 1476: point = 2861, n_alt = 0
   Insn 1475: point = 2863, n_alt = 1
   Insn 1474: point = 2865, n_alt = 0
   Insn 1473: point = 2866, n_alt = 0
   Insn 1472: point = 2868, n_alt = 1
   Insn 1471: point = 2870, n_alt = 0
   Insn 1470: point = 2871, n_alt = 1
   Insn 1469: point = 2872, n_alt = 4
   Insn 1468: point = 2873, n_alt = 3
   Insn 1467: point = 2875, n_alt = 0
   Insn 1466: point = 2877, n_alt = 1
   Insn 1465: point = 2879, n_alt = 0
   Insn 1464: point = 2880, n_alt = 0
   Insn 1463: point = 2882, n_alt = 1
   Insn 1462: point = 2884, n_alt = 0
  BB 111
   Insn 1454: point = 2886, n_alt = 1
  BB 109
   Insn 1446: point = 2887, n_alt = 1
   Insn 1445: point = 2888, n_alt = 0
   Insn 1444: point = 2889, n_alt = 0
   Insn 1443: point = 2890, n_alt = 8
   Insn 1442: point = 2891, n_alt = 7
  BB 108
   Insn 1439: point = 2892, n_alt = -1
   Insn 1438: point = 2892, n_alt = 0
   Insn 1437: point = 2893, n_alt = 0
  BB 107
   Insn 1435: point = 2894, n_alt = -1
   Insn 1434: point = 2894, n_alt = 0
   Insn 1433: point = 2895, n_alt = 0
  BB 106
   Insn 1430: point = 2896, n_alt = 0
   Insn 1429: point = 2896, n_alt = 3
   Insn 1428: point = 2896, n_alt = 2
   Insn 1427: point = 2896, n_alt = 2
   Insn 1426: point = 2896, n_alt = -2
   Insn 1425: point = 2897, n_alt = -2
   Insn 1424: point = 2898, n_alt = -2
   Insn 1423: point = 2899, n_alt = -2
   Insn 1422: point = 2900, n_alt = 3
   Insn 1421: point = 2901, n_alt = 3
   Insn 1420: point = 2902, n_alt = 3
   Insn 1419: point = 2903, n_alt = 3
   Insn 1418: point = 2905, n_alt = 0
   Insn 1417: point = 2907, n_alt = 0
   Insn 1416: point = 2909, n_alt = -2
   Insn 1415: point = 2911, n_alt = -2
   Insn 1414: point = 2913, n_alt = 0
   Insn 1413: point = 2915, n_alt = 0
   Insn 1412: point = 2916, n_alt = -2
   Insn 1411: point = 2918, n_alt = 0
   Insn 1410: point = 2920, n_alt = -2
   Insn 1409: point = 2921, n_alt = 3
   Insn 1408: point = 2923, n_alt = 0
   Insn 1407: point = 2925, n_alt = 0
   Insn 1406: point = 2926, n_alt = 0
   Insn 1405: point = 2926, n_alt = 3
   Insn 1404: point = 2926, n_alt = -2
   Insn 1403: point = 2927, n_alt = 2
   Insn 1402: point = 2927, n_alt = -2
   Insn 1401: point = 2928, n_alt = -2
   Insn 1400: point = 2929, n_alt = 3
   Insn 1399: point = 2930, n_alt = 3
   Insn 1398: point = 2931, n_alt = 3
  BB 105
   Insn 1395: point = 2932, n_alt = 1
  BB 104
   Insn 1393: point = 2932, n_alt = -1
   Insn 1392: point = 2932, n_alt = 0
   Insn 1391: point = 2933, n_alt = 0
  BB 102
   Insn 4201: point = 2934, n_alt = -1
   Insn 1381: point = 2934, n_alt = 1
   Insn 1380: point = 2935, n_alt = 1
   Insn 1379: point = 2937, n_alt = 0
  BB 103
   Insn 1388: point = 2938, n_alt = 1
   Insn 1387: point = 2939, n_alt = 1
   Insn 1386: point = 2941, n_alt = 0
  BB 101
   Insn 1377: point = 2942, n_alt = -1
   Insn 1376: point = 2942, n_alt = 1
   Insn 1375: point = 2942, n_alt = 1
   Insn 1374: point = 2942, n_alt = 1
   Insn 1373: point = 2943, n_alt = 0
   Insn 1372: point = 2944, n_alt = 1
   Insn 1371: point = 2945, n_alt = 0
   Insn 1370: point = 2947, n_alt = 0
   Insn 1369: point = 2948, n_alt = 1
   Insn 1368: point = 2949, n_alt = 0
   Insn 1367: point = 2951, n_alt = 7
   Insn 1366: point = 2953, n_alt = 4
   Insn 1365: point = 2954, n_alt = 1
   Insn 1364: point = 2955, n_alt = 0
   Insn 1363: point = 2956, n_alt = 0
   Insn 1362: point = 2957, n_alt = 1
   Insn 4474: point = 2958, n_alt = -2
	Hard reg 1 is preferable by r2245 with profit 1000
   Insn 1361: point = 2960, n_alt = 0
   Insn 4473: point = 2961, n_alt = -2
	Hard reg 1 is preferable by r2245 with profit 2000
   Insn 1360: point = 2963, n_alt = 2
   Insn 1359: point = 2964, n_alt = 2
   Insn 1358: point = 2965, n_alt = 2
   Insn 1357: point = 2966, n_alt = 0
   Insn 1356: point = 2966, n_alt = 0
   Insn 1355: point = 2966, n_alt = 3
   Insn 1354: point = 2966, n_alt = 2
   Insn 1353: point = 2966, n_alt = 2
   Insn 1352: point = 2966, n_alt = 4
   Insn 1351: point = 2966, n_alt = 4
   Insn 1350: point = 2966, n_alt = -2
   Insn 1349: point = 2967, n_alt = -2
   Insn 1348: point = 2968, n_alt = 0
   Insn 1347: point = 2968, n_alt = 0
   Insn 1346: point = 2968, n_alt = 3
   Insn 1345: point = 2969, n_alt = 3
  BB 322
   Insn 4350: point = 2970, n_alt = -1
  BB 93
   Insn 1263: point = 2970, n_alt = -1
   Insn 1262: point = 2970, n_alt = 0
   Insn 1261: point = 2971, n_alt = 0
   Insn 1260: point = 2973, n_alt = 0
   Insn 1259: point = 2974, n_alt = 0
  BB 100
   Insn 4199: point = 2975, n_alt = -1
   Insn 1339: point = 2975, n_alt = 1
  BB 323
   Insn 4353: point = 2976, n_alt = -1
  BB 95
   Insn 1271: point = 2977, n_alt = -1
   Insn 1270: point = 2977, n_alt = 0
   Insn 1269: point = 2978, n_alt = 0
   Insn 1268: point = 2980, n_alt = 0
   Insn 1267: point = 2981, n_alt = 0
  BB 99
   Insn 4197: point = 2982, n_alt = -1
   Insn 1333: point = 2982, n_alt = 1
  BB 97
   Insn 4195: point = 2983, n_alt = -1
   Insn 1316: point = 2983, n_alt = 8
   Insn 1315: point = 2984, n_alt = 4
   Insn 1314: point = 2985, n_alt = 2
   Insn 1313: point = 2987, n_alt = 3
   Insn 1312: point = 2989, n_alt = 0
   Insn 1311: point = 2991, n_alt = 1
   Insn 1310: point = 2993, n_alt = 0
   Insn 1309: point = 2994, n_alt = 0
   Insn 1308: point = 2996, n_alt = 1
   Insn 1307: point = 2998, n_alt = 0
   Insn 1306: point = 2999, n_alt = 1
   Insn 1305: point = 3001, n_alt = 0
   Insn 1304: point = 3003, n_alt = 0
   Insn 1303: point = 3005, n_alt = 4
   Insn 1302: point = 3006, n_alt = 3
   Insn 1301: point = 3008, n_alt = 0
   Insn 1300: point = 3010, n_alt = 1
   Insn 1299: point = 3012, n_alt = 0
   Insn 1298: point = 3013, n_alt = 0
   Insn 1297: point = 3015, n_alt = 1
   Insn 1296: point = 3017, n_alt = 0
   Insn 1295: point = 3018, n_alt = 7
   Insn 1294: point = 3020, n_alt = 0
   Insn 1293: point = 3022, n_alt = 4
   Insn 1292: point = 3023, n_alt = 3
   Insn 1291: point = 3025, n_alt = 0
   Insn 1290: point = 3027, n_alt = 1
   Insn 1289: point = 3029, n_alt = 0
   Insn 1288: point = 3030, n_alt = 0
   Insn 1287: point = 3032, n_alt = 1
   Insn 1286: point = 3034, n_alt = 0
  BB 98
   Insn 1330: point = 3036, n_alt = 8
   Insn 1329: point = 3037, n_alt = 7
   Insn 1328: point = 3038, n_alt = 4
   Insn 1327: point = 3039, n_alt = 3
   Insn 1326: point = 3041, n_alt = 0
   Insn 1325: point = 3043, n_alt = 1
   Insn 1324: point = 3045, n_alt = 0
   Insn 1323: point = 3046, n_alt = 0
   Insn 1322: point = 3048, n_alt = 1
   Insn 1321: point = 3050, n_alt = 0
  BB 96
   Insn 1284: point = 3052, n_alt = -1
   Insn 1283: point = 3052, n_alt = 0
   Insn 1282: point = 3053, n_alt = 0
   Insn 1281: point = 3055, n_alt = 0
   Insn 1280: point = 3057, n_alt = 4
   Insn 1279: point = 3058, n_alt = 3
   Insn 1278: point = 3060, n_alt = 0
   Insn 1277: point = 3062, n_alt = 1
   Insn 1276: point = 3064, n_alt = 0
   Insn 1275: point = 3065, n_alt = 0
   Insn 1274: point = 3067, n_alt = 1
   Insn 1273: point = 3069, n_alt = 0
  BB 94
   Insn 1265: point = 3071, n_alt = 1
  BB 92
   Insn 1257: point = 3072, n_alt = 1
   Insn 1256: point = 3073, n_alt = 0
   Insn 1255: point = 3074, n_alt = 0
  BB 91
   Insn 1253: point = 3075, n_alt = -1
   Insn 1252: point = 3075, n_alt = 0
   Insn 1251: point = 3076, n_alt = 0
  BB 90
   Insn 1248: point = 3077, n_alt = 0
   Insn 1247: point = 3077, n_alt = 3
   Insn 1246: point = 3077, n_alt = 2
   Insn 1245: point = 3077, n_alt = 2
   Insn 1244: point = 3077, n_alt = -2
   Insn 1243: point = 3078, n_alt = -2
   Insn 1242: point = 3079, n_alt = -2
   Insn 1241: point = 3080, n_alt = -2
   Insn 1240: point = 3081, n_alt = 3
   Insn 1239: point = 3082, n_alt = 3
   Insn 1238: point = 3083, n_alt = 3
   Insn 1237: point = 3084, n_alt = 3
   Insn 1236: point = 3086, n_alt = 0
   Insn 1235: point = 3088, n_alt = 0
   Insn 1234: point = 3090, n_alt = -2
   Insn 1233: point = 3092, n_alt = -2
   Insn 1232: point = 3094, n_alt = 0
   Insn 1231: point = 3096, n_alt = 0
   Insn 1230: point = 3097, n_alt = -2
   Insn 1229: point = 3099, n_alt = 0
   Insn 1228: point = 3101, n_alt = -2
   Insn 1227: point = 3102, n_alt = 3
   Insn 1226: point = 3104, n_alt = 0
   Insn 1225: point = 3106, n_alt = 0
   Insn 1224: point = 3107, n_alt = 0
   Insn 1223: point = 3107, n_alt = 3
   Insn 1222: point = 3107, n_alt = -2
   Insn 1221: point = 3108, n_alt = 2
   Insn 1220: point = 3108, n_alt = -2
   Insn 1219: point = 3109, n_alt = -2
   Insn 1218: point = 3110, n_alt = 3
   Insn 1217: point = 3111, n_alt = 3
   Insn 1216: point = 3112, n_alt = 3
  BB 89
   Insn 1213: point = 3113, n_alt = 1
  BB 88
   Insn 1211: point = 3113, n_alt = -1
   Insn 1210: point = 3113, n_alt = 0
   Insn 1209: point = 3114, n_alt = 0
  BB 86
   Insn 4193: point = 3115, n_alt = -1
   Insn 1199: point = 3115, n_alt = 1
   Insn 1198: point = 3116, n_alt = 1
   Insn 1197: point = 3118, n_alt = 0
  BB 87
   Insn 1206: point = 3119, n_alt = 1
   Insn 1205: point = 3120, n_alt = 1
   Insn 1204: point = 3122, n_alt = 0
  BB 85
   Insn 1195: point = 3123, n_alt = -1
   Insn 1194: point = 3123, n_alt = 1
   Insn 1193: point = 3123, n_alt = 1
   Insn 1192: point = 3123, n_alt = 1
   Insn 1191: point = 3124, n_alt = 0
   Insn 1190: point = 3125, n_alt = 1
   Insn 1189: point = 3126, n_alt = 0
   Insn 1188: point = 3128, n_alt = 0
   Insn 1187: point = 3129, n_alt = 1
   Insn 1186: point = 3130, n_alt = 0
   Insn 1185: point = 3132, n_alt = 7
   Insn 1184: point = 3134, n_alt = 4
   Insn 1183: point = 3135, n_alt = 1
   Insn 1182: point = 3136, n_alt = 0
   Insn 1181: point = 3137, n_alt = 0
   Insn 1180: point = 3138, n_alt = 1
   Insn 4472: point = 3139, n_alt = -2
	Hard reg 1 is preferable by r2244 with profit 1000
   Insn 1179: point = 3141, n_alt = 0
   Insn 4471: point = 3142, n_alt = -2
	Hard reg 1 is preferable by r2244 with profit 2000
   Insn 1178: point = 3144, n_alt = 2
   Insn 1177: point = 3145, n_alt = 2
   Insn 1176: point = 3146, n_alt = 2
   Insn 1175: point = 3147, n_alt = 0
   Insn 1174: point = 3147, n_alt = 0
   Insn 1173: point = 3147, n_alt = 3
   Insn 1172: point = 3147, n_alt = 2
   Insn 1171: point = 3147, n_alt = 2
   Insn 1170: point = 3147, n_alt = 4
   Insn 1169: point = 3147, n_alt = 4
   Insn 1168: point = 3147, n_alt = -2
   Insn 1167: point = 3148, n_alt = -2
   Insn 1166: point = 3149, n_alt = 0
   Insn 1165: point = 3149, n_alt = 0
   Insn 1164: point = 3149, n_alt = 3
   Insn 1163: point = 3150, n_alt = 3
  BB 320
   Insn 4344: point = 3151, n_alt = -1
  BB 77
   Insn 1081: point = 3151, n_alt = -1
   Insn 1080: point = 3151, n_alt = 0
   Insn 1079: point = 3152, n_alt = 0
   Insn 1078: point = 3154, n_alt = 0
   Insn 1077: point = 3155, n_alt = 0
  BB 84
   Insn 4191: point = 3156, n_alt = -1
   Insn 1157: point = 3156, n_alt = 1
  BB 321
   Insn 4347: point = 3157, n_alt = -1
  BB 79
   Insn 1089: point = 3158, n_alt = -1
   Insn 1088: point = 3158, n_alt = 0
   Insn 1087: point = 3159, n_alt = 0
   Insn 1086: point = 3161, n_alt = 0
   Insn 1085: point = 3162, n_alt = 0
  BB 83
   Insn 4189: point = 3163, n_alt = -1
   Insn 1151: point = 3163, n_alt = 1
  BB 81
   Insn 4187: point = 3164, n_alt = -1
   Insn 1134: point = 3164, n_alt = 8
   Insn 1133: point = 3165, n_alt = 4
   Insn 1132: point = 3166, n_alt = 2
   Insn 1131: point = 3168, n_alt = 3
   Insn 1130: point = 3170, n_alt = 0
   Insn 1129: point = 3172, n_alt = 1
   Insn 1128: point = 3174, n_alt = 0
   Insn 1127: point = 3175, n_alt = 0
   Insn 1126: point = 3177, n_alt = 1
   Insn 1125: point = 3179, n_alt = 0
   Insn 1124: point = 3180, n_alt = 1
   Insn 1123: point = 3182, n_alt = 0
   Insn 1122: point = 3184, n_alt = 0
   Insn 1121: point = 3186, n_alt = 4
   Insn 1120: point = 3187, n_alt = 3
   Insn 1119: point = 3189, n_alt = 0
   Insn 1118: point = 3191, n_alt = 1
   Insn 1117: point = 3193, n_alt = 0
   Insn 1116: point = 3194, n_alt = 0
   Insn 1115: point = 3196, n_alt = 1
   Insn 1114: point = 3198, n_alt = 0
   Insn 1113: point = 3199, n_alt = 7
   Insn 1112: point = 3201, n_alt = 0
   Insn 1111: point = 3203, n_alt = 4
   Insn 1110: point = 3204, n_alt = 3
   Insn 1109: point = 3206, n_alt = 0
   Insn 1108: point = 3208, n_alt = 1
   Insn 1107: point = 3210, n_alt = 0
   Insn 1106: point = 3211, n_alt = 0
   Insn 1105: point = 3213, n_alt = 1
   Insn 1104: point = 3215, n_alt = 0
  BB 82
   Insn 1148: point = 3217, n_alt = 8
   Insn 1147: point = 3218, n_alt = 7
   Insn 1146: point = 3219, n_alt = 4
   Insn 1145: point = 3220, n_alt = 3
   Insn 1144: point = 3222, n_alt = 0
   Insn 1143: point = 3224, n_alt = 1
   Insn 1142: point = 3226, n_alt = 0
   Insn 1141: point = 3227, n_alt = 0
   Insn 1140: point = 3229, n_alt = 1
   Insn 1139: point = 3231, n_alt = 0
  BB 80
   Insn 1102: point = 3233, n_alt = -1
   Insn 1101: point = 3233, n_alt = 0
   Insn 1100: point = 3234, n_alt = 0
   Insn 1099: point = 3236, n_alt = 0
   Insn 1098: point = 3238, n_alt = 4
   Insn 1097: point = 3239, n_alt = 3
   Insn 1096: point = 3241, n_alt = 0
   Insn 1095: point = 3243, n_alt = 1
   Insn 1094: point = 3245, n_alt = 0
   Insn 1093: point = 3246, n_alt = 0
   Insn 1092: point = 3248, n_alt = 1
   Insn 1091: point = 3250, n_alt = 0
  BB 78
   Insn 1083: point = 3252, n_alt = 1
  BB 76
   Insn 1075: point = 3253, n_alt = 1
   Insn 1074: point = 3254, n_alt = 0
   Insn 1073: point = 3255, n_alt = 0
  BB 75
   Insn 1071: point = 3256, n_alt = -1
   Insn 1070: point = 3256, n_alt = 0
   Insn 1069: point = 3257, n_alt = 0
  BB 74
   Insn 1066: point = 3258, n_alt = 0
   Insn 1065: point = 3258, n_alt = 3
   Insn 1064: point = 3258, n_alt = 2
   Insn 1063: point = 3258, n_alt = 2
   Insn 1062: point = 3258, n_alt = -2
   Insn 1061: point = 3259, n_alt = -2
   Insn 1060: point = 3260, n_alt = -2
   Insn 1059: point = 3261, n_alt = -2
   Insn 1058: point = 3262, n_alt = 3
   Insn 1057: point = 3263, n_alt = 3
   Insn 1056: point = 3264, n_alt = 3
   Insn 1055: point = 3265, n_alt = 3
   Insn 1054: point = 3267, n_alt = 0
   Insn 1053: point = 3269, n_alt = 0
   Insn 1052: point = 3271, n_alt = -2
   Insn 1051: point = 3273, n_alt = -2
   Insn 1050: point = 3275, n_alt = 0
   Insn 1049: point = 3277, n_alt = 0
   Insn 1048: point = 3278, n_alt = -2
   Insn 1047: point = 3280, n_alt = 0
   Insn 1046: point = 3282, n_alt = -2
   Insn 1045: point = 3283, n_alt = 3
   Insn 1044: point = 3285, n_alt = 0
   Insn 1043: point = 3287, n_alt = 0
   Insn 1042: point = 3288, n_alt = 0
   Insn 1041: point = 3288, n_alt = 3
   Insn 1040: point = 3288, n_alt = -2
   Insn 1039: point = 3289, n_alt = 2
   Insn 1038: point = 3289, n_alt = -2
   Insn 1037: point = 3290, n_alt = -2
   Insn 1036: point = 3291, n_alt = 3
   Insn 1035: point = 3292, n_alt = 3
   Insn 1034: point = 3293, n_alt = 3
  BB 73
   Insn 1031: point = 3294, n_alt = 1
  BB 72
   Insn 1029: point = 3294, n_alt = -1
   Insn 1028: point = 3294, n_alt = 0
   Insn 1027: point = 3295, n_alt = 0
  BB 70
   Insn 4185: point = 3296, n_alt = -1
   Insn 1017: point = 3296, n_alt = 1
   Insn 1016: point = 3297, n_alt = 1
   Insn 1015: point = 3299, n_alt = 0
  BB 71
   Insn 1024: point = 3300, n_alt = 1
   Insn 1023: point = 3301, n_alt = 1
   Insn 1022: point = 3303, n_alt = 0
  BB 69
   Insn 1013: point = 3304, n_alt = -1
   Insn 1012: point = 3304, n_alt = 1
   Insn 1011: point = 3304, n_alt = 1
   Insn 1010: point = 3304, n_alt = 1
   Insn 1009: point = 3305, n_alt = 0
   Insn 1008: point = 3306, n_alt = 1
   Insn 1007: point = 3307, n_alt = 0
   Insn 1006: point = 3309, n_alt = 0
   Insn 1005: point = 3310, n_alt = 1
   Insn 1004: point = 3311, n_alt = 0
   Insn 1003: point = 3313, n_alt = 7
   Insn 1002: point = 3315, n_alt = 4
   Insn 1001: point = 3316, n_alt = 1
   Insn 1000: point = 3317, n_alt = 0
   Insn 999: point = 3318, n_alt = 0
   Insn 998: point = 3319, n_alt = 1
   Insn 4470: point = 3320, n_alt = -2
	Hard reg 1 is preferable by r2243 with profit 1000
   Insn 997: point = 3322, n_alt = 0
   Insn 4469: point = 3323, n_alt = -2
	Hard reg 1 is preferable by r2243 with profit 2000
   Insn 996: point = 3325, n_alt = 2
   Insn 995: point = 3326, n_alt = 2
   Insn 994: point = 3327, n_alt = 2
   Insn 993: point = 3328, n_alt = 0
   Insn 992: point = 3328, n_alt = 0
   Insn 991: point = 3328, n_alt = 3
   Insn 990: point = 3328, n_alt = 2
   Insn 989: point = 3328, n_alt = 2
   Insn 988: point = 3328, n_alt = 4
   Insn 987: point = 3328, n_alt = 4
   Insn 986: point = 3328, n_alt = -2
   Insn 985: point = 3329, n_alt = -2
   Insn 984: point = 3330, n_alt = 0
   Insn 983: point = 3330, n_alt = 0
   Insn 982: point = 3330, n_alt = 3
   Insn 981: point = 3331, n_alt = 3
  BB 318
   Insn 4338: point = 3332, n_alt = -1
  BB 61
   Insn 885: point = 3332, n_alt = -1
   Insn 884: point = 3332, n_alt = 0
   Insn 883: point = 3333, n_alt = 0
   Insn 882: point = 3335, n_alt = 0
   Insn 881: point = 3336, n_alt = 0
  BB 68
   Insn 4183: point = 3337, n_alt = -1
   Insn 975: point = 3337, n_alt = 1
  BB 319
   Insn 4341: point = 3338, n_alt = -1
  BB 63
   Insn 893: point = 3339, n_alt = -1
   Insn 892: point = 3339, n_alt = 0
   Insn 891: point = 3340, n_alt = 0
   Insn 890: point = 3342, n_alt = 0
   Insn 889: point = 3343, n_alt = 0
  BB 67
   Insn 4181: point = 3344, n_alt = -1
   Insn 969: point = 3344, n_alt = 1
  BB 65
   Insn 4179: point = 3345, n_alt = -1
   Insn 952: point = 3345, n_alt = 8
   Insn 951: point = 3346, n_alt = 4
   Insn 4468: point = 3347, n_alt = -2
	Hard reg 21 is preferable by r2242 with profit 1000
   Insn 950: point = 3349, n_alt = 2
   Insn 4467: point = 3350, n_alt = -2
	Hard reg 21 is preferable by r2242 with profit 1000
	Hard reg 22 is preferable by r2242 with profit 1000
   Insn 949: point = 3352, n_alt = 3
   Insn 948: point = 3354, n_alt = 0
   Insn 947: point = 3356, n_alt = 1
   Insn 946: point = 3358, n_alt = 0
   Insn 945: point = 3359, n_alt = 0
   Insn 944: point = 3361, n_alt = 1
   Insn 943: point = 3363, n_alt = 0
   Insn 942: point = 3364, n_alt = 2
   Insn 941: point = 3365, n_alt = -2
   Insn 940: point = 3367, n_alt = 1
   Insn 939: point = 3369, n_alt = 7
   Insn 938: point = 3371, n_alt = 0
   Insn 937: point = 3373, n_alt = 4
   Insn 936: point = 3374, n_alt = 3
   Insn 935: point = 3376, n_alt = 0
   Insn 934: point = 3378, n_alt = 1
   Insn 933: point = 3380, n_alt = 0
   Insn 932: point = 3381, n_alt = 0
   Insn 931: point = 3383, n_alt = 1
   Insn 930: point = 3385, n_alt = 0
   Insn 929: point = 3386, n_alt = 7
   Insn 928: point = 3388, n_alt = 0
   Insn 927: point = 3390, n_alt = 4
   Insn 926: point = 3391, n_alt = 3
   Insn 925: point = 3393, n_alt = 0
   Insn 924: point = 3395, n_alt = 1
   Insn 923: point = 3397, n_alt = 0
   Insn 922: point = 3398, n_alt = 0
   Insn 921: point = 3400, n_alt = 1
   Insn 920: point = 3402, n_alt = 0
  BB 66
   Insn 966: point = 3404, n_alt = 8
   Insn 965: point = 3405, n_alt = 7
   Insn 964: point = 3406, n_alt = 4
   Insn 963: point = 3407, n_alt = 3
   Insn 962: point = 3409, n_alt = 0
   Insn 961: point = 3411, n_alt = 1
   Insn 960: point = 3413, n_alt = 0
   Insn 959: point = 3414, n_alt = 0
   Insn 958: point = 3416, n_alt = 1
   Insn 957: point = 3418, n_alt = 0
  BB 64
   Insn 918: point = 3420, n_alt = -1
   Insn 917: point = 3420, n_alt = 1
   Insn 916: point = 3420, n_alt = 1
   Insn 915: point = 3421, n_alt = 0
   Insn 914: point = 3423, n_alt = 0
   Insn 913: point = 3425, n_alt = 0
   Insn 912: point = 3427, n_alt = 4
   Insn 911: point = 3428, n_alt = 3
   Insn 910: point = 3430, n_alt = 0
   Insn 909: point = 3432, n_alt = 1
   Insn 908: point = 3434, n_alt = 0
   Insn 907: point = 3435, n_alt = 0
   Insn 906: point = 3437, n_alt = 1
   Insn 905: point = 3439, n_alt = 0
   Insn 904: point = 3440, n_alt = 0
   Insn 903: point = 3442, n_alt = 0
   Insn 902: point = 3444, n_alt = 4
   Insn 901: point = 3445, n_alt = 3
   Insn 900: point = 3447, n_alt = 0
   Insn 899: point = 3449, n_alt = 1
   Insn 898: point = 3451, n_alt = 0
   Insn 897: point = 3452, n_alt = 0
   Insn 896: point = 3454, n_alt = 1
   Insn 895: point = 3456, n_alt = 0
  BB 62
   Insn 887: point = 3458, n_alt = 1
  BB 60
   Insn 879: point = 3459, n_alt = 1
   Insn 878: point = 3460, n_alt = 0
   Insn 877: point = 3461, n_alt = 0
  BB 59
   Insn 875: point = 3462, n_alt = -1
   Insn 874: point = 3462, n_alt = 0
   Insn 873: point = 3463, n_alt = 0
  BB 58
   Insn 870: point = 3464, n_alt = 0
   Insn 869: point = 3464, n_alt = 3
   Insn 868: point = 3464, n_alt = 2
   Insn 867: point = 3464, n_alt = 2
   Insn 866: point = 3464, n_alt = -2
   Insn 865: point = 3465, n_alt = -2
   Insn 864: point = 3466, n_alt = -2
   Insn 863: point = 3467, n_alt = -2
   Insn 862: point = 3468, n_alt = 3
   Insn 861: point = 3469, n_alt = 3
   Insn 860: point = 3470, n_alt = 3
   Insn 859: point = 3471, n_alt = 3
   Insn 858: point = 3473, n_alt = 0
   Insn 857: point = 3475, n_alt = 0
   Insn 856: point = 3477, n_alt = -2
   Insn 855: point = 3479, n_alt = -2
   Insn 854: point = 3481, n_alt = 0
   Insn 853: point = 3483, n_alt = 0
   Insn 852: point = 3484, n_alt = -2
   Insn 851: point = 3486, n_alt = 0
   Insn 850: point = 3488, n_alt = -2
   Insn 849: point = 3489, n_alt = 3
   Insn 848: point = 3491, n_alt = 0
   Insn 847: point = 3493, n_alt = 0
   Insn 846: point = 3494, n_alt = 0
   Insn 845: point = 3494, n_alt = 3
   Insn 844: point = 3494, n_alt = -2
   Insn 843: point = 3495, n_alt = 2
   Insn 842: point = 3495, n_alt = -2
   Insn 841: point = 3496, n_alt = -2
   Insn 840: point = 3497, n_alt = 3
   Insn 839: point = 3498, n_alt = 3
   Insn 838: point = 3499, n_alt = 3
   Insn 837: point = 3500, n_alt = 0
   Insn 836: point = 3501, n_alt = 1
   Insn 4466: point = 3502, n_alt = -2
	Hard reg 1 is preferable by r2241 with profit 1000
   Insn 835: point = 3504, n_alt = 0
   Insn 4465: point = 3505, n_alt = -2
	Hard reg 1 is preferable by r2241 with profit 2000
   Insn 834: point = 3507, n_alt = 2
   Insn 833: point = 3508, n_alt = 2
   Insn 832: point = 3509, n_alt = 2
   Insn 831: point = 3510, n_alt = 0
   Insn 830: point = 3510, n_alt = 0
   Insn 829: point = 3510, n_alt = 3
   Insn 828: point = 3510, n_alt = 2
   Insn 827: point = 3510, n_alt = 2
   Insn 826: point = 3510, n_alt = 4
   Insn 825: point = 3510, n_alt = 4
   Insn 824: point = 3510, n_alt = -2
   Insn 823: point = 3511, n_alt = -2
   Insn 822: point = 3512, n_alt = 0
   Insn 821: point = 3512, n_alt = 0
   Insn 820: point = 3512, n_alt = 3
   Insn 819: point = 3513, n_alt = 3
  BB 316
   Insn 4332: point = 3514, n_alt = -1
  BB 49
   Insn 734: point = 3514, n_alt = -1
   Insn 733: point = 3514, n_alt = 0
   Insn 732: point = 3515, n_alt = 0
   Insn 731: point = 3517, n_alt = 0
   Insn 730: point = 3518, n_alt = 0
  BB 57
   Insn 4177: point = 3519, n_alt = -1
   Insn 813: point = 3519, n_alt = 1
  BB 317
   Insn 4335: point = 3520, n_alt = -1
  BB 51
   Insn 742: point = 3521, n_alt = -1
   Insn 741: point = 3521, n_alt = 0
   Insn 740: point = 3522, n_alt = 0
   Insn 739: point = 3524, n_alt = 0
   Insn 738: point = 3525, n_alt = 0
  BB 56
   Insn 4175: point = 3526, n_alt = -1
   Insn 807: point = 3526, n_alt = 1
   Insn 806: point = 3526, n_alt = 8
   Insn 805: point = 3527, n_alt = 4
   Insn 804: point = 3528, n_alt = 3
   Insn 803: point = 3530, n_alt = 0
   Insn 802: point = 3532, n_alt = 1
   Insn 801: point = 3534, n_alt = 0
   Insn 800: point = 3535, n_alt = 0
   Insn 799: point = 3537, n_alt = 1
   Insn 798: point = 3539, n_alt = 0
  BB 55
   Insn 6: point = 3541, n_alt = -2
  BB 54
   Insn 794: point = 3544, n_alt = -1
   Insn 793: point = 3544, n_alt = 0
   Insn 792: point = 3545, n_alt = 0
   Insn 791: point = 3547, n_alt = 0
   Insn 790: point = 3549, n_alt = 0
   Insn 789: point = 3550, n_alt = 1
   Insn 788: point = 3550, n_alt = 0
   Insn 787: point = 3552, n_alt = 0
   Insn 786: point = 3553, n_alt = 1
   Insn 785: point = 3553, n_alt = 7
   Insn 784: point = 3555, n_alt = 0
   Insn 783: point = 3557, n_alt = 4
   Insn 782: point = 3558, n_alt = 3
   Insn 781: point = 3560, n_alt = 0
   Insn 780: point = 3562, n_alt = 1
   Insn 779: point = 3564, n_alt = 0
   Insn 778: point = 3565, n_alt = 0
   Insn 777: point = 3567, n_alt = 1
   Insn 776: point = 3569, n_alt = 0
  BB 53
   Insn 5: point = 3571, n_alt = -2
  BB 52
   Insn 772: point = 3574, n_alt = -1
   Insn 771: point = 3574, n_alt = 0
   Insn 770: point = 3575, n_alt = 0
   Insn 769: point = 3577, n_alt = 0
   Insn 768: point = 3579, n_alt = 0
   Insn 767: point = 3580, n_alt = 1
   Insn 766: point = 3580, n_alt = 0
   Insn 765: point = 3582, n_alt = 0
   Insn 764: point = 3583, n_alt = 1
   Insn 763: point = 3583, n_alt = 7
   Insn 762: point = 3585, n_alt = 0
   Insn 761: point = 3587, n_alt = 4
   Insn 760: point = 3588, n_alt = 3
   Insn 759: point = 3590, n_alt = 0
   Insn 758: point = 3592, n_alt = 1
   Insn 757: point = 3594, n_alt = 0
   Insn 756: point = 3595, n_alt = 0
   Insn 755: point = 3597, n_alt = 1
   Insn 754: point = 3599, n_alt = 0
   Insn 753: point = 3600, n_alt = 7
   Insn 752: point = 3602, n_alt = 0
   Insn 751: point = 3604, n_alt = 4
   Insn 750: point = 3605, n_alt = 3
   Insn 749: point = 3607, n_alt = 0
   Insn 748: point = 3609, n_alt = 1
   Insn 747: point = 3611, n_alt = 0
   Insn 746: point = 3612, n_alt = 0
   Insn 745: point = 3614, n_alt = 1
   Insn 744: point = 3616, n_alt = 0
  BB 50
   Insn 736: point = 3618, n_alt = 1
  BB 48
   Insn 728: point = 3619, n_alt = 1
   Insn 727: point = 3620, n_alt = 0
   Insn 726: point = 3621, n_alt = 0
  BB 47
   Insn 724: point = 3622, n_alt = -1
   Insn 723: point = 3622, n_alt = 0
   Insn 722: point = 3623, n_alt = 0
  BB 46
   Insn 719: point = 3624, n_alt = 0
   Insn 718: point = 3624, n_alt = 3
   Insn 717: point = 3624, n_alt = 2
   Insn 716: point = 3624, n_alt = 2
   Insn 715: point = 3624, n_alt = -2
   Insn 714: point = 3625, n_alt = -2
   Insn 713: point = 3626, n_alt = -2
   Insn 712: point = 3627, n_alt = -2
   Insn 711: point = 3628, n_alt = 3
   Insn 710: point = 3629, n_alt = 3
   Insn 709: point = 3630, n_alt = 3
   Insn 708: point = 3631, n_alt = 3
   Insn 707: point = 3633, n_alt = 0
   Insn 706: point = 3635, n_alt = 0
   Insn 705: point = 3637, n_alt = -2
   Insn 704: point = 3639, n_alt = -2
   Insn 703: point = 3641, n_alt = 0
   Insn 702: point = 3643, n_alt = 0
   Insn 701: point = 3644, n_alt = -2
   Insn 700: point = 3646, n_alt = 0
   Insn 699: point = 3648, n_alt = -2
   Insn 698: point = 3649, n_alt = 3
   Insn 697: point = 3651, n_alt = 0
   Insn 696: point = 3653, n_alt = 0
   Insn 695: point = 3654, n_alt = 0
   Insn 694: point = 3654, n_alt = 3
   Insn 693: point = 3654, n_alt = -2
   Insn 692: point = 3655, n_alt = 2
   Insn 691: point = 3655, n_alt = -2
   Insn 690: point = 3656, n_alt = -2
   Insn 689: point = 3657, n_alt = 3
   Insn 688: point = 3658, n_alt = 3
   Insn 687: point = 3659, n_alt = 3
   Insn 686: point = 3660, n_alt = 0
   Insn 685: point = 3661, n_alt = 1
   Insn 4464: point = 3662, n_alt = -2
	Hard reg 1 is preferable by r2240 with profit 1000
   Insn 684: point = 3664, n_alt = 0
   Insn 4463: point = 3665, n_alt = -2
	Hard reg 1 is preferable by r2240 with profit 2000
   Insn 683: point = 3667, n_alt = 2
   Insn 682: point = 3668, n_alt = 2
   Insn 681: point = 3669, n_alt = 2
   Insn 680: point = 3670, n_alt = 0
   Insn 679: point = 3670, n_alt = 0
   Insn 678: point = 3670, n_alt = 3
   Insn 677: point = 3670, n_alt = 2
   Insn 676: point = 3670, n_alt = 2
   Insn 675: point = 3670, n_alt = 4
   Insn 674: point = 3670, n_alt = 4
   Insn 673: point = 3670, n_alt = -2
   Insn 672: point = 3671, n_alt = -2
   Insn 671: point = 3672, n_alt = 0
   Insn 670: point = 3672, n_alt = 0
   Insn 669: point = 3672, n_alt = 3
   Insn 668: point = 3673, n_alt = 3
  BB 45
   Insn 666: point = 3674, n_alt = -1
   Insn 665: point = 3674, n_alt = 0
   Insn 664: point = 3675, n_alt = 0
  BB 44
   Insn 661: point = 3676, n_alt = 0
   Insn 660: point = 3676, n_alt = 3
   Insn 659: point = 3676, n_alt = 2
   Insn 658: point = 3676, n_alt = 2
   Insn 657: point = 3676, n_alt = -2
   Insn 656: point = 3677, n_alt = -2
   Insn 655: point = 3678, n_alt = -2
   Insn 654: point = 3679, n_alt = -2
   Insn 653: point = 3680, n_alt = 3
   Insn 652: point = 3681, n_alt = 3
   Insn 651: point = 3682, n_alt = 3
   Insn 650: point = 3683, n_alt = 3
   Insn 649: point = 3685, n_alt = 0
   Insn 648: point = 3687, n_alt = 0
   Insn 647: point = 3689, n_alt = -2
   Insn 646: point = 3691, n_alt = -2
   Insn 645: point = 3693, n_alt = 0
   Insn 644: point = 3695, n_alt = 0
   Insn 643: point = 3696, n_alt = -2
   Insn 642: point = 3698, n_alt = 0
   Insn 641: point = 3700, n_alt = -2
   Insn 640: point = 3701, n_alt = 3
   Insn 639: point = 3703, n_alt = 0
   Insn 638: point = 3705, n_alt = 0
   Insn 637: point = 3706, n_alt = 0
   Insn 636: point = 3706, n_alt = 3
   Insn 635: point = 3706, n_alt = -2
   Insn 634: point = 3707, n_alt = 2
   Insn 633: point = 3707, n_alt = -2
   Insn 632: point = 3708, n_alt = -2
   Insn 631: point = 3709, n_alt = 3
   Insn 630: point = 3710, n_alt = 3
   Insn 629: point = 3711, n_alt = 3
   Insn 628: point = 3712, n_alt = 0
   Insn 627: point = 3713, n_alt = 1
   Insn 4462: point = 3714, n_alt = -2
	Hard reg 1 is preferable by r2239 with profit 1000
   Insn 626: point = 3716, n_alt = 0
   Insn 4461: point = 3717, n_alt = -2
	Hard reg 1 is preferable by r2239 with profit 2000
   Insn 625: point = 3719, n_alt = 2
   Insn 624: point = 3720, n_alt = 2
   Insn 623: point = 3721, n_alt = 2
   Insn 622: point = 3722, n_alt = 0
   Insn 621: point = 3722, n_alt = 0
   Insn 620: point = 3722, n_alt = 3
   Insn 619: point = 3722, n_alt = 2
   Insn 618: point = 3722, n_alt = 2
   Insn 617: point = 3722, n_alt = 4
   Insn 616: point = 3722, n_alt = 4
   Insn 615: point = 3722, n_alt = -2
   Insn 614: point = 3723, n_alt = -2
   Insn 613: point = 3724, n_alt = 0
   Insn 612: point = 3724, n_alt = 0
   Insn 611: point = 3724, n_alt = 3
   Insn 610: point = 3725, n_alt = 3
  BB 43
   Insn 608: point = 3726, n_alt = -1
   Insn 607: point = 3726, n_alt = 0
   Insn 606: point = 3727, n_alt = 0
  BB 42
   Insn 603: point = 3728, n_alt = 0
   Insn 602: point = 3728, n_alt = 3
   Insn 601: point = 3728, n_alt = 2
   Insn 600: point = 3728, n_alt = 2
   Insn 599: point = 3728, n_alt = -2
   Insn 598: point = 3729, n_alt = -2
   Insn 597: point = 3730, n_alt = -2
   Insn 596: point = 3731, n_alt = -2
   Insn 595: point = 3732, n_alt = 3
   Insn 594: point = 3733, n_alt = 3
   Insn 593: point = 3734, n_alt = 3
   Insn 592: point = 3735, n_alt = 3
   Insn 591: point = 3737, n_alt = 0
   Insn 590: point = 3739, n_alt = 0
   Insn 589: point = 3741, n_alt = -2
   Insn 588: point = 3743, n_alt = -2
   Insn 587: point = 3745, n_alt = 0
   Insn 586: point = 3747, n_alt = 0
   Insn 585: point = 3748, n_alt = -2
   Insn 584: point = 3750, n_alt = 0
   Insn 583: point = 3752, n_alt = -2
   Insn 582: point = 3753, n_alt = 3
   Insn 581: point = 3755, n_alt = 0
   Insn 580: point = 3757, n_alt = 0
   Insn 579: point = 3758, n_alt = 0
   Insn 578: point = 3758, n_alt = 3
   Insn 577: point = 3758, n_alt = -2
   Insn 576: point = 3759, n_alt = 2
   Insn 575: point = 3759, n_alt = -2
   Insn 574: point = 3760, n_alt = -2
   Insn 573: point = 3761, n_alt = 3
   Insn 572: point = 3762, n_alt = 3
   Insn 571: point = 3763, n_alt = 3
   Insn 570: point = 3764, n_alt = 0
   Insn 569: point = 3765, n_alt = 1
   Insn 4460: point = 3766, n_alt = -2
	Hard reg 1 is preferable by r2238 with profit 1000
   Insn 568: point = 3768, n_alt = 0
   Insn 4459: point = 3769, n_alt = -2
	Hard reg 1 is preferable by r2238 with profit 2000
   Insn 567: point = 3771, n_alt = 2
   Insn 566: point = 3772, n_alt = 2
   Insn 565: point = 3773, n_alt = 2
   Insn 564: point = 3774, n_alt = 0
   Insn 563: point = 3774, n_alt = 0
   Insn 562: point = 3774, n_alt = 3
   Insn 561: point = 3774, n_alt = 2
   Insn 560: point = 3774, n_alt = 2
   Insn 559: point = 3774, n_alt = 4
   Insn 558: point = 3774, n_alt = 4
   Insn 557: point = 3774, n_alt = -2
   Insn 556: point = 3775, n_alt = -2
   Insn 555: point = 3776, n_alt = 0
   Insn 554: point = 3776, n_alt = 0
   Insn 553: point = 3776, n_alt = 3
   Insn 552: point = 3777, n_alt = 3
  BB 41
   Insn 550: point = 3778, n_alt = -1
   Insn 549: point = 3778, n_alt = 0
   Insn 548: point = 3779, n_alt = 0
  BB 40
   Insn 545: point = 3780, n_alt = 0
   Insn 544: point = 3780, n_alt = 3
   Insn 543: point = 3780, n_alt = 2
   Insn 542: point = 3780, n_alt = 2
   Insn 541: point = 3780, n_alt = -2
   Insn 540: point = 3781, n_alt = -2
   Insn 539: point = 3782, n_alt = -2
   Insn 538: point = 3783, n_alt = -2
   Insn 537: point = 3784, n_alt = 3
   Insn 536: point = 3785, n_alt = 3
   Insn 535: point = 3786, n_alt = 3
   Insn 534: point = 3787, n_alt = 3
   Insn 533: point = 3789, n_alt = 0
   Insn 532: point = 3791, n_alt = 0
   Insn 531: point = 3793, n_alt = -2
   Insn 530: point = 3795, n_alt = -2
   Insn 529: point = 3797, n_alt = 0
   Insn 528: point = 3799, n_alt = 0
   Insn 527: point = 3800, n_alt = -2
   Insn 526: point = 3802, n_alt = 0
   Insn 525: point = 3804, n_alt = -2
   Insn 524: point = 3805, n_alt = 3
   Insn 523: point = 3807, n_alt = 0
   Insn 522: point = 3809, n_alt = 0
   Insn 521: point = 3810, n_alt = 0
   Insn 520: point = 3811, n_alt = 1
   Insn 4458: point = 3812, n_alt = -2
	Hard reg 1 is preferable by r2237 with profit 1000
   Insn 519: point = 3814, n_alt = 0
   Insn 4457: point = 3815, n_alt = -2
	Hard reg 1 is preferable by r2237 with profit 2000
   Insn 518: point = 3817, n_alt = 2
   Insn 517: point = 3818, n_alt = 2
   Insn 516: point = 3819, n_alt = 2
   Insn 515: point = 3820, n_alt = 0
   Insn 514: point = 3820, n_alt = 0
   Insn 513: point = 3820, n_alt = 3
   Insn 512: point = 3820, n_alt = 2
   Insn 511: point = 3820, n_alt = 2
   Insn 510: point = 3820, n_alt = 4
   Insn 509: point = 3820, n_alt = 4
   Insn 508: point = 3820, n_alt = -2
   Insn 507: point = 3821, n_alt = -2
   Insn 506: point = 3822, n_alt = 0
   Insn 505: point = 3822, n_alt = 0
   Insn 504: point = 3822, n_alt = 3
   Insn 503: point = 3823, n_alt = 3
   Insn 502: point = 3824, n_alt = 0
   Insn 501: point = 3824, n_alt = 3
   Insn 500: point = 3824, n_alt = 4
  BB 39
   Insn 498: point = 3824, n_alt = -1
   Insn 497: point = 3824, n_alt = 0
   Insn 496: point = 3825, n_alt = 0
  BB 38
   Insn 493: point = 3826, n_alt = 0
   Insn 492: point = 3826, n_alt = 3
   Insn 491: point = 3826, n_alt = 2
   Insn 490: point = 3826, n_alt = 2
   Insn 489: point = 3826, n_alt = -2
   Insn 488: point = 3827, n_alt = -2
   Insn 487: point = 3828, n_alt = -2
   Insn 486: point = 3829, n_alt = -2
   Insn 485: point = 3830, n_alt = 3
   Insn 484: point = 3831, n_alt = 3
   Insn 483: point = 3832, n_alt = 3
   Insn 482: point = 3833, n_alt = 3
   Insn 481: point = 3835, n_alt = 0
   Insn 480: point = 3837, n_alt = 0
   Insn 479: point = 3839, n_alt = -2
   Insn 478: point = 3841, n_alt = -2
   Insn 477: point = 3843, n_alt = 0
   Insn 476: point = 3845, n_alt = 0
   Insn 475: point = 3846, n_alt = -2
   Insn 474: point = 3848, n_alt = 0
   Insn 473: point = 3850, n_alt = -2
   Insn 472: point = 3851, n_alt = 3
   Insn 471: point = 3853, n_alt = 0
   Insn 470: point = 3855, n_alt = 0
   Insn 469: point = 3856, n_alt = 0
   Insn 468: point = 3857, n_alt = 1
   Insn 4456: point = 3858, n_alt = -2
	Hard reg 1 is preferable by r2236 with profit 1000
   Insn 467: point = 3860, n_alt = 0
   Insn 4455: point = 3861, n_alt = -2
	Hard reg 1 is preferable by r2236 with profit 2000
   Insn 466: point = 3863, n_alt = 2
   Insn 465: point = 3864, n_alt = 2
   Insn 464: point = 3865, n_alt = 2
  BB 314
   Insn 4326: point = 3866, n_alt = -1
  BB 33
   Insn 418: point = 3866, n_alt = -1
   Insn 417: point = 3866, n_alt = 0
   Insn 416: point = 3867, n_alt = 0
   Insn 415: point = 3869, n_alt = 0
   Insn 414: point = 3870, n_alt = 0
  BB 37
   Insn 4173: point = 3871, n_alt = -1
   Insn 456: point = 3871, n_alt = 1
  BB 315
   Insn 4329: point = 3872, n_alt = -1
  BB 35
   Insn 428: point = 3873, n_alt = -1
   Insn 427: point = 3873, n_alt = 0
   Insn 426: point = 3874, n_alt = 0
   Insn 425: point = 3876, n_alt = 0
   Insn 424: point = 3877, n_alt = 0
  BB 36
   Insn 4171: point = 3878, n_alt = -1
   Insn 450: point = 3878, n_alt = 1
   Insn 449: point = 3878, n_alt = 8
   Insn 448: point = 3879, n_alt = 3
   Insn 447: point = 3880, n_alt = 0
   Insn 446: point = 3882, n_alt = 2
   Insn 445: point = 3883, n_alt = 0
   Insn 444: point = 3885, n_alt = 1
   Insn 443: point = 3887, n_alt = 0
   Insn 442: point = 3888, n_alt = 3
   Insn 441: point = 3890, n_alt = 2
   Insn 440: point = 3892, n_alt = 1
   Insn 439: point = 3894, n_alt = 0
   Insn 438: point = 3895, n_alt = 7
   Insn 437: point = 3897, n_alt = 3
   Insn 436: point = 3898, n_alt = 0
   Insn 435: point = 3900, n_alt = 1
   Insn 434: point = 3902, n_alt = 0
   Insn 433: point = 3903, n_alt = 3
   Insn 432: point = 3905, n_alt = 2
   Insn 431: point = 3907, n_alt = 1
   Insn 430: point = 3909, n_alt = 0
  BB 34
   Insn 422: point = 3911, n_alt = 1
   Insn 421: point = 3911, n_alt = 0
   Insn 420: point = 3913, n_alt = 3
  BB 32
   Insn 412: point = 3915, n_alt = 1
   Insn 411: point = 3915, n_alt = 0
   Insn 410: point = 3917, n_alt = 3
  BB 31
   Insn 408: point = 3919, n_alt = -1
   Insn 407: point = 3919, n_alt = 0
   Insn 406: point = 3920, n_alt = 0
  BB 312
   Insn 4320: point = 3922, n_alt = -1
  BB 26
   Insn 360: point = 3923, n_alt = -1
   Insn 359: point = 3923, n_alt = 0
   Insn 358: point = 3924, n_alt = 0
   Insn 357: point = 3926, n_alt = 0
   Insn 356: point = 3927, n_alt = 0
  BB 30
   Insn 4169: point = 3928, n_alt = -1
   Insn 398: point = 3928, n_alt = 1
  BB 313
   Insn 4323: point = 3929, n_alt = -1
  BB 28
   Insn 370: point = 3930, n_alt = -1
   Insn 369: point = 3930, n_alt = 0
   Insn 368: point = 3931, n_alt = 0
   Insn 367: point = 3933, n_alt = 0
   Insn 366: point = 3934, n_alt = 0
  BB 29
   Insn 4167: point = 3935, n_alt = -1
   Insn 392: point = 3935, n_alt = 1
   Insn 391: point = 3935, n_alt = 8
   Insn 390: point = 3936, n_alt = 3
   Insn 389: point = 3937, n_alt = 0
   Insn 388: point = 3939, n_alt = 2
   Insn 387: point = 3940, n_alt = 0
   Insn 386: point = 3942, n_alt = 1
   Insn 385: point = 3944, n_alt = 0
   Insn 384: point = 3945, n_alt = 3
   Insn 383: point = 3947, n_alt = 2
   Insn 382: point = 3949, n_alt = 1
   Insn 381: point = 3951, n_alt = 0
   Insn 380: point = 3952, n_alt = 7
   Insn 379: point = 3954, n_alt = 3
   Insn 378: point = 3955, n_alt = 0
   Insn 377: point = 3957, n_alt = 1
   Insn 376: point = 3959, n_alt = 0
   Insn 375: point = 3960, n_alt = 3
   Insn 374: point = 3962, n_alt = 2
   Insn 373: point = 3964, n_alt = 1
   Insn 372: point = 3966, n_alt = 0
  BB 27
   Insn 364: point = 3968, n_alt = 1
   Insn 363: point = 3968, n_alt = 0
   Insn 362: point = 3970, n_alt = 3
  BB 25
   Insn 354: point = 3972, n_alt = 1
   Insn 353: point = 3972, n_alt = 0
   Insn 352: point = 3974, n_alt = 3
  BB 24
   Insn 350: point = 3976, n_alt = -1
   Insn 349: point = 3976, n_alt = 0
   Insn 348: point = 3977, n_alt = 0
   Insn 347: point = 3978, n_alt = 0
   Insn 346: point = 3978, n_alt = 0
   Insn 345: point = 3978, n_alt = 3
   Insn 344: point = 3978, n_alt = 2
   Insn 343: point = 3978, n_alt = 2
   Insn 342: point = 3978, n_alt = 4
   Insn 341: point = 3978, n_alt = 4
   Insn 340: point = 3978, n_alt = -2
   Insn 339: point = 3979, n_alt = -2
   Insn 338: point = 3980, n_alt = 0
   Insn 337: point = 3980, n_alt = 0
   Insn 336: point = 3980, n_alt = 3
   Insn 335: point = 3981, n_alt = 3
  BB 23
   Insn 333: point = 3983, n_alt = -1
   Insn 332: point = 3983, n_alt = 0
   Insn 331: point = 3984, n_alt = 0
  BB 22
   Insn 328: point = 3986, n_alt = 0
   Insn 327: point = 3986, n_alt = 3
   Insn 326: point = 3986, n_alt = 2
   Insn 325: point = 3986, n_alt = 2
   Insn 324: point = 3986, n_alt = -2
   Insn 323: point = 3987, n_alt = -2
   Insn 322: point = 3988, n_alt = -2
   Insn 321: point = 3989, n_alt = -2
   Insn 320: point = 3990, n_alt = 3
   Insn 319: point = 3991, n_alt = 3
   Insn 318: point = 3992, n_alt = 3
   Insn 317: point = 3993, n_alt = 3
   Insn 316: point = 3995, n_alt = 0
   Insn 315: point = 3997, n_alt = 0
   Insn 314: point = 3999, n_alt = -2
   Insn 313: point = 4001, n_alt = -2
   Insn 312: point = 4003, n_alt = 0
   Insn 311: point = 4005, n_alt = 0
   Insn 310: point = 4006, n_alt = -2
   Insn 309: point = 4008, n_alt = 0
   Insn 308: point = 4010, n_alt = -2
   Insn 307: point = 4011, n_alt = 3
   Insn 306: point = 4013, n_alt = 0
   Insn 305: point = 4015, n_alt = 0
   Insn 304: point = 4016, n_alt = 0
   Insn 303: point = 4017, n_alt = 1
   Insn 4454: point = 4018, n_alt = -2
	Hard reg 1 is preferable by r2235 with profit 1000
   Insn 302: point = 4020, n_alt = 0
   Insn 4453: point = 4021, n_alt = -2
	Hard reg 1 is preferable by r2235 with profit 2000
   Insn 301: point = 4023, n_alt = 2
   Insn 300: point = 4024, n_alt = 2
   Insn 299: point = 4025, n_alt = 2
   Insn 298: point = 4026, n_alt = 0
   Insn 297: point = 4026, n_alt = 0
   Insn 296: point = 4026, n_alt = 3
   Insn 295: point = 4026, n_alt = 2
   Insn 294: point = 4026, n_alt = 2
   Insn 293: point = 4026, n_alt = 4
   Insn 292: point = 4026, n_alt = 4
   Insn 291: point = 4026, n_alt = -2
   Insn 290: point = 4027, n_alt = -2
   Insn 289: point = 4028, n_alt = 0
   Insn 288: point = 4028, n_alt = 0
   Insn 287: point = 4028, n_alt = 3
   Insn 286: point = 4029, n_alt = 3
  BB 21
   Insn 284: point = 4031, n_alt = -1
   Insn 283: point = 4031, n_alt = 0
   Insn 282: point = 4032, n_alt = 0
   Insn 281: point = 4033, n_alt = 0
   Insn 280: point = 4033, n_alt = 0
   Insn 279: point = 4033, n_alt = 3
   Insn 278: point = 4033, n_alt = -2
   Insn 277: point = 4034, n_alt = -2
   Insn 276: point = 4035, n_alt = -2
   Insn 275: point = 4036, n_alt = -2
   Insn 274: point = 4037, n_alt = 4
   Insn 273: point = 4037, n_alt = 4
   Insn 272: point = 4037, n_alt = 0
   Insn 4452: point = 4038, n_alt = 4
   Insn 271: point = 4039, n_alt = 0
   Insn 270: point = 4039, n_alt = 3
   Insn 269: point = 4040, n_alt = 3
   Insn 268: point = 4041, n_alt = 3
   Insn 267: point = 4042, n_alt = 3
   Insn 266: point = 4043, n_alt = 1
  BB 20
   Insn 263: point = 4044, n_alt = -1
   Insn 262: point = 4044, n_alt = 0
   Insn 261: point = 4045, n_alt = 0
   Insn 260: point = 4047, n_alt = 0
   Insn 259: point = 4049, n_alt = -2
   Insn 258: point = 4051, n_alt = -2
   Insn 257: point = 4053, n_alt = 0
   Insn 256: point = 4055, n_alt = 0
   Insn 255: point = 4056, n_alt = -2
   Insn 254: point = 4058, n_alt = 0
   Insn 253: point = 4060, n_alt = -2
   Insn 252: point = 4061, n_alt = 3
   Insn 251: point = 4063, n_alt = 0
   Insn 250: point = 4065, n_alt = 0
  BB 19
   Insn 248: point = 4067, n_alt = -1
   Insn 247: point = 4067, n_alt = 0
   Insn 246: point = 4068, n_alt = 0
   Insn 245: point = 4070, n_alt = 0
   Insn 244: point = 4072, n_alt = -2
   Insn 243: point = 4074, n_alt = -2
   Insn 242: point = 4076, n_alt = 0
   Insn 241: point = 4078, n_alt = 0
   Insn 240: point = 4079, n_alt = -2
   Insn 239: point = 4081, n_alt = 0
   Insn 238: point = 4083, n_alt = -2
   Insn 237: point = 4084, n_alt = 3
   Insn 236: point = 4086, n_alt = 0
   Insn 235: point = 4088, n_alt = 0
  BB 18
   Insn 232: point = 4090, n_alt = -1
   Insn 231: point = 4090, n_alt = 0
   Insn 230: point = 4091, n_alt = 0
  BB 17
   Insn 228: point = 4093, n_alt = -1
   Insn 227: point = 4093, n_alt = 0
   Insn 226: point = 4094, n_alt = 0
  BB 16
   Insn 223: point = 4096, n_alt = 0
   Insn 222: point = 4096, n_alt = 3
   Insn 221: point = 4096, n_alt = 2
   Insn 220: point = 4096, n_alt = 2
   Insn 219: point = 4096, n_alt = -2
   Insn 218: point = 4097, n_alt = -2
   Insn 217: point = 4098, n_alt = -2
   Insn 216: point = 4099, n_alt = -2
   Insn 215: point = 4100, n_alt = 3
   Insn 214: point = 4101, n_alt = 3
   Insn 213: point = 4102, n_alt = 3
   Insn 212: point = 4103, n_alt = 3
   Insn 211: point = 4105, n_alt = 0
   Insn 210: point = 4107, n_alt = 0
   Insn 209: point = 4109, n_alt = -2
   Insn 208: point = 4111, n_alt = -2
   Insn 207: point = 4113, n_alt = 0
   Insn 206: point = 4115, n_alt = 0
   Insn 205: point = 4116, n_alt = -2
   Insn 204: point = 4118, n_alt = 0
   Insn 203: point = 4120, n_alt = -2
   Insn 202: point = 4121, n_alt = 3
   Insn 201: point = 4123, n_alt = 0
   Insn 200: point = 4125, n_alt = 0
   Insn 199: point = 4126, n_alt = 1
   Insn 198: point = 4126, n_alt = 1
   Insn 197: point = 4126, n_alt = 0
   Insn 196: point = 4127, n_alt = 1
   Insn 4451: point = 4128, n_alt = -2
	Hard reg 1 is preferable by r2233 with profit 1000
   Insn 195: point = 4130, n_alt = 0
   Insn 4450: point = 4131, n_alt = -2
	Hard reg 1 is preferable by r2233 with profit 2000
   Insn 194: point = 4133, n_alt = 2
   Insn 193: point = 4134, n_alt = 2
   Insn 192: point = 4135, n_alt = 2
   Insn 191: point = 4136, n_alt = 0
   Insn 190: point = 4136, n_alt = 0
   Insn 189: point = 4136, n_alt = 3
   Insn 188: point = 4136, n_alt = 2
   Insn 187: point = 4136, n_alt = 2
   Insn 186: point = 4136, n_alt = 4
   Insn 185: point = 4136, n_alt = 4
   Insn 184: point = 4136, n_alt = -2
   Insn 183: point = 4137, n_alt = -2
   Insn 182: point = 4138, n_alt = 0
   Insn 181: point = 4138, n_alt = 0
   Insn 180: point = 4138, n_alt = 3
   Insn 179: point = 4139, n_alt = 3
  BB 310
   Insn 4314: point = 4141, n_alt = -1
  BB 11
   Insn 137: point = 4142, n_alt = -1
   Insn 136: point = 4142, n_alt = 0
   Insn 135: point = 4143, n_alt = 0
   Insn 134: point = 4145, n_alt = 0
   Insn 133: point = 4146, n_alt = 0
  BB 15
   Insn 4165: point = 4147, n_alt = -1
   Insn 173: point = 4147, n_alt = 1
  BB 311
   Insn 4317: point = 4148, n_alt = -1
  BB 13
   Insn 145: point = 4149, n_alt = -1
   Insn 144: point = 4149, n_alt = 0
   Insn 143: point = 4150, n_alt = 0
   Insn 142: point = 4152, n_alt = 0
   Insn 141: point = 4153, n_alt = 0
  BB 14
   Insn 4163: point = 4154, n_alt = -1
   Insn 167: point = 4154, n_alt = 1
   Insn 166: point = 4154, n_alt = 8
   Insn 165: point = 4155, n_alt = 4
   Insn 164: point = 4156, n_alt = 1
   Insn 163: point = 4158, n_alt = 7
   Insn 162: point = 4159, n_alt = 3
   Insn 161: point = 4161, n_alt = 0
   Insn 160: point = 4163, n_alt = 1
   Insn 159: point = 4165, n_alt = 0
   Insn 158: point = 4166, n_alt = 0
   Insn 157: point = 4168, n_alt = 1
   Insn 156: point = 4170, n_alt = 0
   Insn 155: point = 4171, n_alt = 7
   Insn 154: point = 4173, n_alt = 4
   Insn 153: point = 4174, n_alt = 3
   Insn 152: point = 4176, n_alt = 0
   Insn 151: point = 4178, n_alt = 1
   Insn 150: point = 4180, n_alt = 0
   Insn 149: point = 4181, n_alt = 0
   Insn 148: point = 4183, n_alt = 1
   Insn 147: point = 4185, n_alt = 0
  BB 12
   Insn 139: point = 4187, n_alt = 1
  BB 10
   Insn 131: point = 4188, n_alt = 1
   Insn 130: point = 4189, n_alt = 0
   Insn 129: point = 4190, n_alt = 0
   Insn 128: point = 4191, n_alt = 0
   Insn 127: point = 4191, n_alt = 3
   Insn 126: point = 4191, n_alt = 4
   Insn 125: point = 4191, n_alt = 4
  BB 308
   Insn 4308: point = 4192, n_alt = -1
  BB 5
   Insn 93: point = 4193, n_alt = -1
   Insn 92: point = 4193, n_alt = 0
   Insn 91: point = 4194, n_alt = 0
   Insn 90: point = 4196, n_alt = 0
   Insn 89: point = 4197, n_alt = 0
  BB 9
   Insn 4161: point = 4198, n_alt = -1
   Insn 119: point = 4198, n_alt = 1
  BB 309
   Insn 4311: point = 4199, n_alt = -1
  BB 7
   Insn 101: point = 4200, n_alt = -1
   Insn 100: point = 4200, n_alt = 0
   Insn 99: point = 4201, n_alt = 0
   Insn 98: point = 4203, n_alt = 0
   Insn 97: point = 4204, n_alt = 0
  BB 8
   Insn 4159: point = 4205, n_alt = -1
   Insn 113: point = 4205, n_alt = 1
   Insn 112: point = 4205, n_alt = 8
   Insn 111: point = 4206, n_alt = 4
   Insn 110: point = 4207, n_alt = 7
   Insn 109: point = 4208, n_alt = 3
   Insn 108: point = 4210, n_alt = 0
   Insn 107: point = 4212, n_alt = 1
   Insn 106: point = 4214, n_alt = 0
   Insn 105: point = 4215, n_alt = 0
   Insn 104: point = 4217, n_alt = 1
   Insn 103: point = 4219, n_alt = 0
  BB 6
   Insn 95: point = 4221, n_alt = 1
  BB 4
   Insn 87: point = 4222, n_alt = 1
   Insn 86: point = 4223, n_alt = 0
   Insn 85: point = 4224, n_alt = 0
  BB 3
   Insn 83: point = 4226, n_alt = -1
   Insn 82: point = 4226, n_alt = 0
   Insn 81: point = 4227, n_alt = 0
  BB 2
   Insn 79: point = 4229, n_alt = -1
   Insn 78: point = 4229, n_alt = 0
   Insn 77: point = 4230, n_alt = 0
   Insn 75: point = 4231, n_alt = 5
   Insn 74: point = 4232, n_alt = -2
   Insn 73: point = 4234, n_alt = -2
   Insn 72: point = 4235, n_alt = 0
   Insn 71: point = 4235, n_alt = -2
   Insn 70: point = 4236, n_alt = 1
   Insn 68: point = 4238, n_alt = 0
   Insn 69: point = 4238, n_alt = 2
   Insn 67: point = 4239, n_alt = -2
   Insn 66: point = 4241, n_alt = 0
   Insn 62: point = 4243, n_alt = 2
   Insn 61: point = 4244, n_alt = 3
   Insn 60: point = 4245, n_alt = -2
   Insn 58: point = 4246, n_alt = 1
   Insn 56: point = 4248, n_alt = 0
   Insn 57: point = 4248, n_alt = 2
   Insn 55: point = 4249, n_alt = 2
   Insn 54: point = 4251, n_alt = 5
   Insn 53: point = 4252, n_alt = 1
   Insn 52: point = 4254, n_alt = 0
   Insn 51: point = 4256, n_alt = 3
   Insn 50: point = 4257, n_alt = 1
   Insn 48: point = 4259, n_alt = 0
   Insn 49: point = 4259, n_alt = 2
   Insn 47: point = 4260, n_alt = 3
   Insn 46: point = 4261, n_alt = 5
   Insn 45: point = 4262, n_alt = 0
   Insn 44: point = 4264, n_alt = 0
   Insn 43: point = 4266, n_alt = 3
   Insn 4449: point = 4267, n_alt = -2
	Hard reg 41 is preferable by r2232 with profit 1000
   Insn 42: point = 4269, n_alt = 0
   Insn 4448: point = 4269, n_alt = -2
   Insn 41: point = 4270, n_alt = 5
   Insn 40: point = 4271, n_alt = -2
   Insn 39: point = 4273, n_alt = -2
   Insn 38: point = 4274, n_alt = 0
   Insn 37: point = 4274, n_alt = -2
   Insn 36: point = 4275, n_alt = 1
   Insn 34: point = 4277, n_alt = 0
   Insn 35: point = 4277, n_alt = 2
   Insn 33: point = 4278, n_alt = -2
   Insn 32: point = 4280, n_alt = 0
   Insn 28: point = 4282, n_alt = 2
   Insn 27: point = 4283, n_alt = 3
   Insn 26: point = 4284, n_alt = -2
   Insn 24: point = 4285, n_alt = 1
   Insn 22: point = 4287, n_alt = 0
   Insn 23: point = 4287, n_alt = 2
   Insn 4447: point = 4288, n_alt = -2
	Hard reg 0 is preferable by r2231 with profit 1000
   Insn 21: point = 4290, n_alt = 2
   Insn 4446: point = 4290, n_alt = -2
   Insn 20: point = 4291, n_alt = 5
   Insn 19: point = 4292, n_alt = 0
   Insn 18: point = 4294, n_alt = 0
   Insn 17: point = 4296, n_alt = 3
   Insn 4445: point = 4297, n_alt = -2
	Hard reg 3 is preferable by r2230 with profit 1000
   Insn 16: point = 4299, n_alt = 0
   Insn 4444: point = 4300, n_alt = -2
	Hard reg 3 is preferable by r2230 with profit 1000
	Hard reg 1 is preferable by r2230 with profit 1000
   Insn 14: point = 4302, n_alt = 0
   Insn 15: point = 4302, n_alt = 2
   Insn 13: point = 4303, n_alt = 3
   Insn 12: point = 4304, n_alt = 5
   Insn 11: point = 4305, n_alt = 0
   Insn 10: point = 4307, n_alt = 0
   Insn 9: point = 4309, n_alt = 3
   Insn 3: point = 4310, n_alt = 5
   Insn 2: point = 4310, n_alt = 5
 r87: [4306..4307]
 r88: [4293..4294]
 r89: [4283..4284]
 r90: [4282..4310]
 r92: [4279..4280]
 r93: [4276..4278]
 r94: [4274..4275]
 r95: [4263..4264]
 r96: [4253..4254]
 r97: [4244..4245]
 r98: [4243..4310]
 r100: [4240..4241]
 r101: [4237..4239]
 r102: [4235..4236]
 r103: [4229..4230]
 r104: [4226..4227]
 r105: [4216..4217]
 r106: [4211..4215]
 r107: [4211..4212]
 r108: [4209..4210]
 r109: [4205..4208]
 r110: [4205..4207]
 r111: [4182..4183]
 r112: [4177..4181]
 r113: [4177..4178]
 r114: [4175..4176]
 r115: [4172..4174]
 r116: [4157..4171]
 r117: [4167..4168]
 r118: [4162..4166]
 r119: [4162..4163]
 r120: [4160..4161]
 r121: [4154..4159]
 r122: [4154..4156]
 r123: [4124..4125]
 r124: [4122..4123]
 r125: [4115..4121]
 r126: [4108..4109]
 r127: [4096..4103]
 r128: [4093..4094]
 r129: [4090..4091]
 r130: [4087..4088]
 r131: [4085..4086]
 r132: [4078..4084]
 r133: [4071..4072]
 r134: [4067..4068]
 r135: [4064..4065]
 r136: [4062..4063]
 r137: [4055..4061]
 r138: [4048..4049]
 r139: [4044..4045]
 r140: [4031..4032]
 r141: [4014..4015]
 r142: [4012..4013]
 r143: [4005..4011]
 r144: [3998..3999]
 r145: [3986..3993]
 r146: [3983..3984]
 r147: [3976..3977]
 r148: [3963..3964]
 r149: [3961..3962]
 r150: [3956..3960]
 r151: [3956..3957]
 r152: [3953..3955]
 r153: [3938..3952]
 r154: [3948..3949]
 r155: [3946..3947]
 r156: [3941..3945]
 r157: [3941..3942]
 r158: [3935..3940]
 r159: [3935..3937]
 r160: [3919..3920]
 r161: [3906..3907]
 r162: [3904..3905]
 r163: [3899..3903]
 r164: [3899..3900]
 r165: [3896..3898]
 r166: [3881..3895]
 r167: [3891..3892]
 r168: [3889..3890]
 r169: [3884..3888]
 r170: [3884..3885]
 r171: [3878..3883]
 r172: [3878..3880]
 r173: [3854..3855]
 r174: [3852..3853]
 r175: [3845..3851]
 r176: [3838..3839]
 r177: [3826..3833]
 r178: [3824..3825]
 r179: [3808..3809]
 r180: [3806..3807]
 r181: [3799..3805]
 r182: [3792..3793]
 r183: [3780..3787]
 r184: [3778..3779]
 r185: [3756..3757]
 r186: [3754..3755]
 r187: [3747..3753]
 r188: [3740..3741]
 r189: [3728..3735]
 r190: [3726..3727]
 r191: [3704..3705]
 r192: [3702..3703]
 r193: [3695..3701]
 r194: [3688..3689]
 r195: [3676..3683]
 r196: [3674..3675]
 r197: [3652..3653]
 r198: [3650..3651]
 r199: [3643..3649]
 r200: [3636..3637]
 r201: [3624..3631]
 r202: [3622..3623]
 r203: [3613..3614]
 r204: [3608..3612]
 r205: [3608..3609]
 r206: [3606..3607]
 r207: [3603..3605]
 r208: [3596..3597]
 r209: [3591..3595]
 r210: [3591..3592]
 r211: [3589..3590]
 r212: [3586..3588]
 r213: [3576..3580]
 r214: [3576..3577]
 r215: [3574..3575]
 r216: [3566..3567]
 r217: [3561..3565]
 r218: [3561..3562]
 r219: [3559..3560]
 r220: [3556..3558]
 r221: [3546..3550]
 r222: [3546..3547]
 r223: [3544..3545]
 r224: [3536..3537]
 r225: [3531..3535]
 r226: [3531..3532]
 r227: [3529..3530]
 r228: [3526..3528]
 r229: [3492..3493]
 r230: [3490..3491]
 r231: [3483..3489]
 r232: [3476..3477]
 r233: [3464..3471]
 r234: [3462..3463]
 r235: [3453..3454]
 r236: [3448..3452]
 r237: [3448..3449]
 r238: [3446..3447]
 r239: [3443..3445]
 r240: [3422..3440]
 r241: [3436..3437]
 r242: [3431..3435]
 r243: [3431..3432]
 r244: [3429..3430]
 r245: [3426..3428]
 r246: [3422..3423]
 r247: [3399..3400]
 r248: [3394..3398]
 r249: [3394..3395]
 r250: [3392..3393]
 r251: [3389..3391]
 r252: [3368..3386]
 r253: [3382..3383]
 r254: [3377..3381]
 r255: [3377..3378]
 r256: [3375..3376]
 r257: [3372..3374]
 r258: [3368..3369]
 r259: [3366..3367]
 r260: [3351..3365]
 r261: [3349..3364]
 r262: [3360..3361]
 r263: [3355..3359]
 r264: [3355..3356]
 r265: [3353..3354]
 r266: [3345..3352]
 r267: [3345..3347]
 r268: [3415..3416]
 r269: [3410..3414]
 r270: [3410..3411]
 r271: [3408..3409]
 r272: [3404..3407]
 r273: [3312..3313]
 r274: [3296..3297]
 r275: [3300..3301]
 r276: [3294..3295]
 r277: [3286..3287]
 r278: [3284..3285]
 r279: [3277..3283]
 r280: [3270..3271]
 r281: [3258..3265]
 r282: [3256..3257]
 r283: [3247..3248]
 r284: [3242..3246]
 r285: [3242..3243]
 r286: [3240..3241]
 r287: [3237..3239]
 r288: [3233..3234]
 r289: [3212..3213]
 r290: [3207..3211]
 r291: [3207..3208]
 r292: [3205..3206]
 r293: [3202..3204]
 r294: [3167..3199]
 r295: [3195..3196]
 r296: [3190..3194]
 r297: [3190..3191]
 r298: [3188..3189]
 r299: [3185..3187]
 r300: [3181..3182]
 r301: [3167..3180]
 r302: [3176..3177]
 r303: [3171..3175]
 r304: [3171..3172]
 r305: [3169..3170]
 r306: [3164..3168]
 r307: [3164..3166]
 r308: [3228..3229]
 r309: [3223..3227]
 r310: [3223..3224]
 r311: [3221..3222]
 r312: [3217..3220]
 r313: [3131..3132]
 r314: [3115..3116]
 r315: [3119..3120]
 r316: [3113..3114]
 r317: [3105..3106]
 r318: [3103..3104]
 r319: [3096..3102]
 r320: [3089..3090]
 r321: [3077..3084]
 r322: [3075..3076]
 r323: [3066..3067]
 r324: [3061..3065]
 r325: [3061..3062]
 r326: [3059..3060]
 r327: [3056..3058]
 r328: [3052..3053]
 r329: [3031..3032]
 r330: [3026..3030]
 r331: [3026..3027]
 r332: [3024..3025]
 r333: [3021..3023]
 r334: [2986..3018]
 r335: [3014..3015]
 r336: [3009..3013]
 r337: [3009..3010]
 r338: [3007..3008]
 r339: [3004..3006]
 r340: [3000..3001]
 r341: [2986..2999]
 r342: [2995..2996]
 r343: [2990..2994]
 r344: [2990..2991]
 r345: [2988..2989]
 r346: [2983..2987]
 r347: [2983..2985]
 r348: [3047..3048]
 r349: [3042..3046]
 r350: [3042..3043]
 r351: [3040..3041]
 r352: [3036..3039]
 r353: [2950..2951]
 r354: [2934..2935]
 r355: [2938..2939]
 r356: [2932..2933]
 r357: [2924..2925]
 r358: [2922..2923]
 r359: [2915..2921]
 r360: [2908..2909]
 r361: [2896..2903]
 r362: [2894..2895]
 r363: [2892..2893]
 r364: [2881..2882]
 r365: [2876..2880]
 r366: [2876..2877]
 r367: [2874..2875]
 r368: [2871..2873]
 r369: [2867..2868]
 r370: [2862..2866]
 r371: [2862..2863]
 r372: [2860..2861]
 r373: [2856..2859]
 r374: [2856..2858]
 r375: [2852..2853]
 r376: [2847..2851]
 r377: [2847..2848]
 r378: [2845..2846]
 r379: [2841..2844]
 r380: [2841..2843]
 r381: [2820..2821]
 r382: [2815..2819]
 r383: [2815..2816]
 r384: [2813..2814]
 r385: [2810..2812]
 r386: [2797..2798]
 r387: [2790..2796]
 r388: [2792..2793]
 r389: [2790..2791]
 r390: [2785..2789]
 r391: [2785..2786]
 r392: [2783..2784]
 r393: [2780..2782]
 r394: [2778..2779]
 r395: [2773..2774]
 r396: [2768..2772]
 r397: [2768..2769]
 r398: [2766..2767]
 r399: [2763..2765]
 r400: [2761..2762]
 r401: [2754..2755]
 r402: [2749..2753]
 r403: [2749..2750]
 r404: [2747..2748]
 r405: [2744..2746]
 r406: [2740..2741]
 r407: [2735..2736]
 r408: [2730..2734]
 r409: [2730..2731]
 r410: [2728..2729]
 r411: [2725..2727]
 r412: [2716..2717]
 r413: [2711..2715]
 r414: [2711..2712]
 r415: [2709..2710]
 r416: [2706..2708]
 r417: [2436..2437]
 r418: [2431..2435]
 r419: [2431..2432]
 r420: [2429..2430]
 r421: [2425..2428]
 r422: [2425..2427]
 r423: [2421..2422]
 r424: [2416..2420]
 r425: [2416..2417]
 r426: [2414..2415]
 r427: [2410..2413]
 r428: [2410..2412]
 r429: [2405..2406]
 r430: [2403..2404]
 r431: [2400..2402]
 r432: [2379..2397]
 r433: [2393..2394]
 r434: [2388..2392]
 r435: [2388..2389]
 r436: [2386..2387]
 r437: [2383..2385]
 r438: [2379..2380]
 r439: [2362..2378]
 r440: [2362..2375]
 r441: [2371..2372]
 r442: [2366..2370]
 r443: [2366..2367]
 r444: [2364..2365]
 r445: [2359..2363]
 r446: [2359..2361]
 r447: [2355..2356]
 r448: [2350..2354]
 r449: [2350..2351]
 r450: [2348..2349]
 r451: [2333..2347]
 r452: [2343..2344]
 r453: [2338..2342]
 r454: [2338..2339]
 r455: [2336..2337]
 r456: [2328..2335]
 r457: [2328..2330]
 r458: [2678..2679]
 r459: [2675..2677]
 r460: [2654..2672]
 r461: [2668..2669]
 r462: [2663..2667]
 r463: [2663..2664]
 r464: [2661..2662]
 r465: [2658..2660]
 r466: [2654..2655]
 r467: [2637..2653]
 r468: [2637..2650]
 r469: [2646..2647]
 r470: [2641..2645]
 r471: [2641..2642]
 r472: [2639..2640]
 r473: [2634..2638]
 r474: [2634..2636]
 r475: [2630..2631]
 r476: [2628..2629]
 r477: [2621..2627]
 r478: [2623..2624]
 r479: [2621..2622]
 r480: [2616..2620]
 r481: [2616..2617]
 r482: [2614..2615]
 r483: [2611..2613]
 r484: [2581..2608]
 r485: [2604..2605]
 r486: [2602..2603]
 r487: [2595..2601]
 r488: [2597..2598]
 r489: [2595..2596]
 r490: [2590..2594]
 r491: [2590..2591]
 r492: [2588..2589]
 r493: [2585..2587]
 r494: [2581..2582]
 r495: [2545..2580]
 r496: [2576..2577]
 r497: [2574..2575]
 r498: [2567..2573]
 r499: [2569..2570]
 r500: [2567..2568]
 r501: [2562..2566]
 r502: [2562..2563]
 r503: [2560..2561]
 r504: [2557..2559]
 r505: [2552..2554]
 r506: [2549..2551]
 r507: [2547..2548]
 r508: [2545..2546]
 r509: [2542..2544]
 r511: [2534..2535]
 r512: [2532..2533]
 r513: [2525..2531]
 r514: [2527..2528]
 r515: [2525..2526]
 r516: [2520..2524]
 r517: [2520..2521]
 r518: [2518..2519]
 r519: [2515..2517]
 r520: [2513..2514]
 r522: [2508..2509]
 r523: [2503..2507]
 r524: [2503..2504]
 r525: [2501..2502]
 r526: [2498..2500]
 r527: [2496..2497]
 r528: [2492..2495]
 r529: [2489..2490]
 r530: [2485..2488]
 r531: [2444..2483]
 r532: [2479..2480]
 r533: [2477..2478]
 r534: [2470..2476]
 r535: [2472..2473]
 r536: [2470..2471]
 r537: [2465..2469]
 r538: [2465..2466]
 r539: [2463..2464]
 r540: [2460..2462]
 r541: [2444..2457]
 r542: [2453..2454]
 r543: [2448..2452]
 r544: [2448..2449]
 r545: [2446..2447]
 r546: [2441..2445]
 r547: [2441..2443]
 r548: [2313..2314]
 r549: [2297..2298]
 r550: [2295..2296]
 r551: [2288..2294]
 r552: [2281..2282]
 r553: [2269..2276]
 r554: [2267..2268]
 r555: [2251..2252]
 r556: [2249..2250]
 r557: [2242..2248]
 r558: [2235..2236]
 r559: [2223..2230]
 r560: [2221..2222]
 r561: [2219..2220]
 r562: [2217..2218]
 r563: [2206..2207]
 r564: [2201..2205]
 r565: [2201..2202]
 r566: [2199..2200]
 r567: [2196..2198]
 r568: [2173..2174]
 r569: [2168..2172]
 r570: [2168..2169]
 r571: [2166..2167]
 r572: [2163..2165]
 r573: [2153..2154]
 r574: [2146..2152]
 r575: [2148..2149]
 r576: [2146..2147]
 r577: [2141..2145]
 r578: [2141..2142]
 r579: [2139..2140]
 r580: [2136..2138]
 r581: [2134..2135]
 r582: [2129..2130]
 r583: [2124..2128]
 r584: [2124..2125]
 r585: [2122..2123]
 r586: [2119..2121]
 r587: [2117..2118]
 r588: [2110..2111]
 r589: [2105..2109]
 r590: [2105..2106]
 r591: [2103..2104]
 r592: [2100..2102]
 r593: [2095..2097]
 r594: [2090..2091]
 r595: [2085..2089]
 r596: [2085..2086]
 r597: [2083..2084]
 r598: [2080..2082]
 r599: [2071..2072]
 r600: [2066..2070]
 r601: [2066..2067]
 r602: [2064..2065]
 r603: [2061..2063]
 r604: [1753..1754]
 r605: [1748..1752]
 r606: [1748..1749]
 r607: [1746..1747]
 r608: [1742..1745]
 r609: [1742..1744]
 r610: [1738..1739]
 r611: [1733..1737]
 r612: [1733..1734]
 r613: [1731..1732]
 r614: [1727..1730]
 r615: [1727..1729]
 r616: [1723..1724]
 r617: [1718..1722]
 r618: [1718..1719]
 r619: [1716..1717]
 r620: [1713..1715]
 r621: [1705..1706]
 r622: [1698..1704]
 r623: [1700..1701]
 r624: [1698..1699]
 r625: [1693..1697]
 r626: [1693..1694]
 r627: [1691..1692]
 r628: [1676..1690]
 r629: [1686..1687]
 r630: [1681..1685]
 r631: [1681..1682]
 r632: [1679..1680]
 r633: [1671..1678]
 r634: [1671..1673]
 r635: [1649..1667]
 r636: [1663..1664]
 r637: [1658..1662]
 r638: [1658..1659]
 r639: [1656..1657]
 r640: [1653..1655]
 r641: [1649..1650]
 r642: [1632..1648]
 r643: [1632..1645]
 r644: [1641..1642]
 r645: [1636..1640]
 r646: [1636..1637]
 r647: [1634..1635]
 r648: [1629..1633]
 r649: [1629..1631]
 r650: [1625..1626]
 r651: [1620..1624]
 r652: [1620..1621]
 r653: [1618..1619]
 r654: [1603..1617]
 r655: [1613..1614]
 r656: [1608..1612]
 r657: [1608..1609]
 r658: [1606..1607]
 r659: [1598..1605]
 r660: [1598..1600]
 r661: [1594..1595]
 r662: [1589..1593]
 r663: [1589..1590]
 r664: [1587..1588]
 r665: [1572..1586]
 r666: [1582..1583]
 r667: [1577..1581]
 r668: [1577..1578]
 r669: [1575..1576]
 r670: [1567..1574]
 r671: [1567..1569]
 r672: [2033..2034]
 r673: [2030..2032]
 r674: [2009..2027]
 r675: [2023..2024]
 r676: [2018..2022]
 r677: [2018..2019]
 r678: [2016..2017]
 r679: [2013..2015]
 r680: [2009..2010]
 r681: [1992..2008]
 r682: [1992..2005]
 r683: [2001..2002]
 r684: [1996..2000]
 r685: [1996..1997]
 r686: [1994..1995]
 r687: [1989..1993]
 r688: [1989..1991]
 r689: [1985..1986]
 r690: [1983..1984]
 r691: [1976..1982]
 r692: [1978..1979]
 r693: [1976..1977]
 r694: [1971..1975]
 r695: [1971..1972]
 r696: [1969..1970]
 r697: [1966..1968]
 r698: [1936..1963]
 r699: [1959..1960]
 r700: [1957..1958]
 r701: [1950..1956]
 r702: [1952..1953]
 r703: [1950..1951]
 r704: [1945..1949]
 r705: [1945..1946]
 r706: [1943..1944]
 r707: [1940..1942]
 r708: [1936..1937]
 r709: [1900..1935]
 r710: [1931..1932]
 r711: [1929..1930]
 r712: [1922..1928]
 r713: [1924..1925]
 r714: [1922..1923]
 r715: [1917..1921]
 r716: [1917..1918]
 r717: [1915..1916]
 r718: [1912..1914]
 r719: [1907..1909]
 r720: [1904..1906]
 r721: [1902..1903]
 r722: [1900..1901]
 r723: [1897..1899]
 r725: [1889..1890]
 r726: [1887..1888]
 r727: [1880..1886]
 r728: [1882..1883]
 r729: [1880..1881]
 r730: [1875..1879]
 r731: [1875..1876]
 r732: [1873..1874]
 r733: [1870..1872]
 r734: [1868..1869]
 r736: [1863..1864]
 r737: [1858..1862]
 r738: [1858..1859]
 r739: [1856..1857]
 r740: [1853..1855]
 r741: [1851..1852]
 r742: [1847..1850]
 r743: [1844..1845]
 r744: [1840..1843]
 r745: [1799..1838]
 r746: [1834..1835]
 r747: [1832..1833]
 r748: [1825..1831]
 r749: [1827..1828]
 r750: [1825..1826]
 r751: [1820..1824]
 r752: [1820..1821]
 r753: [1818..1819]
 r754: [1815..1817]
 r755: [1799..1812]
 r756: [1808..1809]
 r757: [1803..1807]
 r758: [1803..1804]
 r759: [1801..1802]
 r760: [1796..1800]
 r761: [1796..1798]
 r762: [1792..1793]
 r763: [1785..1791]
 r764: [1787..1788]
 r765: [1785..1786]
 r766: [1780..1784]
 r767: [1780..1781]
 r768: [1778..1779]
 r769: [1763..1777]
 r770: [1773..1774]
 r771: [1768..1772]
 r772: [1768..1769]
 r773: [1766..1767]
 r774: [1758..1765]
 r775: [1758..1760]
 r776: [1552..1553]
 r777: [1536..1537]
 r778: [1534..1535]
 r779: [1527..1533]
 r780: [1520..1521]
 r781: [1508..1515]
 r782: [1506..1507]
 r783: [1490..1491]
 r784: [1488..1489]
 r785: [1481..1487]
 r786: [1474..1475]
 r787: [1462..1469]
 r788: [1460..1461]
 r789: [1444..1445]
 r790: [1442..1443]
 r791: [1435..1441]
 r792: [1428..1429]
 r793: [1416..1423]
 r794: [1414..1415]
 r795: [1409..1411]
 r796: [1402..1404]
 r797: [1391..1392]
 r798: [1386..1390]
 r799: [1386..1387]
 r800: [1384..1385]
 r801: [1381..1383]
 r802: [1365..1378]
 r803: [1374..1375]
 r804: [1369..1373]
 r805: [1369..1370]
 r806: [1367..1368]
 r807: [1362..1366]
 r808: [1362..1364]
 r809: [1330..1331]
 r810: [1314..1315]
 r811: [1318..1319]
 r812: [1312..1313]
 r813: [1310..1311]
 r814: [1308..1309]
 r815: [1301..1307]
 r816: [1294..1295]
 r817: [1282..1289]
 r818: [1280..1281]
 r819: [1275..1277]
 r820: [1268..1270]
 r821: [1257..1258]
 r822: [1252..1256]
 r823: [1252..1253]
 r824: [1250..1251]
 r825: [1247..1249]
 r826: [1231..1244]
 r827: [1240..1241]
 r828: [1235..1239]
 r829: [1235..1236]
 r830: [1233..1234]
 r831: [1228..1232]
 r832: [1228..1230]
 r833: [1196..1197]
 r834: [1180..1181]
 r835: [1184..1185]
 r836: [1178..1179]
 r837: [1176..1177]
 r838: [1174..1175]
 r839: [1167..1173]
 r840: [1160..1161]
 r841: [1148..1155]
 r842: [1146..1147]
 r843: [1141..1143]
 r844: [1134..1136]
 r845: [1123..1124]
 r846: [1118..1122]
 r847: [1118..1119]
 r848: [1116..1117]
 r849: [1113..1115]
 r850: [1109..1110]
 r851: [1094..1108]
 r852: [1104..1105]
 r853: [1099..1103]
 r854: [1099..1100]
 r855: [1097..1098]
 r856: [1091..1096]
 r857: [1091..1093]
 r858: [1059..1060]
 r859: [1043..1044]
 r860: [1047..1048]
 r861: [1041..1042]
 r862: [1039..1040]
 r863: [1037..1038]
 r864: [1030..1036]
 r865: [1023..1024]
 r866: [1011..1018]
 r867: [1009..1010]
 r868: [1004..1006]
 r869: [997..999]
 r870: [986..987]
 r871: [981..985]
 r872: [981..982]
 r873: [979..980]
 r874: [976..978]
 r875: [972..973]
 r876: [957..971]
 r877: [967..968]
 r878: [962..966]
 r879: [962..963]
 r880: [960..961]
 r881: [954..959]
 r882: [954..956]
 r883: [922..923]
 r884: [906..907]
 r885: [910..911]
 r886: [904..905]
 r887: [902..903]
 r888: [900..901]
 r889: [893..899]
 r890: [886..887]
 r891: [874..881]
 r892: [872..873]
 r893: [867..869]
 r894: [860..862]
 r895: [849..850]
 r896: [844..848]
 r897: [844..845]
 r898: [842..843]
 r899: [839..841]
 r900: [823..836]
 r901: [832..833]
 r902: [827..831]
 r903: [827..828]
 r904: [825..826]
 r905: [820..824]
 r906: [820..822]
 r907: [788..789]
 r908: [772..773]
 r909: [776..777]
 r910: [770..771]
 r911: [768..769]
 r912: [766..767]
 r913: [759..765]
 r914: [752..753]
 r915: [740..747]
 r916: [738..739]
 r917: [733..735]
 r918: [726..728]
 r919: [715..716]
 r920: [710..714]
 r921: [710..711]
 r922: [708..709]
 r923: [705..707]
 r924: [689..702]
 r925: [698..699]
 r926: [693..697]
 r927: [693..694]
 r928: [691..692]
 r929: [686..690]
 r930: [686..688]
 r931: [654..655]
 r932: [638..639]
 r933: [642..643]
 r934: [636..637]
 r935: [634..635]
 r936: [632..633]
 r937: [625..631]
 r938: [618..619]
 r939: [606..613]
 r940: [604..605]
 r941: [595..596]
 r942: [590..594]
 r943: [590..591]
 r944: [588..589]
 r945: [585..587]
 r946: [581..582]
 r947: [573..574]
 r948: [568..572]
 r949: [568..569]
 r950: [566..567]
 r951: [563..565]
 r952: [542..560]
 r953: [556..557]
 r954: [551..555]
 r955: [551..552]
 r956: [549..550]
 r957: [546..548]
 r958: [542..543]
 r959: [535..536]
 r960: [530..534]
 r961: [530..531]
 r962: [528..529]
 r963: [525..527]
 r964: [506..524]
 r965: [520..521]
 r966: [515..519]
 r967: [515..516]
 r968: [513..514]
 r969: [510..512]
 r970: [506..507]
 r971: [492..505]
 r972: [501..502]
 r973: [496..500]
 r974: [496..497]
 r975: [494..495]
 r976: [489..493]
 r977: [489..491]
 r978: [461..462]
 r979: [459..460]
 r980: [452..458]
 r981: [445..446]
 r982: [433..440]
 r983: [431..432]
 r984: [422..423]
 r985: [417..421]
 r986: [417..418]
 r987: [415..416]
 r988: [412..414]
 r989: [407..409]
 r990: [399..400]
 r991: [394..398]
 r992: [394..395]
 r993: [392..393]
 r994: [389..391]
 r995: [381..382]
 r996: [374..380]
 r997: [376..377]
 r998: [374..375]
 r999: [369..373]
 r1000: [369..370]
 r1001: [367..368]
 r1002: [364..366]
 r1003: [355..356]
 r1004: [353..354]
 r1005: [351..352]
 r1006: [332..350]
 r1007: [346..347]
 r1008: [341..345]
 r1009: [341..342]
 r1010: [339..340]
 r1011: [336..338]
 r1012: [332..333]
 r1013: [325..326]
 r1014: [320..324]
 r1015: [320..321]
 r1016: [318..319]
 r1017: [315..317]
 r1018: [296..314]
 r1019: [310..311]
 r1020: [305..309]
 r1021: [305..306]
 r1022: [303..304]
 r1023: [300..302]
 r1024: [296..297]
 r1025: [282..295]
 r1026: [291..292]
 r1027: [286..290]
 r1028: [286..287]
 r1029: [284..285]
 r1030: [279..283]
 r1031: [279..281]
 r1032: [251..252]
 r1033: [249..250]
 r1034: [242..248]
 r1035: [235..236]
 r1036: [223..230]
 r1037: [221..222]
 r1038: [212..213]
 r1039: [207..211]
 r1040: [207..208]
 r1041: [205..206]
 r1042: [202..204]
 r1043: [198..199]
 r1044: [190..191]
 r1045: [185..189]
 r1046: [185..186]
 r1047: [183..184]
 r1048: [180..182]
 r1049: [159..177]
 r1050: [173..174]
 r1051: [168..172]
 r1052: [168..169]
 r1053: [166..167]
 r1054: [163..165]
 r1055: [159..160]
 r1056: [152..153]
 r1057: [147..151]
 r1058: [147..148]
 r1059: [145..146]
 r1060: [142..144]
 r1061: [123..141]
 r1062: [137..138]
 r1063: [132..136]
 r1064: [132..133]
 r1065: [130..131]
 r1066: [127..129]
 r1067: [123..124]
 r1068: [109..122]
 r1069: [118..119]
 r1070: [113..117]
 r1071: [113..114]
 r1072: [111..112]
 r1073: [106..110]
 r1074: [106..108]
 r1075: [78..79]
 r1076: [76..77]
 r1077: [69..75]
 r1078: [62..63]
 r1079: [50..57]
 r1080: [48..49]
 r1081: [32..33]
 r1082: [30..31]
 r1083: [23..29]
 r1084: [16..17]
 r1085: [4..11]
 r1086: [3574..3600] [3542..3571]
 r1087: [3544..3553] [3526..3541]
 r1088: [4299..4303]
 r1089: [3866..4297]
 r1090: [4286..4288]
 r1091: [4281..4285]
 r1095: [4270..4271]
 r1096: [3866..4267]
 r1097: [4258..4260]
 r1098: [4250..4257]
 r1099: [4247..4249]
 r1100: [4242..4246]
 r1104: [4231..4232]
 r1106: [4222..4224]
 r1107: [4193..4223]
 r1108: [4193..4194]
 r1109: [4200..4201]
 r1110: [4188..4190]
 r1111: [4142..4189]
 r1112: [4142..4143]
 r1113: [4149..4150]
 r1114: [3923..3972]
 r1115: [3923..3924]
 r1116: [3930..3968]
 r1117: [3930..3931]
 r1118: [3866..3915]
 r1119: [3866..3867]
 r1120: [3873..3911]
 r1121: [3873..3874]
 r1122: [3619..3621]
 r1123: [3514..3620]
 r1124: [3514..3515]
 r1125: [3521..3522]
 r1126: [3572..3583]
 r1127: [3459..3461]
 r1128: [3332..3460]
 r1129: [3332..3333]
 r1130: [3339..3340]
 r1131: [3253..3255]
 r1132: [3151..3254]
 r1133: [3151..3152]
 r1134: [3158..3159]
 r1135: [3072..3074]
 r1136: [2970..3073]
 r1137: [2970..2971]
 r1138: [2977..2978]
 r1139: [2887..2889]
 r1140: [2829..2888]
 r1141: [2829..2830]
 r1142: [2836..2837]
 r1143: [2826..2828]
 r1144: [2315..2827]
 r1145: [2315..2316]
 r1146: [2322..2323]
 r1147: [2802..2803]
 r1148: [2700..2701]
 r1149: [2212..2214]
 r1150: [2184..2213]
 r1151: [2184..2185]
 r1152: [2191..2192]
 r1153: [2181..2183]
 r1154: [1554..2182]
 r1155: [1554..1555]
 r1156: [1561..1562]
 r1157: [2055..2158]
 r1158: [2055..2056]
 r1159: [1397..1399]
 r1160: [1350..1398]
 r1161: [1350..1351]
 r1162: [1357..1358]
 r1163: [1263..1265]
 r1164: [1216..1264]
 r1165: [1216..1217]
 r1166: [1223..1224]
 r1167: [1129..1131]
 r1168: [1079..1130]
 r1169: [1079..1080]
 r1170: [1086..1087]
 r1171: [992..994]
 r1172: [942..993]
 r1173: [942..943]
 r1174: [949..950]
 r1175: [855..857]
 r1176: [808..856]
 r1177: [808..809]
 r1178: [815..816]
 r1179: [721..723]
 r1180: [674..722]
 r1181: [674..675]
 r1182: [681..682]
 r1183: [601..603]
 r1184: [477..602]
 r1185: [477..478]
 r1186: [484..485]
 r1187: [428..430]
 r1188: [267..429]
 r1189: [267..268]
 r1190: [274..275]
 r1191: [218..220]
 r1192: [94..219]
 r1193: [94..95]
 r1194: [101..102]
 r1195: [4308..4309]
 r1196: [4304..4305]
 r1197: [4301..4302]
 r1198: [4295..4296]
 r1199: [4291..4292]
 r1200: [4286..4287]
 r1201: [4276..4277]
 r1202: [4272..4273]
 r1203: [4265..4266]
 r1204: [4261..4262]
 r1205: [4258..4259]
 r1206: [4255..4256]
 r1207: [4251..4252]
 r1208: [4247..4248]
 r1209: [4237..4238]
 r1210: [4233..4234]
 r1211: [4195..4196]
 r1212: [4202..4203]
 r1213: [4218..4219]
 r1214: [4213..4214]
 r1215: [4205..4206]
 r1216: [4144..4145]
 r1217: [4151..4152]
 r1218: [4184..4185]
 r1219: [4179..4180]
 r1220: [4172..4173]
 r1221: [4169..4170]
 r1222: [4164..4165]
 r1223: [4157..4158]
 r1224: [4154..4155]
 r1225: [4137..4139]
 r1226: [4136..4138]
 r1227: [4132..4135] [4126..4128]
 r1228: [4127..4134]
 r1229: [4130..4133]
 r1230: [4119..4120] [4114..4116] [4110..4111]
 r1231: [4117..4118]
 r1232: [4112..4113]
 r1233: [4106..4107]
 r1234: [4104..4105]
 r1235: [4099..4102]
 r1236: [4098..4101]
 r1237: [4097..4100]
 r1238: [4082..4083] [4077..4079] [4073..4074]
 r1239: [4080..4081]
 r1240: [4075..4076]
 r1241: [4069..4070]
 r1242: [4059..4060] [4054..4056] [4050..4051]
 r1243: [4057..4058]
 r1244: [4052..4053]
 r1245: [4046..4047]
 r1246: [4036..4042]
 r1247: [4035..4041]
 r1248: [4034..4040]
 r1249: [4033..4039]
 r1250: [4027..4029]
 r1251: [4026..4028]
 r1252: [4022..4025] [4016..4018]
 r1253: [4017..4024]
 r1254: [4020..4023]
 r1255: [4009..4010] [4004..4006] [4000..4001]
 r1256: [4007..4008]
 r1257: [4002..4003]
 r1258: [3996..3997]
 r1259: [3994..3995]
 r1260: [3989..3992]
 r1261: [3988..3991]
 r1262: [3987..3990]
 r1263: [3979..3981]
 r1264: [3978..3980]
 r1265: [3973..3974]
 r1266: [3925..3926]
 r1267: [3969..3970]
 r1268: [3932..3933]
 r1269: [3965..3966]
 r1270: [3958..3959]
 r1271: [3953..3954]
 r1272: [3950..3951]
 r1273: [3943..3944]
 r1274: [3938..3939]
 r1275: [3935..3936]
 r1276: [3916..3917]
 r1277: [3868..3869]
 r1278: [3912..3913]
 r1279: [3875..3876]
 r1280: [3908..3909]
 r1281: [3901..3902]
 r1282: [3896..3897]
 r1283: [3893..3894]
 r1284: [3886..3887]
 r1285: [3881..3882]
 r1286: [3878..3879]
 r1287: [3862..3865] [3856..3858]
 r1288: [3857..3864]
 r1289: [3860..3863]
 r1290: [3849..3850] [3844..3846] [3840..3841]
 r1291: [3847..3848]
 r1292: [3842..3843]
 r1293: [3836..3837]
 r1294: [3834..3835]
 r1295: [3829..3832]
 r1296: [3828..3831]
 r1297: [3827..3830]
 r1298: [3821..3823]
 r1299: [3820..3822]
 r1300: [3816..3819] [3810..3812]
 r1301: [3811..3818]
 r1302: [3814..3817]
 r1303: [3803..3804] [3798..3800] [3794..3795]
 r1304: [3801..3802]
 r1305: [3796..3797]
 r1306: [3790..3791]
 r1307: [3788..3789]
 r1308: [3783..3786]
 r1309: [3782..3785]
 r1310: [3781..3784]
 r1311: [3775..3777]
 r1312: [3774..3776]
 r1313: [3770..3773] [3764..3766]
 r1314: [3765..3772]
 r1315: [3768..3771]
 r1316: [3760..3763]
 r1317: [3759..3762]
 r1318: [3758..3761]
 r1319: [3751..3752] [3746..3748] [3742..3743]
 r1320: [3749..3750]
 r1321: [3744..3745]
 r1322: [3738..3739]
 r1323: [3736..3737]
 r1324: [3731..3734]
 r1325: [3730..3733]
 r1326: [3729..3732]
 r1327: [3723..3725]
 r1328: [3722..3724]
 r1329: [3718..3721] [3712..3714]
 r1330: [3713..3720]
 r1331: [3716..3719]
 r1332: [3708..3711]
 r1333: [3707..3710]
 r1334: [3706..3709]
 r1335: [3699..3700] [3694..3696] [3690..3691]
 r1336: [3697..3698]
 r1337: [3692..3693]
 r1338: [3686..3687]
 r1339: [3684..3685]
 r1340: [3679..3682]
 r1341: [3678..3681]
 r1342: [3677..3680]
 r1343: [3671..3673]
 r1344: [3670..3672]
 r1345: [3666..3669] [3660..3662]
 r1346: [3661..3668]
 r1347: [3664..3667]
 r1348: [3656..3659]
 r1349: [3655..3658]
 r1350: [3654..3657]
 r1351: [3647..3648] [3642..3644] [3638..3639]
 r1352: [3645..3646]
 r1353: [3640..3641]
 r1354: [3634..3635]
 r1355: [3632..3633]
 r1356: [3627..3630]
 r1357: [3626..3629]
 r1358: [3625..3628]
 r1359: [3516..3517]
 r1360: [3523..3524]
 r1361: [3615..3616]
 r1362: [3610..3611]
 r1363: [3601..3604]
 r1364: [3601..3602]
 r1365: [3598..3599]
 r1366: [3593..3594]
 r1367: [3584..3587]
 r1368: [3584..3585]
 r1369: [3581..3582]
 r1370: [3578..3579]
 r1371: [3568..3569]
 r1372: [3563..3564]
 r1373: [3554..3557]
 r1374: [3554..3555]
 r1375: [3551..3552]
 r1376: [3548..3549]
 r1377: [3538..3539]
 r1378: [3533..3534]
 r1379: [3526..3527]
 r1380: [3511..3513]
 r1381: [3510..3512]
 r1382: [3506..3509] [3500..3502]
 r1383: [3501..3508]
 r1384: [3504..3507]
 r1385: [3496..3499]
 r1386: [3495..3498]
 r1387: [3494..3497]
 r1388: [3487..3488] [3482..3484] [3478..3479]
 r1389: [3485..3486]
 r1390: [3480..3481]
 r1391: [3474..3475]
 r1392: [3472..3473]
 r1393: [3467..3470]
 r1394: [3466..3469]
 r1395: [3465..3468]
 r1396: [3334..3335]
 r1397: [3341..3342]
 r1398: [3455..3456]
 r1399: [3450..3451]
 r1400: [3441..3444]
 r1401: [3441..3442]
 r1402: [3438..3439]
 r1403: [3433..3434]
 r1404: [3424..3427]
 r1405: [3424..3425]
 r1406: [3420..3421]
 r1407: [3401..3402]
 r1408: [3396..3397]
 r1409: [3387..3390]
 r1410: [3387..3388]
 r1411: [3384..3385]
 r1412: [3379..3380]
 r1413: [3370..3373]
 r1414: [3370..3371]
 r1415: [3362..3363]
 r1416: [3357..3358]
 r1417: [3345..3346]
 r1418: [3417..3418]
 r1419: [3412..3413]
 r1420: [3404..3406]
 r1421: [3404..3405]
 r1422: [3329..3331]
 r1423: [3328..3330]
 r1424: [3324..3327] [3318..3320]
 r1425: [3319..3326]
 r1426: [3322..3325]
 r1427: [3316..3317]
 r1428: [3314..3315]
 r1429: [3310..3311]
 r1431: [3308..3309]
 r1432: [3306..3308]
 r1433: [3307..3307]
 r1434: [3304..3305]
 r1435: [3298..3299]
 r1436: [3302..3303]
 r1437: [3290..3293]
 r1438: [3289..3292]
 r1439: [3288..3291]
 r1440: [3281..3282] [3276..3278] [3272..3273]
 r1441: [3279..3280]
 r1442: [3274..3275]
 r1443: [3268..3269]
 r1444: [3266..3267]
 r1445: [3261..3264]
 r1446: [3260..3263]
 r1447: [3259..3262]
 r1448: [3153..3154]
 r1449: [3160..3161]
 r1450: [3249..3250]
 r1451: [3244..3245]
 r1452: [3235..3238]
 r1453: [3235..3236]
 r1454: [3214..3215]
 r1455: [3209..3210]
 r1456: [3200..3203]
 r1457: [3200..3201]
 r1458: [3197..3198]
 r1459: [3192..3193]
 r1460: [3183..3186]
 r1461: [3183..3184]
 r1462: [3178..3179]
 r1463: [3173..3174]
 r1464: [3164..3165]
 r1465: [3230..3231]
 r1466: [3225..3226]
 r1467: [3217..3219]
 r1468: [3217..3218]
 r1469: [3148..3150]
 r1470: [3147..3149]
 r1471: [3143..3146] [3137..3139]
 r1472: [3138..3145]
 r1473: [3141..3144]
 r1474: [3135..3136]
 r1475: [3133..3134]
 r1476: [3129..3130]
 r1478: [3127..3128]
 r1479: [3125..3127]
 r1480: [3126..3126]
 r1481: [3123..3124]
 r1482: [3117..3118]
 r1483: [3121..3122]
 r1484: [3109..3112]
 r1485: [3108..3111]
 r1486: [3107..3110]
 r1487: [3100..3101] [3095..3097] [3091..3092]
 r1488: [3098..3099]
 r1489: [3093..3094]
 r1490: [3087..3088]
 r1491: [3085..3086]
 r1492: [3080..3083]
 r1493: [3079..3082]
 r1494: [3078..3081]
 r1495: [2972..2973]
 r1496: [2979..2980]
 r1497: [3068..3069]
 r1498: [3063..3064]
 r1499: [3054..3057]
 r1500: [3054..3055]
 r1501: [3033..3034]
 r1502: [3028..3029]
 r1503: [3019..3022]
 r1504: [3019..3020]
 r1505: [3016..3017]
 r1506: [3011..3012]
 r1507: [3002..3005]
 r1508: [3002..3003]
 r1509: [2997..2998]
 r1510: [2992..2993]
 r1511: [2983..2984]
 r1512: [3049..3050]
 r1513: [3044..3045]
 r1514: [3036..3038]
 r1515: [3036..3037]
 r1516: [2967..2969]
 r1517: [2966..2968]
 r1518: [2962..2965] [2956..2958]
 r1519: [2957..2964]
 r1520: [2960..2963]
 r1521: [2954..2955]
 r1522: [2952..2953]
 r1523: [2948..2949]
 r1525: [2946..2947]
 r1526: [2944..2946]
 r1527: [2945..2945]
 r1528: [2942..2943]
 r1529: [2936..2937]
 r1530: [2940..2941]
 r1531: [2928..2931]
 r1532: [2927..2930]
 r1533: [2926..2929]
 r1534: [2919..2920] [2914..2916] [2910..2911]
 r1535: [2917..2918]
 r1536: [2912..2913]
 r1537: [2906..2907]
 r1538: [2904..2905]
 r1539: [2899..2902]
 r1540: [2898..2901]
 r1541: [2897..2900]
 r1542: [2890..2891]
 r1543: [2831..2832]
 r1544: [2838..2839]
 r1545: [2883..2884]
 r1546: [2878..2879]
 r1547: [2871..2872]
 r1548: [2869..2870]
 r1549: [2864..2865]
 r1550: [2856..2857]
 r1551: [2854..2855]
 r1552: [2849..2850]
 r1553: [2841..2842]
 r1554: [2317..2318]
 r1555: [2324..2325]
 r1556: [2822..2823]
 r1557: [2817..2818]
 r1558: [2808..2811]
 r1559: [2808..2809]
 r1560: [2806..2807]
 r1561: [2804..2805]
 r1562: [2702..2703]
 r1563: [2799..2800]
 r1564: [2794..2795]
 r1565: [2787..2788]
 r1566: [2780..2781]
 r1567: [2775..2776]
 r1568: [2770..2771]
 r1569: [2763..2764]
 r1570: [2758..2759]
 r1571: [2756..2757]
 r1572: [2751..2752]
 r1573: [2742..2745]
 r1574: [2742..2743]
 r1575: [2737..2738]
 r1576: [2732..2733]
 r1577: [2723..2726]
 r1578: [2723..2724]
 r1579: [2721..2722]
 r1580: [2718..2719]
 r1581: [2713..2714]
 r1582: [2706..2707]
 r1583: [2696..2697]
 r1584: [2693..2694]
 r1585: [2438..2439]
 r1586: [2433..2434]
 r1587: [2425..2426]
 r1588: [2423..2424]
 r1589: [2418..2419]
 r1590: [2410..2411]
 r1591: [2690..2691]
 r1592: [2687..2688]
 r1593: [2407..2408]
 r1594: [2398..2401]
 r1595: [2398..2399]
 r1596: [2395..2396]
 r1597: [2390..2391]
 r1598: [2381..2384]
 r1599: [2381..2382]
 r1600: [2376..2377]
 r1601: [2373..2374]
 r1602: [2368..2369]
 r1603: [2359..2360]
 r1604: [2357..2358]
 r1605: [2352..2353]
 r1606: [2345..2346]
 r1607: [2340..2341]
 r1608: [2331..2334]
 r1609: [2331..2332]
 r1610: [2328..2329]
 r1611: [2684..2685]
 r1612: [2682..2683]
 r1613: [2680..2681]
 r1614: [2673..2676]
 r1615: [2673..2674]
 r1616: [2670..2671]
 r1617: [2665..2666]
 r1618: [2656..2659]
 r1619: [2656..2657]
 r1620: [2651..2652]
 r1621: [2648..2649]
 r1622: [2643..2644]
 r1623: [2634..2635]
 r1624: [2632..2633]
 r1625: [2625..2626]
 r1626: [2618..2619]
 r1627: [2609..2612]
 r1628: [2609..2610]
 r1629: [2606..2607]
 r1630: [2599..2600]
 r1631: [2592..2593]
 r1632: [2583..2586]
 r1633: [2583..2584]
 r1634: [2578..2579]
 r1635: [2571..2572]
 r1636: [2564..2565]
 r1637: [2555..2558]
 r1638: [2555..2556]
 r1639: [2552..2553]
 r1640: [2549..2550]
 r1641: [2540..2543]
 r1642: [2536..2537]
 r1643: [2529..2530]
 r1644: [2522..2523]
 r1645: [2515..2516]
 r1646: [2510..2511]
 r1647: [2505..2506]
 r1648: [2498..2499]
 r1649: [2481..2482]
 r1650: [2474..2475]
 r1651: [2467..2468]
 r1652: [2458..2461]
 r1653: [2458..2459]
 r1654: [2455..2456]
 r1655: [2450..2451]
 r1656: [2441..2442]
 r1657: [2310..2312]
 r1658: [2309..2311]
 r1659: [2305..2308] [2299..2301]
 r1660: [2300..2307]
 r1661: [2303..2306]
 r1662: [2292..2293] [2287..2289] [2283..2284]
 r1663: [2290..2291]
 r1664: [2285..2286]
 r1665: [2279..2280]
 r1666: [2277..2278]
 r1667: [2272..2275]
 r1668: [2271..2274]
 r1669: [2270..2273]
 r1670: [2264..2266]
 r1671: [2263..2265]
 r1672: [2259..2262] [2253..2255]
 r1673: [2254..2261]
 r1674: [2257..2260]
 r1675: [2246..2247] [2241..2243] [2237..2238]
 r1676: [2244..2245]
 r1677: [2239..2240]
 r1678: [2233..2234]
 r1679: [2231..2232]
 r1680: [2226..2229]
 r1681: [2225..2228]
 r1682: [2224..2227]
 r1683: [2215..2216]
 r1684: [2186..2187]
 r1685: [2193..2194]
 r1686: [2208..2209]
 r1687: [2203..2204]
 r1688: [2196..2197]
 r1689: [1556..1557]
 r1690: [1563..1564]
 r1691: [2177..2178]
 r1692: [2175..2176]
 r1693: [2170..2171]
 r1694: [2161..2164]
 r1695: [2161..2162]
 r1696: [2159..2160]
 r1697: [2057..2058]
 r1698: [2155..2156]
 r1699: [2150..2151]
 r1700: [2143..2144]
 r1701: [2136..2137]
 r1702: [2131..2132]
 r1703: [2126..2127]
 r1704: [2119..2120]
 r1705: [2114..2115]
 r1706: [2112..2113]
 r1707: [2107..2108]
 r1708: [2098..2101]
 r1709: [2098..2099]
 r1710: [2095..2096]
 r1711: [2092..2093]
 r1712: [2087..2088]
 r1713: [2078..2081]
 r1714: [2078..2079]
 r1715: [2076..2077]
 r1716: [2073..2074]
 r1717: [2068..2069]
 r1718: [2061..2062]
 r1719: [2051..2052]
 r1720: [2048..2049]
 r1721: [1755..1756]
 r1722: [1750..1751]
 r1723: [1742..1743]
 r1724: [1740..1741]
 r1725: [1735..1736]
 r1726: [1727..1728]
 r1727: [1725..1726]
 r1728: [1720..1721]
 r1729: [1711..1714]
 r1730: [1711..1712]
 r1731: [1709..1710]
 r1732: [1707..1708]
 r1733: [1702..1703]
 r1734: [1695..1696]
 r1735: [1688..1689]
 r1736: [1683..1684]
 r1737: [1674..1677]
 r1738: [1674..1675]
 r1739: [1671..1672]
 r1740: [2045..2046]
 r1741: [2042..2043]
 r1742: [1668..1669]
 r1743: [1665..1666]
 r1744: [1660..1661]
 r1745: [1651..1654]
 r1746: [1651..1652]
 r1747: [1646..1647]
 r1748: [1643..1644]
 r1749: [1638..1639]
 r1750: [1629..1630]
 r1751: [1627..1628]
 r1752: [1622..1623]
 r1753: [1615..1616]
 r1754: [1610..1611]
 r1755: [1601..1604]
 r1756: [1601..1602]
 r1757: [1598..1599]
 r1758: [1596..1597]
 r1759: [1591..1592]
 r1760: [1584..1585]
 r1761: [1579..1580]
 r1762: [1570..1573]
 r1763: [1570..1571]
 r1764: [1567..1568]
 r1765: [2039..2040]
 r1766: [2037..2038]
 r1767: [2035..2036]
 r1768: [2028..2031]
 r1769: [2028..2029]
 r1770: [2025..2026]
 r1771: [2020..2021]
 r1772: [2011..2014]
 r1773: [2011..2012]
 r1774: [2006..2007]
 r1775: [2003..2004]
 r1776: [1998..1999]
 r1777: [1989..1990]
 r1778: [1987..1988]
 r1779: [1980..1981]
 r1780: [1973..1974]
 r1781: [1964..1967]
 r1782: [1964..1965]
 r1783: [1961..1962]
 r1784: [1954..1955]
 r1785: [1947..1948]
 r1786: [1938..1941]
 r1787: [1938..1939]
 r1788: [1933..1934]
 r1789: [1926..1927]
 r1790: [1919..1920]
 r1791: [1910..1913]
 r1792: [1910..1911]
 r1793: [1907..1908]
 r1794: [1904..1905]
 r1795: [1895..1898]
 r1796: [1891..1892]
 r1797: [1884..1885]
 r1798: [1877..1878]
 r1799: [1870..1871]
 r1800: [1865..1866]
 r1801: [1860..1861]
 r1802: [1853..1854]
 r1803: [1836..1837]
 r1804: [1829..1830]
 r1805: [1822..1823]
 r1806: [1813..1816]
 r1807: [1813..1814]
 r1808: [1810..1811]
 r1809: [1805..1806]
 r1810: [1796..1797]
 r1811: [1794..1795]
 r1812: [1789..1790]
 r1813: [1782..1783]
 r1814: [1775..1776]
 r1815: [1770..1771]
 r1816: [1761..1764]
 r1817: [1761..1762]
 r1818: [1758..1759]
 r1819: [1549..1551]
 r1820: [1548..1550]
 r1821: [1544..1547] [1538..1540]
 r1822: [1539..1546]
 r1823: [1542..1545]
 r1824: [1531..1532] [1526..1528] [1522..1523]
 r1825: [1529..1530]
 r1826: [1524..1525]
 r1827: [1518..1519]
 r1828: [1516..1517]
 r1829: [1511..1514]
 r1830: [1510..1513]
 r1831: [1509..1512]
 r1832: [1503..1505]
 r1833: [1502..1504]
 r1834: [1498..1501] [1492..1494]
 r1835: [1493..1500]
 r1836: [1496..1499]
 r1837: [1485..1486] [1480..1482] [1476..1477]
 r1838: [1483..1484]
 r1839: [1478..1479]
 r1840: [1472..1473]
 r1841: [1470..1471]
 r1842: [1465..1468]
 r1843: [1464..1467]
 r1844: [1463..1466]
 r1845: [1457..1459]
 r1846: [1456..1458]
 r1847: [1452..1455] [1446..1448]
 r1848: [1447..1454]
 r1849: [1450..1453]
 r1850: [1439..1440] [1434..1436] [1430..1431]
 r1851: [1437..1438]
 r1852: [1432..1433]
 r1853: [1426..1427]
 r1854: [1424..1425]
 r1855: [1419..1422]
 r1856: [1418..1421]
 r1857: [1417..1420]
 r1858: [1412..1413]
 r1859: [1409..1410]
 r1860: [1405..1406]
 r1861: [1400..1401]
 r1862: [1402..1403]
 r1863: [1407..1408]
 r1864: [1352..1353]
 r1865: [1359..1360]
 r1866: [1393..1394]
 r1867: [1388..1389]
 r1868: [1379..1382]
 r1869: [1379..1380]
 r1870: [1376..1377]
 r1871: [1371..1372]
 r1872: [1362..1363]
 r1873: [1347..1349]
 r1874: [1346..1348]
 r1875: [1342..1345] [1336..1338]
 r1876: [1337..1344]
 r1877: [1340..1343]
 r1878: [1334..1335]
 r1879: [1332..1333]
 r1880: [1328..1329]
 r1882: [1326..1327]
 r1883: [1324..1326]
 r1884: [1325..1325]
 r1885: [1322..1323]
 r1886: [1316..1317]
 r1887: [1320..1321]
 r1888: [1305..1306] [1300..1302] [1296..1297]
 r1889: [1303..1304]
 r1890: [1298..1299]
 r1891: [1292..1293]
 r1892: [1290..1291]
 r1893: [1285..1288]
 r1894: [1284..1287]
 r1895: [1283..1286]
 r1896: [1278..1279]
 r1897: [1275..1276]
 r1898: [1271..1272]
 r1899: [1266..1267]
 r1900: [1268..1269]
 r1901: [1273..1274]
 r1902: [1218..1219]
 r1903: [1225..1226]
 r1904: [1259..1260]
 r1905: [1254..1255]
 r1906: [1245..1248]
 r1907: [1245..1246]
 r1908: [1242..1243]
 r1909: [1237..1238]
 r1910: [1228..1229]
 r1911: [1213..1215]
 r1912: [1212..1214]
 r1913: [1208..1211] [1202..1204]
 r1914: [1203..1210]
 r1915: [1206..1209]
 r1916: [1200..1201]
 r1917: [1198..1199]
 r1918: [1194..1195]
 r1920: [1192..1193]
 r1921: [1190..1192]
 r1922: [1191..1191]
 r1923: [1188..1189]
 r1924: [1182..1183]
 r1925: [1186..1187]
 r1926: [1171..1172] [1166..1168] [1162..1163]
 r1927: [1169..1170]
 r1928: [1164..1165]
 r1929: [1158..1159]
 r1930: [1156..1157]
 r1931: [1151..1154]
 r1932: [1150..1153]
 r1933: [1149..1152]
 r1934: [1144..1145]
 r1935: [1141..1142]
 r1936: [1137..1138]
 r1937: [1132..1133]
 r1938: [1134..1135]
 r1939: [1139..1140]
 r1940: [1081..1082]
 r1941: [1088..1089]
 r1942: [1125..1126]
 r1943: [1120..1121]
 r1944: [1111..1114]
 r1945: [1111..1112]
 r1946: [1106..1107]
 r1947: [1101..1102]
 r1948: [1094..1095]
 r1949: [1091..1092]
 r1950: [1076..1078]
 r1951: [1075..1077]
 r1952: [1071..1074] [1065..1067]
 r1953: [1066..1073]
 r1954: [1069..1072]
 r1955: [1063..1064]
 r1956: [1061..1062]
 r1957: [1057..1058]
 r1959: [1055..1056]
 r1960: [1053..1055]
 r1961: [1054..1054]
 r1962: [1051..1052]
 r1963: [1045..1046]
 r1964: [1049..1050]
 r1965: [1034..1035] [1029..1031] [1025..1026]
 r1966: [1032..1033]
 r1967: [1027..1028]
 r1968: [1021..1022]
 r1969: [1019..1020]
 r1970: [1014..1017]
 r1971: [1013..1016]
 r1972: [1012..1015]
 r1973: [1007..1008]
 r1974: [1004..1005]
 r1975: [1000..1001]
 r1976: [995..996]
 r1977: [997..998]
 r1978: [1002..1003]
 r1979: [944..945]
 r1980: [951..952]
 r1981: [988..989]
 r1982: [983..984]
 r1983: [974..977]
 r1984: [974..975]
 r1985: [969..970]
 r1986: [964..965]
 r1987: [957..958]
 r1988: [954..955]
 r1989: [939..941]
 r1990: [938..940]
 r1991: [934..937] [928..930]
 r1992: [929..936]
 r1993: [932..935]
 r1994: [926..927]
 r1995: [924..925]
 r1996: [920..921]
 r1998: [918..919]
 r1999: [916..918]
 r2000: [917..917]
 r2001: [914..915]
 r2002: [908..909]
 r2003: [912..913]
 r2004: [897..898] [892..894] [888..889]
 r2005: [895..896]
 r2006: [890..891]
 r2007: [884..885]
 r2008: [882..883]
 r2009: [877..880]
 r2010: [876..879]
 r2011: [875..878]
 r2012: [870..871]
 r2013: [867..868]
 r2014: [863..864]
 r2015: [858..859]
 r2016: [860..861]
 r2017: [865..866]
 r2018: [810..811]
 r2019: [817..818]
 r2020: [851..852]
 r2021: [846..847]
 r2022: [837..840]
 r2023: [837..838]
 r2024: [834..835]
 r2025: [829..830]
 r2026: [820..821]
 r2027: [805..807]
 r2028: [804..806]
 r2029: [800..803] [794..796]
 r2030: [795..802]
 r2031: [798..801]
 r2032: [792..793]
 r2033: [790..791]
 r2034: [786..787]
 r2036: [784..785]
 r2037: [782..784]
 r2038: [783..783]
 r2039: [780..781]
 r2040: [774..775]
 r2041: [778..779]
 r2042: [763..764] [758..760] [754..755]
 r2043: [761..762]
 r2044: [756..757]
 r2045: [750..751]
 r2046: [748..749]
 r2047: [743..746]
 r2048: [742..745]
 r2049: [741..744]
 r2050: [736..737]
 r2051: [733..734]
 r2052: [729..730]
 r2053: [724..725]
 r2054: [726..727]
 r2055: [731..732]
 r2056: [676..677]
 r2057: [683..684]
 r2058: [717..718]
 r2059: [712..713]
 r2060: [703..706]
 r2061: [703..704]
 r2062: [700..701]
 r2063: [695..696]
 r2064: [686..687]
 r2065: [671..673]
 r2066: [670..672]
 r2067: [666..669] [660..662]
 r2068: [661..668]
 r2069: [664..667]
 r2070: [658..659]
 r2071: [656..657]
 r2072: [652..653]
 r2074: [650..651]
 r2075: [648..650]
 r2076: [649..649]
 r2077: [646..647]
 r2078: [640..641]
 r2079: [644..645]
 r2080: [629..630] [624..626] [620..621]
 r2081: [627..628]
 r2082: [622..623]
 r2083: [616..617]
 r2084: [614..615]
 r2085: [609..612]
 r2086: [608..611]
 r2087: [607..610]
 r2088: [479..480]
 r2089: [486..487]
 r2090: [597..598]
 r2091: [592..593]
 r2092: [583..586]
 r2093: [583..584]
 r2094: [575..576]
 r2095: [570..571]
 r2096: [561..564]
 r2097: [561..562]
 r2098: [558..559]
 r2099: [553..554]
 r2100: [544..547]
 r2101: [544..545]
 r2102: [540..541]
 r2103: [578..579]
 r2104: [537..538]
 r2105: [532..533]
 r2106: [525..526]
 r2107: [522..523]
 r2108: [517..518]
 r2109: [508..511]
 r2110: [508..509]
 r2111: [503..504]
 r2112: [498..499]
 r2113: [489..490]
 r2114: [474..476]
 r2115: [473..475]
 r2116: [469..472] [463..465]
 r2117: [464..471]
 r2118: [467..470]
 r2119: [456..457] [451..453] [447..448]
 r2120: [454..455]
 r2121: [449..450]
 r2122: [443..444]
 r2123: [441..442]
 r2124: [436..439]
 r2125: [435..438]
 r2126: [434..437]
 r2127: [269..270]
 r2128: [276..277]
 r2129: [424..425]
 r2130: [419..420]
 r2131: [410..413]
 r2132: [410..411]
 r2133: [407..408]
 r2134: [401..402]
 r2135: [396..397]
 r2136: [387..390]
 r2137: [387..388]
 r2138: [385..386]
 r2139: [383..384]
 r2140: [378..379]
 r2141: [371..372]
 r2142: [362..365]
 r2143: [362..363]
 r2144: [360..361]
 r2145: [357..359]
 r2146: [357..358]
 r2147: [348..349]
 r2148: [343..344]
 r2149: [334..337]
 r2150: [334..335]
 r2151: [330..331]
 r2152: [404..405]
 r2153: [327..328]
 r2154: [322..323]
 r2155: [315..316]
 r2156: [312..313]
 r2157: [307..308]
 r2158: [298..301]
 r2159: [298..299]
 r2160: [293..294]
 r2161: [288..289]
 r2162: [279..280]
 r2163: [264..266]
 r2164: [263..265]
 r2165: [259..262] [253..255]
 r2166: [254..261]
 r2167: [257..260]
 r2168: [246..247] [241..243] [237..238]
 r2169: [244..245]
 r2170: [239..240]
 r2171: [233..234]
 r2172: [231..232]
 r2173: [226..229]
 r2174: [225..228]
 r2175: [224..227]
 r2176: [96..97]
 r2177: [103..104]
 r2178: [214..215]
 r2179: [209..210]
 r2180: [200..203]
 r2181: [200..201]
 r2182: [192..193]
 r2183: [187..188]
 r2184: [178..181]
 r2185: [178..179]
 r2186: [175..176]
 r2187: [170..171]
 r2188: [161..164]
 r2189: [161..162]
 r2190: [157..158]
 r2191: [195..196]
 r2192: [154..155]
 r2193: [149..150]
 r2194: [142..143]
 r2195: [139..140]
 r2196: [134..135]
 r2197: [125..128]
 r2198: [125..126]
 r2199: [120..121]
 r2200: [115..116]
 r2201: [106..107]
 r2202: [91..93]
 r2203: [90..92]
 r2204: [86..89] [80..82]
 r2205: [81..88]
 r2206: [84..87]
 r2207: [73..74] [68..70] [64..65]
 r2208: [71..72]
 r2209: [66..67]
 r2210: [60..61]
 r2211: [58..59]
 r2212: [53..56]
 r2213: [52..55]
 r2214: [51..54]
 r2215: [45..47]
 r2216: [44..46]
 r2217: [40..43] [34..36]
 r2218: [35..42]
 r2219: [38..41]
 r2220: [27..28] [22..24] [18..19]
 r2221: [25..26]
 r2222: [20..21]
 r2223: [14..15]
 r2224: [12..13]
 r2225: [7..10]
 r2226: [6..9]
 r2227: [5..8]
 r2228: [2..3]
 r2229: [0..1]
 r2230: [4298..4300]
 r2231: [4289..4290]
 r2232: [4268..4269]
 r2233: [4129..4131]
 r2234: [4037..4038]
 r2235: [4019..4021]
 r2236: [3859..3861]
 r2237: [3813..3815]
 r2238: [3767..3769]
 r2239: [3715..3717]
 r2240: [3663..3665]
 r2241: [3503..3505]
 r2242: [3348..3350]
 r2243: [3321..3323]
 r2244: [3140..3142]
 r2245: [2959..2961]
 r2246: [2539..2541]
 r2247: [2491..2493]
 r2248: [2484..2486]
 r2249: [2302..2304]
 r2250: [2256..2258]
 r2251: [1894..1896]
 r2252: [1846..1848]
 r2253: [1839..1841]
 r2254: [1541..1543]
 r2255: [1495..1497]
 r2256: [1449..1451]
 r2257: [1339..1341]
 r2258: [1205..1207]
 r2259: [1068..1070]
 r2260: [931..933]
 r2261: [797..799]
 r2262: [663..665]
 r2263: [466..468]
 r2264: [256..258]
 r2265: [83..85]
 r2266: [37..39]
 r2267: [2494..2512]
 r2268: [2487..2538]
 r2269: [1849..1867]
 r2270: [1842..1893]
Compressing live ranges: from 4311 to 3320 - 77%
Ranges after the compression:
 r87: [3316..3317]
 r88: [3306..3307]
 r89: [3298..3299]
 r90: [3298..3319]
 r92: [3296..3297]
 r93: [3294..3295]
 r94: [3292..3293]
 r95: [3282..3283]
 r96: [3274..3275]
 r97: [3268..3269]
 r98: [3268..3319]
 r100: [3266..3267]
 r101: [3264..3265]
 r102: [3262..3263]
 r103: [3256..3257]
 r104: [3254..3255]
 r105: [3248..3249]
 r106: [3244..3247]
 r107: [3244..3245]
 r108: [3242..3243]
 r109: [3240..3241]
 r110: [3240..3241]
 r111: [3226..3227]
 r112: [3222..3225]
 r113: [3222..3223]
 r114: [3220..3221]
 r115: [3218..3219]
 r116: [3206..3217]
 r117: [3214..3215]
 r118: [3210..3213]
 r119: [3210..3211]
 r120: [3208..3209]
 r121: [3204..3207]
 r122: [3204..3205]
 r123: [3186..3187]
 r124: [3184..3185]
 r125: [3178..3183]
 r126: [3172..3173]
 r127: [3166..3167]
 r128: [3164..3165]
 r129: [3162..3163]
 r130: [3160..3161]
 r131: [3158..3159]
 r132: [3152..3157]
 r133: [3146..3147]
 r134: [3142..3143]
 r135: [3140..3141]
 r136: [3138..3139]
 r137: [3132..3137]
 r138: [3126..3127]
 r139: [3122..3123]
 r140: [3118..3119]
 r141: [3108..3109]
 r142: [3106..3107]
 r143: [3100..3105]
 r144: [3094..3095]
 r145: [3088..3089]
 r146: [3086..3087]
 r147: [3082..3083]
 r148: [3074..3075]
 r149: [3072..3073]
 r150: [3068..3071]
 r151: [3068..3069]
 r152: [3066..3067]
 r153: [3054..3065]
 r154: [3062..3063]
 r155: [3060..3061]
 r156: [3056..3059]
 r157: [3056..3057]
 r158: [3052..3055]
 r159: [3052..3053]
 r160: [3042..3043]
 r161: [3034..3035]
 r162: [3032..3033]
 r163: [3028..3031]
 r164: [3028..3029]
 r165: [3026..3027]
 r166: [3014..3025]
 r167: [3022..3023]
 r168: [3020..3021]
 r169: [3016..3019]
 r170: [3016..3017]
 r171: [3012..3015]
 r172: [3012..3013]
 r173: [2996..2997]
 r174: [2994..2995]
 r175: [2988..2993]
 r176: [2982..2983]
 r177: [2976..2977]
 r178: [2974..2975]
 r179: [2964..2965]
 r180: [2962..2963]
 r181: [2956..2961]
 r182: [2950..2951]
 r183: [2944..2945]
 r184: [2942..2943]
 r185: [2930..2931]
 r186: [2928..2929]
 r187: [2922..2927]
 r188: [2916..2917]
 r189: [2910..2911]
 r190: [2908..2909]
 r191: [2896..2897]
 r192: [2894..2895]
 r193: [2888..2893]
 r194: [2882..2883]
 r195: [2876..2877]
 r196: [2874..2875]
 r197: [2862..2863]
 r198: [2860..2861]
 r199: [2854..2859]
 r200: [2848..2849]
 r201: [2842..2843]
 r202: [2840..2841]
 r203: [2834..2835]
 r204: [2830..2833]
 r205: [2830..2831]
 r206: [2828..2829]
 r207: [2826..2827]
 r208: [2820..2821]
 r209: [2816..2819]
 r210: [2816..2817]
 r211: [2814..2815]
 r212: [2812..2813]
 r213: [2804..2807]
 r214: [2804..2805]
 r215: [2802..2803]
 r216: [2798..2799]
 r217: [2794..2797]
 r218: [2794..2795]
 r219: [2792..2793]
 r220: [2790..2791]
 r221: [2782..2785]
 r222: [2782..2783]
 r223: [2780..2781]
 r224: [2776..2777]
 r225: [2772..2775]
 r226: [2772..2773]
 r227: [2770..2771]
 r228: [2768..2769]
 r229: [2748..2749]
 r230: [2746..2747]
 r231: [2740..2745]
 r232: [2734..2735]
 r233: [2728..2729]
 r234: [2726..2727]
 r235: [2720..2721]
 r236: [2716..2719]
 r237: [2716..2717]
 r238: [2714..2715]
 r239: [2712..2713]
 r240: [2694..2709]
 r241: [2706..2707]
 r242: [2702..2705]
 r243: [2702..2703]
 r244: [2700..2701]
 r245: [2698..2699]
 r246: [2694..2695]
 r247: [2676..2677]
 r248: [2672..2675]
 r249: [2672..2673]
 r250: [2670..2671]
 r251: [2668..2669]
 r252: [2650..2665]
 r253: [2662..2663]
 r254: [2658..2661]
 r255: [2658..2659]
 r256: [2656..2657]
 r257: [2654..2655]
 r258: [2650..2651]
 r259: [2648..2649]
 r260: [2636..2647]
 r261: [2634..2647]
 r262: [2644..2645]
 r263: [2640..2643]
 r264: [2640..2641]
 r265: [2638..2639]
 r266: [2632..2637]
 r267: [2632..2633]
 r268: [2688..2689]
 r269: [2684..2687]
 r270: [2684..2685]
 r271: [2682..2683]
 r272: [2680..2681]
 r273: [2610..2611]
 r274: [2594..2595]
 r275: [2598..2599]
 r276: [2592..2593]
 r277: [2588..2589]
 r278: [2586..2587]
 r279: [2580..2585]
 r280: [2574..2575]
 r281: [2568..2569]
 r282: [2566..2567]
 r283: [2560..2561]
 r284: [2556..2559]
 r285: [2556..2557]
 r286: [2554..2555]
 r287: [2552..2553]
 r288: [2548..2549]
 r289: [2532..2533]
 r290: [2528..2531]
 r291: [2528..2529]
 r292: [2526..2527]
 r293: [2524..2525]
 r294: [2494..2521]
 r295: [2518..2519]
 r296: [2514..2517]
 r297: [2514..2515]
 r298: [2512..2513]
 r299: [2510..2511]
 r300: [2506..2507]
 r301: [2494..2505]
 r302: [2502..2503]
 r303: [2498..2501]
 r304: [2498..2499]
 r305: [2496..2497]
 r306: [2492..2495]
 r307: [2492..2493]
 r308: [2544..2545]
 r309: [2540..2543]
 r310: [2540..2541]
 r311: [2538..2539]
 r312: [2536..2537]
 r313: [2470..2471]
 r314: [2454..2455]
 r315: [2458..2459]
 r316: [2452..2453]
 r317: [2448..2449]
 r318: [2446..2447]
 r319: [2440..2445]
 r320: [2434..2435]
 r321: [2428..2429]
 r322: [2426..2427]
 r323: [2420..2421]
 r324: [2416..2419]
 r325: [2416..2417]
 r326: [2414..2415]
 r327: [2412..2413]
 r328: [2408..2409]
 r329: [2392..2393]
 r330: [2388..2391]
 r331: [2388..2389]
 r332: [2386..2387]
 r333: [2384..2385]
 r334: [2354..2381]
 r335: [2378..2379]
 r336: [2374..2377]
 r337: [2374..2375]
 r338: [2372..2373]
 r339: [2370..2371]
 r340: [2366..2367]
 r341: [2354..2365]
 r342: [2362..2363]
 r343: [2358..2361]
 r344: [2358..2359]
 r345: [2356..2357]
 r346: [2352..2355]
 r347: [2352..2353]
 r348: [2404..2405]
 r349: [2400..2403]
 r350: [2400..2401]
 r351: [2398..2399]
 r352: [2396..2397]
 r353: [2330..2331]
 r354: [2314..2315]
 r355: [2318..2319]
 r356: [2312..2313]
 r357: [2308..2309]
 r358: [2306..2307]
 r359: [2300..2305]
 r360: [2294..2295]
 r361: [2288..2289]
 r362: [2286..2287]
 r363: [2284..2285]
 r364: [2276..2277]
 r365: [2272..2275]
 r366: [2272..2273]
 r367: [2270..2271]
 r368: [2268..2269]
 r369: [2264..2265]
 r370: [2260..2263]
 r371: [2260..2261]
 r372: [2258..2259]
 r373: [2256..2257]
 r374: [2256..2257]
 r375: [2252..2253]
 r376: [2248..2251]
 r377: [2248..2249]
 r378: [2246..2247]
 r379: [2244..2245]
 r380: [2244..2245]
 r381: [2230..2231]
 r382: [2226..2229]
 r383: [2226..2227]
 r384: [2224..2225]
 r385: [2222..2223]
 r386: [2210..2211]
 r387: [2204..2209]
 r388: [2206..2207]
 r389: [2204..2205]
 r390: [2200..2203]
 r391: [2200..2201]
 r392: [2198..2199]
 r393: [2196..2197]
 r394: [2194..2195]
 r395: [2190..2191]
 r396: [2186..2189]
 r397: [2186..2187]
 r398: [2184..2185]
 r399: [2182..2183]
 r400: [2180..2181]
 r401: [2174..2175]
 r402: [2170..2173]
 r403: [2170..2171]
 r404: [2168..2169]
 r405: [2166..2167]
 r406: [2162..2163]
 r407: [2158..2159]
 r408: [2154..2157]
 r409: [2154..2155]
 r410: [2152..2153]
 r411: [2150..2151]
 r412: [2142..2143]
 r413: [2138..2141]
 r414: [2138..2139]
 r415: [2136..2137]
 r416: [2134..2135]
 r417: [1912..1913]
 r418: [1908..1911]
 r419: [1908..1909]
 r420: [1906..1907]
 r421: [1904..1905]
 r422: [1904..1905]
 r423: [1900..1901]
 r424: [1896..1899]
 r425: [1896..1897]
 r426: [1894..1895]
 r427: [1892..1893]
 r428: [1892..1893]
 r429: [1888..1889]
 r430: [1886..1887]
 r431: [1884..1885]
 r432: [1866..1881]
 r433: [1878..1879]
 r434: [1874..1877]
 r435: [1874..1875]
 r436: [1872..1873]
 r437: [1870..1871]
 r438: [1866..1867]
 r439: [1852..1865]
 r440: [1852..1863]
 r441: [1860..1861]
 r442: [1856..1859]
 r443: [1856..1857]
 r444: [1854..1855]
 r445: [1850..1853]
 r446: [1850..1851]
 r447: [1846..1847]
 r448: [1842..1845]
 r449: [1842..1843]
 r450: [1840..1841]
 r451: [1828..1839]
 r452: [1836..1837]
 r453: [1832..1835]
 r454: [1832..1833]
 r455: [1830..1831]
 r456: [1824..1829]
 r457: [1824..1825]
 r458: [2114..2115]
 r459: [2112..2113]
 r460: [2094..2109]
 r461: [2106..2107]
 r462: [2102..2105]
 r463: [2102..2103]
 r464: [2100..2101]
 r465: [2098..2099]
 r466: [2094..2095]
 r467: [2080..2093]
 r468: [2080..2091]
 r469: [2088..2089]
 r470: [2084..2087]
 r471: [2084..2085]
 r472: [2082..2083]
 r473: [2078..2081]
 r474: [2078..2079]
 r475: [2074..2075]
 r476: [2072..2073]
 r477: [2066..2071]
 r478: [2068..2069]
 r479: [2066..2067]
 r480: [2062..2065]
 r481: [2062..2063]
 r482: [2060..2061]
 r483: [2058..2059]
 r484: [2032..2055]
 r485: [2052..2053]
 r486: [2050..2051]
 r487: [2044..2049]
 r488: [2046..2047]
 r489: [2044..2045]
 r490: [2040..2043]
 r491: [2040..2041]
 r492: [2038..2039]
 r493: [2036..2037]
 r494: [2032..2033]
 r495: [2002..2031]
 r496: [2028..2029]
 r497: [2026..2027]
 r498: [2020..2025]
 r499: [2022..2023]
 r500: [2020..2021]
 r501: [2016..2019]
 r502: [2016..2017]
 r503: [2014..2015]
 r504: [2012..2013]
 r505: [2008..2009]
 r506: [2006..2007]
 r507: [2004..2005]
 r508: [2002..2003]
 r509: [2000..2001]
 r511: [1994..1995]
 r512: [1992..1993]
 r513: [1986..1991]
 r514: [1988..1989]
 r515: [1986..1987]
 r516: [1982..1985]
 r517: [1982..1983]
 r518: [1980..1981]
 r519: [1978..1979]
 r520: [1976..1977]
 r522: [1972..1973]
 r523: [1968..1971]
 r524: [1968..1969]
 r525: [1966..1967]
 r526: [1964..1965]
 r527: [1962..1963]
 r528: [1958..1961]
 r529: [1956..1957]
 r530: [1952..1955]
 r531: [1918..1951]
 r532: [1948..1949]
 r533: [1946..1947]
 r534: [1940..1945]
 r535: [1942..1943]
 r536: [1940..1941]
 r537: [1936..1939]
 r538: [1936..1937]
 r539: [1934..1935]
 r540: [1932..1933]
 r541: [1918..1929]
 r542: [1926..1927]
 r543: [1922..1925]
 r544: [1922..1923]
 r545: [1920..1921]
 r546: [1916..1919]
 r547: [1916..1917]
 r548: [1814..1815]
 r549: [1804..1805]
 r550: [1802..1803]
 r551: [1796..1801]
 r552: [1790..1791]
 r553: [1784..1785]
 r554: [1782..1783]
 r555: [1772..1773]
 r556: [1770..1771]
 r557: [1764..1769]
 r558: [1758..1759]
 r559: [1752..1753]
 r560: [1750..1751]
 r561: [1748..1749]
 r562: [1746..1747]
 r563: [1738..1739]
 r564: [1734..1737]
 r565: [1734..1735]
 r566: [1732..1733]
 r567: [1730..1731]
 r568: [1714..1715]
 r569: [1710..1713]
 r570: [1710..1711]
 r571: [1708..1709]
 r572: [1706..1707]
 r573: [1698..1699]
 r574: [1692..1697]
 r575: [1694..1695]
 r576: [1692..1693]
 r577: [1688..1691]
 r578: [1688..1689]
 r579: [1686..1687]
 r580: [1684..1685]
 r581: [1682..1683]
 r582: [1678..1679]
 r583: [1674..1677]
 r584: [1674..1675]
 r585: [1672..1673]
 r586: [1670..1671]
 r587: [1668..1669]
 r588: [1662..1663]
 r589: [1658..1661]
 r590: [1658..1659]
 r591: [1656..1657]
 r592: [1654..1655]
 r593: [1650..1651]
 r594: [1646..1647]
 r595: [1642..1645]
 r596: [1642..1643]
 r597: [1640..1641]
 r598: [1638..1639]
 r599: [1630..1631]
 r600: [1626..1629]
 r601: [1626..1627]
 r602: [1624..1625]
 r603: [1622..1623]
 r604: [1368..1369]
 r605: [1364..1367]
 r606: [1364..1365]
 r607: [1362..1363]
 r608: [1360..1361]
 r609: [1360..1361]
 r610: [1356..1357]
 r611: [1352..1355]
 r612: [1352..1353]
 r613: [1350..1351]
 r614: [1348..1349]
 r615: [1348..1349]
 r616: [1344..1345]
 r617: [1340..1343]
 r618: [1340..1341]
 r619: [1338..1339]
 r620: [1336..1337]
 r621: [1328..1329]
 r622: [1322..1327]
 r623: [1324..1325]
 r624: [1322..1323]
 r625: [1318..1321]
 r626: [1318..1319]
 r627: [1316..1317]
 r628: [1304..1315]
 r629: [1312..1313]
 r630: [1308..1311]
 r631: [1308..1309]
 r632: [1306..1307]
 r633: [1300..1305]
 r634: [1300..1301]
 r635: [1282..1297]
 r636: [1294..1295]
 r637: [1290..1293]
 r638: [1290..1291]
 r639: [1288..1289]
 r640: [1286..1287]
 r641: [1282..1283]
 r642: [1268..1281]
 r643: [1268..1279]
 r644: [1276..1277]
 r645: [1272..1275]
 r646: [1272..1273]
 r647: [1270..1271]
 r648: [1266..1269]
 r649: [1266..1267]
 r650: [1262..1263]
 r651: [1258..1261]
 r652: [1258..1259]
 r653: [1256..1257]
 r654: [1244..1255]
 r655: [1252..1253]
 r656: [1248..1251]
 r657: [1248..1249]
 r658: [1246..1247]
 r659: [1240..1245]
 r660: [1240..1241]
 r661: [1236..1237]
 r662: [1232..1235]
 r663: [1232..1233]
 r664: [1230..1231]
 r665: [1218..1229]
 r666: [1226..1227]
 r667: [1222..1225]
 r668: [1222..1223]
 r669: [1220..1221]
 r670: [1214..1219]
 r671: [1214..1215]
 r672: [1602..1603]
 r673: [1600..1601]
 r674: [1582..1597]
 r675: [1594..1595]
 r676: [1590..1593]
 r677: [1590..1591]
 r678: [1588..1589]
 r679: [1586..1587]
 r680: [1582..1583]
 r681: [1568..1581]
 r682: [1568..1579]
 r683: [1576..1577]
 r684: [1572..1575]
 r685: [1572..1573]
 r686: [1570..1571]
 r687: [1566..1569]
 r688: [1566..1567]
 r689: [1562..1563]
 r690: [1560..1561]
 r691: [1554..1559]
 r692: [1556..1557]
 r693: [1554..1555]
 r694: [1550..1553]
 r695: [1550..1551]
 r696: [1548..1549]
 r697: [1546..1547]
 r698: [1520..1543]
 r699: [1540..1541]
 r700: [1538..1539]
 r701: [1532..1537]
 r702: [1534..1535]
 r703: [1532..1533]
 r704: [1528..1531]
 r705: [1528..1529]
 r706: [1526..1527]
 r707: [1524..1525]
 r708: [1520..1521]
 r709: [1490..1519]
 r710: [1516..1517]
 r711: [1514..1515]
 r712: [1508..1513]
 r713: [1510..1511]
 r714: [1508..1509]
 r715: [1504..1507]
 r716: [1504..1505]
 r717: [1502..1503]
 r718: [1500..1501]
 r719: [1496..1497]
 r720: [1494..1495]
 r721: [1492..1493]
 r722: [1490..1491]
 r723: [1488..1489]
 r725: [1482..1483]
 r726: [1480..1481]
 r727: [1474..1479]
 r728: [1476..1477]
 r729: [1474..1475]
 r730: [1470..1473]
 r731: [1470..1471]
 r732: [1468..1469]
 r733: [1466..1467]
 r734: [1464..1465]
 r736: [1460..1461]
 r737: [1456..1459]
 r738: [1456..1457]
 r739: [1454..1455]
 r740: [1452..1453]
 r741: [1450..1451]
 r742: [1446..1449]
 r743: [1444..1445]
 r744: [1440..1443]
 r745: [1406..1439]
 r746: [1436..1437]
 r747: [1434..1435]
 r748: [1428..1433]
 r749: [1430..1431]
 r750: [1428..1429]
 r751: [1424..1427]
 r752: [1424..1425]
 r753: [1422..1423]
 r754: [1420..1421]
 r755: [1406..1417]
 r756: [1414..1415]
 r757: [1410..1413]
 r758: [1410..1411]
 r759: [1408..1409]
 r760: [1404..1407]
 r761: [1404..1405]
 r762: [1400..1401]
 r763: [1394..1399]
 r764: [1396..1397]
 r765: [1394..1395]
 r766: [1390..1393]
 r767: [1390..1391]
 r768: [1388..1389]
 r769: [1376..1387]
 r770: [1384..1385]
 r771: [1380..1383]
 r772: [1380..1381]
 r773: [1378..1379]
 r774: [1372..1377]
 r775: [1372..1373]
 r776: [1204..1205]
 r777: [1194..1195]
 r778: [1192..1193]
 r779: [1186..1191]
 r780: [1180..1181]
 r781: [1174..1175]
 r782: [1172..1173]
 r783: [1162..1163]
 r784: [1160..1161]
 r785: [1154..1159]
 r786: [1148..1149]
 r787: [1142..1143]
 r788: [1140..1141]
 r789: [1130..1131]
 r790: [1128..1129]
 r791: [1122..1127]
 r792: [1116..1117]
 r793: [1110..1111]
 r794: [1108..1109]
 r795: [1104..1105]
 r796: [1098..1099]
 r797: [1090..1091]
 r798: [1086..1089]
 r799: [1086..1087]
 r800: [1084..1085]
 r801: [1082..1083]
 r802: [1068..1079]
 r803: [1076..1077]
 r804: [1072..1075]
 r805: [1072..1073]
 r806: [1070..1071]
 r807: [1066..1069]
 r808: [1066..1067]
 r809: [1044..1045]
 r810: [1028..1029]
 r811: [1032..1033]
 r812: [1026..1027]
 r813: [1024..1025]
 r814: [1022..1023]
 r815: [1016..1021]
 r816: [1010..1011]
 r817: [1004..1005]
 r818: [1002..1003]
 r819: [998..999]
 r820: [992..993]
 r821: [984..985]
 r822: [980..983]
 r823: [980..981]
 r824: [978..979]
 r825: [976..977]
 r826: [962..973]
 r827: [970..971]
 r828: [966..969]
 r829: [966..967]
 r830: [964..965]
 r831: [960..963]
 r832: [960..961]
 r833: [938..939]
 r834: [922..923]
 r835: [926..927]
 r836: [920..921]
 r837: [918..919]
 r838: [916..917]
 r839: [910..915]
 r840: [904..905]
 r841: [898..899]
 r842: [896..897]
 r843: [892..893]
 r844: [886..887]
 r845: [878..879]
 r846: [874..877]
 r847: [874..875]
 r848: [872..873]
 r849: [870..871]
 r850: [866..867]
 r851: [854..865]
 r852: [862..863]
 r853: [858..861]
 r854: [858..859]
 r855: [856..857]
 r856: [852..855]
 r857: [852..853]
 r858: [830..831]
 r859: [814..815]
 r860: [818..819]
 r861: [812..813]
 r862: [810..811]
 r863: [808..809]
 r864: [802..807]
 r865: [796..797]
 r866: [790..791]
 r867: [788..789]
 r868: [784..785]
 r869: [778..779]
 r870: [770..771]
 r871: [766..769]
 r872: [766..767]
 r873: [764..765]
 r874: [762..763]
 r875: [758..759]
 r876: [746..757]
 r877: [754..755]
 r878: [750..753]
 r879: [750..751]
 r880: [748..749]
 r881: [744..747]
 r882: [744..745]
 r883: [722..723]
 r884: [706..707]
 r885: [710..711]
 r886: [704..705]
 r887: [702..703]
 r888: [700..701]
 r889: [694..699]
 r890: [688..689]
 r891: [682..683]
 r892: [680..681]
 r893: [676..677]
 r894: [670..671]
 r895: [662..663]
 r896: [658..661]
 r897: [658..659]
 r898: [656..657]
 r899: [654..655]
 r900: [640..651]
 r901: [648..649]
 r902: [644..647]
 r903: [644..645]
 r904: [642..643]
 r905: [638..641]
 r906: [638..639]
 r907: [616..617]
 r908: [600..601]
 r909: [604..605]
 r910: [598..599]
 r911: [596..597]
 r912: [594..595]
 r913: [588..593]
 r914: [582..583]
 r915: [576..577]
 r916: [574..575]
 r917: [570..571]
 r918: [564..565]
 r919: [556..557]
 r920: [552..555]
 r921: [552..553]
 r922: [550..551]
 r923: [548..549]
 r924: [534..545]
 r925: [542..543]
 r926: [538..541]
 r927: [538..539]
 r928: [536..537]
 r929: [532..535]
 r930: [532..533]
 r931: [510..511]
 r932: [494..495]
 r933: [498..499]
 r934: [492..493]
 r935: [490..491]
 r936: [488..489]
 r937: [482..487]
 r938: [476..477]
 r939: [470..471]
 r940: [468..469]
 r941: [462..463]
 r942: [458..461]
 r943: [458..459]
 r944: [456..457]
 r945: [454..455]
 r946: [450..451]
 r947: [444..445]
 r948: [440..443]
 r949: [440..441]
 r950: [438..439]
 r951: [436..437]
 r952: [418..433]
 r953: [430..431]
 r954: [426..429]
 r955: [426..427]
 r956: [424..425]
 r957: [422..423]
 r958: [418..419]
 r959: [412..413]
 r960: [408..411]
 r961: [408..409]
 r962: [406..407]
 r963: [404..405]
 r964: [388..403]
 r965: [400..401]
 r966: [396..399]
 r967: [396..397]
 r968: [394..395]
 r969: [392..393]
 r970: [388..389]
 r971: [376..387]
 r972: [384..385]
 r973: [380..383]
 r974: [380..381]
 r975: [378..379]
 r976: [374..377]
 r977: [374..375]
 r978: [356..357]
 r979: [354..355]
 r980: [348..353]
 r981: [342..343]
 r982: [336..337]
 r983: [334..335]
 r984: [328..329]
 r985: [324..327]
 r986: [324..325]
 r987: [322..323]
 r988: [320..321]
 r989: [316..317]
 r990: [310..311]
 r991: [306..309]
 r992: [306..307]
 r993: [304..305]
 r994: [302..303]
 r995: [294..295]
 r996: [288..293]
 r997: [290..291]
 r998: [288..289]
 r999: [284..287]
 r1000: [284..285]
 r1001: [282..283]
 r1002: [280..281]
 r1003: [272..273]
 r1004: [270..271]
 r1005: [268..269]
 r1006: [252..267]
 r1007: [264..265]
 r1008: [260..263]
 r1009: [260..261]
 r1010: [258..259]
 r1011: [256..257]
 r1012: [252..253]
 r1013: [246..247]
 r1014: [242..245]
 r1015: [242..243]
 r1016: [240..241]
 r1017: [238..239]
 r1018: [222..237]
 r1019: [234..235]
 r1020: [230..233]
 r1021: [230..231]
 r1022: [228..229]
 r1023: [226..227]
 r1024: [222..223]
 r1025: [210..221]
 r1026: [218..219]
 r1027: [214..217]
 r1028: [214..215]
 r1029: [212..213]
 r1030: [208..211]
 r1031: [208..209]
 r1032: [190..191]
 r1033: [188..189]
 r1034: [182..187]
 r1035: [176..177]
 r1036: [170..171]
 r1037: [168..169]
 r1038: [162..163]
 r1039: [158..161]
 r1040: [158..159]
 r1041: [156..157]
 r1042: [154..155]
 r1043: [150..151]
 r1044: [144..145]
 r1045: [140..143]
 r1046: [140..141]
 r1047: [138..139]
 r1048: [136..137]
 r1049: [118..133]
 r1050: [130..131]
 r1051: [126..129]
 r1052: [126..127]
 r1053: [124..125]
 r1054: [122..123]
 r1055: [118..119]
 r1056: [112..113]
 r1057: [108..111]
 r1058: [108..109]
 r1059: [106..107]
 r1060: [104..105]
 r1061: [88..103]
 r1062: [100..101]
 r1063: [96..99]
 r1064: [96..97]
 r1065: [94..95]
 r1066: [92..93]
 r1067: [88..89]
 r1068: [76..87]
 r1069: [84..85]
 r1070: [80..83]
 r1071: [80..81]
 r1072: [78..79]
 r1073: [74..77]
 r1074: [74..75]
 r1075: [56..57]
 r1076: [54..55]
 r1077: [48..53]
 r1078: [42..43]
 r1079: [36..37]
 r1080: [34..35]
 r1081: [24..25]
 r1082: [22..23]
 r1083: [16..21]
 r1084: [10..11]
 r1085: [4..5]
 r1086: [2780..2823]
 r1087: [2768..2787]
 r1088: [3310..3313]
 r1089: [3004..3309]
 r1090: [3300..3301]
 r1091: [3298..3299]
 r1095: [3288..3289]
 r1096: [3004..3285]
 r1097: [3278..3279]
 r1098: [3272..3277]
 r1099: [3270..3271]
 r1100: [3268..3269]
 r1104: [3258..3259]
 r1106: [3252..3253]
 r1107: [3232..3253]
 r1108: [3232..3233]
 r1109: [3236..3237]
 r1110: [3230..3231]
 r1111: [3196..3231]
 r1112: [3196..3197]
 r1113: [3200..3201]
 r1114: [3044..3079]
 r1115: [3044..3045]
 r1116: [3048..3077]
 r1117: [3048..3049]
 r1118: [3004..3039]
 r1119: [3004..3005]
 r1120: [3008..3037]
 r1121: [3008..3009]
 r1122: [2838..2839]
 r1123: [2760..2839]
 r1124: [2760..2761]
 r1125: [2764..2765]
 r1126: [2802..2809]
 r1127: [2724..2725]
 r1128: [2624..2725]
 r1129: [2624..2625]
 r1130: [2628..2629]
 r1131: [2564..2565]
 r1132: [2484..2565]
 r1133: [2484..2485]
 r1134: [2488..2489]
 r1135: [2424..2425]
 r1136: [2344..2425]
 r1137: [2344..2345]
 r1138: [2348..2349]
 r1139: [2280..2281]
 r1140: [2236..2281]
 r1141: [2236..2237]
 r1142: [2240..2241]
 r1143: [2234..2235]
 r1144: [1816..2235]
 r1145: [1816..1817]
 r1146: [1820..1821]
 r1147: [2214..2215]
 r1148: [2130..2131]
 r1149: [1742..1743]
 r1150: [1722..1743]
 r1151: [1722..1723]
 r1152: [1726..1727]
 r1153: [1720..1721]
 r1154: [1206..1721]
 r1155: [1206..1207]
 r1156: [1210..1211]
 r1157: [1618..1701]
 r1158: [1618..1619]
 r1159: [1094..1095]
 r1160: [1058..1095]
 r1161: [1058..1059]
 r1162: [1062..1063]
 r1163: [988..989]
 r1164: [952..989]
 r1165: [952..953]
 r1166: [956..957]
 r1167: [882..883]
 r1168: [844..883]
 r1169: [844..845]
 r1170: [848..849]
 r1171: [774..775]
 r1172: [736..775]
 r1173: [736..737]
 r1174: [740..741]
 r1175: [666..667]
 r1176: [630..667]
 r1177: [630..631]
 r1178: [634..635]
 r1179: [560..561]
 r1180: [524..561]
 r1181: [524..525]
 r1182: [528..529]
 r1183: [466..467]
 r1184: [366..467]
 r1185: [366..367]
 r1186: [370..371]
 r1187: [332..333]
 r1188: [200..333]
 r1189: [200..201]
 r1190: [204..205]
 r1191: [166..167]
 r1192: [66..167]
 r1193: [66..67]
 r1194: [70..71]
 r1195: [3318..3319]
 r1196: [3314..3315]
 r1197: [3312..3313]
 r1198: [3308..3309]
 r1199: [3304..3305]
 r1200: [3300..3301]
 r1201: [3294..3295]
 r1202: [3290..3291]
 r1203: [3284..3285]
 r1204: [3280..3281]
 r1205: [3278..3279]
 r1206: [3276..3277]
 r1207: [3272..3273]
 r1208: [3270..3271]
 r1209: [3264..3265]
 r1210: [3260..3261]
 r1211: [3234..3235]
 r1212: [3238..3239]
 r1213: [3250..3251]
 r1214: [3246..3247]
 r1215: [3240..3241]
 r1216: [3198..3199]
 r1217: [3202..3203]
 r1218: [3228..3229]
 r1219: [3224..3225]
 r1220: [3218..3219]
 r1221: [3216..3217]
 r1222: [3212..3213]
 r1223: [3206..3207]
 r1224: [3204..3205]
 r1225: [3194..3195]
 r1226: [3194..3195]
 r1227: [3192..3193] [3188..3189]
 r1228: [3188..3193]
 r1229: [3190..3193]
 r1230: [3182..3183] [3178..3179] [3174..3175]
 r1231: [3180..3181]
 r1232: [3176..3177]
 r1233: [3170..3171]
 r1234: [3168..3169]
 r1235: [3166..3167]
 r1236: [3166..3167]
 r1237: [3166..3167]
 r1238: [3156..3157] [3152..3153] [3148..3149]
 r1239: [3154..3155]
 r1240: [3150..3151]
 r1241: [3144..3145]
 r1242: [3136..3137] [3132..3133] [3128..3129]
 r1243: [3134..3135]
 r1244: [3130..3131]
 r1245: [3124..3125]
 r1246: [3120..3121]
 r1247: [3120..3121]
 r1248: [3120..3121]
 r1249: [3120..3121]
 r1250: [3116..3117]
 r1251: [3116..3117]
 r1252: [3114..3115] [3110..3111]
 r1253: [3110..3115]
 r1254: [3112..3115]
 r1255: [3104..3105] [3100..3101] [3096..3097]
 r1256: [3102..3103]
 r1257: [3098..3099]
 r1258: [3092..3093]
 r1259: [3090..3091]
 r1260: [3088..3089]
 r1261: [3088..3089]
 r1262: [3088..3089]
 r1263: [3084..3085]
 r1264: [3084..3085]
 r1265: [3080..3081]
 r1266: [3046..3047]
 r1267: [3078..3079]
 r1268: [3050..3051]
 r1269: [3076..3077]
 r1270: [3070..3071]
 r1271: [3066..3067]
 r1272: [3064..3065]
 r1273: [3058..3059]
 r1274: [3054..3055]
 r1275: [3052..3053]
 r1276: [3040..3041]
 r1277: [3006..3007]
 r1278: [3038..3039]
 r1279: [3010..3011]
 r1280: [3036..3037]
 r1281: [3030..3031]
 r1282: [3026..3027]
 r1283: [3024..3025]
 r1284: [3018..3019]
 r1285: [3014..3015]
 r1286: [3012..3013]
 r1287: [3002..3003] [2998..2999]
 r1288: [2998..3003]
 r1289: [3000..3003]
 r1290: [2992..2993] [2988..2989] [2984..2985]
 r1291: [2990..2991]
 r1292: [2986..2987]
 r1293: [2980..2981]
 r1294: [2978..2979]
 r1295: [2976..2977]
 r1296: [2976..2977]
 r1297: [2976..2977]
 r1298: [2972..2973]
 r1299: [2972..2973]
 r1300: [2970..2971] [2966..2967]
 r1301: [2966..2971]
 r1302: [2968..2971]
 r1303: [2960..2961] [2956..2957] [2952..2953]
 r1304: [2958..2959]
 r1305: [2954..2955]
 r1306: [2948..2949]
 r1307: [2946..2947]
 r1308: [2944..2945]
 r1309: [2944..2945]
 r1310: [2944..2945]
 r1311: [2940..2941]
 r1312: [2940..2941]
 r1313: [2938..2939] [2934..2935]
 r1314: [2934..2939]
 r1315: [2936..2939]
 r1316: [2932..2933]
 r1317: [2932..2933]
 r1318: [2932..2933]
 r1319: [2926..2927] [2922..2923] [2918..2919]
 r1320: [2924..2925]
 r1321: [2920..2921]
 r1322: [2914..2915]
 r1323: [2912..2913]
 r1324: [2910..2911]
 r1325: [2910..2911]
 r1326: [2910..2911]
 r1327: [2906..2907]
 r1328: [2906..2907]
 r1329: [2904..2905] [2900..2901]
 r1330: [2900..2905]
 r1331: [2902..2905]
 r1332: [2898..2899]
 r1333: [2898..2899]
 r1334: [2898..2899]
 r1335: [2892..2893] [2888..2889] [2884..2885]
 r1336: [2890..2891]
 r1337: [2886..2887]
 r1338: [2880..2881]
 r1339: [2878..2879]
 r1340: [2876..2877]
 r1341: [2876..2877]
 r1342: [2876..2877]
 r1343: [2872..2873]
 r1344: [2872..2873]
 r1345: [2870..2871] [2866..2867]
 r1346: [2866..2871]
 r1347: [2868..2871]
 r1348: [2864..2865]
 r1349: [2864..2865]
 r1350: [2864..2865]
 r1351: [2858..2859] [2854..2855] [2850..2851]
 r1352: [2856..2857]
 r1353: [2852..2853]
 r1354: [2846..2847]
 r1355: [2844..2845]
 r1356: [2842..2843]
 r1357: [2842..2843]
 r1358: [2842..2843]
 r1359: [2762..2763]
 r1360: [2766..2767]
 r1361: [2836..2837]
 r1362: [2832..2833]
 r1363: [2824..2827]
 r1364: [2824..2825]
 r1365: [2822..2823]
 r1366: [2818..2819]
 r1367: [2810..2813]
 r1368: [2810..2811]
 r1369: [2808..2809]
 r1370: [2806..2807]
 r1371: [2800..2801]
 r1372: [2796..2797]
 r1373: [2788..2791]
 r1374: [2788..2789]
 r1375: [2786..2787]
 r1376: [2784..2785]
 r1377: [2778..2779]
 r1378: [2774..2775]
 r1379: [2768..2769]
 r1380: [2758..2759]
 r1381: [2758..2759]
 r1382: [2756..2757] [2752..2753]
 r1383: [2752..2757]
 r1384: [2754..2757]
 r1385: [2750..2751]
 r1386: [2750..2751]
 r1387: [2750..2751]
 r1388: [2744..2745] [2740..2741] [2736..2737]
 r1389: [2742..2743]
 r1390: [2738..2739]
 r1391: [2732..2733]
 r1392: [2730..2731]
 r1393: [2728..2729]
 r1394: [2728..2729]
 r1395: [2728..2729]
 r1396: [2626..2627]
 r1397: [2630..2631]
 r1398: [2722..2723]
 r1399: [2718..2719]
 r1400: [2710..2713]
 r1401: [2710..2711]
 r1402: [2708..2709]
 r1403: [2704..2705]
 r1404: [2696..2699]
 r1405: [2696..2697]
 r1406: [2692..2693]
 r1407: [2678..2679]
 r1408: [2674..2675]
 r1409: [2666..2669]
 r1410: [2666..2667]
 r1411: [2664..2665]
 r1412: [2660..2661]
 r1413: [2652..2655]
 r1414: [2652..2653]
 r1415: [2646..2647]
 r1416: [2642..2643]
 r1417: [2632..2633]
 r1418: [2690..2691]
 r1419: [2686..2687]
 r1420: [2680..2681]
 r1421: [2680..2681]
 r1422: [2622..2623]
 r1423: [2622..2623]
 r1424: [2620..2621] [2616..2617]
 r1425: [2616..2621]
 r1426: [2618..2621]
 r1427: [2614..2615]
 r1428: [2612..2613]
 r1429: [2608..2609]
 r1431: [2606..2607]
 r1432: [2604..2606]
 r1433: [2605..2605]
 r1434: [2602..2603]
 r1435: [2596..2597]
 r1436: [2600..2601]
 r1437: [2590..2591]
 r1438: [2590..2591]
 r1439: [2590..2591]
 r1440: [2584..2585] [2580..2581] [2576..2577]
 r1441: [2582..2583]
 r1442: [2578..2579]
 r1443: [2572..2573]
 r1444: [2570..2571]
 r1445: [2568..2569]
 r1446: [2568..2569]
 r1447: [2568..2569]
 r1448: [2486..2487]
 r1449: [2490..2491]
 r1450: [2562..2563]
 r1451: [2558..2559]
 r1452: [2550..2553]
 r1453: [2550..2551]
 r1454: [2534..2535]
 r1455: [2530..2531]
 r1456: [2522..2525]
 r1457: [2522..2523]
 r1458: [2520..2521]
 r1459: [2516..2517]
 r1460: [2508..2511]
 r1461: [2508..2509]
 r1462: [2504..2505]
 r1463: [2500..2501]
 r1464: [2492..2493]
 r1465: [2546..2547]
 r1466: [2542..2543]
 r1467: [2536..2537]
 r1468: [2536..2537]
 r1469: [2482..2483]
 r1470: [2482..2483]
 r1471: [2480..2481] [2476..2477]
 r1472: [2476..2481]
 r1473: [2478..2481]
 r1474: [2474..2475]
 r1475: [2472..2473]
 r1476: [2468..2469]
 r1478: [2466..2467]
 r1479: [2464..2466]
 r1480: [2465..2465]
 r1481: [2462..2463]
 r1482: [2456..2457]
 r1483: [2460..2461]
 r1484: [2450..2451]
 r1485: [2450..2451]
 r1486: [2450..2451]
 r1487: [2444..2445] [2440..2441] [2436..2437]
 r1488: [2442..2443]
 r1489: [2438..2439]
 r1490: [2432..2433]
 r1491: [2430..2431]
 r1492: [2428..2429]
 r1493: [2428..2429]
 r1494: [2428..2429]
 r1495: [2346..2347]
 r1496: [2350..2351]
 r1497: [2422..2423]
 r1498: [2418..2419]
 r1499: [2410..2413]
 r1500: [2410..2411]
 r1501: [2394..2395]
 r1502: [2390..2391]
 r1503: [2382..2385]
 r1504: [2382..2383]
 r1505: [2380..2381]
 r1506: [2376..2377]
 r1507: [2368..2371]
 r1508: [2368..2369]
 r1509: [2364..2365]
 r1510: [2360..2361]
 r1511: [2352..2353]
 r1512: [2406..2407]
 r1513: [2402..2403]
 r1514: [2396..2397]
 r1515: [2396..2397]
 r1516: [2342..2343]
 r1517: [2342..2343]
 r1518: [2340..2341] [2336..2337]
 r1519: [2336..2341]
 r1520: [2338..2341]
 r1521: [2334..2335]
 r1522: [2332..2333]
 r1523: [2328..2329]
 r1525: [2326..2327]
 r1526: [2324..2326]
 r1527: [2325..2325]
 r1528: [2322..2323]
 r1529: [2316..2317]
 r1530: [2320..2321]
 r1531: [2310..2311]
 r1532: [2310..2311]
 r1533: [2310..2311]
 r1534: [2304..2305] [2300..2301] [2296..2297]
 r1535: [2302..2303]
 r1536: [2298..2299]
 r1537: [2292..2293]
 r1538: [2290..2291]
 r1539: [2288..2289]
 r1540: [2288..2289]
 r1541: [2288..2289]
 r1542: [2282..2283]
 r1543: [2238..2239]
 r1544: [2242..2243]
 r1545: [2278..2279]
 r1546: [2274..2275]
 r1547: [2268..2269]
 r1548: [2266..2267]
 r1549: [2262..2263]
 r1550: [2256..2257]
 r1551: [2254..2255]
 r1552: [2250..2251]
 r1553: [2244..2245]
 r1554: [1818..1819]
 r1555: [1822..1823]
 r1556: [2232..2233]
 r1557: [2228..2229]
 r1558: [2220..2223]
 r1559: [2220..2221]
 r1560: [2218..2219]
 r1561: [2216..2217]
 r1562: [2132..2133]
 r1563: [2212..2213]
 r1564: [2208..2209]
 r1565: [2202..2203]
 r1566: [2196..2197]
 r1567: [2192..2193]
 r1568: [2188..2189]
 r1569: [2182..2183]
 r1570: [2178..2179]
 r1571: [2176..2177]
 r1572: [2172..2173]
 r1573: [2164..2167]
 r1574: [2164..2165]
 r1575: [2160..2161]
 r1576: [2156..2157]
 r1577: [2148..2151]
 r1578: [2148..2149]
 r1579: [2146..2147]
 r1580: [2144..2145]
 r1581: [2140..2141]
 r1582: [2134..2135]
 r1583: [2128..2129]
 r1584: [2126..2127]
 r1585: [1914..1915]
 r1586: [1910..1911]
 r1587: [1904..1905]
 r1588: [1902..1903]
 r1589: [1898..1899]
 r1590: [1892..1893]
 r1591: [2124..2125]
 r1592: [2122..2123]
 r1593: [1890..1891]
 r1594: [1882..1885]
 r1595: [1882..1883]
 r1596: [1880..1881]
 r1597: [1876..1877]
 r1598: [1868..1871]
 r1599: [1868..1869]
 r1600: [1864..1865]
 r1601: [1862..1863]
 r1602: [1858..1859]
 r1603: [1850..1851]
 r1604: [1848..1849]
 r1605: [1844..1845]
 r1606: [1838..1839]
 r1607: [1834..1835]
 r1608: [1826..1829]
 r1609: [1826..1827]
 r1610: [1824..1825]
 r1611: [2120..2121]
 r1612: [2118..2119]
 r1613: [2116..2117]
 r1614: [2110..2113]
 r1615: [2110..2111]
 r1616: [2108..2109]
 r1617: [2104..2105]
 r1618: [2096..2099]
 r1619: [2096..2097]
 r1620: [2092..2093]
 r1621: [2090..2091]
 r1622: [2086..2087]
 r1623: [2078..2079]
 r1624: [2076..2077]
 r1625: [2070..2071]
 r1626: [2064..2065]
 r1627: [2056..2059]
 r1628: [2056..2057]
 r1629: [2054..2055]
 r1630: [2048..2049]
 r1631: [2042..2043]
 r1632: [2034..2037]
 r1633: [2034..2035]
 r1634: [2030..2031]
 r1635: [2024..2025]
 r1636: [2018..2019]
 r1637: [2010..2013]
 r1638: [2010..2011]
 r1639: [2008..2009]
 r1640: [2006..2007]
 r1641: [1998..2001]
 r1642: [1996..1997]
 r1643: [1990..1991]
 r1644: [1984..1985]
 r1645: [1978..1979]
 r1646: [1974..1975]
 r1647: [1970..1971]
 r1648: [1964..1965]
 r1649: [1950..1951]
 r1650: [1944..1945]
 r1651: [1938..1939]
 r1652: [1930..1933]
 r1653: [1930..1931]
 r1654: [1928..1929]
 r1655: [1924..1925]
 r1656: [1916..1917]
 r1657: [1812..1813]
 r1658: [1812..1813]
 r1659: [1810..1811] [1806..1807]
 r1660: [1806..1811]
 r1661: [1808..1811]
 r1662: [1800..1801] [1796..1797] [1792..1793]
 r1663: [1798..1799]
 r1664: [1794..1795]
 r1665: [1788..1789]
 r1666: [1786..1787]
 r1667: [1784..1785]
 r1668: [1784..1785]
 r1669: [1784..1785]
 r1670: [1780..1781]
 r1671: [1780..1781]
 r1672: [1778..1779] [1774..1775]
 r1673: [1774..1779]
 r1674: [1776..1779]
 r1675: [1768..1769] [1764..1765] [1760..1761]
 r1676: [1766..1767]
 r1677: [1762..1763]
 r1678: [1756..1757]
 r1679: [1754..1755]
 r1680: [1752..1753]
 r1681: [1752..1753]
 r1682: [1752..1753]
 r1683: [1744..1745]
 r1684: [1724..1725]
 r1685: [1728..1729]
 r1686: [1740..1741]
 r1687: [1736..1737]
 r1688: [1730..1731]
 r1689: [1208..1209]
 r1690: [1212..1213]
 r1691: [1718..1719]
 r1692: [1716..1717]
 r1693: [1712..1713]
 r1694: [1704..1707]
 r1695: [1704..1705]
 r1696: [1702..1703]
 r1697: [1620..1621]
 r1698: [1700..1701]
 r1699: [1696..1697]
 r1700: [1690..1691]
 r1701: [1684..1685]
 r1702: [1680..1681]
 r1703: [1676..1677]
 r1704: [1670..1671]
 r1705: [1666..1667]
 r1706: [1664..1665]
 r1707: [1660..1661]
 r1708: [1652..1655]
 r1709: [1652..1653]
 r1710: [1650..1651]
 r1711: [1648..1649]
 r1712: [1644..1645]
 r1713: [1636..1639]
 r1714: [1636..1637]
 r1715: [1634..1635]
 r1716: [1632..1633]
 r1717: [1628..1629]
 r1718: [1622..1623]
 r1719: [1616..1617]
 r1720: [1614..1615]
 r1721: [1370..1371]
 r1722: [1366..1367]
 r1723: [1360..1361]
 r1724: [1358..1359]
 r1725: [1354..1355]
 r1726: [1348..1349]
 r1727: [1346..1347]
 r1728: [1342..1343]
 r1729: [1334..1337]
 r1730: [1334..1335]
 r1731: [1332..1333]
 r1732: [1330..1331]
 r1733: [1326..1327]
 r1734: [1320..1321]
 r1735: [1314..1315]
 r1736: [1310..1311]
 r1737: [1302..1305]
 r1738: [1302..1303]
 r1739: [1300..1301]
 r1740: [1612..1613]
 r1741: [1610..1611]
 r1742: [1298..1299]
 r1743: [1296..1297]
 r1744: [1292..1293]
 r1745: [1284..1287]
 r1746: [1284..1285]
 r1747: [1280..1281]
 r1748: [1278..1279]
 r1749: [1274..1275]
 r1750: [1266..1267]
 r1751: [1264..1265]
 r1752: [1260..1261]
 r1753: [1254..1255]
 r1754: [1250..1251]
 r1755: [1242..1245]
 r1756: [1242..1243]
 r1757: [1240..1241]
 r1758: [1238..1239]
 r1759: [1234..1235]
 r1760: [1228..1229]
 r1761: [1224..1225]
 r1762: [1216..1219]
 r1763: [1216..1217]
 r1764: [1214..1215]
 r1765: [1608..1609]
 r1766: [1606..1607]
 r1767: [1604..1605]
 r1768: [1598..1601]
 r1769: [1598..1599]
 r1770: [1596..1597]
 r1771: [1592..1593]
 r1772: [1584..1587]
 r1773: [1584..1585]
 r1774: [1580..1581]
 r1775: [1578..1579]
 r1776: [1574..1575]
 r1777: [1566..1567]
 r1778: [1564..1565]
 r1779: [1558..1559]
 r1780: [1552..1553]
 r1781: [1544..1547]
 r1782: [1544..1545]
 r1783: [1542..1543]
 r1784: [1536..1537]
 r1785: [1530..1531]
 r1786: [1522..1525]
 r1787: [1522..1523]
 r1788: [1518..1519]
 r1789: [1512..1513]
 r1790: [1506..1507]
 r1791: [1498..1501]
 r1792: [1498..1499]
 r1793: [1496..1497]
 r1794: [1494..1495]
 r1795: [1486..1489]
 r1796: [1484..1485]
 r1797: [1478..1479]
 r1798: [1472..1473]
 r1799: [1466..1467]
 r1800: [1462..1463]
 r1801: [1458..1459]
 r1802: [1452..1453]
 r1803: [1438..1439]
 r1804: [1432..1433]
 r1805: [1426..1427]
 r1806: [1418..1421]
 r1807: [1418..1419]
 r1808: [1416..1417]
 r1809: [1412..1413]
 r1810: [1404..1405]
 r1811: [1402..1403]
 r1812: [1398..1399]
 r1813: [1392..1393]
 r1814: [1386..1387]
 r1815: [1382..1383]
 r1816: [1374..1377]
 r1817: [1374..1375]
 r1818: [1372..1373]
 r1819: [1202..1203]
 r1820: [1202..1203]
 r1821: [1200..1201] [1196..1197]
 r1822: [1196..1201]
 r1823: [1198..1201]
 r1824: [1190..1191] [1186..1187] [1182..1183]
 r1825: [1188..1189]
 r1826: [1184..1185]
 r1827: [1178..1179]
 r1828: [1176..1177]
 r1829: [1174..1175]
 r1830: [1174..1175]
 r1831: [1174..1175]
 r1832: [1170..1171]
 r1833: [1170..1171]
 r1834: [1168..1169] [1164..1165]
 r1835: [1164..1169]
 r1836: [1166..1169]
 r1837: [1158..1159] [1154..1155] [1150..1151]
 r1838: [1156..1157]
 r1839: [1152..1153]
 r1840: [1146..1147]
 r1841: [1144..1145]
 r1842: [1142..1143]
 r1843: [1142..1143]
 r1844: [1142..1143]
 r1845: [1138..1139]
 r1846: [1138..1139]
 r1847: [1136..1137] [1132..1133]
 r1848: [1132..1137]
 r1849: [1134..1137]
 r1850: [1126..1127] [1122..1123] [1118..1119]
 r1851: [1124..1125]
 r1852: [1120..1121]
 r1853: [1114..1115]
 r1854: [1112..1113]
 r1855: [1110..1111]
 r1856: [1110..1111]
 r1857: [1110..1111]
 r1858: [1106..1107]
 r1859: [1104..1105]
 r1860: [1100..1101]
 r1861: [1096..1097]
 r1862: [1098..1099]
 r1863: [1102..1103]
 r1864: [1060..1061]
 r1865: [1064..1065]
 r1866: [1092..1093]
 r1867: [1088..1089]
 r1868: [1080..1083]
 r1869: [1080..1081]
 r1870: [1078..1079]
 r1871: [1074..1075]
 r1872: [1066..1067]
 r1873: [1056..1057]
 r1874: [1056..1057]
 r1875: [1054..1055] [1050..1051]
 r1876: [1050..1055]
 r1877: [1052..1055]
 r1878: [1048..1049]
 r1879: [1046..1047]
 r1880: [1042..1043]
 r1882: [1040..1041]
 r1883: [1038..1040]
 r1884: [1039..1039]
 r1885: [1036..1037]
 r1886: [1030..1031]
 r1887: [1034..1035]
 r1888: [1020..1021] [1016..1017] [1012..1013]
 r1889: [1018..1019]
 r1890: [1014..1015]
 r1891: [1008..1009]
 r1892: [1006..1007]
 r1893: [1004..1005]
 r1894: [1004..1005]
 r1895: [1004..1005]
 r1896: [1000..1001]
 r1897: [998..999]
 r1898: [994..995]
 r1899: [990..991]
 r1900: [992..993]
 r1901: [996..997]
 r1902: [954..955]
 r1903: [958..959]
 r1904: [986..987]
 r1905: [982..983]
 r1906: [974..977]
 r1907: [974..975]
 r1908: [972..973]
 r1909: [968..969]
 r1910: [960..961]
 r1911: [950..951]
 r1912: [950..951]
 r1913: [948..949] [944..945]
 r1914: [944..949]
 r1915: [946..949]
 r1916: [942..943]
 r1917: [940..941]
 r1918: [936..937]
 r1920: [934..935]
 r1921: [932..934]
 r1922: [933..933]
 r1923: [930..931]
 r1924: [924..925]
 r1925: [928..929]
 r1926: [914..915] [910..911] [906..907]
 r1927: [912..913]
 r1928: [908..909]
 r1929: [902..903]
 r1930: [900..901]
 r1931: [898..899]
 r1932: [898..899]
 r1933: [898..899]
 r1934: [894..895]
 r1935: [892..893]
 r1936: [888..889]
 r1937: [884..885]
 r1938: [886..887]
 r1939: [890..891]
 r1940: [846..847]
 r1941: [850..851]
 r1942: [880..881]
 r1943: [876..877]
 r1944: [868..871]
 r1945: [868..869]
 r1946: [864..865]
 r1947: [860..861]
 r1948: [854..855]
 r1949: [852..853]
 r1950: [842..843]
 r1951: [842..843]
 r1952: [840..841] [836..837]
 r1953: [836..841]
 r1954: [838..841]
 r1955: [834..835]
 r1956: [832..833]
 r1957: [828..829]
 r1959: [826..827]
 r1960: [824..826]
 r1961: [825..825]
 r1962: [822..823]
 r1963: [816..817]
 r1964: [820..821]
 r1965: [806..807] [802..803] [798..799]
 r1966: [804..805]
 r1967: [800..801]
 r1968: [794..795]
 r1969: [792..793]
 r1970: [790..791]
 r1971: [790..791]
 r1972: [790..791]
 r1973: [786..787]
 r1974: [784..785]
 r1975: [780..781]
 r1976: [776..777]
 r1977: [778..779]
 r1978: [782..783]
 r1979: [738..739]
 r1980: [742..743]
 r1981: [772..773]
 r1982: [768..769]
 r1983: [760..763]
 r1984: [760..761]
 r1985: [756..757]
 r1986: [752..753]
 r1987: [746..747]
 r1988: [744..745]
 r1989: [734..735]
 r1990: [734..735]
 r1991: [732..733] [728..729]
 r1992: [728..733]
 r1993: [730..733]
 r1994: [726..727]
 r1995: [724..725]
 r1996: [720..721]
 r1998: [718..719]
 r1999: [716..718]
 r2000: [717..717]
 r2001: [714..715]
 r2002: [708..709]
 r2003: [712..713]
 r2004: [698..699] [694..695] [690..691]
 r2005: [696..697]
 r2006: [692..693]
 r2007: [686..687]
 r2008: [684..685]
 r2009: [682..683]
 r2010: [682..683]
 r2011: [682..683]
 r2012: [678..679]
 r2013: [676..677]
 r2014: [672..673]
 r2015: [668..669]
 r2016: [670..671]
 r2017: [674..675]
 r2018: [632..633]
 r2019: [636..637]
 r2020: [664..665]
 r2021: [660..661]
 r2022: [652..655]
 r2023: [652..653]
 r2024: [650..651]
 r2025: [646..647]
 r2026: [638..639]
 r2027: [628..629]
 r2028: [628..629]
 r2029: [626..627] [622..623]
 r2030: [622..627]
 r2031: [624..627]
 r2032: [620..621]
 r2033: [618..619]
 r2034: [614..615]
 r2036: [612..613]
 r2037: [610..612]
 r2038: [611..611]
 r2039: [608..609]
 r2040: [602..603]
 r2041: [606..607]
 r2042: [592..593] [588..589] [584..585]
 r2043: [590..591]
 r2044: [586..587]
 r2045: [580..581]
 r2046: [578..579]
 r2047: [576..577]
 r2048: [576..577]
 r2049: [576..577]
 r2050: [572..573]
 r2051: [570..571]
 r2052: [566..567]
 r2053: [562..563]
 r2054: [564..565]
 r2055: [568..569]
 r2056: [526..527]
 r2057: [530..531]
 r2058: [558..559]
 r2059: [554..555]
 r2060: [546..549]
 r2061: [546..547]
 r2062: [544..545]
 r2063: [540..541]
 r2064: [532..533]
 r2065: [522..523]
 r2066: [522..523]
 r2067: [520..521] [516..517]
 r2068: [516..521]
 r2069: [518..521]
 r2070: [514..515]
 r2071: [512..513]
 r2072: [508..509]
 r2074: [506..507]
 r2075: [504..506]
 r2076: [505..505]
 r2077: [502..503]
 r2078: [496..497]
 r2079: [500..501]
 r2080: [486..487] [482..483] [478..479]
 r2081: [484..485]
 r2082: [480..481]
 r2083: [474..475]
 r2084: [472..473]
 r2085: [470..471]
 r2086: [470..471]
 r2087: [470..471]
 r2088: [368..369]
 r2089: [372..373]
 r2090: [464..465]
 r2091: [460..461]
 r2092: [452..455]
 r2093: [452..453]
 r2094: [446..447]
 r2095: [442..443]
 r2096: [434..437]
 r2097: [434..435]
 r2098: [432..433]
 r2099: [428..429]
 r2100: [420..423]
 r2101: [420..421]
 r2102: [416..417]
 r2103: [448..449]
 r2104: [414..415]
 r2105: [410..411]
 r2106: [404..405]
 r2107: [402..403]
 r2108: [398..399]
 r2109: [390..393]
 r2110: [390..391]
 r2111: [386..387]
 r2112: [382..383]
 r2113: [374..375]
 r2114: [364..365]
 r2115: [364..365]
 r2116: [362..363] [358..359]
 r2117: [358..363]
 r2118: [360..363]
 r2119: [352..353] [348..349] [344..345]
 r2120: [350..351]
 r2121: [346..347]
 r2122: [340..341]
 r2123: [338..339]
 r2124: [336..337]
 r2125: [336..337]
 r2126: [336..337]
 r2127: [202..203]
 r2128: [206..207]
 r2129: [330..331]
 r2130: [326..327]
 r2131: [318..321]
 r2132: [318..319]
 r2133: [316..317]
 r2134: [312..313]
 r2135: [308..309]
 r2136: [300..303]
 r2137: [300..301]
 r2138: [298..299]
 r2139: [296..297]
 r2140: [292..293]
 r2141: [286..287]
 r2142: [278..281]
 r2143: [278..279]
 r2144: [276..277]
 r2145: [274..275]
 r2146: [274..275]
 r2147: [266..267]
 r2148: [262..263]
 r2149: [254..257]
 r2150: [254..255]
 r2151: [250..251]
 r2152: [314..315]
 r2153: [248..249]
 r2154: [244..245]
 r2155: [238..239]
 r2156: [236..237]
 r2157: [232..233]
 r2158: [224..227]
 r2159: [224..225]
 r2160: [220..221]
 r2161: [216..217]
 r2162: [208..209]
 r2163: [198..199]
 r2164: [198..199]
 r2165: [196..197] [192..193]
 r2166: [192..197]
 r2167: [194..197]
 r2168: [186..187] [182..183] [178..179]
 r2169: [184..185]
 r2170: [180..181]
 r2171: [174..175]
 r2172: [172..173]
 r2173: [170..171]
 r2174: [170..171]
 r2175: [170..171]
 r2176: [68..69]
 r2177: [72..73]
 r2178: [164..165]
 r2179: [160..161]
 r2180: [152..155]
 r2181: [152..153]
 r2182: [146..147]
 r2183: [142..143]
 r2184: [134..137]
 r2185: [134..135]
 r2186: [132..133]
 r2187: [128..129]
 r2188: [120..123]
 r2189: [120..121]
 r2190: [116..117]
 r2191: [148..149]
 r2192: [114..115]
 r2193: [110..111]
 r2194: [104..105]
 r2195: [102..103]
 r2196: [98..99]
 r2197: [90..93]
 r2198: [90..91]
 r2199: [86..87]
 r2200: [82..83]
 r2201: [74..75]
 r2202: [64..65]
 r2203: [64..65]
 r2204: [62..63] [58..59]
 r2205: [58..63]
 r2206: [60..63]
 r2207: [52..53] [48..49] [44..45]
 r2208: [50..51]
 r2209: [46..47]
 r2210: [40..41]
 r2211: [38..39]
 r2212: [36..37]
 r2213: [36..37]
 r2214: [36..37]
 r2215: [32..33]
 r2216: [32..33]
 r2217: [30..31] [26..27]
 r2218: [26..31]
 r2219: [28..31]
 r2220: [20..21] [16..17] [12..13]
 r2221: [18..19]
 r2222: [14..15]
 r2223: [8..9]
 r2224: [6..7]
 r2225: [4..5]
 r2226: [4..5]
 r2227: [4..5]
 r2228: [2..3]
 r2229: [0..1]
 r2230: [3310..3311]
 r2231: [3302..3303]
 r2232: [3286..3287]
 r2233: [3190..3191]
 r2234: [3120..3121]
 r2235: [3112..3113]
 r2236: [3000..3001]
 r2237: [2968..2969]
 r2238: [2936..2937]
 r2239: [2902..2903]
 r2240: [2868..2869]
 r2241: [2754..2755]
 r2242: [2634..2635]
 r2243: [2618..2619]
 r2244: [2478..2479]
 r2245: [2338..2339]
 r2246: [1998..1999]
 r2247: [1958..1959]
 r2248: [1952..1953]
 r2249: [1808..1809]
 r2250: [1776..1777]
 r2251: [1486..1487]
 r2252: [1446..1447]
 r2253: [1440..1441]
 r2254: [1198..1199]
 r2255: [1166..1167]
 r2256: [1134..1135]
 r2257: [1052..1053]
 r2258: [946..947]
 r2259: [838..839]
 r2260: [730..731]
 r2261: [624..625]
 r2262: [518..519]
 r2263: [360..361]
 r2264: [194..195]
 r2265: [60..61]
 r2266: [28..29]
 r2267: [1960..1975]
 r2268: [1954..1997]
 r2269: [1448..1463]
 r2270: [1442..1485]

********** Assignment #1: **********

	 Assigning to 2233 (cl=DIREG, orig=1227, freq=3000, tfirst=2233, tfreq=3000)...
	   Assign 5 to reload r2233 (freq=3000)
	 Assigning to 2235 (cl=DIREG, orig=1252, freq=3000, tfirst=2235, tfreq=3000)...
	   Assign 5 to reload r2235 (freq=3000)
	 Assigning to 2236 (cl=DIREG, orig=1287, freq=3000, tfirst=2236, tfreq=3000)...
	   Assign 5 to reload r2236 (freq=3000)
	 Assigning to 2237 (cl=DIREG, orig=1300, freq=3000, tfirst=2237, tfreq=3000)...
	   Assign 5 to reload r2237 (freq=3000)
	 Assigning to 2238 (cl=DIREG, orig=1313, freq=3000, tfirst=2238, tfreq=3000)...
	   Assign 5 to reload r2238 (freq=3000)
	 Assigning to 2239 (cl=DIREG, orig=1329, freq=3000, tfirst=2239, tfreq=3000)...
	   Assign 5 to reload r2239 (freq=3000)
	 Assigning to 2240 (cl=DIREG, orig=1345, freq=3000, tfirst=2240, tfreq=3000)...
	   Assign 5 to reload r2240 (freq=3000)
	 Assigning to 2241 (cl=DIREG, orig=1382, freq=3000, tfirst=2241, tfreq=3000)...
	   Assign 5 to reload r2241 (freq=3000)
	 Assigning to 2243 (cl=DIREG, orig=1424, freq=3000, tfirst=2243, tfreq=3000)...
	   Assign 5 to reload r2243 (freq=3000)
	 Assigning to 2244 (cl=DIREG, orig=1471, freq=3000, tfirst=2244, tfreq=3000)...
	   Assign 5 to reload r2244 (freq=3000)
	 Assigning to 2245 (cl=DIREG, orig=1518, freq=3000, tfirst=2245, tfreq=3000)...
	   Assign 5 to reload r2245 (freq=3000)
	 Assigning to 2249 (cl=DIREG, orig=1659, freq=3000, tfirst=2249, tfreq=3000)...
	   Assign 5 to reload r2249 (freq=3000)
	 Assigning to 2250 (cl=DIREG, orig=1672, freq=3000, tfirst=2250, tfreq=3000)...
	   Assign 5 to reload r2250 (freq=3000)
	 Assigning to 2254 (cl=DIREG, orig=1821, freq=3000, tfirst=2254, tfreq=3000)...
	   Assign 5 to reload r2254 (freq=3000)
	 Assigning to 2255 (cl=DIREG, orig=1834, freq=3000, tfirst=2255, tfreq=3000)...
	   Assign 5 to reload r2255 (freq=3000)
	 Assigning to 2256 (cl=DIREG, orig=1847, freq=3000, tfirst=2256, tfreq=3000)...
	   Assign 5 to reload r2256 (freq=3000)
	 Assigning to 2257 (cl=DIREG, orig=1875, freq=3000, tfirst=2257, tfreq=3000)...
	   Assign 5 to reload r2257 (freq=3000)
	 Assigning to 2258 (cl=DIREG, orig=1913, freq=3000, tfirst=2258, tfreq=3000)...
	   Assign 5 to reload r2258 (freq=3000)
	 Assigning to 2259 (cl=DIREG, orig=1952, freq=3000, tfirst=2259, tfreq=3000)...
	   Assign 5 to reload r2259 (freq=3000)
	 Assigning to 2260 (cl=DIREG, orig=1991, freq=3000, tfirst=2260, tfreq=3000)...
	   Assign 5 to reload r2260 (freq=3000)
	 Assigning to 2261 (cl=DIREG, orig=2029, freq=3000, tfirst=2261, tfreq=3000)...
	   Assign 5 to reload r2261 (freq=3000)
	 Assigning to 2262 (cl=DIREG, orig=2067, freq=3000, tfirst=2262, tfreq=3000)...
	   Assign 5 to reload r2262 (freq=3000)
	 Assigning to 2263 (cl=DIREG, orig=2116, freq=3000, tfirst=2263, tfreq=3000)...
	   Assign 5 to reload r2263 (freq=3000)
	 Assigning to 2264 (cl=DIREG, orig=2165, freq=3000, tfirst=2264, tfreq=3000)...
	   Assign 5 to reload r2264 (freq=3000)
	 Assigning to 2265 (cl=DIREG, orig=2204, freq=3000, tfirst=2265, tfreq=3000)...
	   Assign 5 to reload r2265 (freq=3000)
	 Assigning to 2266 (cl=DIREG, orig=2217, freq=3000, tfirst=2266, tfreq=3000)...
	   Assign 5 to reload r2266 (freq=3000)
	 Assigning to 2230 (cl=GENERAL_REGS, orig=1197, freq=3000, tfirst=2230, tfreq=3000)...
	   Assign 3 to reload r2230 (freq=3000)
	 Assigning to 2231 (cl=GENERAL_REGS, orig=1090, freq=3000, tfirst=2231, tfreq=3000)...
	   Assign 0 to reload r2231 (freq=3000)
	 Assigning to 2232 (cl=GENERAL_REGS, orig=1096, freq=3000, tfirst=2232, tfreq=3000)...
	   Assign 41 to reload r2232 (freq=3000)
	 Assigning to 2234 (cl=INDEX_REGS, orig=2234, freq=2000, tfirst=2234, tfreq=2000)...
	   Assign 5 to reload r2234 (freq=2000)
	 Assigning to 2268 (cl=SSE_REGS, orig=510, freq=2000, tfirst=2246, tfreq=4000)...
	 Assigning to 2246 (cl=SSE_REGS, orig=509, freq=3000, tfirst=2246, tfreq=4000)...
	   Assign 22 to reload r2246 (freq=3000)
	Hard reg 22 is preferable by r2268 with profit 1000
	Hard reg 22 is preferable by r2248 with profit 1500
	 Assigning to 2248 (cl=SSE_REGS, orig=510, freq=3000, tfirst=2246, tfreq=4000)...
	   Assign 22 to reload r2248 (freq=3000)
	Hard reg 22 is preferable by r2268 with profit 2000
	 Assigning to 2270 (cl=SSE_REGS, orig=724, freq=2000, tfirst=2251, tfreq=4000)...
	 Assigning to 2251 (cl=SSE_REGS, orig=723, freq=3000, tfirst=2251, tfreq=4000)...
	   Assign 22 to reload r2251 (freq=3000)
	Hard reg 22 is preferable by r2270 with profit 1000
	Hard reg 22 is preferable by r2253 with profit 1500
	 Assigning to 2253 (cl=SSE_REGS, orig=724, freq=3000, tfirst=2251, tfreq=4000)...
	   Assign 22 to reload r2253 (freq=3000)
	Hard reg 22 is preferable by r2270 with profit 2000
	 Assigning to 2242 (cl=SSE_REGS, orig=260, freq=3000, tfirst=2242, tfreq=3000)...
	   Assign 22 to reload r2242 (freq=3000)
	 Assigning to 2267 (cl=SSE_REGS, orig=521, freq=2000, tfirst=2247, tfreq=3000)...
	 Assigning to 2247 (cl=SSE_REGS, orig=521, freq=3000, tfirst=2247, tfreq=3000)...
	   Assign 24 to reload r2247 (freq=3000)
	Hard reg 21 is preferable by r2267 with profit 1000
	Hard reg 24 is preferable by r2267 with profit 1000
	 Assigning to 2269 (cl=SSE_REGS, orig=735, freq=2000, tfirst=2252, tfreq=3000)...
	 Assigning to 2252 (cl=SSE_REGS, orig=735, freq=3000, tfirst=2252, tfreq=3000)...
	   Assign 25 to reload r2252 (freq=3000)
	Hard reg 21 is preferable by r2269 with profit 1000
	Hard reg 25 is preferable by r2269 with profit 1000
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 4 (0.00%)
   Insn after restoring regs:
 4479: r2248:SF=r510:SF
      REG_DEAD r510:SF
   Insn after restoring regs:
 4477: r2247:SF=r521:SF
      REG_DEAD r521:SF
   Insn after restoring regs:
 1821: r521:SF=xmm0:SF
      REG_DEAD xmm0:SF
   Insn after restoring regs:
 4476: r510:SF=r2246:SF
      REG_DEAD r2246:SF
   Insn after restoring regs:
 4489: r2253:SF=r724:SF
      REG_DEAD r724:SF
   Insn after restoring regs:
 4487: r2252:SF=r735:SF
      REG_DEAD r735:SF
   Insn after restoring regs:
 2395: r735:SF=xmm0:SF
      REG_DEAD xmm0:SF
   Insn after restoring regs:
 4486: r724:SF=r2251:SF
      REG_DEAD r2251:SF

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #2: **********

  BB 307
   Insn 4158: point = 0, n_alt = -1
   Insn 4097: point = 0, n_alt = 0
   Insn 4096: point = 0, n_alt = -2
   Insn 4095: point = 1, n_alt = 3
   Insn 4094: point = 2, n_alt = 0
   Insn 4093: point = 2, n_alt = -2
   Insn 4092: point = 3, n_alt = 3
  BB 352
   Insn 4442: point = 4, n_alt = -1
  BB 306
   Insn 4088: point = 4, n_alt = 0
   Insn 4087: point = 4, n_alt = 3
   Insn 4086: point = 4, n_alt = 2
   Insn 4085: point = 4, n_alt = 2
   Insn 4084: point = 4, n_alt = -2
   Insn 4083: point = 5, n_alt = -2
   Insn 4082: point = 6, n_alt = -2
   Insn 4081: point = 7, n_alt = -2
   Insn 4080: point = 8, n_alt = 3
   Insn 4079: point = 9, n_alt = 3
   Insn 4078: point = 10, n_alt = 3
   Insn 4077: point = 11, n_alt = 3
   Insn 4076: point = 13, n_alt = 0
   Insn 4075: point = 15, n_alt = 0
   Insn 4074: point = 17, n_alt = -2
   Insn 4073: point = 19, n_alt = -2
   Insn 4072: point = 21, n_alt = 0
   Insn 4071: point = 23, n_alt = 0
   Insn 4070: point = 24, n_alt = -2
   Insn 4069: point = 26, n_alt = 0
   Insn 4068: point = 28, n_alt = -2
   Insn 4067: point = 29, n_alt = 3
   Insn 4066: point = 31, n_alt = 0
   Insn 4065: point = 33, n_alt = 0
   Insn 4064: point = 34, n_alt = 0
   Insn 4063: point = 35, n_alt = 1
   Insn 4516: point = 36, n_alt = -2
   Insn 4062: point = 38, n_alt = 0
   Insn 4515: point = 39, n_alt = -2
   Insn 4061: point = 41, n_alt = 2
   Insn 4060: point = 42, n_alt = 2
   Insn 4059: point = 43, n_alt = 2
   Insn 4058: point = 44, n_alt = 0
   Insn 4057: point = 44, n_alt = 0
   Insn 4056: point = 44, n_alt = 3
   Insn 4055: point = 44, n_alt = 2
   Insn 4054: point = 44, n_alt = 2
   Insn 4053: point = 44, n_alt = 4
   Insn 4052: point = 44, n_alt = 4
   Insn 4051: point = 44, n_alt = -2
   Insn 4050: point = 45, n_alt = -2
   Insn 4049: point = 46, n_alt = 0
   Insn 4048: point = 46, n_alt = 0
   Insn 4047: point = 46, n_alt = 3
   Insn 4046: point = 47, n_alt = 3
  BB 305
   Insn 4044: point = 48, n_alt = -1
   Insn 4043: point = 48, n_alt = 0
   Insn 4042: point = 49, n_alt = 0
  BB 304
   Insn 4039: point = 50, n_alt = 0
   Insn 4038: point = 50, n_alt = 3
   Insn 4037: point = 50, n_alt = 2
   Insn 4036: point = 50, n_alt = 2
   Insn 4035: point = 50, n_alt = -2
   Insn 4034: point = 51, n_alt = -2
   Insn 4033: point = 52, n_alt = -2
   Insn 4032: point = 53, n_alt = -2
   Insn 4031: point = 54, n_alt = 3
   Insn 4030: point = 55, n_alt = 3
   Insn 4029: point = 56, n_alt = 3
   Insn 4028: point = 57, n_alt = 3
   Insn 4027: point = 59, n_alt = 0
   Insn 4026: point = 61, n_alt = 0
   Insn 4025: point = 63, n_alt = -2
   Insn 4024: point = 65, n_alt = -2
   Insn 4023: point = 67, n_alt = 0
   Insn 4022: point = 69, n_alt = 0
   Insn 4021: point = 70, n_alt = -2
   Insn 4020: point = 72, n_alt = 0
   Insn 4019: point = 74, n_alt = -2
   Insn 4018: point = 75, n_alt = 3
   Insn 4017: point = 77, n_alt = 0
   Insn 4016: point = 79, n_alt = 0
   Insn 4015: point = 80, n_alt = 0
   Insn 4014: point = 81, n_alt = 1
   Insn 4514: point = 82, n_alt = -2
   Insn 4013: point = 84, n_alt = 0
   Insn 4513: point = 85, n_alt = -2
   Insn 4012: point = 87, n_alt = 2
   Insn 4011: point = 88, n_alt = 2
   Insn 4010: point = 89, n_alt = 2
   Insn 4009: point = 90, n_alt = 0
   Insn 4008: point = 90, n_alt = 0
   Insn 4007: point = 90, n_alt = 3
   Insn 4006: point = 90, n_alt = 2
   Insn 4005: point = 90, n_alt = 2
   Insn 4004: point = 90, n_alt = 4
   Insn 4003: point = 90, n_alt = 4
   Insn 4002: point = 90, n_alt = -2
   Insn 4001: point = 91, n_alt = -2
   Insn 4000: point = 92, n_alt = 0
   Insn 3999: point = 92, n_alt = 0
   Insn 3998: point = 92, n_alt = 3
   Insn 3997: point = 93, n_alt = 3
  BB 350
   Insn 4434: point = 94, n_alt = -1
  BB 296
   Insn 3899: point = 94, n_alt = -1
   Insn 3898: point = 94, n_alt = 0
   Insn 3897: point = 95, n_alt = 0
   Insn 3896: point = 97, n_alt = 0
   Insn 3895: point = 98, n_alt = 0
  BB 303
   Insn 4304: point = 99, n_alt = -1
   Insn 3991: point = 99, n_alt = 1
  BB 351
   Insn 4437: point = 100, n_alt = -1
  BB 298
   Insn 3907: point = 101, n_alt = -1
   Insn 3906: point = 101, n_alt = 0
   Insn 3905: point = 102, n_alt = 0
   Insn 3904: point = 104, n_alt = 0
   Insn 3903: point = 105, n_alt = 0
  BB 302
   Insn 4302: point = 106, n_alt = -1
   Insn 3985: point = 106, n_alt = 1
   Insn 3984: point = 106, n_alt = 8
   Insn 3983: point = 107, n_alt = 4
   Insn 3982: point = 108, n_alt = 1
   Insn 3981: point = 110, n_alt = 3
   Insn 3980: point = 112, n_alt = 0
   Insn 3979: point = 114, n_alt = 1
   Insn 3978: point = 116, n_alt = 0
   Insn 3977: point = 117, n_alt = 0
   Insn 3976: point = 119, n_alt = 1
   Insn 3975: point = 121, n_alt = 0
   Insn 3974: point = 122, n_alt = 1
   Insn 3973: point = 124, n_alt = 7
   Insn 3972: point = 126, n_alt = 0
   Insn 3971: point = 128, n_alt = 4
   Insn 3970: point = 129, n_alt = 3
   Insn 3969: point = 131, n_alt = 0
   Insn 3968: point = 133, n_alt = 1
   Insn 3967: point = 135, n_alt = 0
   Insn 3966: point = 136, n_alt = 0
   Insn 3965: point = 138, n_alt = 1
   Insn 3964: point = 140, n_alt = 0
   Insn 3963: point = 141, n_alt = 7
   Insn 3962: point = 143, n_alt = 4
   Insn 3961: point = 144, n_alt = 3
   Insn 3960: point = 146, n_alt = 0
   Insn 3959: point = 148, n_alt = 1
   Insn 3958: point = 150, n_alt = 0
   Insn 3957: point = 151, n_alt = 0
   Insn 3956: point = 153, n_alt = 1
   Insn 3955: point = 155, n_alt = 0
  BB 300
   Insn 4300: point = 157, n_alt = -1
   Insn 3946: point = 157, n_alt = 8
   Insn 3945: point = 158, n_alt = 2
   Insn 3944: point = 160, n_alt = 7
   Insn 3943: point = 162, n_alt = 0
   Insn 3942: point = 164, n_alt = 4
   Insn 3941: point = 165, n_alt = 3
   Insn 3940: point = 167, n_alt = 0
   Insn 3939: point = 169, n_alt = 1
   Insn 3938: point = 171, n_alt = 0
   Insn 3937: point = 172, n_alt = 0
   Insn 3936: point = 174, n_alt = 1
   Insn 3935: point = 176, n_alt = 0
   Insn 3934: point = 177, n_alt = 7
   Insn 3933: point = 179, n_alt = 0
   Insn 3932: point = 181, n_alt = 4
   Insn 3931: point = 182, n_alt = 3
   Insn 3930: point = 184, n_alt = 0
   Insn 3929: point = 186, n_alt = 1
   Insn 3928: point = 188, n_alt = 0
   Insn 3927: point = 189, n_alt = 0
   Insn 3926: point = 191, n_alt = 1
   Insn 3925: point = 193, n_alt = 0
  BB 301
   Insn 3952: point = 195, n_alt = 8
   Insn 3951: point = 196, n_alt = 7
  BB 299
   Insn 3920: point = 198, n_alt = -1
   Insn 3919: point = 198, n_alt = 1
   Insn 3918: point = 199, n_alt = 7
   Insn 3917: point = 201, n_alt = 0
   Insn 3916: point = 203, n_alt = 4
   Insn 3915: point = 204, n_alt = 3
   Insn 3914: point = 206, n_alt = 0
   Insn 3913: point = 208, n_alt = 1
   Insn 3912: point = 210, n_alt = 0
   Insn 3911: point = 211, n_alt = 0
   Insn 3910: point = 213, n_alt = 1
   Insn 3909: point = 215, n_alt = 0
  BB 297
   Insn 3901: point = 217, n_alt = 1
  BB 295
   Insn 3893: point = 218, n_alt = 1
   Insn 3892: point = 219, n_alt = 0
   Insn 3891: point = 220, n_alt = 0
  BB 294
   Insn 3889: point = 221, n_alt = -1
   Insn 3888: point = 221, n_alt = 0
   Insn 3887: point = 222, n_alt = 0
  BB 293
   Insn 3884: point = 223, n_alt = 0
   Insn 3883: point = 223, n_alt = 3
   Insn 3882: point = 223, n_alt = 2
   Insn 3881: point = 223, n_alt = 2
   Insn 3880: point = 223, n_alt = -2
   Insn 3879: point = 224, n_alt = -2
   Insn 3878: point = 225, n_alt = -2
   Insn 3877: point = 226, n_alt = -2
   Insn 3876: point = 227, n_alt = 3
   Insn 3875: point = 228, n_alt = 3
   Insn 3874: point = 229, n_alt = 3
   Insn 3873: point = 230, n_alt = 3
   Insn 3872: point = 232, n_alt = 0
   Insn 3871: point = 234, n_alt = 0
   Insn 3870: point = 236, n_alt = -2
   Insn 3869: point = 238, n_alt = -2
   Insn 3868: point = 240, n_alt = 0
   Insn 3867: point = 242, n_alt = 0
   Insn 3866: point = 243, n_alt = -2
   Insn 3865: point = 245, n_alt = 0
   Insn 3864: point = 247, n_alt = -2
   Insn 3863: point = 248, n_alt = 3
   Insn 3862: point = 250, n_alt = 0
   Insn 3861: point = 252, n_alt = 0
   Insn 3860: point = 253, n_alt = 0
   Insn 3859: point = 254, n_alt = 1
   Insn 4512: point = 255, n_alt = -2
   Insn 3858: point = 257, n_alt = 0
   Insn 4511: point = 258, n_alt = -2
   Insn 3857: point = 260, n_alt = 2
   Insn 3856: point = 261, n_alt = 2
   Insn 3855: point = 262, n_alt = 2
   Insn 3854: point = 263, n_alt = 0
   Insn 3853: point = 263, n_alt = 0
   Insn 3852: point = 263, n_alt = 3
   Insn 3851: point = 263, n_alt = 2
   Insn 3850: point = 263, n_alt = 2
   Insn 3849: point = 263, n_alt = 4
   Insn 3848: point = 263, n_alt = 4
   Insn 3847: point = 263, n_alt = -2
   Insn 3846: point = 264, n_alt = -2
   Insn 3845: point = 265, n_alt = 0
   Insn 3844: point = 265, n_alt = 0
   Insn 3843: point = 265, n_alt = 3
   Insn 3842: point = 266, n_alt = 3
  BB 348
   Insn 4428: point = 267, n_alt = -1
  BB 285
   Insn 3721: point = 267, n_alt = -1
   Insn 3720: point = 267, n_alt = 0
   Insn 3719: point = 268, n_alt = 0
   Insn 3718: point = 270, n_alt = 0
   Insn 3717: point = 271, n_alt = 0
  BB 292
   Insn 4297: point = 272, n_alt = -1
   Insn 3836: point = 272, n_alt = 1
  BB 349
   Insn 4431: point = 273, n_alt = -1
  BB 287
   Insn 3729: point = 274, n_alt = -1
   Insn 3728: point = 274, n_alt = 0
   Insn 3727: point = 275, n_alt = 0
   Insn 3726: point = 277, n_alt = 0
   Insn 3725: point = 278, n_alt = 0
  BB 291
   Insn 4295: point = 279, n_alt = -1
   Insn 3830: point = 279, n_alt = 1
   Insn 3829: point = 279, n_alt = 8
   Insn 3828: point = 280, n_alt = 4
   Insn 3827: point = 281, n_alt = 1
   Insn 3826: point = 283, n_alt = 3
   Insn 3825: point = 285, n_alt = 0
   Insn 3824: point = 287, n_alt = 1
   Insn 3823: point = 289, n_alt = 0
   Insn 3822: point = 290, n_alt = 0
   Insn 3821: point = 292, n_alt = 1
   Insn 3820: point = 294, n_alt = 0
   Insn 3819: point = 295, n_alt = 1
   Insn 3818: point = 297, n_alt = 7
   Insn 3817: point = 299, n_alt = 0
   Insn 3816: point = 301, n_alt = 4
   Insn 3815: point = 302, n_alt = 3
   Insn 3814: point = 304, n_alt = 0
   Insn 3813: point = 306, n_alt = 1
   Insn 3812: point = 308, n_alt = 0
   Insn 3811: point = 309, n_alt = 0
   Insn 3810: point = 311, n_alt = 1
   Insn 3809: point = 313, n_alt = 0
   Insn 3808: point = 314, n_alt = 7
   Insn 3807: point = 316, n_alt = 4
   Insn 3806: point = 317, n_alt = 3
   Insn 3805: point = 319, n_alt = 0
   Insn 3804: point = 321, n_alt = 1
   Insn 3803: point = 323, n_alt = 0
   Insn 3802: point = 324, n_alt = 0
   Insn 3801: point = 326, n_alt = 1
   Insn 3800: point = 328, n_alt = 0
  BB 289
   Insn 4293: point = 330, n_alt = -1
   Insn 3791: point = 330, n_alt = 8
   Insn 3790: point = 331, n_alt = 2
   Insn 3789: point = 333, n_alt = 7
   Insn 3788: point = 335, n_alt = 0
   Insn 3787: point = 337, n_alt = 4
   Insn 3786: point = 338, n_alt = 3
   Insn 3785: point = 340, n_alt = 0
   Insn 3784: point = 342, n_alt = 1
   Insn 3783: point = 344, n_alt = 0
   Insn 3782: point = 345, n_alt = 0
   Insn 3781: point = 347, n_alt = 1
   Insn 3780: point = 349, n_alt = 0
   Insn 3779: point = 350, n_alt = 1
   Insn 3778: point = 352, n_alt = 1
   Insn 3777: point = 354, n_alt = 1
   Insn 3776: point = 356, n_alt = 1
   Insn 3775: point = 358, n_alt = 7
   Insn 3774: point = 359, n_alt = 7
   Insn 3773: point = 360, n_alt = 8
   Insn 3772: point = 361, n_alt = 7
   Insn 3771: point = 363, n_alt = 0
   Insn 3770: point = 365, n_alt = 4
   Insn 3769: point = 366, n_alt = 3
   Insn 3768: point = 368, n_alt = 0
   Insn 3767: point = 370, n_alt = 1
   Insn 3766: point = 372, n_alt = 0
   Insn 3765: point = 373, n_alt = 0
   Insn 3764: point = 375, n_alt = 0
   Insn 3763: point = 377, n_alt = 1
   Insn 3762: point = 379, n_alt = 0
   Insn 3761: point = 380, n_alt = 1
   Insn 3760: point = 382, n_alt = 1
   Insn 3759: point = 384, n_alt = 0
   Insn 3758: point = 385, n_alt = 1
   Insn 3757: point = 386, n_alt = 0
   Insn 3756: point = 388, n_alt = 0
   Insn 3755: point = 390, n_alt = 4
   Insn 3754: point = 391, n_alt = 3
   Insn 3753: point = 393, n_alt = 0
   Insn 3752: point = 395, n_alt = 1
   Insn 3751: point = 397, n_alt = 0
   Insn 3750: point = 398, n_alt = 0
   Insn 3749: point = 400, n_alt = 1
   Insn 3748: point = 402, n_alt = 0
  BB 290
   Insn 3797: point = 404, n_alt = 8
   Insn 3796: point = 405, n_alt = 7
  BB 288
   Insn 3743: point = 407, n_alt = -1
   Insn 3742: point = 407, n_alt = 1
   Insn 3741: point = 408, n_alt = 7
   Insn 3740: point = 409, n_alt = 7
   Insn 3739: point = 411, n_alt = 0
   Insn 3738: point = 413, n_alt = 4
   Insn 3737: point = 414, n_alt = 3
   Insn 3736: point = 416, n_alt = 0
   Insn 3735: point = 418, n_alt = 1
   Insn 3734: point = 420, n_alt = 0
   Insn 3733: point = 421, n_alt = 0
   Insn 3732: point = 423, n_alt = 1
   Insn 3731: point = 425, n_alt = 0
  BB 286
   Insn 3723: point = 427, n_alt = 1
  BB 284
   Insn 3715: point = 428, n_alt = 1
   Insn 3714: point = 429, n_alt = 0
   Insn 3713: point = 430, n_alt = 0
  BB 283
   Insn 3711: point = 431, n_alt = -1
   Insn 3710: point = 431, n_alt = 0
   Insn 3709: point = 432, n_alt = 0
  BB 282
   Insn 3706: point = 433, n_alt = 0
   Insn 3705: point = 433, n_alt = 3
   Insn 3704: point = 433, n_alt = 2
   Insn 3703: point = 433, n_alt = 2
   Insn 3702: point = 433, n_alt = -2
   Insn 3701: point = 434, n_alt = -2
   Insn 3700: point = 435, n_alt = -2
   Insn 3699: point = 436, n_alt = -2
   Insn 3698: point = 437, n_alt = 3
   Insn 3697: point = 438, n_alt = 3
   Insn 3696: point = 439, n_alt = 3
   Insn 3695: point = 440, n_alt = 3
   Insn 3694: point = 442, n_alt = 0
   Insn 3693: point = 444, n_alt = 0
   Insn 3692: point = 446, n_alt = -2
   Insn 3691: point = 448, n_alt = -2
   Insn 3690: point = 450, n_alt = 0
   Insn 3689: point = 452, n_alt = 0
   Insn 3688: point = 453, n_alt = -2
   Insn 3687: point = 455, n_alt = 0
   Insn 3686: point = 457, n_alt = -2
   Insn 3685: point = 458, n_alt = 3
   Insn 3684: point = 460, n_alt = 0
   Insn 3683: point = 462, n_alt = 0
   Insn 3682: point = 463, n_alt = 0
   Insn 3681: point = 464, n_alt = 1
   Insn 4510: point = 465, n_alt = -2
   Insn 3680: point = 467, n_alt = 0
   Insn 4509: point = 468, n_alt = -2
   Insn 3679: point = 470, n_alt = 2
   Insn 3678: point = 471, n_alt = 2
   Insn 3677: point = 472, n_alt = 2
   Insn 3676: point = 473, n_alt = 0
   Insn 3675: point = 473, n_alt = 0
   Insn 3674: point = 473, n_alt = 3
   Insn 3673: point = 473, n_alt = 2
   Insn 3672: point = 473, n_alt = 2
   Insn 3671: point = 473, n_alt = 4
   Insn 3670: point = 473, n_alt = 4
   Insn 3669: point = 473, n_alt = -2
   Insn 3668: point = 474, n_alt = -2
   Insn 3667: point = 475, n_alt = 0
   Insn 3666: point = 475, n_alt = 0
   Insn 3665: point = 475, n_alt = 3
   Insn 3664: point = 476, n_alt = 3
  BB 346
   Insn 4422: point = 477, n_alt = -1
  BB 274
   Insn 3566: point = 477, n_alt = -1
   Insn 3565: point = 477, n_alt = 0
   Insn 3564: point = 478, n_alt = 0
   Insn 3563: point = 480, n_alt = 0
   Insn 3562: point = 481, n_alt = 0
  BB 281
   Insn 4290: point = 482, n_alt = -1
   Insn 3658: point = 482, n_alt = 1
  BB 347
   Insn 4425: point = 483, n_alt = -1
  BB 276
   Insn 3574: point = 484, n_alt = -1
   Insn 3573: point = 484, n_alt = 0
   Insn 3572: point = 485, n_alt = 0
   Insn 3571: point = 487, n_alt = 0
   Insn 3570: point = 488, n_alt = 0
  BB 280
   Insn 4288: point = 489, n_alt = -1
   Insn 3652: point = 489, n_alt = 1
   Insn 3651: point = 489, n_alt = 8
   Insn 3650: point = 490, n_alt = 4
   Insn 3649: point = 491, n_alt = 1
   Insn 3648: point = 493, n_alt = 3
   Insn 3647: point = 495, n_alt = 0
   Insn 3646: point = 497, n_alt = 1
   Insn 3645: point = 499, n_alt = 0
   Insn 3644: point = 500, n_alt = 0
   Insn 3643: point = 502, n_alt = 1
   Insn 3642: point = 504, n_alt = 0
   Insn 3641: point = 505, n_alt = 1
   Insn 3640: point = 507, n_alt = 7
   Insn 3639: point = 509, n_alt = 0
   Insn 3638: point = 511, n_alt = 4
   Insn 3637: point = 512, n_alt = 3
   Insn 3636: point = 514, n_alt = 0
   Insn 3635: point = 516, n_alt = 1
   Insn 3634: point = 518, n_alt = 0
   Insn 3633: point = 519, n_alt = 0
   Insn 3632: point = 521, n_alt = 1
   Insn 3631: point = 523, n_alt = 0
   Insn 3630: point = 524, n_alt = 7
   Insn 3629: point = 526, n_alt = 4
   Insn 3628: point = 527, n_alt = 3
   Insn 3627: point = 529, n_alt = 0
   Insn 3626: point = 531, n_alt = 1
   Insn 3625: point = 533, n_alt = 0
   Insn 3624: point = 534, n_alt = 0
   Insn 3623: point = 536, n_alt = 1
   Insn 3622: point = 538, n_alt = 0
  BB 278
   Insn 4286: point = 540, n_alt = -1
   Insn 3613: point = 540, n_alt = 8
   Insn 3612: point = 541, n_alt = 2
   Insn 3611: point = 543, n_alt = 7
   Insn 3610: point = 545, n_alt = 0
   Insn 3609: point = 547, n_alt = 4
   Insn 3608: point = 548, n_alt = 3
   Insn 3607: point = 550, n_alt = 0
   Insn 3606: point = 552, n_alt = 1
   Insn 3605: point = 554, n_alt = 0
   Insn 3604: point = 555, n_alt = 0
   Insn 3603: point = 557, n_alt = 1
   Insn 3602: point = 559, n_alt = 0
   Insn 3601: point = 560, n_alt = 7
   Insn 3600: point = 562, n_alt = 0
   Insn 3599: point = 564, n_alt = 4
   Insn 3598: point = 565, n_alt = 3
   Insn 3597: point = 567, n_alt = 0
   Insn 3596: point = 569, n_alt = 1
   Insn 3595: point = 571, n_alt = 0
   Insn 3594: point = 572, n_alt = 0
   Insn 3593: point = 574, n_alt = 1
   Insn 3592: point = 576, n_alt = 0
  BB 279
   Insn 3619: point = 578, n_alt = 8
   Insn 3618: point = 579, n_alt = 7
  BB 277
   Insn 3587: point = 581, n_alt = -1
   Insn 3586: point = 581, n_alt = 1
   Insn 3585: point = 582, n_alt = 7
   Insn 3584: point = 584, n_alt = 0
   Insn 3583: point = 586, n_alt = 4
   Insn 3582: point = 587, n_alt = 3
   Insn 3581: point = 589, n_alt = 0
   Insn 3580: point = 591, n_alt = 1
   Insn 3579: point = 593, n_alt = 0
   Insn 3578: point = 594, n_alt = 0
   Insn 3577: point = 596, n_alt = 1
   Insn 3576: point = 598, n_alt = 0
  BB 275
   Insn 3568: point = 600, n_alt = 1
  BB 273
   Insn 3560: point = 601, n_alt = 1
   Insn 3559: point = 602, n_alt = 0
   Insn 3558: point = 603, n_alt = 0
  BB 272
   Insn 3556: point = 604, n_alt = -1
   Insn 3555: point = 604, n_alt = 0
   Insn 3554: point = 605, n_alt = 0
  BB 271
   Insn 3551: point = 606, n_alt = 0
   Insn 3550: point = 606, n_alt = 3
   Insn 3549: point = 606, n_alt = 2
   Insn 3548: point = 606, n_alt = 2
   Insn 3547: point = 606, n_alt = -2
   Insn 3546: point = 607, n_alt = -2
   Insn 3545: point = 608, n_alt = -2
   Insn 3544: point = 609, n_alt = -2
   Insn 3543: point = 610, n_alt = 3
   Insn 3542: point = 611, n_alt = 3
   Insn 3541: point = 612, n_alt = 3
   Insn 3540: point = 613, n_alt = 3
   Insn 3539: point = 615, n_alt = 0
   Insn 3538: point = 617, n_alt = 0
   Insn 3537: point = 619, n_alt = -2
   Insn 3536: point = 621, n_alt = -2
   Insn 3535: point = 623, n_alt = 0
   Insn 3534: point = 625, n_alt = 0
   Insn 3533: point = 626, n_alt = -2
   Insn 3532: point = 628, n_alt = 0
   Insn 3531: point = 630, n_alt = -2
   Insn 3530: point = 631, n_alt = 3
   Insn 3529: point = 633, n_alt = 0
   Insn 3528: point = 635, n_alt = 0
  BB 270
   Insn 3525: point = 636, n_alt = 1
  BB 269
   Insn 3523: point = 636, n_alt = -1
   Insn 3522: point = 636, n_alt = 0
   Insn 3521: point = 637, n_alt = 0
  BB 267
   Insn 4283: point = 638, n_alt = -1
   Insn 3511: point = 638, n_alt = 1
   Insn 3510: point = 639, n_alt = 1
   Insn 3509: point = 641, n_alt = 0
  BB 268
   Insn 3518: point = 642, n_alt = 1
   Insn 3517: point = 643, n_alt = 1
   Insn 3516: point = 645, n_alt = 0
  BB 266
   Insn 3507: point = 646, n_alt = -1
   Insn 3506: point = 646, n_alt = 1
   Insn 3505: point = 646, n_alt = 1
   Insn 3504: point = 646, n_alt = 1
   Insn 3503: point = 647, n_alt = 0
   Insn 3502: point = 648, n_alt = 1
   Insn 3501: point = 649, n_alt = 0
   Insn 3500: point = 651, n_alt = 0
   Insn 3499: point = 652, n_alt = 1
   Insn 3498: point = 653, n_alt = 0
   Insn 3497: point = 655, n_alt = 7
   Insn 3496: point = 657, n_alt = 4
   Insn 3495: point = 658, n_alt = 1
   Insn 3494: point = 659, n_alt = 0
   Insn 3493: point = 660, n_alt = 0
   Insn 3492: point = 661, n_alt = 1
   Insn 4508: point = 662, n_alt = -2
   Insn 3491: point = 664, n_alt = 0
   Insn 4507: point = 665, n_alt = -2
   Insn 3490: point = 667, n_alt = 2
   Insn 3489: point = 668, n_alt = 2
   Insn 3488: point = 669, n_alt = 2
   Insn 3487: point = 670, n_alt = 0
   Insn 3486: point = 670, n_alt = 0
   Insn 3485: point = 670, n_alt = 3
   Insn 3484: point = 670, n_alt = 2
   Insn 3483: point = 670, n_alt = 2
   Insn 3482: point = 670, n_alt = 4
   Insn 3481: point = 670, n_alt = 4
   Insn 3480: point = 670, n_alt = -2
   Insn 3479: point = 671, n_alt = -2
   Insn 3478: point = 672, n_alt = 0
   Insn 3477: point = 672, n_alt = 0
   Insn 3476: point = 672, n_alt = 3
   Insn 3475: point = 673, n_alt = 3
  BB 344
   Insn 4416: point = 674, n_alt = -1
  BB 261
   Insn 3433: point = 674, n_alt = -1
   Insn 3432: point = 674, n_alt = 0
   Insn 3431: point = 675, n_alt = 0
   Insn 3430: point = 677, n_alt = 0
   Insn 3429: point = 678, n_alt = 0
  BB 265
   Insn 4281: point = 679, n_alt = -1
   Insn 3469: point = 679, n_alt = 1
  BB 345
   Insn 4419: point = 680, n_alt = -1
  BB 263
   Insn 3441: point = 681, n_alt = -1
   Insn 3440: point = 681, n_alt = 0
   Insn 3439: point = 682, n_alt = 0
   Insn 3438: point = 684, n_alt = 0
   Insn 3437: point = 685, n_alt = 0
  BB 264
   Insn 4279: point = 686, n_alt = -1
   Insn 3463: point = 686, n_alt = 1
   Insn 3462: point = 686, n_alt = 8
   Insn 3461: point = 687, n_alt = 4
   Insn 3460: point = 688, n_alt = 1
   Insn 3459: point = 690, n_alt = 3
   Insn 3458: point = 692, n_alt = 0
   Insn 3457: point = 694, n_alt = 1
   Insn 3456: point = 696, n_alt = 0
   Insn 3455: point = 697, n_alt = 0
   Insn 3454: point = 699, n_alt = 1
   Insn 3453: point = 701, n_alt = 0
   Insn 3452: point = 702, n_alt = 7
   Insn 3451: point = 704, n_alt = 0
   Insn 3450: point = 706, n_alt = 4
   Insn 3449: point = 707, n_alt = 3
   Insn 3448: point = 709, n_alt = 0
   Insn 3447: point = 711, n_alt = 1
   Insn 3446: point = 713, n_alt = 0
   Insn 3445: point = 714, n_alt = 0
   Insn 3444: point = 716, n_alt = 1
   Insn 3443: point = 718, n_alt = 0
  BB 262
   Insn 3435: point = 720, n_alt = 1
  BB 260
   Insn 3427: point = 721, n_alt = 1
   Insn 3426: point = 722, n_alt = 0
   Insn 3425: point = 723, n_alt = 0
  BB 258
   Insn 4277: point = 724, n_alt = -1
   Insn 3416: point = 724, n_alt = 8
   Insn 3415: point = 725, n_alt = 2
   Insn 3414: point = 727, n_alt = 7
   Insn 3413: point = 728, n_alt = 7
   Insn 3412: point = 730, n_alt = 4
  BB 259
   Insn 3422: point = 731, n_alt = 8
   Insn 3421: point = 732, n_alt = 7
  BB 257
   Insn 3407: point = 733, n_alt = -1
   Insn 3406: point = 733, n_alt = 1
   Insn 3405: point = 734, n_alt = 7
   Insn 3404: point = 735, n_alt = 7
   Insn 3403: point = 737, n_alt = 4
  BB 256
   Insn 3401: point = 738, n_alt = -1
   Insn 3400: point = 738, n_alt = 0
   Insn 3399: point = 739, n_alt = 0
  BB 255
   Insn 3396: point = 740, n_alt = 0
   Insn 3395: point = 740, n_alt = 3
   Insn 3394: point = 740, n_alt = 2
   Insn 3393: point = 740, n_alt = 2
   Insn 3392: point = 740, n_alt = -2
   Insn 3391: point = 741, n_alt = -2
   Insn 3390: point = 742, n_alt = -2
   Insn 3389: point = 743, n_alt = -2
   Insn 3388: point = 744, n_alt = 3
   Insn 3387: point = 745, n_alt = 3
   Insn 3386: point = 746, n_alt = 3
   Insn 3385: point = 747, n_alt = 3
   Insn 3384: point = 749, n_alt = 0
   Insn 3383: point = 751, n_alt = 0
   Insn 3382: point = 753, n_alt = -2
   Insn 3381: point = 755, n_alt = -2
   Insn 3380: point = 757, n_alt = 0
   Insn 3379: point = 759, n_alt = 0
   Insn 3378: point = 760, n_alt = -2
   Insn 3377: point = 762, n_alt = 0
   Insn 3376: point = 764, n_alt = -2
   Insn 3375: point = 765, n_alt = 3
   Insn 3374: point = 767, n_alt = 0
   Insn 3373: point = 769, n_alt = 0
  BB 254
   Insn 3370: point = 770, n_alt = 1
  BB 253
   Insn 3368: point = 770, n_alt = -1
   Insn 3367: point = 770, n_alt = 0
   Insn 3366: point = 771, n_alt = 0
  BB 251
   Insn 4274: point = 772, n_alt = -1
   Insn 3356: point = 772, n_alt = 1
   Insn 3355: point = 773, n_alt = 1
   Insn 3354: point = 775, n_alt = 0
  BB 252
   Insn 3363: point = 776, n_alt = 1
   Insn 3362: point = 777, n_alt = 1
   Insn 3361: point = 779, n_alt = 0
  BB 250
   Insn 3352: point = 780, n_alt = -1
   Insn 3351: point = 780, n_alt = 1
   Insn 3350: point = 780, n_alt = 1
   Insn 3349: point = 780, n_alt = 1
   Insn 3348: point = 781, n_alt = 0
   Insn 3347: point = 782, n_alt = 1
   Insn 3346: point = 783, n_alt = 0
   Insn 3345: point = 785, n_alt = 0
   Insn 3344: point = 786, n_alt = 1
   Insn 3343: point = 787, n_alt = 0
   Insn 3342: point = 789, n_alt = 7
   Insn 3341: point = 791, n_alt = 4
   Insn 3340: point = 792, n_alt = 1
   Insn 3339: point = 793, n_alt = 0
   Insn 3338: point = 794, n_alt = 0
   Insn 3337: point = 795, n_alt = 1
   Insn 4506: point = 796, n_alt = -2
   Insn 3336: point = 798, n_alt = 0
   Insn 4505: point = 799, n_alt = -2
   Insn 3335: point = 801, n_alt = 2
   Insn 3334: point = 802, n_alt = 2
   Insn 3333: point = 803, n_alt = 2
   Insn 3332: point = 804, n_alt = 0
   Insn 3331: point = 804, n_alt = 0
   Insn 3330: point = 804, n_alt = 3
   Insn 3329: point = 804, n_alt = 2
   Insn 3328: point = 804, n_alt = 2
   Insn 3327: point = 804, n_alt = 4
   Insn 3326: point = 804, n_alt = 4
   Insn 3325: point = 804, n_alt = -2
   Insn 3324: point = 805, n_alt = -2
   Insn 3323: point = 806, n_alt = 0
   Insn 3322: point = 806, n_alt = 0
   Insn 3321: point = 806, n_alt = 3
   Insn 3320: point = 807, n_alt = 3
  BB 342
   Insn 4410: point = 808, n_alt = -1
  BB 245
   Insn 3278: point = 808, n_alt = -1
   Insn 3277: point = 808, n_alt = 0
   Insn 3276: point = 809, n_alt = 0
   Insn 3275: point = 811, n_alt = 0
   Insn 3274: point = 812, n_alt = 0
  BB 249
   Insn 4272: point = 813, n_alt = -1
   Insn 3314: point = 813, n_alt = 1
  BB 343
   Insn 4413: point = 814, n_alt = -1
  BB 247
   Insn 3286: point = 815, n_alt = -1
   Insn 3285: point = 815, n_alt = 0
   Insn 3284: point = 816, n_alt = 0
   Insn 3283: point = 818, n_alt = 0
   Insn 3282: point = 819, n_alt = 0
  BB 248
   Insn 4270: point = 820, n_alt = -1
   Insn 3308: point = 820, n_alt = 1
   Insn 3307: point = 820, n_alt = 8
   Insn 3306: point = 821, n_alt = 4
   Insn 3305: point = 822, n_alt = 1
   Insn 3304: point = 824, n_alt = 3
   Insn 3303: point = 826, n_alt = 0
   Insn 3302: point = 828, n_alt = 1
   Insn 3301: point = 830, n_alt = 0
   Insn 3300: point = 831, n_alt = 0
   Insn 3299: point = 833, n_alt = 1
   Insn 3298: point = 835, n_alt = 0
   Insn 3297: point = 836, n_alt = 7
   Insn 3296: point = 838, n_alt = 0
   Insn 3295: point = 840, n_alt = 4
   Insn 3294: point = 841, n_alt = 3
   Insn 3293: point = 843, n_alt = 0
   Insn 3292: point = 845, n_alt = 1
   Insn 3291: point = 847, n_alt = 0
   Insn 3290: point = 848, n_alt = 0
   Insn 3289: point = 850, n_alt = 1
   Insn 3288: point = 852, n_alt = 0
  BB 246
   Insn 3280: point = 854, n_alt = 1
  BB 244
   Insn 3272: point = 855, n_alt = 1
   Insn 3271: point = 856, n_alt = 0
   Insn 3270: point = 857, n_alt = 0
  BB 242
   Insn 4268: point = 858, n_alt = -1
   Insn 3261: point = 858, n_alt = 8
   Insn 3260: point = 859, n_alt = 2
   Insn 3259: point = 861, n_alt = 7
   Insn 3258: point = 862, n_alt = 7
   Insn 3257: point = 864, n_alt = 4
  BB 243
   Insn 3267: point = 865, n_alt = 8
   Insn 3266: point = 866, n_alt = 7
  BB 241
   Insn 3252: point = 867, n_alt = -1
   Insn 3251: point = 867, n_alt = 1
   Insn 3250: point = 868, n_alt = 7
   Insn 3249: point = 869, n_alt = 7
   Insn 3248: point = 871, n_alt = 4
  BB 240
   Insn 3246: point = 872, n_alt = -1
   Insn 3245: point = 872, n_alt = 0
   Insn 3244: point = 873, n_alt = 0
  BB 239
   Insn 3241: point = 874, n_alt = 0
   Insn 3240: point = 874, n_alt = 3
   Insn 3239: point = 874, n_alt = 2
   Insn 3238: point = 874, n_alt = 2
   Insn 3237: point = 874, n_alt = -2
   Insn 3236: point = 875, n_alt = -2
   Insn 3235: point = 876, n_alt = -2
   Insn 3234: point = 877, n_alt = -2
   Insn 3233: point = 878, n_alt = 3
   Insn 3232: point = 879, n_alt = 3
   Insn 3231: point = 880, n_alt = 3
   Insn 3230: point = 881, n_alt = 3
   Insn 3229: point = 883, n_alt = 0
   Insn 3228: point = 885, n_alt = 0
   Insn 3227: point = 887, n_alt = -2
   Insn 3226: point = 889, n_alt = -2
   Insn 3225: point = 891, n_alt = 0
   Insn 3224: point = 893, n_alt = 0
   Insn 3223: point = 894, n_alt = -2
   Insn 3222: point = 896, n_alt = 0
   Insn 3221: point = 898, n_alt = -2
   Insn 3220: point = 899, n_alt = 3
   Insn 3219: point = 901, n_alt = 0
   Insn 3218: point = 903, n_alt = 0
  BB 238
   Insn 3215: point = 904, n_alt = 1
  BB 237
   Insn 3213: point = 904, n_alt = -1
   Insn 3212: point = 904, n_alt = 0
   Insn 3211: point = 905, n_alt = 0
  BB 235
   Insn 4265: point = 906, n_alt = -1
   Insn 3201: point = 906, n_alt = 1
   Insn 3200: point = 907, n_alt = 1
   Insn 3199: point = 909, n_alt = 0
  BB 236
   Insn 3208: point = 910, n_alt = 1
   Insn 3207: point = 911, n_alt = 1
   Insn 3206: point = 913, n_alt = 0
  BB 234
   Insn 3197: point = 914, n_alt = -1
   Insn 3196: point = 914, n_alt = 1
   Insn 3195: point = 914, n_alt = 1
   Insn 3194: point = 914, n_alt = 1
   Insn 3193: point = 915, n_alt = 0
   Insn 3192: point = 916, n_alt = 1
   Insn 3191: point = 917, n_alt = 0
   Insn 3190: point = 919, n_alt = 0
   Insn 3189: point = 920, n_alt = 1
   Insn 3188: point = 921, n_alt = 0
   Insn 3187: point = 923, n_alt = 7
   Insn 3186: point = 925, n_alt = 4
   Insn 3185: point = 926, n_alt = 1
   Insn 3184: point = 927, n_alt = 0
   Insn 3183: point = 928, n_alt = 0
   Insn 3182: point = 929, n_alt = 1
   Insn 4504: point = 930, n_alt = -2
   Insn 3181: point = 932, n_alt = 0
   Insn 4503: point = 933, n_alt = -2
   Insn 3180: point = 935, n_alt = 2
   Insn 3179: point = 936, n_alt = 2
   Insn 3178: point = 937, n_alt = 2
   Insn 3177: point = 938, n_alt = 0
   Insn 3176: point = 938, n_alt = 0
   Insn 3175: point = 938, n_alt = 3
   Insn 3174: point = 938, n_alt = 2
   Insn 3173: point = 938, n_alt = 2
   Insn 3172: point = 938, n_alt = 4
   Insn 3171: point = 938, n_alt = 4
   Insn 3170: point = 938, n_alt = -2
   Insn 3169: point = 939, n_alt = -2
   Insn 3168: point = 940, n_alt = 0
   Insn 3167: point = 940, n_alt = 0
   Insn 3166: point = 940, n_alt = 3
   Insn 3165: point = 941, n_alt = 3
  BB 340
   Insn 4404: point = 942, n_alt = -1
  BB 229
   Insn 3121: point = 942, n_alt = -1
   Insn 3120: point = 942, n_alt = 0
   Insn 3119: point = 943, n_alt = 0
   Insn 3118: point = 945, n_alt = 0
   Insn 3117: point = 946, n_alt = 0
  BB 233
   Insn 4263: point = 947, n_alt = -1
   Insn 3159: point = 947, n_alt = 1
  BB 341
   Insn 4407: point = 948, n_alt = -1
  BB 231
   Insn 3129: point = 949, n_alt = -1
   Insn 3128: point = 949, n_alt = 0
   Insn 3127: point = 950, n_alt = 0
   Insn 3126: point = 952, n_alt = 0
   Insn 3125: point = 953, n_alt = 0
  BB 232
   Insn 4261: point = 954, n_alt = -1
   Insn 3153: point = 954, n_alt = 1
   Insn 3152: point = 954, n_alt = 8
   Insn 3151: point = 955, n_alt = 4
   Insn 3150: point = 956, n_alt = 0
   Insn 3149: point = 958, n_alt = 2
   Insn 3148: point = 959, n_alt = 3
   Insn 3147: point = 961, n_alt = 0
   Insn 3146: point = 963, n_alt = 1
   Insn 3145: point = 965, n_alt = 0
   Insn 3144: point = 966, n_alt = 0
   Insn 3143: point = 968, n_alt = 1
   Insn 3142: point = 970, n_alt = 0
   Insn 3141: point = 971, n_alt = 1
   Insn 3140: point = 973, n_alt = 7
   Insn 3139: point = 975, n_alt = 0
   Insn 3138: point = 977, n_alt = 4
   Insn 3137: point = 978, n_alt = 3
   Insn 3136: point = 980, n_alt = 0
   Insn 3135: point = 982, n_alt = 1
   Insn 3134: point = 984, n_alt = 0
   Insn 3133: point = 985, n_alt = 0
   Insn 3132: point = 987, n_alt = 1
   Insn 3131: point = 989, n_alt = 0
  BB 230
   Insn 3123: point = 991, n_alt = 1
  BB 228
   Insn 3115: point = 992, n_alt = 1
   Insn 3114: point = 993, n_alt = 0
   Insn 3113: point = 994, n_alt = 0
  BB 226
   Insn 4259: point = 995, n_alt = -1
   Insn 3104: point = 995, n_alt = 8
   Insn 3103: point = 996, n_alt = 2
   Insn 3102: point = 998, n_alt = 7
   Insn 3101: point = 999, n_alt = 7
   Insn 3100: point = 1001, n_alt = 4
  BB 227
   Insn 3110: point = 1002, n_alt = 8
   Insn 3109: point = 1003, n_alt = 7
  BB 225
   Insn 3095: point = 1004, n_alt = -1
   Insn 3094: point = 1004, n_alt = 1
   Insn 3093: point = 1005, n_alt = 7
   Insn 3092: point = 1006, n_alt = 7
   Insn 3091: point = 1008, n_alt = 4
  BB 224
   Insn 3089: point = 1009, n_alt = -1
   Insn 3088: point = 1009, n_alt = 0
   Insn 3087: point = 1010, n_alt = 0
  BB 223
   Insn 3084: point = 1011, n_alt = 0
   Insn 3083: point = 1011, n_alt = 3
   Insn 3082: point = 1011, n_alt = 2
   Insn 3081: point = 1011, n_alt = 2
   Insn 3080: point = 1011, n_alt = -2
   Insn 3079: point = 1012, n_alt = -2
   Insn 3078: point = 1013, n_alt = -2
   Insn 3077: point = 1014, n_alt = -2
   Insn 3076: point = 1015, n_alt = 3
   Insn 3075: point = 1016, n_alt = 3
   Insn 3074: point = 1017, n_alt = 3
   Insn 3073: point = 1018, n_alt = 3
   Insn 3072: point = 1020, n_alt = 0
   Insn 3071: point = 1022, n_alt = 0
   Insn 3070: point = 1024, n_alt = -2
   Insn 3069: point = 1026, n_alt = -2
   Insn 3068: point = 1028, n_alt = 0
   Insn 3067: point = 1030, n_alt = 0
   Insn 3066: point = 1031, n_alt = -2
   Insn 3065: point = 1033, n_alt = 0
   Insn 3064: point = 1035, n_alt = -2
   Insn 3063: point = 1036, n_alt = 3
   Insn 3062: point = 1038, n_alt = 0
   Insn 3061: point = 1040, n_alt = 0
  BB 222
   Insn 3058: point = 1041, n_alt = 1
  BB 221
   Insn 3056: point = 1041, n_alt = -1
   Insn 3055: point = 1041, n_alt = 0
   Insn 3054: point = 1042, n_alt = 0
  BB 219
   Insn 4256: point = 1043, n_alt = -1
   Insn 3044: point = 1043, n_alt = 1
   Insn 3043: point = 1044, n_alt = 1
   Insn 3042: point = 1046, n_alt = 0
  BB 220
   Insn 3051: point = 1047, n_alt = 1
   Insn 3050: point = 1048, n_alt = 1
   Insn 3049: point = 1050, n_alt = 0
  BB 218
   Insn 3040: point = 1051, n_alt = -1
   Insn 3039: point = 1051, n_alt = 1
   Insn 3038: point = 1051, n_alt = 1
   Insn 3037: point = 1051, n_alt = 1
   Insn 3036: point = 1052, n_alt = 0
   Insn 3035: point = 1053, n_alt = 1
   Insn 3034: point = 1054, n_alt = 0
   Insn 3033: point = 1056, n_alt = 0
   Insn 3032: point = 1057, n_alt = 1
   Insn 3031: point = 1058, n_alt = 0
   Insn 3030: point = 1060, n_alt = 7
   Insn 3029: point = 1062, n_alt = 4
   Insn 3028: point = 1063, n_alt = 1
   Insn 3027: point = 1064, n_alt = 0
   Insn 3026: point = 1065, n_alt = 0
   Insn 3025: point = 1066, n_alt = 1
   Insn 4502: point = 1067, n_alt = -2
   Insn 3024: point = 1069, n_alt = 0
   Insn 4501: point = 1070, n_alt = -2
   Insn 3023: point = 1072, n_alt = 2
   Insn 3022: point = 1073, n_alt = 2
   Insn 3021: point = 1074, n_alt = 2
   Insn 3020: point = 1075, n_alt = 0
   Insn 3019: point = 1075, n_alt = 0
   Insn 3018: point = 1075, n_alt = 3
   Insn 3017: point = 1075, n_alt = 2
   Insn 3016: point = 1075, n_alt = 2
   Insn 3015: point = 1075, n_alt = 4
   Insn 3014: point = 1075, n_alt = 4
   Insn 3013: point = 1075, n_alt = -2
   Insn 3012: point = 1076, n_alt = -2
   Insn 3011: point = 1077, n_alt = 0
   Insn 3010: point = 1077, n_alt = 0
   Insn 3009: point = 1077, n_alt = 3
   Insn 3008: point = 1078, n_alt = 3
  BB 338
   Insn 4398: point = 1079, n_alt = -1
  BB 213
   Insn 2964: point = 1079, n_alt = -1
   Insn 2963: point = 1079, n_alt = 0
   Insn 2962: point = 1080, n_alt = 0
   Insn 2961: point = 1082, n_alt = 0
   Insn 2960: point = 1083, n_alt = 0
  BB 217
   Insn 4254: point = 1084, n_alt = -1
   Insn 3002: point = 1084, n_alt = 1
  BB 339
   Insn 4401: point = 1085, n_alt = -1
  BB 215
   Insn 2972: point = 1086, n_alt = -1
   Insn 2971: point = 1086, n_alt = 0
   Insn 2970: point = 1087, n_alt = 0
   Insn 2969: point = 1089, n_alt = 0
   Insn 2968: point = 1090, n_alt = 0
  BB 216
   Insn 4252: point = 1091, n_alt = -1
   Insn 2996: point = 1091, n_alt = 1
   Insn 2995: point = 1091, n_alt = 8
   Insn 2994: point = 1092, n_alt = 4
   Insn 2993: point = 1093, n_alt = 0
   Insn 2992: point = 1095, n_alt = 2
   Insn 2991: point = 1096, n_alt = 3
   Insn 2990: point = 1098, n_alt = 0
   Insn 2989: point = 1100, n_alt = 1
   Insn 2988: point = 1102, n_alt = 0
   Insn 2987: point = 1103, n_alt = 0
   Insn 2986: point = 1105, n_alt = 1
   Insn 2985: point = 1107, n_alt = 0
   Insn 2984: point = 1108, n_alt = 1
   Insn 2983: point = 1110, n_alt = 7
   Insn 2982: point = 1112, n_alt = 0
   Insn 2981: point = 1114, n_alt = 4
   Insn 2980: point = 1115, n_alt = 3
   Insn 2979: point = 1117, n_alt = 0
   Insn 2978: point = 1119, n_alt = 1
   Insn 2977: point = 1121, n_alt = 0
   Insn 2976: point = 1122, n_alt = 0
   Insn 2975: point = 1124, n_alt = 1
   Insn 2974: point = 1126, n_alt = 0
  BB 214
   Insn 2966: point = 1128, n_alt = 1
  BB 212
   Insn 2958: point = 1129, n_alt = 1
   Insn 2957: point = 1130, n_alt = 0
   Insn 2956: point = 1131, n_alt = 0
  BB 210
   Insn 4250: point = 1132, n_alt = -1
   Insn 2947: point = 1132, n_alt = 8
   Insn 2946: point = 1133, n_alt = 2
   Insn 2945: point = 1135, n_alt = 7
   Insn 2944: point = 1136, n_alt = 7
   Insn 2943: point = 1138, n_alt = 4
  BB 211
   Insn 2953: point = 1139, n_alt = 8
   Insn 2952: point = 1140, n_alt = 7
  BB 209
   Insn 2938: point = 1141, n_alt = -1
   Insn 2937: point = 1141, n_alt = 1
   Insn 2936: point = 1142, n_alt = 7
   Insn 2935: point = 1143, n_alt = 7
   Insn 2934: point = 1145, n_alt = 4
  BB 208
   Insn 2932: point = 1146, n_alt = -1
   Insn 2931: point = 1146, n_alt = 0
   Insn 2930: point = 1147, n_alt = 0
  BB 207
   Insn 2927: point = 1148, n_alt = 0
   Insn 2926: point = 1148, n_alt = 3
   Insn 2925: point = 1148, n_alt = 2
   Insn 2924: point = 1148, n_alt = 2
   Insn 2923: point = 1148, n_alt = -2
   Insn 2922: point = 1149, n_alt = -2
   Insn 2921: point = 1150, n_alt = -2
   Insn 2920: point = 1151, n_alt = -2
   Insn 2919: point = 1152, n_alt = 3
   Insn 2918: point = 1153, n_alt = 3
   Insn 2917: point = 1154, n_alt = 3
   Insn 2916: point = 1155, n_alt = 3
   Insn 2915: point = 1157, n_alt = 0
   Insn 2914: point = 1159, n_alt = 0
   Insn 2913: point = 1161, n_alt = -2
   Insn 2912: point = 1163, n_alt = -2
   Insn 2911: point = 1165, n_alt = 0
   Insn 2910: point = 1167, n_alt = 0
   Insn 2909: point = 1168, n_alt = -2
   Insn 2908: point = 1170, n_alt = 0
   Insn 2907: point = 1172, n_alt = -2
   Insn 2906: point = 1173, n_alt = 3
   Insn 2905: point = 1175, n_alt = 0
   Insn 2904: point = 1177, n_alt = 0
  BB 206
   Insn 2901: point = 1178, n_alt = 1
  BB 205
   Insn 2899: point = 1178, n_alt = -1
   Insn 2898: point = 1178, n_alt = 0
   Insn 2897: point = 1179, n_alt = 0
  BB 203
   Insn 4247: point = 1180, n_alt = -1
   Insn 2887: point = 1180, n_alt = 1
   Insn 2886: point = 1181, n_alt = 1
   Insn 2885: point = 1183, n_alt = 0
  BB 204
   Insn 2894: point = 1184, n_alt = 1
   Insn 2893: point = 1185, n_alt = 1
   Insn 2892: point = 1187, n_alt = 0
  BB 202
   Insn 2883: point = 1188, n_alt = -1
   Insn 2882: point = 1188, n_alt = 1
   Insn 2881: point = 1188, n_alt = 1
   Insn 2880: point = 1188, n_alt = 1
   Insn 2879: point = 1189, n_alt = 0
   Insn 2878: point = 1190, n_alt = 1
   Insn 2877: point = 1191, n_alt = 0
   Insn 2876: point = 1193, n_alt = 0
   Insn 2875: point = 1194, n_alt = 1
   Insn 2874: point = 1195, n_alt = 0
   Insn 2873: point = 1197, n_alt = 7
   Insn 2872: point = 1199, n_alt = 4
   Insn 2871: point = 1200, n_alt = 1
   Insn 2870: point = 1201, n_alt = 0
   Insn 2869: point = 1202, n_alt = 0
   Insn 2868: point = 1203, n_alt = 1
   Insn 4500: point = 1204, n_alt = -2
   Insn 2867: point = 1206, n_alt = 0
   Insn 4499: point = 1207, n_alt = -2
   Insn 2866: point = 1209, n_alt = 2
   Insn 2865: point = 1210, n_alt = 2
   Insn 2864: point = 1211, n_alt = 2
   Insn 2863: point = 1212, n_alt = 0
   Insn 2862: point = 1212, n_alt = 0
   Insn 2861: point = 1212, n_alt = 3
   Insn 2860: point = 1212, n_alt = 2
   Insn 2859: point = 1212, n_alt = 2
   Insn 2858: point = 1212, n_alt = 4
   Insn 2857: point = 1212, n_alt = 4
   Insn 2856: point = 1212, n_alt = -2
   Insn 2855: point = 1213, n_alt = -2
   Insn 2854: point = 1214, n_alt = 0
   Insn 2853: point = 1214, n_alt = 0
   Insn 2852: point = 1214, n_alt = 3
   Insn 2851: point = 1215, n_alt = 3
  BB 336
   Insn 4392: point = 1216, n_alt = -1
  BB 197
   Insn 2809: point = 1216, n_alt = -1
   Insn 2808: point = 1216, n_alt = 0
   Insn 2807: point = 1217, n_alt = 0
   Insn 2806: point = 1219, n_alt = 0
   Insn 2805: point = 1220, n_alt = 0
  BB 201
   Insn 4245: point = 1221, n_alt = -1
   Insn 2845: point = 1221, n_alt = 1
  BB 337
   Insn 4395: point = 1222, n_alt = -1
  BB 199
   Insn 2817: point = 1223, n_alt = -1
   Insn 2816: point = 1223, n_alt = 0
   Insn 2815: point = 1224, n_alt = 0
   Insn 2814: point = 1226, n_alt = 0
   Insn 2813: point = 1227, n_alt = 0
  BB 200
   Insn 4243: point = 1228, n_alt = -1
   Insn 2839: point = 1228, n_alt = 1
   Insn 2838: point = 1228, n_alt = 8
   Insn 2837: point = 1229, n_alt = 4
   Insn 2836: point = 1230, n_alt = 1
   Insn 2835: point = 1232, n_alt = 3
   Insn 2834: point = 1234, n_alt = 0
   Insn 2833: point = 1236, n_alt = 1
   Insn 2832: point = 1238, n_alt = 0
   Insn 2831: point = 1239, n_alt = 0
   Insn 2830: point = 1241, n_alt = 1
   Insn 2829: point = 1243, n_alt = 0
   Insn 2828: point = 1244, n_alt = 7
   Insn 2827: point = 1246, n_alt = 0
   Insn 2826: point = 1248, n_alt = 4
   Insn 2825: point = 1249, n_alt = 3
   Insn 2824: point = 1251, n_alt = 0
   Insn 2823: point = 1253, n_alt = 1
   Insn 2822: point = 1255, n_alt = 0
   Insn 2821: point = 1256, n_alt = 0
   Insn 2820: point = 1258, n_alt = 1
   Insn 2819: point = 1260, n_alt = 0
  BB 198
   Insn 2811: point = 1262, n_alt = 1
  BB 196
   Insn 2803: point = 1263, n_alt = 1
   Insn 2802: point = 1264, n_alt = 0
   Insn 2801: point = 1265, n_alt = 0
  BB 194
   Insn 4241: point = 1266, n_alt = -1
   Insn 2792: point = 1266, n_alt = 8
   Insn 2791: point = 1267, n_alt = 2
   Insn 2790: point = 1269, n_alt = 7
   Insn 2789: point = 1270, n_alt = 7
   Insn 2788: point = 1272, n_alt = 4
  BB 195
   Insn 2798: point = 1273, n_alt = 8
   Insn 2797: point = 1274, n_alt = 7
  BB 193
   Insn 2783: point = 1275, n_alt = -1
   Insn 2782: point = 1275, n_alt = 1
   Insn 2781: point = 1276, n_alt = 7
   Insn 2780: point = 1277, n_alt = 7
   Insn 2779: point = 1279, n_alt = 4
  BB 192
   Insn 2777: point = 1280, n_alt = -1
   Insn 2776: point = 1280, n_alt = 0
   Insn 2775: point = 1281, n_alt = 0
  BB 191
   Insn 2772: point = 1282, n_alt = 0
   Insn 2771: point = 1282, n_alt = 3
   Insn 2770: point = 1282, n_alt = 2
   Insn 2769: point = 1282, n_alt = 2
   Insn 2768: point = 1282, n_alt = -2
   Insn 2767: point = 1283, n_alt = -2
   Insn 2766: point = 1284, n_alt = -2
   Insn 2765: point = 1285, n_alt = -2
   Insn 2764: point = 1286, n_alt = 3
   Insn 2763: point = 1287, n_alt = 3
   Insn 2762: point = 1288, n_alt = 3
   Insn 2761: point = 1289, n_alt = 3
   Insn 2760: point = 1291, n_alt = 0
   Insn 2759: point = 1293, n_alt = 0
   Insn 2758: point = 1295, n_alt = -2
   Insn 2757: point = 1297, n_alt = -2
   Insn 2756: point = 1299, n_alt = 0
   Insn 2755: point = 1301, n_alt = 0
   Insn 2754: point = 1302, n_alt = -2
   Insn 2753: point = 1304, n_alt = 0
   Insn 2752: point = 1306, n_alt = -2
   Insn 2751: point = 1307, n_alt = 3
   Insn 2750: point = 1309, n_alt = 0
   Insn 2749: point = 1311, n_alt = 0
  BB 190
   Insn 2746: point = 1312, n_alt = 1
  BB 189
   Insn 2744: point = 1312, n_alt = -1
   Insn 2743: point = 1312, n_alt = 0
   Insn 2742: point = 1313, n_alt = 0
  BB 187
   Insn 4238: point = 1314, n_alt = -1
   Insn 2732: point = 1314, n_alt = 1
   Insn 2731: point = 1315, n_alt = 1
   Insn 2730: point = 1317, n_alt = 0
  BB 188
   Insn 2739: point = 1318, n_alt = 1
   Insn 2738: point = 1319, n_alt = 1
   Insn 2737: point = 1321, n_alt = 0
  BB 186
   Insn 2728: point = 1322, n_alt = -1
   Insn 2727: point = 1322, n_alt = 1
   Insn 2726: point = 1322, n_alt = 1
   Insn 2725: point = 1322, n_alt = 1
   Insn 2724: point = 1323, n_alt = 0
   Insn 2723: point = 1324, n_alt = 1
   Insn 2722: point = 1325, n_alt = 0
   Insn 2721: point = 1327, n_alt = 0
   Insn 2720: point = 1328, n_alt = 1
   Insn 2719: point = 1329, n_alt = 0
   Insn 2718: point = 1331, n_alt = 7
   Insn 2717: point = 1333, n_alt = 4
   Insn 2716: point = 1334, n_alt = 1
   Insn 2715: point = 1335, n_alt = 0
   Insn 2714: point = 1336, n_alt = 0
   Insn 2713: point = 1337, n_alt = 1
   Insn 4498: point = 1338, n_alt = -2
   Insn 2712: point = 1340, n_alt = 0
   Insn 4497: point = 1341, n_alt = -2
   Insn 2711: point = 1343, n_alt = 2
   Insn 2710: point = 1344, n_alt = 2
   Insn 2709: point = 1345, n_alt = 2
   Insn 2708: point = 1346, n_alt = 0
   Insn 2707: point = 1346, n_alt = 0
   Insn 2706: point = 1346, n_alt = 3
   Insn 2705: point = 1346, n_alt = 2
   Insn 2704: point = 1346, n_alt = 2
   Insn 2703: point = 1346, n_alt = 4
   Insn 2702: point = 1346, n_alt = 4
   Insn 2701: point = 1346, n_alt = -2
   Insn 2700: point = 1347, n_alt = -2
   Insn 2699: point = 1348, n_alt = 0
   Insn 2698: point = 1348, n_alt = 0
   Insn 2697: point = 1348, n_alt = 3
   Insn 2696: point = 1349, n_alt = 3
  BB 334
   Insn 4386: point = 1350, n_alt = -1
  BB 181
   Insn 2654: point = 1350, n_alt = -1
   Insn 2653: point = 1350, n_alt = 0
   Insn 2652: point = 1351, n_alt = 0
   Insn 2651: point = 1353, n_alt = 0
   Insn 2650: point = 1354, n_alt = 0
  BB 185
   Insn 4236: point = 1355, n_alt = -1
   Insn 2690: point = 1355, n_alt = 1
  BB 335
   Insn 4389: point = 1356, n_alt = -1
  BB 183
   Insn 2662: point = 1357, n_alt = -1
   Insn 2661: point = 1357, n_alt = 0
   Insn 2660: point = 1358, n_alt = 0
   Insn 2659: point = 1360, n_alt = 0
   Insn 2658: point = 1361, n_alt = 0
  BB 184
   Insn 4234: point = 1362, n_alt = -1
   Insn 2684: point = 1362, n_alt = 1
   Insn 2683: point = 1362, n_alt = 8
   Insn 2682: point = 1363, n_alt = 4
   Insn 2681: point = 1364, n_alt = 1
   Insn 2680: point = 1366, n_alt = 3
   Insn 2679: point = 1368, n_alt = 0
   Insn 2678: point = 1370, n_alt = 1
   Insn 2677: point = 1372, n_alt = 0
   Insn 2676: point = 1373, n_alt = 0
   Insn 2675: point = 1375, n_alt = 1
   Insn 2674: point = 1377, n_alt = 0
   Insn 2673: point = 1378, n_alt = 7
   Insn 2672: point = 1380, n_alt = 0
   Insn 2671: point = 1382, n_alt = 4
   Insn 2670: point = 1383, n_alt = 3
   Insn 2669: point = 1385, n_alt = 0
   Insn 2668: point = 1387, n_alt = 1
   Insn 2667: point = 1389, n_alt = 0
   Insn 2666: point = 1390, n_alt = 0
   Insn 2665: point = 1392, n_alt = 1
   Insn 2664: point = 1394, n_alt = 0
  BB 182
   Insn 2656: point = 1396, n_alt = 1
  BB 180
   Insn 2648: point = 1397, n_alt = 1
   Insn 2647: point = 1398, n_alt = 0
   Insn 2646: point = 1399, n_alt = 0
  BB 178
   Insn 4232: point = 1400, n_alt = -1
   Insn 2637: point = 1400, n_alt = 8
   Insn 2636: point = 1401, n_alt = 2
   Insn 2635: point = 1403, n_alt = 7
   Insn 2634: point = 1404, n_alt = 7
   Insn 2633: point = 1406, n_alt = 4
  BB 179
   Insn 2643: point = 1407, n_alt = 8
   Insn 2642: point = 1408, n_alt = 7
  BB 177
   Insn 2628: point = 1409, n_alt = -1
   Insn 2627: point = 1409, n_alt = 1
   Insn 2626: point = 1410, n_alt = 7
   Insn 2625: point = 1411, n_alt = 7
   Insn 2624: point = 1413, n_alt = 4
  BB 176
   Insn 2622: point = 1414, n_alt = -1
   Insn 2621: point = 1414, n_alt = 0
   Insn 2620: point = 1415, n_alt = 0
  BB 175
   Insn 2617: point = 1416, n_alt = 0
   Insn 2616: point = 1416, n_alt = 3
   Insn 2615: point = 1416, n_alt = 2
   Insn 2614: point = 1416, n_alt = 2
   Insn 2613: point = 1416, n_alt = -2
   Insn 2612: point = 1417, n_alt = -2
   Insn 2611: point = 1418, n_alt = -2
   Insn 2610: point = 1419, n_alt = -2
   Insn 2609: point = 1420, n_alt = 3
   Insn 2608: point = 1421, n_alt = 3
   Insn 2607: point = 1422, n_alt = 3
   Insn 2606: point = 1423, n_alt = 3
   Insn 2605: point = 1425, n_alt = 0
   Insn 2604: point = 1427, n_alt = 0
   Insn 2603: point = 1429, n_alt = -2
   Insn 2602: point = 1431, n_alt = -2
   Insn 2601: point = 1433, n_alt = 0
   Insn 2600: point = 1435, n_alt = 0
   Insn 2599: point = 1436, n_alt = -2
   Insn 2598: point = 1438, n_alt = 0
   Insn 2597: point = 1440, n_alt = -2
   Insn 2596: point = 1441, n_alt = 3
   Insn 2595: point = 1443, n_alt = 0
   Insn 2594: point = 1445, n_alt = 0
   Insn 2593: point = 1446, n_alt = 0
   Insn 2592: point = 1447, n_alt = 1
   Insn 4496: point = 1448, n_alt = -2
   Insn 2591: point = 1450, n_alt = 0
   Insn 4495: point = 1451, n_alt = -2
   Insn 2590: point = 1453, n_alt = 2
   Insn 2589: point = 1454, n_alt = 2
   Insn 2588: point = 1455, n_alt = 2
   Insn 2587: point = 1456, n_alt = 0
   Insn 2586: point = 1456, n_alt = 0
   Insn 2585: point = 1456, n_alt = 3
   Insn 2584: point = 1456, n_alt = 2
   Insn 2583: point = 1456, n_alt = 2
   Insn 2582: point = 1456, n_alt = 4
   Insn 2581: point = 1456, n_alt = 4
   Insn 2580: point = 1456, n_alt = -2
   Insn 2579: point = 1457, n_alt = -2
   Insn 2578: point = 1458, n_alt = 0
   Insn 2577: point = 1458, n_alt = 0
   Insn 2576: point = 1458, n_alt = 3
   Insn 2575: point = 1459, n_alt = 3
  BB 174
   Insn 2573: point = 1460, n_alt = -1
   Insn 2572: point = 1460, n_alt = 0
   Insn 2571: point = 1461, n_alt = 0
  BB 173
   Insn 2568: point = 1462, n_alt = 0
   Insn 2567: point = 1462, n_alt = 3
   Insn 2566: point = 1462, n_alt = 2
   Insn 2565: point = 1462, n_alt = 2
   Insn 2564: point = 1462, n_alt = -2
   Insn 2563: point = 1463, n_alt = -2
   Insn 2562: point = 1464, n_alt = -2
   Insn 2561: point = 1465, n_alt = -2
   Insn 2560: point = 1466, n_alt = 3
   Insn 2559: point = 1467, n_alt = 3
   Insn 2558: point = 1468, n_alt = 3
   Insn 2557: point = 1469, n_alt = 3
   Insn 2556: point = 1471, n_alt = 0
   Insn 2555: point = 1473, n_alt = 0
   Insn 2554: point = 1475, n_alt = -2
   Insn 2553: point = 1477, n_alt = -2
   Insn 2552: point = 1479, n_alt = 0
   Insn 2551: point = 1481, n_alt = 0
   Insn 2550: point = 1482, n_alt = -2
   Insn 2549: point = 1484, n_alt = 0
   Insn 2548: point = 1486, n_alt = -2
   Insn 2547: point = 1487, n_alt = 3
   Insn 2546: point = 1489, n_alt = 0
   Insn 2545: point = 1491, n_alt = 0
   Insn 2544: point = 1492, n_alt = 0
   Insn 2543: point = 1493, n_alt = 1
   Insn 4494: point = 1494, n_alt = -2
   Insn 2542: point = 1496, n_alt = 0
   Insn 4493: point = 1497, n_alt = -2
   Insn 2541: point = 1499, n_alt = 2
   Insn 2540: point = 1500, n_alt = 2
   Insn 2539: point = 1501, n_alt = 2
   Insn 2538: point = 1502, n_alt = 0
   Insn 2537: point = 1502, n_alt = 0
   Insn 2536: point = 1502, n_alt = 3
   Insn 2535: point = 1502, n_alt = 2
   Insn 2534: point = 1502, n_alt = 2
   Insn 2533: point = 1502, n_alt = 4
   Insn 2532: point = 1502, n_alt = 4
   Insn 2531: point = 1502, n_alt = -2
   Insn 2530: point = 1503, n_alt = -2
   Insn 2529: point = 1504, n_alt = 0
   Insn 2528: point = 1504, n_alt = 0
   Insn 2527: point = 1504, n_alt = 3
   Insn 2526: point = 1505, n_alt = 3
  BB 172
   Insn 2524: point = 1506, n_alt = -1
   Insn 2523: point = 1506, n_alt = 0
   Insn 2522: point = 1507, n_alt = 0
  BB 171
   Insn 2519: point = 1508, n_alt = 0
   Insn 2518: point = 1508, n_alt = 3
   Insn 2517: point = 1508, n_alt = 2
   Insn 2516: point = 1508, n_alt = 2
   Insn 2515: point = 1508, n_alt = -2
   Insn 2514: point = 1509, n_alt = -2
   Insn 2513: point = 1510, n_alt = -2
   Insn 2512: point = 1511, n_alt = -2
   Insn 2511: point = 1512, n_alt = 3
   Insn 2510: point = 1513, n_alt = 3
   Insn 2509: point = 1514, n_alt = 3
   Insn 2508: point = 1515, n_alt = 3
   Insn 2507: point = 1517, n_alt = 0
   Insn 2506: point = 1519, n_alt = 0
   Insn 2505: point = 1521, n_alt = -2
   Insn 2504: point = 1523, n_alt = -2
   Insn 2503: point = 1525, n_alt = 0
   Insn 2502: point = 1527, n_alt = 0
   Insn 2501: point = 1528, n_alt = -2
   Insn 2500: point = 1530, n_alt = 0
   Insn 2499: point = 1532, n_alt = -2
   Insn 2498: point = 1533, n_alt = 3
   Insn 2497: point = 1535, n_alt = 0
   Insn 2496: point = 1537, n_alt = 0
   Insn 2495: point = 1538, n_alt = 0
   Insn 2494: point = 1539, n_alt = 1
   Insn 4492: point = 1540, n_alt = -2
   Insn 2493: point = 1542, n_alt = 0
   Insn 4491: point = 1543, n_alt = -2
   Insn 2492: point = 1545, n_alt = 2
   Insn 2491: point = 1546, n_alt = 2
   Insn 2490: point = 1547, n_alt = 2
   Insn 2489: point = 1548, n_alt = 0
   Insn 2488: point = 1548, n_alt = 0
   Insn 2487: point = 1548, n_alt = 3
   Insn 2486: point = 1548, n_alt = 2
   Insn 2485: point = 1548, n_alt = 2
   Insn 2484: point = 1548, n_alt = 4
   Insn 2483: point = 1548, n_alt = 4
   Insn 2482: point = 1548, n_alt = -2
   Insn 2481: point = 1549, n_alt = -2
   Insn 2480: point = 1550, n_alt = 0
   Insn 2479: point = 1550, n_alt = 0
   Insn 2478: point = 1550, n_alt = 3
   Insn 2477: point = 1551, n_alt = 3
  BB 170
   Insn 2475: point = 1552, n_alt = -1
   Insn 2474: point = 1552, n_alt = 0
   Insn 2473: point = 1553, n_alt = 0
  BB 331
   Insn 4377: point = 1554, n_alt = -1
  BB 150
   Insn 2036: point = 1554, n_alt = -1
   Insn 2035: point = 1554, n_alt = 0
   Insn 2034: point = 1555, n_alt = 0
   Insn 2033: point = 1557, n_alt = 0
   Insn 2032: point = 1558, n_alt = 0
  BB 169
   Insn 4229: point = 1559, n_alt = -1
   Insn 2467: point = 1559, n_alt = 1
  BB 332
   Insn 4380: point = 1560, n_alt = -1
  BB 152
   Insn 2044: point = 1561, n_alt = -1
   Insn 2043: point = 1561, n_alt = 0
   Insn 2042: point = 1562, n_alt = 0
   Insn 2041: point = 1564, n_alt = 0
   Insn 2040: point = 1565, n_alt = 0
  BB 168
   Insn 4227: point = 1566, n_alt = -1
   Insn 2461: point = 1566, n_alt = 1
  BB 166
   Insn 4225: point = 1567, n_alt = -1
   Insn 2288: point = 1567, n_alt = 8
   Insn 2287: point = 1568, n_alt = 4
   Insn 2286: point = 1569, n_alt = 7
   Insn 2285: point = 1571, n_alt = 0
   Insn 2284: point = 1573, n_alt = 4
   Insn 2283: point = 1574, n_alt = 3
   Insn 2282: point = 1576, n_alt = 0
   Insn 2281: point = 1578, n_alt = 0
   Insn 2280: point = 1580, n_alt = 0
   Insn 2279: point = 1581, n_alt = 0
   Insn 2278: point = 1583, n_alt = 0
   Insn 2277: point = 1585, n_alt = 0
   Insn 2276: point = 1586, n_alt = 3
   Insn 2275: point = 1588, n_alt = 0
   Insn 2274: point = 1590, n_alt = 0
   Insn 2273: point = 1592, n_alt = 0
   Insn 2272: point = 1593, n_alt = 0
   Insn 2271: point = 1595, n_alt = 0
   Insn 2270: point = 1597, n_alt = 0
   Insn 2269: point = 1598, n_alt = 8
   Insn 2268: point = 1599, n_alt = 4
   Insn 2267: point = 1600, n_alt = 7
   Insn 2266: point = 1602, n_alt = 0
   Insn 2265: point = 1604, n_alt = 4
   Insn 2264: point = 1605, n_alt = 3
   Insn 2263: point = 1607, n_alt = 0
   Insn 2262: point = 1609, n_alt = 0
   Insn 2261: point = 1611, n_alt = 0
   Insn 2260: point = 1612, n_alt = 0
   Insn 2259: point = 1614, n_alt = 0
   Insn 2258: point = 1616, n_alt = 0
   Insn 2257: point = 1617, n_alt = 3
   Insn 2256: point = 1619, n_alt = 0
   Insn 2255: point = 1621, n_alt = 0
   Insn 2254: point = 1623, n_alt = 0
   Insn 2253: point = 1624, n_alt = 0
   Insn 2252: point = 1626, n_alt = 0
   Insn 2251: point = 1628, n_alt = 0
   Insn 2250: point = 1629, n_alt = 8
   Insn 2249: point = 1630, n_alt = 4
   Insn 2248: point = 1631, n_alt = 1
   Insn 2247: point = 1633, n_alt = 3
   Insn 2246: point = 1635, n_alt = 0
   Insn 2245: point = 1637, n_alt = 0
   Insn 2244: point = 1639, n_alt = 0
   Insn 2243: point = 1640, n_alt = 0
   Insn 2242: point = 1642, n_alt = 0
   Insn 2241: point = 1644, n_alt = 0
   Insn 2240: point = 1645, n_alt = 7
   Insn 2239: point = 1647, n_alt = 4
   Insn 2238: point = 1648, n_alt = 1
   Insn 2237: point = 1650, n_alt = 7
   Insn 2236: point = 1652, n_alt = 0
   Insn 2235: point = 1654, n_alt = 4
   Insn 2234: point = 1655, n_alt = 3
   Insn 2233: point = 1657, n_alt = 0
   Insn 2232: point = 1659, n_alt = 0
   Insn 2231: point = 1661, n_alt = 0
   Insn 2230: point = 1662, n_alt = 0
   Insn 2229: point = 1664, n_alt = 0
   Insn 2228: point = 1666, n_alt = 0
   Insn 2227: point = 1667, n_alt = 7
   Insn 2226: point = 1669, n_alt = 4
  BB 163
   Insn 4223: point = 1671, n_alt = -1
   Insn 2211: point = 1671, n_alt = 8
   Insn 2210: point = 1672, n_alt = 4
   Insn 2209: point = 1673, n_alt = 7
   Insn 2208: point = 1675, n_alt = 0
   Insn 2207: point = 1677, n_alt = 4
   Insn 2206: point = 1678, n_alt = 3
   Insn 2205: point = 1680, n_alt = 0
   Insn 2204: point = 1682, n_alt = 0
   Insn 2203: point = 1684, n_alt = 0
   Insn 2202: point = 1685, n_alt = 0
   Insn 2201: point = 1687, n_alt = 0
   Insn 2200: point = 1689, n_alt = 0
   Insn 2199: point = 1690, n_alt = 3
   Insn 2198: point = 1692, n_alt = 0
   Insn 2197: point = 1694, n_alt = 0
   Insn 2196: point = 1696, n_alt = 0
   Insn 2195: point = 1697, n_alt = 0
   Insn 2194: point = 1699, n_alt = 0
   Insn 2193: point = 1701, n_alt = 0
   Insn 2192: point = 1703, n_alt = 0
   Insn 2191: point = 1704, n_alt = 1
   Insn 2190: point = 1706, n_alt = 0
   Insn 2189: point = 1708, n_alt = 0
   Insn 2188: point = 1709, n_alt = 1
   Insn 2187: point = 1710, n_alt = 0
   Insn 2186: point = 1712, n_alt = 0
   Insn 2185: point = 1714, n_alt = 4
   Insn 2184: point = 1715, n_alt = 3
   Insn 2183: point = 1717, n_alt = 0
   Insn 2182: point = 1719, n_alt = 0
   Insn 2181: point = 1721, n_alt = 0
   Insn 2180: point = 1722, n_alt = 0
   Insn 2179: point = 1724, n_alt = 0
   Insn 2178: point = 1726, n_alt = 0
   Insn 2177: point = 1727, n_alt = 8
   Insn 2176: point = 1728, n_alt = 4
   Insn 2175: point = 1729, n_alt = 7
   Insn 2174: point = 1730, n_alt = 3
   Insn 2173: point = 1732, n_alt = 0
   Insn 2172: point = 1734, n_alt = 0
   Insn 2171: point = 1736, n_alt = 0
   Insn 2170: point = 1737, n_alt = 0
   Insn 2169: point = 1739, n_alt = 0
   Insn 2168: point = 1741, n_alt = 0
   Insn 2167: point = 1742, n_alt = 8
   Insn 2166: point = 1743, n_alt = 4
   Insn 2165: point = 1744, n_alt = 7
   Insn 2164: point = 1745, n_alt = 3
   Insn 2163: point = 1747, n_alt = 0
   Insn 2162: point = 1749, n_alt = 0
   Insn 2161: point = 1751, n_alt = 0
   Insn 2160: point = 1752, n_alt = 0
   Insn 2159: point = 1754, n_alt = 0
   Insn 2158: point = 1756, n_alt = 0
  BB 167
   Insn 2458: point = 1758, n_alt = 8
   Insn 2457: point = 1759, n_alt = 4
   Insn 2456: point = 1760, n_alt = 7
   Insn 2455: point = 1762, n_alt = 0
   Insn 2454: point = 1764, n_alt = 4
   Insn 2453: point = 1765, n_alt = 3
   Insn 2452: point = 1767, n_alt = 0
   Insn 2451: point = 1769, n_alt = 0
   Insn 2450: point = 1771, n_alt = 0
   Insn 2449: point = 1772, n_alt = 0
   Insn 2448: point = 1774, n_alt = 0
   Insn 2447: point = 1776, n_alt = 0
   Insn 2446: point = 1777, n_alt = 3
   Insn 2445: point = 1779, n_alt = 0
   Insn 2444: point = 1781, n_alt = 0
   Insn 2443: point = 1783, n_alt = 0
   Insn 2442: point = 1784, n_alt = 0
   Insn 2441: point = 1786, n_alt = 0
   Insn 2440: point = 1788, n_alt = 0
   Insn 2439: point = 1790, n_alt = 0
   Insn 2438: point = 1791, n_alt = 1
   Insn 2437: point = 1793, n_alt = 0
   Insn 2436: point = 1795, n_alt = 0
   Insn 2435: point = 1796, n_alt = 8
   Insn 2434: point = 1797, n_alt = 4
   Insn 2433: point = 1798, n_alt = 1
   Insn 2432: point = 1800, n_alt = 3
   Insn 2431: point = 1802, n_alt = 0
   Insn 2430: point = 1804, n_alt = 0
   Insn 2429: point = 1806, n_alt = 0
   Insn 2428: point = 1807, n_alt = 0
   Insn 2427: point = 1809, n_alt = 0
   Insn 2426: point = 1811, n_alt = 0
   Insn 2425: point = 1812, n_alt = 7
   Insn 2424: point = 1814, n_alt = 0
   Insn 2423: point = 1816, n_alt = 4
   Insn 2422: point = 1817, n_alt = 3
   Insn 2421: point = 1819, n_alt = 0
   Insn 2420: point = 1821, n_alt = 0
   Insn 2419: point = 1823, n_alt = 0
   Insn 2418: point = 1824, n_alt = 0
   Insn 2417: point = 1826, n_alt = 0
   Insn 2416: point = 1828, n_alt = 0
   Insn 2415: point = 1830, n_alt = 0
   Insn 2414: point = 1831, n_alt = 1
   Insn 2413: point = 1833, n_alt = 0
   Insn 2412: point = 1835, n_alt = 0
   Insn 2411: point = 1837, n_alt = 0
   Insn 4490: point = 1838, n_alt = -2
   Insn 2410: point = 1840, n_alt = 1
   Insn 4489: point = 1841, n_alt = 7
   Insn 2409: point = 1843, n_alt = -2
   Insn 4488: point = 1845, n_alt = -2
   Insn 2408: point = 1847, n_alt = 2
   Insn 4487: point = 1848, n_alt = 7
   Insn 2407: point = 1850, n_alt = -2
   Insn 2406: point = 1851, n_alt = 0
   Insn 2405: point = 1851, n_alt = -2
   Insn 2404: point = 1852, n_alt = 7
   Insn 2403: point = 1854, n_alt = 4
   Insn 2402: point = 1855, n_alt = 3
   Insn 2401: point = 1857, n_alt = 0
   Insn 2400: point = 1859, n_alt = 0
   Insn 2399: point = 1861, n_alt = 0
   Insn 2398: point = 1862, n_alt = 0
   Insn 2397: point = 1864, n_alt = 0
   Insn 2396: point = 1866, n_alt = 0
   Insn 2395: point = 1867, n_alt = 8
   Insn 2394: point = 1868, n_alt = 0
   Insn 2393: point = 1868, n_alt = -2
   Insn 2392: point = 1869, n_alt = 7
   Insn 2391: point = 1871, n_alt = 4
   Insn 2390: point = 1872, n_alt = 3
   Insn 2389: point = 1874, n_alt = 0
   Insn 2388: point = 1876, n_alt = 0
   Insn 2387: point = 1878, n_alt = 0
   Insn 2386: point = 1879, n_alt = 0
   Insn 2385: point = 1881, n_alt = 0
   Insn 2384: point = 1883, n_alt = 0
   Insn 2383: point = 1885, n_alt = 0
   Insn 2382: point = 1886, n_alt = 1
   Insn 2381: point = 1888, n_alt = 0
   Insn 2380: point = 1890, n_alt = 0
   Insn 2379: point = 1892, n_alt = 0
   Insn 4486: point = 1893, n_alt = 8
   Insn 2378: point = 1895, n_alt = 1
   Insn 4485: point = 1896, n_alt = -2
   Insn 2377: point = 1898, n_alt = 7
   Insn 2376: point = 1899, n_alt = 1
   Insn 2375: point = 1901, n_alt = -2
   Insn 2374: point = 1903, n_alt = 1
   Insn 2373: point = 1905, n_alt = 7
   Insn 2372: point = 1906, n_alt = 1
   Insn 2371: point = 1908, n_alt = 7
   Insn 2370: point = 1909, n_alt = 7
   Insn 2369: point = 1911, n_alt = 0
   Insn 2368: point = 1913, n_alt = 4
   Insn 2367: point = 1914, n_alt = 3
   Insn 2366: point = 1916, n_alt = 0
   Insn 2365: point = 1918, n_alt = 0
   Insn 2364: point = 1920, n_alt = 0
   Insn 2363: point = 1921, n_alt = 0
   Insn 2362: point = 1923, n_alt = 0
   Insn 2361: point = 1925, n_alt = 0
   Insn 2360: point = 1927, n_alt = 0
   Insn 2359: point = 1928, n_alt = 1
   Insn 2358: point = 1930, n_alt = 0
   Insn 2357: point = 1932, n_alt = 0
   Insn 2356: point = 1934, n_alt = 0
   Insn 2355: point = 1935, n_alt = 1
   Insn 2354: point = 1937, n_alt = 7
   Insn 2353: point = 1939, n_alt = 0
   Insn 2352: point = 1941, n_alt = 4
   Insn 2351: point = 1942, n_alt = 3
   Insn 2350: point = 1944, n_alt = 0
   Insn 2349: point = 1946, n_alt = 0
   Insn 2348: point = 1948, n_alt = 0
   Insn 2347: point = 1949, n_alt = 0
   Insn 2346: point = 1951, n_alt = 0
   Insn 2345: point = 1953, n_alt = 0
   Insn 2344: point = 1955, n_alt = 0
   Insn 2343: point = 1956, n_alt = 1
   Insn 2342: point = 1958, n_alt = 0
   Insn 2341: point = 1960, n_alt = 0
   Insn 2340: point = 1962, n_alt = 0
   Insn 2339: point = 1963, n_alt = 7
   Insn 2338: point = 1965, n_alt = 0
   Insn 2337: point = 1967, n_alt = 4
   Insn 2336: point = 1968, n_alt = 3
   Insn 2335: point = 1970, n_alt = 0
   Insn 2334: point = 1972, n_alt = 0
   Insn 2333: point = 1974, n_alt = 0
   Insn 2332: point = 1975, n_alt = 0
   Insn 2331: point = 1977, n_alt = 0
   Insn 2330: point = 1979, n_alt = 0
   Insn 2329: point = 1981, n_alt = 0
   Insn 2328: point = 1982, n_alt = 1
   Insn 2327: point = 1984, n_alt = 0
   Insn 2326: point = 1986, n_alt = 0
   Insn 2325: point = 1988, n_alt = 0
   Insn 2324: point = 1989, n_alt = 8
   Insn 2323: point = 1990, n_alt = 4
   Insn 2322: point = 1991, n_alt = 1
   Insn 2321: point = 1993, n_alt = 3
   Insn 2320: point = 1995, n_alt = 0
   Insn 2319: point = 1997, n_alt = 0
   Insn 2318: point = 1999, n_alt = 0
   Insn 2317: point = 2000, n_alt = 0
   Insn 2316: point = 2002, n_alt = 0
   Insn 2315: point = 2004, n_alt = 0
   Insn 2314: point = 2005, n_alt = 7
   Insn 2313: point = 2007, n_alt = 4
   Insn 2312: point = 2008, n_alt = 1
   Insn 2311: point = 2010, n_alt = 7
   Insn 2310: point = 2012, n_alt = 0
   Insn 2309: point = 2014, n_alt = 4
   Insn 2308: point = 2015, n_alt = 3
   Insn 2307: point = 2017, n_alt = 0
   Insn 2306: point = 2019, n_alt = 0
   Insn 2305: point = 2021, n_alt = 0
   Insn 2304: point = 2022, n_alt = 0
   Insn 2303: point = 2024, n_alt = 0
   Insn 2302: point = 2026, n_alt = 0
   Insn 2301: point = 2027, n_alt = 7
   Insn 2300: point = 2029, n_alt = 0
   Insn 2299: point = 2031, n_alt = 4
   Insn 2298: point = 2032, n_alt = 3
   Insn 2297: point = 2034, n_alt = 0
   Insn 2296: point = 2036, n_alt = 0
   Insn 2295: point = 2037, n_alt = 1
   Insn 2294: point = 2038, n_alt = 0
   Insn 2293: point = 2040, n_alt = 7
  BB 165
   Insn 2221: point = 2042, n_alt = -1
   Insn 2220: point = 2042, n_alt = 1
   Insn 2219: point = 2043, n_alt = 7
  BB 164
   Insn 2218: point = 2045, n_alt = -1
   Insn 2217: point = 2045, n_alt = 1
   Insn 2216: point = 2046, n_alt = 7
  BB 162
   Insn 2153: point = 2048, n_alt = -1
   Insn 2152: point = 2048, n_alt = 1
   Insn 2151: point = 2049, n_alt = 7
  BB 161
   Insn 2150: point = 2051, n_alt = -1
   Insn 2149: point = 2051, n_alt = 1
   Insn 2148: point = 2052, n_alt = 7
  BB 333
   Insn 4383: point = 2054, n_alt = -1
  BB 154
   Insn 2066: point = 2055, n_alt = -1
   Insn 2065: point = 2055, n_alt = 0
   Insn 2064: point = 2056, n_alt = 0
   Insn 2063: point = 2058, n_alt = 0
   Insn 2062: point = 2059, n_alt = 0
  BB 160
   Insn 4221: point = 2060, n_alt = -1
   Insn 2142: point = 2060, n_alt = 1
  BB 159
   Insn 2139: point = 2061, n_alt = 1
   Insn 2138: point = 2062, n_alt = 4
   Insn 2137: point = 2063, n_alt = 3
   Insn 2136: point = 2065, n_alt = 0
   Insn 2135: point = 2067, n_alt = 1
   Insn 2134: point = 2069, n_alt = 0
   Insn 2133: point = 2070, n_alt = 0
   Insn 2132: point = 2072, n_alt = 1
   Insn 2131: point = 2074, n_alt = 0
  BB 158
   Insn 2128: point = 2076, n_alt = 8
   Insn 2127: point = 2077, n_alt = 7
   Insn 2126: point = 2079, n_alt = 0
   Insn 2125: point = 2081, n_alt = 4
   Insn 2124: point = 2082, n_alt = 3
   Insn 2123: point = 2084, n_alt = 0
   Insn 2122: point = 2086, n_alt = 1
   Insn 2121: point = 2088, n_alt = 0
   Insn 2120: point = 2089, n_alt = 0
   Insn 2119: point = 2091, n_alt = 1
   Insn 2118: point = 2093, n_alt = 0
  BB 157
   Insn 2113: point = 2095, n_alt = -1
   Insn 2112: point = 2095, n_alt = 1
   Insn 2111: point = 2096, n_alt = 7
   Insn 2110: point = 2097, n_alt = 7
   Insn 2109: point = 2099, n_alt = 0
   Insn 2108: point = 2101, n_alt = 4
   Insn 2107: point = 2102, n_alt = 3
   Insn 2106: point = 2104, n_alt = 0
   Insn 2105: point = 2106, n_alt = 1
   Insn 2104: point = 2108, n_alt = 0
   Insn 2103: point = 2109, n_alt = 0
   Insn 2102: point = 2111, n_alt = 1
   Insn 2101: point = 2113, n_alt = 0
   Insn 2100: point = 2114, n_alt = 8
   Insn 2099: point = 2115, n_alt = 2
  BB 156
   Insn 2097: point = 2117, n_alt = -1
   Insn 2096: point = 2117, n_alt = 0
   Insn 2095: point = 2118, n_alt = 0
   Insn 2094: point = 2120, n_alt = 4
   Insn 2093: point = 2121, n_alt = 3
   Insn 2092: point = 2123, n_alt = 0
   Insn 2091: point = 2125, n_alt = 1
   Insn 2090: point = 2127, n_alt = 0
   Insn 2089: point = 2128, n_alt = 0
   Insn 2088: point = 2130, n_alt = 1
   Insn 2087: point = 2132, n_alt = 0
  BB 155
   Insn 2082: point = 2134, n_alt = -1
   Insn 2081: point = 2134, n_alt = 1
   Insn 2080: point = 2135, n_alt = 7
   Insn 2079: point = 2137, n_alt = 4
   Insn 2078: point = 2138, n_alt = 3
   Insn 2077: point = 2140, n_alt = 0
   Insn 2076: point = 2142, n_alt = 1
   Insn 2075: point = 2144, n_alt = 0
   Insn 2074: point = 2145, n_alt = 0
   Insn 2073: point = 2147, n_alt = 0
   Insn 2072: point = 2149, n_alt = 1
   Insn 2071: point = 2151, n_alt = 0
   Insn 2070: point = 2152, n_alt = 1
   Insn 2069: point = 2154, n_alt = 1
   Insn 2068: point = 2156, n_alt = 0
  BB 153
   Insn 2060: point = 2158, n_alt = 1
   Insn 2059: point = 2158, n_alt = 0
   Insn 2058: point = 2159, n_alt = 1
   Insn 2057: point = 2160, n_alt = 0
   Insn 2056: point = 2162, n_alt = 0
   Insn 2055: point = 2164, n_alt = 4
   Insn 2054: point = 2165, n_alt = 3
   Insn 2053: point = 2167, n_alt = 0
   Insn 2052: point = 2169, n_alt = 0
   Insn 2051: point = 2171, n_alt = 0
   Insn 2050: point = 2172, n_alt = 0
   Insn 2049: point = 2174, n_alt = 0
   Insn 2048: point = 2176, n_alt = 0
   Insn 2047: point = 2177, n_alt = 8
   Insn 2046: point = 2178, n_alt = 7
  BB 151
   Insn 2038: point = 2180, n_alt = 1
  BB 149
   Insn 2030: point = 2181, n_alt = 1
   Insn 2029: point = 2182, n_alt = 0
   Insn 2028: point = 2183, n_alt = 0
  BB 329
   Insn 4371: point = 2184, n_alt = -1
  BB 144
   Insn 1997: point = 2184, n_alt = -1
   Insn 1996: point = 2184, n_alt = 0
   Insn 1995: point = 2185, n_alt = 0
   Insn 1994: point = 2187, n_alt = 0
   Insn 1993: point = 2188, n_alt = 0
  BB 148
   Insn 4219: point = 2189, n_alt = -1
   Insn 2022: point = 2189, n_alt = 1
  BB 330
   Insn 4374: point = 2190, n_alt = -1
  BB 146
   Insn 2005: point = 2191, n_alt = -1
   Insn 2004: point = 2191, n_alt = 0
   Insn 2003: point = 2192, n_alt = 0
   Insn 2002: point = 2194, n_alt = 0
   Insn 2001: point = 2195, n_alt = 0
  BB 147
   Insn 4217: point = 2196, n_alt = -1
   Insn 2016: point = 2196, n_alt = 1
   Insn 2015: point = 2196, n_alt = 1
   Insn 2014: point = 2197, n_alt = 4
   Insn 2013: point = 2198, n_alt = 3
   Insn 2012: point = 2200, n_alt = 0
   Insn 2011: point = 2202, n_alt = 1
   Insn 2010: point = 2204, n_alt = 0
   Insn 2009: point = 2205, n_alt = 0
   Insn 2008: point = 2207, n_alt = 1
   Insn 2007: point = 2209, n_alt = 0
  BB 145
   Insn 1999: point = 2211, n_alt = 1
  BB 143
   Insn 1991: point = 2212, n_alt = 1
   Insn 1990: point = 2213, n_alt = 0
   Insn 1989: point = 2214, n_alt = 0
   Insn 1988: point = 2215, n_alt = 8
   Insn 1987: point = 2216, n_alt = 7
  BB 142
   Insn 1984: point = 2217, n_alt = -1
   Insn 1983: point = 2217, n_alt = 0
   Insn 1982: point = 2218, n_alt = 0
  BB 141
   Insn 1980: point = 2219, n_alt = -1
   Insn 1979: point = 2219, n_alt = 0
   Insn 1978: point = 2220, n_alt = 0
  BB 140
   Insn 1976: point = 2221, n_alt = -1
   Insn 1975: point = 2221, n_alt = 0
   Insn 1974: point = 2222, n_alt = 0
  BB 139
   Insn 1971: point = 2223, n_alt = 0
   Insn 1970: point = 2223, n_alt = 3
   Insn 1969: point = 2223, n_alt = 2
   Insn 1968: point = 2223, n_alt = 2
   Insn 1967: point = 2223, n_alt = -2
   Insn 1966: point = 2224, n_alt = -2
   Insn 1965: point = 2225, n_alt = -2
   Insn 1964: point = 2226, n_alt = -2
   Insn 1963: point = 2227, n_alt = 3
   Insn 1962: point = 2228, n_alt = 3
   Insn 1961: point = 2229, n_alt = 3
   Insn 1960: point = 2230, n_alt = 3
   Insn 1959: point = 2232, n_alt = 0
   Insn 1958: point = 2234, n_alt = 0
   Insn 1957: point = 2236, n_alt = -2
   Insn 1956: point = 2238, n_alt = -2
   Insn 1955: point = 2240, n_alt = 0
   Insn 1954: point = 2242, n_alt = 0
   Insn 1953: point = 2243, n_alt = -2
   Insn 1952: point = 2245, n_alt = 0
   Insn 1951: point = 2247, n_alt = -2
   Insn 1950: point = 2248, n_alt = 3
   Insn 1949: point = 2250, n_alt = 0
   Insn 1948: point = 2252, n_alt = 0
   Insn 1947: point = 2253, n_alt = 0
   Insn 1946: point = 2254, n_alt = 1
   Insn 4484: point = 2255, n_alt = -2
   Insn 1945: point = 2257, n_alt = 0
   Insn 4483: point = 2258, n_alt = -2
   Insn 1944: point = 2260, n_alt = 2
   Insn 1943: point = 2261, n_alt = 2
   Insn 1942: point = 2262, n_alt = 2
   Insn 1941: point = 2263, n_alt = 0
   Insn 1940: point = 2263, n_alt = 0
   Insn 1939: point = 2263, n_alt = 3
   Insn 1938: point = 2263, n_alt = 2
   Insn 1937: point = 2263, n_alt = 2
   Insn 1936: point = 2263, n_alt = 4
   Insn 1935: point = 2263, n_alt = 4
   Insn 1934: point = 2263, n_alt = -2
   Insn 1933: point = 2264, n_alt = -2
   Insn 1932: point = 2265, n_alt = 0
   Insn 1931: point = 2265, n_alt = 0
   Insn 1930: point = 2265, n_alt = 3
   Insn 1929: point = 2266, n_alt = 3
  BB 138
   Insn 1927: point = 2267, n_alt = -1
   Insn 1926: point = 2267, n_alt = 0
   Insn 1925: point = 2268, n_alt = 0
  BB 137
   Insn 1922: point = 2269, n_alt = 0
   Insn 1921: point = 2269, n_alt = 3
   Insn 1920: point = 2269, n_alt = 2
   Insn 1919: point = 2269, n_alt = 2
   Insn 1918: point = 2269, n_alt = -2
   Insn 1917: point = 2270, n_alt = -2
   Insn 1916: point = 2271, n_alt = -2
   Insn 1915: point = 2272, n_alt = -2
   Insn 1914: point = 2273, n_alt = 3
   Insn 1913: point = 2274, n_alt = 3
   Insn 1912: point = 2275, n_alt = 3
   Insn 1911: point = 2276, n_alt = 3
   Insn 1910: point = 2278, n_alt = 0
   Insn 1909: point = 2280, n_alt = 0
   Insn 1908: point = 2282, n_alt = -2
   Insn 1907: point = 2284, n_alt = -2
   Insn 1906: point = 2286, n_alt = 0
   Insn 1905: point = 2288, n_alt = 0
   Insn 1904: point = 2289, n_alt = -2
   Insn 1903: point = 2291, n_alt = 0
   Insn 1902: point = 2293, n_alt = -2
   Insn 1901: point = 2294, n_alt = 3
   Insn 1900: point = 2296, n_alt = 0
   Insn 1899: point = 2298, n_alt = 0
   Insn 1898: point = 2299, n_alt = 0
   Insn 1897: point = 2300, n_alt = 1
   Insn 4482: point = 2301, n_alt = -2
   Insn 1896: point = 2303, n_alt = 0
   Insn 4481: point = 2304, n_alt = -2
   Insn 1895: point = 2306, n_alt = 2
   Insn 1894: point = 2307, n_alt = 2
   Insn 1893: point = 2308, n_alt = 2
   Insn 1892: point = 2309, n_alt = 0
   Insn 1891: point = 2309, n_alt = 0
   Insn 1890: point = 2309, n_alt = 3
   Insn 1889: point = 2309, n_alt = 2
   Insn 1888: point = 2309, n_alt = 2
   Insn 1887: point = 2309, n_alt = 4
   Insn 1886: point = 2309, n_alt = 4
   Insn 1885: point = 2309, n_alt = -2
   Insn 1884: point = 2310, n_alt = -2
   Insn 1883: point = 2311, n_alt = 0
   Insn 1882: point = 2311, n_alt = 0
   Insn 1881: point = 2311, n_alt = 3
   Insn 1880: point = 2312, n_alt = 3
  BB 136
   Insn 1878: point = 2313, n_alt = -1
   Insn 1877: point = 2313, n_alt = 0
   Insn 1876: point = 2314, n_alt = 0
  BB 326
   Insn 4362: point = 2315, n_alt = -1
  BB 116
   Insn 1511: point = 2315, n_alt = -1
   Insn 1510: point = 2315, n_alt = 0
   Insn 1509: point = 2316, n_alt = 0
   Insn 1508: point = 2318, n_alt = 0
   Insn 1507: point = 2319, n_alt = 0
  BB 135
   Insn 4215: point = 2320, n_alt = -1
   Insn 1870: point = 2320, n_alt = 1
  BB 327
   Insn 4365: point = 2321, n_alt = -1
  BB 118
   Insn 1519: point = 2322, n_alt = -1
   Insn 1518: point = 2322, n_alt = 0
   Insn 1517: point = 2323, n_alt = 0
   Insn 1516: point = 2325, n_alt = 0
   Insn 1515: point = 2326, n_alt = 0
  BB 134
   Insn 4213: point = 2327, n_alt = -1
   Insn 1864: point = 2327, n_alt = 1
  BB 132
   Insn 4211: point = 2328, n_alt = -1
   Insn 1714: point = 2328, n_alt = 8
   Insn 1713: point = 2329, n_alt = 4
   Insn 1712: point = 2330, n_alt = 7
   Insn 1711: point = 2332, n_alt = 0
   Insn 1710: point = 2334, n_alt = 4
   Insn 1709: point = 2335, n_alt = 3
   Insn 1708: point = 2337, n_alt = 0
   Insn 1707: point = 2339, n_alt = 0
   Insn 1706: point = 2341, n_alt = 0
   Insn 1705: point = 2342, n_alt = 0
   Insn 1704: point = 2344, n_alt = 0
   Insn 1703: point = 2346, n_alt = 0
   Insn 1702: point = 2347, n_alt = 3
   Insn 1701: point = 2349, n_alt = 0
   Insn 1700: point = 2351, n_alt = 0
   Insn 1699: point = 2353, n_alt = 0
   Insn 1698: point = 2354, n_alt = 0
   Insn 1697: point = 2356, n_alt = 0
   Insn 1696: point = 2358, n_alt = 0
   Insn 1695: point = 2359, n_alt = 8
   Insn 1694: point = 2360, n_alt = 4
   Insn 1693: point = 2361, n_alt = 1
   Insn 1692: point = 2363, n_alt = 3
   Insn 1691: point = 2365, n_alt = 0
   Insn 1690: point = 2367, n_alt = 0
   Insn 1689: point = 2369, n_alt = 0
   Insn 1688: point = 2370, n_alt = 0
   Insn 1687: point = 2372, n_alt = 0
   Insn 1686: point = 2374, n_alt = 0
   Insn 1685: point = 2375, n_alt = 7
   Insn 1684: point = 2377, n_alt = 4
   Insn 1683: point = 2378, n_alt = 1
   Insn 1682: point = 2380, n_alt = 7
   Insn 1681: point = 2382, n_alt = 0
   Insn 1680: point = 2384, n_alt = 4
   Insn 1679: point = 2385, n_alt = 3
   Insn 1678: point = 2387, n_alt = 0
   Insn 1677: point = 2389, n_alt = 0
   Insn 1676: point = 2391, n_alt = 0
   Insn 1675: point = 2392, n_alt = 0
   Insn 1674: point = 2394, n_alt = 0
   Insn 1673: point = 2396, n_alt = 0
   Insn 1672: point = 2397, n_alt = 7
   Insn 1671: point = 2399, n_alt = 0
   Insn 1670: point = 2401, n_alt = 4
   Insn 1669: point = 2402, n_alt = 3
   Insn 1668: point = 2404, n_alt = 0
   Insn 1667: point = 2406, n_alt = 0
   Insn 1666: point = 2408, n_alt = 7
  BB 129
   Insn 4209: point = 2410, n_alt = -1
   Insn 1651: point = 2410, n_alt = 8
   Insn 1650: point = 2411, n_alt = 4
   Insn 1649: point = 2412, n_alt = 7
   Insn 1648: point = 2413, n_alt = 3
   Insn 1647: point = 2415, n_alt = 0
   Insn 1646: point = 2417, n_alt = 0
   Insn 1645: point = 2419, n_alt = 0
   Insn 1644: point = 2420, n_alt = 0
   Insn 1643: point = 2422, n_alt = 0
   Insn 1642: point = 2424, n_alt = 0
   Insn 1641: point = 2425, n_alt = 8
   Insn 1640: point = 2426, n_alt = 4
   Insn 1639: point = 2427, n_alt = 7
   Insn 1638: point = 2428, n_alt = 3
   Insn 1637: point = 2430, n_alt = 0
   Insn 1636: point = 2432, n_alt = 0
   Insn 1635: point = 2434, n_alt = 0
   Insn 1634: point = 2435, n_alt = 0
   Insn 1633: point = 2437, n_alt = 0
   Insn 1632: point = 2439, n_alt = 0
  BB 133
   Insn 1861: point = 2441, n_alt = 8
   Insn 1860: point = 2442, n_alt = 4
   Insn 1859: point = 2443, n_alt = 1
   Insn 1858: point = 2445, n_alt = 3
   Insn 1857: point = 2447, n_alt = 0
   Insn 1856: point = 2449, n_alt = 0
   Insn 1855: point = 2451, n_alt = 0
   Insn 1854: point = 2452, n_alt = 0
   Insn 1853: point = 2454, n_alt = 0
   Insn 1852: point = 2456, n_alt = 0
   Insn 1851: point = 2457, n_alt = 7
   Insn 1850: point = 2459, n_alt = 0
   Insn 1849: point = 2461, n_alt = 4
   Insn 1848: point = 2462, n_alt = 3
   Insn 1847: point = 2464, n_alt = 0
   Insn 1846: point = 2466, n_alt = 0
   Insn 1845: point = 2468, n_alt = 0
   Insn 1844: point = 2469, n_alt = 0
   Insn 1843: point = 2471, n_alt = 0
   Insn 1842: point = 2473, n_alt = 0
   Insn 1841: point = 2475, n_alt = 0
   Insn 1840: point = 2476, n_alt = 1
   Insn 1839: point = 2478, n_alt = 0
   Insn 1838: point = 2480, n_alt = 0
   Insn 1837: point = 2482, n_alt = 0
   Insn 4480: point = 2483, n_alt = -2
   Insn 1836: point = 2485, n_alt = 1
   Insn 4479: point = 2486, n_alt = 7
   Insn 1835: point = 2488, n_alt = -2
   Insn 4478: point = 2490, n_alt = -2
   Insn 1834: point = 2492, n_alt = 2
   Insn 4477: point = 2493, n_alt = 7
   Insn 1833: point = 2495, n_alt = -2
   Insn 1832: point = 2496, n_alt = 0
   Insn 1831: point = 2496, n_alt = -2
   Insn 1830: point = 2497, n_alt = 7
   Insn 1829: point = 2499, n_alt = 4
   Insn 1828: point = 2500, n_alt = 3
   Insn 1827: point = 2502, n_alt = 0
   Insn 1826: point = 2504, n_alt = 0
   Insn 1825: point = 2506, n_alt = 0
   Insn 1824: point = 2507, n_alt = 0
   Insn 1823: point = 2509, n_alt = 0
   Insn 1822: point = 2511, n_alt = 0
   Insn 1821: point = 2512, n_alt = 8
   Insn 1820: point = 2513, n_alt = 0
   Insn 1819: point = 2513, n_alt = -2
   Insn 1818: point = 2514, n_alt = 7
   Insn 1817: point = 2516, n_alt = 4
   Insn 1816: point = 2517, n_alt = 3
   Insn 1815: point = 2519, n_alt = 0
   Insn 1814: point = 2521, n_alt = 0
   Insn 1813: point = 2523, n_alt = 0
   Insn 1812: point = 2524, n_alt = 0
   Insn 1811: point = 2526, n_alt = 0
   Insn 1810: point = 2528, n_alt = 0
   Insn 1809: point = 2530, n_alt = 0
   Insn 1808: point = 2531, n_alt = 1
   Insn 1807: point = 2533, n_alt = 0
   Insn 1806: point = 2535, n_alt = 0
   Insn 1805: point = 2537, n_alt = 0
   Insn 4476: point = 2538, n_alt = 8
   Insn 1804: point = 2540, n_alt = 1
   Insn 4475: point = 2541, n_alt = -2
   Insn 1803: point = 2543, n_alt = 7
   Insn 1802: point = 2544, n_alt = 1
   Insn 1801: point = 2546, n_alt = -2
   Insn 1800: point = 2548, n_alt = 1
   Insn 1799: point = 2550, n_alt = 7
   Insn 1798: point = 2551, n_alt = 1
   Insn 1797: point = 2553, n_alt = 7
   Insn 1796: point = 2554, n_alt = 7
   Insn 1795: point = 2556, n_alt = 0
   Insn 1794: point = 2558, n_alt = 4
   Insn 1793: point = 2559, n_alt = 3
   Insn 1792: point = 2561, n_alt = 0
   Insn 1791: point = 2563, n_alt = 0
   Insn 1790: point = 2565, n_alt = 0
   Insn 1789: point = 2566, n_alt = 0
   Insn 1788: point = 2568, n_alt = 0
   Insn 1787: point = 2570, n_alt = 0
   Insn 1786: point = 2572, n_alt = 0
   Insn 1785: point = 2573, n_alt = 1
   Insn 1784: point = 2575, n_alt = 0
   Insn 1783: point = 2577, n_alt = 0
   Insn 1782: point = 2579, n_alt = 0
   Insn 1781: point = 2580, n_alt = 1
   Insn 1780: point = 2582, n_alt = 7
   Insn 1779: point = 2584, n_alt = 0
   Insn 1778: point = 2586, n_alt = 4
   Insn 1777: point = 2587, n_alt = 3
   Insn 1776: point = 2589, n_alt = 0
   Insn 1775: point = 2591, n_alt = 0
   Insn 1774: point = 2593, n_alt = 0
   Insn 1773: point = 2594, n_alt = 0
   Insn 1772: point = 2596, n_alt = 0
   Insn 1771: point = 2598, n_alt = 0
   Insn 1770: point = 2600, n_alt = 0
   Insn 1769: point = 2601, n_alt = 1
   Insn 1768: point = 2603, n_alt = 0
   Insn 1767: point = 2605, n_alt = 0
   Insn 1766: point = 2607, n_alt = 0
   Insn 1765: point = 2608, n_alt = 7
   Insn 1764: point = 2610, n_alt = 0
   Insn 1763: point = 2612, n_alt = 4
   Insn 1762: point = 2613, n_alt = 3
   Insn 1761: point = 2615, n_alt = 0
   Insn 1760: point = 2617, n_alt = 0
   Insn 1759: point = 2619, n_alt = 0
   Insn 1758: point = 2620, n_alt = 0
   Insn 1757: point = 2622, n_alt = 0
   Insn 1756: point = 2624, n_alt = 0
   Insn 1755: point = 2626, n_alt = 0
   Insn 1754: point = 2627, n_alt = 1
   Insn 1753: point = 2629, n_alt = 0
   Insn 1752: point = 2631, n_alt = 0
   Insn 1751: point = 2633, n_alt = 0
   Insn 1750: point = 2634, n_alt = 8
   Insn 1749: point = 2635, n_alt = 4
   Insn 1748: point = 2636, n_alt = 1
   Insn 1747: point = 2638, n_alt = 3
   Insn 1746: point = 2640, n_alt = 0
   Insn 1745: point = 2642, n_alt = 0
   Insn 1744: point = 2644, n_alt = 0
   Insn 1743: point = 2645, n_alt = 0
   Insn 1742: point = 2647, n_alt = 0
   Insn 1741: point = 2649, n_alt = 0
   Insn 1740: point = 2650, n_alt = 7
   Insn 1739: point = 2652, n_alt = 4
   Insn 1738: point = 2653, n_alt = 1
   Insn 1737: point = 2655, n_alt = 7
   Insn 1736: point = 2657, n_alt = 0
   Insn 1735: point = 2659, n_alt = 4
   Insn 1734: point = 2660, n_alt = 3
   Insn 1733: point = 2662, n_alt = 0
   Insn 1732: point = 2664, n_alt = 0
   Insn 1731: point = 2666, n_alt = 0
   Insn 1730: point = 2667, n_alt = 0
   Insn 1729: point = 2669, n_alt = 0
   Insn 1728: point = 2671, n_alt = 0
   Insn 1727: point = 2672, n_alt = 7
   Insn 1726: point = 2674, n_alt = 0
   Insn 1725: point = 2676, n_alt = 4
   Insn 1724: point = 2677, n_alt = 3
   Insn 1723: point = 2679, n_alt = 0
   Insn 1722: point = 2681, n_alt = 0
   Insn 1721: point = 2682, n_alt = 1
   Insn 1720: point = 2683, n_alt = 0
   Insn 1719: point = 2685, n_alt = 7
  BB 131
   Insn 1661: point = 2687, n_alt = -1
   Insn 1660: point = 2687, n_alt = 1
   Insn 1659: point = 2688, n_alt = 7
  BB 130
   Insn 1658: point = 2690, n_alt = -1
   Insn 1657: point = 2690, n_alt = 1
   Insn 1656: point = 2691, n_alt = 7
  BB 128
   Insn 1627: point = 2693, n_alt = -1
   Insn 1626: point = 2693, n_alt = 1
   Insn 1625: point = 2694, n_alt = 7
  BB 127
   Insn 1624: point = 2696, n_alt = -1
   Insn 1623: point = 2696, n_alt = 1
   Insn 1622: point = 2697, n_alt = 7
  BB 328
   Insn 4368: point = 2699, n_alt = -1
  BB 120
   Insn 1541: point = 2700, n_alt = -1
   Insn 1540: point = 2700, n_alt = 0
   Insn 1539: point = 2701, n_alt = 0
   Insn 1538: point = 2703, n_alt = 0
   Insn 1537: point = 2704, n_alt = 1
  BB 126
   Insn 4207: point = 2705, n_alt = -1
   Insn 1616: point = 2705, n_alt = 1
  BB 125
   Insn 1613: point = 2706, n_alt = 1
   Insn 1612: point = 2707, n_alt = 4
   Insn 1611: point = 2708, n_alt = 3
   Insn 1610: point = 2710, n_alt = 0
   Insn 1609: point = 2712, n_alt = 0
   Insn 1608: point = 2714, n_alt = 0
   Insn 1607: point = 2715, n_alt = 0
   Insn 1606: point = 2717, n_alt = 0
   Insn 1605: point = 2719, n_alt = 0
  BB 124
   Insn 1602: point = 2721, n_alt = 8
   Insn 1601: point = 2722, n_alt = 7
   Insn 1600: point = 2724, n_alt = 0
   Insn 1599: point = 2726, n_alt = 4
   Insn 1598: point = 2727, n_alt = 3
   Insn 1597: point = 2729, n_alt = 0
   Insn 1596: point = 2731, n_alt = 0
   Insn 1595: point = 2733, n_alt = 0
   Insn 1594: point = 2734, n_alt = 0
   Insn 1593: point = 2736, n_alt = 0
   Insn 1592: point = 2738, n_alt = 0
  BB 123
   Insn 1587: point = 2740, n_alt = -1
   Insn 1586: point = 2740, n_alt = 1
   Insn 1585: point = 2741, n_alt = 7
   Insn 1584: point = 2743, n_alt = 0
   Insn 1583: point = 2745, n_alt = 4
   Insn 1582: point = 2746, n_alt = 3
   Insn 1581: point = 2748, n_alt = 0
   Insn 1580: point = 2750, n_alt = 0
   Insn 1579: point = 2752, n_alt = 0
   Insn 1578: point = 2753, n_alt = 0
   Insn 1577: point = 2755, n_alt = 0
   Insn 1576: point = 2757, n_alt = 0
   Insn 1575: point = 2758, n_alt = 8
   Insn 1574: point = 2759, n_alt = 2
  BB 122
   Insn 1572: point = 2761, n_alt = -1
   Insn 1571: point = 2761, n_alt = 0
   Insn 1570: point = 2762, n_alt = 0
   Insn 1569: point = 2764, n_alt = 4
   Insn 1568: point = 2765, n_alt = 3
   Insn 1567: point = 2767, n_alt = 0
   Insn 1566: point = 2769, n_alt = 0
   Insn 1565: point = 2771, n_alt = 0
   Insn 1564: point = 2772, n_alt = 0
   Insn 1563: point = 2774, n_alt = 0
   Insn 1562: point = 2776, n_alt = 0
  BB 121
   Insn 1557: point = 2778, n_alt = -1
   Insn 1556: point = 2778, n_alt = 1
   Insn 1555: point = 2779, n_alt = 7
   Insn 1554: point = 2781, n_alt = 4
   Insn 1553: point = 2782, n_alt = 3
   Insn 1552: point = 2784, n_alt = 0
   Insn 1551: point = 2786, n_alt = 0
   Insn 1550: point = 2788, n_alt = 0
   Insn 1549: point = 2789, n_alt = 0
   Insn 1548: point = 2791, n_alt = 0
   Insn 1547: point = 2793, n_alt = 0
   Insn 1546: point = 2795, n_alt = 0
   Insn 1545: point = 2796, n_alt = 1
   Insn 1544: point = 2798, n_alt = 0
   Insn 1543: point = 2800, n_alt = 0
  BB 119
   Insn 1535: point = 2802, n_alt = 1
   Insn 1534: point = 2803, n_alt = 0
   Insn 1533: point = 2804, n_alt = 8
   Insn 1532: point = 2805, n_alt = 7
   Insn 1531: point = 2806, n_alt = 1
   Insn 1530: point = 2807, n_alt = 0
   Insn 1529: point = 2809, n_alt = 0
   Insn 1528: point = 2811, n_alt = 4
   Insn 1527: point = 2812, n_alt = 3
   Insn 1526: point = 2814, n_alt = 0
   Insn 1525: point = 2816, n_alt = 0
   Insn 1524: point = 2818, n_alt = 0
   Insn 1523: point = 2819, n_alt = 0
   Insn 1522: point = 2821, n_alt = 0
   Insn 1521: point = 2823, n_alt = 0
  BB 117
   Insn 1513: point = 2825, n_alt = 1
  BB 115
   Insn 1505: point = 2826, n_alt = 1
   Insn 1504: point = 2827, n_alt = 0
   Insn 1503: point = 2828, n_alt = 0
  BB 324
   Insn 4356: point = 2829, n_alt = -1
  BB 110
   Insn 1452: point = 2829, n_alt = -1
   Insn 1451: point = 2829, n_alt = 0
   Insn 1450: point = 2830, n_alt = 0
   Insn 1449: point = 2832, n_alt = 0
   Insn 1448: point = 2833, n_alt = 0
  BB 114
   Insn 4205: point = 2834, n_alt = -1
   Insn 1497: point = 2834, n_alt = 1
  BB 325
   Insn 4359: point = 2835, n_alt = -1
  BB 112
   Insn 1460: point = 2836, n_alt = -1
   Insn 1459: point = 2836, n_alt = 0
   Insn 1458: point = 2837, n_alt = 0
   Insn 1457: point = 2839, n_alt = 0
   Insn 1456: point = 2840, n_alt = 0
  BB 113
   Insn 4203: point = 2841, n_alt = -1
   Insn 1491: point = 2841, n_alt = 1
   Insn 1490: point = 2841, n_alt = 8
   Insn 1489: point = 2842, n_alt = 4
   Insn 1488: point = 2843, n_alt = 7
   Insn 1487: point = 2844, n_alt = 3
   Insn 1486: point = 2846, n_alt = 0
   Insn 1485: point = 2848, n_alt = 1
   Insn 1484: point = 2850, n_alt = 0
   Insn 1483: point = 2851, n_alt = 0
   Insn 1482: point = 2853, n_alt = 1
   Insn 1481: point = 2855, n_alt = 0
   Insn 1480: point = 2856, n_alt = 8
   Insn 1479: point = 2857, n_alt = 4
   Insn 1478: point = 2858, n_alt = 7
   Insn 1477: point = 2859, n_alt = 3
   Insn 1476: point = 2861, n_alt = 0
   Insn 1475: point = 2863, n_alt = 1
   Insn 1474: point = 2865, n_alt = 0
   Insn 1473: point = 2866, n_alt = 0
   Insn 1472: point = 2868, n_alt = 1
   Insn 1471: point = 2870, n_alt = 0
   Insn 1470: point = 2871, n_alt = 1
   Insn 1469: point = 2872, n_alt = 4
   Insn 1468: point = 2873, n_alt = 3
   Insn 1467: point = 2875, n_alt = 0
   Insn 1466: point = 2877, n_alt = 1
   Insn 1465: point = 2879, n_alt = 0
   Insn 1464: point = 2880, n_alt = 0
   Insn 1463: point = 2882, n_alt = 1
   Insn 1462: point = 2884, n_alt = 0
  BB 111
   Insn 1454: point = 2886, n_alt = 1
  BB 109
   Insn 1446: point = 2887, n_alt = 1
   Insn 1445: point = 2888, n_alt = 0
   Insn 1444: point = 2889, n_alt = 0
   Insn 1443: point = 2890, n_alt = 8
   Insn 1442: point = 2891, n_alt = 7
  BB 108
   Insn 1439: point = 2892, n_alt = -1
   Insn 1438: point = 2892, n_alt = 0
   Insn 1437: point = 2893, n_alt = 0
  BB 107
   Insn 1435: point = 2894, n_alt = -1
   Insn 1434: point = 2894, n_alt = 0
   Insn 1433: point = 2895, n_alt = 0
  BB 106
   Insn 1430: point = 2896, n_alt = 0
   Insn 1429: point = 2896, n_alt = 3
   Insn 1428: point = 2896, n_alt = 2
   Insn 1427: point = 2896, n_alt = 2
   Insn 1426: point = 2896, n_alt = -2
   Insn 1425: point = 2897, n_alt = -2
   Insn 1424: point = 2898, n_alt = -2
   Insn 1423: point = 2899, n_alt = -2
   Insn 1422: point = 2900, n_alt = 3
   Insn 1421: point = 2901, n_alt = 3
   Insn 1420: point = 2902, n_alt = 3
   Insn 1419: point = 2903, n_alt = 3
   Insn 1418: point = 2905, n_alt = 0
   Insn 1417: point = 2907, n_alt = 0
   Insn 1416: point = 2909, n_alt = -2
   Insn 1415: point = 2911, n_alt = -2
   Insn 1414: point = 2913, n_alt = 0
   Insn 1413: point = 2915, n_alt = 0
   Insn 1412: point = 2916, n_alt = -2
   Insn 1411: point = 2918, n_alt = 0
   Insn 1410: point = 2920, n_alt = -2
   Insn 1409: point = 2921, n_alt = 3
   Insn 1408: point = 2923, n_alt = 0
   Insn 1407: point = 2925, n_alt = 0
   Insn 1406: point = 2926, n_alt = 0
   Insn 1405: point = 2926, n_alt = 3
   Insn 1404: point = 2926, n_alt = -2
   Insn 1403: point = 2927, n_alt = 2
   Insn 1402: point = 2927, n_alt = -2
   Insn 1401: point = 2928, n_alt = -2
   Insn 1400: point = 2929, n_alt = 3
   Insn 1399: point = 2930, n_alt = 3
   Insn 1398: point = 2931, n_alt = 3
  BB 105
   Insn 1395: point = 2932, n_alt = 1
  BB 104
   Insn 1393: point = 2932, n_alt = -1
   Insn 1392: point = 2932, n_alt = 0
   Insn 1391: point = 2933, n_alt = 0
  BB 102
   Insn 4201: point = 2934, n_alt = -1
   Insn 1381: point = 2934, n_alt = 1
   Insn 1380: point = 2935, n_alt = 1
   Insn 1379: point = 2937, n_alt = 0
  BB 103
   Insn 1388: point = 2938, n_alt = 1
   Insn 1387: point = 2939, n_alt = 1
   Insn 1386: point = 2941, n_alt = 0
  BB 101
   Insn 1377: point = 2942, n_alt = -1
   Insn 1376: point = 2942, n_alt = 1
   Insn 1375: point = 2942, n_alt = 1
   Insn 1374: point = 2942, n_alt = 1
   Insn 1373: point = 2943, n_alt = 0
   Insn 1372: point = 2944, n_alt = 1
   Insn 1371: point = 2945, n_alt = 0
   Insn 1370: point = 2947, n_alt = 0
   Insn 1369: point = 2948, n_alt = 1
   Insn 1368: point = 2949, n_alt = 0
   Insn 1367: point = 2951, n_alt = 7
   Insn 1366: point = 2953, n_alt = 4
   Insn 1365: point = 2954, n_alt = 1
   Insn 1364: point = 2955, n_alt = 0
   Insn 1363: point = 2956, n_alt = 0
   Insn 1362: point = 2957, n_alt = 1
   Insn 4474: point = 2958, n_alt = -2
   Insn 1361: point = 2960, n_alt = 0
   Insn 4473: point = 2961, n_alt = -2
   Insn 1360: point = 2963, n_alt = 2
   Insn 1359: point = 2964, n_alt = 2
   Insn 1358: point = 2965, n_alt = 2
   Insn 1357: point = 2966, n_alt = 0
   Insn 1356: point = 2966, n_alt = 0
   Insn 1355: point = 2966, n_alt = 3
   Insn 1354: point = 2966, n_alt = 2
   Insn 1353: point = 2966, n_alt = 2
   Insn 1352: point = 2966, n_alt = 4
   Insn 1351: point = 2966, n_alt = 4
   Insn 1350: point = 2966, n_alt = -2
   Insn 1349: point = 2967, n_alt = -2
   Insn 1348: point = 2968, n_alt = 0
   Insn 1347: point = 2968, n_alt = 0
   Insn 1346: point = 2968, n_alt = 3
   Insn 1345: point = 2969, n_alt = 3
  BB 322
   Insn 4350: point = 2970, n_alt = -1
  BB 93
   Insn 1263: point = 2970, n_alt = -1
   Insn 1262: point = 2970, n_alt = 0
   Insn 1261: point = 2971, n_alt = 0
   Insn 1260: point = 2973, n_alt = 0
   Insn 1259: point = 2974, n_alt = 0
  BB 100
   Insn 4199: point = 2975, n_alt = -1
   Insn 1339: point = 2975, n_alt = 1
  BB 323
   Insn 4353: point = 2976, n_alt = -1
  BB 95
   Insn 1271: point = 2977, n_alt = -1
   Insn 1270: point = 2977, n_alt = 0
   Insn 1269: point = 2978, n_alt = 0
   Insn 1268: point = 2980, n_alt = 0
   Insn 1267: point = 2981, n_alt = 0
  BB 99
   Insn 4197: point = 2982, n_alt = -1
   Insn 1333: point = 2982, n_alt = 1
  BB 97
   Insn 4195: point = 2983, n_alt = -1
   Insn 1316: point = 2983, n_alt = 8
   Insn 1315: point = 2984, n_alt = 4
   Insn 1314: point = 2985, n_alt = 2
   Insn 1313: point = 2987, n_alt = 3
   Insn 1312: point = 2989, n_alt = 0
   Insn 1311: point = 2991, n_alt = 1
   Insn 1310: point = 2993, n_alt = 0
   Insn 1309: point = 2994, n_alt = 0
   Insn 1308: point = 2996, n_alt = 1
   Insn 1307: point = 2998, n_alt = 0
   Insn 1306: point = 2999, n_alt = 1
   Insn 1305: point = 3001, n_alt = 0
   Insn 1304: point = 3003, n_alt = 0
   Insn 1303: point = 3005, n_alt = 4
   Insn 1302: point = 3006, n_alt = 3
   Insn 1301: point = 3008, n_alt = 0
   Insn 1300: point = 3010, n_alt = 1
   Insn 1299: point = 3012, n_alt = 0
   Insn 1298: point = 3013, n_alt = 0
   Insn 1297: point = 3015, n_alt = 1
   Insn 1296: point = 3017, n_alt = 0
   Insn 1295: point = 3018, n_alt = 7
   Insn 1294: point = 3020, n_alt = 0
   Insn 1293: point = 3022, n_alt = 4
   Insn 1292: point = 3023, n_alt = 3
   Insn 1291: point = 3025, n_alt = 0
   Insn 1290: point = 3027, n_alt = 1
   Insn 1289: point = 3029, n_alt = 0
   Insn 1288: point = 3030, n_alt = 0
   Insn 1287: point = 3032, n_alt = 1
   Insn 1286: point = 3034, n_alt = 0
  BB 98
   Insn 1330: point = 3036, n_alt = 8
   Insn 1329: point = 3037, n_alt = 7
   Insn 1328: point = 3038, n_alt = 4
   Insn 1327: point = 3039, n_alt = 3
   Insn 1326: point = 3041, n_alt = 0
   Insn 1325: point = 3043, n_alt = 1
   Insn 1324: point = 3045, n_alt = 0
   Insn 1323: point = 3046, n_alt = 0
   Insn 1322: point = 3048, n_alt = 1
   Insn 1321: point = 3050, n_alt = 0
  BB 96
   Insn 1284: point = 3052, n_alt = -1
   Insn 1283: point = 3052, n_alt = 0
   Insn 1282: point = 3053, n_alt = 0
   Insn 1281: point = 3055, n_alt = 0
   Insn 1280: point = 3057, n_alt = 4
   Insn 1279: point = 3058, n_alt = 3
   Insn 1278: point = 3060, n_alt = 0
   Insn 1277: point = 3062, n_alt = 1
   Insn 1276: point = 3064, n_alt = 0
   Insn 1275: point = 3065, n_alt = 0
   Insn 1274: point = 3067, n_alt = 1
   Insn 1273: point = 3069, n_alt = 0
  BB 94
   Insn 1265: point = 3071, n_alt = 1
  BB 92
   Insn 1257: point = 3072, n_alt = 1
   Insn 1256: point = 3073, n_alt = 0
   Insn 1255: point = 3074, n_alt = 0
  BB 91
   Insn 1253: point = 3075, n_alt = -1
   Insn 1252: point = 3075, n_alt = 0
   Insn 1251: point = 3076, n_alt = 0
  BB 90
   Insn 1248: point = 3077, n_alt = 0
   Insn 1247: point = 3077, n_alt = 3
   Insn 1246: point = 3077, n_alt = 2
   Insn 1245: point = 3077, n_alt = 2
   Insn 1244: point = 3077, n_alt = -2
   Insn 1243: point = 3078, n_alt = -2
   Insn 1242: point = 3079, n_alt = -2
   Insn 1241: point = 3080, n_alt = -2
   Insn 1240: point = 3081, n_alt = 3
   Insn 1239: point = 3082, n_alt = 3
   Insn 1238: point = 3083, n_alt = 3
   Insn 1237: point = 3084, n_alt = 3
   Insn 1236: point = 3086, n_alt = 0
   Insn 1235: point = 3088, n_alt = 0
   Insn 1234: point = 3090, n_alt = -2
   Insn 1233: point = 3092, n_alt = -2
   Insn 1232: point = 3094, n_alt = 0
   Insn 1231: point = 3096, n_alt = 0
   Insn 1230: point = 3097, n_alt = -2
   Insn 1229: point = 3099, n_alt = 0
   Insn 1228: point = 3101, n_alt = -2
   Insn 1227: point = 3102, n_alt = 3
   Insn 1226: point = 3104, n_alt = 0
   Insn 1225: point = 3106, n_alt = 0
   Insn 1224: point = 3107, n_alt = 0
   Insn 1223: point = 3107, n_alt = 3
   Insn 1222: point = 3107, n_alt = -2
   Insn 1221: point = 3108, n_alt = 2
   Insn 1220: point = 3108, n_alt = -2
   Insn 1219: point = 3109, n_alt = -2
   Insn 1218: point = 3110, n_alt = 3
   Insn 1217: point = 3111, n_alt = 3
   Insn 1216: point = 3112, n_alt = 3
  BB 89
   Insn 1213: point = 3113, n_alt = 1
  BB 88
   Insn 1211: point = 3113, n_alt = -1
   Insn 1210: point = 3113, n_alt = 0
   Insn 1209: point = 3114, n_alt = 0
  BB 86
   Insn 4193: point = 3115, n_alt = -1
   Insn 1199: point = 3115, n_alt = 1
   Insn 1198: point = 3116, n_alt = 1
   Insn 1197: point = 3118, n_alt = 0
  BB 87
   Insn 1206: point = 3119, n_alt = 1
   Insn 1205: point = 3120, n_alt = 1
   Insn 1204: point = 3122, n_alt = 0
  BB 85
   Insn 1195: point = 3123, n_alt = -1
   Insn 1194: point = 3123, n_alt = 1
   Insn 1193: point = 3123, n_alt = 1
   Insn 1192: point = 3123, n_alt = 1
   Insn 1191: point = 3124, n_alt = 0
   Insn 1190: point = 3125, n_alt = 1
   Insn 1189: point = 3126, n_alt = 0
   Insn 1188: point = 3128, n_alt = 0
   Insn 1187: point = 3129, n_alt = 1
   Insn 1186: point = 3130, n_alt = 0
   Insn 1185: point = 3132, n_alt = 7
   Insn 1184: point = 3134, n_alt = 4
   Insn 1183: point = 3135, n_alt = 1
   Insn 1182: point = 3136, n_alt = 0
   Insn 1181: point = 3137, n_alt = 0
   Insn 1180: point = 3138, n_alt = 1
   Insn 4472: point = 3139, n_alt = -2
   Insn 1179: point = 3141, n_alt = 0
   Insn 4471: point = 3142, n_alt = -2
   Insn 1178: point = 3144, n_alt = 2
   Insn 1177: point = 3145, n_alt = 2
   Insn 1176: point = 3146, n_alt = 2
   Insn 1175: point = 3147, n_alt = 0
   Insn 1174: point = 3147, n_alt = 0
   Insn 1173: point = 3147, n_alt = 3
   Insn 1172: point = 3147, n_alt = 2
   Insn 1171: point = 3147, n_alt = 2
   Insn 1170: point = 3147, n_alt = 4
   Insn 1169: point = 3147, n_alt = 4
   Insn 1168: point = 3147, n_alt = -2
   Insn 1167: point = 3148, n_alt = -2
   Insn 1166: point = 3149, n_alt = 0
   Insn 1165: point = 3149, n_alt = 0
   Insn 1164: point = 3149, n_alt = 3
   Insn 1163: point = 3150, n_alt = 3
  BB 320
   Insn 4344: point = 3151, n_alt = -1
  BB 77
   Insn 1081: point = 3151, n_alt = -1
   Insn 1080: point = 3151, n_alt = 0
   Insn 1079: point = 3152, n_alt = 0
   Insn 1078: point = 3154, n_alt = 0
   Insn 1077: point = 3155, n_alt = 0
  BB 84
   Insn 4191: point = 3156, n_alt = -1
   Insn 1157: point = 3156, n_alt = 1
  BB 321
   Insn 4347: point = 3157, n_alt = -1
  BB 79
   Insn 1089: point = 3158, n_alt = -1
   Insn 1088: point = 3158, n_alt = 0
   Insn 1087: point = 3159, n_alt = 0
   Insn 1086: point = 3161, n_alt = 0
   Insn 1085: point = 3162, n_alt = 0
  BB 83
   Insn 4189: point = 3163, n_alt = -1
   Insn 1151: point = 3163, n_alt = 1
  BB 81
   Insn 4187: point = 3164, n_alt = -1
   Insn 1134: point = 3164, n_alt = 8
   Insn 1133: point = 3165, n_alt = 4
   Insn 1132: point = 3166, n_alt = 2
   Insn 1131: point = 3168, n_alt = 3
   Insn 1130: point = 3170, n_alt = 0
   Insn 1129: point = 3172, n_alt = 1
   Insn 1128: point = 3174, n_alt = 0
   Insn 1127: point = 3175, n_alt = 0
   Insn 1126: point = 3177, n_alt = 1
   Insn 1125: point = 3179, n_alt = 0
   Insn 1124: point = 3180, n_alt = 1
   Insn 1123: point = 3182, n_alt = 0
   Insn 1122: point = 3184, n_alt = 0
   Insn 1121: point = 3186, n_alt = 4
   Insn 1120: point = 3187, n_alt = 3
   Insn 1119: point = 3189, n_alt = 0
   Insn 1118: point = 3191, n_alt = 1
   Insn 1117: point = 3193, n_alt = 0
   Insn 1116: point = 3194, n_alt = 0
   Insn 1115: point = 3196, n_alt = 1
   Insn 1114: point = 3198, n_alt = 0
   Insn 1113: point = 3199, n_alt = 7
   Insn 1112: point = 3201, n_alt = 0
   Insn 1111: point = 3203, n_alt = 4
   Insn 1110: point = 3204, n_alt = 3
   Insn 1109: point = 3206, n_alt = 0
   Insn 1108: point = 3208, n_alt = 1
   Insn 1107: point = 3210, n_alt = 0
   Insn 1106: point = 3211, n_alt = 0
   Insn 1105: point = 3213, n_alt = 1
   Insn 1104: point = 3215, n_alt = 0
  BB 82
   Insn 1148: point = 3217, n_alt = 8
   Insn 1147: point = 3218, n_alt = 7
   Insn 1146: point = 3219, n_alt = 4
   Insn 1145: point = 3220, n_alt = 3
   Insn 1144: point = 3222, n_alt = 0
   Insn 1143: point = 3224, n_alt = 1
   Insn 1142: point = 3226, n_alt = 0
   Insn 1141: point = 3227, n_alt = 0
   Insn 1140: point = 3229, n_alt = 1
   Insn 1139: point = 3231, n_alt = 0
  BB 80
   Insn 1102: point = 3233, n_alt = -1
   Insn 1101: point = 3233, n_alt = 0
   Insn 1100: point = 3234, n_alt = 0
   Insn 1099: point = 3236, n_alt = 0
   Insn 1098: point = 3238, n_alt = 4
   Insn 1097: point = 3239, n_alt = 3
   Insn 1096: point = 3241, n_alt = 0
   Insn 1095: point = 3243, n_alt = 1
   Insn 1094: point = 3245, n_alt = 0
   Insn 1093: point = 3246, n_alt = 0
   Insn 1092: point = 3248, n_alt = 1
   Insn 1091: point = 3250, n_alt = 0
  BB 78
   Insn 1083: point = 3252, n_alt = 1
  BB 76
   Insn 1075: point = 3253, n_alt = 1
   Insn 1074: point = 3254, n_alt = 0
   Insn 1073: point = 3255, n_alt = 0
  BB 75
   Insn 1071: point = 3256, n_alt = -1
   Insn 1070: point = 3256, n_alt = 0
   Insn 1069: point = 3257, n_alt = 0
  BB 74
   Insn 1066: point = 3258, n_alt = 0
   Insn 1065: point = 3258, n_alt = 3
   Insn 1064: point = 3258, n_alt = 2
   Insn 1063: point = 3258, n_alt = 2
   Insn 1062: point = 3258, n_alt = -2
   Insn 1061: point = 3259, n_alt = -2
   Insn 1060: point = 3260, n_alt = -2
   Insn 1059: point = 3261, n_alt = -2
   Insn 1058: point = 3262, n_alt = 3
   Insn 1057: point = 3263, n_alt = 3
   Insn 1056: point = 3264, n_alt = 3
   Insn 1055: point = 3265, n_alt = 3
   Insn 1054: point = 3267, n_alt = 0
   Insn 1053: point = 3269, n_alt = 0
   Insn 1052: point = 3271, n_alt = -2
   Insn 1051: point = 3273, n_alt = -2
   Insn 1050: point = 3275, n_alt = 0
   Insn 1049: point = 3277, n_alt = 0
   Insn 1048: point = 3278, n_alt = -2
   Insn 1047: point = 3280, n_alt = 0
   Insn 1046: point = 3282, n_alt = -2
   Insn 1045: point = 3283, n_alt = 3
   Insn 1044: point = 3285, n_alt = 0
   Insn 1043: point = 3287, n_alt = 0
   Insn 1042: point = 3288, n_alt = 0
   Insn 1041: point = 3288, n_alt = 3
   Insn 1040: point = 3288, n_alt = -2
   Insn 1039: point = 3289, n_alt = 2
   Insn 1038: point = 3289, n_alt = -2
   Insn 1037: point = 3290, n_alt = -2
   Insn 1036: point = 3291, n_alt = 3
   Insn 1035: point = 3292, n_alt = 3
   Insn 1034: point = 3293, n_alt = 3
  BB 73
   Insn 1031: point = 3294, n_alt = 1
  BB 72
   Insn 1029: point = 3294, n_alt = -1
   Insn 1028: point = 3294, n_alt = 0
   Insn 1027: point = 3295, n_alt = 0
  BB 70
   Insn 4185: point = 3296, n_alt = -1
   Insn 1017: point = 3296, n_alt = 1
   Insn 1016: point = 3297, n_alt = 1
   Insn 1015: point = 3299, n_alt = 0
  BB 71
   Insn 1024: point = 3300, n_alt = 1
   Insn 1023: point = 3301, n_alt = 1
   Insn 1022: point = 3303, n_alt = 0
  BB 69
   Insn 1013: point = 3304, n_alt = -1
   Insn 1012: point = 3304, n_alt = 1
   Insn 1011: point = 3304, n_alt = 1
   Insn 1010: point = 3304, n_alt = 1
   Insn 1009: point = 3305, n_alt = 0
   Insn 1008: point = 3306, n_alt = 1
   Insn 1007: point = 3307, n_alt = 0
   Insn 1006: point = 3309, n_alt = 0
   Insn 1005: point = 3310, n_alt = 1
   Insn 1004: point = 3311, n_alt = 0
   Insn 1003: point = 3313, n_alt = 7
   Insn 1002: point = 3315, n_alt = 4
   Insn 1001: point = 3316, n_alt = 1
   Insn 1000: point = 3317, n_alt = 0
   Insn 999: point = 3318, n_alt = 0
   Insn 998: point = 3319, n_alt = 1
   Insn 4470: point = 3320, n_alt = -2
   Insn 997: point = 3322, n_alt = 0
   Insn 4469: point = 3323, n_alt = -2
   Insn 996: point = 3325, n_alt = 2
   Insn 995: point = 3326, n_alt = 2
   Insn 994: point = 3327, n_alt = 2
   Insn 993: point = 3328, n_alt = 0
   Insn 992: point = 3328, n_alt = 0
   Insn 991: point = 3328, n_alt = 3
   Insn 990: point = 3328, n_alt = 2
   Insn 989: point = 3328, n_alt = 2
   Insn 988: point = 3328, n_alt = 4
   Insn 987: point = 3328, n_alt = 4
   Insn 986: point = 3328, n_alt = -2
   Insn 985: point = 3329, n_alt = -2
   Insn 984: point = 3330, n_alt = 0
   Insn 983: point = 3330, n_alt = 0
   Insn 982: point = 3330, n_alt = 3
   Insn 981: point = 3331, n_alt = 3
  BB 318
   Insn 4338: point = 3332, n_alt = -1
  BB 61
   Insn 885: point = 3332, n_alt = -1
   Insn 884: point = 3332, n_alt = 0
   Insn 883: point = 3333, n_alt = 0
   Insn 882: point = 3335, n_alt = 0
   Insn 881: point = 3336, n_alt = 0
  BB 68
   Insn 4183: point = 3337, n_alt = -1
   Insn 975: point = 3337, n_alt = 1
  BB 319
   Insn 4341: point = 3338, n_alt = -1
  BB 63
   Insn 893: point = 3339, n_alt = -1
   Insn 892: point = 3339, n_alt = 0
   Insn 891: point = 3340, n_alt = 0
   Insn 890: point = 3342, n_alt = 0
   Insn 889: point = 3343, n_alt = 0
  BB 67
   Insn 4181: point = 3344, n_alt = -1
   Insn 969: point = 3344, n_alt = 1
  BB 65
   Insn 4179: point = 3345, n_alt = -1
   Insn 952: point = 3345, n_alt = 8
   Insn 951: point = 3346, n_alt = 4
   Insn 4468: point = 3347, n_alt = -2
   Insn 950: point = 3349, n_alt = 2
   Insn 4467: point = 3350, n_alt = -2
   Insn 949: point = 3352, n_alt = 3
   Insn 948: point = 3354, n_alt = 0
   Insn 947: point = 3356, n_alt = 1
   Insn 946: point = 3358, n_alt = 0
   Insn 945: point = 3359, n_alt = 0
   Insn 944: point = 3361, n_alt = 1
   Insn 943: point = 3363, n_alt = 0
   Insn 942: point = 3364, n_alt = 2
   Insn 941: point = 3365, n_alt = -2
   Insn 940: point = 3367, n_alt = 1
   Insn 939: point = 3369, n_alt = 7
   Insn 938: point = 3371, n_alt = 0
   Insn 937: point = 3373, n_alt = 4
   Insn 936: point = 3374, n_alt = 3
   Insn 935: point = 3376, n_alt = 0
   Insn 934: point = 3378, n_alt = 1
   Insn 933: point = 3380, n_alt = 0
   Insn 932: point = 3381, n_alt = 0
   Insn 931: point = 3383, n_alt = 1
   Insn 930: point = 3385, n_alt = 0
   Insn 929: point = 3386, n_alt = 7
   Insn 928: point = 3388, n_alt = 0
   Insn 927: point = 3390, n_alt = 4
   Insn 926: point = 3391, n_alt = 3
   Insn 925: point = 3393, n_alt = 0
   Insn 924: point = 3395, n_alt = 1
   Insn 923: point = 3397, n_alt = 0
   Insn 922: point = 3398, n_alt = 0
   Insn 921: point = 3400, n_alt = 1
   Insn 920: point = 3402, n_alt = 0
  BB 66
   Insn 966: point = 3404, n_alt = 8
   Insn 965: point = 3405, n_alt = 7
   Insn 964: point = 3406, n_alt = 4
   Insn 963: point = 3407, n_alt = 3
   Insn 962: point = 3409, n_alt = 0
   Insn 961: point = 3411, n_alt = 1
   Insn 960: point = 3413, n_alt = 0
   Insn 959: point = 3414, n_alt = 0
   Insn 958: point = 3416, n_alt = 1
   Insn 957: point = 3418, n_alt = 0
  BB 64
   Insn 918: point = 3420, n_alt = -1
   Insn 917: point = 3420, n_alt = 1
   Insn 916: point = 3420, n_alt = 1
   Insn 915: point = 3421, n_alt = 0
   Insn 914: point = 3423, n_alt = 0
   Insn 913: point = 3425, n_alt = 0
   Insn 912: point = 3427, n_alt = 4
   Insn 911: point = 3428, n_alt = 3
   Insn 910: point = 3430, n_alt = 0
   Insn 909: point = 3432, n_alt = 1
   Insn 908: point = 3434, n_alt = 0
   Insn 907: point = 3435, n_alt = 0
   Insn 906: point = 3437, n_alt = 1
   Insn 905: point = 3439, n_alt = 0
   Insn 904: point = 3440, n_alt = 0
   Insn 903: point = 3442, n_alt = 0
   Insn 902: point = 3444, n_alt = 4
   Insn 901: point = 3445, n_alt = 3
   Insn 900: point = 3447, n_alt = 0
   Insn 899: point = 3449, n_alt = 1
   Insn 898: point = 3451, n_alt = 0
   Insn 897: point = 3452, n_alt = 0
   Insn 896: point = 3454, n_alt = 1
   Insn 895: point = 3456, n_alt = 0
  BB 62
   Insn 887: point = 3458, n_alt = 1
  BB 60
   Insn 879: point = 3459, n_alt = 1
   Insn 878: point = 3460, n_alt = 0
   Insn 877: point = 3461, n_alt = 0
  BB 59
   Insn 875: point = 3462, n_alt = -1
   Insn 874: point = 3462, n_alt = 0
   Insn 873: point = 3463, n_alt = 0
  BB 58
   Insn 870: point = 3464, n_alt = 0
   Insn 869: point = 3464, n_alt = 3
   Insn 868: point = 3464, n_alt = 2
   Insn 867: point = 3464, n_alt = 2
   Insn 866: point = 3464, n_alt = -2
   Insn 865: point = 3465, n_alt = -2
   Insn 864: point = 3466, n_alt = -2
   Insn 863: point = 3467, n_alt = -2
   Insn 862: point = 3468, n_alt = 3
   Insn 861: point = 3469, n_alt = 3
   Insn 860: point = 3470, n_alt = 3
   Insn 859: point = 3471, n_alt = 3
   Insn 858: point = 3473, n_alt = 0
   Insn 857: point = 3475, n_alt = 0
   Insn 856: point = 3477, n_alt = -2
   Insn 855: point = 3479, n_alt = -2
   Insn 854: point = 3481, n_alt = 0
   Insn 853: point = 3483, n_alt = 0
   Insn 852: point = 3484, n_alt = -2
   Insn 851: point = 3486, n_alt = 0
   Insn 850: point = 3488, n_alt = -2
   Insn 849: point = 3489, n_alt = 3
   Insn 848: point = 3491, n_alt = 0
   Insn 847: point = 3493, n_alt = 0
   Insn 846: point = 3494, n_alt = 0
   Insn 845: point = 3494, n_alt = 3
   Insn 844: point = 3494, n_alt = -2
   Insn 843: point = 3495, n_alt = 2
   Insn 842: point = 3495, n_alt = -2
   Insn 841: point = 3496, n_alt = -2
   Insn 840: point = 3497, n_alt = 3
   Insn 839: point = 3498, n_alt = 3
   Insn 838: point = 3499, n_alt = 3
   Insn 837: point = 3500, n_alt = 0
   Insn 836: point = 3501, n_alt = 1
   Insn 4466: point = 3502, n_alt = -2
   Insn 835: point = 3504, n_alt = 0
   Insn 4465: point = 3505, n_alt = -2
   Insn 834: point = 3507, n_alt = 2
   Insn 833: point = 3508, n_alt = 2
   Insn 832: point = 3509, n_alt = 2
   Insn 831: point = 3510, n_alt = 0
   Insn 830: point = 3510, n_alt = 0
   Insn 829: point = 3510, n_alt = 3
   Insn 828: point = 3510, n_alt = 2
   Insn 827: point = 3510, n_alt = 2
   Insn 826: point = 3510, n_alt = 4
   Insn 825: point = 3510, n_alt = 4
   Insn 824: point = 3510, n_alt = -2
   Insn 823: point = 3511, n_alt = -2
   Insn 822: point = 3512, n_alt = 0
   Insn 821: point = 3512, n_alt = 0
   Insn 820: point = 3512, n_alt = 3
   Insn 819: point = 3513, n_alt = 3
  BB 316
   Insn 4332: point = 3514, n_alt = -1
  BB 49
   Insn 734: point = 3514, n_alt = -1
   Insn 733: point = 3514, n_alt = 0
   Insn 732: point = 3515, n_alt = 0
   Insn 731: point = 3517, n_alt = 0
   Insn 730: point = 3518, n_alt = 0
  BB 57
   Insn 4177: point = 3519, n_alt = -1
   Insn 813: point = 3519, n_alt = 1
  BB 317
   Insn 4335: point = 3520, n_alt = -1
  BB 51
   Insn 742: point = 3521, n_alt = -1
   Insn 741: point = 3521, n_alt = 0
   Insn 740: point = 3522, n_alt = 0
   Insn 739: point = 3524, n_alt = 0
   Insn 738: point = 3525, n_alt = 0
  BB 56
   Insn 4175: point = 3526, n_alt = -1
   Insn 807: point = 3526, n_alt = 1
   Insn 806: point = 3526, n_alt = 8
   Insn 805: point = 3527, n_alt = 4
   Insn 804: point = 3528, n_alt = 3
   Insn 803: point = 3530, n_alt = 0
   Insn 802: point = 3532, n_alt = 1
   Insn 801: point = 3534, n_alt = 0
   Insn 800: point = 3535, n_alt = 0
   Insn 799: point = 3537, n_alt = 1
   Insn 798: point = 3539, n_alt = 0
  BB 55
   Insn 6: point = 3541, n_alt = -2
  BB 54
   Insn 794: point = 3544, n_alt = -1
   Insn 793: point = 3544, n_alt = 0
   Insn 792: point = 3545, n_alt = 0
   Insn 791: point = 3547, n_alt = 0
   Insn 790: point = 3549, n_alt = 0
   Insn 789: point = 3550, n_alt = 1
   Insn 788: point = 3550, n_alt = 0
   Insn 787: point = 3552, n_alt = 0
   Insn 786: point = 3553, n_alt = 1
   Insn 785: point = 3553, n_alt = 7
   Insn 784: point = 3555, n_alt = 0
   Insn 783: point = 3557, n_alt = 4
   Insn 782: point = 3558, n_alt = 3
   Insn 781: point = 3560, n_alt = 0
   Insn 780: point = 3562, n_alt = 1
   Insn 779: point = 3564, n_alt = 0
   Insn 778: point = 3565, n_alt = 0
   Insn 777: point = 3567, n_alt = 1
   Insn 776: point = 3569, n_alt = 0
  BB 53
   Insn 5: point = 3571, n_alt = -2
  BB 52
   Insn 772: point = 3574, n_alt = -1
   Insn 771: point = 3574, n_alt = 0
   Insn 770: point = 3575, n_alt = 0
   Insn 769: point = 3577, n_alt = 0
   Insn 768: point = 3579, n_alt = 0
   Insn 767: point = 3580, n_alt = 1
   Insn 766: point = 3580, n_alt = 0
   Insn 765: point = 3582, n_alt = 0
   Insn 764: point = 3583, n_alt = 1
   Insn 763: point = 3583, n_alt = 7
   Insn 762: point = 3585, n_alt = 0
   Insn 761: point = 3587, n_alt = 4
   Insn 760: point = 3588, n_alt = 3
   Insn 759: point = 3590, n_alt = 0
   Insn 758: point = 3592, n_alt = 1
   Insn 757: point = 3594, n_alt = 0
   Insn 756: point = 3595, n_alt = 0
   Insn 755: point = 3597, n_alt = 1
   Insn 754: point = 3599, n_alt = 0
   Insn 753: point = 3600, n_alt = 7
   Insn 752: point = 3602, n_alt = 0
   Insn 751: point = 3604, n_alt = 4
   Insn 750: point = 3605, n_alt = 3
   Insn 749: point = 3607, n_alt = 0
   Insn 748: point = 3609, n_alt = 1
   Insn 747: point = 3611, n_alt = 0
   Insn 746: point = 3612, n_alt = 0
   Insn 745: point = 3614, n_alt = 1
   Insn 744: point = 3616, n_alt = 0
  BB 50
   Insn 736: point = 3618, n_alt = 1
  BB 48
   Insn 728: point = 3619, n_alt = 1
   Insn 727: point = 3620, n_alt = 0
   Insn 726: point = 3621, n_alt = 0
  BB 47
   Insn 724: point = 3622, n_alt = -1
   Insn 723: point = 3622, n_alt = 0
   Insn 722: point = 3623, n_alt = 0
  BB 46
   Insn 719: point = 3624, n_alt = 0
   Insn 718: point = 3624, n_alt = 3
   Insn 717: point = 3624, n_alt = 2
   Insn 716: point = 3624, n_alt = 2
   Insn 715: point = 3624, n_alt = -2
   Insn 714: point = 3625, n_alt = -2
   Insn 713: point = 3626, n_alt = -2
   Insn 712: point = 3627, n_alt = -2
   Insn 711: point = 3628, n_alt = 3
   Insn 710: point = 3629, n_alt = 3
   Insn 709: point = 3630, n_alt = 3
   Insn 708: point = 3631, n_alt = 3
   Insn 707: point = 3633, n_alt = 0
   Insn 706: point = 3635, n_alt = 0
   Insn 705: point = 3637, n_alt = -2
   Insn 704: point = 3639, n_alt = -2
   Insn 703: point = 3641, n_alt = 0
   Insn 702: point = 3643, n_alt = 0
   Insn 701: point = 3644, n_alt = -2
   Insn 700: point = 3646, n_alt = 0
   Insn 699: point = 3648, n_alt = -2
   Insn 698: point = 3649, n_alt = 3
   Insn 697: point = 3651, n_alt = 0
   Insn 696: point = 3653, n_alt = 0
   Insn 695: point = 3654, n_alt = 0
   Insn 694: point = 3654, n_alt = 3
   Insn 693: point = 3654, n_alt = -2
   Insn 692: point = 3655, n_alt = 2
   Insn 691: point = 3655, n_alt = -2
   Insn 690: point = 3656, n_alt = -2
   Insn 689: point = 3657, n_alt = 3
   Insn 688: point = 3658, n_alt = 3
   Insn 687: point = 3659, n_alt = 3
   Insn 686: point = 3660, n_alt = 0
   Insn 685: point = 3661, n_alt = 1
   Insn 4464: point = 3662, n_alt = -2
   Insn 684: point = 3664, n_alt = 0
   Insn 4463: point = 3665, n_alt = -2
   Insn 683: point = 3667, n_alt = 2
   Insn 682: point = 3668, n_alt = 2
   Insn 681: point = 3669, n_alt = 2
   Insn 680: point = 3670, n_alt = 0
   Insn 679: point = 3670, n_alt = 0
   Insn 678: point = 3670, n_alt = 3
   Insn 677: point = 3670, n_alt = 2
   Insn 676: point = 3670, n_alt = 2
   Insn 675: point = 3670, n_alt = 4
   Insn 674: point = 3670, n_alt = 4
   Insn 673: point = 3670, n_alt = -2
   Insn 672: point = 3671, n_alt = -2
   Insn 671: point = 3672, n_alt = 0
   Insn 670: point = 3672, n_alt = 0
   Insn 669: point = 3672, n_alt = 3
   Insn 668: point = 3673, n_alt = 3
  BB 45
   Insn 666: point = 3674, n_alt = -1
   Insn 665: point = 3674, n_alt = 0
   Insn 664: point = 3675, n_alt = 0
  BB 44
   Insn 661: point = 3676, n_alt = 0
   Insn 660: point = 3676, n_alt = 3
   Insn 659: point = 3676, n_alt = 2
   Insn 658: point = 3676, n_alt = 2
   Insn 657: point = 3676, n_alt = -2
   Insn 656: point = 3677, n_alt = -2
   Insn 655: point = 3678, n_alt = -2
   Insn 654: point = 3679, n_alt = -2
   Insn 653: point = 3680, n_alt = 3
   Insn 652: point = 3681, n_alt = 3
   Insn 651: point = 3682, n_alt = 3
   Insn 650: point = 3683, n_alt = 3
   Insn 649: point = 3685, n_alt = 0
   Insn 648: point = 3687, n_alt = 0
   Insn 647: point = 3689, n_alt = -2
   Insn 646: point = 3691, n_alt = -2
   Insn 645: point = 3693, n_alt = 0
   Insn 644: point = 3695, n_alt = 0
   Insn 643: point = 3696, n_alt = -2
   Insn 642: point = 3698, n_alt = 0
   Insn 641: point = 3700, n_alt = -2
   Insn 640: point = 3701, n_alt = 3
   Insn 639: point = 3703, n_alt = 0
   Insn 638: point = 3705, n_alt = 0
   Insn 637: point = 3706, n_alt = 0
   Insn 636: point = 3706, n_alt = 3
   Insn 635: point = 3706, n_alt = -2
   Insn 634: point = 3707, n_alt = 2
   Insn 633: point = 3707, n_alt = -2
   Insn 632: point = 3708, n_alt = -2
   Insn 631: point = 3709, n_alt = 3
   Insn 630: point = 3710, n_alt = 3
   Insn 629: point = 3711, n_alt = 3
   Insn 628: point = 3712, n_alt = 0
   Insn 627: point = 3713, n_alt = 1
   Insn 4462: point = 3714, n_alt = -2
   Insn 626: point = 3716, n_alt = 0
   Insn 4461: point = 3717, n_alt = -2
   Insn 625: point = 3719, n_alt = 2
   Insn 624: point = 3720, n_alt = 2
   Insn 623: point = 3721, n_alt = 2
   Insn 622: point = 3722, n_alt = 0
   Insn 621: point = 3722, n_alt = 0
   Insn 620: point = 3722, n_alt = 3
   Insn 619: point = 3722, n_alt = 2
   Insn 618: point = 3722, n_alt = 2
   Insn 617: point = 3722, n_alt = 4
   Insn 616: point = 3722, n_alt = 4
   Insn 615: point = 3722, n_alt = -2
   Insn 614: point = 3723, n_alt = -2
   Insn 613: point = 3724, n_alt = 0
   Insn 612: point = 3724, n_alt = 0
   Insn 611: point = 3724, n_alt = 3
   Insn 610: point = 3725, n_alt = 3
  BB 43
   Insn 608: point = 3726, n_alt = -1
   Insn 607: point = 3726, n_alt = 0
   Insn 606: point = 3727, n_alt = 0
  BB 42
   Insn 603: point = 3728, n_alt = 0
   Insn 602: point = 3728, n_alt = 3
   Insn 601: point = 3728, n_alt = 2
   Insn 600: point = 3728, n_alt = 2
   Insn 599: point = 3728, n_alt = -2
   Insn 598: point = 3729, n_alt = -2
   Insn 597: point = 3730, n_alt = -2
   Insn 596: point = 3731, n_alt = -2
   Insn 595: point = 3732, n_alt = 3
   Insn 594: point = 3733, n_alt = 3
   Insn 593: point = 3734, n_alt = 3
   Insn 592: point = 3735, n_alt = 3
   Insn 591: point = 3737, n_alt = 0
   Insn 590: point = 3739, n_alt = 0
   Insn 589: point = 3741, n_alt = -2
   Insn 588: point = 3743, n_alt = -2
   Insn 587: point = 3745, n_alt = 0
   Insn 586: point = 3747, n_alt = 0
   Insn 585: point = 3748, n_alt = -2
   Insn 584: point = 3750, n_alt = 0
   Insn 583: point = 3752, n_alt = -2
   Insn 582: point = 3753, n_alt = 3
   Insn 581: point = 3755, n_alt = 0
   Insn 580: point = 3757, n_alt = 0
   Insn 579: point = 3758, n_alt = 0
   Insn 578: point = 3758, n_alt = 3
   Insn 577: point = 3758, n_alt = -2
   Insn 576: point = 3759, n_alt = 2
   Insn 575: point = 3759, n_alt = -2
   Insn 574: point = 3760, n_alt = -2
   Insn 573: point = 3761, n_alt = 3
   Insn 572: point = 3762, n_alt = 3
   Insn 571: point = 3763, n_alt = 3
   Insn 570: point = 3764, n_alt = 0
   Insn 569: point = 3765, n_alt = 1
   Insn 4460: point = 3766, n_alt = -2
   Insn 568: point = 3768, n_alt = 0
   Insn 4459: point = 3769, n_alt = -2
   Insn 567: point = 3771, n_alt = 2
   Insn 566: point = 3772, n_alt = 2
   Insn 565: point = 3773, n_alt = 2
   Insn 564: point = 3774, n_alt = 0
   Insn 563: point = 3774, n_alt = 0
   Insn 562: point = 3774, n_alt = 3
   Insn 561: point = 3774, n_alt = 2
   Insn 560: point = 3774, n_alt = 2
   Insn 559: point = 3774, n_alt = 4
   Insn 558: point = 3774, n_alt = 4
   Insn 557: point = 3774, n_alt = -2
   Insn 556: point = 3775, n_alt = -2
   Insn 555: point = 3776, n_alt = 0
   Insn 554: point = 3776, n_alt = 0
   Insn 553: point = 3776, n_alt = 3
   Insn 552: point = 3777, n_alt = 3
  BB 41
   Insn 550: point = 3778, n_alt = -1
   Insn 549: point = 3778, n_alt = 0
   Insn 548: point = 3779, n_alt = 0
  BB 40
   Insn 545: point = 3780, n_alt = 0
   Insn 544: point = 3780, n_alt = 3
   Insn 543: point = 3780, n_alt = 2
   Insn 542: point = 3780, n_alt = 2
   Insn 541: point = 3780, n_alt = -2
   Insn 540: point = 3781, n_alt = -2
   Insn 539: point = 3782, n_alt = -2
   Insn 538: point = 3783, n_alt = -2
   Insn 537: point = 3784, n_alt = 3
   Insn 536: point = 3785, n_alt = 3
   Insn 535: point = 3786, n_alt = 3
   Insn 534: point = 3787, n_alt = 3
   Insn 533: point = 3789, n_alt = 0
   Insn 532: point = 3791, n_alt = 0
   Insn 531: point = 3793, n_alt = -2
   Insn 530: point = 3795, n_alt = -2
   Insn 529: point = 3797, n_alt = 0
   Insn 528: point = 3799, n_alt = 0
   Insn 527: point = 3800, n_alt = -2
   Insn 526: point = 3802, n_alt = 0
   Insn 525: point = 3804, n_alt = -2
   Insn 524: point = 3805, n_alt = 3
   Insn 523: point = 3807, n_alt = 0
   Insn 522: point = 3809, n_alt = 0
   Insn 521: point = 3810, n_alt = 0
   Insn 520: point = 3811, n_alt = 1
   Insn 4458: point = 3812, n_alt = -2
   Insn 519: point = 3814, n_alt = 0
   Insn 4457: point = 3815, n_alt = -2
   Insn 518: point = 3817, n_alt = 2
   Insn 517: point = 3818, n_alt = 2
   Insn 516: point = 3819, n_alt = 2
   Insn 515: point = 3820, n_alt = 0
   Insn 514: point = 3820, n_alt = 0
   Insn 513: point = 3820, n_alt = 3
   Insn 512: point = 3820, n_alt = 2
   Insn 511: point = 3820, n_alt = 2
   Insn 510: point = 3820, n_alt = 4
   Insn 509: point = 3820, n_alt = 4
   Insn 508: point = 3820, n_alt = -2
   Insn 507: point = 3821, n_alt = -2
   Insn 506: point = 3822, n_alt = 0
   Insn 505: point = 3822, n_alt = 0
   Insn 504: point = 3822, n_alt = 3
   Insn 503: point = 3823, n_alt = 3
   Insn 502: point = 3824, n_alt = 0
   Insn 501: point = 3824, n_alt = 3
   Insn 500: point = 3824, n_alt = 4
  BB 39
   Insn 498: point = 3824, n_alt = -1
   Insn 497: point = 3824, n_alt = 0
   Insn 496: point = 3825, n_alt = 0
  BB 38
   Insn 493: point = 3826, n_alt = 0
   Insn 492: point = 3826, n_alt = 3
   Insn 491: point = 3826, n_alt = 2
   Insn 490: point = 3826, n_alt = 2
   Insn 489: point = 3826, n_alt = -2
   Insn 488: point = 3827, n_alt = -2
   Insn 487: point = 3828, n_alt = -2
   Insn 486: point = 3829, n_alt = -2
   Insn 485: point = 3830, n_alt = 3
   Insn 484: point = 3831, n_alt = 3
   Insn 483: point = 3832, n_alt = 3
   Insn 482: point = 3833, n_alt = 3
   Insn 481: point = 3835, n_alt = 0
   Insn 480: point = 3837, n_alt = 0
   Insn 479: point = 3839, n_alt = -2
   Insn 478: point = 3841, n_alt = -2
   Insn 477: point = 3843, n_alt = 0
   Insn 476: point = 3845, n_alt = 0
   Insn 475: point = 3846, n_alt = -2
   Insn 474: point = 3848, n_alt = 0
   Insn 473: point = 3850, n_alt = -2
   Insn 472: point = 3851, n_alt = 3
   Insn 471: point = 3853, n_alt = 0
   Insn 470: point = 3855, n_alt = 0
   Insn 469: point = 3856, n_alt = 0
   Insn 468: point = 3857, n_alt = 1
   Insn 4456: point = 3858, n_alt = -2
   Insn 467: point = 3860, n_alt = 0
   Insn 4455: point = 3861, n_alt = -2
   Insn 466: point = 3863, n_alt = 2
   Insn 465: point = 3864, n_alt = 2
   Insn 464: point = 3865, n_alt = 2
  BB 314
   Insn 4326: point = 3866, n_alt = -1
  BB 33
   Insn 418: point = 3866, n_alt = -1
   Insn 417: point = 3866, n_alt = 0
   Insn 416: point = 3867, n_alt = 0
   Insn 415: point = 3869, n_alt = 0
   Insn 414: point = 3870, n_alt = 0
  BB 37
   Insn 4173: point = 3871, n_alt = -1
   Insn 456: point = 3871, n_alt = 1
  BB 315
   Insn 4329: point = 3872, n_alt = -1
  BB 35
   Insn 428: point = 3873, n_alt = -1
   Insn 427: point = 3873, n_alt = 0
   Insn 426: point = 3874, n_alt = 0
   Insn 425: point = 3876, n_alt = 0
   Insn 424: point = 3877, n_alt = 0
  BB 36
   Insn 4171: point = 3878, n_alt = -1
   Insn 450: point = 3878, n_alt = 1
   Insn 449: point = 3878, n_alt = 8
   Insn 448: point = 3879, n_alt = 3
   Insn 447: point = 3880, n_alt = 0
   Insn 446: point = 3882, n_alt = 2
   Insn 445: point = 3883, n_alt = 0
   Insn 444: point = 3885, n_alt = 1
   Insn 443: point = 3887, n_alt = 0
   Insn 442: point = 3888, n_alt = 3
   Insn 441: point = 3890, n_alt = 2
   Insn 440: point = 3892, n_alt = 1
   Insn 439: point = 3894, n_alt = 0
   Insn 438: point = 3895, n_alt = 7
   Insn 437: point = 3897, n_alt = 3
   Insn 436: point = 3898, n_alt = 0
   Insn 435: point = 3900, n_alt = 1
   Insn 434: point = 3902, n_alt = 0
   Insn 433: point = 3903, n_alt = 3
   Insn 432: point = 3905, n_alt = 2
   Insn 431: point = 3907, n_alt = 1
   Insn 430: point = 3909, n_alt = 0
  BB 34
   Insn 422: point = 3911, n_alt = 1
   Insn 421: point = 3911, n_alt = 0
   Insn 420: point = 3913, n_alt = 3
  BB 32
   Insn 412: point = 3915, n_alt = 1
   Insn 411: point = 3915, n_alt = 0
   Insn 410: point = 3917, n_alt = 3
  BB 31
   Insn 408: point = 3919, n_alt = -1
   Insn 407: point = 3919, n_alt = 0
   Insn 406: point = 3920, n_alt = 0
  BB 312
   Insn 4320: point = 3922, n_alt = -1
  BB 26
   Insn 360: point = 3923, n_alt = -1
   Insn 359: point = 3923, n_alt = 0
   Insn 358: point = 3924, n_alt = 0
   Insn 357: point = 3926, n_alt = 0
   Insn 356: point = 3927, n_alt = 0
  BB 30
   Insn 4169: point = 3928, n_alt = -1
   Insn 398: point = 3928, n_alt = 1
  BB 313
   Insn 4323: point = 3929, n_alt = -1
  BB 28
   Insn 370: point = 3930, n_alt = -1
   Insn 369: point = 3930, n_alt = 0
   Insn 368: point = 3931, n_alt = 0
   Insn 367: point = 3933, n_alt = 0
   Insn 366: point = 3934, n_alt = 0
  BB 29
   Insn 4167: point = 3935, n_alt = -1
   Insn 392: point = 3935, n_alt = 1
   Insn 391: point = 3935, n_alt = 8
   Insn 390: point = 3936, n_alt = 3
   Insn 389: point = 3937, n_alt = 0
   Insn 388: point = 3939, n_alt = 2
   Insn 387: point = 3940, n_alt = 0
   Insn 386: point = 3942, n_alt = 1
   Insn 385: point = 3944, n_alt = 0
   Insn 384: point = 3945, n_alt = 3
   Insn 383: point = 3947, n_alt = 2
   Insn 382: point = 3949, n_alt = 1
   Insn 381: point = 3951, n_alt = 0
   Insn 380: point = 3952, n_alt = 7
   Insn 379: point = 3954, n_alt = 3
   Insn 378: point = 3955, n_alt = 0
   Insn 377: point = 3957, n_alt = 1
   Insn 376: point = 3959, n_alt = 0
   Insn 375: point = 3960, n_alt = 3
   Insn 374: point = 3962, n_alt = 2
   Insn 373: point = 3964, n_alt = 1
   Insn 372: point = 3966, n_alt = 0
  BB 27
   Insn 364: point = 3968, n_alt = 1
   Insn 363: point = 3968, n_alt = 0
   Insn 362: point = 3970, n_alt = 3
  BB 25
   Insn 354: point = 3972, n_alt = 1
   Insn 353: point = 3972, n_alt = 0
   Insn 352: point = 3974, n_alt = 3
  BB 24
   Insn 350: point = 3976, n_alt = -1
   Insn 349: point = 3976, n_alt = 0
   Insn 348: point = 3977, n_alt = 0
   Insn 347: point = 3978, n_alt = 0
   Insn 346: point = 3978, n_alt = 0
   Insn 345: point = 3978, n_alt = 3
   Insn 344: point = 3978, n_alt = 2
   Insn 343: point = 3978, n_alt = 2
   Insn 342: point = 3978, n_alt = 4
   Insn 341: point = 3978, n_alt = 4
   Insn 340: point = 3978, n_alt = -2
   Insn 339: point = 3979, n_alt = -2
   Insn 338: point = 3980, n_alt = 0
   Insn 337: point = 3980, n_alt = 0
   Insn 336: point = 3980, n_alt = 3
   Insn 335: point = 3981, n_alt = 3
  BB 23
   Insn 333: point = 3983, n_alt = -1
   Insn 332: point = 3983, n_alt = 0
   Insn 331: point = 3984, n_alt = 0
  BB 22
   Insn 328: point = 3986, n_alt = 0
   Insn 327: point = 3986, n_alt = 3
   Insn 326: point = 3986, n_alt = 2
   Insn 325: point = 3986, n_alt = 2
   Insn 324: point = 3986, n_alt = -2
   Insn 323: point = 3987, n_alt = -2
   Insn 322: point = 3988, n_alt = -2
   Insn 321: point = 3989, n_alt = -2
   Insn 320: point = 3990, n_alt = 3
   Insn 319: point = 3991, n_alt = 3
   Insn 318: point = 3992, n_alt = 3
   Insn 317: point = 3993, n_alt = 3
   Insn 316: point = 3995, n_alt = 0
   Insn 315: point = 3997, n_alt = 0
   Insn 314: point = 3999, n_alt = -2
   Insn 313: point = 4001, n_alt = -2
   Insn 312: point = 4003, n_alt = 0
   Insn 311: point = 4005, n_alt = 0
   Insn 310: point = 4006, n_alt = -2
   Insn 309: point = 4008, n_alt = 0
   Insn 308: point = 4010, n_alt = -2
   Insn 307: point = 4011, n_alt = 3
   Insn 306: point = 4013, n_alt = 0
   Insn 305: point = 4015, n_alt = 0
   Insn 304: point = 4016, n_alt = 0
   Insn 303: point = 4017, n_alt = 1
   Insn 4454: point = 4018, n_alt = -2
   Insn 302: point = 4020, n_alt = 0
   Insn 4453: point = 4021, n_alt = -2
   Insn 301: point = 4023, n_alt = 2
   Insn 300: point = 4024, n_alt = 2
   Insn 299: point = 4025, n_alt = 2
   Insn 298: point = 4026, n_alt = 0
   Insn 297: point = 4026, n_alt = 0
   Insn 296: point = 4026, n_alt = 3
   Insn 295: point = 4026, n_alt = 2
   Insn 294: point = 4026, n_alt = 2
   Insn 293: point = 4026, n_alt = 4
   Insn 292: point = 4026, n_alt = 4
   Insn 291: point = 4026, n_alt = -2
   Insn 290: point = 4027, n_alt = -2
   Insn 289: point = 4028, n_alt = 0
   Insn 288: point = 4028, n_alt = 0
   Insn 287: point = 4028, n_alt = 3
   Insn 286: point = 4029, n_alt = 3
  BB 21
   Insn 284: point = 4031, n_alt = -1
   Insn 283: point = 4031, n_alt = 0
   Insn 282: point = 4032, n_alt = 0
   Insn 281: point = 4033, n_alt = 0
   Insn 280: point = 4033, n_alt = 0
   Insn 279: point = 4033, n_alt = 3
   Insn 278: point = 4033, n_alt = -2
   Insn 277: point = 4034, n_alt = -2
   Insn 276: point = 4035, n_alt = -2
   Insn 275: point = 4036, n_alt = -2
   Insn 274: point = 4037, n_alt = 4
   Insn 273: point = 4037, n_alt = 4
   Insn 272: point = 4037, n_alt = 0
   Insn 4452: point = 4038, n_alt = 4
   Insn 271: point = 4039, n_alt = 0
   Insn 270: point = 4039, n_alt = 3
   Insn 269: point = 4040, n_alt = 3
   Insn 268: point = 4041, n_alt = 3
   Insn 267: point = 4042, n_alt = 3
   Insn 266: point = 4043, n_alt = 1
  BB 20
   Insn 263: point = 4044, n_alt = -1
   Insn 262: point = 4044, n_alt = 0
   Insn 261: point = 4045, n_alt = 0
   Insn 260: point = 4047, n_alt = 0
   Insn 259: point = 4049, n_alt = -2
   Insn 258: point = 4051, n_alt = -2
   Insn 257: point = 4053, n_alt = 0
   Insn 256: point = 4055, n_alt = 0
   Insn 255: point = 4056, n_alt = -2
   Insn 254: point = 4058, n_alt = 0
   Insn 253: point = 4060, n_alt = -2
   Insn 252: point = 4061, n_alt = 3
   Insn 251: point = 4063, n_alt = 0
   Insn 250: point = 4065, n_alt = 0
  BB 19
   Insn 248: point = 4067, n_alt = -1
   Insn 247: point = 4067, n_alt = 0
   Insn 246: point = 4068, n_alt = 0
   Insn 245: point = 4070, n_alt = 0
   Insn 244: point = 4072, n_alt = -2
   Insn 243: point = 4074, n_alt = -2
   Insn 242: point = 4076, n_alt = 0
   Insn 241: point = 4078, n_alt = 0
   Insn 240: point = 4079, n_alt = -2
   Insn 239: point = 4081, n_alt = 0
   Insn 238: point = 4083, n_alt = -2
   Insn 237: point = 4084, n_alt = 3
   Insn 236: point = 4086, n_alt = 0
   Insn 235: point = 4088, n_alt = 0
  BB 18
   Insn 232: point = 4090, n_alt = -1
   Insn 231: point = 4090, n_alt = 0
   Insn 230: point = 4091, n_alt = 0
  BB 17
   Insn 228: point = 4093, n_alt = -1
   Insn 227: point = 4093, n_alt = 0
   Insn 226: point = 4094, n_alt = 0
  BB 16
   Insn 223: point = 4096, n_alt = 0
   Insn 222: point = 4096, n_alt = 3
   Insn 221: point = 4096, n_alt = 2
   Insn 220: point = 4096, n_alt = 2
   Insn 219: point = 4096, n_alt = -2
   Insn 218: point = 4097, n_alt = -2
   Insn 217: point = 4098, n_alt = -2
   Insn 216: point = 4099, n_alt = -2
   Insn 215: point = 4100, n_alt = 3
   Insn 214: point = 4101, n_alt = 3
   Insn 213: point = 4102, n_alt = 3
   Insn 212: point = 4103, n_alt = 3
   Insn 211: point = 4105, n_alt = 0
   Insn 210: point = 4107, n_alt = 0
   Insn 209: point = 4109, n_alt = -2
   Insn 208: point = 4111, n_alt = -2
   Insn 207: point = 4113, n_alt = 0
   Insn 206: point = 4115, n_alt = 0
   Insn 205: point = 4116, n_alt = -2
   Insn 204: point = 4118, n_alt = 0
   Insn 203: point = 4120, n_alt = -2
   Insn 202: point = 4121, n_alt = 3
   Insn 201: point = 4123, n_alt = 0
   Insn 200: point = 4125, n_alt = 0
   Insn 199: point = 4126, n_alt = 1
   Insn 198: point = 4126, n_alt = 1
   Insn 197: point = 4126, n_alt = 0
   Insn 196: point = 4127, n_alt = 1
   Insn 4451: point = 4128, n_alt = -2
   Insn 195: point = 4130, n_alt = 0
   Insn 4450: point = 4131, n_alt = -2
   Insn 194: point = 4133, n_alt = 2
   Insn 193: point = 4134, n_alt = 2
   Insn 192: point = 4135, n_alt = 2
   Insn 191: point = 4136, n_alt = 0
   Insn 190: point = 4136, n_alt = 0
   Insn 189: point = 4136, n_alt = 3
   Insn 188: point = 4136, n_alt = 2
   Insn 187: point = 4136, n_alt = 2
   Insn 186: point = 4136, n_alt = 4
   Insn 185: point = 4136, n_alt = 4
   Insn 184: point = 4136, n_alt = -2
   Insn 183: point = 4137, n_alt = -2
   Insn 182: point = 4138, n_alt = 0
   Insn 181: point = 4138, n_alt = 0
   Insn 180: point = 4138, n_alt = 3
   Insn 179: point = 4139, n_alt = 3
  BB 310
   Insn 4314: point = 4141, n_alt = -1
  BB 11
   Insn 137: point = 4142, n_alt = -1
   Insn 136: point = 4142, n_alt = 0
   Insn 135: point = 4143, n_alt = 0
   Insn 134: point = 4145, n_alt = 0
   Insn 133: point = 4146, n_alt = 0
  BB 15
   Insn 4165: point = 4147, n_alt = -1
   Insn 173: point = 4147, n_alt = 1
  BB 311
   Insn 4317: point = 4148, n_alt = -1
  BB 13
   Insn 145: point = 4149, n_alt = -1
   Insn 144: point = 4149, n_alt = 0
   Insn 143: point = 4150, n_alt = 0
   Insn 142: point = 4152, n_alt = 0
   Insn 141: point = 4153, n_alt = 0
  BB 14
   Insn 4163: point = 4154, n_alt = -1
   Insn 167: point = 4154, n_alt = 1
   Insn 166: point = 4154, n_alt = 8
   Insn 165: point = 4155, n_alt = 4
   Insn 164: point = 4156, n_alt = 1
   Insn 163: point = 4158, n_alt = 7
   Insn 162: point = 4159, n_alt = 3
   Insn 161: point = 4161, n_alt = 0
   Insn 160: point = 4163, n_alt = 1
   Insn 159: point = 4165, n_alt = 0
   Insn 158: point = 4166, n_alt = 0
   Insn 157: point = 4168, n_alt = 1
   Insn 156: point = 4170, n_alt = 0
   Insn 155: point = 4171, n_alt = 7
   Insn 154: point = 4173, n_alt = 4
   Insn 153: point = 4174, n_alt = 3
   Insn 152: point = 4176, n_alt = 0
   Insn 151: point = 4178, n_alt = 1
   Insn 150: point = 4180, n_alt = 0
   Insn 149: point = 4181, n_alt = 0
   Insn 148: point = 4183, n_alt = 1
   Insn 147: point = 4185, n_alt = 0
  BB 12
   Insn 139: point = 4187, n_alt = 1
  BB 10
   Insn 131: point = 4188, n_alt = 1
   Insn 130: point = 4189, n_alt = 0
   Insn 129: point = 4190, n_alt = 0
   Insn 128: point = 4191, n_alt = 0
   Insn 127: point = 4191, n_alt = 3
   Insn 126: point = 4191, n_alt = 4
   Insn 125: point = 4191, n_alt = 4
  BB 308
   Insn 4308: point = 4192, n_alt = -1
  BB 5
   Insn 93: point = 4193, n_alt = -1
   Insn 92: point = 4193, n_alt = 0
   Insn 91: point = 4194, n_alt = 0
   Insn 90: point = 4196, n_alt = 0
   Insn 89: point = 4197, n_alt = 0
  BB 9
   Insn 4161: point = 4198, n_alt = -1
   Insn 119: point = 4198, n_alt = 1
  BB 309
   Insn 4311: point = 4199, n_alt = -1
  BB 7
   Insn 101: point = 4200, n_alt = -1
   Insn 100: point = 4200, n_alt = 0
   Insn 99: point = 4201, n_alt = 0
   Insn 98: point = 4203, n_alt = 0
   Insn 97: point = 4204, n_alt = 0
  BB 8
   Insn 4159: point = 4205, n_alt = -1
   Insn 113: point = 4205, n_alt = 1
   Insn 112: point = 4205, n_alt = 8
   Insn 111: point = 4206, n_alt = 4
   Insn 110: point = 4207, n_alt = 7
   Insn 109: point = 4208, n_alt = 3
   Insn 108: point = 4210, n_alt = 0
   Insn 107: point = 4212, n_alt = 1
   Insn 106: point = 4214, n_alt = 0
   Insn 105: point = 4215, n_alt = 0
   Insn 104: point = 4217, n_alt = 1
   Insn 103: point = 4219, n_alt = 0
  BB 6
   Insn 95: point = 4221, n_alt = 1
  BB 4
   Insn 87: point = 4222, n_alt = 1
   Insn 86: point = 4223, n_alt = 0
   Insn 85: point = 4224, n_alt = 0
  BB 3
   Insn 83: point = 4226, n_alt = -1
   Insn 82: point = 4226, n_alt = 0
   Insn 81: point = 4227, n_alt = 0
  BB 2
   Insn 79: point = 4229, n_alt = -1
   Insn 78: point = 4229, n_alt = 0
   Insn 77: point = 4230, n_alt = 0
   Insn 75: point = 4231, n_alt = 5
   Insn 74: point = 4232, n_alt = -2
   Insn 73: point = 4234, n_alt = -2
   Insn 72: point = 4235, n_alt = 0
   Insn 71: point = 4235, n_alt = -2
   Insn 70: point = 4236, n_alt = 1
   Insn 68: point = 4238, n_alt = 0
   Insn 69: point = 4238, n_alt = 2
   Insn 67: point = 4239, n_alt = -2
   Insn 66: point = 4241, n_alt = 0
   Insn 62: point = 4243, n_alt = 2
   Insn 61: point = 4244, n_alt = 3
   Insn 60: point = 4245, n_alt = -2
   Insn 58: point = 4246, n_alt = 1
   Insn 56: point = 4248, n_alt = 0
   Insn 57: point = 4248, n_alt = 2
   Insn 55: point = 4249, n_alt = 2
   Insn 54: point = 4251, n_alt = 5
   Insn 53: point = 4252, n_alt = 1
   Insn 52: point = 4254, n_alt = 0
   Insn 51: point = 4256, n_alt = 3
   Insn 50: point = 4257, n_alt = 1
   Insn 48: point = 4259, n_alt = 0
   Insn 49: point = 4259, n_alt = 2
   Insn 47: point = 4260, n_alt = 3
   Insn 46: point = 4261, n_alt = 5
   Insn 45: point = 4262, n_alt = 0
   Insn 44: point = 4264, n_alt = 0
   Insn 43: point = 4266, n_alt = 3
   Insn 4449: point = 4267, n_alt = -2
   Insn 42: point = 4269, n_alt = 0
   Insn 4448: point = 4269, n_alt = -2
   Insn 41: point = 4270, n_alt = 5
   Insn 40: point = 4271, n_alt = -2
   Insn 39: point = 4273, n_alt = -2
   Insn 38: point = 4274, n_alt = 0
   Insn 37: point = 4274, n_alt = -2
   Insn 36: point = 4275, n_alt = 1
   Insn 34: point = 4277, n_alt = 0
   Insn 35: point = 4277, n_alt = 2
   Insn 33: point = 4278, n_alt = -2
   Insn 32: point = 4280, n_alt = 0
   Insn 28: point = 4282, n_alt = 2
   Insn 27: point = 4283, n_alt = 3
   Insn 26: point = 4284, n_alt = -2
   Insn 24: point = 4285, n_alt = 1
   Insn 22: point = 4287, n_alt = 0
   Insn 23: point = 4287, n_alt = 2
   Insn 4447: point = 4288, n_alt = -2
   Insn 21: point = 4290, n_alt = 2
   Insn 4446: point = 4290, n_alt = -2
   Insn 20: point = 4291, n_alt = 5
   Insn 19: point = 4292, n_alt = 0
   Insn 18: point = 4294, n_alt = 0
   Insn 17: point = 4296, n_alt = 3
   Insn 4445: point = 4297, n_alt = -2
   Insn 16: point = 4299, n_alt = 0
   Insn 4444: point = 4300, n_alt = -2
   Insn 14: point = 4302, n_alt = 0
   Insn 15: point = 4302, n_alt = 2
   Insn 13: point = 4303, n_alt = 3
   Insn 12: point = 4304, n_alt = 5
   Insn 11: point = 4305, n_alt = 0
   Insn 10: point = 4307, n_alt = 0
   Insn 9: point = 4309, n_alt = 3
   Insn 3: point = 4310, n_alt = 5
   Insn 2: point = 4310, n_alt = 5
 r510: [2487..2538]
 r521: [2494..2512]
 r724: [1842..1893]
 r735: [1849..1867]
Compressing live ranges: from 4311 to 4 - 0%
Ranges after the compression:
 r510: [2..3]
 r521: [2..3]
 r724: [0..1]
 r735: [0..1]
  Slot 0 regnos (width = 0):	 510	 724
  Slot 1 regnos (width = 0):	 521	 735
Changing spilled pseudos to memory in insn #4476
Changing spilled pseudos to memory in insn #1821
Changing spilled pseudos to memory in insn #4477
Changing spilled pseudos to memory in insn #4479
Changing spilled pseudos to memory in insn #4486
Changing spilled pseudos to memory in insn #2395
Changing spilled pseudos to memory in insn #4487
Changing spilled pseudos to memory in insn #4489
	   Spilling non-eliminable hard regs: 6

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 7 for insn #4489
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4489:  (0) v  (1) m {*movsf_internal}
Reusing alternative 7 for insn #4487
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4487:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #2395
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2395:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #4486
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4486:  (0) m  (1) v {*movsf_internal}
Reusing alternative 7 for insn #4479
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4479:  (0) v  (1) m {*movsf_internal}
Reusing alternative 7 for insn #4477
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4477:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #1821
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1821:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #4476
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4476:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=224, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=176, prev_offset=0)
Can eliminate 20 to 6 (offset=-32, prev_offset=-32)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 18
changing reg in insn 19
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 27
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 36
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 44
changing reg in insn 45
changing reg in insn 52
changing reg in insn 53
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 61
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 70
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 77
changing reg in insn 78
changing reg in insn 81
changing reg in insn 82
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 112
changing reg in insn 110
changing reg in insn 112
changing reg in insn 148
changing reg in insn 149
changing reg in insn 149
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 153
changing reg in insn 155
changing reg in insn 155
changing reg in insn 157
changing reg in insn 158
changing reg in insn 158
changing reg in insn 160
changing reg in insn 161
changing reg in insn 162
changing reg in insn 162
changing reg in insn 166
changing reg in insn 164
changing reg in insn 166
changing reg in insn 200
changing reg in insn 201
changing reg in insn 201
changing reg in insn 202
changing reg in insn 202
changing reg in insn 206
changing reg in insn 203
changing reg in insn 206
changing reg in insn 205
changing reg in insn 209
changing reg in insn 210
changing reg in insn 212
changing reg in insn 219
changing reg in insn 226
changing reg in insn 227
changing reg in insn 230
changing reg in insn 231
changing reg in insn 235
changing reg in insn 236
changing reg in insn 236
changing reg in insn 237
changing reg in insn 237
changing reg in insn 241
changing reg in insn 238
changing reg in insn 241
changing reg in insn 240
changing reg in insn 244
changing reg in insn 245
changing reg in insn 246
changing reg in insn 247
changing reg in insn 250
changing reg in insn 251
changing reg in insn 251
changing reg in insn 252
changing reg in insn 252
changing reg in insn 256
changing reg in insn 253
changing reg in insn 256
changing reg in insn 255
changing reg in insn 259
changing reg in insn 260
changing reg in insn 261
changing reg in insn 262
changing reg in insn 282
changing reg in insn 283
changing reg in insn 305
changing reg in insn 306
changing reg in insn 306
changing reg in insn 307
changing reg in insn 307
changing reg in insn 311
changing reg in insn 308
changing reg in insn 311
changing reg in insn 310
changing reg in insn 314
changing reg in insn 315
changing reg in insn 317
changing reg in insn 324
changing reg in insn 331
changing reg in insn 332
changing reg in insn 348
changing reg in insn 349
changing reg in insn 373
changing reg in insn 374
changing reg in insn 375
changing reg in insn 375
changing reg in insn 378
changing reg in insn 377
changing reg in insn 378
changing reg in insn 378
changing reg in insn 380
changing reg in insn 380
changing reg in insn 389
changing reg in insn 389
changing reg in insn 382
changing reg in insn 383
changing reg in insn 384
changing reg in insn 384
changing reg in insn 387
changing reg in insn 386
changing reg in insn 387
changing reg in insn 387
changing reg in insn 391
changing reg in insn 389
changing reg in insn 391
changing reg in insn 406
changing reg in insn 407
changing reg in insn 431
changing reg in insn 432
changing reg in insn 433
changing reg in insn 433
changing reg in insn 436
changing reg in insn 435
changing reg in insn 436
changing reg in insn 436
changing reg in insn 438
changing reg in insn 438
changing reg in insn 447
changing reg in insn 447
changing reg in insn 440
changing reg in insn 441
changing reg in insn 442
changing reg in insn 442
changing reg in insn 445
changing reg in insn 444
changing reg in insn 445
changing reg in insn 445
changing reg in insn 449
changing reg in insn 447
changing reg in insn 449
changing reg in insn 470
changing reg in insn 471
changing reg in insn 471
changing reg in insn 472
changing reg in insn 472
changing reg in insn 476
changing reg in insn 473
changing reg in insn 476
changing reg in insn 475
changing reg in insn 479
changing reg in insn 480
changing reg in insn 482
changing reg in insn 489
changing reg in insn 496
changing reg in insn 497
changing reg in insn 522
changing reg in insn 523
changing reg in insn 523
changing reg in insn 524
changing reg in insn 524
changing reg in insn 528
changing reg in insn 525
changing reg in insn 528
changing reg in insn 527
changing reg in insn 531
changing reg in insn 532
changing reg in insn 534
changing reg in insn 541
changing reg in insn 548
changing reg in insn 549
changing reg in insn 580
changing reg in insn 581
changing reg in insn 581
changing reg in insn 582
changing reg in insn 582
changing reg in insn 586
changing reg in insn 583
changing reg in insn 586
changing reg in insn 585
changing reg in insn 589
changing reg in insn 590
changing reg in insn 592
changing reg in insn 599
changing reg in insn 606
changing reg in insn 607
changing reg in insn 638
changing reg in insn 639
changing reg in insn 639
changing reg in insn 640
changing reg in insn 640
changing reg in insn 644
changing reg in insn 641
changing reg in insn 644
changing reg in insn 643
changing reg in insn 647
changing reg in insn 648
changing reg in insn 650
changing reg in insn 657
changing reg in insn 664
changing reg in insn 665
changing reg in insn 696
changing reg in insn 697
changing reg in insn 697
changing reg in insn 698
changing reg in insn 698
changing reg in insn 702
changing reg in insn 699
changing reg in insn 702
changing reg in insn 701
changing reg in insn 705
changing reg in insn 706
changing reg in insn 708
changing reg in insn 715
changing reg in insn 722
changing reg in insn 723
changing reg in insn 745
changing reg in insn 746
changing reg in insn 746
changing reg in insn 748
changing reg in insn 749
changing reg in insn 750
changing reg in insn 750
changing reg in insn 752
changing reg in insn 755
changing reg in insn 756
changing reg in insn 756
changing reg in insn 758
changing reg in insn 759
changing reg in insn 760
changing reg in insn 760
changing reg in insn 762
changing reg in insn 766
changing reg in insn 769
changing reg in insn 770
changing reg in insn 771
changing reg in insn 777
changing reg in insn 778
changing reg in insn 778
changing reg in insn 780
changing reg in insn 781
changing reg in insn 782
changing reg in insn 782
changing reg in insn 784
changing reg in insn 788
changing reg in insn 791
changing reg in insn 792
changing reg in insn 793
changing reg in insn 799
changing reg in insn 800
changing reg in insn 800
changing reg in insn 802
changing reg in insn 803
changing reg in insn 804
changing reg in insn 804
changing reg in insn 806
changing reg in insn 847
changing reg in insn 848
changing reg in insn 848
changing reg in insn 849
changing reg in insn 849
changing reg in insn 853
changing reg in insn 850
changing reg in insn 853
changing reg in insn 852
changing reg in insn 856
changing reg in insn 857
changing reg in insn 859
changing reg in insn 866
changing reg in insn 873
changing reg in insn 874
changing reg in insn 896
changing reg in insn 897
changing reg in insn 897
changing reg in insn 899
changing reg in insn 900
changing reg in insn 901
changing reg in insn 901
changing reg in insn 903
changing reg in insn 904
changing reg in insn 906
changing reg in insn 907
changing reg in insn 907
changing reg in insn 909
changing reg in insn 910
changing reg in insn 911
changing reg in insn 911
changing reg in insn 913
changing reg in insn 914
changing reg in insn 921
changing reg in insn 922
changing reg in insn 922
changing reg in insn 924
changing reg in insn 925
changing reg in insn 926
changing reg in insn 926
changing reg in insn 928
changing reg in insn 929
changing reg in insn 931
changing reg in insn 932
changing reg in insn 932
changing reg in insn 934
changing reg in insn 935
changing reg in insn 936
changing reg in insn 936
changing reg in insn 938
changing reg in insn 939
changing reg in insn 940
changing reg in insn 941
changing reg in insn 941
changing reg in insn 942
changing reg in insn 950
changing reg in insn 944
changing reg in insn 945
changing reg in insn 945
changing reg in insn 947
changing reg in insn 948
changing reg in insn 949
changing reg in insn 949
changing reg in insn 952
changing reg in insn 952
changing reg in insn 958
changing reg in insn 959
changing reg in insn 959
changing reg in insn 961
changing reg in insn 962
changing reg in insn 963
changing reg in insn 963
changing reg in insn 966
changing reg in insn 1003
changing reg in insn 1004
changing reg in insn 1016
changing reg in insn 1017
changing reg in insn 1023
changing reg in insn 1024
changing reg in insn 1027
changing reg in insn 1028
changing reg in insn 1043
changing reg in insn 1044
changing reg in insn 1044
changing reg in insn 1045
changing reg in insn 1045
changing reg in insn 1049
changing reg in insn 1046
changing reg in insn 1049
changing reg in insn 1048
changing reg in insn 1052
changing reg in insn 1053
changing reg in insn 1055
changing reg in insn 1062
changing reg in insn 1069
changing reg in insn 1070
changing reg in insn 1092
changing reg in insn 1093
changing reg in insn 1093
changing reg in insn 1095
changing reg in insn 1096
changing reg in insn 1097
changing reg in insn 1097
changing reg in insn 1099
changing reg in insn 1100
changing reg in insn 1101
changing reg in insn 1105
changing reg in insn 1106
changing reg in insn 1106
changing reg in insn 1108
changing reg in insn 1109
changing reg in insn 1110
changing reg in insn 1110
changing reg in insn 1112
changing reg in insn 1113
changing reg in insn 1132
changing reg in insn 1115
changing reg in insn 1116
changing reg in insn 1116
changing reg in insn 1118
changing reg in insn 1119
changing reg in insn 1120
changing reg in insn 1120
changing reg in insn 1122
changing reg in insn 1123
changing reg in insn 1124
changing reg in insn 1124
changing reg in insn 1132
changing reg in insn 1126
changing reg in insn 1127
changing reg in insn 1127
changing reg in insn 1129
changing reg in insn 1130
changing reg in insn 1131
changing reg in insn 1131
changing reg in insn 1134
changing reg in insn 1132
changing reg in insn 1134
changing reg in insn 1140
changing reg in insn 1141
changing reg in insn 1141
changing reg in insn 1143
changing reg in insn 1144
changing reg in insn 1145
changing reg in insn 1145
changing reg in insn 1148
changing reg in insn 1185
changing reg in insn 1186
changing reg in insn 1198
changing reg in insn 1199
changing reg in insn 1205
changing reg in insn 1206
changing reg in insn 1209
changing reg in insn 1210
changing reg in insn 1225
changing reg in insn 1226
changing reg in insn 1226
changing reg in insn 1227
changing reg in insn 1227
changing reg in insn 1231
changing reg in insn 1228
changing reg in insn 1231
changing reg in insn 1230
changing reg in insn 1234
changing reg in insn 1235
changing reg in insn 1237
changing reg in insn 1244
changing reg in insn 1251
changing reg in insn 1252
changing reg in insn 1274
changing reg in insn 1275
changing reg in insn 1275
changing reg in insn 1277
changing reg in insn 1278
changing reg in insn 1279
changing reg in insn 1279
changing reg in insn 1281
changing reg in insn 1282
changing reg in insn 1283
changing reg in insn 1287
changing reg in insn 1288
changing reg in insn 1288
changing reg in insn 1290
changing reg in insn 1291
changing reg in insn 1292
changing reg in insn 1292
changing reg in insn 1294
changing reg in insn 1295
changing reg in insn 1314
changing reg in insn 1297
changing reg in insn 1298
changing reg in insn 1298
changing reg in insn 1300
changing reg in insn 1301
changing reg in insn 1302
changing reg in insn 1302
changing reg in insn 1304
changing reg in insn 1305
changing reg in insn 1306
changing reg in insn 1306
changing reg in insn 1314
changing reg in insn 1308
changing reg in insn 1309
changing reg in insn 1309
changing reg in insn 1311
changing reg in insn 1312
changing reg in insn 1313
changing reg in insn 1313
changing reg in insn 1316
changing reg in insn 1314
changing reg in insn 1316
changing reg in insn 1322
changing reg in insn 1323
changing reg in insn 1323
changing reg in insn 1325
changing reg in insn 1326
changing reg in insn 1327
changing reg in insn 1327
changing reg in insn 1330
changing reg in insn 1367
changing reg in insn 1368
changing reg in insn 1380
changing reg in insn 1381
changing reg in insn 1387
changing reg in insn 1388
changing reg in insn 1391
changing reg in insn 1392
changing reg in insn 1407
changing reg in insn 1408
changing reg in insn 1408
changing reg in insn 1409
changing reg in insn 1409
changing reg in insn 1413
changing reg in insn 1410
changing reg in insn 1413
changing reg in insn 1412
changing reg in insn 1416
changing reg in insn 1417
changing reg in insn 1419
changing reg in insn 1426
changing reg in insn 1433
changing reg in insn 1434
changing reg in insn 1437
changing reg in insn 1438
changing reg in insn 1463
changing reg in insn 1464
changing reg in insn 1464
changing reg in insn 1466
changing reg in insn 1467
changing reg in insn 1468
changing reg in insn 1468
changing reg in insn 1470
changing reg in insn 1472
changing reg in insn 1473
changing reg in insn 1473
changing reg in insn 1475
changing reg in insn 1476
changing reg in insn 1477
changing reg in insn 1477
changing reg in insn 1480
changing reg in insn 1478
changing reg in insn 1480
changing reg in insn 1482
changing reg in insn 1483
changing reg in insn 1483
changing reg in insn 1485
changing reg in insn 1486
changing reg in insn 1487
changing reg in insn 1487
changing reg in insn 1490
changing reg in insn 1488
changing reg in insn 1490
changing reg in insn 1522
changing reg in insn 1523
changing reg in insn 1523
changing reg in insn 1525
changing reg in insn 1526
changing reg in insn 1527
changing reg in insn 1527
changing reg in insn 1529
changing reg in insn 1544
changing reg in insn 1545
changing reg in insn 1545
changing reg in insn 1549
changing reg in insn 1547
changing reg in insn 1548
changing reg in insn 1548
changing reg in insn 1549
changing reg in insn 1549
changing reg in insn 1551
changing reg in insn 1552
changing reg in insn 1553
changing reg in insn 1553
changing reg in insn 1555
changing reg in insn 1555
changing reg in insn 1556
changing reg in insn 1563
changing reg in insn 1564
changing reg in insn 1564
changing reg in insn 1566
changing reg in insn 1567
changing reg in insn 1568
changing reg in insn 1568
changing reg in insn 1570
changing reg in insn 1570
changing reg in insn 1571
changing reg in insn 1577
changing reg in insn 1578
changing reg in insn 1578
changing reg in insn 1580
changing reg in insn 1581
changing reg in insn 1582
changing reg in insn 1582
changing reg in insn 1584
changing reg in insn 1585
changing reg in insn 1586
changing reg in insn 1593
changing reg in insn 1594
changing reg in insn 1594
changing reg in insn 1596
changing reg in insn 1597
changing reg in insn 1598
changing reg in insn 1598
changing reg in insn 1600
changing reg in insn 1606
changing reg in insn 1607
changing reg in insn 1607
changing reg in insn 1609
changing reg in insn 1610
changing reg in insn 1611
changing reg in insn 1611
changing reg in insn 1613
changing reg in insn 1633
changing reg in insn 1634
changing reg in insn 1634
changing reg in insn 1636
changing reg in insn 1637
changing reg in insn 1638
changing reg in insn 1638
changing reg in insn 1641
changing reg in insn 1639
changing reg in insn 1641
changing reg in insn 1643
changing reg in insn 1644
changing reg in insn 1644
changing reg in insn 1646
changing reg in insn 1647
changing reg in insn 1648
changing reg in insn 1648
changing reg in insn 1651
changing reg in insn 1649
changing reg in insn 1651
changing reg in insn 1667
changing reg in insn 1668
changing reg in insn 1668
changing reg in insn 1669
changing reg in insn 1669
changing reg in insn 1671
changing reg in insn 1672
changing reg in insn 1683
changing reg in insn 1674
changing reg in insn 1675
changing reg in insn 1675
changing reg in insn 1677
changing reg in insn 1678
changing reg in insn 1679
changing reg in insn 1679
changing reg in insn 1681
changing reg in insn 1682
changing reg in insn 1683
changing reg in insn 1683
changing reg in insn 1685
changing reg in insn 1687
changing reg in insn 1688
changing reg in insn 1688
changing reg in insn 1690
changing reg in insn 1691
changing reg in insn 1692
changing reg in insn 1692
changing reg in insn 1695
changing reg in insn 1693
changing reg in insn 1695
changing reg in insn 1697
changing reg in insn 1698
changing reg in insn 1698
changing reg in insn 1700
changing reg in insn 1701
changing reg in insn 1702
changing reg in insn 1702
changing reg in insn 1711
changing reg in insn 1704
changing reg in insn 1705
changing reg in insn 1705
changing reg in insn 1707
changing reg in insn 1708
changing reg in insn 1709
changing reg in insn 1709
changing reg in insn 1714
changing reg in insn 1712
changing reg in insn 1714
changing reg in insn 1723
changing reg in insn 1724
changing reg in insn 1724
changing reg in insn 1726
changing reg in insn 1727
changing reg in insn 1738
changing reg in insn 1729
changing reg in insn 1730
changing reg in insn 1730
changing reg in insn 1732
changing reg in insn 1733
changing reg in insn 1734
changing reg in insn 1734
changing reg in insn 1736
changing reg in insn 1737
changing reg in insn 1738
changing reg in insn 1738
changing reg in insn 1740
changing reg in insn 1742
changing reg in insn 1743
changing reg in insn 1743
changing reg in insn 1745
changing reg in insn 1746
changing reg in insn 1747
changing reg in insn 1747
changing reg in insn 1750
changing reg in insn 1748
changing reg in insn 1750
changing reg in insn 1752
changing reg in insn 1753
changing reg in insn 1753
changing reg in insn 1754
changing reg in insn 1754
changing reg in insn 1758
changing reg in insn 1756
changing reg in insn 1757
changing reg in insn 1757
changing reg in insn 1758
changing reg in insn 1758
changing reg in insn 1760
changing reg in insn 1761
changing reg in insn 1762
changing reg in insn 1762
changing reg in insn 1764
changing reg in insn 1765
changing reg in insn 1767
changing reg in insn 1768
changing reg in insn 1768
changing reg in insn 1769
changing reg in insn 1769
changing reg in insn 1773
changing reg in insn 1771
changing reg in insn 1772
changing reg in insn 1772
changing reg in insn 1773
changing reg in insn 1773
changing reg in insn 1775
changing reg in insn 1776
changing reg in insn 1777
changing reg in insn 1777
changing reg in insn 1779
changing reg in insn 1780
changing reg in insn 1781
changing reg in insn 1783
changing reg in insn 1784
changing reg in insn 1784
changing reg in insn 1785
changing reg in insn 1785
changing reg in insn 1789
changing reg in insn 1787
changing reg in insn 1788
changing reg in insn 1788
changing reg in insn 1789
changing reg in insn 1789
changing reg in insn 1791
changing reg in insn 1792
changing reg in insn 1793
changing reg in insn 1793
changing reg in insn 1795
changing reg in insn 1796
changing reg in insn 1798
changing reg in insn 1798
changing reg in insn 1800
changing reg in insn 1801
changing reg in insn 1801
changing reg in insn 1802
changing reg in insn 1806
changing reg in insn 1807
changing reg in insn 1807
changing reg in insn 1808
changing reg in insn 1808
changing reg in insn 1812
changing reg in insn 1810
changing reg in insn 1811
changing reg in insn 1811
changing reg in insn 1812
changing reg in insn 1812
changing reg in insn 1814
changing reg in insn 1815
changing reg in insn 1816
changing reg in insn 1816
changing reg in insn 1818
changing reg in insn 1818
changing reg in insn 1819
changing reg in insn 1823
changing reg in insn 1824
changing reg in insn 1824
changing reg in insn 1826
changing reg in insn 1827
changing reg in insn 1828
changing reg in insn 1828
changing reg in insn 1830
changing reg in insn 1830
changing reg in insn 1831
changing reg in insn 1833
changing reg in insn 1834
changing reg in insn 1835
changing reg in insn 1835
changing reg in insn 1836
changing reg in insn 1838
changing reg in insn 1839
changing reg in insn 1839
changing reg in insn 1840
changing reg in insn 1840
changing reg in insn 1844
changing reg in insn 1842
changing reg in insn 1843
changing reg in insn 1843
changing reg in insn 1844
changing reg in insn 1844
changing reg in insn 1846
changing reg in insn 1847
changing reg in insn 1848
changing reg in insn 1848
changing reg in insn 1850
changing reg in insn 1851
changing reg in insn 1853
changing reg in insn 1854
changing reg in insn 1854
changing reg in insn 1856
changing reg in insn 1857
changing reg in insn 1858
changing reg in insn 1858
changing reg in insn 1861
changing reg in insn 1859
changing reg in insn 1861
changing reg in insn 1876
changing reg in insn 1877
changing reg in insn 1899
changing reg in insn 1900
changing reg in insn 1900
changing reg in insn 1901
changing reg in insn 1901
changing reg in insn 1905
changing reg in insn 1902
changing reg in insn 1905
changing reg in insn 1904
changing reg in insn 1908
changing reg in insn 1909
changing reg in insn 1911
changing reg in insn 1918
changing reg in insn 1925
changing reg in insn 1926
changing reg in insn 1948
changing reg in insn 1949
changing reg in insn 1949
changing reg in insn 1950
changing reg in insn 1950
changing reg in insn 1954
changing reg in insn 1951
changing reg in insn 1954
changing reg in insn 1953
changing reg in insn 1957
changing reg in insn 1958
changing reg in insn 1960
changing reg in insn 1967
changing reg in insn 1974
changing reg in insn 1975
changing reg in insn 1978
changing reg in insn 1979
changing reg in insn 1982
changing reg in insn 1983
changing reg in insn 2008
changing reg in insn 2009
changing reg in insn 2009
changing reg in insn 2011
changing reg in insn 2012
changing reg in insn 2013
changing reg in insn 2013
changing reg in insn 2015
changing reg in insn 2049
changing reg in insn 2050
changing reg in insn 2050
changing reg in insn 2052
changing reg in insn 2053
changing reg in insn 2054
changing reg in insn 2054
changing reg in insn 2056
changing reg in insn 2069
changing reg in insn 2070
changing reg in insn 2070
changing reg in insn 2074
changing reg in insn 2072
changing reg in insn 2073
changing reg in insn 2073
changing reg in insn 2074
changing reg in insn 2074
changing reg in insn 2076
changing reg in insn 2077
changing reg in insn 2078
changing reg in insn 2078
changing reg in insn 2080
changing reg in insn 2080
changing reg in insn 2081
changing reg in insn 2088
changing reg in insn 2089
changing reg in insn 2089
changing reg in insn 2091
changing reg in insn 2092
changing reg in insn 2093
changing reg in insn 2093
changing reg in insn 2095
changing reg in insn 2095
changing reg in insn 2096
changing reg in insn 2102
changing reg in insn 2103
changing reg in insn 2103
changing reg in insn 2105
changing reg in insn 2106
changing reg in insn 2107
changing reg in insn 2107
changing reg in insn 2109
changing reg in insn 2110
changing reg in insn 2112
changing reg in insn 2119
changing reg in insn 2120
changing reg in insn 2120
changing reg in insn 2122
changing reg in insn 2123
changing reg in insn 2124
changing reg in insn 2124
changing reg in insn 2126
changing reg in insn 2132
changing reg in insn 2133
changing reg in insn 2133
changing reg in insn 2135
changing reg in insn 2136
changing reg in insn 2137
changing reg in insn 2137
changing reg in insn 2139
changing reg in insn 2159
changing reg in insn 2160
changing reg in insn 2160
changing reg in insn 2162
changing reg in insn 2163
changing reg in insn 2164
changing reg in insn 2164
changing reg in insn 2167
changing reg in insn 2165
changing reg in insn 2167
changing reg in insn 2169
changing reg in insn 2170
changing reg in insn 2170
changing reg in insn 2172
changing reg in insn 2173
changing reg in insn 2174
changing reg in insn 2174
changing reg in insn 2177
changing reg in insn 2175
changing reg in insn 2177
changing reg in insn 2179
changing reg in insn 2180
changing reg in insn 2180
changing reg in insn 2182
changing reg in insn 2183
changing reg in insn 2184
changing reg in insn 2184
changing reg in insn 2186
changing reg in insn 2190
changing reg in insn 2191
changing reg in insn 2191
changing reg in insn 2195
changing reg in insn 2193
changing reg in insn 2194
changing reg in insn 2194
changing reg in insn 2195
changing reg in insn 2195
changing reg in insn 2197
changing reg in insn 2198
changing reg in insn 2199
changing reg in insn 2199
changing reg in insn 2208
changing reg in insn 2201
changing reg in insn 2202
changing reg in insn 2202
changing reg in insn 2204
changing reg in insn 2205
changing reg in insn 2206
changing reg in insn 2206
changing reg in insn 2211
changing reg in insn 2209
changing reg in insn 2211
changing reg in insn 2227
changing reg in insn 2238
changing reg in insn 2229
changing reg in insn 2230
changing reg in insn 2230
changing reg in insn 2232
changing reg in insn 2233
changing reg in insn 2234
changing reg in insn 2234
changing reg in insn 2236
changing reg in insn 2237
changing reg in insn 2238
changing reg in insn 2238
changing reg in insn 2240
changing reg in insn 2242
changing reg in insn 2243
changing reg in insn 2243
changing reg in insn 2245
changing reg in insn 2246
changing reg in insn 2247
changing reg in insn 2247
changing reg in insn 2250
changing reg in insn 2248
changing reg in insn 2250
changing reg in insn 2252
changing reg in insn 2253
changing reg in insn 2253
changing reg in insn 2255
changing reg in insn 2256
changing reg in insn 2257
changing reg in insn 2257
changing reg in insn 2266
changing reg in insn 2259
changing reg in insn 2260
changing reg in insn 2260
changing reg in insn 2262
changing reg in insn 2263
changing reg in insn 2264
changing reg in insn 2264
changing reg in insn 2269
changing reg in insn 2267
changing reg in insn 2269
changing reg in insn 2271
changing reg in insn 2272
changing reg in insn 2272
changing reg in insn 2274
changing reg in insn 2275
changing reg in insn 2276
changing reg in insn 2276
changing reg in insn 2285
changing reg in insn 2278
changing reg in insn 2279
changing reg in insn 2279
changing reg in insn 2281
changing reg in insn 2282
changing reg in insn 2283
changing reg in insn 2283
changing reg in insn 2288
changing reg in insn 2286
changing reg in insn 2288
changing reg in insn 2297
changing reg in insn 2298
changing reg in insn 2298
changing reg in insn 2300
changing reg in insn 2301
changing reg in insn 2312
changing reg in insn 2303
changing reg in insn 2304
changing reg in insn 2304
changing reg in insn 2306
changing reg in insn 2307
changing reg in insn 2308
changing reg in insn 2308
changing reg in insn 2310
changing reg in insn 2311
changing reg in insn 2312
changing reg in insn 2312
changing reg in insn 2314
changing reg in insn 2316
changing reg in insn 2317
changing reg in insn 2317
changing reg in insn 2319
changing reg in insn 2320
changing reg in insn 2321
changing reg in insn 2321
changing reg in insn 2324
changing reg in insn 2322
changing reg in insn 2324
changing reg in insn 2326
changing reg in insn 2327
changing reg in insn 2327
changing reg in insn 2328
changing reg in insn 2328
changing reg in insn 2332
changing reg in insn 2330
changing reg in insn 2331
changing reg in insn 2331
changing reg in insn 2332
changing reg in insn 2332
changing reg in insn 2334
changing reg in insn 2335
changing reg in insn 2336
changing reg in insn 2336
changing reg in insn 2338
changing reg in insn 2339
changing reg in insn 2341
changing reg in insn 2342
changing reg in insn 2342
changing reg in insn 2343
changing reg in insn 2343
changing reg in insn 2347
changing reg in insn 2345
changing reg in insn 2346
changing reg in insn 2346
changing reg in insn 2347
changing reg in insn 2347
changing reg in insn 2349
changing reg in insn 2350
changing reg in insn 2351
changing reg in insn 2351
changing reg in insn 2353
changing reg in insn 2354
changing reg in insn 2355
changing reg in insn 2357
changing reg in insn 2358
changing reg in insn 2358
changing reg in insn 2359
changing reg in insn 2359
changing reg in insn 2363
changing reg in insn 2361
changing reg in insn 2362
changing reg in insn 2362
changing reg in insn 2363
changing reg in insn 2363
changing reg in insn 2365
changing reg in insn 2366
changing reg in insn 2367
changing reg in insn 2367
changing reg in insn 2369
changing reg in insn 2370
changing reg in insn 2372
changing reg in insn 2372
changing reg in insn 2374
changing reg in insn 2375
changing reg in insn 2375
changing reg in insn 2376
changing reg in insn 2380
changing reg in insn 2381
changing reg in insn 2381
changing reg in insn 2382
changing reg in insn 2382
changing reg in insn 2386
changing reg in insn 2384
changing reg in insn 2385
changing reg in insn 2385
changing reg in insn 2386
changing reg in insn 2386
changing reg in insn 2388
changing reg in insn 2389
changing reg in insn 2390
changing reg in insn 2390
changing reg in insn 2392
changing reg in insn 2392
changing reg in insn 2393
changing reg in insn 2397
changing reg in insn 2398
changing reg in insn 2398
changing reg in insn 2400
changing reg in insn 2401
changing reg in insn 2402
changing reg in insn 2402
changing reg in insn 2404
changing reg in insn 2404
changing reg in insn 2405
changing reg in insn 2407
changing reg in insn 2408
changing reg in insn 2409
changing reg in insn 2409
changing reg in insn 2410
changing reg in insn 2412
changing reg in insn 2413
changing reg in insn 2413
changing reg in insn 2414
changing reg in insn 2414
changing reg in insn 2418
changing reg in insn 2416
changing reg in insn 2417
changing reg in insn 2417
changing reg in insn 2418
changing reg in insn 2418
changing reg in insn 2420
changing reg in insn 2421
changing reg in insn 2422
changing reg in insn 2422
changing reg in insn 2424
changing reg in insn 2425
changing reg in insn 2427
changing reg in insn 2428
changing reg in insn 2428
changing reg in insn 2430
changing reg in insn 2431
changing reg in insn 2432
changing reg in insn 2432
changing reg in insn 2435
changing reg in insn 2433
changing reg in insn 2435
changing reg in insn 2437
changing reg in insn 2438
changing reg in insn 2438
changing reg in insn 2442
changing reg in insn 2440
changing reg in insn 2441
changing reg in insn 2441
changing reg in insn 2442
changing reg in insn 2442
changing reg in insn 2444
changing reg in insn 2445
changing reg in insn 2446
changing reg in insn 2446
changing reg in insn 2455
changing reg in insn 2448
changing reg in insn 2449
changing reg in insn 2449
changing reg in insn 2451
changing reg in insn 2452
changing reg in insn 2453
changing reg in insn 2453
changing reg in insn 2458
changing reg in insn 2456
changing reg in insn 2458
changing reg in insn 2473
changing reg in insn 2474
changing reg in insn 2496
changing reg in insn 2497
changing reg in insn 2497
changing reg in insn 2498
changing reg in insn 2498
changing reg in insn 2502
changing reg in insn 2499
changing reg in insn 2502
changing reg in insn 2501
changing reg in insn 2505
changing reg in insn 2506
changing reg in insn 2508
changing reg in insn 2515
changing reg in insn 2522
changing reg in insn 2523
changing reg in insn 2545
changing reg in insn 2546
changing reg in insn 2546
changing reg in insn 2547
changing reg in insn 2547
changing reg in insn 2551
changing reg in insn 2548
changing reg in insn 2551
changing reg in insn 2550
changing reg in insn 2554
changing reg in insn 2555
changing reg in insn 2557
changing reg in insn 2564
changing reg in insn 2571
changing reg in insn 2572
changing reg in insn 2594
changing reg in insn 2595
changing reg in insn 2595
changing reg in insn 2596
changing reg in insn 2596
changing reg in insn 2600
changing reg in insn 2597
changing reg in insn 2600
changing reg in insn 2599
changing reg in insn 2603
changing reg in insn 2604
changing reg in insn 2606
changing reg in insn 2613
changing reg in insn 2620
changing reg in insn 2621
changing reg in insn 2625
changing reg in insn 2627
changing reg in insn 2634
changing reg in insn 2636
changing reg in insn 2665
changing reg in insn 2666
changing reg in insn 2666
changing reg in insn 2668
changing reg in insn 2669
changing reg in insn 2670
changing reg in insn 2670
changing reg in insn 2672
changing reg in insn 2673
changing reg in insn 2681
changing reg in insn 2675
changing reg in insn 2676
changing reg in insn 2676
changing reg in insn 2678
changing reg in insn 2679
changing reg in insn 2680
changing reg in insn 2680
changing reg in insn 2683
changing reg in insn 2681
changing reg in insn 2683
changing reg in insn 2718
changing reg in insn 2719
changing reg in insn 2731
changing reg in insn 2732
changing reg in insn 2738
changing reg in insn 2739
changing reg in insn 2742
changing reg in insn 2743
changing reg in insn 2749
changing reg in insn 2750
changing reg in insn 2750
changing reg in insn 2751
changing reg in insn 2751
changing reg in insn 2755
changing reg in insn 2752
changing reg in insn 2755
changing reg in insn 2754
changing reg in insn 2758
changing reg in insn 2759
changing reg in insn 2761
changing reg in insn 2768
changing reg in insn 2775
changing reg in insn 2776
changing reg in insn 2780
changing reg in insn 2782
changing reg in insn 2789
changing reg in insn 2791
changing reg in insn 2820
changing reg in insn 2821
changing reg in insn 2821
changing reg in insn 2823
changing reg in insn 2824
changing reg in insn 2825
changing reg in insn 2825
changing reg in insn 2827
changing reg in insn 2828
changing reg in insn 2836
changing reg in insn 2830
changing reg in insn 2831
changing reg in insn 2831
changing reg in insn 2833
changing reg in insn 2834
changing reg in insn 2835
changing reg in insn 2835
changing reg in insn 2838
changing reg in insn 2836
changing reg in insn 2838
changing reg in insn 2873
changing reg in insn 2874
changing reg in insn 2886
changing reg in insn 2887
changing reg in insn 2893
changing reg in insn 2894
changing reg in insn 2897
changing reg in insn 2898
changing reg in insn 2904
changing reg in insn 2905
changing reg in insn 2905
changing reg in insn 2906
changing reg in insn 2906
changing reg in insn 2910
changing reg in insn 2907
changing reg in insn 2910
changing reg in insn 2909
changing reg in insn 2913
changing reg in insn 2914
changing reg in insn 2916
changing reg in insn 2923
changing reg in insn 2930
changing reg in insn 2931
changing reg in insn 2935
changing reg in insn 2937
changing reg in insn 2944
changing reg in insn 2946
changing reg in insn 2975
changing reg in insn 2976
changing reg in insn 2976
changing reg in insn 2978
changing reg in insn 2979
changing reg in insn 2980
changing reg in insn 2980
changing reg in insn 2982
changing reg in insn 2983
changing reg in insn 2984
changing reg in insn 2984
changing reg in insn 2993
changing reg in insn 2993
changing reg in insn 2986
changing reg in insn 2987
changing reg in insn 2987
changing reg in insn 2989
changing reg in insn 2990
changing reg in insn 2991
changing reg in insn 2991
changing reg in insn 2995
changing reg in insn 2993
changing reg in insn 2995
changing reg in insn 3030
changing reg in insn 3031
changing reg in insn 3043
changing reg in insn 3044
changing reg in insn 3050
changing reg in insn 3051
changing reg in insn 3054
changing reg in insn 3055
changing reg in insn 3061
changing reg in insn 3062
changing reg in insn 3062
changing reg in insn 3063
changing reg in insn 3063
changing reg in insn 3067
changing reg in insn 3064
changing reg in insn 3067
changing reg in insn 3066
changing reg in insn 3070
changing reg in insn 3071
changing reg in insn 3073
changing reg in insn 3080
changing reg in insn 3087
changing reg in insn 3088
changing reg in insn 3092
changing reg in insn 3094
changing reg in insn 3101
changing reg in insn 3103
changing reg in insn 3132
changing reg in insn 3133
changing reg in insn 3133
changing reg in insn 3135
changing reg in insn 3136
changing reg in insn 3137
changing reg in insn 3137
changing reg in insn 3139
changing reg in insn 3140
changing reg in insn 3141
changing reg in insn 3141
changing reg in insn 3150
changing reg in insn 3150
changing reg in insn 3143
changing reg in insn 3144
changing reg in insn 3144
changing reg in insn 3146
changing reg in insn 3147
changing reg in insn 3148
changing reg in insn 3148
changing reg in insn 3152
changing reg in insn 3150
changing reg in insn 3152
changing reg in insn 3187
changing reg in insn 3188
changing reg in insn 3200
changing reg in insn 3201
changing reg in insn 3207
changing reg in insn 3208
changing reg in insn 3211
changing reg in insn 3212
changing reg in insn 3218
changing reg in insn 3219
changing reg in insn 3219
changing reg in insn 3220
changing reg in insn 3220
changing reg in insn 3224
changing reg in insn 3221
changing reg in insn 3224
changing reg in insn 3223
changing reg in insn 3227
changing reg in insn 3228
changing reg in insn 3230
changing reg in insn 3237
changing reg in insn 3244
changing reg in insn 3245
changing reg in insn 3249
changing reg in insn 3251
changing reg in insn 3258
changing reg in insn 3260
changing reg in insn 3289
changing reg in insn 3290
changing reg in insn 3290
changing reg in insn 3292
changing reg in insn 3293
changing reg in insn 3294
changing reg in insn 3294
changing reg in insn 3296
changing reg in insn 3297
changing reg in insn 3305
changing reg in insn 3299
changing reg in insn 3300
changing reg in insn 3300
changing reg in insn 3302
changing reg in insn 3303
changing reg in insn 3304
changing reg in insn 3304
changing reg in insn 3307
changing reg in insn 3305
changing reg in insn 3307
changing reg in insn 3342
changing reg in insn 3343
changing reg in insn 3355
changing reg in insn 3356
changing reg in insn 3362
changing reg in insn 3363
changing reg in insn 3366
changing reg in insn 3367
changing reg in insn 3373
changing reg in insn 3374
changing reg in insn 3374
changing reg in insn 3375
changing reg in insn 3375
changing reg in insn 3379
changing reg in insn 3376
changing reg in insn 3379
changing reg in insn 3378
changing reg in insn 3382
changing reg in insn 3383
changing reg in insn 3385
changing reg in insn 3392
changing reg in insn 3399
changing reg in insn 3400
changing reg in insn 3404
changing reg in insn 3406
changing reg in insn 3413
changing reg in insn 3415
changing reg in insn 3444
changing reg in insn 3445
changing reg in insn 3445
changing reg in insn 3447
changing reg in insn 3448
changing reg in insn 3449
changing reg in insn 3449
changing reg in insn 3451
changing reg in insn 3452
changing reg in insn 3460
changing reg in insn 3454
changing reg in insn 3455
changing reg in insn 3455
changing reg in insn 3457
changing reg in insn 3458
changing reg in insn 3459
changing reg in insn 3459
changing reg in insn 3462
changing reg in insn 3460
changing reg in insn 3462
changing reg in insn 3497
changing reg in insn 3498
changing reg in insn 3510
changing reg in insn 3511
changing reg in insn 3517
changing reg in insn 3518
changing reg in insn 3521
changing reg in insn 3522
changing reg in insn 3528
changing reg in insn 3529
changing reg in insn 3529
changing reg in insn 3530
changing reg in insn 3530
changing reg in insn 3534
changing reg in insn 3531
changing reg in insn 3534
changing reg in insn 3533
changing reg in insn 3537
changing reg in insn 3538
changing reg in insn 3540
changing reg in insn 3547
changing reg in insn 3554
changing reg in insn 3555
changing reg in insn 3577
changing reg in insn 3578
changing reg in insn 3578
changing reg in insn 3580
changing reg in insn 3581
changing reg in insn 3582
changing reg in insn 3582
changing reg in insn 3584
changing reg in insn 3585
changing reg in insn 3586
changing reg in insn 3593
changing reg in insn 3594
changing reg in insn 3594
changing reg in insn 3596
changing reg in insn 3597
changing reg in insn 3598
changing reg in insn 3598
changing reg in insn 3600
changing reg in insn 3601
changing reg in insn 3612
changing reg in insn 3603
changing reg in insn 3604
changing reg in insn 3604
changing reg in insn 3606
changing reg in insn 3607
changing reg in insn 3608
changing reg in insn 3608
changing reg in insn 3610
changing reg in insn 3611
changing reg in insn 3612
changing reg in insn 3623
changing reg in insn 3624
changing reg in insn 3624
changing reg in insn 3626
changing reg in insn 3627
changing reg in insn 3628
changing reg in insn 3628
changing reg in insn 3630
changing reg in insn 3630
changing reg in insn 3632
changing reg in insn 3633
changing reg in insn 3633
changing reg in insn 3635
changing reg in insn 3636
changing reg in insn 3637
changing reg in insn 3637
changing reg in insn 3639
changing reg in insn 3640
changing reg in insn 3641
changing reg in insn 3649
changing reg in insn 3643
changing reg in insn 3644
changing reg in insn 3644
changing reg in insn 3646
changing reg in insn 3647
changing reg in insn 3648
changing reg in insn 3648
changing reg in insn 3651
changing reg in insn 3649
changing reg in insn 3651
changing reg in insn 3683
changing reg in insn 3684
changing reg in insn 3684
changing reg in insn 3685
changing reg in insn 3685
changing reg in insn 3689
changing reg in insn 3686
changing reg in insn 3689
changing reg in insn 3688
changing reg in insn 3692
changing reg in insn 3693
changing reg in insn 3695
changing reg in insn 3702
changing reg in insn 3709
changing reg in insn 3710
changing reg in insn 3732
changing reg in insn 3733
changing reg in insn 3733
changing reg in insn 3735
changing reg in insn 3736
changing reg in insn 3737
changing reg in insn 3737
changing reg in insn 3739
changing reg in insn 3740
changing reg in insn 3742
changing reg in insn 3749
changing reg in insn 3750
changing reg in insn 3750
changing reg in insn 3752
changing reg in insn 3753
changing reg in insn 3754
changing reg in insn 3754
changing reg in insn 3756
changing reg in insn 3760
changing reg in insn 3761
changing reg in insn 3761
changing reg in insn 3765
changing reg in insn 3763
changing reg in insn 3764
changing reg in insn 3764
changing reg in insn 3765
changing reg in insn 3765
changing reg in insn 3767
changing reg in insn 3768
changing reg in insn 3769
changing reg in insn 3769
changing reg in insn 3771
changing reg in insn 3776
changing reg in insn 3777
changing reg in insn 3777
changing reg in insn 3778
changing reg in insn 3778
changing reg in insn 3779
changing reg in insn 3779
changing reg in insn 3790
changing reg in insn 3781
changing reg in insn 3782
changing reg in insn 3782
changing reg in insn 3784
changing reg in insn 3785
changing reg in insn 3786
changing reg in insn 3786
changing reg in insn 3788
changing reg in insn 3789
changing reg in insn 3790
changing reg in insn 3801
changing reg in insn 3802
changing reg in insn 3802
changing reg in insn 3804
changing reg in insn 3805
changing reg in insn 3806
changing reg in insn 3806
changing reg in insn 3808
changing reg in insn 3808
changing reg in insn 3810
changing reg in insn 3811
changing reg in insn 3811
changing reg in insn 3813
changing reg in insn 3814
changing reg in insn 3815
changing reg in insn 3815
changing reg in insn 3817
changing reg in insn 3818
changing reg in insn 3819
changing reg in insn 3827
changing reg in insn 3821
changing reg in insn 3822
changing reg in insn 3822
changing reg in insn 3824
changing reg in insn 3825
changing reg in insn 3826
changing reg in insn 3826
changing reg in insn 3829
changing reg in insn 3827
changing reg in insn 3829
changing reg in insn 3861
changing reg in insn 3862
changing reg in insn 3862
changing reg in insn 3863
changing reg in insn 3863
changing reg in insn 3867
changing reg in insn 3864
changing reg in insn 3867
changing reg in insn 3866
changing reg in insn 3870
changing reg in insn 3871
changing reg in insn 3873
changing reg in insn 3880
changing reg in insn 3887
changing reg in insn 3888
changing reg in insn 3910
changing reg in insn 3911
changing reg in insn 3911
changing reg in insn 3913
changing reg in insn 3914
changing reg in insn 3915
changing reg in insn 3915
changing reg in insn 3917
changing reg in insn 3918
changing reg in insn 3919
changing reg in insn 3926
changing reg in insn 3927
changing reg in insn 3927
changing reg in insn 3929
changing reg in insn 3930
changing reg in insn 3931
changing reg in insn 3931
changing reg in insn 3933
changing reg in insn 3934
changing reg in insn 3945
changing reg in insn 3936
changing reg in insn 3937
changing reg in insn 3937
changing reg in insn 3939
changing reg in insn 3940
changing reg in insn 3941
changing reg in insn 3941
changing reg in insn 3943
changing reg in insn 3944
changing reg in insn 3945
changing reg in insn 3956
changing reg in insn 3957
changing reg in insn 3957
changing reg in insn 3959
changing reg in insn 3960
changing reg in insn 3961
changing reg in insn 3961
changing reg in insn 3963
changing reg in insn 3963
changing reg in insn 3965
changing reg in insn 3966
changing reg in insn 3966
changing reg in insn 3968
changing reg in insn 3969
changing reg in insn 3970
changing reg in insn 3970
changing reg in insn 3972
changing reg in insn 3973
changing reg in insn 3974
changing reg in insn 3982
changing reg in insn 3976
changing reg in insn 3977
changing reg in insn 3977
changing reg in insn 3979
changing reg in insn 3980
changing reg in insn 3981
changing reg in insn 3981
changing reg in insn 3984
changing reg in insn 3982
changing reg in insn 3984
changing reg in insn 4016
changing reg in insn 4017
changing reg in insn 4017
changing reg in insn 4018
changing reg in insn 4018
changing reg in insn 4022
changing reg in insn 4019
changing reg in insn 4022
changing reg in insn 4021
changing reg in insn 4025
changing reg in insn 4026
changing reg in insn 4028
changing reg in insn 4035
changing reg in insn 4042
changing reg in insn 4043
changing reg in insn 4065
changing reg in insn 4066
changing reg in insn 4066
changing reg in insn 4067
changing reg in insn 4067
changing reg in insn 4071
changing reg in insn 4068
changing reg in insn 4071
changing reg in insn 4070
changing reg in insn 4074
changing reg in insn 4075
changing reg in insn 4077
changing reg in insn 4084
changing reg in insn 5
changing reg in insn 753
changing reg in insn 6
changing reg in insn 786
changing reg in insn 767
changing reg in insn 767
changing reg in insn 764
changing reg in insn 6
changing reg in insn 785
changing reg in insn 806
changing reg in insn 789
changing reg in insn 789
changing reg in insn 786
changing reg in insn 13
changing reg in insn 16
changing reg in insn 14
changing reg in insn 24
changing reg in insn 22
changing reg in insn 24
changing reg in insn 32
changing reg in insn 26
changing reg in insn 40
changing reg in insn 41
changing reg in insn 442
changing reg in insn 433
changing reg in insn 384
changing reg in insn 375
changing reg in insn 47
changing reg in insn 50
changing reg in insn 48
changing reg in insn 50
changing reg in insn 55
changing reg in insn 55
changing reg in insn 58
changing reg in insn 56
changing reg in insn 58
changing reg in insn 66
changing reg in insn 60
changing reg in insn 74
changing reg in insn 75
changing reg in insn 85
changing reg in insn 87
changing reg in insn 86
changing reg in insn 89
changing reg in insn 91
changing reg in insn 92
changing reg in insn 99
changing reg in insn 100
changing reg in insn 129
changing reg in insn 131
changing reg in insn 130
changing reg in insn 133
changing reg in insn 135
changing reg in insn 136
changing reg in insn 143
changing reg in insn 144
changing reg in insn 353
changing reg in insn 356
changing reg in insn 358
changing reg in insn 359
changing reg in insn 363
changing reg in insn 366
changing reg in insn 368
changing reg in insn 369
changing reg in insn 411
changing reg in insn 414
changing reg in insn 416
changing reg in insn 417
changing reg in insn 421
changing reg in insn 424
changing reg in insn 426
changing reg in insn 427
changing reg in insn 726
changing reg in insn 728
changing reg in insn 727
changing reg in insn 730
changing reg in insn 732
changing reg in insn 733
changing reg in insn 740
changing reg in insn 741
changing reg in insn 763
changing reg in insn 5
changing reg in insn 764
changing reg in insn 877
changing reg in insn 879
changing reg in insn 878
changing reg in insn 881
changing reg in insn 883
changing reg in insn 884
changing reg in insn 891
changing reg in insn 892
changing reg in insn 1073
changing reg in insn 1075
changing reg in insn 1074
changing reg in insn 1077
changing reg in insn 1079
changing reg in insn 1080
changing reg in insn 1087
changing reg in insn 1088
changing reg in insn 1255
changing reg in insn 1257
changing reg in insn 1256
changing reg in insn 1259
changing reg in insn 1261
changing reg in insn 1262
changing reg in insn 1269
changing reg in insn 1270
changing reg in insn 1444
changing reg in insn 1446
changing reg in insn 1445
changing reg in insn 1448
changing reg in insn 1450
changing reg in insn 1451
changing reg in insn 1458
changing reg in insn 1459
changing reg in insn 1503
changing reg in insn 1505
changing reg in insn 1504
changing reg in insn 1507
changing reg in insn 1509
changing reg in insn 1510
changing reg in insn 1517
changing reg in insn 1518
changing reg in insn 1534
changing reg in insn 1535
changing reg in insn 1539
changing reg in insn 1540
changing reg in insn 1989
changing reg in insn 1991
changing reg in insn 1990
changing reg in insn 1993
changing reg in insn 1995
changing reg in insn 1996
changing reg in insn 2003
changing reg in insn 2004
changing reg in insn 2028
changing reg in insn 2030
changing reg in insn 2029
changing reg in insn 2032
changing reg in insn 2034
changing reg in insn 2035
changing reg in insn 2042
changing reg in insn 2043
changing reg in insn 2059
changing reg in insn 2062
changing reg in insn 2064
changing reg in insn 2065
changing reg in insn 2646
changing reg in insn 2648
changing reg in insn 2647
changing reg in insn 2650
changing reg in insn 2652
changing reg in insn 2653
changing reg in insn 2660
changing reg in insn 2661
changing reg in insn 2801
changing reg in insn 2803
changing reg in insn 2802
changing reg in insn 2805
changing reg in insn 2807
changing reg in insn 2808
changing reg in insn 2815
changing reg in insn 2816
changing reg in insn 2956
changing reg in insn 2958
changing reg in insn 2957
changing reg in insn 2960
changing reg in insn 2962
changing reg in insn 2963
changing reg in insn 2970
changing reg in insn 2971
changing reg in insn 3113
changing reg in insn 3115
changing reg in insn 3114
changing reg in insn 3117
changing reg in insn 3119
changing reg in insn 3120
changing reg in insn 3127
changing reg in insn 3128
changing reg in insn 3270
changing reg in insn 3272
changing reg in insn 3271
changing reg in insn 3274
changing reg in insn 3276
changing reg in insn 3277
changing reg in insn 3284
changing reg in insn 3285
changing reg in insn 3425
changing reg in insn 3427
changing reg in insn 3426
changing reg in insn 3429
changing reg in insn 3431
changing reg in insn 3432
changing reg in insn 3439
changing reg in insn 3440
changing reg in insn 3558
changing reg in insn 3560
changing reg in insn 3559
changing reg in insn 3562
changing reg in insn 3564
changing reg in insn 3565
changing reg in insn 3572
changing reg in insn 3573
changing reg in insn 3713
changing reg in insn 3715
changing reg in insn 3714
changing reg in insn 3717
changing reg in insn 3719
changing reg in insn 3720
changing reg in insn 3727
changing reg in insn 3728
changing reg in insn 3891
changing reg in insn 3893
changing reg in insn 3892
changing reg in insn 3895
changing reg in insn 3897
changing reg in insn 3898
changing reg in insn 3905
changing reg in insn 3906
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 23
changing reg in insn 24
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 40
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 57
changing reg in insn 58
changing reg in insn 69
changing reg in insn 70
changing reg in insn 73
changing reg in insn 74
changing reg in insn 90
changing reg in insn 91
changing reg in insn 98
changing reg in insn 99
changing reg in insn 103
changing reg in insn 104
changing reg in insn 106
changing reg in insn 107
changing reg in insn 111
changing reg in insn 112
changing reg in insn 134
changing reg in insn 135
changing reg in insn 142
changing reg in insn 143
changing reg in insn 147
changing reg in insn 148
changing reg in insn 150
changing reg in insn 151
changing reg in insn 154
changing reg in insn 155
changing reg in insn 156
changing reg in insn 157
changing reg in insn 159
changing reg in insn 160
changing reg in insn 163
changing reg in insn 165
changing reg in insn 166
changing reg in insn 179
changing reg in insn 183
changing reg in insn 180
changing reg in insn 184
changing reg in insn 197
changing reg in insn 192
changing reg in insn 197
changing reg in insn 196
changing reg in insn 193
changing reg in insn 195
changing reg in insn 195
changing reg in insn 194
changing reg in insn 195
changing reg in insn 195
changing reg in insn 208
changing reg in insn 206
changing reg in insn 205
changing reg in insn 203
changing reg in insn 209
changing reg in insn 207
changing reg in insn 206
changing reg in insn 204
changing reg in insn 204
changing reg in insn 205
changing reg in insn 207
changing reg in insn 208
changing reg in insn 210
changing reg in insn 211
changing reg in insn 211
changing reg in insn 212
changing reg in insn 213
changing reg in insn 216
changing reg in insn 214
changing reg in insn 217
changing reg in insn 215
changing reg in insn 218
changing reg in insn 243
changing reg in insn 241
changing reg in insn 240
changing reg in insn 238
changing reg in insn 244
changing reg in insn 242
changing reg in insn 241
changing reg in insn 239
changing reg in insn 239
changing reg in insn 240
changing reg in insn 242
changing reg in insn 243
changing reg in insn 245
changing reg in insn 246
changing reg in insn 258
changing reg in insn 256
changing reg in insn 255
changing reg in insn 253
changing reg in insn 259
changing reg in insn 257
changing reg in insn 256
changing reg in insn 254
changing reg in insn 254
changing reg in insn 255
changing reg in insn 257
changing reg in insn 258
changing reg in insn 260
changing reg in insn 261
changing reg in insn 267
changing reg in insn 275
changing reg in insn 268
changing reg in insn 276
changing reg in insn 269
changing reg in insn 277
changing reg in insn 270
changing reg in insn 278
changing reg in insn 286
changing reg in insn 290
changing reg in insn 287
changing reg in insn 291
changing reg in insn 304
changing reg in insn 299
changing reg in insn 304
changing reg in insn 303
changing reg in insn 300
changing reg in insn 302
changing reg in insn 302
changing reg in insn 301
changing reg in insn 302
changing reg in insn 302
changing reg in insn 313
changing reg in insn 311
changing reg in insn 310
changing reg in insn 308
changing reg in insn 314
changing reg in insn 312
changing reg in insn 311
changing reg in insn 309
changing reg in insn 309
changing reg in insn 310
changing reg in insn 312
changing reg in insn 313
changing reg in insn 315
changing reg in insn 316
changing reg in insn 316
changing reg in insn 317
changing reg in insn 318
changing reg in insn 321
changing reg in insn 319
changing reg in insn 322
changing reg in insn 320
changing reg in insn 323
changing reg in insn 335
changing reg in insn 339
changing reg in insn 336
changing reg in insn 340
changing reg in insn 352
changing reg in insn 353
changing reg in insn 357
changing reg in insn 358
changing reg in insn 362
changing reg in insn 363
changing reg in insn 367
changing reg in insn 368
changing reg in insn 372
changing reg in insn 373
changing reg in insn 376
changing reg in insn 377
changing reg in insn 379
changing reg in insn 380
changing reg in insn 381
changing reg in insn 382
changing reg in insn 385
changing reg in insn 386
changing reg in insn 388
changing reg in insn 389
changing reg in insn 390
changing reg in insn 391
changing reg in insn 410
changing reg in insn 411
changing reg in insn 415
changing reg in insn 416
changing reg in insn 420
changing reg in insn 421
changing reg in insn 425
changing reg in insn 426
changing reg in insn 430
changing reg in insn 431
changing reg in insn 434
changing reg in insn 435
changing reg in insn 437
changing reg in insn 438
changing reg in insn 439
changing reg in insn 440
changing reg in insn 443
changing reg in insn 444
changing reg in insn 446
changing reg in insn 447
changing reg in insn 448
changing reg in insn 449
changing reg in insn 469
changing reg in insn 464
changing reg in insn 469
changing reg in insn 468
changing reg in insn 465
changing reg in insn 467
changing reg in insn 467
changing reg in insn 466
changing reg in insn 467
changing reg in insn 467
changing reg in insn 478
changing reg in insn 476
changing reg in insn 475
changing reg in insn 473
changing reg in insn 479
changing reg in insn 477
changing reg in insn 476
changing reg in insn 474
changing reg in insn 474
changing reg in insn 475
changing reg in insn 477
changing reg in insn 478
changing reg in insn 480
changing reg in insn 481
changing reg in insn 481
changing reg in insn 482
changing reg in insn 483
changing reg in insn 486
changing reg in insn 484
changing reg in insn 487
changing reg in insn 485
changing reg in insn 488
changing reg in insn 503
changing reg in insn 507
changing reg in insn 504
changing reg in insn 508
changing reg in insn 521
changing reg in insn 516
changing reg in insn 521
changing reg in insn 520
changing reg in insn 517
changing reg in insn 519
changing reg in insn 519
changing reg in insn 518
changing reg in insn 519
changing reg in insn 519
changing reg in insn 530
changing reg in insn 528
changing reg in insn 527
changing reg in insn 525
changing reg in insn 531
changing reg in insn 529
changing reg in insn 528
changing reg in insn 526
changing reg in insn 526
changing reg in insn 527
changing reg in insn 529
changing reg in insn 530
changing reg in insn 532
changing reg in insn 533
changing reg in insn 533
changing reg in insn 534
changing reg in insn 535
changing reg in insn 538
changing reg in insn 536
changing reg in insn 539
changing reg in insn 537
changing reg in insn 540
changing reg in insn 552
changing reg in insn 556
changing reg in insn 553
changing reg in insn 557
changing reg in insn 570
changing reg in insn 565
changing reg in insn 570
changing reg in insn 569
changing reg in insn 566
changing reg in insn 568
changing reg in insn 568
changing reg in insn 567
changing reg in insn 568
changing reg in insn 568
changing reg in insn 571
changing reg in insn 574
changing reg in insn 572
changing reg in insn 575
changing reg in insn 573
changing reg in insn 577
changing reg in insn 588
changing reg in insn 586
changing reg in insn 585
changing reg in insn 583
changing reg in insn 589
changing reg in insn 587
changing reg in insn 586
changing reg in insn 584
changing reg in insn 584
changing reg in insn 585
changing reg in insn 587
changing reg in insn 588
changing reg in insn 590
changing reg in insn 591
changing reg in insn 591
changing reg in insn 592
changing reg in insn 593
changing reg in insn 596
changing reg in insn 594
changing reg in insn 597
changing reg in insn 595
changing reg in insn 598
changing reg in insn 610
changing reg in insn 614
changing reg in insn 611
changing reg in insn 615
changing reg in insn 628
changing reg in insn 623
changing reg in insn 628
changing reg in insn 627
changing reg in insn 624
changing reg in insn 626
changing reg in insn 626
changing reg in insn 625
changing reg in insn 626
changing reg in insn 626
changing reg in insn 629
changing reg in insn 632
changing reg in insn 630
changing reg in insn 633
changing reg in insn 631
changing reg in insn 635
changing reg in insn 646
changing reg in insn 644
changing reg in insn 643
changing reg in insn 641
changing reg in insn 647
changing reg in insn 645
changing reg in insn 644
changing reg in insn 642
changing reg in insn 642
changing reg in insn 643
changing reg in insn 645
changing reg in insn 646
changing reg in insn 648
changing reg in insn 649
changing reg in insn 649
changing reg in insn 650
changing reg in insn 651
changing reg in insn 654
changing reg in insn 652
changing reg in insn 655
changing reg in insn 653
changing reg in insn 656
changing reg in insn 668
changing reg in insn 672
changing reg in insn 669
changing reg in insn 673
changing reg in insn 686
changing reg in insn 681
changing reg in insn 686
changing reg in insn 685
changing reg in insn 682
changing reg in insn 684
changing reg in insn 684
changing reg in insn 683
changing reg in insn 684
changing reg in insn 684
changing reg in insn 687
changing reg in insn 690
changing reg in insn 688
changing reg in insn 691
changing reg in insn 689
changing reg in insn 693
changing reg in insn 704
changing reg in insn 702
changing reg in insn 701
changing reg in insn 699
changing reg in insn 705
changing reg in insn 703
changing reg in insn 702
changing reg in insn 700
changing reg in insn 700
changing reg in insn 701
changing reg in insn 703
changing reg in insn 704
changing reg in insn 706
changing reg in insn 707
changing reg in insn 707
changing reg in insn 708
changing reg in insn 709
changing reg in insn 712
changing reg in insn 710
changing reg in insn 713
changing reg in insn 711
changing reg in insn 714
changing reg in insn 731
changing reg in insn 732
changing reg in insn 739
changing reg in insn 740
changing reg in insn 744
changing reg in insn 745
changing reg in insn 747
changing reg in insn 748
changing reg in insn 751
changing reg in insn 753
changing reg in insn 752
changing reg in insn 753
changing reg in insn 754
changing reg in insn 755
changing reg in insn 757
changing reg in insn 758
changing reg in insn 761
changing reg in insn 763
changing reg in insn 762
changing reg in insn 763
changing reg in insn 765
changing reg in insn 766
changing reg in insn 768
changing reg in insn 769
changing reg in insn 776
changing reg in insn 777
changing reg in insn 779
changing reg in insn 780
changing reg in insn 783
changing reg in insn 785
changing reg in insn 784
changing reg in insn 785
changing reg in insn 787
changing reg in insn 788
changing reg in insn 790
changing reg in insn 791
changing reg in insn 798
changing reg in insn 799
changing reg in insn 801
changing reg in insn 802
changing reg in insn 805
changing reg in insn 806
changing reg in insn 819
changing reg in insn 823
changing reg in insn 820
changing reg in insn 824
changing reg in insn 837
changing reg in insn 832
changing reg in insn 837
changing reg in insn 836
changing reg in insn 833
changing reg in insn 835
changing reg in insn 835
changing reg in insn 834
changing reg in insn 835
changing reg in insn 835
changing reg in insn 838
changing reg in insn 841
changing reg in insn 839
changing reg in insn 842
changing reg in insn 840
changing reg in insn 844
changing reg in insn 855
changing reg in insn 853
changing reg in insn 852
changing reg in insn 850
changing reg in insn 856
changing reg in insn 854
changing reg in insn 853
changing reg in insn 851
changing reg in insn 851
changing reg in insn 852
changing reg in insn 854
changing reg in insn 855
changing reg in insn 857
changing reg in insn 858
changing reg in insn 858
changing reg in insn 859
changing reg in insn 860
changing reg in insn 863
changing reg in insn 861
changing reg in insn 864
changing reg in insn 862
changing reg in insn 865
changing reg in insn 882
changing reg in insn 883
changing reg in insn 890
changing reg in insn 891
changing reg in insn 895
changing reg in insn 896
changing reg in insn 898
changing reg in insn 899
changing reg in insn 902
changing reg in insn 904
changing reg in insn 903
changing reg in insn 904
changing reg in insn 905
changing reg in insn 906
changing reg in insn 908
changing reg in insn 909
changing reg in insn 912
changing reg in insn 914
changing reg in insn 913
changing reg in insn 914
changing reg in insn 915
changing reg in insn 916
changing reg in insn 920
changing reg in insn 921
changing reg in insn 923
changing reg in insn 924
changing reg in insn 927
changing reg in insn 929
changing reg in insn 928
changing reg in insn 929
changing reg in insn 930
changing reg in insn 931
changing reg in insn 933
changing reg in insn 934
changing reg in insn 937
changing reg in insn 939
changing reg in insn 938
changing reg in insn 939
changing reg in insn 943
changing reg in insn 944
changing reg in insn 946
changing reg in insn 947
changing reg in insn 951
changing reg in insn 952
changing reg in insn 957
changing reg in insn 958
changing reg in insn 960
changing reg in insn 961
changing reg in insn 964
changing reg in insn 966
changing reg in insn 965
changing reg in insn 966
changing reg in insn 981
changing reg in insn 985
changing reg in insn 982
changing reg in insn 986
changing reg in insn 999
changing reg in insn 994
changing reg in insn 999
changing reg in insn 998
changing reg in insn 995
changing reg in insn 997
changing reg in insn 997
changing reg in insn 996
changing reg in insn 997
changing reg in insn 997
changing reg in insn 1000
changing reg in insn 1001
changing reg in insn 1002
changing reg in insn 1003
changing reg in insn 1004
changing reg in insn 1005
changing reg in insn 1006
changing reg in insn 1007
changing reg in insn 1007
changing reg in insn 1007
changing reg in insn 1008
changing reg in insn 1007
changing reg in insn 1009
changing reg in insn 1010
changing reg in insn 1015
changing reg in insn 1016
changing reg in insn 1022
changing reg in insn 1023
changing reg in insn 1034
changing reg in insn 1037
changing reg in insn 1035
changing reg in insn 1038
changing reg in insn 1036
changing reg in insn 1040
changing reg in insn 1051
changing reg in insn 1049
changing reg in insn 1048
changing reg in insn 1046
changing reg in insn 1052
changing reg in insn 1050
changing reg in insn 1049
changing reg in insn 1047
changing reg in insn 1047
changing reg in insn 1048
changing reg in insn 1050
changing reg in insn 1051
changing reg in insn 1053
changing reg in insn 1054
changing reg in insn 1054
changing reg in insn 1055
changing reg in insn 1056
changing reg in insn 1059
changing reg in insn 1057
changing reg in insn 1060
changing reg in insn 1058
changing reg in insn 1061
changing reg in insn 1078
changing reg in insn 1079
changing reg in insn 1086
changing reg in insn 1087
changing reg in insn 1091
changing reg in insn 1092
changing reg in insn 1094
changing reg in insn 1095
changing reg in insn 1098
changing reg in insn 1100
changing reg in insn 1099
changing reg in insn 1100
changing reg in insn 1104
changing reg in insn 1105
changing reg in insn 1107
changing reg in insn 1108
changing reg in insn 1111
changing reg in insn 1113
changing reg in insn 1112
changing reg in insn 1113
changing reg in insn 1114
changing reg in insn 1115
changing reg in insn 1117
changing reg in insn 1118
changing reg in insn 1121
changing reg in insn 1123
changing reg in insn 1122
changing reg in insn 1123
changing reg in insn 1125
changing reg in insn 1126
changing reg in insn 1128
changing reg in insn 1129
changing reg in insn 1133
changing reg in insn 1134
changing reg in insn 1139
changing reg in insn 1140
changing reg in insn 1142
changing reg in insn 1143
changing reg in insn 1146
changing reg in insn 1148
changing reg in insn 1147
changing reg in insn 1148
changing reg in insn 1163
changing reg in insn 1167
changing reg in insn 1164
changing reg in insn 1168
changing reg in insn 1181
changing reg in insn 1176
changing reg in insn 1181
changing reg in insn 1180
changing reg in insn 1177
changing reg in insn 1179
changing reg in insn 1179
changing reg in insn 1178
changing reg in insn 1179
changing reg in insn 1179
changing reg in insn 1182
changing reg in insn 1183
changing reg in insn 1184
changing reg in insn 1185
changing reg in insn 1186
changing reg in insn 1187
changing reg in insn 1188
changing reg in insn 1189
changing reg in insn 1189
changing reg in insn 1189
changing reg in insn 1190
changing reg in insn 1189
changing reg in insn 1191
changing reg in insn 1192
changing reg in insn 1197
changing reg in insn 1198
changing reg in insn 1204
changing reg in insn 1205
changing reg in insn 1216
changing reg in insn 1219
changing reg in insn 1217
changing reg in insn 1220
changing reg in insn 1218
changing reg in insn 1222
changing reg in insn 1233
changing reg in insn 1231
changing reg in insn 1230
changing reg in insn 1228
changing reg in insn 1234
changing reg in insn 1232
changing reg in insn 1231
changing reg in insn 1229
changing reg in insn 1229
changing reg in insn 1230
changing reg in insn 1232
changing reg in insn 1233
changing reg in insn 1235
changing reg in insn 1236
changing reg in insn 1236
changing reg in insn 1237
changing reg in insn 1238
changing reg in insn 1241
changing reg in insn 1239
changing reg in insn 1242
changing reg in insn 1240
changing reg in insn 1243
changing reg in insn 1260
changing reg in insn 1261
changing reg in insn 1268
changing reg in insn 1269
changing reg in insn 1273
changing reg in insn 1274
changing reg in insn 1276
changing reg in insn 1277
changing reg in insn 1280
changing reg in insn 1282
changing reg in insn 1281
changing reg in insn 1282
changing reg in insn 1286
changing reg in insn 1287
changing reg in insn 1289
changing reg in insn 1290
changing reg in insn 1293
changing reg in insn 1295
changing reg in insn 1294
changing reg in insn 1295
changing reg in insn 1296
changing reg in insn 1297
changing reg in insn 1299
changing reg in insn 1300
changing reg in insn 1303
changing reg in insn 1305
changing reg in insn 1304
changing reg in insn 1305
changing reg in insn 1307
changing reg in insn 1308
changing reg in insn 1310
changing reg in insn 1311
changing reg in insn 1315
changing reg in insn 1316
changing reg in insn 1321
changing reg in insn 1322
changing reg in insn 1324
changing reg in insn 1325
changing reg in insn 1328
changing reg in insn 1330
changing reg in insn 1329
changing reg in insn 1330
changing reg in insn 1345
changing reg in insn 1349
changing reg in insn 1346
changing reg in insn 1350
changing reg in insn 1363
changing reg in insn 1358
changing reg in insn 1363
changing reg in insn 1362
changing reg in insn 1359
changing reg in insn 1361
changing reg in insn 1361
changing reg in insn 1360
changing reg in insn 1361
changing reg in insn 1361
changing reg in insn 1364
changing reg in insn 1365
changing reg in insn 1366
changing reg in insn 1367
changing reg in insn 1368
changing reg in insn 1369
changing reg in insn 1370
changing reg in insn 1371
changing reg in insn 1371
changing reg in insn 1371
changing reg in insn 1372
changing reg in insn 1371
changing reg in insn 1373
changing reg in insn 1374
changing reg in insn 1379
changing reg in insn 1380
changing reg in insn 1386
changing reg in insn 1387
changing reg in insn 1398
changing reg in insn 1401
changing reg in insn 1399
changing reg in insn 1402
changing reg in insn 1400
changing reg in insn 1404
changing reg in insn 1415
changing reg in insn 1413
changing reg in insn 1412
changing reg in insn 1410
changing reg in insn 1416
changing reg in insn 1414
changing reg in insn 1413
changing reg in insn 1411
changing reg in insn 1411
changing reg in insn 1412
changing reg in insn 1414
changing reg in insn 1415
changing reg in insn 1417
changing reg in insn 1418
changing reg in insn 1418
changing reg in insn 1419
changing reg in insn 1420
changing reg in insn 1423
changing reg in insn 1421
changing reg in insn 1424
changing reg in insn 1422
changing reg in insn 1425
changing reg in insn 1442
changing reg in insn 1443
changing reg in insn 1449
changing reg in insn 1450
changing reg in insn 1457
changing reg in insn 1458
changing reg in insn 1462
changing reg in insn 1463
changing reg in insn 1465
changing reg in insn 1466
changing reg in insn 1469
changing reg in insn 1470
changing reg in insn 1471
changing reg in insn 1472
changing reg in insn 1474
changing reg in insn 1475
changing reg in insn 1479
changing reg in insn 1480
changing reg in insn 1481
changing reg in insn 1482
changing reg in insn 1484
changing reg in insn 1485
changing reg in insn 1489
changing reg in insn 1490
changing reg in insn 1508
changing reg in insn 1509
changing reg in insn 1516
changing reg in insn 1517
changing reg in insn 1521
changing reg in insn 1522
changing reg in insn 1524
changing reg in insn 1525
changing reg in insn 1528
changing reg in insn 1530
changing reg in insn 1529
changing reg in insn 1530
changing reg in insn 1530
changing reg in insn 1531
changing reg in insn 1532
changing reg in insn 1533
changing reg in insn 1538
changing reg in insn 1539
changing reg in insn 1543
changing reg in insn 1544
changing reg in insn 1546
changing reg in insn 1547
changing reg in insn 1550
changing reg in insn 1551
changing reg in insn 1554
changing reg in insn 1555
changing reg in insn 1562
changing reg in insn 1563
changing reg in insn 1565
changing reg in insn 1566
changing reg in insn 1569
changing reg in insn 1570
changing reg in insn 1574
changing reg in insn 1575
changing reg in insn 1576
changing reg in insn 1577
changing reg in insn 1579
changing reg in insn 1580
changing reg in insn 1583
changing reg in insn 1585
changing reg in insn 1584
changing reg in insn 1585
changing reg in insn 1592
changing reg in insn 1593
changing reg in insn 1595
changing reg in insn 1596
changing reg in insn 1599
changing reg in insn 1601
changing reg in insn 1600
changing reg in insn 1601
changing reg in insn 1601
changing reg in insn 1602
changing reg in insn 1605
changing reg in insn 1606
changing reg in insn 1608
changing reg in insn 1609
changing reg in insn 1612
changing reg in insn 1613
changing reg in insn 1622
changing reg in insn 1623
changing reg in insn 1625
changing reg in insn 1626
changing reg in insn 1632
changing reg in insn 1633
changing reg in insn 1635
changing reg in insn 1636
changing reg in insn 1640
changing reg in insn 1641
changing reg in insn 1642
changing reg in insn 1643
changing reg in insn 1645
changing reg in insn 1646
changing reg in insn 1650
changing reg in insn 1651
changing reg in insn 1656
changing reg in insn 1657
changing reg in insn 1659
changing reg in insn 1660
changing reg in insn 1666
changing reg in insn 1667
changing reg in insn 1670
changing reg in insn 1672
changing reg in insn 1671
changing reg in insn 1672
changing reg in insn 1673
changing reg in insn 1674
changing reg in insn 1676
changing reg in insn 1677
changing reg in insn 1680
changing reg in insn 1682
changing reg in insn 1681
changing reg in insn 1682
changing reg in insn 1684
changing reg in insn 1685
changing reg in insn 1686
changing reg in insn 1687
changing reg in insn 1689
changing reg in insn 1690
changing reg in insn 1694
changing reg in insn 1695
changing reg in insn 1696
changing reg in insn 1697
changing reg in insn 1699
changing reg in insn 1700
changing reg in insn 1703
changing reg in insn 1704
changing reg in insn 1706
changing reg in insn 1707
changing reg in insn 1710
changing reg in insn 1712
changing reg in insn 1711
changing reg in insn 1712
changing reg in insn 1713
changing reg in insn 1714
changing reg in insn 1719
changing reg in insn 1720
changing reg in insn 1720
changing reg in insn 1721
changing reg in insn 1722
changing reg in insn 1723
changing reg in insn 1725
changing reg in insn 1727
changing reg in insn 1726
changing reg in insn 1727
changing reg in insn 1728
changing reg in insn 1729
changing reg in insn 1731
changing reg in insn 1732
changing reg in insn 1735
changing reg in insn 1737
changing reg in insn 1736
changing reg in insn 1737
changing reg in insn 1739
changing reg in insn 1740
changing reg in insn 1741
changing reg in insn 1742
changing reg in insn 1744
changing reg in insn 1745
changing reg in insn 1749
changing reg in insn 1750
changing reg in insn 1751
changing reg in insn 1752
changing reg in insn 1755
changing reg in insn 1756
changing reg in insn 1759
changing reg in insn 1760
changing reg in insn 1763
changing reg in insn 1765
changing reg in insn 1764
changing reg in insn 1765
changing reg in insn 1766
changing reg in insn 1767
changing reg in insn 1770
changing reg in insn 1771
changing reg in insn 1774
changing reg in insn 1775
changing reg in insn 1778
changing reg in insn 1780
changing reg in insn 1779
changing reg in insn 1780
changing reg in insn 1782
changing reg in insn 1783
changing reg in insn 1786
changing reg in insn 1787
changing reg in insn 1790
changing reg in insn 1791
changing reg in insn 1794
changing reg in insn 1796
changing reg in insn 1795
changing reg in insn 1796
changing reg in insn 1797
changing reg in insn 1798
changing reg in insn 1799
changing reg in insn 1803
changing reg in insn 1804
changing reg in insn 1805
changing reg in insn 1806
changing reg in insn 1809
changing reg in insn 1810
changing reg in insn 1813
changing reg in insn 1814
changing reg in insn 1817
changing reg in insn 1818
changing reg in insn 1822
changing reg in insn 1823
changing reg in insn 1825
changing reg in insn 1826
changing reg in insn 1829
changing reg in insn 1830
changing reg in insn 1837
changing reg in insn 1838
changing reg in insn 1841
changing reg in insn 1842
changing reg in insn 1845
changing reg in insn 1846
changing reg in insn 1849
changing reg in insn 1851
changing reg in insn 1850
changing reg in insn 1851
changing reg in insn 1852
changing reg in insn 1853
changing reg in insn 1855
changing reg in insn 1856
changing reg in insn 1860
changing reg in insn 1861
changing reg in insn 1880
changing reg in insn 1884
changing reg in insn 1881
changing reg in insn 1885
changing reg in insn 1898
changing reg in insn 1893
changing reg in insn 1898
changing reg in insn 1897
changing reg in insn 1894
changing reg in insn 1896
changing reg in insn 1896
changing reg in insn 1895
changing reg in insn 1896
changing reg in insn 1896
changing reg in insn 1907
changing reg in insn 1905
changing reg in insn 1904
changing reg in insn 1902
changing reg in insn 1908
changing reg in insn 1906
changing reg in insn 1905
changing reg in insn 1903
changing reg in insn 1903
changing reg in insn 1904
changing reg in insn 1906
changing reg in insn 1907
changing reg in insn 1909
changing reg in insn 1910
changing reg in insn 1910
changing reg in insn 1911
changing reg in insn 1912
changing reg in insn 1915
changing reg in insn 1913
changing reg in insn 1916
changing reg in insn 1914
changing reg in insn 1917
changing reg in insn 1929
changing reg in insn 1933
changing reg in insn 1930
changing reg in insn 1934
changing reg in insn 1947
changing reg in insn 1942
changing reg in insn 1947
changing reg in insn 1946
changing reg in insn 1943
changing reg in insn 1945
changing reg in insn 1945
changing reg in insn 1944
changing reg in insn 1945
changing reg in insn 1945
changing reg in insn 1956
changing reg in insn 1954
changing reg in insn 1953
changing reg in insn 1951
changing reg in insn 1957
changing reg in insn 1955
changing reg in insn 1954
changing reg in insn 1952
changing reg in insn 1952
changing reg in insn 1953
changing reg in insn 1955
changing reg in insn 1956
changing reg in insn 1958
changing reg in insn 1959
changing reg in insn 1959
changing reg in insn 1960
changing reg in insn 1961
changing reg in insn 1964
changing reg in insn 1962
changing reg in insn 1965
changing reg in insn 1963
changing reg in insn 1966
changing reg in insn 1987
changing reg in insn 1988
changing reg in insn 1994
changing reg in insn 1995
changing reg in insn 2002
changing reg in insn 2003
changing reg in insn 2007
changing reg in insn 2008
changing reg in insn 2010
changing reg in insn 2011
changing reg in insn 2014
changing reg in insn 2015
changing reg in insn 2033
changing reg in insn 2034
changing reg in insn 2041
changing reg in insn 2042
changing reg in insn 2046
changing reg in insn 2047
changing reg in insn 2048
changing reg in insn 2049
changing reg in insn 2051
changing reg in insn 2052
changing reg in insn 2055
changing reg in insn 2057
changing reg in insn 2056
changing reg in insn 2057
changing reg in insn 2057
changing reg in insn 2058
changing reg in insn 2063
changing reg in insn 2064
changing reg in insn 2068
changing reg in insn 2069
changing reg in insn 2071
changing reg in insn 2072
changing reg in insn 2075
changing reg in insn 2076
changing reg in insn 2079
changing reg in insn 2080
changing reg in insn 2087
changing reg in insn 2088
changing reg in insn 2090
changing reg in insn 2091
changing reg in insn 2094
changing reg in insn 2095
changing reg in insn 2099
changing reg in insn 2100
changing reg in insn 2101
changing reg in insn 2102
changing reg in insn 2104
changing reg in insn 2105
changing reg in insn 2108
changing reg in insn 2110
changing reg in insn 2109
changing reg in insn 2110
changing reg in insn 2111
changing reg in insn 2112
changing reg in insn 2118
changing reg in insn 2119
changing reg in insn 2121
changing reg in insn 2122
changing reg in insn 2125
changing reg in insn 2127
changing reg in insn 2126
changing reg in insn 2127
changing reg in insn 2127
changing reg in insn 2128
changing reg in insn 2131
changing reg in insn 2132
changing reg in insn 2134
changing reg in insn 2135
changing reg in insn 2138
changing reg in insn 2139
changing reg in insn 2148
changing reg in insn 2149
changing reg in insn 2151
changing reg in insn 2152
changing reg in insn 2158
changing reg in insn 2159
changing reg in insn 2161
changing reg in insn 2162
changing reg in insn 2166
changing reg in insn 2167
changing reg in insn 2168
changing reg in insn 2169
changing reg in insn 2171
changing reg in insn 2172
changing reg in insn 2176
changing reg in insn 2177
changing reg in insn 2178
changing reg in insn 2179
changing reg in insn 2181
changing reg in insn 2182
changing reg in insn 2185
changing reg in insn 2187
changing reg in insn 2186
changing reg in insn 2187
changing reg in insn 2187
changing reg in insn 2188
changing reg in insn 2189
changing reg in insn 2190
changing reg in insn 2192
changing reg in insn 2193
changing reg in insn 2196
changing reg in insn 2197
changing reg in insn 2200
changing reg in insn 2201
changing reg in insn 2203
changing reg in insn 2204
changing reg in insn 2207
changing reg in insn 2209
changing reg in insn 2208
changing reg in insn 2209
changing reg in insn 2210
changing reg in insn 2211
changing reg in insn 2216
changing reg in insn 2217
changing reg in insn 2219
changing reg in insn 2220
changing reg in insn 2226
changing reg in insn 2227
changing reg in insn 2228
changing reg in insn 2229
changing reg in insn 2231
changing reg in insn 2232
changing reg in insn 2235
changing reg in insn 2237
changing reg in insn 2236
changing reg in insn 2237
changing reg in insn 2239
changing reg in insn 2240
changing reg in insn 2241
changing reg in insn 2242
changing reg in insn 2244
changing reg in insn 2245
changing reg in insn 2249
changing reg in insn 2250
changing reg in insn 2251
changing reg in insn 2252
changing reg in insn 2254
changing reg in insn 2255
changing reg in insn 2258
changing reg in insn 2259
changing reg in insn 2261
changing reg in insn 2262
changing reg in insn 2265
changing reg in insn 2267
changing reg in insn 2266
changing reg in insn 2267
changing reg in insn 2268
changing reg in insn 2269
changing reg in insn 2270
changing reg in insn 2271
changing reg in insn 2273
changing reg in insn 2274
changing reg in insn 2277
changing reg in insn 2278
changing reg in insn 2280
changing reg in insn 2281
changing reg in insn 2284
changing reg in insn 2286
changing reg in insn 2285
changing reg in insn 2286
changing reg in insn 2287
changing reg in insn 2288
changing reg in insn 2293
changing reg in insn 2294
changing reg in insn 2294
changing reg in insn 2295
changing reg in insn 2296
changing reg in insn 2297
changing reg in insn 2299
changing reg in insn 2301
changing reg in insn 2300
changing reg in insn 2301
changing reg in insn 2302
changing reg in insn 2303
changing reg in insn 2305
changing reg in insn 2306
changing reg in insn 2309
changing reg in insn 2311
changing reg in insn 2310
changing reg in insn 2311
changing reg in insn 2313
changing reg in insn 2314
changing reg in insn 2315
changing reg in insn 2316
changing reg in insn 2318
changing reg in insn 2319
changing reg in insn 2323
changing reg in insn 2324
changing reg in insn 2325
changing reg in insn 2326
changing reg in insn 2329
changing reg in insn 2330
changing reg in insn 2333
changing reg in insn 2334
changing reg in insn 2337
changing reg in insn 2339
changing reg in insn 2338
changing reg in insn 2339
changing reg in insn 2340
changing reg in insn 2341
changing reg in insn 2344
changing reg in insn 2345
changing reg in insn 2348
changing reg in insn 2349
changing reg in insn 2352
changing reg in insn 2354
changing reg in insn 2353
changing reg in insn 2354
changing reg in insn 2356
changing reg in insn 2357
changing reg in insn 2360
changing reg in insn 2361
changing reg in insn 2364
changing reg in insn 2365
changing reg in insn 2368
changing reg in insn 2370
changing reg in insn 2369
changing reg in insn 2370
changing reg in insn 2371
changing reg in insn 2372
changing reg in insn 2373
changing reg in insn 2377
changing reg in insn 2378
changing reg in insn 2379
changing reg in insn 2380
changing reg in insn 2383
changing reg in insn 2384
changing reg in insn 2387
changing reg in insn 2388
changing reg in insn 2391
changing reg in insn 2392
changing reg in insn 2396
changing reg in insn 2397
changing reg in insn 2399
changing reg in insn 2400
changing reg in insn 2403
changing reg in insn 2404
changing reg in insn 2411
changing reg in insn 2412
changing reg in insn 2415
changing reg in insn 2416
changing reg in insn 2419
changing reg in insn 2420
changing reg in insn 2423
changing reg in insn 2425
changing reg in insn 2424
changing reg in insn 2425
changing reg in insn 2426
changing reg in insn 2427
changing reg in insn 2429
changing reg in insn 2430
changing reg in insn 2434
changing reg in insn 2435
changing reg in insn 2436
changing reg in insn 2437
changing reg in insn 2439
changing reg in insn 2440
changing reg in insn 2443
changing reg in insn 2444
changing reg in insn 2447
changing reg in insn 2448
changing reg in insn 2450
changing reg in insn 2451
changing reg in insn 2454
changing reg in insn 2456
changing reg in insn 2455
changing reg in insn 2456
changing reg in insn 2457
changing reg in insn 2458
changing reg in insn 2477
changing reg in insn 2481
changing reg in insn 2478
changing reg in insn 2482
changing reg in insn 2495
changing reg in insn 2490
changing reg in insn 2495
changing reg in insn 2494
changing reg in insn 2491
changing reg in insn 2493
changing reg in insn 2493
changing reg in insn 2492
changing reg in insn 2493
changing reg in insn 2493
changing reg in insn 2504
changing reg in insn 2502
changing reg in insn 2501
changing reg in insn 2499
changing reg in insn 2505
changing reg in insn 2503
changing reg in insn 2502
changing reg in insn 2500
changing reg in insn 2500
changing reg in insn 2501
changing reg in insn 2503
changing reg in insn 2504
changing reg in insn 2506
changing reg in insn 2507
changing reg in insn 2507
changing reg in insn 2508
changing reg in insn 2509
changing reg in insn 2512
changing reg in insn 2510
changing reg in insn 2513
changing reg in insn 2511
changing reg in insn 2514
changing reg in insn 2526
changing reg in insn 2530
changing reg in insn 2527
changing reg in insn 2531
changing reg in insn 2544
changing reg in insn 2539
changing reg in insn 2544
changing reg in insn 2543
changing reg in insn 2540
changing reg in insn 2542
changing reg in insn 2542
changing reg in insn 2541
changing reg in insn 2542
changing reg in insn 2542
changing reg in insn 2553
changing reg in insn 2551
changing reg in insn 2550
changing reg in insn 2548
changing reg in insn 2554
changing reg in insn 2552
changing reg in insn 2551
changing reg in insn 2549
changing reg in insn 2549
changing reg in insn 2550
changing reg in insn 2552
changing reg in insn 2553
changing reg in insn 2555
changing reg in insn 2556
changing reg in insn 2556
changing reg in insn 2557
changing reg in insn 2558
changing reg in insn 2561
changing reg in insn 2559
changing reg in insn 2562
changing reg in insn 2560
changing reg in insn 2563
changing reg in insn 2575
changing reg in insn 2579
changing reg in insn 2576
changing reg in insn 2580
changing reg in insn 2593
changing reg in insn 2588
changing reg in insn 2593
changing reg in insn 2592
changing reg in insn 2589
changing reg in insn 2591
changing reg in insn 2591
changing reg in insn 2590
changing reg in insn 2591
changing reg in insn 2591
changing reg in insn 2602
changing reg in insn 2600
changing reg in insn 2599
changing reg in insn 2597
changing reg in insn 2603
changing reg in insn 2601
changing reg in insn 2600
changing reg in insn 2598
changing reg in insn 2598
changing reg in insn 2599
changing reg in insn 2601
changing reg in insn 2602
changing reg in insn 2604
changing reg in insn 2605
changing reg in insn 2605
changing reg in insn 2606
changing reg in insn 2607
changing reg in insn 2610
changing reg in insn 2608
changing reg in insn 2611
changing reg in insn 2609
changing reg in insn 2612
changing reg in insn 2624
changing reg in insn 2625
changing reg in insn 2626
changing reg in insn 2627
changing reg in insn 2633
changing reg in insn 2634
changing reg in insn 2636
changing reg in insn 2637
changing reg in insn 2635
changing reg in insn 2636
changing reg in insn 2642
changing reg in insn 2643
changing reg in insn 2651
changing reg in insn 2652
changing reg in insn 2659
changing reg in insn 2660
changing reg in insn 2664
changing reg in insn 2665
changing reg in insn 2667
changing reg in insn 2668
changing reg in insn 2671
changing reg in insn 2673
changing reg in insn 2672
changing reg in insn 2673
changing reg in insn 2674
changing reg in insn 2675
changing reg in insn 2677
changing reg in insn 2678
changing reg in insn 2682
changing reg in insn 2683
changing reg in insn 2696
changing reg in insn 2700
changing reg in insn 2697
changing reg in insn 2701
changing reg in insn 2714
changing reg in insn 2709
changing reg in insn 2714
changing reg in insn 2713
changing reg in insn 2710
changing reg in insn 2712
changing reg in insn 2712
changing reg in insn 2711
changing reg in insn 2712
changing reg in insn 2712
changing reg in insn 2715
changing reg in insn 2716
changing reg in insn 2717
changing reg in insn 2718
changing reg in insn 2719
changing reg in insn 2720
changing reg in insn 2721
changing reg in insn 2722
changing reg in insn 2722
changing reg in insn 2722
changing reg in insn 2723
changing reg in insn 2722
changing reg in insn 2724
changing reg in insn 2725
changing reg in insn 2730
changing reg in insn 2731
changing reg in insn 2737
changing reg in insn 2738
changing reg in insn 2757
changing reg in insn 2755
changing reg in insn 2754
changing reg in insn 2752
changing reg in insn 2758
changing reg in insn 2756
changing reg in insn 2755
changing reg in insn 2753
changing reg in insn 2753
changing reg in insn 2754
changing reg in insn 2756
changing reg in insn 2757
changing reg in insn 2759
changing reg in insn 2760
changing reg in insn 2760
changing reg in insn 2761
changing reg in insn 2762
changing reg in insn 2765
changing reg in insn 2763
changing reg in insn 2766
changing reg in insn 2764
changing reg in insn 2767
changing reg in insn 2779
changing reg in insn 2780
changing reg in insn 2781
changing reg in insn 2782
changing reg in insn 2788
changing reg in insn 2789
changing reg in insn 2791
changing reg in insn 2792
changing reg in insn 2790
changing reg in insn 2791
changing reg in insn 2797
changing reg in insn 2798
changing reg in insn 2806
changing reg in insn 2807
changing reg in insn 2814
changing reg in insn 2815
changing reg in insn 2819
changing reg in insn 2820
changing reg in insn 2822
changing reg in insn 2823
changing reg in insn 2826
changing reg in insn 2828
changing reg in insn 2827
changing reg in insn 2828
changing reg in insn 2829
changing reg in insn 2830
changing reg in insn 2832
changing reg in insn 2833
changing reg in insn 2837
changing reg in insn 2838
changing reg in insn 2851
changing reg in insn 2855
changing reg in insn 2852
changing reg in insn 2856
changing reg in insn 2869
changing reg in insn 2864
changing reg in insn 2869
changing reg in insn 2868
changing reg in insn 2865
changing reg in insn 2867
changing reg in insn 2867
changing reg in insn 2866
changing reg in insn 2867
changing reg in insn 2867
changing reg in insn 2870
changing reg in insn 2871
changing reg in insn 2872
changing reg in insn 2873
changing reg in insn 2874
changing reg in insn 2875
changing reg in insn 2876
changing reg in insn 2877
changing reg in insn 2877
changing reg in insn 2877
changing reg in insn 2878
changing reg in insn 2877
changing reg in insn 2879
changing reg in insn 2880
changing reg in insn 2885
changing reg in insn 2886
changing reg in insn 2892
changing reg in insn 2893
changing reg in insn 2912
changing reg in insn 2910
changing reg in insn 2909
changing reg in insn 2907
changing reg in insn 2913
changing reg in insn 2911
changing reg in insn 2910
changing reg in insn 2908
changing reg in insn 2908
changing reg in insn 2909
changing reg in insn 2911
changing reg in insn 2912
changing reg in insn 2914
changing reg in insn 2915
changing reg in insn 2915
changing reg in insn 2916
changing reg in insn 2917
changing reg in insn 2920
changing reg in insn 2918
changing reg in insn 2921
changing reg in insn 2919
changing reg in insn 2922
changing reg in insn 2934
changing reg in insn 2935
changing reg in insn 2936
changing reg in insn 2937
changing reg in insn 2943
changing reg in insn 2944
changing reg in insn 2946
changing reg in insn 2947
changing reg in insn 2945
changing reg in insn 2946
changing reg in insn 2952
changing reg in insn 2953
changing reg in insn 2961
changing reg in insn 2962
changing reg in insn 2969
changing reg in insn 2970
changing reg in insn 2974
changing reg in insn 2975
changing reg in insn 2977
changing reg in insn 2978
changing reg in insn 2981
changing reg in insn 2983
changing reg in insn 2982
changing reg in insn 2983
changing reg in insn 2985
changing reg in insn 2986
changing reg in insn 2988
changing reg in insn 2989
changing reg in insn 2992
changing reg in insn 2993
changing reg in insn 2994
changing reg in insn 2995
changing reg in insn 3008
changing reg in insn 3012
changing reg in insn 3009
changing reg in insn 3013
changing reg in insn 3026
changing reg in insn 3021
changing reg in insn 3026
changing reg in insn 3025
changing reg in insn 3022
changing reg in insn 3024
changing reg in insn 3024
changing reg in insn 3023
changing reg in insn 3024
changing reg in insn 3024
changing reg in insn 3027
changing reg in insn 3028
changing reg in insn 3029
changing reg in insn 3030
changing reg in insn 3031
changing reg in insn 3032
changing reg in insn 3033
changing reg in insn 3034
changing reg in insn 3034
changing reg in insn 3034
changing reg in insn 3035
changing reg in insn 3034
changing reg in insn 3036
changing reg in insn 3037
changing reg in insn 3042
changing reg in insn 3043
changing reg in insn 3049
changing reg in insn 3050
changing reg in insn 3069
changing reg in insn 3067
changing reg in insn 3066
changing reg in insn 3064
changing reg in insn 3070
changing reg in insn 3068
changing reg in insn 3067
changing reg in insn 3065
changing reg in insn 3065
changing reg in insn 3066
changing reg in insn 3068
changing reg in insn 3069
changing reg in insn 3071
changing reg in insn 3072
changing reg in insn 3072
changing reg in insn 3073
changing reg in insn 3074
changing reg in insn 3077
changing reg in insn 3075
changing reg in insn 3078
changing reg in insn 3076
changing reg in insn 3079
changing reg in insn 3091
changing reg in insn 3092
changing reg in insn 3093
changing reg in insn 3094
changing reg in insn 3100
changing reg in insn 3101
changing reg in insn 3103
changing reg in insn 3104
changing reg in insn 3102
changing reg in insn 3103
changing reg in insn 3109
changing reg in insn 3110
changing reg in insn 3118
changing reg in insn 3119
changing reg in insn 3126
changing reg in insn 3127
changing reg in insn 3131
changing reg in insn 3132
changing reg in insn 3134
changing reg in insn 3135
changing reg in insn 3138
changing reg in insn 3140
changing reg in insn 3139
changing reg in insn 3140
changing reg in insn 3142
changing reg in insn 3143
changing reg in insn 3145
changing reg in insn 3146
changing reg in insn 3149
changing reg in insn 3150
changing reg in insn 3151
changing reg in insn 3152
changing reg in insn 3165
changing reg in insn 3169
changing reg in insn 3166
changing reg in insn 3170
changing reg in insn 3183
changing reg in insn 3178
changing reg in insn 3183
changing reg in insn 3182
changing reg in insn 3179
changing reg in insn 3181
changing reg in insn 3181
changing reg in insn 3180
changing reg in insn 3181
changing reg in insn 3181
changing reg in insn 3184
changing reg in insn 3185
changing reg in insn 3186
changing reg in insn 3187
changing reg in insn 3188
changing reg in insn 3189
changing reg in insn 3190
changing reg in insn 3191
changing reg in insn 3191
changing reg in insn 3191
changing reg in insn 3192
changing reg in insn 3191
changing reg in insn 3193
changing reg in insn 3194
changing reg in insn 3199
changing reg in insn 3200
changing reg in insn 3206
changing reg in insn 3207
changing reg in insn 3226
changing reg in insn 3224
changing reg in insn 3223
changing reg in insn 3221
changing reg in insn 3227
changing reg in insn 3225
changing reg in insn 3224
changing reg in insn 3222
changing reg in insn 3222
changing reg in insn 3223
changing reg in insn 3225
changing reg in insn 3226
changing reg in insn 3228
changing reg in insn 3229
changing reg in insn 3229
changing reg in insn 3230
changing reg in insn 3231
changing reg in insn 3234
changing reg in insn 3232
changing reg in insn 3235
changing reg in insn 3233
changing reg in insn 3236
changing reg in insn 3248
changing reg in insn 3249
changing reg in insn 3250
changing reg in insn 3251
changing reg in insn 3257
changing reg in insn 3258
changing reg in insn 3260
changing reg in insn 3261
changing reg in insn 3259
changing reg in insn 3260
changing reg in insn 3266
changing reg in insn 3267
changing reg in insn 3275
changing reg in insn 3276
changing reg in insn 3283
changing reg in insn 3284
changing reg in insn 3288
changing reg in insn 3289
changing reg in insn 3291
changing reg in insn 3292
changing reg in insn 3295
changing reg in insn 3297
changing reg in insn 3296
changing reg in insn 3297
changing reg in insn 3298
changing reg in insn 3299
changing reg in insn 3301
changing reg in insn 3302
changing reg in insn 3306
changing reg in insn 3307
changing reg in insn 3320
changing reg in insn 3324
changing reg in insn 3321
changing reg in insn 3325
changing reg in insn 3338
changing reg in insn 3333
changing reg in insn 3338
changing reg in insn 3337
changing reg in insn 3334
changing reg in insn 3336
changing reg in insn 3336
changing reg in insn 3335
changing reg in insn 3336
changing reg in insn 3336
changing reg in insn 3339
changing reg in insn 3340
changing reg in insn 3341
changing reg in insn 3342
changing reg in insn 3343
changing reg in insn 3344
changing reg in insn 3345
changing reg in insn 3346
changing reg in insn 3346
changing reg in insn 3346
changing reg in insn 3347
changing reg in insn 3346
changing reg in insn 3348
changing reg in insn 3349
changing reg in insn 3354
changing reg in insn 3355
changing reg in insn 3361
changing reg in insn 3362
changing reg in insn 3381
changing reg in insn 3379
changing reg in insn 3378
changing reg in insn 3376
changing reg in insn 3382
changing reg in insn 3380
changing reg in insn 3379
changing reg in insn 3377
changing reg in insn 3377
changing reg in insn 3378
changing reg in insn 3380
changing reg in insn 3381
changing reg in insn 3383
changing reg in insn 3384
changing reg in insn 3384
changing reg in insn 3385
changing reg in insn 3386
changing reg in insn 3389
changing reg in insn 3387
changing reg in insn 3390
changing reg in insn 3388
changing reg in insn 3391
changing reg in insn 3403
changing reg in insn 3404
changing reg in insn 3405
changing reg in insn 3406
changing reg in insn 3412
changing reg in insn 3413
changing reg in insn 3415
changing reg in insn 3416
changing reg in insn 3414
changing reg in insn 3415
changing reg in insn 3421
changing reg in insn 3422
changing reg in insn 3430
changing reg in insn 3431
changing reg in insn 3438
changing reg in insn 3439
changing reg in insn 3443
changing reg in insn 3444
changing reg in insn 3446
changing reg in insn 3447
changing reg in insn 3450
changing reg in insn 3452
changing reg in insn 3451
changing reg in insn 3452
changing reg in insn 3453
changing reg in insn 3454
changing reg in insn 3456
changing reg in insn 3457
changing reg in insn 3461
changing reg in insn 3462
changing reg in insn 3475
changing reg in insn 3479
changing reg in insn 3476
changing reg in insn 3480
changing reg in insn 3493
changing reg in insn 3488
changing reg in insn 3493
changing reg in insn 3492
changing reg in insn 3489
changing reg in insn 3491
changing reg in insn 3491
changing reg in insn 3490
changing reg in insn 3491
changing reg in insn 3491
changing reg in insn 3494
changing reg in insn 3495
changing reg in insn 3496
changing reg in insn 3497
changing reg in insn 3498
changing reg in insn 3499
changing reg in insn 3500
changing reg in insn 3501
changing reg in insn 3501
changing reg in insn 3501
changing reg in insn 3502
changing reg in insn 3501
changing reg in insn 3503
changing reg in insn 3504
changing reg in insn 3509
changing reg in insn 3510
changing reg in insn 3516
changing reg in insn 3517
changing reg in insn 3536
changing reg in insn 3534
changing reg in insn 3533
changing reg in insn 3531
changing reg in insn 3537
changing reg in insn 3535
changing reg in insn 3534
changing reg in insn 3532
changing reg in insn 3532
changing reg in insn 3533
changing reg in insn 3535
changing reg in insn 3536
changing reg in insn 3538
changing reg in insn 3539
changing reg in insn 3539
changing reg in insn 3540
changing reg in insn 3541
changing reg in insn 3544
changing reg in insn 3542
changing reg in insn 3545
changing reg in insn 3543
changing reg in insn 3546
changing reg in insn 3563
changing reg in insn 3564
changing reg in insn 3571
changing reg in insn 3572
changing reg in insn 3576
changing reg in insn 3577
changing reg in insn 3579
changing reg in insn 3580
changing reg in insn 3583
changing reg in insn 3585
changing reg in insn 3584
changing reg in insn 3585
changing reg in insn 3592
changing reg in insn 3593
changing reg in insn 3595
changing reg in insn 3596
changing reg in insn 3599
changing reg in insn 3601
changing reg in insn 3600
changing reg in insn 3601
changing reg in insn 3602
changing reg in insn 3603
changing reg in insn 3605
changing reg in insn 3606
changing reg in insn 3609
changing reg in insn 3611
changing reg in insn 3610
changing reg in insn 3611
changing reg in insn 3612
changing reg in insn 3613
changing reg in insn 3618
changing reg in insn 3619
changing reg in insn 3622
changing reg in insn 3623
changing reg in insn 3625
changing reg in insn 3626
changing reg in insn 3629
changing reg in insn 3630
changing reg in insn 3631
changing reg in insn 3632
changing reg in insn 3634
changing reg in insn 3635
changing reg in insn 3638
changing reg in insn 3640
changing reg in insn 3639
changing reg in insn 3640
changing reg in insn 3642
changing reg in insn 3643
changing reg in insn 3645
changing reg in insn 3646
changing reg in insn 3650
changing reg in insn 3651
changing reg in insn 3664
changing reg in insn 3668
changing reg in insn 3665
changing reg in insn 3669
changing reg in insn 3682
changing reg in insn 3677
changing reg in insn 3682
changing reg in insn 3681
changing reg in insn 3678
changing reg in insn 3680
changing reg in insn 3680
changing reg in insn 3679
changing reg in insn 3680
changing reg in insn 3680
changing reg in insn 3691
changing reg in insn 3689
changing reg in insn 3688
changing reg in insn 3686
changing reg in insn 3692
changing reg in insn 3690
changing reg in insn 3689
changing reg in insn 3687
changing reg in insn 3687
changing reg in insn 3688
changing reg in insn 3690
changing reg in insn 3691
changing reg in insn 3693
changing reg in insn 3694
changing reg in insn 3694
changing reg in insn 3695
changing reg in insn 3696
changing reg in insn 3699
changing reg in insn 3697
changing reg in insn 3700
changing reg in insn 3698
changing reg in insn 3701
changing reg in insn 3718
changing reg in insn 3719
changing reg in insn 3726
changing reg in insn 3727
changing reg in insn 3731
changing reg in insn 3732
changing reg in insn 3734
changing reg in insn 3735
changing reg in insn 3738
changing reg in insn 3740
changing reg in insn 3739
changing reg in insn 3740
changing reg in insn 3741
changing reg in insn 3742
changing reg in insn 3748
changing reg in insn 3749
changing reg in insn 3751
changing reg in insn 3752
changing reg in insn 3755
changing reg in insn 3757
changing reg in insn 3756
changing reg in insn 3757
changing reg in insn 3757
changing reg in insn 3758
changing reg in insn 3759
changing reg in insn 3760
changing reg in insn 3762
changing reg in insn 3763
changing reg in insn 3766
changing reg in insn 3767
changing reg in insn 3770
changing reg in insn 3772
changing reg in insn 3771
changing reg in insn 3772
changing reg in insn 3772
changing reg in insn 3773
changing reg in insn 3774
changing reg in insn 3775
changing reg in insn 3780
changing reg in insn 3781
changing reg in insn 3783
changing reg in insn 3784
changing reg in insn 3787
changing reg in insn 3789
changing reg in insn 3788
changing reg in insn 3789
changing reg in insn 3790
changing reg in insn 3791
changing reg in insn 3796
changing reg in insn 3797
changing reg in insn 3800
changing reg in insn 3801
changing reg in insn 3803
changing reg in insn 3804
changing reg in insn 3807
changing reg in insn 3808
changing reg in insn 3809
changing reg in insn 3810
changing reg in insn 3812
changing reg in insn 3813
changing reg in insn 3816
changing reg in insn 3818
changing reg in insn 3817
changing reg in insn 3818
changing reg in insn 3820
changing reg in insn 3821
changing reg in insn 3823
changing reg in insn 3824
changing reg in insn 3828
changing reg in insn 3829
changing reg in insn 3842
changing reg in insn 3846
changing reg in insn 3843
changing reg in insn 3847
changing reg in insn 3860
changing reg in insn 3855
changing reg in insn 3860
changing reg in insn 3859
changing reg in insn 3856
changing reg in insn 3858
changing reg in insn 3858
changing reg in insn 3857
changing reg in insn 3858
changing reg in insn 3858
changing reg in insn 3869
changing reg in insn 3867
changing reg in insn 3866
changing reg in insn 3864
changing reg in insn 3870
changing reg in insn 3868
changing reg in insn 3867
changing reg in insn 3865
changing reg in insn 3865
changing reg in insn 3866
changing reg in insn 3868
changing reg in insn 3869
changing reg in insn 3871
changing reg in insn 3872
changing reg in insn 3872
changing reg in insn 3873
changing reg in insn 3874
changing reg in insn 3877
changing reg in insn 3875
changing reg in insn 3878
changing reg in insn 3876
changing reg in insn 3879
changing reg in insn 3896
changing reg in insn 3897
changing reg in insn 3904
changing reg in insn 3905
changing reg in insn 3909
changing reg in insn 3910
changing reg in insn 3912
changing reg in insn 3913
changing reg in insn 3916
changing reg in insn 3918
changing reg in insn 3917
changing reg in insn 3918
changing reg in insn 3925
changing reg in insn 3926
changing reg in insn 3928
changing reg in insn 3929
changing reg in insn 3932
changing reg in insn 3934
changing reg in insn 3933
changing reg in insn 3934
changing reg in insn 3935
changing reg in insn 3936
changing reg in insn 3938
changing reg in insn 3939
changing reg in insn 3942
changing reg in insn 3944
changing reg in insn 3943
changing reg in insn 3944
changing reg in insn 3945
changing reg in insn 3946
changing reg in insn 3951
changing reg in insn 3952
changing reg in insn 3955
changing reg in insn 3956
changing reg in insn 3958
changing reg in insn 3959
changing reg in insn 3962
changing reg in insn 3963
changing reg in insn 3964
changing reg in insn 3965
changing reg in insn 3967
changing reg in insn 3968
changing reg in insn 3971
changing reg in insn 3973
changing reg in insn 3972
changing reg in insn 3973
changing reg in insn 3975
changing reg in insn 3976
changing reg in insn 3978
changing reg in insn 3979
changing reg in insn 3983
changing reg in insn 3984
changing reg in insn 3997
changing reg in insn 4001
changing reg in insn 3998
changing reg in insn 4002
changing reg in insn 4015
changing reg in insn 4010
changing reg in insn 4015
changing reg in insn 4014
changing reg in insn 4011
changing reg in insn 4013
changing reg in insn 4013
changing reg in insn 4012
changing reg in insn 4013
changing reg in insn 4013
changing reg in insn 4024
changing reg in insn 4022
changing reg in insn 4021
changing reg in insn 4019
changing reg in insn 4025
changing reg in insn 4023
changing reg in insn 4022
changing reg in insn 4020
changing reg in insn 4020
changing reg in insn 4021
changing reg in insn 4023
changing reg in insn 4024
changing reg in insn 4026
changing reg in insn 4027
changing reg in insn 4027
changing reg in insn 4028
changing reg in insn 4029
changing reg in insn 4032
changing reg in insn 4030
changing reg in insn 4033
changing reg in insn 4031
changing reg in insn 4034
changing reg in insn 4046
changing reg in insn 4050
changing reg in insn 4047
changing reg in insn 4051
changing reg in insn 4064
changing reg in insn 4059
changing reg in insn 4064
changing reg in insn 4063
changing reg in insn 4060
changing reg in insn 4062
changing reg in insn 4062
changing reg in insn 4061
changing reg in insn 4062
changing reg in insn 4062
changing reg in insn 4073
changing reg in insn 4071
changing reg in insn 4070
changing reg in insn 4068
changing reg in insn 4074
changing reg in insn 4072
changing reg in insn 4071
changing reg in insn 4069
changing reg in insn 4069
changing reg in insn 4070
changing reg in insn 4072
changing reg in insn 4073
changing reg in insn 4075
changing reg in insn 4076
changing reg in insn 4076
changing reg in insn 4077
changing reg in insn 4078
changing reg in insn 4081
changing reg in insn 4079
changing reg in insn 4082
changing reg in insn 4080
changing reg in insn 4083
changing reg in insn 4092
changing reg in insn 4093
changing reg in insn 4095
changing reg in insn 4096
deleting insn with uid = 4445.
deleting insn with uid = 4447.
deleting insn with uid = 33.
deleting insn with uid = 39.
deleting insn with uid = 40.
deleting insn with uid = 4449.
deleting insn with uid = 67.
deleting insn with uid = 73.
deleting insn with uid = 74.
deleting insn with uid = 205.
deleting insn with uid = 208.
deleting insn with uid = 209.
deleting insn with uid = 219.
deleting insn with uid = 240.
deleting insn with uid = 243.
deleting insn with uid = 244.
deleting insn with uid = 255.
deleting insn with uid = 258.
deleting insn with uid = 259.
deleting insn with uid = 275.
deleting insn with uid = 276.
deleting insn with uid = 277.
deleting insn with uid = 310.
deleting insn with uid = 313.
deleting insn with uid = 314.
deleting insn with uid = 324.
deleting insn with uid = 475.
deleting insn with uid = 478.
deleting insn with uid = 479.
deleting insn with uid = 489.
deleting insn with uid = 527.
deleting insn with uid = 530.
deleting insn with uid = 531.
deleting insn with uid = 541.
deleting insn with uid = 574.
deleting insn with uid = 575.
deleting insn with uid = 585.
deleting insn with uid = 588.
deleting insn with uid = 589.
deleting insn with uid = 599.
deleting insn with uid = 632.
deleting insn with uid = 633.
deleting insn with uid = 643.
deleting insn with uid = 646.
deleting insn with uid = 647.
deleting insn with uid = 657.
deleting insn with uid = 690.
deleting insn with uid = 691.
deleting insn with uid = 701.
deleting insn with uid = 704.
deleting insn with uid = 705.
deleting insn with uid = 715.
deleting insn with uid = 841.
deleting insn with uid = 842.
deleting insn with uid = 852.
deleting insn with uid = 855.
deleting insn with uid = 856.
deleting insn with uid = 866.
deleting insn with uid = 4467.
deleting insn with uid = 1037.
deleting insn with uid = 1038.
deleting insn with uid = 1048.
deleting insn with uid = 1051.
deleting insn with uid = 1052.
deleting insn with uid = 1062.
deleting insn with uid = 1219.
deleting insn with uid = 1220.
deleting insn with uid = 1230.
deleting insn with uid = 1233.
deleting insn with uid = 1234.
deleting insn with uid = 1244.
deleting insn with uid = 1401.
deleting insn with uid = 1402.
deleting insn with uid = 1412.
deleting insn with uid = 1415.
deleting insn with uid = 1416.
deleting insn with uid = 1426.
deleting insn with uid = 1801.
deleting insn with uid = 4475.
deleting insn with uid = 1819.
deleting insn with uid = 1831.
deleting insn with uid = 1833.
deleting insn with uid = 1835.
deleting insn with uid = 4480.
deleting insn with uid = 1904.
deleting insn with uid = 1907.
deleting insn with uid = 1908.
deleting insn with uid = 1918.
deleting insn with uid = 1953.
deleting insn with uid = 1956.
deleting insn with uid = 1957.
deleting insn with uid = 1967.
deleting insn with uid = 2375.
deleting insn with uid = 4485.
deleting insn with uid = 2393.
deleting insn with uid = 2405.
deleting insn with uid = 2407.
deleting insn with uid = 2409.
deleting insn with uid = 4490.
deleting insn with uid = 2501.
deleting insn with uid = 2504.
deleting insn with uid = 2505.
deleting insn with uid = 2515.
deleting insn with uid = 2550.
deleting insn with uid = 2553.
deleting insn with uid = 2554.
deleting insn with uid = 2564.
deleting insn with uid = 2599.
deleting insn with uid = 2602.
deleting insn with uid = 2603.
deleting insn with uid = 2613.
deleting insn with uid = 2754.
deleting insn with uid = 2757.
deleting insn with uid = 2758.
deleting insn with uid = 2768.
deleting insn with uid = 2909.
deleting insn with uid = 2912.
deleting insn with uid = 2913.
deleting insn with uid = 2923.
deleting insn with uid = 3066.
deleting insn with uid = 3069.
deleting insn with uid = 3070.
deleting insn with uid = 3080.
deleting insn with uid = 3223.
deleting insn with uid = 3226.
deleting insn with uid = 3227.
deleting insn with uid = 3237.
deleting insn with uid = 3378.
deleting insn with uid = 3381.
deleting insn with uid = 3382.
deleting insn with uid = 3392.
deleting insn with uid = 3533.
deleting insn with uid = 3536.
deleting insn with uid = 3537.
deleting insn with uid = 3547.
deleting insn with uid = 3688.
deleting insn with uid = 3691.
deleting insn with uid = 3692.
deleting insn with uid = 3702.
deleting insn with uid = 3866.
deleting insn with uid = 3869.
deleting insn with uid = 3870.
deleting insn with uid = 3880.
deleting insn with uid = 4021.
deleting insn with uid = 4024.
deleting insn with uid = 4025.
deleting insn with uid = 4035.
deleting insn with uid = 4070.
deleting insn with uid = 4073.
deleting insn with uid = 4074.
deleting insn with uid = 4084.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 190.
verify found no changes in insn with uid = 223.
verify found no changes in insn with uid = 280.
verify found no changes in insn with uid = 297.
verify found no changes in insn with uid = 328.
verify found no changes in insn with uid = 346.
verify found no changes in insn with uid = 493.
verify found no changes in insn with uid = 502.
verify found no changes in insn with uid = 514.
verify found no changes in insn with uid = 545.
verify found no changes in insn with uid = 563.
verify found no changes in insn with uid = 579.
verify found no changes in insn with uid = 603.
verify found no changes in insn with uid = 621.
verify found no changes in insn with uid = 637.
verify found no changes in insn with uid = 661.
verify found no changes in insn with uid = 679.
verify found no changes in insn with uid = 695.
verify found no changes in insn with uid = 719.
verify found no changes in insn with uid = 830.
verify found no changes in insn with uid = 846.
verify found no changes in insn with uid = 870.
verify found no changes in insn with uid = 992.
verify found no changes in insn with uid = 1042.
verify found no changes in insn with uid = 1066.
verify found no changes in insn with uid = 1174.
verify found no changes in insn with uid = 1224.
verify found no changes in insn with uid = 1248.
verify found no changes in insn with uid = 1356.
verify found no changes in insn with uid = 1406.
verify found no changes in insn with uid = 1430.
verify found no changes in insn with uid = 1820.
verify found no changes in insn with uid = 1832.
verify found no changes in insn with uid = 1891.
verify found no changes in insn with uid = 1922.
verify found no changes in insn with uid = 1940.
verify found no changes in insn with uid = 1971.
verify found no changes in insn with uid = 2394.
verify found no changes in insn with uid = 2406.
verify found no changes in insn with uid = 2488.
verify found no changes in insn with uid = 2519.
verify found no changes in insn with uid = 2537.
verify found no changes in insn with uid = 2568.
verify found no changes in insn with uid = 2586.
verify found no changes in insn with uid = 2617.
verify found no changes in insn with uid = 2707.
verify found no changes in insn with uid = 2772.
verify found no changes in insn with uid = 2862.
verify found no changes in insn with uid = 2927.
verify found no changes in insn with uid = 3019.
verify found no changes in insn with uid = 3084.
verify found no changes in insn with uid = 3176.
verify found no changes in insn with uid = 3241.
verify found no changes in insn with uid = 3331.
verify found no changes in insn with uid = 3396.
verify found no changes in insn with uid = 3486.
verify found no changes in insn with uid = 3551.
verify found no changes in insn with uid = 3675.
verify found no changes in insn with uid = 3706.
verify found no changes in insn with uid = 3853.
verify found no changes in insn with uid = 3884.
verify found no changes in insn with uid = 4008.
verify found no changes in insn with uid = 4039.
verify found no changes in insn with uid = 4057.
verify found no changes in insn with uid = 4088.
verify found no changes in insn with uid = 4094.
verify found no changes in insn with uid = 4097.


cldrad

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  ref usage 	r0={981d,946u} r1={923d,880u,28e} r2={383d,312u} r3={4d,9u} r4={169d,99u} r5={190d,146u} r6={1d,1185u} r7={82d,531u} r8={70d} r9={70d} r10={70d} r11={70d} r12={70d} r13={70d} r14={70d} r15={70d} r17={1019d,182u} r18={70d} r19={70d} r20={1d,1u,46e} r21={226d,162u,4e} r22={129d,61u} r23={75d,4u} r24={73d,2u} r25={73d,2u} r26={71d} r27={71d} r28={71d} r29={70d} r30={70d} r31={70d} r32={70d} r33={70d} r34={70d} r35={70d} r36={70d} r37={125d,53u} r38={125d,53u} r39={70d} r40={70d} r41={2d,5u} r42={1d} r43={1d} r45={70d} r46={70d} r47={70d} r48={70d} r49={70d} r50={70d} r51={70d} r52={70d} r53={70d} r54={70d} r55={70d} r56={70d} r57={70d} r58={70d} r59={70d} r60={70d} r61={70d} r62={70d} r63={70d} r64={70d} r65={70d} r66={70d} r67={70d} r68={70d} r69={70d} r70={70d} r71={70d} r72={70d} r73={70d} r74={70d} r75={70d} r76={70d} r77={70d} r78={70d} r79={70d} r80={70d} 
;;    total ref usage 13427{8716d,4633u,78e} in 3445{3375 regular + 70 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 98
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 92 93 94 95 96 97 100 101 102 103 1088 1089 1090 1091 1095 1096 1097 1098 1099 1100 1104 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 1210
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])
        (reg:DI 5 di [ imout ])) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])
        (reg:DI 4 si [ jmout ])) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg/f:DI 0 ax [1195])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [1195]) [2 *imout_1159(D)+0 S4 A32])) "CLDRAD.f":105 86 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 0 ax [1196])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "CLDRAD.f":105 149 {*extendsidi2_rex64}
     (nil))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 ubound.0+0 S8 A64])
        (reg:DI 0 ax [1196])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 13 12 15 2 (set (reg:DI 0 ax [orig:1088 stride.2_1161 ] [1088])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 ubound.0+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 15 13 14 2 (set (reg:DI 1 dx [1197])
        (const_int 0 [0])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 14 15 4444 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:1088 stride.2_1161 ] [1088])
            (const_int 0 [0]))) "CLDRAD.f":105 8 {*cmpdi_ccno_1}
     (nil))
(insn 4444 14 16 2 (set (reg:DI 3 bx [1197])
        (reg:DI 1 dx [1197])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 16 4444 17 2 (set (reg:DI 3 bx [1197])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:1088 stride.2_1161 ] [1088])
            (reg:DI 3 bx [1197]))) "CLDRAD.f":105 1003 {*movdicc_noc}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [1198])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SI 0 ax [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 0 ax [1198]) [2 *jmout_1163(D)+0 S4 A32])) "CLDRAD.f":105 86 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 0 ax [1199])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _2 ] [88]))) "CLDRAD.f":105 149 {*extendsidi2_rex64}
     (nil))
(insn 20 19 4446 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [3 ubound.1+0 S8 A64])
        (reg:DI 0 ax [1199])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 4446 20 21 2 (set (reg:DI 0 ax [orig:1090 size.4_1165 ] [1090])
        (reg:DI 3 bx [orig:1089 stride.2_1162 ] [1089])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 21 4446 23 2 (parallel [
            (set (reg:DI 0 ax [orig:1090 size.4_1165 ] [1090])
                (mult:DI (reg:DI 0 ax [orig:1090 size.4_1165 ] [1090])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -80 [0xffffffffffffffb0])) [3 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":105 349 {*muldi3_1}
     (nil))
(insn 23 21 22 2 (set (reg:DI 1 dx [1200])
        (const_int 0 [0])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 22 23 24 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:1090 size.4_1165 ] [1090])
            (const_int 0 [0]))) "CLDRAD.f":105 8 {*cmpdi_ccno_1}
     (nil))
(insn 24 22 26 2 (set (reg:DI 0 ax [orig:1091 size.4_1166 ] [1091])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:1090 size.4_1165 ] [1090])
            (reg:DI 1 dx [1200]))) "CLDRAD.f":105 1003 {*movdicc_noc}
     (nil))
(insn 26 24 27 2 (set (reg:DI 1 dx [orig:89 size.12_3 ] [89])
        (reg:DI 0 ax [orig:1091 size.4_1166 ] [1091])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:DI 37 r8 [orig:90 _4 ] [90])
        (reg:DI 1 dx [orig:89 size.12_3 ] [89])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 28 27 32 2 (set (reg:DI 38 r9 [ _4+8 ])
        (const_int 0 [0])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 32 28 35 2 (parallel [
            (set (reg:DI 0 ax [orig:92 _6 ] [92])
                (ashift:DI (reg:DI 0 ax [orig:1091 size.4_1166 ] [1091])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":105 551 {*ashldi3_1}
     (nil))
(insn 35 32 34 2 (set (reg:DI 1 dx [1201])
        (const_int 1 [0x1])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 34 35 36 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:93 _7 ] [93])
            (const_int 0 [0]))) "CLDRAD.f":105 8 {*cmpdi_ccno_1}
     (nil))
(insn 36 34 37 2 (set (reg:DI 0 ax [orig:94 _8 ] [94])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:93 _7 ] [93])
            (reg:DI 1 dx [1201]))) "CLDRAD.f":105 1003 {*movdicc_noc}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:94 _8 ] [94])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(call_insn 38 37 41 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f2039124f00 __builtin_malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "CLDRAD.f":105 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 41 38 4448 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])
        (reg/f:DI 0 ax [orig:1095 _1171 ] [1095])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 4448 41 42 2 (set (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096])
        (reg:DI 3 bx [orig:1089 stride.2_1162 ] [1089])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 42 4448 43 2 (set (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096])
        (not:DI (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096]))) "CLDRAD.f":105 532 {*one_cmpldi2_1}
     (nil))
(insn 43 42 44 2 (set (reg/f:DI 0 ax [1203])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:SI 0 ax [orig:95 _9 ] [95])
        (mem:SI (reg/f:DI 0 ax [1203]) [2 *imout_1159(D)+0 S4 A32])) "CLDRAD.f":105 86 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 0 ax [1204])
        (sign_extend:DI (reg:SI 0 ax [orig:95 _9 ] [95]))) "CLDRAD.f":105 149 {*extendsidi2_rex64}
     (nil))
(insn 46 45 47 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 ubound.5+0 S8 A64])
        (reg:DI 0 ax [1204])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 47 46 49 2 (set (reg:DI 0 ax [orig:1097 stride.7_1175 ] [1097])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 ubound.5+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 49 47 48 2 (set (reg:DI 1 dx [1205])
        (const_int 0 [0])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 48 49 50 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:1097 stride.7_1175 ] [1097])
            (const_int 0 [0]))) "CLDRAD.f":105 8 {*cmpdi_ccno_1}
     (nil))
(insn 50 48 51 2 (set (reg:DI 0 ax [orig:1098 stride.7_1176 ] [1098])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:1097 stride.7_1175 ] [1097])
            (reg:DI 1 dx [1205]))) "CLDRAD.f":105 1003 {*movdicc_noc}
     (nil))
(insn 51 50 52 2 (set (reg/f:DI 1 dx [1206])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:SI 1 dx [orig:96 _10 ] [96])
        (mem:SI (reg/f:DI 1 dx [1206]) [2 *jmout_1163(D)+0 S4 A32])) "CLDRAD.f":105 86 {*movsi_internal}
     (nil))
(insn 53 52 54 2 (set (reg:DI 1 dx [1207])
        (sign_extend:DI (reg:SI 1 dx [orig:96 _10 ] [96]))) "CLDRAD.f":105 149 {*extendsidi2_rex64}
     (nil))
(insn 54 53 55 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 ubound.6+0 S8 A64])
        (reg:DI 1 dx [1207])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 55 54 57 2 (parallel [
            (set (reg:DI 0 ax [orig:1099 size.9_1178 ] [1099])
                (mult:DI (reg:DI 0 ax [orig:1098 stride.7_1176 ] [1098])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [3 ubound.6+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":105 349 {*muldi3_1}
     (nil))
(insn 57 55 56 2 (set (reg:DI 1 dx [1208])
        (const_int 0 [0])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 56 57 58 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:1099 size.9_1178 ] [1099])
            (const_int 0 [0]))) "CLDRAD.f":105 8 {*cmpdi_ccno_1}
     (nil))
(insn 58 56 60 2 (set (reg:DI 0 ax [orig:1100 size.9_1179 ] [1100])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:1099 size.9_1178 ] [1099])
            (reg:DI 1 dx [1208]))) "CLDRAD.f":105 1003 {*movdicc_noc}
     (nil))
(insn 60 58 61 2 (set (reg:DI 1 dx [orig:97 size.14_11 ] [97])
        (reg:DI 0 ax [orig:1100 size.9_1179 ] [1100])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:DI 42 r13 [orig:98 _12 ] [98])
        (reg:DI 1 dx [orig:97 size.14_11 ] [97])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 62 61 66 2 (set (reg:DI 43 r14 [ _12+8 ])
        (const_int 0 [0])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 66 62 69 2 (parallel [
            (set (reg:DI 0 ax [orig:100 _14 ] [100])
                (ashift:DI (reg:DI 0 ax [orig:1100 size.9_1179 ] [1100])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":105 551 {*ashldi3_1}
     (nil))
(insn 69 66 68 2 (set (reg:DI 1 dx [1209])
        (const_int 1 [0x1])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 68 69 70 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:101 _15 ] [101])
            (const_int 0 [0]))) "CLDRAD.f":105 8 {*cmpdi_ccno_1}
     (nil))
(insn 70 68 71 2 (set (reg:DI 0 ax [orig:102 _16 ] [102])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:101 _15 ] [101])
            (reg:DI 1 dx [1209]))) "CLDRAD.f":105 1003 {*movdicc_noc}
     (nil))
(insn 71 70 72 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:102 _16 ] [102])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(call_insn 72 71 75 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f2039124f00 __builtin_malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "CLDRAD.f":105 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 75 72 77 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])
        (reg/f:DI 0 ax [orig:1104 _1184 ] [1104])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 77 75 78 2 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 132 [0x84]))) [2 rqstfld.iget+116 S4 A32])) "CLDRAD.f":142 86 {*movsi_internal}
     (nil))
(insn 78 77 79 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:103 _17 ] [103])
            (const_int 0 [0]))) "CLDRAD.f":142 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 79 78 80 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 224)
            (pc))) "CLDRAD.f":142 682 {*jcc}
     (nil)
 -> 224)
;;  succ:       3 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104
(note 80 79 81 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 3 (set (reg:SI 0 ax [orig:104 _18 ] [104])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>) [2 rqstfld.kgtype+0 S4 A128])) "CLDRAD.f":1 86 {*movsi_internal}
     (nil))
(insn 82 81 83 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:104 _18 ] [104])
            (const_int 26 [0x1a]))) "CLDRAD.f":142 11 {*cmpsi_1}
     (nil))
(jump_insn 83 82 84 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 224)
            (pc))) "CLDRAD.f":142 682 {*jcc}
     (nil)
 -> 224)
;;  succ:       4 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1106 1107
(note 84 83 85 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 4 (set (reg:SI 1 dx [orig:1106 _1187 ] [1106])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":143 86 {*movsi_internal}
     (nil))
(insn 86 85 87 4 (set (reg:SI 0 ax [orig:1107 _1188 ] [1107])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":143 86 {*movsi_internal}
     (nil))
(insn 87 86 120 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1106 _1187 ] [1106])) "CLDRAD.f":143 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              9 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1107
;; lr  def 	 17 [flags] 1108 1211
(code_label 120 87 88 5 6 (nil) [1 uses])
(note 88 120 89 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1107 _1188 ] [1107]))) "CLDRAD.f":143 11 {*cmpsi_1}
     (nil))
(insn 90 89 91 5 (set (reg:QI 1 dx [1211])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":143 678 {*setcc_qi}
     (nil))
(insn 91 90 92 5 (set (reg:SI 1 dx [orig:1108 _1190 ] [1108])
        (zero_extend:SI (reg:QI 1 dx [1211]))) "CLDRAD.f":143 140 {*zero_extendqisi2}
     (nil))
(insn 92 91 93 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1108 _1190 ] [1108])
            (const_int 0 [0]))) "CLDRAD.f":143 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 93 92 94 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4307)
            (pc))) "CLDRAD.f":143 682 {*jcc}
     (nil)
 -> 4307)
;;  succ:       308
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 94 93 95 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 114 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":144 86 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1109 1212
(code_label 114 95 96 7 5 (nil) [1 uses])
(note 96 114 97 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":144 11 {*cmpsi_1}
     (nil))
(insn 98 97 99 7 (set (reg:QI 1 dx [1212])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":144 678 {*setcc_qi}
     (nil))
(insn 99 98 100 7 (set (reg:SI 1 dx [orig:1109 _1192 ] [1109])
        (zero_extend:SI (reg:QI 1 dx [1212]))) "CLDRAD.f":144 140 {*zero_extendqisi2}
     (nil))
(insn 100 99 101 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1109 _1192 ] [1109])
            (const_int 0 [0]))) "CLDRAD.f":144 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 101 100 102 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4310)
            (pc))) "CLDRAD.f":144 682 {*jcc}
     (nil)
 -> 4310)
;;  succ:       309
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 309, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 105 106 107 108 109 110 1213 1214 1215
(note 102 101 103 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 8 (set (reg:SI 1 dx [1213])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":145 86 {*movsi_internal}
     (nil))
(insn 104 103 105 8 (set (reg:DI 1 dx [orig:105 _19 ] [105])
        (sign_extend:DI (reg:SI 1 dx [1213]))) "CLDRAD.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 105 104 106 8 (parallel [
            (set (reg:DI 2 cx [orig:106 _20 ] [106])
                (mult:DI (reg:DI 1 dx [orig:105 _19 ] [105])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":145 349 {*muldi3_1}
     (nil))
(insn 106 105 107 8 (set (reg:SI 1 dx [1214])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":145 86 {*movsi_internal}
     (nil))
(insn 107 106 108 8 (set (reg:DI 1 dx [orig:107 _21 ] [107])
        (sign_extend:DI (reg:SI 1 dx [1214]))) "CLDRAD.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 108 107 109 8 (parallel [
            (set (reg:DI 1 dx [orig:108 _22 ] [108])
                (plus:DI (reg:DI 1 dx [orig:107 _21 ] [107])
                    (reg:DI 2 cx [orig:106 _20 ] [106])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":145 222 {*adddi_1}
     (nil))
(insn 109 108 110 8 (parallel [
            (set (reg:DI 2 cx [orig:109 _23 ] [109])
                (plus:DI (reg:DI 1 dx [orig:108 _22 ] [108])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":145 222 {*adddi_1}
     (nil))
(insn 110 109 111 8 (set (reg:SF 21 xmm0 [orig:110 _24 ] [110])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 111 110 112 8 (set (reg/f:DI 1 dx [1215])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":145 85 {*movdi_internal}
     (nil))
(insn 112 111 113 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:109 _23 ] [109])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1215])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:110 _24 ] [110])) "CLDRAD.f":145 131 {*movsf_internal}
     (nil))
(insn 113 112 4159 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":144 221 {*addsi_1}
     (nil))
(jump_insn 4159 113 4160 8 (set (pc)
        (label_ref 114)) "CLDRAD.f":144 683 {jump}
     (nil)
 -> 114)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107

(barrier 4160 4159 4310)
;; basic block 309, loop depth 0, maybe hot
;;  prev block 8, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 309 artificial_defs: { }
;; bb 309 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4310 4160 4309 309 231 (nil) [1 uses])
(note 4309 4310 4311 309 [bb 309] NOTE_INSN_BASIC_BLOCK)
(insn 4311 4309 117 309 (const_int 0 [0]) "CLDRAD.f":145 718 {nop}
     (nil))
;;  succ:       9 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107

;; basic block 9, loop depth 0, maybe hot
;;  prev block 309, next block 308, flags: (RTL, MODIFIED)
;;  pred:       309 [always]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 117 4311 118 9 4 (nil) [0 uses])
(note 118 117 119 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 4161 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":143 221 {*addsi_1}
     (nil))
(jump_insn 4161 119 4162 9 (set (pc)
        (label_ref 120)) "CLDRAD.f":143 683 {jump}
     (nil)
 -> 120)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1107

(barrier 4162 4161 4307)
;; basic block 308, loop depth 0, maybe hot
;;  prev block 9, next block 10, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 308 artificial_defs: { }
;; bb 308 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4307 4162 4306 308 230 (nil) [1 uses])
(note 4306 4307 4308 308 [bb 308] NOTE_INSN_BASIC_BLOCK)
(insn 4308 4306 123 308 (const_int 0 [0]) "CLDRAD.f":144 718 {nop}
     (nil))
;;  succ:       10 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 10, loop depth 0, maybe hot
;;  prev block 308, next block 11, flags: (RTL, MODIFIED)
;;  pred:       308 [always]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1110 1111
(code_label 123 4308 124 10 3 (nil) [0 uses])
(note 124 123 125 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 10 (set (reg:DI 4 si)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":149 85 {*movdi_internal}
     (nil))
(insn 126 125 127 10 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)
                (const_int 18471048 [0x119d888])))) "CLDRAD.f":149 85 {*movdi_internal}
     (nil))
(insn 127 126 128 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":149 88 {*movqi_internal}
     (nil))
(call_insn 128 127 129 10 (call (mem:QI (symbol_ref:DI ("otlift2_") [flags 0x41]  <function_decl 0x7f203929e600 otlift2>) [0 otlift2 S1 A8])
        (const_int 0 [0])) "CLDRAD.f":149 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 129 128 130 10 (set (reg:SI 1 dx [orig:1110 _1197 ] [1110])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":151 86 {*movsi_internal}
     (nil))
(insn 130 129 131 10 (set (reg:SI 0 ax [orig:1111 _1198 ] [1111])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":151 86 {*movsi_internal}
     (nil))
(insn 131 130 174 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1110 _1197 ] [1110])) "CLDRAD.f":151 86 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              15 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1111
;; lr  def 	 17 [flags] 1112 1216
(code_label 174 131 132 11 10 (nil) [1 uses])
(note 132 174 133 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1111 _1198 ] [1111]))) "CLDRAD.f":151 11 {*cmpsi_1}
     (nil))
(insn 134 133 135 11 (set (reg:QI 1 dx [1216])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":151 678 {*setcc_qi}
     (nil))
(insn 135 134 136 11 (set (reg:SI 1 dx [orig:1112 _1200 ] [1112])
        (zero_extend:SI (reg:QI 1 dx [1216]))) "CLDRAD.f":151 140 {*zero_extendqisi2}
     (nil))
(insn 136 135 137 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1112 _1200 ] [1112])
            (const_int 0 [0]))) "CLDRAD.f":151 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 137 136 138 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4313)
            (pc))) "CLDRAD.f":151 682 {*jcc}
     (nil)
 -> 4313)
;;  succ:       310
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 138 137 139 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 168 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":152 86 {*movsi_internal}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              14 [always] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1113 1217
(code_label 168 139 140 13 9 (nil) [1 uses])
(note 140 168 141 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":152 11 {*cmpsi_1}
     (nil))
(insn 142 141 143 13 (set (reg:QI 1 dx [1217])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":152 678 {*setcc_qi}
     (nil))
(insn 143 142 144 13 (set (reg:SI 1 dx [orig:1113 _1202 ] [1113])
        (zero_extend:SI (reg:QI 1 dx [1217]))) "CLDRAD.f":152 140 {*zero_extendqisi2}
     (nil))
(insn 144 143 145 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1113 _1202 ] [1113])
            (const_int 0 [0]))) "CLDRAD.f":152 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 145 144 146 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4316)
            (pc))) "CLDRAD.f":152 682 {*jcc}
     (nil)
 -> 4316)
;;  succ:       311
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 311, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 111 112 113 114 115 116 117 118 119 120 121 122 1218 1219 1220 1221 1222 1223 1224
(note 146 145 147 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 14 (set (reg:SI 1 dx [1218])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":153 86 {*movsi_internal}
     (nil))
(insn 148 147 149 14 (set (reg:DI 1 dx [orig:111 _25 ] [111])
        (sign_extend:DI (reg:SI 1 dx [1218]))) "CLDRAD.f":153 149 {*extendsidi2_rex64}
     (nil))
(insn 149 148 150 14 (parallel [
            (set (reg:DI 2 cx [orig:112 _26 ] [112])
                (mult:DI (reg:DI 1 dx [orig:111 _25 ] [111])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":153 349 {*muldi3_1}
     (nil))
(insn 150 149 151 14 (set (reg:SI 1 dx [1219])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":153 86 {*movsi_internal}
     (nil))
(insn 151 150 152 14 (set (reg:DI 1 dx [orig:113 _27 ] [113])
        (sign_extend:DI (reg:SI 1 dx [1219]))) "CLDRAD.f":153 149 {*extendsidi2_rex64}
     (nil))
(insn 152 151 153 14 (parallel [
            (set (reg:DI 1 dx [orig:114 _28 ] [114])
                (plus:DI (reg:DI 1 dx [orig:113 _27 ] [113])
                    (reg:DI 2 cx [orig:112 _26 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":153 222 {*adddi_1}
     (nil))
(insn 153 152 154 14 (parallel [
            (set (reg:DI 2 cx [orig:115 _29 ] [115])
                (plus:DI (reg:DI 1 dx [orig:114 _28 ] [114])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":153 222 {*adddi_1}
     (nil))
(insn 154 153 155 14 (set (reg/f:DI 1 dx [1220])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":153 85 {*movdi_internal}
     (nil))
(insn 155 154 156 14 (set (reg:SF 22 xmm1 [orig:116 _30 ] [116])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:115 _29 ] [115])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1220])) [1 egrid1 S4 A32])) "CLDRAD.f":153 131 {*movsf_internal}
     (nil))
(insn 156 155 157 14 (set (reg:SI 1 dx [1221])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":153 86 {*movsi_internal}
     (nil))
(insn 157 156 158 14 (set (reg:DI 1 dx [orig:117 _31 ] [117])
        (sign_extend:DI (reg:SI 1 dx [1221]))) "CLDRAD.f":153 149 {*extendsidi2_rex64}
     (nil))
(insn 158 157 159 14 (parallel [
            (set (reg:DI 2 cx [orig:118 _32 ] [118])
                (mult:DI (reg:DI 1 dx [orig:117 _31 ] [117])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":153 349 {*muldi3_1}
     (nil))
(insn 159 158 160 14 (set (reg:SI 1 dx [1222])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":153 86 {*movsi_internal}
     (nil))
(insn 160 159 161 14 (set (reg:DI 1 dx [orig:119 _33 ] [119])
        (sign_extend:DI (reg:SI 1 dx [1222]))) "CLDRAD.f":153 149 {*extendsidi2_rex64}
     (nil))
(insn 161 160 162 14 (parallel [
            (set (reg:DI 1 dx [orig:120 _34 ] [120])
                (plus:DI (reg:DI 1 dx [orig:119 _33 ] [119])
                    (reg:DI 2 cx [orig:118 _32 ] [118])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":153 222 {*adddi_1}
     (nil))
(insn 162 161 163 14 (parallel [
            (set (reg:DI 2 cx [orig:121 _35 ] [121])
                (plus:DI (reg:DI 1 dx [orig:120 _34 ] [120])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":153 222 {*adddi_1}
     (nil))
(insn 163 162 164 14 (set (reg:SF 21 xmm0 [1223])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":153 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73149993896484375e+2 [0x0.889333p+9])
        (nil)))
(insn 164 163 165 14 (set (reg:SF 21 xmm0 [orig:122 _36 ] [122])
        (plus:SF (reg:SF 21 xmm0 [1223])
            (reg:SF 22 xmm1 [orig:116 _30 ] [116]))) "CLDRAD.f":153 838 {*fop_sf_comm}
     (nil))
(insn 165 164 166 14 (set (reg/f:DI 1 dx [1224])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":153 85 {*movdi_internal}
     (nil))
(insn 166 165 167 14 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:121 _35 ] [121])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1224])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:122 _36 ] [122])) "CLDRAD.f":153 131 {*movsf_internal}
     (nil))
(insn 167 166 4163 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":152 221 {*addsi_1}
     (nil))
(jump_insn 4163 167 4164 14 (set (pc)
        (label_ref 168)) "CLDRAD.f":152 683 {jump}
     (nil)
 -> 168)
;;  succ:       13 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111

(barrier 4164 4163 4316)
;; basic block 311, loop depth 0, maybe hot
;;  prev block 14, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13
;; bb 311 artificial_defs: { }
;; bb 311 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4316 4164 4315 311 233 (nil) [1 uses])
(note 4315 4316 4317 311 [bb 311] NOTE_INSN_BASIC_BLOCK)
(insn 4317 4315 171 311 (const_int 0 [0]) "CLDRAD.f":153 718 {nop}
     (nil))
;;  succ:       15 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111

;; basic block 15, loop depth 0, maybe hot
;;  prev block 311, next block 310, flags: (RTL, MODIFIED)
;;  pred:       311 [always]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 171 4317 172 15 8 (nil) [0 uses])
(note 172 171 173 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 4165 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":151 221 {*addsi_1}
     (nil))
(jump_insn 4165 173 4166 15 (set (pc)
        (label_ref 174)) "CLDRAD.f":151 683 {jump}
     (nil)
 -> 174)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1111

(barrier 4166 4165 4313)
;; basic block 310, loop depth 0, maybe hot
;;  prev block 15, next block 16, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 310 artificial_defs: { }
;; bb 310 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4313 4166 4312 310 232 (nil) [1 uses])
(note 4312 4313 4314 310 [bb 310] NOTE_INSN_BASIC_BLOCK)
(insn 4314 4312 177 310 (const_int 0 [0]) "CLDRAD.f":152 718 {nop}
     (nil))
;;  succ:       16 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 16, loop depth 0, maybe hot
;;  prev block 310, next block 17, flags: (RTL, MODIFIED)
;;  pred:       310 [always]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 123 124 125 126 127 1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1237
(code_label 177 4314 178 16 7 (nil) [0 uses])
(note 178 177 179 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 16 (set (reg:DI 1 dx [1225])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 180 179 181 16 (set (reg:DI 0 ax [1226])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 181 180 182 16 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":157 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 182 181 183 16 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":157 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 183 182 184 16 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1225])) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 184 183 185 16 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1226])) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 185 184 186 16 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 186 185 187 16 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 187 186 188 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 188 187 189 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f2038fb41b0 *.LC2>)) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 189 188 190 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":157 88 {*movqi_internal}
     (nil))
(call_insn 190 189 191 16 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":157 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 191 190 192 16 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":157 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 192 191 193 16 (set (reg/f:DI 1 dx [1227])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":158 85 {*movdi_internal}
     (nil))
(insn 193 192 194 16 (set (reg:DI 0 ax [1228])
        (const_int 0 [0])) "CLDRAD.f":158 85 {*movdi_internal}
     (nil))
(insn 194 193 4450 16 (set (reg:DI 2 cx [1229])
        (const_int 12 [0xc])) "CLDRAD.f":158 85 {*movdi_internal}
     (nil))
(insn 4450 194 195 16 (set (reg/f:DI 5 di [1227])
        (reg/f:DI 1 dx [1227])) "CLDRAD.f":158 85 {*movdi_internal}
     (nil))
(insn 195 4450 4451 16 (parallel [
            (set (reg:DI 2 cx [1229])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1227])
                (plus:DI (ashift:DI (reg:DI 2 cx [1229])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1227])))
            (set (mem/c:BLK (reg/f:DI 5 di [1227]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1228]))
            (use (reg:DI 2 cx [1229]))
        ]) "CLDRAD.f":158 984 {*rep_stosdi_rex64}
     (nil))
(insn 4451 195 196 16 (set (reg/f:DI 1 dx [1227])
        (reg/f:DI 5 di [1227])) "CLDRAD.f":158 85 {*movdi_internal}
     (nil))
(insn 196 4451 197 16 (set (mem/c:SI (reg/f:DI 1 dx [1227]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1228])) "CLDRAD.f":158 86 {*movsi_internal}
     (nil))
(insn 197 196 198 16 (parallel [
            (set (reg/f:DI 1 dx [1227])
                (plus:DI (reg/f:DI 1 dx [1227])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":158 222 {*adddi_1}
     (nil))
(insn 198 197 199 16 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55252 [0xd7d4]))) [2 rqstfld.id+36 S4 A32])
        (const_int 50 [0x32])) "CLDRAD.f":159 86 {*movsi_internal}
     (nil))
(insn 199 198 200 16 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55256 [0xd7d8]))) [2 rqstfld.id+40 S4 A64])
        (const_int 100 [0x64])) "CLDRAD.f":160 86 {*movsi_internal}
     (nil))
(insn 200 199 201 16 (set (reg:SI 0 ax [orig:123 _37 ] [123])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 132 [0x84]))) [2 rqstfld.iget+116 S4 A32])) "CLDRAD.f":162 86 {*movsi_internal}
     (nil))
(insn 201 200 202 16 (set (reg:DI 0 ax [orig:124 _38 ] [124])
        (sign_extend:DI (reg:SI 0 ax [orig:123 _37 ] [123]))) "CLDRAD.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 202 201 203 16 (parallel [
            (set (reg:DI 1 dx [orig:125 _39 ] [125])
                (plus:DI (reg:DI 0 ax [orig:124 _38 ] [124])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":162 222 {*adddi_1}
     (nil))
(insn 203 202 204 16 (set (reg:DI 0 ax [1230])
        (reg:DI 1 dx [orig:125 _39 ] [125])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 204 203 206 16 (parallel [
            (set (reg:DI 0 ax [1231])
                (ashift:DI (reg:DI 0 ax [1230])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":162 551 {*ashldi3_1}
     (nil))
(insn 206 204 207 16 (parallel [
            (set (reg:DI 0 ax [1230])
                (minus:DI (reg:DI 0 ax [1230])
                    (reg:DI 1 dx [orig:125 _39 ] [125])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":162 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:125 _39 ] [125])
            (const_int 15 [0xf]))
        (nil)))
(insn 207 206 210 16 (parallel [
            (set (reg:DI 0 ax [1232])
                (ashift:DI (reg:DI 0 ax [1230])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":162 551 {*ashldi3_1}
     (nil))
(insn 210 207 211 16 (parallel [
            (set (reg:DI 0 ax [1233])
                (plus:DI (reg:DI 0 ax [orig:126 _40 ] [126])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":162 222 {*adddi_1}
     (nil))
(insn 211 210 212 16 (parallel [
            (set (reg:DI 0 ax [1234])
                (ashift:DI (reg:DI 0 ax [1233])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":162 551 {*ashldi3_1}
     (nil))
(insn 212 211 213 16 (parallel [
            (set (reg/f:DI 1 dx [orig:127 _41 ] [127])
                (plus:DI (reg:DI 0 ax [1234])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":162 222 {*adddi_1}
     (nil))
(insn 213 212 214 16 (set (reg:DI 4 si [1235])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 214 213 215 16 (set (reg:DI 2 cx [1236])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 215 214 216 16 (set (reg:DI 0 ax [1237])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 216 215 217 16 (set (reg:DI 38 r9)
        (reg:DI 4 si [1235])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 217 216 218 16 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1236])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 218 217 220 16 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1237])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 220 218 221 16 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 132 [0x84])))) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 221 220 222 16 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 222 221 223 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":162 88 {*movqi_internal}
     (nil))
(call_insn 223 222 224 16 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":162 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3
;;              16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 128
(code_label 224 223 225 17 2 (nil) [2 uses])
(note 225 224 226 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 17 (set (reg:SI 0 ax [orig:128 _42 ] [128])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 140 [0x8c]))) [2 rqstfld.iget+124 S4 A32])) "CLDRAD.f":166 86 {*movsi_internal}
     (nil))
(insn 227 226 228 17 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:128 _42 ] [128])
            (const_int 0 [0]))) "CLDRAD.f":166 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 228 227 229 17 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 233)
            (pc))) "CLDRAD.f":166 682 {*jcc}
     (nil)
 -> 233)
;;  succ:       19
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 129
(note 229 228 230 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 18 (set (reg:SI 0 ax [orig:129 _43 ] [129])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 440 [0x1b8]))) [2 rqstfld.iget+424 S4 A64])) "CLDRAD.f":166 86 {*movsi_internal}
     (nil))
(insn 231 230 232 18 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:129 _43 ] [129])
            (const_int 0 [0]))) "CLDRAD.f":166 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 232 231 233 18 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 494)
            (pc))) "CLDRAD.f":166 682 {*jcc}
     (nil)
 -> 494)
;;  succ:       19 (FALLTHRU)
;;              39
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       17
;;              18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 130 131 132 133 134 1238 1239 1240 1241
(code_label 233 232 234 19 11 (nil) [1 uses])
(note 234 233 235 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 19 (set (reg:SI 0 ax [orig:130 _44 ] [130])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 140 [0x8c]))) [2 rqstfld.iget+124 S4 A32])) "CLDRAD.f":167 86 {*movsi_internal}
     (nil))
(insn 236 235 237 19 (set (reg:DI 0 ax [orig:131 _45 ] [131])
        (sign_extend:DI (reg:SI 0 ax [orig:130 _44 ] [130]))) "CLDRAD.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 237 236 238 19 (parallel [
            (set (reg:DI 1 dx [orig:132 _46 ] [132])
                (plus:DI (reg:DI 0 ax [orig:131 _45 ] [131])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 222 {*adddi_1}
     (nil))
(insn 238 237 239 19 (set (reg:DI 0 ax [1238])
        (reg:DI 1 dx [orig:132 _46 ] [132])) "CLDRAD.f":167 85 {*movdi_internal}
     (nil))
(insn 239 238 241 19 (parallel [
            (set (reg:DI 0 ax [1239])
                (ashift:DI (reg:DI 0 ax [1238])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 551 {*ashldi3_1}
     (nil))
(insn 241 239 242 19 (parallel [
            (set (reg:DI 0 ax [1238])
                (minus:DI (reg:DI 0 ax [1238])
                    (reg:DI 1 dx [orig:132 _46 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:132 _46 ] [132])
            (const_int 15 [0xf]))
        (nil)))
(insn 242 241 245 19 (parallel [
            (set (reg:DI 0 ax [1240])
                (ashift:DI (reg:DI 0 ax [1238])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 551 {*ashldi3_1}
     (nil))
(insn 245 242 246 19 (parallel [
            (set (reg:DI 0 ax [1241])
                (plus:DI (reg:DI 0 ax [orig:133 _47 ] [133])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 222 {*adddi_1}
     (nil))
(insn 246 245 247 19 (set (reg:SI 0 ax [orig:134 _48 ] [134])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [1241])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)) [2 rqstfld.lvls S4 A32])) "CLDRAD.f":167 86 {*movsi_internal}
     (nil))
(insn 247 246 248 19 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:134 _48 ] [134])
            (const_int 0 [0]))) "CLDRAD.f":167 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 248 247 249 19 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) "CLDRAD.f":167 682 {*jcc}
     (nil)
 -> 264)
;;  succ:       21
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 135 136 137 138 139 1242 1243 1244 1245
(note 249 248 250 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 20 (set (reg:SI 0 ax [orig:135 _49 ] [135])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 440 [0x1b8]))) [2 rqstfld.iget+424 S4 A64])) "CLDRAD.f":167 86 {*movsi_internal}
     (nil))
(insn 251 250 252 20 (set (reg:DI 0 ax [orig:136 _50 ] [136])
        (sign_extend:DI (reg:SI 0 ax [orig:135 _49 ] [135]))) "CLDRAD.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 252 251 253 20 (parallel [
            (set (reg:DI 1 dx [orig:137 _51 ] [137])
                (plus:DI (reg:DI 0 ax [orig:136 _50 ] [136])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 222 {*adddi_1}
     (nil))
(insn 253 252 254 20 (set (reg:DI 0 ax [1242])
        (reg:DI 1 dx [orig:137 _51 ] [137])) "CLDRAD.f":167 85 {*movdi_internal}
     (nil))
(insn 254 253 256 20 (parallel [
            (set (reg:DI 0 ax [1243])
                (ashift:DI (reg:DI 0 ax [1242])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 551 {*ashldi3_1}
     (nil))
(insn 256 254 257 20 (parallel [
            (set (reg:DI 0 ax [1242])
                (minus:DI (reg:DI 0 ax [1242])
                    (reg:DI 1 dx [orig:137 _51 ] [137])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:137 _51 ] [137])
            (const_int 15 [0xf]))
        (nil)))
(insn 257 256 260 20 (parallel [
            (set (reg:DI 0 ax [1244])
                (ashift:DI (reg:DI 0 ax [1242])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 551 {*ashldi3_1}
     (nil))
(insn 260 257 261 20 (parallel [
            (set (reg:DI 0 ax [1245])
                (plus:DI (reg:DI 0 ax [orig:138 _52 ] [138])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 222 {*adddi_1}
     (nil))
(insn 261 260 262 20 (set (reg:SI 0 ax [orig:139 _53 ] [139])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [1245])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)) [2 rqstfld.lvls S4 A32])) "CLDRAD.f":167 86 {*movsi_internal}
     (nil))
(insn 262 261 263 20 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:139 _53 ] [139])
            (const_int 0 [0]))) "CLDRAD.f":167 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 263 262 264 20 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 494)
            (pc))) "CLDRAD.f":167 682 {*jcc}
     (nil)
 -> 494)
;;  succ:       21 (FALLTHRU)
;;              39
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       19
;;              20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 140 1246 1247 1248 1249
(code_label 264 263 265 21 13 (nil) [1 uses])
(note 265 264 266 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 21 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 itype+0 S4 A128])
        (const_int 1 [0x1])) "CLDRAD.f":169 86 {*movsi_internal}
     (nil))
(insn 267 266 268 21 (parallel [
            (set (reg:DI 2 cx [1246])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -168 [0xffffffffffffff58])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":170 222 {*adddi_1}
     (nil))
(insn 268 267 269 21 (parallel [
            (set (reg:DI 1 dx [1247])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -172 [0xffffffffffffff54])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":170 222 {*adddi_1}
     (nil))
(insn 269 268 270 21 (parallel [
            (set (reg:DI 4 si [1248])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -164 [0xffffffffffffff5c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":170 222 {*adddi_1}
     (nil))
(insn 270 269 271 21 (parallel [
            (set (reg:DI 0 ax [1249])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":170 222 {*adddi_1}
     (nil))
(insn 271 270 4452 21 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":170 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 4452 271 272 21 (set (reg:DI 5 di [2234])
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":170 85 {*movdi_internal}
     (nil))
(insn 272 4452 273 21 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 5 di [2234])) "CLDRAD.f":170 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 273 272 274 21 (set (reg:DI 38 r9)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":170 85 {*movdi_internal}
     (nil))
(insn 274 273 278 21 (set (reg:DI 37 r8)
        (symbol_ref:DI ("l1d.4409") [flags 0x202]  <var_decl 0x7f2038edc990 l1d>)) "CLDRAD.f":170 85 {*movdi_internal}
     (nil))
(insn 278 274 279 21 (set (reg:DI 5 di)
        (reg:DI 0 ax [1249])) "CLDRAD.f":170 85 {*movdi_internal}
     (nil))
(insn 279 278 280 21 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":170 88 {*movqi_internal}
     (nil))
(call_insn 280 279 281 21 (call (mem:QI (symbol_ref:DI ("calcape_") [flags 0x41]  <function_decl 0x7f203929e900 calcape>) [0 calcape S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":170 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 281 280 282 21 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":170 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 282 281 283 21 (set (reg:SI 0 ax [orig:140 _54 ] [140])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 140 [0x8c]))) [2 rqstfld.iget+124 S4 A32])) "CLDRAD.f":173 86 {*movsi_internal}
     (nil))
(insn 283 282 284 21 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:140 _54 ] [140])
            (const_int 0 [0]))) "CLDRAD.f":173 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 284 283 285 21 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) "CLDRAD.f":173 682 {*jcc}
     (nil)
 -> 329)
;;  succ:       22 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 141 142 143 144 145 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262
(note 285 284 286 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 22 (set (reg:DI 1 dx [1250])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 287 286 288 22 (set (reg:DI 0 ax [1251])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 288 287 289 22 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":174 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 289 288 290 22 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":174 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 290 289 291 22 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1250])) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 291 290 292 22 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1251])) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 292 291 293 22 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 293 292 294 22 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 294 293 295 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 295 294 296 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f2038fb4240 *.LC3>)) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 296 295 297 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":174 88 {*movqi_internal}
     (nil))
(call_insn 297 296 298 22 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":174 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 298 297 299 22 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":174 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 299 298 300 22 (set (reg/f:DI 1 dx [1252])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":176 85 {*movdi_internal}
     (nil))
(insn 300 299 301 22 (set (reg:DI 0 ax [1253])
        (const_int 0 [0])) "CLDRAD.f":176 85 {*movdi_internal}
     (nil))
(insn 301 300 4453 22 (set (reg:DI 2 cx [1254])
        (const_int 12 [0xc])) "CLDRAD.f":176 85 {*movdi_internal}
     (nil))
(insn 4453 301 302 22 (set (reg/f:DI 5 di [1252])
        (reg/f:DI 1 dx [1252])) "CLDRAD.f":176 85 {*movdi_internal}
     (nil))
(insn 302 4453 4454 22 (parallel [
            (set (reg:DI 2 cx [1254])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1252])
                (plus:DI (ashift:DI (reg:DI 2 cx [1254])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1252])))
            (set (mem/c:BLK (reg/f:DI 5 di [1252]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1253]))
            (use (reg:DI 2 cx [1254]))
        ]) "CLDRAD.f":176 984 {*rep_stosdi_rex64}
     (nil))
(insn 4454 302 303 22 (set (reg/f:DI 1 dx [1252])
        (reg/f:DI 5 di [1252])) "CLDRAD.f":176 85 {*movdi_internal}
     (nil))
(insn 303 4454 304 22 (set (mem/c:SI (reg/f:DI 1 dx [1252]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1253])) "CLDRAD.f":176 86 {*movsi_internal}
     (nil))
(insn 304 303 305 22 (parallel [
            (set (reg/f:DI 1 dx [1252])
                (plus:DI (reg/f:DI 1 dx [1252])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":176 222 {*adddi_1}
     (nil))
(insn 305 304 306 22 (set (reg:SI 0 ax [orig:141 _55 ] [141])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 140 [0x8c]))) [2 rqstfld.iget+124 S4 A32])) "CLDRAD.f":178 86 {*movsi_internal}
     (nil))
(insn 306 305 307 22 (set (reg:DI 0 ax [orig:142 _56 ] [142])
        (sign_extend:DI (reg:SI 0 ax [orig:141 _55 ] [141]))) "CLDRAD.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 307 306 308 22 (parallel [
            (set (reg:DI 1 dx [orig:143 _57 ] [143])
                (plus:DI (reg:DI 0 ax [orig:142 _56 ] [142])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":178 222 {*adddi_1}
     (nil))
(insn 308 307 309 22 (set (reg:DI 0 ax [1255])
        (reg:DI 1 dx [orig:143 _57 ] [143])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 309 308 311 22 (parallel [
            (set (reg:DI 0 ax [1256])
                (ashift:DI (reg:DI 0 ax [1255])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":178 551 {*ashldi3_1}
     (nil))
(insn 311 309 312 22 (parallel [
            (set (reg:DI 0 ax [1255])
                (minus:DI (reg:DI 0 ax [1255])
                    (reg:DI 1 dx [orig:143 _57 ] [143])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":178 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:143 _57 ] [143])
            (const_int 15 [0xf]))
        (nil)))
(insn 312 311 315 22 (parallel [
            (set (reg:DI 0 ax [1257])
                (ashift:DI (reg:DI 0 ax [1255])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":178 551 {*ashldi3_1}
     (nil))
(insn 315 312 316 22 (parallel [
            (set (reg:DI 0 ax [1258])
                (plus:DI (reg:DI 0 ax [orig:144 _58 ] [144])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":178 222 {*adddi_1}
     (nil))
(insn 316 315 317 22 (parallel [
            (set (reg:DI 0 ax [1259])
                (ashift:DI (reg:DI 0 ax [1258])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":178 551 {*ashldi3_1}
     (nil))
(insn 317 316 318 22 (parallel [
            (set (reg/f:DI 1 dx [orig:145 _59 ] [145])
                (plus:DI (reg:DI 0 ax [1259])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":178 222 {*adddi_1}
     (nil))
(insn 318 317 319 22 (set (reg:DI 4 si [1260])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 319 318 320 22 (set (reg:DI 2 cx [1261])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 320 319 321 22 (set (reg:DI 0 ax [1262])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 321 320 322 22 (set (reg:DI 38 r9)
        (reg:DI 4 si [1260])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 322 321 323 22 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1261])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 323 322 325 22 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1262])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 325 323 326 22 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 140 [0x8c])))) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 326 325 327 22 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 327 326 328 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":178 88 {*movqi_internal}
     (nil))
(call_insn 328 327 329 22 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":178 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       21
;;              22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 146
(code_label 329 328 330 23 14 (nil) [1 uses])
(note 330 329 331 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 23 (set (reg:SI 0 ax [orig:146 _60 ] [146])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 440 [0x1b8]))) [2 rqstfld.iget+424 S4 A64])) "CLDRAD.f":182 86 {*movsi_internal}
     (nil))
(insn 332 331 333 23 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:146 _60 ] [146])
            (const_int 0 [0]))) "CLDRAD.f":182 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 333 332 334 23 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 494)
            (pc))) "CLDRAD.f":182 682 {*jcc}
     (nil)
 -> 494)
;;  succ:       24 (FALLTHRU)
;;              39
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 147 1263 1264
(note 334 333 335 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 24 (set (reg:DI 1 dx [1263])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 336 335 337 24 (set (reg:DI 0 ax [1264])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 337 336 338 24 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":183 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 338 337 339 24 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":183 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 339 338 340 24 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1263])) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 340 339 341 24 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1264])) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 341 340 342 24 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 342 341 343 24 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 343 342 344 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 344 343 345 24 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f2038fb42d0 *.LC4>)) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 345 344 346 24 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":183 88 {*movqi_internal}
     (nil))
(call_insn 346 345 347 24 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":183 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 347 346 348 24 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":183 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 348 347 349 24 (set (reg:SI 0 ax [orig:147 _61 ] [147])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 4 [0x4]))) [2 parallel.me+0 S4 A32])) "CLDRAD.f":1 86 {*movsi_internal}
     (nil))
(insn 349 348 350 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:147 _61 ] [147])
            (const_int 0 [0]))) "CLDRAD.f":184 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 350 349 351 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) "CLDRAD.f":184 682 {*jcc}
     (nil)
 -> 404)
;;  succ:       25 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1114 1265
(note 351 350 352 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 25 (set (reg/f:DI 0 ax [1265])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":185 85 {*movdi_internal}
     (nil))
(insn 353 352 354 25 (set (reg:SI 0 ax [orig:1114 _1217 ] [1114])
        (mem:SI (reg/f:DI 0 ax [1265]) [2 *jmout_1163(D)+0 S4 A32])) "CLDRAD.f":185 86 {*movsi_internal}
     (nil))
(insn 354 353 399 25 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":185 86 {*movsi_internal}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;;              30 [always] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1114
;; lr  def 	 17 [flags] 1115 1266
(code_label 399 354 355 26 19 (nil) [1 uses])
(note 355 399 356 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1114 _1217 ] [1114]))) "CLDRAD.f":185 11 {*cmpsi_1}
     (nil))
(insn 357 356 358 26 (set (reg:QI 1 dx [1266])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":185 678 {*setcc_qi}
     (nil))
(insn 358 357 359 26 (set (reg:SI 1 dx [orig:1115 _1219 ] [1115])
        (zero_extend:SI (reg:QI 1 dx [1266]))) "CLDRAD.f":185 140 {*zero_extendqisi2}
     (nil))
(insn 359 358 360 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1115 _1219 ] [1115])
            (const_int 0 [0]))) "CLDRAD.f":185 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 360 359 361 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4319)
            (pc))) "CLDRAD.f":185 682 {*jcc}
     (nil)
 -> 4319)
;;  succ:       312
;;              27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1116 1267
(note 361 360 362 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 27 (set (reg/f:DI 1 dx [1267])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":186 85 {*movdi_internal}
     (nil))
(insn 363 362 364 27 (set (reg:SI 2 cx [orig:1116 _1220 ] [1116])
        (mem:SI (reg/f:DI 1 dx [1267]) [2 *imout_1159(D)+0 S4 A32])) "CLDRAD.f":186 86 {*movsi_internal}
     (nil))
(insn 364 363 393 27 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":186 86 {*movsi_internal}
     (nil))
;;  succ:       28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114 1116

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;;              29 [always] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114 1116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1116
;; lr  def 	 17 [flags] 1117 1268
(code_label 393 364 365 28 18 (nil) [1 uses])
(note 365 393 366 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (reg:SI 2 cx [orig:1116 _1220 ] [1116]))) "CLDRAD.f":186 11 {*cmpsi_1}
     (nil))
(insn 367 366 368 28 (set (reg:QI 1 dx [1268])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":186 678 {*setcc_qi}
     (nil))
(insn 368 367 369 28 (set (reg:SI 1 dx [orig:1117 _1222 ] [1117])
        (zero_extend:SI (reg:QI 1 dx [1268]))) "CLDRAD.f":186 140 {*zero_extendqisi2}
     (nil))
(insn 369 368 370 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1117 _1222 ] [1117])
            (const_int 0 [0]))) "CLDRAD.f":186 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 370 369 371 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4322)
            (pc))) "CLDRAD.f":186 682 {*jcc}
     (nil)
 -> 4322)
;;  succ:       313
;;              29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114 1116

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 313, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114 1116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  def 	 17 [flags] 148 149 150 151 152 153 154 155 156 157 158 159 1269 1270 1271 1272 1273 1274 1275
(note 371 370 372 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 372 371 373 29 (set (reg:SI 1 dx [1269])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":187 86 {*movsi_internal}
     (nil))
(insn 373 372 374 29 (set (reg:DI 1 dx [orig:148 _62 ] [148])
        (sign_extend:DI (reg:SI 1 dx [1269]))) "CLDRAD.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 374 373 375 29 (parallel [
            (set (reg:DI 1 dx [orig:149 _63 ] [149])
                (mult:DI (reg:DI 1 dx [orig:148 _62 ] [148])
                    (reg:DI 3 bx [orig:1089 stride.2_1162 ] [1089])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":187 349 {*muldi3_1}
     (nil))
(insn 375 374 376 29 (parallel [
            (set (reg:DI 4 si [orig:150 _64 ] [150])
                (plus:DI (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096])
                    (reg:DI 1 dx [orig:149 _63 ] [149])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":187 222 {*adddi_1}
     (nil))
(insn 376 375 377 29 (set (reg:SI 1 dx [1270])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":187 86 {*movsi_internal}
     (nil))
(insn 377 376 378 29 (set (reg:DI 1 dx [orig:151 _65 ] [151])
        (sign_extend:DI (reg:SI 1 dx [1270]))) "CLDRAD.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 378 377 379 29 (parallel [
            (set (reg:DI 4 si [orig:152 _66 ] [152])
                (plus:DI (reg:DI 4 si [orig:150 _64 ] [150])
                    (reg:DI 1 dx [orig:151 _65 ] [151])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":187 222 {*adddi_1}
     (nil))
(insn 379 378 380 29 (set (reg/f:DI 1 dx [1271])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":187 85 {*movdi_internal}
     (nil))
(insn 380 379 381 29 (set (reg:SF 21 xmm0 [orig:153 _67 ] [153])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:152 _66 ] [152])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1271])) [1 *grid1_1172 S4 A32])) "CLDRAD.f":187 131 {*movsf_internal}
     (nil))
(insn 381 380 382 29 (set (reg:SI 1 dx [1272])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":187 86 {*movsi_internal}
     (nil))
(insn 382 381 383 29 (set (reg:DI 1 dx [orig:154 _68 ] [154])
        (sign_extend:DI (reg:SI 1 dx [1272]))) "CLDRAD.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 383 382 384 29 (parallel [
            (set (reg:DI 1 dx [orig:155 _69 ] [155])
                (mult:DI (reg:DI 1 dx [orig:154 _68 ] [154])
                    (reg:DI 3 bx [orig:1089 stride.2_1162 ] [1089])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":187 349 {*muldi3_1}
     (nil))
(insn 384 383 385 29 (parallel [
            (set (reg:DI 4 si [orig:156 _70 ] [156])
                (plus:DI (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096])
                    (reg:DI 1 dx [orig:155 _69 ] [155])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":187 222 {*adddi_1}
     (nil))
(insn 385 384 386 29 (set (reg:SI 1 dx [1273])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":187 86 {*movsi_internal}
     (nil))
(insn 386 385 387 29 (set (reg:DI 1 dx [orig:157 _71 ] [157])
        (sign_extend:DI (reg:SI 1 dx [1273]))) "CLDRAD.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 387 386 388 29 (parallel [
            (set (reg:DI 4 si [orig:158 _72 ] [158])
                (plus:DI (reg:DI 4 si [orig:156 _70 ] [156])
                    (reg:DI 1 dx [orig:157 _71 ] [157])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":187 222 {*adddi_1}
     (nil))
(insn 388 387 389 29 (set (reg:V4SF 22 xmm1 [1274])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) "CLDRAD.f":187 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 389 388 390 29 (parallel [
            (set (reg:SF 21 xmm0 [orig:159 _73 ] [159])
                (neg:SF (reg:SF 21 xmm0 [orig:153 _67 ] [153])))
            (use (reg:V4SF 22 xmm1 [1274]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":187 507 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:153 _67 ] [153]))
        (nil)))
(insn 390 389 391 29 (set (reg/f:DI 1 dx [1275])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":187 85 {*movdi_internal}
     (nil))
(insn 391 390 392 29 (set (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:158 _72 ] [158])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1275])) [1 *grid1_1172 S4 A32])
        (reg:SF 21 xmm0 [orig:159 _73 ] [159])) "CLDRAD.f":187 131 {*movsf_internal}
     (nil))
(insn 392 391 4167 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":186 221 {*addsi_1}
     (nil))
(jump_insn 4167 392 4168 29 (set (pc)
        (label_ref 393)) "CLDRAD.f":186 683 {jump}
     (nil)
 -> 393)
;;  succ:       28 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114 1116

(barrier 4168 4167 4322)
;; basic block 313, loop depth 0, maybe hot
;;  prev block 29, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28
;; bb 313 artificial_defs: { }
;; bb 313 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4322 4168 4321 313 235 (nil) [1 uses])
(note 4321 4322 4323 313 [bb 313] NOTE_INSN_BASIC_BLOCK)
(insn 4323 4321 396 313 (const_int 0 [0]) "CLDRAD.f":187 718 {nop}
     (nil))
;;  succ:       30 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114

;; basic block 30, loop depth 0, maybe hot
;;  prev block 313, next block 312, flags: (RTL, MODIFIED)
;;  pred:       313 [always]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 396 4323 397 30 17 (nil) [0 uses])
(note 397 396 398 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 398 397 4169 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":185 221 {*addsi_1}
     (nil))
(jump_insn 4169 398 4170 30 (set (pc)
        (label_ref 399)) "CLDRAD.f":185 683 {jump}
     (nil)
 -> 399)
;;  succ:       26 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1114

(barrier 4170 4169 4319)
;; basic block 312, loop depth 0, maybe hot
;;  prev block 30, next block 31, flags: (RTL, MODIFIED)
;;  pred:       26
;; bb 312 artificial_defs: { }
;; bb 312 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4319 4170 4318 312 234 (nil) [1 uses])
(note 4318 4319 4320 312 [bb 312] NOTE_INSN_BASIC_BLOCK)
(insn 4320 4318 404 312 (const_int 0 [0]) "CLDRAD.f":186 718 {nop}
     (nil))
;;  succ:       31 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 31, loop depth 0, maybe hot
;;  prev block 312, next block 32, flags: (RTL, MODIFIED)
;;  pred:       24
;;              312 [always]  (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 160
(code_label 404 4320 405 31 15 (nil) [1 uses])
(note 405 404 406 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 31 (set (reg:SI 0 ax [orig:160 _74 ] [160])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 4 [0x4]))) [2 parallel.me+0 S4 A32])) "CLDRAD.f":1 86 {*movsi_internal}
     (nil))
(insn 407 406 408 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:160 _74 ] [160])
            (const_int 0 [0]))) "CLDRAD.f":192 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 408 407 409 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 462)
            (pc))) "CLDRAD.f":192 682 {*jcc}
     (nil)
 -> 462)
;;  succ:       32 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1118 1276
(note 409 408 410 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 32 (set (reg/f:DI 0 ax [1276])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":193 85 {*movdi_internal}
     (nil))
(insn 411 410 412 32 (set (reg:SI 0 ax [orig:1118 _1226 ] [1118])
        (mem:SI (reg/f:DI 0 ax [1276]) [2 *jmout_1163(D)+0 S4 A32])) "CLDRAD.f":193 86 {*movsi_internal}
     (nil))
(insn 412 411 457 32 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":193 86 {*movsi_internal}
     (nil))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;;              37 [always] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1118
;; lr  def 	 17 [flags] 1119 1277
(code_label 457 412 413 33 24 (nil) [1 uses])
(note 413 457 414 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1118 _1226 ] [1118]))) "CLDRAD.f":193 11 {*cmpsi_1}
     (nil))
(insn 415 414 416 33 (set (reg:QI 1 dx [1277])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":193 678 {*setcc_qi}
     (nil))
(insn 416 415 417 33 (set (reg:SI 1 dx [orig:1119 _1228 ] [1119])
        (zero_extend:SI (reg:QI 1 dx [1277]))) "CLDRAD.f":193 140 {*zero_extendqisi2}
     (nil))
(insn 417 416 418 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1119 _1228 ] [1119])
            (const_int 0 [0]))) "CLDRAD.f":193 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 418 417 419 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4325)
            (pc))) "CLDRAD.f":193 682 {*jcc}
     (nil)
 -> 4325)
;;  succ:       314
;;              34 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1120 1278
(note 419 418 420 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 420 419 421 34 (set (reg/f:DI 1 dx [1278])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":194 85 {*movdi_internal}
     (nil))
(insn 421 420 422 34 (set (reg:SI 2 cx [orig:1120 _1229 ] [1120])
        (mem:SI (reg/f:DI 1 dx [1278]) [2 *imout_1159(D)+0 S4 A32])) "CLDRAD.f":194 86 {*movsi_internal}
     (nil))
(insn 422 421 451 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":194 86 {*movsi_internal}
     (nil))
;;  succ:       35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118 1120

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;;              36 [always] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118 1120
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1120
;; lr  def 	 17 [flags] 1121 1279
(code_label 451 422 423 35 23 (nil) [1 uses])
(note 423 451 424 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (reg:SI 2 cx [orig:1120 _1229 ] [1120]))) "CLDRAD.f":194 11 {*cmpsi_1}
     (nil))
(insn 425 424 426 35 (set (reg:QI 1 dx [1279])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":194 678 {*setcc_qi}
     (nil))
(insn 426 425 427 35 (set (reg:SI 1 dx [orig:1121 _1231 ] [1121])
        (zero_extend:SI (reg:QI 1 dx [1279]))) "CLDRAD.f":194 140 {*zero_extendqisi2}
     (nil))
(insn 427 426 428 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1121 _1231 ] [1121])
            (const_int 0 [0]))) "CLDRAD.f":194 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 428 427 429 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4328)
            (pc))) "CLDRAD.f":194 682 {*jcc}
     (nil)
 -> 4328)
;;  succ:       315
;;              36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118 1120

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 315, flags: (RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118 1120
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096
;; lr  def 	 17 [flags] 161 162 163 164 165 166 167 168 169 170 171 172 1280 1281 1282 1283 1284 1285 1286
(note 429 428 430 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 36 (set (reg:SI 1 dx [1280])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":195 86 {*movsi_internal}
     (nil))
(insn 431 430 432 36 (set (reg:DI 1 dx [orig:161 _75 ] [161])
        (sign_extend:DI (reg:SI 1 dx [1280]))) "CLDRAD.f":195 149 {*extendsidi2_rex64}
     (nil))
(insn 432 431 433 36 (parallel [
            (set (reg:DI 1 dx [orig:162 _76 ] [162])
                (mult:DI (reg:DI 1 dx [orig:161 _75 ] [161])
                    (reg:DI 3 bx [orig:1089 stride.2_1162 ] [1089])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":195 349 {*muldi3_1}
     (nil))
(insn 433 432 434 36 (parallel [
            (set (reg:DI 4 si [orig:163 _77 ] [163])
                (plus:DI (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096])
                    (reg:DI 1 dx [orig:162 _76 ] [162])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":195 222 {*adddi_1}
     (nil))
(insn 434 433 435 36 (set (reg:SI 1 dx [1281])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":195 86 {*movsi_internal}
     (nil))
(insn 435 434 436 36 (set (reg:DI 1 dx [orig:164 _78 ] [164])
        (sign_extend:DI (reg:SI 1 dx [1281]))) "CLDRAD.f":195 149 {*extendsidi2_rex64}
     (nil))
(insn 436 435 437 36 (parallel [
            (set (reg:DI 4 si [orig:165 _79 ] [165])
                (plus:DI (reg:DI 4 si [orig:163 _77 ] [163])
                    (reg:DI 1 dx [orig:164 _78 ] [164])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":195 222 {*adddi_1}
     (nil))
(insn 437 436 438 36 (set (reg/f:DI 1 dx [1282])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":195 85 {*movdi_internal}
     (nil))
(insn 438 437 439 36 (set (reg:SF 21 xmm0 [orig:166 _80 ] [166])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:165 _79 ] [165])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1282])) [1 *grid1_1172 S4 A32])) "CLDRAD.f":195 131 {*movsf_internal}
     (nil))
(insn 439 438 440 36 (set (reg:SI 1 dx [1283])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":195 86 {*movsi_internal}
     (nil))
(insn 440 439 441 36 (set (reg:DI 1 dx [orig:167 _81 ] [167])
        (sign_extend:DI (reg:SI 1 dx [1283]))) "CLDRAD.f":195 149 {*extendsidi2_rex64}
     (nil))
(insn 441 440 442 36 (parallel [
            (set (reg:DI 1 dx [orig:168 _82 ] [168])
                (mult:DI (reg:DI 1 dx [orig:167 _81 ] [167])
                    (reg:DI 3 bx [orig:1089 stride.2_1162 ] [1089])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":195 349 {*muldi3_1}
     (nil))
(insn 442 441 443 36 (parallel [
            (set (reg:DI 4 si [orig:169 _83 ] [169])
                (plus:DI (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096])
                    (reg:DI 1 dx [orig:168 _82 ] [168])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":195 222 {*adddi_1}
     (nil))
(insn 443 442 444 36 (set (reg:SI 1 dx [1284])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":195 86 {*movsi_internal}
     (nil))
(insn 444 443 445 36 (set (reg:DI 1 dx [orig:170 _84 ] [170])
        (sign_extend:DI (reg:SI 1 dx [1284]))) "CLDRAD.f":195 149 {*extendsidi2_rex64}
     (nil))
(insn 445 444 446 36 (parallel [
            (set (reg:DI 4 si [orig:171 _85 ] [171])
                (plus:DI (reg:DI 4 si [orig:169 _83 ] [169])
                    (reg:DI 1 dx [orig:170 _84 ] [170])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":195 222 {*adddi_1}
     (nil))
(insn 446 445 447 36 (set (reg:V4SF 22 xmm1 [1285])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) "CLDRAD.f":195 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 447 446 448 36 (parallel [
            (set (reg:SF 21 xmm0 [orig:172 _86 ] [172])
                (neg:SF (reg:SF 21 xmm0 [orig:166 _80 ] [166])))
            (use (reg:V4SF 22 xmm1 [1285]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":195 507 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:166 _80 ] [166]))
        (nil)))
(insn 448 447 449 36 (set (reg/f:DI 1 dx [1286])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":195 85 {*movdi_internal}
     (nil))
(insn 449 448 450 36 (set (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:171 _85 ] [171])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1286])) [1 *grid1_1172 S4 A32])
        (reg:SF 21 xmm0 [orig:172 _86 ] [172])) "CLDRAD.f":195 131 {*movsf_internal}
     (nil))
(insn 450 449 4171 36 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":194 221 {*addsi_1}
     (nil))
(jump_insn 4171 450 4172 36 (set (pc)
        (label_ref 451)) "CLDRAD.f":194 683 {jump}
     (nil)
 -> 451)
;;  succ:       35 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118 1120

(barrier 4172 4171 4328)
;; basic block 315, loop depth 0, maybe hot
;;  prev block 36, next block 37, flags: (RTL, MODIFIED)
;;  pred:       35
;; bb 315 artificial_defs: { }
;; bb 315 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4328 4172 4327 315 237 (nil) [1 uses])
(note 4327 4328 4329 315 [bb 315] NOTE_INSN_BASIC_BLOCK)
(insn 4329 4327 454 315 (const_int 0 [0]) "CLDRAD.f":195 718 {nop}
     (nil))
;;  succ:       37 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118

;; basic block 37, loop depth 0, maybe hot
;;  prev block 315, next block 314, flags: (RTL, MODIFIED)
;;  pred:       315 [always]  (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 454 4329 455 37 22 (nil) [0 uses])
(note 455 454 456 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 456 455 4173 37 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":193 221 {*addsi_1}
     (nil))
(jump_insn 4173 456 4174 37 (set (pc)
        (label_ref 457)) "CLDRAD.f":193 683 {jump}
     (nil)
 -> 457)
;;  succ:       33 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1089 1096 1118

(barrier 4174 4173 4325)
;; basic block 314, loop depth 0, maybe hot
;;  prev block 37, next block 38, flags: (RTL, MODIFIED)
;;  pred:       33
;; bb 314 artificial_defs: { }
;; bb 314 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4325 4174 4324 314 236 (nil) [1 uses])
(note 4324 4325 4326 314 [bb 314] NOTE_INSN_BASIC_BLOCK)
(insn 4326 4324 462 314 (const_int 0 [0]) "CLDRAD.f":194 718 {nop}
     (nil))
;;  succ:       38 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, maybe hot
;;  prev block 314, next block 39, flags: (RTL, MODIFIED)
;;  pred:       31
;;              314 [always]  (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 173 174 175 176 177 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297
(code_label 462 4326 463 38 20 (nil) [1 uses])
(note 463 462 464 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 38 (set (reg/f:DI 1 dx [1287])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":199 85 {*movdi_internal}
     (nil))
(insn 465 464 466 38 (set (reg:DI 0 ax [1288])
        (const_int 0 [0])) "CLDRAD.f":199 85 {*movdi_internal}
     (nil))
(insn 466 465 4455 38 (set (reg:DI 2 cx [1289])
        (const_int 12 [0xc])) "CLDRAD.f":199 85 {*movdi_internal}
     (nil))
(insn 4455 466 467 38 (set (reg/f:DI 5 di [1287])
        (reg/f:DI 1 dx [1287])) "CLDRAD.f":199 85 {*movdi_internal}
     (nil))
(insn 467 4455 4456 38 (parallel [
            (set (reg:DI 2 cx [1289])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1287])
                (plus:DI (ashift:DI (reg:DI 2 cx [1289])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1287])))
            (set (mem/c:BLK (reg/f:DI 5 di [1287]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1288]))
            (use (reg:DI 2 cx [1289]))
        ]) "CLDRAD.f":199 984 {*rep_stosdi_rex64}
     (nil))
(insn 4456 467 468 38 (set (reg/f:DI 1 dx [1287])
        (reg/f:DI 5 di [1287])) "CLDRAD.f":199 85 {*movdi_internal}
     (nil))
(insn 468 4456 469 38 (set (mem/c:SI (reg/f:DI 1 dx [1287]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1288])) "CLDRAD.f":199 86 {*movsi_internal}
     (nil))
(insn 469 468 470 38 (parallel [
            (set (reg/f:DI 1 dx [1287])
                (plus:DI (reg/f:DI 1 dx [1287])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":199 222 {*adddi_1}
     (nil))
(insn 470 469 471 38 (set (reg:SI 0 ax [orig:173 _87 ] [173])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 440 [0x1b8]))) [2 rqstfld.iget+424 S4 A64])) "CLDRAD.f":201 86 {*movsi_internal}
     (nil))
(insn 471 470 472 38 (set (reg:DI 0 ax [orig:174 _88 ] [174])
        (sign_extend:DI (reg:SI 0 ax [orig:173 _87 ] [173]))) "CLDRAD.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 472 471 473 38 (parallel [
            (set (reg:DI 1 dx [orig:175 _89 ] [175])
                (plus:DI (reg:DI 0 ax [orig:174 _88 ] [174])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":201 222 {*adddi_1}
     (nil))
(insn 473 472 474 38 (set (reg:DI 0 ax [1290])
        (reg:DI 1 dx [orig:175 _89 ] [175])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 474 473 476 38 (parallel [
            (set (reg:DI 0 ax [1291])
                (ashift:DI (reg:DI 0 ax [1290])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":201 551 {*ashldi3_1}
     (nil))
(insn 476 474 477 38 (parallel [
            (set (reg:DI 0 ax [1290])
                (minus:DI (reg:DI 0 ax [1290])
                    (reg:DI 1 dx [orig:175 _89 ] [175])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":201 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:175 _89 ] [175])
            (const_int 15 [0xf]))
        (nil)))
(insn 477 476 480 38 (parallel [
            (set (reg:DI 0 ax [1292])
                (ashift:DI (reg:DI 0 ax [1290])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":201 551 {*ashldi3_1}
     (nil))
(insn 480 477 481 38 (parallel [
            (set (reg:DI 0 ax [1293])
                (plus:DI (reg:DI 0 ax [orig:176 _90 ] [176])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":201 222 {*adddi_1}
     (nil))
(insn 481 480 482 38 (parallel [
            (set (reg:DI 0 ax [1294])
                (ashift:DI (reg:DI 0 ax [1293])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":201 551 {*ashldi3_1}
     (nil))
(insn 482 481 483 38 (parallel [
            (set (reg/f:DI 1 dx [orig:177 _91 ] [177])
                (plus:DI (reg:DI 0 ax [1294])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":201 222 {*adddi_1}
     (nil))
(insn 483 482 484 38 (set (reg:DI 4 si [1295])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 484 483 485 38 (set (reg:DI 2 cx [1296])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 485 484 486 38 (set (reg:DI 0 ax [1297])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 486 485 487 38 (set (reg:DI 38 r9)
        (reg:DI 4 si [1295])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 487 486 488 38 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1296])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 488 487 490 38 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1297])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 490 488 491 38 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 440 [0x1b8])))) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 491 490 492 38 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 492 491 493 38 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":201 88 {*movqi_internal}
     (nil))
(call_insn 493 492 494 38 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":201 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       39 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       18
;;              20
;;              23
;;              38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 178
(code_label 494 493 495 39 12 (nil) [3 uses])
(note 495 494 496 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 496 495 497 39 (set (reg:SI 0 ax [orig:178 _92 ] [178])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 332 [0x14c]))) [2 rqstfld.iget+316 S4 A32])) "CLDRAD.f":207 86 {*movsi_internal}
     (nil))
(insn 497 496 498 39 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:178 _92 ] [178])
            (const_int 0 [0]))) "CLDRAD.f":207 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 498 497 499 39 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 546)
            (pc))) "CLDRAD.f":207 682 {*jcc}
     (nil)
 -> 546)
;;  succ:       40 (FALLTHRU)
;;              41
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 179 180 181 182 183 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310
(note 499 498 500 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 40 (set (reg:DI 5 di)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":208 85 {*movdi_internal}
     (nil))
(insn 501 500 502 40 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":208 88 {*movqi_internal}
     (nil))
(call_insn 502 501 503 40 (call (mem:QI (symbol_ref:DI ("calpw_") [flags 0x41]  <function_decl 0x7f203929ea00 calpw>) [0 calpw S1 A8])
        (const_int 0 [0])) "CLDRAD.f":208 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 503 502 504 40 (set (reg:DI 1 dx [1298])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 504 503 505 40 (set (reg:DI 0 ax [1299])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 505 504 506 40 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":209 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 506 505 507 40 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":209 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 507 506 508 40 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1298])) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 508 507 509 40 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1299])) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 509 508 510 40 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 510 509 511 40 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 511 510 512 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 512 511 513 40 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f2038fb4360 *.LC6>)) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 513 512 514 40 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":209 88 {*movqi_internal}
     (nil))
(call_insn 514 513 515 40 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":209 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 515 514 516 40 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":209 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 516 515 517 40 (set (reg/f:DI 1 dx [1300])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":210 85 {*movdi_internal}
     (nil))
(insn 517 516 518 40 (set (reg:DI 0 ax [1301])
        (const_int 0 [0])) "CLDRAD.f":210 85 {*movdi_internal}
     (nil))
(insn 518 517 4457 40 (set (reg:DI 2 cx [1302])
        (const_int 12 [0xc])) "CLDRAD.f":210 85 {*movdi_internal}
     (nil))
(insn 4457 518 519 40 (set (reg/f:DI 5 di [1300])
        (reg/f:DI 1 dx [1300])) "CLDRAD.f":210 85 {*movdi_internal}
     (nil))
(insn 519 4457 4458 40 (parallel [
            (set (reg:DI 2 cx [1302])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1300])
                (plus:DI (ashift:DI (reg:DI 2 cx [1302])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1300])))
            (set (mem/c:BLK (reg/f:DI 5 di [1300]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1301]))
            (use (reg:DI 2 cx [1302]))
        ]) "CLDRAD.f":210 984 {*rep_stosdi_rex64}
     (nil))
(insn 4458 519 520 40 (set (reg/f:DI 1 dx [1300])
        (reg/f:DI 5 di [1300])) "CLDRAD.f":210 85 {*movdi_internal}
     (nil))
(insn 520 4458 521 40 (set (mem/c:SI (reg/f:DI 1 dx [1300]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1301])) "CLDRAD.f":210 86 {*movsi_internal}
     (nil))
(insn 521 520 522 40 (parallel [
            (set (reg/f:DI 1 dx [1300])
                (plus:DI (reg/f:DI 1 dx [1300])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":210 222 {*adddi_1}
     (nil))
(insn 522 521 523 40 (set (reg:SI 0 ax [orig:179 _93 ] [179])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 332 [0x14c]))) [2 rqstfld.iget+316 S4 A32])) "CLDRAD.f":213 86 {*movsi_internal}
     (nil))
(insn 523 522 524 40 (set (reg:DI 0 ax [orig:180 _94 ] [180])
        (sign_extend:DI (reg:SI 0 ax [orig:179 _93 ] [179]))) "CLDRAD.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 524 523 525 40 (parallel [
            (set (reg:DI 1 dx [orig:181 _95 ] [181])
                (plus:DI (reg:DI 0 ax [orig:180 _94 ] [180])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":213 222 {*adddi_1}
     (nil))
(insn 525 524 526 40 (set (reg:DI 0 ax [1303])
        (reg:DI 1 dx [orig:181 _95 ] [181])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 526 525 528 40 (parallel [
            (set (reg:DI 0 ax [1304])
                (ashift:DI (reg:DI 0 ax [1303])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":213 551 {*ashldi3_1}
     (nil))
(insn 528 526 529 40 (parallel [
            (set (reg:DI 0 ax [1303])
                (minus:DI (reg:DI 0 ax [1303])
                    (reg:DI 1 dx [orig:181 _95 ] [181])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":213 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:181 _95 ] [181])
            (const_int 15 [0xf]))
        (nil)))
(insn 529 528 532 40 (parallel [
            (set (reg:DI 0 ax [1305])
                (ashift:DI (reg:DI 0 ax [1303])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":213 551 {*ashldi3_1}
     (nil))
(insn 532 529 533 40 (parallel [
            (set (reg:DI 0 ax [1306])
                (plus:DI (reg:DI 0 ax [orig:182 _96 ] [182])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":213 222 {*adddi_1}
     (nil))
(insn 533 532 534 40 (parallel [
            (set (reg:DI 0 ax [1307])
                (ashift:DI (reg:DI 0 ax [1306])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":213 551 {*ashldi3_1}
     (nil))
(insn 534 533 535 40 (parallel [
            (set (reg/f:DI 1 dx [orig:183 _97 ] [183])
                (plus:DI (reg:DI 0 ax [1307])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":213 222 {*adddi_1}
     (nil))
(insn 535 534 536 40 (set (reg:DI 4 si [1308])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 536 535 537 40 (set (reg:DI 2 cx [1309])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 537 536 538 40 (set (reg:DI 0 ax [1310])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 538 537 539 40 (set (reg:DI 38 r9)
        (reg:DI 4 si [1308])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 539 538 540 40 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1309])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 540 539 542 40 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1310])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 542 540 543 40 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 332 [0x14c])))) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 543 542 544 40 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 544 543 545 40 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":213 88 {*movqi_internal}
     (nil))
(call_insn 545 544 546 40 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":213 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       39
;;              40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 184
(code_label 546 545 547 41 25 (nil) [1 uses])
(note 547 546 548 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 548 547 549 41 (set (reg:SI 0 ax [orig:184 _98 ] [184])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 160 [0xa0]))) [2 rqstfld.iget+144 S4 A128])) "CLDRAD.f":222 86 {*movsi_internal}
     (nil))
(insn 549 548 550 41 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:184 _98 ] [184])
            (const_int 0 [0]))) "CLDRAD.f":222 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 550 549 551 41 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 604)
            (pc))) "CLDRAD.f":222 682 {*jcc}
     (nil)
 -> 604)
;;  succ:       42 (FALLTHRU)
;;              43
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 185 186 187 188 189 1311 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326
(note 551 550 552 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 552 551 553 42 (set (reg:DI 1 dx [1311])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 553 552 554 42 (set (reg:DI 0 ax [1312])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 554 553 555 42 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":223 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 555 554 556 42 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":223 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 556 555 557 42 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1311])) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 557 556 558 42 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1312])) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 558 557 559 42 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 559 558 560 42 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("cnvcld_") [flags 0x202]  <var_decl 0x7f20392a8d80 cnvcld>)
                (const_int 118524 [0x1cefc])))) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 560 559 561 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 561 560 562 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f2038fb43f0 *.LC7>)) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 562 561 563 42 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":223 88 {*movqi_internal}
     (nil))
(call_insn 563 562 564 42 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":223 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 564 563 565 42 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":223 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 565 564 566 42 (set (reg/f:DI 1 dx [1313])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":224 85 {*movdi_internal}
     (nil))
(insn 566 565 567 42 (set (reg:DI 0 ax [1314])
        (const_int 0 [0])) "CLDRAD.f":224 85 {*movdi_internal}
     (nil))
(insn 567 566 4459 42 (set (reg:DI 2 cx [1315])
        (const_int 12 [0xc])) "CLDRAD.f":224 85 {*movdi_internal}
     (nil))
(insn 4459 567 568 42 (set (reg/f:DI 5 di [1313])
        (reg/f:DI 1 dx [1313])) "CLDRAD.f":224 85 {*movdi_internal}
     (nil))
(insn 568 4459 4460 42 (parallel [
            (set (reg:DI 2 cx [1315])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1313])
                (plus:DI (ashift:DI (reg:DI 2 cx [1315])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1313])))
            (set (mem/c:BLK (reg/f:DI 5 di [1313]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1314]))
            (use (reg:DI 2 cx [1315]))
        ]) "CLDRAD.f":224 984 {*rep_stosdi_rex64}
     (nil))
(insn 4460 568 569 42 (set (reg/f:DI 1 dx [1313])
        (reg/f:DI 5 di [1313])) "CLDRAD.f":224 85 {*movdi_internal}
     (nil))
(insn 569 4460 570 42 (set (mem/c:SI (reg/f:DI 1 dx [1313]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1314])) "CLDRAD.f":224 86 {*movsi_internal}
     (nil))
(insn 570 569 571 42 (parallel [
            (set (reg/f:DI 1 dx [1313])
                (plus:DI (reg/f:DI 1 dx [1313])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":224 222 {*adddi_1}
     (nil))
(insn 571 570 572 42 (set (reg:DI 2 cx [1316])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":225 85 {*movdi_internal}
     (nil))
(insn 572 571 573 42 (set (reg:DI 1 dx [1317])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":225 85 {*movdi_internal}
     (nil))
(insn 573 572 576 42 (set (reg:DI 0 ax [1318])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":225 85 {*movdi_internal}
     (nil))
(insn 576 573 577 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":225 85 {*movdi_internal}
     (nil))
(insn 577 576 578 42 (set (reg:DI 5 di)
        (reg:DI 0 ax [1318])) "CLDRAD.f":225 85 {*movdi_internal}
     (nil))
(insn 578 577 579 42 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":225 88 {*movqi_internal}
     (nil))
(call_insn 579 578 580 42 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":225 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 580 579 581 42 (set (reg:SI 0 ax [orig:185 _99 ] [185])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 160 [0xa0]))) [2 rqstfld.iget+144 S4 A128])) "CLDRAD.f":227 86 {*movsi_internal}
     (nil))
(insn 581 580 582 42 (set (reg:DI 0 ax [orig:186 _100 ] [186])
        (sign_extend:DI (reg:SI 0 ax [orig:185 _99 ] [185]))) "CLDRAD.f":227 149 {*extendsidi2_rex64}
     (nil))
(insn 582 581 583 42 (parallel [
            (set (reg:DI 1 dx [orig:187 _101 ] [187])
                (plus:DI (reg:DI 0 ax [orig:186 _100 ] [186])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":227 222 {*adddi_1}
     (nil))
(insn 583 582 584 42 (set (reg:DI 0 ax [1319])
        (reg:DI 1 dx [orig:187 _101 ] [187])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 584 583 586 42 (parallel [
            (set (reg:DI 0 ax [1320])
                (ashift:DI (reg:DI 0 ax [1319])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":227 551 {*ashldi3_1}
     (nil))
(insn 586 584 587 42 (parallel [
            (set (reg:DI 0 ax [1319])
                (minus:DI (reg:DI 0 ax [1319])
                    (reg:DI 1 dx [orig:187 _101 ] [187])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":227 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:187 _101 ] [187])
            (const_int 15 [0xf]))
        (nil)))
(insn 587 586 590 42 (parallel [
            (set (reg:DI 0 ax [1321])
                (ashift:DI (reg:DI 0 ax [1319])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":227 551 {*ashldi3_1}
     (nil))
(insn 590 587 591 42 (parallel [
            (set (reg:DI 0 ax [1322])
                (plus:DI (reg:DI 0 ax [orig:188 _102 ] [188])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":227 222 {*adddi_1}
     (nil))
(insn 591 590 592 42 (parallel [
            (set (reg:DI 0 ax [1323])
                (ashift:DI (reg:DI 0 ax [1322])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":227 551 {*ashldi3_1}
     (nil))
(insn 592 591 593 42 (parallel [
            (set (reg/f:DI 1 dx [orig:189 _103 ] [189])
                (plus:DI (reg:DI 0 ax [1323])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":227 222 {*adddi_1}
     (nil))
(insn 593 592 594 42 (set (reg:DI 4 si [1324])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 594 593 595 42 (set (reg:DI 2 cx [1325])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 595 594 596 42 (set (reg:DI 0 ax [1326])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 596 595 597 42 (set (reg:DI 38 r9)
        (reg:DI 4 si [1324])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 597 596 598 42 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1325])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 598 597 600 42 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1326])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 600 598 601 42 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 160 [0xa0])))) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 601 600 602 42 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 602 601 603 42 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":227 88 {*movqi_internal}
     (nil))
(call_insn 603 602 604 42 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":227 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       41
;;              42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 190
(code_label 604 603 605 43 26 (nil) [1 uses])
(note 605 604 606 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 606 605 607 43 (set (reg:SI 0 ax [orig:190 _104 ] [190])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 164 [0xa4]))) [2 rqstfld.iget+148 S4 A32])) "CLDRAD.f":231 86 {*movsi_internal}
     (nil))
(insn 607 606 608 43 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:190 _104 ] [190])
            (const_int 0 [0]))) "CLDRAD.f":231 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 608 607 609 43 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 662)
            (pc))) "CLDRAD.f":231 682 {*jcc}
     (nil)
 -> 662)
;;  succ:       44 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 191 192 193 194 195 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342
(note 609 608 610 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 610 609 611 44 (set (reg:DI 1 dx [1327])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 611 610 612 44 (set (reg:DI 0 ax [1328])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 612 611 613 44 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":232 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 613 612 614 44 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":232 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 614 613 615 44 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1327])) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 615 614 616 44 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1328])) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 616 615 617 44 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 617 616 618 44 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("cnvcld_") [flags 0x202]  <var_decl 0x7f20392a8d80 cnvcld>)
                (const_int 237048 [0x39df8])))) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 618 617 619 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 619 618 620 44 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f2038fb4510 *.LC9>)) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 620 619 621 44 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":232 88 {*movqi_internal}
     (nil))
(call_insn 621 620 622 44 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":232 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 622 621 623 44 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":232 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 623 622 624 44 (set (reg/f:DI 1 dx [1329])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":233 85 {*movdi_internal}
     (nil))
(insn 624 623 625 44 (set (reg:DI 0 ax [1330])
        (const_int 0 [0])) "CLDRAD.f":233 85 {*movdi_internal}
     (nil))
(insn 625 624 4461 44 (set (reg:DI 2 cx [1331])
        (const_int 12 [0xc])) "CLDRAD.f":233 85 {*movdi_internal}
     (nil))
(insn 4461 625 626 44 (set (reg/f:DI 5 di [1329])
        (reg/f:DI 1 dx [1329])) "CLDRAD.f":233 85 {*movdi_internal}
     (nil))
(insn 626 4461 4462 44 (parallel [
            (set (reg:DI 2 cx [1331])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1329])
                (plus:DI (ashift:DI (reg:DI 2 cx [1331])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1329])))
            (set (mem/c:BLK (reg/f:DI 5 di [1329]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1330]))
            (use (reg:DI 2 cx [1331]))
        ]) "CLDRAD.f":233 984 {*rep_stosdi_rex64}
     (nil))
(insn 4462 626 627 44 (set (reg/f:DI 1 dx [1329])
        (reg/f:DI 5 di [1329])) "CLDRAD.f":233 85 {*movdi_internal}
     (nil))
(insn 627 4462 628 44 (set (mem/c:SI (reg/f:DI 1 dx [1329]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1330])) "CLDRAD.f":233 86 {*movsi_internal}
     (nil))
(insn 628 627 629 44 (parallel [
            (set (reg/f:DI 1 dx [1329])
                (plus:DI (reg/f:DI 1 dx [1329])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":233 222 {*adddi_1}
     (nil))
(insn 629 628 630 44 (set (reg:DI 2 cx [1332])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":234 85 {*movdi_internal}
     (nil))
(insn 630 629 631 44 (set (reg:DI 1 dx [1333])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":234 85 {*movdi_internal}
     (nil))
(insn 631 630 634 44 (set (reg:DI 0 ax [1334])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":234 85 {*movdi_internal}
     (nil))
(insn 634 631 635 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":234 85 {*movdi_internal}
     (nil))
(insn 635 634 636 44 (set (reg:DI 5 di)
        (reg:DI 0 ax [1334])) "CLDRAD.f":234 85 {*movdi_internal}
     (nil))
(insn 636 635 637 44 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":234 88 {*movqi_internal}
     (nil))
(call_insn 637 636 638 44 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":234 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 638 637 639 44 (set (reg:SI 0 ax [orig:191 _105 ] [191])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 164 [0xa4]))) [2 rqstfld.iget+148 S4 A32])) "CLDRAD.f":236 86 {*movsi_internal}
     (nil))
(insn 639 638 640 44 (set (reg:DI 0 ax [orig:192 _106 ] [192])
        (sign_extend:DI (reg:SI 0 ax [orig:191 _105 ] [191]))) "CLDRAD.f":236 149 {*extendsidi2_rex64}
     (nil))
(insn 640 639 641 44 (parallel [
            (set (reg:DI 1 dx [orig:193 _107 ] [193])
                (plus:DI (reg:DI 0 ax [orig:192 _106 ] [192])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":236 222 {*adddi_1}
     (nil))
(insn 641 640 642 44 (set (reg:DI 0 ax [1335])
        (reg:DI 1 dx [orig:193 _107 ] [193])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 642 641 644 44 (parallel [
            (set (reg:DI 0 ax [1336])
                (ashift:DI (reg:DI 0 ax [1335])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":236 551 {*ashldi3_1}
     (nil))
(insn 644 642 645 44 (parallel [
            (set (reg:DI 0 ax [1335])
                (minus:DI (reg:DI 0 ax [1335])
                    (reg:DI 1 dx [orig:193 _107 ] [193])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":236 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:193 _107 ] [193])
            (const_int 15 [0xf]))
        (nil)))
(insn 645 644 648 44 (parallel [
            (set (reg:DI 0 ax [1337])
                (ashift:DI (reg:DI 0 ax [1335])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":236 551 {*ashldi3_1}
     (nil))
(insn 648 645 649 44 (parallel [
            (set (reg:DI 0 ax [1338])
                (plus:DI (reg:DI 0 ax [orig:194 _108 ] [194])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":236 222 {*adddi_1}
     (nil))
(insn 649 648 650 44 (parallel [
            (set (reg:DI 0 ax [1339])
                (ashift:DI (reg:DI 0 ax [1338])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":236 551 {*ashldi3_1}
     (nil))
(insn 650 649 651 44 (parallel [
            (set (reg/f:DI 1 dx [orig:195 _109 ] [195])
                (plus:DI (reg:DI 0 ax [1339])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":236 222 {*adddi_1}
     (nil))
(insn 651 650 652 44 (set (reg:DI 4 si [1340])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 652 651 653 44 (set (reg:DI 2 cx [1341])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 653 652 654 44 (set (reg:DI 0 ax [1342])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 654 653 655 44 (set (reg:DI 38 r9)
        (reg:DI 4 si [1340])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 655 654 656 44 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1341])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 656 655 658 44 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1342])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 658 656 659 44 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 164 [0xa4])))) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 659 658 660 44 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 660 659 661 44 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":236 88 {*movqi_internal}
     (nil))
(call_insn 661 660 662 44 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":236 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       45 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 46, flags: (RTL, MODIFIED)
;;  pred:       43
;;              44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 196
(code_label 662 661 663 45 27 (nil) [1 uses])
(note 663 662 664 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 664 663 665 45 (set (reg:SI 0 ax [orig:196 _110 ] [196])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 168 [0xa8]))) [2 rqstfld.iget+152 S4 A64])) "CLDRAD.f":240 86 {*movsi_internal}
     (nil))
(insn 665 664 666 45 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:196 _110 ] [196])
            (const_int 0 [0]))) "CLDRAD.f":240 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 666 665 667 45 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 720)
            (pc))) "CLDRAD.f":240 682 {*jcc}
     (nil)
 -> 720)
;;  succ:       46 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 47, flags: (RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 197 198 199 200 201 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358
(note 667 666 668 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 668 667 669 46 (set (reg:DI 1 dx [1343])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 669 668 670 46 (set (reg:DI 0 ax [1344])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 670 669 671 46 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":241 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 671 670 672 46 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":241 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 672 671 673 46 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1343])) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 673 672 674 46 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1344])) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 674 673 675 46 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 675 674 676 46 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("cnvcld_") [flags 0x202]  <var_decl 0x7f20392a8d80 cnvcld>)
                (const_int 355572 [0x56cf4])))) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 676 675 677 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 677 676 678 46 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f2038fb45a0 *.LC10>)) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 678 677 679 46 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":241 88 {*movqi_internal}
     (nil))
(call_insn 679 678 680 46 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":241 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 680 679 681 46 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":241 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 681 680 682 46 (set (reg/f:DI 1 dx [1345])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":242 85 {*movdi_internal}
     (nil))
(insn 682 681 683 46 (set (reg:DI 0 ax [1346])
        (const_int 0 [0])) "CLDRAD.f":242 85 {*movdi_internal}
     (nil))
(insn 683 682 4463 46 (set (reg:DI 2 cx [1347])
        (const_int 12 [0xc])) "CLDRAD.f":242 85 {*movdi_internal}
     (nil))
(insn 4463 683 684 46 (set (reg/f:DI 5 di [1345])
        (reg/f:DI 1 dx [1345])) "CLDRAD.f":242 85 {*movdi_internal}
     (nil))
(insn 684 4463 4464 46 (parallel [
            (set (reg:DI 2 cx [1347])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1345])
                (plus:DI (ashift:DI (reg:DI 2 cx [1347])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1345])))
            (set (mem/c:BLK (reg/f:DI 5 di [1345]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1346]))
            (use (reg:DI 2 cx [1347]))
        ]) "CLDRAD.f":242 984 {*rep_stosdi_rex64}
     (nil))
(insn 4464 684 685 46 (set (reg/f:DI 1 dx [1345])
        (reg/f:DI 5 di [1345])) "CLDRAD.f":242 85 {*movdi_internal}
     (nil))
(insn 685 4464 686 46 (set (mem/c:SI (reg/f:DI 1 dx [1345]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1346])) "CLDRAD.f":242 86 {*movsi_internal}
     (nil))
(insn 686 685 687 46 (parallel [
            (set (reg/f:DI 1 dx [1345])
                (plus:DI (reg/f:DI 1 dx [1345])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":242 222 {*adddi_1}
     (nil))
(insn 687 686 688 46 (set (reg:DI 2 cx [1348])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":243 85 {*movdi_internal}
     (nil))
(insn 688 687 689 46 (set (reg:DI 1 dx [1349])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":243 85 {*movdi_internal}
     (nil))
(insn 689 688 692 46 (set (reg:DI 0 ax [1350])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":243 85 {*movdi_internal}
     (nil))
(insn 692 689 693 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":243 85 {*movdi_internal}
     (nil))
(insn 693 692 694 46 (set (reg:DI 5 di)
        (reg:DI 0 ax [1350])) "CLDRAD.f":243 85 {*movdi_internal}
     (nil))
(insn 694 693 695 46 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":243 88 {*movqi_internal}
     (nil))
(call_insn 695 694 696 46 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":243 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 696 695 697 46 (set (reg:SI 0 ax [orig:197 _111 ] [197])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 168 [0xa8]))) [2 rqstfld.iget+152 S4 A64])) "CLDRAD.f":245 86 {*movsi_internal}
     (nil))
(insn 697 696 698 46 (set (reg:DI 0 ax [orig:198 _112 ] [198])
        (sign_extend:DI (reg:SI 0 ax [orig:197 _111 ] [197]))) "CLDRAD.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 698 697 699 46 (parallel [
            (set (reg:DI 1 dx [orig:199 _113 ] [199])
                (plus:DI (reg:DI 0 ax [orig:198 _112 ] [198])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":245 222 {*adddi_1}
     (nil))
(insn 699 698 700 46 (set (reg:DI 0 ax [1351])
        (reg:DI 1 dx [orig:199 _113 ] [199])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 700 699 702 46 (parallel [
            (set (reg:DI 0 ax [1352])
                (ashift:DI (reg:DI 0 ax [1351])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":245 551 {*ashldi3_1}
     (nil))
(insn 702 700 703 46 (parallel [
            (set (reg:DI 0 ax [1351])
                (minus:DI (reg:DI 0 ax [1351])
                    (reg:DI 1 dx [orig:199 _113 ] [199])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":245 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:199 _113 ] [199])
            (const_int 15 [0xf]))
        (nil)))
(insn 703 702 706 46 (parallel [
            (set (reg:DI 0 ax [1353])
                (ashift:DI (reg:DI 0 ax [1351])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":245 551 {*ashldi3_1}
     (nil))
(insn 706 703 707 46 (parallel [
            (set (reg:DI 0 ax [1354])
                (plus:DI (reg:DI 0 ax [orig:200 _114 ] [200])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":245 222 {*adddi_1}
     (nil))
(insn 707 706 708 46 (parallel [
            (set (reg:DI 0 ax [1355])
                (ashift:DI (reg:DI 0 ax [1354])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":245 551 {*ashldi3_1}
     (nil))
(insn 708 707 709 46 (parallel [
            (set (reg/f:DI 1 dx [orig:201 _115 ] [201])
                (plus:DI (reg:DI 0 ax [1355])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":245 222 {*adddi_1}
     (nil))
(insn 709 708 710 46 (set (reg:DI 4 si [1356])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 710 709 711 46 (set (reg:DI 2 cx [1357])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 711 710 712 46 (set (reg:DI 0 ax [1358])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 712 711 713 46 (set (reg:DI 38 r9)
        (reg:DI 4 si [1356])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 713 712 714 46 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1357])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 714 713 716 46 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1358])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 716 714 717 46 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 168 [0xa8])))) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 717 716 718 46 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 718 717 719 46 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":245 88 {*movqi_internal}
     (nil))
(call_insn 719 718 720 46 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":245 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 48, flags: (RTL, MODIFIED)
;;  pred:       45
;;              46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 202
(code_label 720 719 721 47 28 (nil) [1 uses])
(note 721 720 722 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 722 721 723 47 (set (reg:SI 0 ax [orig:202 _116 ] [202])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 656 [0x290]))) [2 rqstfld.iget+640 S4 A128])) "CLDRAD.f":249 86 {*movsi_internal}
     (nil))
(insn 723 722 724 47 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:202 _116 ] [202])
            (const_int 0 [0]))) "CLDRAD.f":249 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 724 723 725 47 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 871)
            (pc))) "CLDRAD.f":249 682 {*jcc}
     (nil)
 -> 871)
;;  succ:       48 (FALLTHRU)
;;              59
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 49, flags: (RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1122 1123
(note 725 724 726 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 726 725 727 48 (set (reg:SI 1 dx [orig:1122 _1253 ] [1122])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":250 86 {*movsi_internal}
     (nil))
(insn 727 726 728 48 (set (reg:SI 0 ax [orig:1123 _1254 ] [1123])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":250 86 {*movsi_internal}
     (nil))
(insn 728 727 814 48 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1122 _1253 ] [1122])) "CLDRAD.f":250 86 {*movsi_internal}
     (nil))
;;  succ:       49 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123

;; basic block 49, loop depth 0, maybe hot
;;  prev block 48, next block 50, flags: (RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;;              57 [always] 
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123
;; lr  def 	 17 [flags] 1124 1359
(code_label 814 728 729 49 35 (nil) [1 uses])
(note 729 814 730 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 730 729 731 49 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1123 _1254 ] [1123]))) "CLDRAD.f":250 11 {*cmpsi_1}
     (nil))
(insn 731 730 732 49 (set (reg:QI 1 dx [1359])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":250 678 {*setcc_qi}
     (nil))
(insn 732 731 733 49 (set (reg:SI 1 dx [orig:1124 _1256 ] [1124])
        (zero_extend:SI (reg:QI 1 dx [1359]))) "CLDRAD.f":250 140 {*zero_extendqisi2}
     (nil))
(insn 733 732 734 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1124 _1256 ] [1124])
            (const_int 0 [0]))) "CLDRAD.f":250 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 734 733 735 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4331)
            (pc))) "CLDRAD.f":250 682 {*jcc}
     (nil)
 -> 4331)
;;  succ:       316
;;              50 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123

;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 51, flags: (RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 735 734 736 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 808 50 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":251 86 {*movsi_internal}
     (nil))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123

;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;;              56 [always] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1125 1360
(code_label 808 736 737 51 34 (nil) [1 uses])
(note 737 808 738 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 738 737 739 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":251 11 {*cmpsi_1}
     (nil))
(insn 739 738 740 51 (set (reg:QI 1 dx [1360])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":251 678 {*setcc_qi}
     (nil))
(insn 740 739 741 51 (set (reg:SI 1 dx [orig:1125 _1258 ] [1125])
        (zero_extend:SI (reg:QI 1 dx [1360]))) "CLDRAD.f":251 140 {*zero_extendqisi2}
     (nil))
(insn 741 740 742 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1125 _1258 ] [1125])
            (const_int 0 [0]))) "CLDRAD.f":251 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 742 741 743 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4334)
            (pc))) "CLDRAD.f":251 682 {*jcc}
     (nil)
 -> 4334)
;;  succ:       317
;;              52 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 203 204 205 206 207 208 209 210 211 212 213 214 215 1086 1126 1361 1362 1363 1364 1365 1366 1367 1368 1369 1370
(note 743 742 744 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 744 743 745 52 (set (reg:SI 1 dx [1361])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 745 744 746 52 (set (reg:DI 1 dx [orig:203 _117 ] [203])
        (sign_extend:DI (reg:SI 1 dx [1361]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 746 745 747 52 (parallel [
            (set (reg:DI 2 cx [orig:204 _118 ] [204])
                (mult:DI (reg:DI 1 dx [orig:203 _117 ] [203])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 349 {*muldi3_1}
     (nil))
(insn 747 746 748 52 (set (reg:SI 1 dx [1362])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 748 747 749 52 (set (reg:DI 1 dx [orig:205 _119 ] [205])
        (sign_extend:DI (reg:SI 1 dx [1362]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 749 748 750 52 (parallel [
            (set (reg:DI 1 dx [orig:206 _120 ] [206])
                (plus:DI (reg:DI 1 dx [orig:205 _119 ] [205])
                    (reg:DI 2 cx [orig:204 _118 ] [204])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 750 749 751 52 (parallel [
            (set (reg:DI 2 cx [orig:207 _121 ] [207])
                (plus:DI (reg:DI 1 dx [orig:206 _120 ] [206])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 751 750 752 52 (set (reg/f:DI 1 dx [1363])
        (symbol_ref:DI ("cnvcld_") [flags 0x202]  <var_decl 0x7f20392a8d80 cnvcld>)) "CLDRAD.f":253 85 {*movdi_internal}
     (nil))
(insn 752 751 753 52 (parallel [
            (set (reg:DI 2 cx [1364])
                (plus:DI (reg:DI 2 cx [orig:207 _121 ] [207])
                    (const_int 59262 [0xe77e])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 753 752 754 52 (set (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1364])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1363])) [1 cnvcld.cfracm S4 A32])) "CLDRAD.f":253 131 {*movsf_internal}
     (nil))
(insn 754 753 755 52 (set (reg:SI 1 dx [1365])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 755 754 756 52 (set (reg:DI 1 dx [orig:208 _122 ] [208])
        (sign_extend:DI (reg:SI 1 dx [1365]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 756 755 757 52 (parallel [
            (set (reg:DI 2 cx [orig:209 _123 ] [209])
                (mult:DI (reg:DI 1 dx [orig:208 _122 ] [208])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 349 {*muldi3_1}
     (nil))
(insn 757 756 758 52 (set (reg:SI 1 dx [1366])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 758 757 759 52 (set (reg:DI 1 dx [orig:210 _124 ] [210])
        (sign_extend:DI (reg:SI 1 dx [1366]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 759 758 760 52 (parallel [
            (set (reg:DI 1 dx [orig:211 _125 ] [211])
                (plus:DI (reg:DI 1 dx [orig:210 _124 ] [210])
                    (reg:DI 2 cx [orig:209 _123 ] [209])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 760 759 761 52 (parallel [
            (set (reg:DI 2 cx [orig:212 _126 ] [212])
                (plus:DI (reg:DI 1 dx [orig:211 _125 ] [211])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 761 760 762 52 (set (reg/f:DI 1 dx [1367])
        (symbol_ref:DI ("cnvcld_") [flags 0x202]  <var_decl 0x7f20392a8d80 cnvcld>)) "CLDRAD.f":253 85 {*movdi_internal}
     (nil))
(insn 762 761 763 52 (parallel [
            (set (reg:DI 2 cx [1368])
                (plus:DI (reg:DI 2 cx [orig:212 _126 ] [212])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 763 762 764 52 (set (reg:SF 22 xmm1 [orig:1126 _1261 ] [1126])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1368])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1367])) [1 cnvcld.cfrach S4 A32])) "CLDRAD.f":253 131 {*movsf_internal}
     (nil))
(insn 764 763 765 52 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [orig:1126 _1261 ] [1126])
            (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086]))) "CLDRAD.f":253 53 {*cmpisf}
     (nil))
(insn 765 764 766 52 (set (reg:QI 1 dx [1369])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":253 678 {*setcc_qi}
     (nil))
(insn 766 765 767 52 (set (reg:SI 2 cx [orig:213 _127 ] [213])
        (zero_extend:SI (reg:QI 1 dx [1369]))) "CLDRAD.f":253 140 {*zero_extendqisi2}
     (nil))
(insn 767 766 768 52 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086])
                    (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":253 54 {*cmpiusf}
     (nil))
(insn 768 767 769 52 (set (reg:QI 1 dx [1370])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":253 678 {*setcc_qi}
     (nil))
(insn 769 768 770 52 (set (reg:SI 1 dx [orig:214 _128 ] [214])
        (zero_extend:SI (reg:QI 1 dx [1370]))) "CLDRAD.f":253 140 {*zero_extendqisi2}
     (nil))
(insn 770 769 771 52 (parallel [
            (set (reg:SI 1 dx [orig:215 _129 ] [215])
                (ior:SI (reg:SI 1 dx [orig:214 _128 ] [214])
                    (reg:SI 2 cx [orig:213 _127 ] [213])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 450 {*iorsi_1}
     (nil))
(insn 771 770 772 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:215 _129 ] [215])
            (const_int 0 [0]))) "CLDRAD.f":253 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 772 771 773 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 774)
            (pc))) "CLDRAD.f":253 682 {*jcc}
     (nil)
 -> 774)
;;  succ:       53 (FALLTHRU)
;;              54
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1086 1123 1126

;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 54, flags: (RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123 1126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1126
;; lr  def 	 1086
(note 773 772 5 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 5 773 774 53 (set (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086])
        (reg:SF 22 xmm1 [orig:1126 _1261 ] [1126])) "CLDRAD.f":253 131 {*movsf_internal}
     (nil))
;;  succ:       54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1086 1123

;; basic block 54, loop depth 0, maybe hot
;;  prev block 53, next block 55, flags: (RTL, MODIFIED)
;;  pred:       52
;;              53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1086 1123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1086
;; lr  def 	 17 [flags] 216 217 218 219 220 221 222 223 1087 1371 1372 1373 1374 1375 1376
(code_label 774 5 775 54 32 (nil) [1 uses])
(note 775 774 776 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 776 775 777 54 (set (reg:SI 1 dx [1371])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 777 776 778 54 (set (reg:DI 1 dx [orig:216 _130 ] [216])
        (sign_extend:DI (reg:SI 1 dx [1371]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 778 777 779 54 (parallel [
            (set (reg:DI 2 cx [orig:217 _131 ] [217])
                (mult:DI (reg:DI 1 dx [orig:216 _130 ] [216])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 349 {*muldi3_1}
     (nil))
(insn 779 778 780 54 (set (reg:SI 1 dx [1372])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 780 779 781 54 (set (reg:DI 1 dx [orig:218 _132 ] [218])
        (sign_extend:DI (reg:SI 1 dx [1372]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 781 780 782 54 (parallel [
            (set (reg:DI 1 dx [orig:219 _133 ] [219])
                (plus:DI (reg:DI 1 dx [orig:218 _132 ] [218])
                    (reg:DI 2 cx [orig:217 _131 ] [217])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 782 781 783 54 (parallel [
            (set (reg:DI 2 cx [orig:220 _134 ] [220])
                (plus:DI (reg:DI 1 dx [orig:219 _133 ] [219])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 783 782 784 54 (set (reg/f:DI 1 dx [1373])
        (symbol_ref:DI ("cnvcld_") [flags 0x202]  <var_decl 0x7f20392a8d80 cnvcld>)) "CLDRAD.f":253 85 {*movdi_internal}
     (nil))
(insn 784 783 785 54 (parallel [
            (set (reg:DI 2 cx [1374])
                (plus:DI (reg:DI 2 cx [orig:220 _134 ] [220])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 785 784 786 54 (set (reg:SF 22 xmm1 [orig:1087 M.11_1060 ] [1087])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1374])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1373])) [1 cnvcld.cfracl S4 A32])) "CLDRAD.f":253 131 {*movsf_internal}
     (nil))
(insn 786 785 787 54 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086])
            (reg:SF 22 xmm1 [orig:1087 M.11_1060 ] [1087]))) "CLDRAD.f":253 53 {*cmpisf}
     (nil))
(insn 787 786 788 54 (set (reg:QI 1 dx [1375])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":253 678 {*setcc_qi}
     (nil))
(insn 788 787 789 54 (set (reg:SI 2 cx [orig:221 _135 ] [221])
        (zero_extend:SI (reg:QI 1 dx [1375]))) "CLDRAD.f":253 140 {*zero_extendqisi2}
     (nil))
(insn 789 788 790 54 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 22 xmm1 [orig:1087 M.11_1060 ] [1087])
                    (reg:SF 22 xmm1 [orig:1087 M.11_1060 ] [1087]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":253 54 {*cmpiusf}
     (nil))
(insn 790 789 791 54 (set (reg:QI 1 dx [1376])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":253 678 {*setcc_qi}
     (nil))
(insn 791 790 792 54 (set (reg:SI 1 dx [orig:222 _136 ] [222])
        (zero_extend:SI (reg:QI 1 dx [1376]))) "CLDRAD.f":253 140 {*zero_extendqisi2}
     (nil))
(insn 792 791 793 54 (parallel [
            (set (reg:SI 1 dx [orig:223 _137 ] [223])
                (ior:SI (reg:SI 1 dx [orig:222 _136 ] [222])
                    (reg:SI 2 cx [orig:221 _135 ] [221])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 450 {*iorsi_1}
     (nil))
(insn 793 792 794 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:223 _137 ] [223])
            (const_int 0 [0]))) "CLDRAD.f":253 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 794 793 795 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 796)
            (pc))) "CLDRAD.f":253 682 {*jcc}
     (nil)
 -> 796)
;;  succ:       55 (FALLTHRU)
;;              56
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1086 1087 1123

;; basic block 55, loop depth 0, maybe hot
;;  prev block 54, next block 56, flags: (RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1086 1123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1086
;; lr  def 	 1087
(note 795 794 6 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 6 795 796 55 (set (reg:SF 22 xmm1 [orig:1087 M.11_1060 ] [1087])
        (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086])) "CLDRAD.f":253 131 {*movsf_internal}
     (nil))
;;  succ:       56 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1087 1123

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 317, flags: (RTL, MODIFIED)
;;  pred:       54
;;              55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1087 1123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1087
;; lr  def 	 17 [flags] 224 225 226 227 228 1377 1378 1379
(code_label 796 6 797 56 33 (nil) [1 uses])
(note 797 796 798 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 798 797 799 56 (set (reg:SI 1 dx [1377])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 799 798 800 56 (set (reg:DI 1 dx [orig:224 _138 ] [224])
        (sign_extend:DI (reg:SI 1 dx [1377]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 800 799 801 56 (parallel [
            (set (reg:DI 2 cx [orig:225 _139 ] [225])
                (mult:DI (reg:DI 1 dx [orig:224 _138 ] [224])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 349 {*muldi3_1}
     (nil))
(insn 801 800 802 56 (set (reg:SI 1 dx [1378])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 802 801 803 56 (set (reg:DI 1 dx [orig:226 _140 ] [226])
        (sign_extend:DI (reg:SI 1 dx [1378]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 803 802 804 56 (parallel [
            (set (reg:DI 1 dx [orig:227 _141 ] [227])
                (plus:DI (reg:DI 1 dx [orig:226 _140 ] [226])
                    (reg:DI 2 cx [orig:225 _139 ] [225])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 804 803 805 56 (parallel [
            (set (reg:DI 2 cx [orig:228 _142 ] [228])
                (plus:DI (reg:DI 1 dx [orig:227 _141 ] [227])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 805 804 806 56 (set (reg/f:DI 1 dx [1379])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":253 85 {*movdi_internal}
     (nil))
(insn 806 805 807 56 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:228 _142 ] [228])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1379])) [1 egrid1 S4 A32])
        (reg:SF 22 xmm1 [orig:1087 M.11_1060 ] [1087])) "CLDRAD.f":253 131 {*movsf_internal}
     (nil))
(insn 807 806 4175 56 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":251 221 {*addsi_1}
     (nil))
(jump_insn 4175 807 4176 56 (set (pc)
        (label_ref 808)) "CLDRAD.f":251 683 {jump}
     (nil)
 -> 808)
;;  succ:       51 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123

(barrier 4176 4175 4334)
;; basic block 317, loop depth 0, maybe hot
;;  prev block 56, next block 57, flags: (RTL, MODIFIED)
;;  pred:       51
;; bb 317 artificial_defs: { }
;; bb 317 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4334 4176 4333 317 239 (nil) [1 uses])
(note 4333 4334 4335 317 [bb 317] NOTE_INSN_BASIC_BLOCK)
(insn 4335 4333 811 317 (const_int 0 [0]) "CLDRAD.f":253 718 {nop}
     (nil))
;;  succ:       57 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123

;; basic block 57, loop depth 0, maybe hot
;;  prev block 317, next block 316, flags: (RTL, MODIFIED)
;;  pred:       317 [always]  (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 811 4335 812 57 31 (nil) [0 uses])
(note 812 811 813 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 813 812 4177 57 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":250 221 {*addsi_1}
     (nil))
(jump_insn 4177 813 4178 57 (set (pc)
        (label_ref 814)) "CLDRAD.f":250 683 {jump}
     (nil)
 -> 814)
;;  succ:       49 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1123

(barrier 4178 4177 4331)
;; basic block 316, loop depth 0, maybe hot
;;  prev block 57, next block 58, flags: (RTL, MODIFIED)
;;  pred:       49
;; bb 316 artificial_defs: { }
;; bb 316 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4331 4178 4330 316 238 (nil) [1 uses])
(note 4330 4331 4332 316 [bb 316] NOTE_INSN_BASIC_BLOCK)
(insn 4332 4330 817 316 (const_int 0 [0]) "CLDRAD.f":251 718 {nop}
     (nil))
;;  succ:       58 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, maybe hot
;;  prev block 316, next block 59, flags: (RTL, MODIFIED)
;;  pred:       316 [always]  (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 229 230 231 232 233 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395
(code_label 817 4332 818 58 30 (nil) [0 uses])
(note 818 817 819 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 819 818 820 58 (set (reg:DI 1 dx [1380])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 820 819 821 58 (set (reg:DI 0 ax [1381])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 821 820 822 58 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":256 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 822 821 823 58 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":256 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 823 822 824 58 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1380])) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 824 823 825 58 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1381])) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 825 824 826 58 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 826 825 827 58 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 827 826 828 58 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 828 827 829 58 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f2038fb4630 *.LC11>)) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 829 828 830 58 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":256 88 {*movqi_internal}
     (nil))
(call_insn 830 829 831 58 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":256 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 831 830 832 58 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":256 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 832 831 833 58 (set (reg/f:DI 1 dx [1382])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":257 85 {*movdi_internal}
     (nil))
(insn 833 832 834 58 (set (reg:DI 0 ax [1383])
        (const_int 0 [0])) "CLDRAD.f":257 85 {*movdi_internal}
     (nil))
(insn 834 833 4465 58 (set (reg:DI 2 cx [1384])
        (const_int 12 [0xc])) "CLDRAD.f":257 85 {*movdi_internal}
     (nil))
(insn 4465 834 835 58 (set (reg/f:DI 5 di [1382])
        (reg/f:DI 1 dx [1382])) "CLDRAD.f":257 85 {*movdi_internal}
     (nil))
(insn 835 4465 4466 58 (parallel [
            (set (reg:DI 2 cx [1384])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1382])
                (plus:DI (ashift:DI (reg:DI 2 cx [1384])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1382])))
            (set (mem/c:BLK (reg/f:DI 5 di [1382]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1383]))
            (use (reg:DI 2 cx [1384]))
        ]) "CLDRAD.f":257 984 {*rep_stosdi_rex64}
     (nil))
(insn 4466 835 836 58 (set (reg/f:DI 1 dx [1382])
        (reg/f:DI 5 di [1382])) "CLDRAD.f":257 85 {*movdi_internal}
     (nil))
(insn 836 4466 837 58 (set (mem/c:SI (reg/f:DI 1 dx [1382]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1383])) "CLDRAD.f":257 86 {*movsi_internal}
     (nil))
(insn 837 836 838 58 (parallel [
            (set (reg/f:DI 1 dx [1382])
                (plus:DI (reg/f:DI 1 dx [1382])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":257 222 {*adddi_1}
     (nil))
(insn 838 837 839 58 (set (reg:DI 2 cx [1385])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":258 85 {*movdi_internal}
     (nil))
(insn 839 838 840 58 (set (reg:DI 1 dx [1386])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":258 85 {*movdi_internal}
     (nil))
(insn 840 839 843 58 (set (reg:DI 0 ax [1387])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":258 85 {*movdi_internal}
     (nil))
(insn 843 840 844 58 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":258 85 {*movdi_internal}
     (nil))
(insn 844 843 845 58 (set (reg:DI 5 di)
        (reg:DI 0 ax [1387])) "CLDRAD.f":258 85 {*movdi_internal}
     (nil))
(insn 845 844 846 58 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":258 88 {*movqi_internal}
     (nil))
(call_insn 846 845 847 58 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":258 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 847 846 848 58 (set (reg:SI 0 ax [orig:229 _143 ] [229])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 656 [0x290]))) [2 rqstfld.iget+640 S4 A128])) "CLDRAD.f":260 86 {*movsi_internal}
     (nil))
(insn 848 847 849 58 (set (reg:DI 0 ax [orig:230 _144 ] [230])
        (sign_extend:DI (reg:SI 0 ax [orig:229 _143 ] [229]))) "CLDRAD.f":260 149 {*extendsidi2_rex64}
     (nil))
(insn 849 848 850 58 (parallel [
            (set (reg:DI 1 dx [orig:231 _145 ] [231])
                (plus:DI (reg:DI 0 ax [orig:230 _144 ] [230])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":260 222 {*adddi_1}
     (nil))
(insn 850 849 851 58 (set (reg:DI 0 ax [1388])
        (reg:DI 1 dx [orig:231 _145 ] [231])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 851 850 853 58 (parallel [
            (set (reg:DI 0 ax [1389])
                (ashift:DI (reg:DI 0 ax [1388])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":260 551 {*ashldi3_1}
     (nil))
(insn 853 851 854 58 (parallel [
            (set (reg:DI 0 ax [1388])
                (minus:DI (reg:DI 0 ax [1388])
                    (reg:DI 1 dx [orig:231 _145 ] [231])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":260 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:231 _145 ] [231])
            (const_int 15 [0xf]))
        (nil)))
(insn 854 853 857 58 (parallel [
            (set (reg:DI 0 ax [1390])
                (ashift:DI (reg:DI 0 ax [1388])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":260 551 {*ashldi3_1}
     (nil))
(insn 857 854 858 58 (parallel [
            (set (reg:DI 0 ax [1391])
                (plus:DI (reg:DI 0 ax [orig:232 _146 ] [232])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":260 222 {*adddi_1}
     (nil))
(insn 858 857 859 58 (parallel [
            (set (reg:DI 0 ax [1392])
                (ashift:DI (reg:DI 0 ax [1391])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":260 551 {*ashldi3_1}
     (nil))
(insn 859 858 860 58 (parallel [
            (set (reg/f:DI 1 dx [orig:233 _147 ] [233])
                (plus:DI (reg:DI 0 ax [1392])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":260 222 {*adddi_1}
     (nil))
(insn 860 859 861 58 (set (reg:DI 4 si [1393])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 861 860 862 58 (set (reg:DI 2 cx [1394])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 862 861 863 58 (set (reg:DI 0 ax [1395])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 863 862 864 58 (set (reg:DI 38 r9)
        (reg:DI 4 si [1393])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 864 863 865 58 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1394])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 865 864 867 58 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1395])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 867 865 868 58 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 656 [0x290])))) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 868 867 869 58 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 869 868 870 58 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":260 88 {*movqi_internal}
     (nil))
(call_insn 870 869 871 58 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":260 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       59 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 59, loop depth 0, maybe hot
;;  prev block 58, next block 60, flags: (RTL, MODIFIED)
;;  pred:       47
;;              58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 234
(code_label 871 870 872 59 29 (nil) [1 uses])
(note 872 871 873 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 873 872 874 59 (set (reg:SI 0 ax [orig:234 _148 ] [234])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 588 [0x24c]))) [2 rqstfld.iget+572 S4 A32])) "CLDRAD.f":264 86 {*movsi_internal}
     (nil))
(insn 874 873 875 59 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:234 _148 ] [234])
            (const_int 0 [0]))) "CLDRAD.f":264 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 875 874 876 59 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1067)
            (pc))) "CLDRAD.f":264 682 {*jcc}
     (nil)
 -> 1067)
;;  succ:       60 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, maybe hot
;;  prev block 59, next block 61, flags: (RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1127 1128
(note 876 875 877 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 877 876 878 60 (set (reg:SI 1 dx [orig:1127 _1273 ] [1127])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":265 86 {*movsi_internal}
     (nil))
(insn 878 877 879 60 (set (reg:SI 0 ax [orig:1128 _1274 ] [1128])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":265 86 {*movsi_internal}
     (nil))
(insn 879 878 976 60 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1127 _1273 ] [1127])) "CLDRAD.f":265 86 {*movsi_internal}
     (nil))
;;  succ:       61 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128

;; basic block 61, loop depth 0, maybe hot
;;  prev block 60, next block 62, flags: (RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;;              68 [always] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128
;; lr  def 	 17 [flags] 1129 1396
(code_label 976 879 880 61 42 (nil) [1 uses])
(note 880 976 881 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 881 880 882 61 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1128 _1274 ] [1128]))) "CLDRAD.f":265 11 {*cmpsi_1}
     (nil))
(insn 882 881 883 61 (set (reg:QI 1 dx [1396])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":265 678 {*setcc_qi}
     (nil))
(insn 883 882 884 61 (set (reg:SI 1 dx [orig:1129 _1276 ] [1129])
        (zero_extend:SI (reg:QI 1 dx [1396]))) "CLDRAD.f":265 140 {*zero_extendqisi2}
     (nil))
(insn 884 883 885 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1129 _1276 ] [1129])
            (const_int 0 [0]))) "CLDRAD.f":265 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 885 884 886 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4337)
            (pc))) "CLDRAD.f":265 682 {*jcc}
     (nil)
 -> 4337)
;;  succ:       318
;;              62 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128

;; basic block 62, loop depth 0, maybe hot
;;  prev block 61, next block 63, flags: (RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 886 885 887 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 887 886 970 62 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":266 86 {*movsi_internal}
     (nil))
;;  succ:       63 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128

;; basic block 63, loop depth 0, maybe hot
;;  prev block 62, next block 64, flags: (RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;;              67 [always] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1130 1397
(code_label 970 887 888 63 41 (nil) [1 uses])
(note 888 970 889 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 889 888 890 63 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":266 11 {*cmpsi_1}
     (nil))
(insn 890 889 891 63 (set (reg:QI 1 dx [1397])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":266 678 {*setcc_qi}
     (nil))
(insn 891 890 892 63 (set (reg:SI 1 dx [orig:1130 _1278 ] [1130])
        (zero_extend:SI (reg:QI 1 dx [1397]))) "CLDRAD.f":266 140 {*zero_extendqisi2}
     (nil))
(insn 892 891 893 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1130 _1278 ] [1130])
            (const_int 0 [0]))) "CLDRAD.f":266 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 893 892 894 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4340)
            (pc))) "CLDRAD.f":266 682 {*jcc}
     (nil)
 -> 4340)
;;  succ:       319
;;              64 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128

;; basic block 64, loop depth 0, maybe hot
;;  prev block 63, next block 65, flags: (RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 235 236 237 238 239 240 241 242 243 244 245 246 1398 1399 1400 1401 1402 1403 1404 1405 1406
(note 894 893 895 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 895 894 896 64 (set (reg:SI 1 dx [1398])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 896 895 897 64 (set (reg:DI 1 dx [orig:235 _149 ] [235])
        (sign_extend:DI (reg:SI 1 dx [1398]))) "CLDRAD.f":267 149 {*extendsidi2_rex64}
     (nil))
(insn 897 896 898 64 (parallel [
            (set (reg:DI 2 cx [orig:236 _150 ] [236])
                (mult:DI (reg:DI 1 dx [orig:235 _149 ] [235])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 349 {*muldi3_1}
     (nil))
(insn 898 897 899 64 (set (reg:SI 1 dx [1399])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 899 898 900 64 (set (reg:DI 1 dx [orig:237 _151 ] [237])
        (sign_extend:DI (reg:SI 1 dx [1399]))) "CLDRAD.f":267 149 {*extendsidi2_rex64}
     (nil))
(insn 900 899 901 64 (parallel [
            (set (reg:DI 1 dx [orig:238 _152 ] [238])
                (plus:DI (reg:DI 1 dx [orig:237 _151 ] [237])
                    (reg:DI 2 cx [orig:236 _150 ] [236])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 222 {*adddi_1}
     (nil))
(insn 901 900 902 64 (parallel [
            (set (reg:DI 2 cx [orig:239 _153 ] [239])
                (plus:DI (reg:DI 1 dx [orig:238 _152 ] [238])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 222 {*adddi_1}
     (nil))
(insn 902 901 903 64 (set (reg/f:DI 1 dx [1400])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":267 85 {*movdi_internal}
     (nil))
(insn 903 902 904 64 (parallel [
            (set (reg:DI 2 cx [1401])
                (plus:DI (reg:DI 2 cx [orig:239 _153 ] [239])
                    (const_int 88895 [0x15b3f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 222 {*adddi_1}
     (nil))
(insn 904 903 905 64 (set (reg:SI 2 cx [orig:240 _154 ] [240])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1401])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1400])) [2 acmcld.ncfrst S4 A32])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 905 904 906 64 (set (reg:SI 1 dx [1402])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 906 905 907 64 (set (reg:DI 1 dx [orig:241 _155 ] [241])
        (sign_extend:DI (reg:SI 1 dx [1402]))) "CLDRAD.f":267 149 {*extendsidi2_rex64}
     (nil))
(insn 907 906 908 64 (parallel [
            (set (reg:DI 4 si [orig:242 _156 ] [242])
                (mult:DI (reg:DI 1 dx [orig:241 _155 ] [241])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 349 {*muldi3_1}
     (nil))
(insn 908 907 909 64 (set (reg:SI 1 dx [1403])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 909 908 910 64 (set (reg:DI 1 dx [orig:243 _157 ] [243])
        (sign_extend:DI (reg:SI 1 dx [1403]))) "CLDRAD.f":267 149 {*extendsidi2_rex64}
     (nil))
(insn 910 909 911 64 (parallel [
            (set (reg:DI 1 dx [orig:244 _158 ] [244])
                (plus:DI (reg:DI 1 dx [orig:243 _157 ] [243])
                    (reg:DI 4 si [orig:242 _156 ] [242])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 222 {*adddi_1}
     (nil))
(insn 911 910 912 64 (parallel [
            (set (reg:DI 4 si [orig:245 _159 ] [245])
                (plus:DI (reg:DI 1 dx [orig:244 _158 ] [244])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 222 {*adddi_1}
     (nil))
(insn 912 911 913 64 (set (reg/f:DI 1 dx [1404])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":267 85 {*movdi_internal}
     (nil))
(insn 913 912 914 64 (parallel [
            (set (reg:DI 4 si [1405])
                (plus:DI (reg:DI 4 si [orig:245 _159 ] [245])
                    (const_int 29633 [0x73c1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 222 {*adddi_1}
     (nil))
(insn 914 913 915 64 (set (reg:SI 1 dx [orig:246 _160 ] [246])
        (mem:SI (plus:DI (mult:DI (reg:DI 4 si [1405])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1404])) [2 acmcld.ncfrcv S4 A32])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 915 914 916 64 (parallel [
            (set (reg:SI 1 dx [1406])
                (plus:SI (reg:SI 1 dx [orig:246 _160 ] [246])
                    (reg:SI 2 cx [orig:240 _154 ] [240])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 221 {*addsi_1}
     (nil))
(insn 916 915 917 64 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 isum+0 S4 A32])
        (reg:SI 1 dx [1406])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 917 916 918 64 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [2 isum+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":268 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 918 917 919 64 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 955)
            (pc))) "CLDRAD.f":268 682 {*jcc}
     (nil)
 -> 955)
;;  succ:       65 (FALLTHRU)
;;              66
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128

;; basic block 65, loop depth 0, maybe hot
;;  prev block 64, next block 66, flags: (RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417
(note 919 918 920 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 920 919 921 65 (set (reg:SI 1 dx [1407])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":269 86 {*movsi_internal}
     (nil))
(insn 921 920 922 65 (set (reg:DI 1 dx [orig:247 _161 ] [247])
        (sign_extend:DI (reg:SI 1 dx [1407]))) "CLDRAD.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 922 921 923 65 (parallel [
            (set (reg:DI 2 cx [orig:248 _162 ] [248])
                (mult:DI (reg:DI 1 dx [orig:247 _161 ] [247])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 349 {*muldi3_1}
     (nil))
(insn 923 922 924 65 (set (reg:SI 1 dx [1408])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":269 86 {*movsi_internal}
     (nil))
(insn 924 923 925 65 (set (reg:DI 1 dx [orig:249 _163 ] [249])
        (sign_extend:DI (reg:SI 1 dx [1408]))) "CLDRAD.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 925 924 926 65 (parallel [
            (set (reg:DI 1 dx [orig:250 _164 ] [250])
                (plus:DI (reg:DI 1 dx [orig:249 _163 ] [249])
                    (reg:DI 2 cx [orig:248 _162 ] [248])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 926 925 927 65 (parallel [
            (set (reg:DI 2 cx [orig:251 _165 ] [251])
                (plus:DI (reg:DI 1 dx [orig:250 _164 ] [250])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 927 926 928 65 (set (reg/f:DI 1 dx [1409])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":269 85 {*movdi_internal}
     (nil))
(insn 928 927 929 65 (parallel [
            (set (reg:DI 2 cx [1410])
                (plus:DI (reg:DI 2 cx [orig:251 _165 ] [251])
                    (const_int 59264 [0xe780])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 929 928 930 65 (set (reg:SF 22 xmm1 [orig:252 _166 ] [252])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1410])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1409])) [1 acmcld.acfrst S4 A32])) "CLDRAD.f":269 131 {*movsf_internal}
     (nil))
(insn 930 929 931 65 (set (reg:SI 1 dx [1411])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":269 86 {*movsi_internal}
     (nil))
(insn 931 930 932 65 (set (reg:DI 1 dx [orig:253 _167 ] [253])
        (sign_extend:DI (reg:SI 1 dx [1411]))) "CLDRAD.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 932 931 933 65 (parallel [
            (set (reg:DI 2 cx [orig:254 _168 ] [254])
                (mult:DI (reg:DI 1 dx [orig:253 _167 ] [253])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 349 {*muldi3_1}
     (nil))
(insn 933 932 934 65 (set (reg:SI 1 dx [1412])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":269 86 {*movsi_internal}
     (nil))
(insn 934 933 935 65 (set (reg:DI 1 dx [orig:255 _169 ] [255])
        (sign_extend:DI (reg:SI 1 dx [1412]))) "CLDRAD.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 935 934 936 65 (parallel [
            (set (reg:DI 1 dx [orig:256 _170 ] [256])
                (plus:DI (reg:DI 1 dx [orig:255 _169 ] [255])
                    (reg:DI 2 cx [orig:254 _168 ] [254])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 936 935 937 65 (parallel [
            (set (reg:DI 2 cx [orig:257 _171 ] [257])
                (plus:DI (reg:DI 1 dx [orig:256 _170 ] [256])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 937 936 938 65 (set (reg/f:DI 1 dx [1413])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":269 85 {*movdi_internal}
     (nil))
(insn 938 937 939 65 (parallel [
            (set (reg:DI 2 cx [1414])
                (plus:DI (reg:DI 2 cx [orig:257 _171 ] [257])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 939 938 940 65 (set (reg:SF 21 xmm0 [orig:258 _172 ] [258])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1414])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1413])) [1 acmcld.acfrcv S4 A32])) "CLDRAD.f":269 131 {*movsf_internal}
     (nil))
(insn 940 939 941 65 (set (reg:SF 21 xmm0 [orig:259 _173 ] [259])
        (plus:SF (reg:SF 21 xmm0 [orig:258 _172 ] [258])
            (reg:SF 22 xmm1 [orig:252 _166 ] [252]))) "CLDRAD.f":269 838 {*fop_sf_comm}
     (nil))
(insn 941 940 942 65 (set (reg:SF 22 xmm1 [orig:260 _174 ] [260])
        (reg:SF 21 xmm0 [orig:259 _173 ] [259])) "CLDRAD.f":269 131 {*movsf_internal}
     (nil))
(insn 942 941 943 65 (set (reg:SF 21 xmm0 [orig:261 _175 ] [261])
        (float:SF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [2 isum+0 S4 A32]))) "CLDRAD.f":269 203 {*floatsisf2_mixed}
     (nil))
(insn 943 942 944 65 (set (reg:SI 1 dx [1415])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":269 86 {*movsi_internal}
     (nil))
(insn 944 943 945 65 (set (reg:DI 1 dx [orig:262 _176 ] [262])
        (sign_extend:DI (reg:SI 1 dx [1415]))) "CLDRAD.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 945 944 946 65 (parallel [
            (set (reg:DI 2 cx [orig:263 _177 ] [263])
                (mult:DI (reg:DI 1 dx [orig:262 _176 ] [262])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 349 {*muldi3_1}
     (nil))
(insn 946 945 947 65 (set (reg:SI 1 dx [1416])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":269 86 {*movsi_internal}
     (nil))
(insn 947 946 948 65 (set (reg:DI 1 dx [orig:264 _178 ] [264])
        (sign_extend:DI (reg:SI 1 dx [1416]))) "CLDRAD.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 948 947 949 65 (parallel [
            (set (reg:DI 1 dx [orig:265 _179 ] [265])
                (plus:DI (reg:DI 1 dx [orig:264 _178 ] [264])
                    (reg:DI 2 cx [orig:263 _177 ] [263])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 949 948 950 65 (parallel [
            (set (reg:DI 2 cx [orig:266 _180 ] [266])
                (plus:DI (reg:DI 1 dx [orig:265 _179 ] [265])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 950 949 4468 65 (set (reg:SF 22 xmm1 [orig:260 _174 ] [260])
        (div:SF (reg:SF 22 xmm1 [orig:260 _174 ] [260])
            (reg:SF 21 xmm0 [orig:261 _175 ] [261]))) "CLDRAD.f":269 841 {*fop_sf_1}
     (nil))
(insn 4468 950 951 65 (set (reg:SF 21 xmm0 [orig:267 _181 ] [267])
        (reg:SF 22 xmm1 [orig:260 _174 ] [260])) "CLDRAD.f":269 131 {*movsf_internal}
     (nil))
(insn 951 4468 952 65 (set (reg/f:DI 1 dx [1417])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":269 85 {*movdi_internal}
     (nil))
(insn 952 951 4179 65 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:266 _180 ] [266])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1417])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:267 _181 ] [267])) "CLDRAD.f":269 131 {*movsf_internal}
     (nil))
(jump_insn 4179 952 4180 65 (set (pc)
        (label_ref 967)) 683 {jump}
     (nil)
 -> 967)
;;  succ:       67 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128

(barrier 4180 4179 955)
;; basic block 66, loop depth 0, maybe hot
;;  prev block 65, next block 67, flags: (RTL, MODIFIED)
;;  pred:       64
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 268 269 270 271 272 1418 1419 1420 1421
(code_label 955 4180 956 66 39 (nil) [1 uses])
(note 956 955 957 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 957 956 958 66 (set (reg:SI 1 dx [1418])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":271 86 {*movsi_internal}
     (nil))
(insn 958 957 959 66 (set (reg:DI 1 dx [orig:268 _182 ] [268])
        (sign_extend:DI (reg:SI 1 dx [1418]))) "CLDRAD.f":271 149 {*extendsidi2_rex64}
     (nil))
(insn 959 958 960 66 (parallel [
            (set (reg:DI 2 cx [orig:269 _183 ] [269])
                (mult:DI (reg:DI 1 dx [orig:268 _182 ] [268])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":271 349 {*muldi3_1}
     (nil))
(insn 960 959 961 66 (set (reg:SI 1 dx [1419])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":271 86 {*movsi_internal}
     (nil))
(insn 961 960 962 66 (set (reg:DI 1 dx [orig:270 _184 ] [270])
        (sign_extend:DI (reg:SI 1 dx [1419]))) "CLDRAD.f":271 149 {*extendsidi2_rex64}
     (nil))
(insn 962 961 963 66 (parallel [
            (set (reg:DI 1 dx [orig:271 _185 ] [271])
                (plus:DI (reg:DI 1 dx [orig:270 _184 ] [270])
                    (reg:DI 2 cx [orig:269 _183 ] [269])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":271 222 {*adddi_1}
     (nil))
(insn 963 962 964 66 (parallel [
            (set (reg:DI 2 cx [orig:272 _186 ] [272])
                (plus:DI (reg:DI 1 dx [orig:271 _185 ] [271])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":271 222 {*adddi_1}
     (nil))
(insn 964 963 965 66 (set (reg/f:DI 1 dx [1420])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":271 85 {*movdi_internal}
     (nil))
(insn 965 964 966 66 (set (reg:SF 21 xmm0 [1421])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":271 131 {*movsf_internal}
     (nil))
(insn 966 965 967 66 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:272 _186 ] [272])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1420])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [1421])) "CLDRAD.f":271 131 {*movsf_internal}
     (nil))
;;  succ:       67 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128

;; basic block 67, loop depth 0, maybe hot
;;  prev block 66, next block 319, flags: (RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;;              65 [always] 
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 967 966 968 67 40 (nil) [1 uses])
(note 968 967 969 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 969 968 4181 67 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":266 221 {*addsi_1}
     (nil))
(jump_insn 4181 969 4182 67 (set (pc)
        (label_ref 970)) "CLDRAD.f":266 683 {jump}
     (nil)
 -> 970)
;;  succ:       63 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128

(barrier 4182 4181 4340)
;; basic block 319, loop depth 0, maybe hot
;;  prev block 67, next block 68, flags: (RTL, MODIFIED)
;;  pred:       63
;; bb 319 artificial_defs: { }
;; bb 319 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4340 4182 4339 319 241 (nil) [1 uses])
(note 4339 4340 4341 319 [bb 319] NOTE_INSN_BASIC_BLOCK)
(insn 4341 4339 973 319 (const_int 0 [0]) "CLDRAD.f":268 718 {nop}
     (nil))
;;  succ:       68 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128

;; basic block 68, loop depth 0, maybe hot
;;  prev block 319, next block 318, flags: (RTL, MODIFIED)
;;  pred:       319 [always]  (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 973 4341 974 68 38 (nil) [0 uses])
(note 974 973 975 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 975 974 4183 68 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":265 221 {*addsi_1}
     (nil))
(jump_insn 4183 975 4184 68 (set (pc)
        (label_ref 976)) "CLDRAD.f":265 683 {jump}
     (nil)
 -> 976)
;;  succ:       61 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1128

(barrier 4184 4183 4337)
;; basic block 318, loop depth 0, maybe hot
;;  prev block 68, next block 69, flags: (RTL, MODIFIED)
;;  pred:       61
;; bb 318 artificial_defs: { }
;; bb 318 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4337 4184 4336 318 240 (nil) [1 uses])
(note 4336 4337 4338 318 [bb 318] NOTE_INSN_BASIC_BLOCK)
(insn 4338 4336 979 318 (const_int 0 [0]) "CLDRAD.f":266 718 {nop}
     (nil))
;;  succ:       69 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, maybe hot
;;  prev block 318, next block 70, flags: (RTL, MODIFIED)
;;  pred:       318 [always]  (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 273 1422 1423 1424 1425 1426 1427 1428 1429 1431 1432 1433 1434
(code_label 979 4338 980 69 37 (nil) [0 uses])
(note 980 979 981 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 981 980 982 69 (set (reg:DI 1 dx [1422])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 982 981 983 69 (set (reg:DI 0 ax [1423])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 983 982 984 69 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":276 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 984 983 985 69 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":276 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 985 984 986 69 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1422])) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 986 985 987 69 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1423])) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 987 986 988 69 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 988 987 989 69 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 989 988 990 69 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 990 989 991 69 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f2038fb46c0 *.LC13>)) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 991 990 992 69 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":276 88 {*movqi_internal}
     (nil))
(call_insn 992 991 993 69 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":276 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 993 992 994 69 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":276 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 994 993 995 69 (set (reg/f:DI 1 dx [1424])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":277 85 {*movdi_internal}
     (nil))
(insn 995 994 996 69 (set (reg:DI 0 ax [1425])
        (const_int 0 [0])) "CLDRAD.f":277 85 {*movdi_internal}
     (nil))
(insn 996 995 4469 69 (set (reg:DI 2 cx [1426])
        (const_int 12 [0xc])) "CLDRAD.f":277 85 {*movdi_internal}
     (nil))
(insn 4469 996 997 69 (set (reg/f:DI 5 di [1424])
        (reg/f:DI 1 dx [1424])) "CLDRAD.f":277 85 {*movdi_internal}
     (nil))
(insn 997 4469 4470 69 (parallel [
            (set (reg:DI 2 cx [1426])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1424])
                (plus:DI (ashift:DI (reg:DI 2 cx [1426])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1424])))
            (set (mem/c:BLK (reg/f:DI 5 di [1424]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1425]))
            (use (reg:DI 2 cx [1426]))
        ]) "CLDRAD.f":277 984 {*rep_stosdi_rex64}
     (nil))
(insn 4470 997 998 69 (set (reg/f:DI 1 dx [1424])
        (reg/f:DI 5 di [1424])) "CLDRAD.f":277 85 {*movdi_internal}
     (nil))
(insn 998 4470 999 69 (set (mem/c:SI (reg/f:DI 1 dx [1424]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1425])) "CLDRAD.f":277 86 {*movsi_internal}
     (nil))
(insn 999 998 1000 69 (parallel [
            (set (reg/f:DI 1 dx [1424])
                (plus:DI (reg/f:DI 1 dx [1424])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":277 222 {*adddi_1}
     (nil))
(insn 1000 999 1001 69 (set (reg:SI 0 ax [1427])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":279 86 {*movsi_internal}
     (nil))
(insn 1001 1000 1002 69 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1427])) "CLDRAD.f":279 86 {*movsi_internal}
     (nil))
(insn 1002 1001 1003 69 (set (reg/f:DI 0 ax [1428])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 1003 1002 1004 69 (set (reg:SF 21 xmm0 [orig:273 _187 ] [273])
        (mem/c:SF (reg/f:DI 0 ax [1428]) [1 acmcld.tclod+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1004 1003 1005 69 (set (reg:SI 0 ax [1429])
        (fix:SI (reg:SF 21 xmm0 [orig:273 _187 ] [273]))) "CLDRAD.f":280 174 {fix_truncsfsi_sse}
     (nil))
(insn 1005 1004 1006 69 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])
        (reg:SI 0 ax [1429])) "CLDRAD.f":280 86 {*movsi_internal}
     (nil))
(insn 1006 1005 1007 69 (set (reg:SI 0 ax [1431])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":281 86 {*movsi_internal}
     (nil))
(insn 1007 1006 1008 69 (parallel [
            (set (reg:SI 0 ax [1433])
                (div:SI (reg:SI 0 ax [1431])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (set (reg:SI 1 dx [1432])
                (mod:SI (reg:SI 0 ax [1431])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":281 382 {*divmodsi4}
     (nil))
(insn 1008 1007 1009 69 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1432])) "CLDRAD.f":281 86 {*movsi_internal}
     (nil))
(insn 1009 1008 1010 69 (set (reg:SI 0 ax [1434])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":282 86 {*movsi_internal}
     (nil))
(insn 1010 1009 1011 69 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [1434])) "CLDRAD.f":282 86 {*movsi_internal}
     (nil))
(insn 1011 1010 1012 69 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":283 86 {*movsi_internal}
     (nil))
(insn 1012 1011 1013 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":284 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1013 1012 1014 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1020)
            (pc))) "CLDRAD.f":284 682 {*jcc}
     (nil)
 -> 1020)
;;  succ:       70 (FALLTHRU)
;;              71
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 70, loop depth 0, maybe hot
;;  prev block 69, next block 71, flags: (RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 274 1435
(note 1014 1013 1015 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 1015 1014 1016 70 (set (reg:SI 0 ax [1435])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":285 86 {*movsi_internal}
     (nil))
(insn 1016 1015 1017 70 (parallel [
            (set (reg:SI 0 ax [orig:274 _188 ] [274])
                (minus:SI (reg:SI 0 ax [1435])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":285 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -92 [0xffffffffffffffa4])) [2 itclod+0 S4 A32]))
        (nil)))
(insn 1017 1016 4185 70 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:274 _188 ] [274])) "CLDRAD.f":285 86 {*movsi_internal}
     (nil))
(jump_insn 4185 1017 4186 70 (set (pc)
        (label_ref 1025)) 683 {jump}
     (nil)
 -> 1025)
;;  succ:       72 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4186 4185 1020)
;; basic block 71, loop depth 0, maybe hot
;;  prev block 70, next block 72, flags: (RTL, MODIFIED)
;;  pred:       69
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 275 1436
(code_label 1020 4186 1021 71 43 (nil) [1 uses])
(note 1021 1020 1022 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1022 1021 1023 71 (set (reg:SI 0 ax [1436])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":287 86 {*movsi_internal}
     (nil))
(insn 1023 1022 1024 71 (parallel [
            (set (reg:SI 0 ax [orig:275 _189 ] [275])
                (minus:SI (reg:SI 0 ax [1436])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":287 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 1024 1023 1025 71 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:275 _189 ] [275])) "CLDRAD.f":287 86 {*movsi_internal}
     (nil))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, maybe hot
;;  prev block 71, next block 73, flags: (RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;;              70 [always] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 276
(code_label 1025 1024 1026 72 44 (nil) [1 uses])
(note 1026 1025 1027 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1027 1026 1028 72 (set (reg:SI 0 ax [orig:276 _190 ] [276])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":289 86 {*movsi_internal}
     (nil))
(insn 1028 1027 1029 72 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:276 _190 ] [276])
            (const_int 0 [0]))) "CLDRAD.f":289 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1029 1028 1030 72 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1032)
            (pc))) "CLDRAD.f":289 682 {*jcc}
     (nil)
 -> 1032)
;;  succ:       73 (FALLTHRU)
;;              74
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 73, loop depth 0, maybe hot
;;  prev block 72, next block 74, flags: (RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1030 1029 1031 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1031 1030 1032 73 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":289 86 {*movsi_internal}
     (nil))
;;  succ:       74 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, maybe hot
;;  prev block 73, next block 75, flags: (RTL, MODIFIED)
;;  pred:       72
;;              73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 277 278 279 280 281 1437 1438 1439 1440 1441 1442 1443 1444 1445 1446 1447
(code_label 1032 1031 1033 74 45 (nil) [1 uses])
(note 1033 1032 1034 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 1034 1033 1035 74 (set (reg:DI 2 cx [1437])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":290 85 {*movdi_internal}
     (nil))
(insn 1035 1034 1036 74 (set (reg:DI 1 dx [1438])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":290 85 {*movdi_internal}
     (nil))
(insn 1036 1035 1039 74 (set (reg:DI 0 ax [1439])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":290 85 {*movdi_internal}
     (nil))
(insn 1039 1036 1040 74 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":290 85 {*movdi_internal}
     (nil))
(insn 1040 1039 1041 74 (set (reg:DI 5 di)
        (reg:DI 0 ax [1439])) "CLDRAD.f":290 85 {*movdi_internal}
     (nil))
(insn 1041 1040 1042 74 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":290 88 {*movqi_internal}
     (nil))
(call_insn 1042 1041 1043 74 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":290 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1043 1042 1044 74 (set (reg:SI 0 ax [orig:277 _191 ] [277])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 588 [0x24c]))) [2 rqstfld.iget+572 S4 A32])) "CLDRAD.f":292 86 {*movsi_internal}
     (nil))
(insn 1044 1043 1045 74 (set (reg:DI 0 ax [orig:278 _192 ] [278])
        (sign_extend:DI (reg:SI 0 ax [orig:277 _191 ] [277]))) "CLDRAD.f":292 149 {*extendsidi2_rex64}
     (nil))
(insn 1045 1044 1046 74 (parallel [
            (set (reg:DI 1 dx [orig:279 _193 ] [279])
                (plus:DI (reg:DI 0 ax [orig:278 _192 ] [278])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":292 222 {*adddi_1}
     (nil))
(insn 1046 1045 1047 74 (set (reg:DI 0 ax [1440])
        (reg:DI 1 dx [orig:279 _193 ] [279])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1047 1046 1049 74 (parallel [
            (set (reg:DI 0 ax [1441])
                (ashift:DI (reg:DI 0 ax [1440])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":292 551 {*ashldi3_1}
     (nil))
(insn 1049 1047 1050 74 (parallel [
            (set (reg:DI 0 ax [1440])
                (minus:DI (reg:DI 0 ax [1440])
                    (reg:DI 1 dx [orig:279 _193 ] [279])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":292 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:279 _193 ] [279])
            (const_int 15 [0xf]))
        (nil)))
(insn 1050 1049 1053 74 (parallel [
            (set (reg:DI 0 ax [1442])
                (ashift:DI (reg:DI 0 ax [1440])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":292 551 {*ashldi3_1}
     (nil))
(insn 1053 1050 1054 74 (parallel [
            (set (reg:DI 0 ax [1443])
                (plus:DI (reg:DI 0 ax [orig:280 _194 ] [280])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":292 222 {*adddi_1}
     (nil))
(insn 1054 1053 1055 74 (parallel [
            (set (reg:DI 0 ax [1444])
                (ashift:DI (reg:DI 0 ax [1443])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":292 551 {*ashldi3_1}
     (nil))
(insn 1055 1054 1056 74 (parallel [
            (set (reg/f:DI 1 dx [orig:281 _195 ] [281])
                (plus:DI (reg:DI 0 ax [1444])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":292 222 {*adddi_1}
     (nil))
(insn 1056 1055 1057 74 (set (reg:DI 4 si [1445])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1057 1056 1058 74 (set (reg:DI 2 cx [1446])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1058 1057 1059 74 (set (reg:DI 0 ax [1447])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1059 1058 1060 74 (set (reg:DI 38 r9)
        (reg:DI 4 si [1445])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1060 1059 1061 74 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1446])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1061 1060 1063 74 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1447])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1063 1061 1064 74 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 588 [0x24c])))) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1064 1063 1065 74 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1065 1064 1066 74 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":292 88 {*movqi_internal}
     (nil))
(call_insn 1066 1065 1067 74 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":292 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 75, loop depth 0, maybe hot
;;  prev block 74, next block 76, flags: (RTL, MODIFIED)
;;  pred:       59
;;              74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 282
(code_label 1067 1066 1068 75 36 (nil) [1 uses])
(note 1068 1067 1069 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1069 1068 1070 75 (set (reg:SI 0 ax [orig:282 _196 ] [282])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 568 [0x238]))) [2 rqstfld.iget+552 S4 A64])) "CLDRAD.f":296 86 {*movsi_internal}
     (nil))
(insn 1070 1069 1071 75 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:282 _196 ] [282])
            (const_int 0 [0]))) "CLDRAD.f":296 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1071 1070 1072 75 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1249)
            (pc))) "CLDRAD.f":296 682 {*jcc}
     (nil)
 -> 1249)
;;  succ:       76 (FALLTHRU)
;;              91
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, maybe hot
;;  prev block 75, next block 77, flags: (RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1131 1132
(note 1072 1071 1073 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 1073 1072 1074 76 (set (reg:SI 1 dx [orig:1131 _1296 ] [1131])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":297 86 {*movsi_internal}
     (nil))
(insn 1074 1073 1075 76 (set (reg:SI 0 ax [orig:1132 _1297 ] [1132])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":297 86 {*movsi_internal}
     (nil))
(insn 1075 1074 1158 76 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1131 _1296 ] [1131])) "CLDRAD.f":297 86 {*movsi_internal}
     (nil))
;;  succ:       77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132

;; basic block 77, loop depth 0, maybe hot
;;  prev block 76, next block 78, flags: (RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;;              84 [always] 
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132
;; lr  def 	 17 [flags] 1133 1448
(code_label 1158 1075 1076 77 52 (nil) [1 uses])
(note 1076 1158 1077 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1077 1076 1078 77 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1132 _1297 ] [1132]))) "CLDRAD.f":297 11 {*cmpsi_1}
     (nil))
(insn 1078 1077 1079 77 (set (reg:QI 1 dx [1448])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":297 678 {*setcc_qi}
     (nil))
(insn 1079 1078 1080 77 (set (reg:SI 1 dx [orig:1133 _1299 ] [1133])
        (zero_extend:SI (reg:QI 1 dx [1448]))) "CLDRAD.f":297 140 {*zero_extendqisi2}
     (nil))
(insn 1080 1079 1081 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1133 _1299 ] [1133])
            (const_int 0 [0]))) "CLDRAD.f":297 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1081 1080 1082 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4343)
            (pc))) "CLDRAD.f":297 682 {*jcc}
     (nil)
 -> 4343)
;;  succ:       320
;;              78 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132

;; basic block 78, loop depth 0, maybe hot
;;  prev block 77, next block 79, flags: (RTL, MODIFIED)
;;  pred:       77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1082 1081 1083 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1083 1082 1152 78 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":298 86 {*movsi_internal}
     (nil))
;;  succ:       79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132

;; basic block 79, loop depth 0, maybe hot
;;  prev block 78, next block 80, flags: (RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;;              83 [always] 
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1134 1449
(code_label 1152 1083 1084 79 51 (nil) [1 uses])
(note 1084 1152 1085 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 1085 1084 1086 79 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":298 11 {*cmpsi_1}
     (nil))
(insn 1086 1085 1087 79 (set (reg:QI 1 dx [1449])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":298 678 {*setcc_qi}
     (nil))
(insn 1087 1086 1088 79 (set (reg:SI 1 dx [orig:1134 _1301 ] [1134])
        (zero_extend:SI (reg:QI 1 dx [1449]))) "CLDRAD.f":298 140 {*zero_extendqisi2}
     (nil))
(insn 1088 1087 1089 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1134 _1301 ] [1134])
            (const_int 0 [0]))) "CLDRAD.f":298 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1089 1088 1090 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4346)
            (pc))) "CLDRAD.f":298 682 {*jcc}
     (nil)
 -> 4346)
;;  succ:       321
;;              80 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132

;; basic block 80, loop depth 0, maybe hot
;;  prev block 79, next block 81, flags: (RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 283 284 285 286 287 288 1450 1451 1452 1453
(note 1090 1089 1091 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1091 1090 1092 80 (set (reg:SI 1 dx [1450])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":299 86 {*movsi_internal}
     (nil))
(insn 1092 1091 1093 80 (set (reg:DI 1 dx [orig:283 _197 ] [283])
        (sign_extend:DI (reg:SI 1 dx [1450]))) "CLDRAD.f":299 149 {*extendsidi2_rex64}
     (nil))
(insn 1093 1092 1094 80 (parallel [
            (set (reg:DI 2 cx [orig:284 _198 ] [284])
                (mult:DI (reg:DI 1 dx [orig:283 _197 ] [283])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":299 349 {*muldi3_1}
     (nil))
(insn 1094 1093 1095 80 (set (reg:SI 1 dx [1451])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":299 86 {*movsi_internal}
     (nil))
(insn 1095 1094 1096 80 (set (reg:DI 1 dx [orig:285 _199 ] [285])
        (sign_extend:DI (reg:SI 1 dx [1451]))) "CLDRAD.f":299 149 {*extendsidi2_rex64}
     (nil))
(insn 1096 1095 1097 80 (parallel [
            (set (reg:DI 1 dx [orig:286 _200 ] [286])
                (plus:DI (reg:DI 1 dx [orig:285 _199 ] [285])
                    (reg:DI 2 cx [orig:284 _198 ] [284])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":299 222 {*adddi_1}
     (nil))
(insn 1097 1096 1098 80 (parallel [
            (set (reg:DI 2 cx [orig:287 _201 ] [287])
                (plus:DI (reg:DI 1 dx [orig:286 _200 ] [286])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":299 222 {*adddi_1}
     (nil))
(insn 1098 1097 1099 80 (set (reg/f:DI 1 dx [1452])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":299 85 {*movdi_internal}
     (nil))
(insn 1099 1098 1100 80 (parallel [
            (set (reg:DI 2 cx [1453])
                (plus:DI (reg:DI 2 cx [orig:287 _201 ] [287])
                    (const_int 88895 [0x15b3f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":299 222 {*adddi_1}
     (nil))
(insn 1100 1099 1101 80 (set (reg:SI 1 dx [orig:288 _202 ] [288])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1453])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1452])) [2 acmcld.ncfrst S4 A32])) "CLDRAD.f":299 86 {*movsi_internal}
     (nil))
(insn 1101 1100 1102 80 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 1 dx [orig:288 _202 ] [288])
            (const_int 0 [0]))) "CLDRAD.f":299 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1102 1101 1103 80 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1137)
            (pc))) "CLDRAD.f":299 682 {*jcc}
     (nil)
 -> 1137)
;;  succ:       81 (FALLTHRU)
;;              82
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132

;; basic block 81, loop depth 0, maybe hot
;;  prev block 80, next block 82, flags: (RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464
(note 1103 1102 1104 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1104 1103 1105 81 (set (reg:SI 1 dx [1454])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1105 1104 1106 81 (set (reg:DI 1 dx [orig:289 _203 ] [289])
        (sign_extend:DI (reg:SI 1 dx [1454]))) "CLDRAD.f":300 149 {*extendsidi2_rex64}
     (nil))
(insn 1106 1105 1107 81 (parallel [
            (set (reg:DI 2 cx [orig:290 _204 ] [290])
                (mult:DI (reg:DI 1 dx [orig:289 _203 ] [289])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 349 {*muldi3_1}
     (nil))
(insn 1107 1106 1108 81 (set (reg:SI 1 dx [1455])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1108 1107 1109 81 (set (reg:DI 1 dx [orig:291 _205 ] [291])
        (sign_extend:DI (reg:SI 1 dx [1455]))) "CLDRAD.f":300 149 {*extendsidi2_rex64}
     (nil))
(insn 1109 1108 1110 81 (parallel [
            (set (reg:DI 1 dx [orig:292 _206 ] [292])
                (plus:DI (reg:DI 1 dx [orig:291 _205 ] [291])
                    (reg:DI 2 cx [orig:290 _204 ] [290])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 1110 1109 1111 81 (parallel [
            (set (reg:DI 2 cx [orig:293 _207 ] [293])
                (plus:DI (reg:DI 1 dx [orig:292 _206 ] [292])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 1111 1110 1112 81 (set (reg/f:DI 1 dx [1456])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":300 85 {*movdi_internal}
     (nil))
(insn 1112 1111 1113 81 (parallel [
            (set (reg:DI 2 cx [1457])
                (plus:DI (reg:DI 2 cx [orig:293 _207 ] [293])
                    (const_int 59264 [0xe780])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 1113 1112 1114 81 (set (reg:SF 21 xmm0 [orig:294 _208 ] [294])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1457])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1456])) [1 acmcld.acfrst S4 A32])) "CLDRAD.f":300 131 {*movsf_internal}
     (nil))
(insn 1114 1113 1115 81 (set (reg:SI 1 dx [1458])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1115 1114 1116 81 (set (reg:DI 1 dx [orig:295 _209 ] [295])
        (sign_extend:DI (reg:SI 1 dx [1458]))) "CLDRAD.f":300 149 {*extendsidi2_rex64}
     (nil))
(insn 1116 1115 1117 81 (parallel [
            (set (reg:DI 2 cx [orig:296 _210 ] [296])
                (mult:DI (reg:DI 1 dx [orig:295 _209 ] [295])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 349 {*muldi3_1}
     (nil))
(insn 1117 1116 1118 81 (set (reg:SI 1 dx [1459])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1118 1117 1119 81 (set (reg:DI 1 dx [orig:297 _211 ] [297])
        (sign_extend:DI (reg:SI 1 dx [1459]))) "CLDRAD.f":300 149 {*extendsidi2_rex64}
     (nil))
(insn 1119 1118 1120 81 (parallel [
            (set (reg:DI 1 dx [orig:298 _212 ] [298])
                (plus:DI (reg:DI 1 dx [orig:297 _211 ] [297])
                    (reg:DI 2 cx [orig:296 _210 ] [296])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 1120 1119 1121 81 (parallel [
            (set (reg:DI 2 cx [orig:299 _213 ] [299])
                (plus:DI (reg:DI 1 dx [orig:298 _212 ] [298])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 1121 1120 1122 81 (set (reg/f:DI 1 dx [1460])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":300 85 {*movdi_internal}
     (nil))
(insn 1122 1121 1123 81 (parallel [
            (set (reg:DI 2 cx [1461])
                (plus:DI (reg:DI 2 cx [orig:299 _213 ] [299])
                    (const_int 88895 [0x15b3f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 1123 1122 1124 81 (set (reg:SI 1 dx [orig:300 _214 ] [300])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1461])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1460])) [2 acmcld.ncfrst S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1124 1123 1125 81 (set (reg:SF 22 xmm1 [orig:301 _215 ] [301])
        (float:SF (reg:SI 1 dx [orig:300 _214 ] [300]))) "CLDRAD.f":300 203 {*floatsisf2_mixed}
     (nil))
(insn 1125 1124 1126 81 (set (reg:SI 1 dx [1462])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1126 1125 1127 81 (set (reg:DI 1 dx [orig:302 _216 ] [302])
        (sign_extend:DI (reg:SI 1 dx [1462]))) "CLDRAD.f":300 149 {*extendsidi2_rex64}
     (nil))
(insn 1127 1126 1128 81 (parallel [
            (set (reg:DI 2 cx [orig:303 _217 ] [303])
                (mult:DI (reg:DI 1 dx [orig:302 _216 ] [302])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 349 {*muldi3_1}
     (nil))
(insn 1128 1127 1129 81 (set (reg:SI 1 dx [1463])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1129 1128 1130 81 (set (reg:DI 1 dx [orig:304 _218 ] [304])
        (sign_extend:DI (reg:SI 1 dx [1463]))) "CLDRAD.f":300 149 {*extendsidi2_rex64}
     (nil))
(insn 1130 1129 1131 81 (parallel [
            (set (reg:DI 1 dx [orig:305 _219 ] [305])
                (plus:DI (reg:DI 1 dx [orig:304 _218 ] [304])
                    (reg:DI 2 cx [orig:303 _217 ] [303])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 1131 1130 1132 81 (parallel [
            (set (reg:DI 2 cx [orig:306 _220 ] [306])
                (plus:DI (reg:DI 1 dx [orig:305 _219 ] [305])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 1132 1131 1133 81 (set (reg:SF 21 xmm0 [orig:307 _221 ] [307])
        (div:SF (reg:SF 21 xmm0 [orig:294 _208 ] [294])
            (reg:SF 22 xmm1 [orig:301 _215 ] [301]))) "CLDRAD.f":300 841 {*fop_sf_1}
     (nil))
(insn 1133 1132 1134 81 (set (reg/f:DI 1 dx [1464])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":300 85 {*movdi_internal}
     (nil))
(insn 1134 1133 4187 81 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:306 _220 ] [306])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1464])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:307 _221 ] [307])) "CLDRAD.f":300 131 {*movsf_internal}
     (nil))
(jump_insn 4187 1134 4188 81 (set (pc)
        (label_ref 1149)) 683 {jump}
     (nil)
 -> 1149)
;;  succ:       83 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132

(barrier 4188 4187 1137)
;; basic block 82, loop depth 0, maybe hot
;;  prev block 81, next block 83, flags: (RTL, MODIFIED)
;;  pred:       80
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 308 309 310 311 312 1465 1466 1467 1468
(code_label 1137 4188 1138 82 49 (nil) [1 uses])
(note 1138 1137 1139 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1139 1138 1140 82 (set (reg:SI 1 dx [1465])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":302 86 {*movsi_internal}
     (nil))
(insn 1140 1139 1141 82 (set (reg:DI 1 dx [orig:308 _222 ] [308])
        (sign_extend:DI (reg:SI 1 dx [1465]))) "CLDRAD.f":302 149 {*extendsidi2_rex64}
     (nil))
(insn 1141 1140 1142 82 (parallel [
            (set (reg:DI 2 cx [orig:309 _223 ] [309])
                (mult:DI (reg:DI 1 dx [orig:308 _222 ] [308])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":302 349 {*muldi3_1}
     (nil))
(insn 1142 1141 1143 82 (set (reg:SI 1 dx [1466])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":302 86 {*movsi_internal}
     (nil))
(insn 1143 1142 1144 82 (set (reg:DI 1 dx [orig:310 _224 ] [310])
        (sign_extend:DI (reg:SI 1 dx [1466]))) "CLDRAD.f":302 149 {*extendsidi2_rex64}
     (nil))
(insn 1144 1143 1145 82 (parallel [
            (set (reg:DI 1 dx [orig:311 _225 ] [311])
                (plus:DI (reg:DI 1 dx [orig:310 _224 ] [310])
                    (reg:DI 2 cx [orig:309 _223 ] [309])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":302 222 {*adddi_1}
     (nil))
(insn 1145 1144 1146 82 (parallel [
            (set (reg:DI 2 cx [orig:312 _226 ] [312])
                (plus:DI (reg:DI 1 dx [orig:311 _225 ] [311])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":302 222 {*adddi_1}
     (nil))
(insn 1146 1145 1147 82 (set (reg/f:DI 1 dx [1467])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":302 85 {*movdi_internal}
     (nil))
(insn 1147 1146 1148 82 (set (reg:SF 21 xmm0 [1468])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":302 131 {*movsf_internal}
     (nil))
(insn 1148 1147 1149 82 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:312 _226 ] [312])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1467])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [1468])) "CLDRAD.f":302 131 {*movsf_internal}
     (nil))
;;  succ:       83 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132

;; basic block 83, loop depth 0, maybe hot
;;  prev block 82, next block 321, flags: (RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;;              81 [always] 
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1149 1148 1150 83 50 (nil) [1 uses])
(note 1150 1149 1151 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 1151 1150 4189 83 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":298 221 {*addsi_1}
     (nil))
(jump_insn 4189 1151 4190 83 (set (pc)
        (label_ref 1152)) "CLDRAD.f":298 683 {jump}
     (nil)
 -> 1152)
;;  succ:       79 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132

(barrier 4190 4189 4346)
;; basic block 321, loop depth 0, maybe hot
;;  prev block 83, next block 84, flags: (RTL, MODIFIED)
;;  pred:       79
;; bb 321 artificial_defs: { }
;; bb 321 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4346 4190 4345 321 243 (nil) [1 uses])
(note 4345 4346 4347 321 [bb 321] NOTE_INSN_BASIC_BLOCK)
(insn 4347 4345 1155 321 (const_int 0 [0]) "CLDRAD.f":299 718 {nop}
     (nil))
;;  succ:       84 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132

;; basic block 84, loop depth 0, maybe hot
;;  prev block 321, next block 320, flags: (RTL, MODIFIED)
;;  pred:       321 [always]  (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1155 4347 1156 84 48 (nil) [0 uses])
(note 1156 1155 1157 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1157 1156 4191 84 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":297 221 {*addsi_1}
     (nil))
(jump_insn 4191 1157 4192 84 (set (pc)
        (label_ref 1158)) "CLDRAD.f":297 683 {jump}
     (nil)
 -> 1158)
;;  succ:       77 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1132

(barrier 4192 4191 4343)
;; basic block 320, loop depth 0, maybe hot
;;  prev block 84, next block 85, flags: (RTL, MODIFIED)
;;  pred:       77
;; bb 320 artificial_defs: { }
;; bb 320 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4343 4192 4342 320 242 (nil) [1 uses])
(note 4342 4343 4344 320 [bb 320] NOTE_INSN_BASIC_BLOCK)
(insn 4344 4342 1161 320 (const_int 0 [0]) "CLDRAD.f":298 718 {nop}
     (nil))
;;  succ:       85 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 85, loop depth 0, maybe hot
;;  prev block 320, next block 86, flags: (RTL, MODIFIED)
;;  pred:       320 [always]  (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 313 1469 1470 1471 1472 1473 1474 1475 1476 1478 1479 1480 1481
(code_label 1161 4344 1162 85 47 (nil) [0 uses])
(note 1162 1161 1163 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 1163 1162 1164 85 (set (reg:DI 1 dx [1469])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1164 1163 1165 85 (set (reg:DI 0 ax [1470])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1165 1164 1166 85 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":307 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1166 1165 1167 85 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":307 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1167 1166 1168 85 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1469])) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1168 1167 1169 85 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1470])) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1169 1168 1170 85 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1170 1169 1171 85 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1171 1170 1172 85 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1172 1171 1173 85 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f2038fb4750 *.LC14>)) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1173 1172 1174 85 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":307 88 {*movqi_internal}
     (nil))
(call_insn 1174 1173 1175 85 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":307 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1175 1174 1176 85 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":307 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1176 1175 1177 85 (set (reg/f:DI 1 dx [1471])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":308 85 {*movdi_internal}
     (nil))
(insn 1177 1176 1178 85 (set (reg:DI 0 ax [1472])
        (const_int 0 [0])) "CLDRAD.f":308 85 {*movdi_internal}
     (nil))
(insn 1178 1177 4471 85 (set (reg:DI 2 cx [1473])
        (const_int 12 [0xc])) "CLDRAD.f":308 85 {*movdi_internal}
     (nil))
(insn 4471 1178 1179 85 (set (reg/f:DI 5 di [1471])
        (reg/f:DI 1 dx [1471])) "CLDRAD.f":308 85 {*movdi_internal}
     (nil))
(insn 1179 4471 4472 85 (parallel [
            (set (reg:DI 2 cx [1473])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1471])
                (plus:DI (ashift:DI (reg:DI 2 cx [1473])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1471])))
            (set (mem/c:BLK (reg/f:DI 5 di [1471]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1472]))
            (use (reg:DI 2 cx [1473]))
        ]) "CLDRAD.f":308 984 {*rep_stosdi_rex64}
     (nil))
(insn 4472 1179 1180 85 (set (reg/f:DI 1 dx [1471])
        (reg/f:DI 5 di [1471])) "CLDRAD.f":308 85 {*movdi_internal}
     (nil))
(insn 1180 4472 1181 85 (set (mem/c:SI (reg/f:DI 1 dx [1471]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1472])) "CLDRAD.f":308 86 {*movsi_internal}
     (nil))
(insn 1181 1180 1182 85 (parallel [
            (set (reg/f:DI 1 dx [1471])
                (plus:DI (reg/f:DI 1 dx [1471])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":308 222 {*adddi_1}
     (nil))
(insn 1182 1181 1183 85 (set (reg:SI 0 ax [1474])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":310 86 {*movsi_internal}
     (nil))
(insn 1183 1182 1184 85 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1474])) "CLDRAD.f":310 86 {*movsi_internal}
     (nil))
(insn 1184 1183 1185 85 (set (reg/f:DI 0 ax [1475])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 1185 1184 1186 85 (set (reg:SF 21 xmm0 [orig:313 _227 ] [313])
        (mem/c:SF (reg/f:DI 0 ax [1475]) [1 acmcld.tclod+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1186 1185 1187 85 (set (reg:SI 0 ax [1476])
        (fix:SI (reg:SF 21 xmm0 [orig:313 _227 ] [313]))) "CLDRAD.f":311 174 {fix_truncsfsi_sse}
     (nil))
(insn 1187 1186 1188 85 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])
        (reg:SI 0 ax [1476])) "CLDRAD.f":311 86 {*movsi_internal}
     (nil))
(insn 1188 1187 1189 85 (set (reg:SI 0 ax [1478])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":312 86 {*movsi_internal}
     (nil))
(insn 1189 1188 1190 85 (parallel [
            (set (reg:SI 0 ax [1480])
                (div:SI (reg:SI 0 ax [1478])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (set (reg:SI 1 dx [1479])
                (mod:SI (reg:SI 0 ax [1478])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":312 382 {*divmodsi4}
     (nil))
(insn 1190 1189 1191 85 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1479])) "CLDRAD.f":312 86 {*movsi_internal}
     (nil))
(insn 1191 1190 1192 85 (set (reg:SI 0 ax [1481])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":313 86 {*movsi_internal}
     (nil))
(insn 1192 1191 1193 85 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [1481])) "CLDRAD.f":313 86 {*movsi_internal}
     (nil))
(insn 1193 1192 1194 85 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":314 86 {*movsi_internal}
     (nil))
(insn 1194 1193 1195 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":315 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1195 1194 1196 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1202)
            (pc))) "CLDRAD.f":315 682 {*jcc}
     (nil)
 -> 1202)
;;  succ:       86 (FALLTHRU)
;;              87
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 86, loop depth 0, maybe hot
;;  prev block 85, next block 87, flags: (RTL, MODIFIED)
;;  pred:       85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 314 1482
(note 1196 1195 1197 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1197 1196 1198 86 (set (reg:SI 0 ax [1482])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":316 86 {*movsi_internal}
     (nil))
(insn 1198 1197 1199 86 (parallel [
            (set (reg:SI 0 ax [orig:314 _228 ] [314])
                (minus:SI (reg:SI 0 ax [1482])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":316 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -92 [0xffffffffffffffa4])) [2 itclod+0 S4 A32]))
        (nil)))
(insn 1199 1198 4193 86 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:314 _228 ] [314])) "CLDRAD.f":316 86 {*movsi_internal}
     (nil))
(jump_insn 4193 1199 4194 86 (set (pc)
        (label_ref 1207)) 683 {jump}
     (nil)
 -> 1207)
;;  succ:       88 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4194 4193 1202)
;; basic block 87, loop depth 0, maybe hot
;;  prev block 86, next block 88, flags: (RTL, MODIFIED)
;;  pred:       85
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 315 1483
(code_label 1202 4194 1203 87 53 (nil) [1 uses])
(note 1203 1202 1204 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 1204 1203 1205 87 (set (reg:SI 0 ax [1483])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":318 86 {*movsi_internal}
     (nil))
(insn 1205 1204 1206 87 (parallel [
            (set (reg:SI 0 ax [orig:315 _229 ] [315])
                (minus:SI (reg:SI 0 ax [1483])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":318 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 1206 1205 1207 87 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:315 _229 ] [315])) "CLDRAD.f":318 86 {*movsi_internal}
     (nil))
;;  succ:       88 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 88, loop depth 0, maybe hot
;;  prev block 87, next block 89, flags: (RTL, MODIFIED)
;;  pred:       87 (FALLTHRU)
;;              86 [always] 
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 316
(code_label 1207 1206 1208 88 54 (nil) [1 uses])
(note 1208 1207 1209 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1209 1208 1210 88 (set (reg:SI 0 ax [orig:316 _230 ] [316])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":320 86 {*movsi_internal}
     (nil))
(insn 1210 1209 1211 88 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:316 _230 ] [316])
            (const_int 0 [0]))) "CLDRAD.f":320 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1211 1210 1212 88 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1214)
            (pc))) "CLDRAD.f":320 682 {*jcc}
     (nil)
 -> 1214)
;;  succ:       89 (FALLTHRU)
;;              90
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 89, loop depth 0, maybe hot
;;  prev block 88, next block 90, flags: (RTL, MODIFIED)
;;  pred:       88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1212 1211 1213 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1213 1212 1214 89 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":320 86 {*movsi_internal}
     (nil))
;;  succ:       90 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 90, loop depth 0, maybe hot
;;  prev block 89, next block 91, flags: (RTL, MODIFIED)
;;  pred:       88
;;              89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 317 318 319 320 321 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 1494
(code_label 1214 1213 1215 90 55 (nil) [1 uses])
(note 1215 1214 1216 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1216 1215 1217 90 (set (reg:DI 2 cx [1484])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":321 85 {*movdi_internal}
     (nil))
(insn 1217 1216 1218 90 (set (reg:DI 1 dx [1485])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":321 85 {*movdi_internal}
     (nil))
(insn 1218 1217 1221 90 (set (reg:DI 0 ax [1486])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":321 85 {*movdi_internal}
     (nil))
(insn 1221 1218 1222 90 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":321 85 {*movdi_internal}
     (nil))
(insn 1222 1221 1223 90 (set (reg:DI 5 di)
        (reg:DI 0 ax [1486])) "CLDRAD.f":321 85 {*movdi_internal}
     (nil))
(insn 1223 1222 1224 90 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":321 88 {*movqi_internal}
     (nil))
(call_insn 1224 1223 1225 90 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":321 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1225 1224 1226 90 (set (reg:SI 0 ax [orig:317 _231 ] [317])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 568 [0x238]))) [2 rqstfld.iget+552 S4 A64])) "CLDRAD.f":323 86 {*movsi_internal}
     (nil))
(insn 1226 1225 1227 90 (set (reg:DI 0 ax [orig:318 _232 ] [318])
        (sign_extend:DI (reg:SI 0 ax [orig:317 _231 ] [317]))) "CLDRAD.f":323 149 {*extendsidi2_rex64}
     (nil))
(insn 1227 1226 1228 90 (parallel [
            (set (reg:DI 1 dx [orig:319 _233 ] [319])
                (plus:DI (reg:DI 0 ax [orig:318 _232 ] [318])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":323 222 {*adddi_1}
     (nil))
(insn 1228 1227 1229 90 (set (reg:DI 0 ax [1487])
        (reg:DI 1 dx [orig:319 _233 ] [319])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1229 1228 1231 90 (parallel [
            (set (reg:DI 0 ax [1488])
                (ashift:DI (reg:DI 0 ax [1487])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":323 551 {*ashldi3_1}
     (nil))
(insn 1231 1229 1232 90 (parallel [
            (set (reg:DI 0 ax [1487])
                (minus:DI (reg:DI 0 ax [1487])
                    (reg:DI 1 dx [orig:319 _233 ] [319])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":323 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:319 _233 ] [319])
            (const_int 15 [0xf]))
        (nil)))
(insn 1232 1231 1235 90 (parallel [
            (set (reg:DI 0 ax [1489])
                (ashift:DI (reg:DI 0 ax [1487])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":323 551 {*ashldi3_1}
     (nil))
(insn 1235 1232 1236 90 (parallel [
            (set (reg:DI 0 ax [1490])
                (plus:DI (reg:DI 0 ax [orig:320 _234 ] [320])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":323 222 {*adddi_1}
     (nil))
(insn 1236 1235 1237 90 (parallel [
            (set (reg:DI 0 ax [1491])
                (ashift:DI (reg:DI 0 ax [1490])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":323 551 {*ashldi3_1}
     (nil))
(insn 1237 1236 1238 90 (parallel [
            (set (reg/f:DI 1 dx [orig:321 _235 ] [321])
                (plus:DI (reg:DI 0 ax [1491])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":323 222 {*adddi_1}
     (nil))
(insn 1238 1237 1239 90 (set (reg:DI 4 si [1492])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1239 1238 1240 90 (set (reg:DI 2 cx [1493])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1240 1239 1241 90 (set (reg:DI 0 ax [1494])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1241 1240 1242 90 (set (reg:DI 38 r9)
        (reg:DI 4 si [1492])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1242 1241 1243 90 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1493])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1243 1242 1245 90 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1494])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1245 1243 1246 90 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 568 [0x238])))) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1246 1245 1247 90 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1247 1246 1248 90 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":323 88 {*movqi_internal}
     (nil))
(call_insn 1248 1247 1249 90 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":323 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       91 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 91, loop depth 0, maybe hot
;;  prev block 90, next block 92, flags: (RTL, MODIFIED)
;;  pred:       75
;;              90 (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 322
(code_label 1249 1248 1250 91 46 (nil) [1 uses])
(note 1250 1249 1251 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1251 1250 1252 91 (set (reg:SI 0 ax [orig:322 _236 ] [322])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 584 [0x248]))) [2 rqstfld.iget+568 S4 A64])) "CLDRAD.f":327 86 {*movsi_internal}
     (nil))
(insn 1252 1251 1253 91 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:322 _236 ] [322])
            (const_int 0 [0]))) "CLDRAD.f":327 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1253 1252 1254 91 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1431)
            (pc))) "CLDRAD.f":327 682 {*jcc}
     (nil)
 -> 1431)
;;  succ:       92 (FALLTHRU)
;;              107
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 92, loop depth 0, maybe hot
;;  prev block 91, next block 93, flags: (RTL, MODIFIED)
;;  pred:       91 (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1135 1136
(note 1254 1253 1255 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1255 1254 1256 92 (set (reg:SI 1 dx [orig:1135 _1318 ] [1135])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":328 86 {*movsi_internal}
     (nil))
(insn 1256 1255 1257 92 (set (reg:SI 0 ax [orig:1136 _1319 ] [1136])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":328 86 {*movsi_internal}
     (nil))
(insn 1257 1256 1340 92 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1135 _1318 ] [1135])) "CLDRAD.f":328 86 {*movsi_internal}
     (nil))
;;  succ:       93 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136

;; basic block 93, loop depth 0, maybe hot
;;  prev block 92, next block 94, flags: (RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;;              100 [always] 
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136
;; lr  def 	 17 [flags] 1137 1495
(code_label 1340 1257 1258 93 62 (nil) [1 uses])
(note 1258 1340 1259 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1259 1258 1260 93 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1136 _1319 ] [1136]))) "CLDRAD.f":328 11 {*cmpsi_1}
     (nil))
(insn 1260 1259 1261 93 (set (reg:QI 1 dx [1495])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":328 678 {*setcc_qi}
     (nil))
(insn 1261 1260 1262 93 (set (reg:SI 1 dx [orig:1137 _1321 ] [1137])
        (zero_extend:SI (reg:QI 1 dx [1495]))) "CLDRAD.f":328 140 {*zero_extendqisi2}
     (nil))
(insn 1262 1261 1263 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1137 _1321 ] [1137])
            (const_int 0 [0]))) "CLDRAD.f":328 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1263 1262 1264 93 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4349)
            (pc))) "CLDRAD.f":328 682 {*jcc}
     (nil)
 -> 4349)
;;  succ:       322
;;              94 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136

;; basic block 94, loop depth 0, maybe hot
;;  prev block 93, next block 95, flags: (RTL, MODIFIED)
;;  pred:       93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1264 1263 1265 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1265 1264 1334 94 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":329 86 {*movsi_internal}
     (nil))
;;  succ:       95 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136

;; basic block 95, loop depth 0, maybe hot
;;  prev block 94, next block 96, flags: (RTL, MODIFIED)
;;  pred:       94 (FALLTHRU)
;;              99 [always] 
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1138 1496
(code_label 1334 1265 1266 95 61 (nil) [1 uses])
(note 1266 1334 1267 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1267 1266 1268 95 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":329 11 {*cmpsi_1}
     (nil))
(insn 1268 1267 1269 95 (set (reg:QI 1 dx [1496])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":329 678 {*setcc_qi}
     (nil))
(insn 1269 1268 1270 95 (set (reg:SI 1 dx [orig:1138 _1323 ] [1138])
        (zero_extend:SI (reg:QI 1 dx [1496]))) "CLDRAD.f":329 140 {*zero_extendqisi2}
     (nil))
(insn 1270 1269 1271 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1138 _1323 ] [1138])
            (const_int 0 [0]))) "CLDRAD.f":329 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1271 1270 1272 95 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4352)
            (pc))) "CLDRAD.f":329 682 {*jcc}
     (nil)
 -> 4352)
;;  succ:       323
;;              96 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136

;; basic block 96, loop depth 0, maybe hot
;;  prev block 95, next block 97, flags: (RTL, MODIFIED)
;;  pred:       95 (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 323 324 325 326 327 328 1497 1498 1499 1500
(note 1272 1271 1273 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1273 1272 1274 96 (set (reg:SI 1 dx [1497])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":330 86 {*movsi_internal}
     (nil))
(insn 1274 1273 1275 96 (set (reg:DI 1 dx [orig:323 _237 ] [323])
        (sign_extend:DI (reg:SI 1 dx [1497]))) "CLDRAD.f":330 149 {*extendsidi2_rex64}
     (nil))
(insn 1275 1274 1276 96 (parallel [
            (set (reg:DI 2 cx [orig:324 _238 ] [324])
                (mult:DI (reg:DI 1 dx [orig:323 _237 ] [323])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":330 349 {*muldi3_1}
     (nil))
(insn 1276 1275 1277 96 (set (reg:SI 1 dx [1498])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":330 86 {*movsi_internal}
     (nil))
(insn 1277 1276 1278 96 (set (reg:DI 1 dx [orig:325 _239 ] [325])
        (sign_extend:DI (reg:SI 1 dx [1498]))) "CLDRAD.f":330 149 {*extendsidi2_rex64}
     (nil))
(insn 1278 1277 1279 96 (parallel [
            (set (reg:DI 1 dx [orig:326 _240 ] [326])
                (plus:DI (reg:DI 1 dx [orig:325 _239 ] [325])
                    (reg:DI 2 cx [orig:324 _238 ] [324])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":330 222 {*adddi_1}
     (nil))
(insn 1279 1278 1280 96 (parallel [
            (set (reg:DI 2 cx [orig:327 _241 ] [327])
                (plus:DI (reg:DI 1 dx [orig:326 _240 ] [326])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":330 222 {*adddi_1}
     (nil))
(insn 1280 1279 1281 96 (set (reg/f:DI 1 dx [1499])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":330 85 {*movdi_internal}
     (nil))
(insn 1281 1280 1282 96 (parallel [
            (set (reg:DI 2 cx [1500])
                (plus:DI (reg:DI 2 cx [orig:327 _241 ] [327])
                    (const_int 29633 [0x73c1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":330 222 {*adddi_1}
     (nil))
(insn 1282 1281 1283 96 (set (reg:SI 1 dx [orig:328 _242 ] [328])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1500])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1499])) [2 acmcld.ncfrcv S4 A32])) "CLDRAD.f":330 86 {*movsi_internal}
     (nil))
(insn 1283 1282 1284 96 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 1 dx [orig:328 _242 ] [328])
            (const_int 0 [0]))) "CLDRAD.f":330 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1284 1283 1285 96 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1319)
            (pc))) "CLDRAD.f":330 682 {*jcc}
     (nil)
 -> 1319)
;;  succ:       97 (FALLTHRU)
;;              98
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136

;; basic block 97, loop depth 0, maybe hot
;;  prev block 96, next block 98, flags: (RTL, MODIFIED)
;;  pred:       96 (FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 1501 1502 1503 1504 1505 1506 1507 1508 1509 1510 1511
(note 1285 1284 1286 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1286 1285 1287 97 (set (reg:SI 1 dx [1501])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1287 1286 1288 97 (set (reg:DI 1 dx [orig:329 _243 ] [329])
        (sign_extend:DI (reg:SI 1 dx [1501]))) "CLDRAD.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1288 1287 1289 97 (parallel [
            (set (reg:DI 2 cx [orig:330 _244 ] [330])
                (mult:DI (reg:DI 1 dx [orig:329 _243 ] [329])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 349 {*muldi3_1}
     (nil))
(insn 1289 1288 1290 97 (set (reg:SI 1 dx [1502])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1290 1289 1291 97 (set (reg:DI 1 dx [orig:331 _245 ] [331])
        (sign_extend:DI (reg:SI 1 dx [1502]))) "CLDRAD.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1291 1290 1292 97 (parallel [
            (set (reg:DI 1 dx [orig:332 _246 ] [332])
                (plus:DI (reg:DI 1 dx [orig:331 _245 ] [331])
                    (reg:DI 2 cx [orig:330 _244 ] [330])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 1292 1291 1293 97 (parallel [
            (set (reg:DI 2 cx [orig:333 _247 ] [333])
                (plus:DI (reg:DI 1 dx [orig:332 _246 ] [332])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 1293 1292 1294 97 (set (reg/f:DI 1 dx [1503])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":331 85 {*movdi_internal}
     (nil))
(insn 1294 1293 1295 97 (parallel [
            (set (reg:DI 2 cx [1504])
                (plus:DI (reg:DI 2 cx [orig:333 _247 ] [333])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 1295 1294 1296 97 (set (reg:SF 21 xmm0 [orig:334 _248 ] [334])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1504])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1503])) [1 acmcld.acfrcv S4 A32])) "CLDRAD.f":331 131 {*movsf_internal}
     (nil))
(insn 1296 1295 1297 97 (set (reg:SI 1 dx [1505])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1297 1296 1298 97 (set (reg:DI 1 dx [orig:335 _249 ] [335])
        (sign_extend:DI (reg:SI 1 dx [1505]))) "CLDRAD.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1298 1297 1299 97 (parallel [
            (set (reg:DI 2 cx [orig:336 _250 ] [336])
                (mult:DI (reg:DI 1 dx [orig:335 _249 ] [335])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 349 {*muldi3_1}
     (nil))
(insn 1299 1298 1300 97 (set (reg:SI 1 dx [1506])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1300 1299 1301 97 (set (reg:DI 1 dx [orig:337 _251 ] [337])
        (sign_extend:DI (reg:SI 1 dx [1506]))) "CLDRAD.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1301 1300 1302 97 (parallel [
            (set (reg:DI 1 dx [orig:338 _252 ] [338])
                (plus:DI (reg:DI 1 dx [orig:337 _251 ] [337])
                    (reg:DI 2 cx [orig:336 _250 ] [336])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 1302 1301 1303 97 (parallel [
            (set (reg:DI 2 cx [orig:339 _253 ] [339])
                (plus:DI (reg:DI 1 dx [orig:338 _252 ] [338])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 1303 1302 1304 97 (set (reg/f:DI 1 dx [1507])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":331 85 {*movdi_internal}
     (nil))
(insn 1304 1303 1305 97 (parallel [
            (set (reg:DI 2 cx [1508])
                (plus:DI (reg:DI 2 cx [orig:339 _253 ] [339])
                    (const_int 29633 [0x73c1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 1305 1304 1306 97 (set (reg:SI 1 dx [orig:340 _254 ] [340])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1508])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1507])) [2 acmcld.ncfrcv S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1306 1305 1307 97 (set (reg:SF 22 xmm1 [orig:341 _255 ] [341])
        (float:SF (reg:SI 1 dx [orig:340 _254 ] [340]))) "CLDRAD.f":331 203 {*floatsisf2_mixed}
     (nil))
(insn 1307 1306 1308 97 (set (reg:SI 1 dx [1509])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1308 1307 1309 97 (set (reg:DI 1 dx [orig:342 _256 ] [342])
        (sign_extend:DI (reg:SI 1 dx [1509]))) "CLDRAD.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1309 1308 1310 97 (parallel [
            (set (reg:DI 2 cx [orig:343 _257 ] [343])
                (mult:DI (reg:DI 1 dx [orig:342 _256 ] [342])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 349 {*muldi3_1}
     (nil))
(insn 1310 1309 1311 97 (set (reg:SI 1 dx [1510])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1311 1310 1312 97 (set (reg:DI 1 dx [orig:344 _258 ] [344])
        (sign_extend:DI (reg:SI 1 dx [1510]))) "CLDRAD.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1312 1311 1313 97 (parallel [
            (set (reg:DI 1 dx [orig:345 _259 ] [345])
                (plus:DI (reg:DI 1 dx [orig:344 _258 ] [344])
                    (reg:DI 2 cx [orig:343 _257 ] [343])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 1313 1312 1314 97 (parallel [
            (set (reg:DI 2 cx [orig:346 _260 ] [346])
                (plus:DI (reg:DI 1 dx [orig:345 _259 ] [345])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 1314 1313 1315 97 (set (reg:SF 21 xmm0 [orig:347 _261 ] [347])
        (div:SF (reg:SF 21 xmm0 [orig:334 _248 ] [334])
            (reg:SF 22 xmm1 [orig:341 _255 ] [341]))) "CLDRAD.f":331 841 {*fop_sf_1}
     (nil))
(insn 1315 1314 1316 97 (set (reg/f:DI 1 dx [1511])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":331 85 {*movdi_internal}
     (nil))
(insn 1316 1315 4195 97 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:346 _260 ] [346])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1511])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:347 _261 ] [347])) "CLDRAD.f":331 131 {*movsf_internal}
     (nil))
(jump_insn 4195 1316 4196 97 (set (pc)
        (label_ref 1331)) 683 {jump}
     (nil)
 -> 1331)
;;  succ:       99 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136

(barrier 4196 4195 1319)
;; basic block 98, loop depth 0, maybe hot
;;  prev block 97, next block 99, flags: (RTL, MODIFIED)
;;  pred:       96
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 348 349 350 351 352 1512 1513 1514 1515
(code_label 1319 4196 1320 98 59 (nil) [1 uses])
(note 1320 1319 1321 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1321 1320 1322 98 (set (reg:SI 1 dx [1512])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":333 86 {*movsi_internal}
     (nil))
(insn 1322 1321 1323 98 (set (reg:DI 1 dx [orig:348 _262 ] [348])
        (sign_extend:DI (reg:SI 1 dx [1512]))) "CLDRAD.f":333 149 {*extendsidi2_rex64}
     (nil))
(insn 1323 1322 1324 98 (parallel [
            (set (reg:DI 2 cx [orig:349 _263 ] [349])
                (mult:DI (reg:DI 1 dx [orig:348 _262 ] [348])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":333 349 {*muldi3_1}
     (nil))
(insn 1324 1323 1325 98 (set (reg:SI 1 dx [1513])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":333 86 {*movsi_internal}
     (nil))
(insn 1325 1324 1326 98 (set (reg:DI 1 dx [orig:350 _264 ] [350])
        (sign_extend:DI (reg:SI 1 dx [1513]))) "CLDRAD.f":333 149 {*extendsidi2_rex64}
     (nil))
(insn 1326 1325 1327 98 (parallel [
            (set (reg:DI 1 dx [orig:351 _265 ] [351])
                (plus:DI (reg:DI 1 dx [orig:350 _264 ] [350])
                    (reg:DI 2 cx [orig:349 _263 ] [349])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":333 222 {*adddi_1}
     (nil))
(insn 1327 1326 1328 98 (parallel [
            (set (reg:DI 2 cx [orig:352 _266 ] [352])
                (plus:DI (reg:DI 1 dx [orig:351 _265 ] [351])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":333 222 {*adddi_1}
     (nil))
(insn 1328 1327 1329 98 (set (reg/f:DI 1 dx [1514])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":333 85 {*movdi_internal}
     (nil))
(insn 1329 1328 1330 98 (set (reg:SF 21 xmm0 [1515])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":333 131 {*movsf_internal}
     (nil))
(insn 1330 1329 1331 98 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:352 _266 ] [352])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1514])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [1515])) "CLDRAD.f":333 131 {*movsf_internal}
     (nil))
;;  succ:       99 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136

;; basic block 99, loop depth 0, maybe hot
;;  prev block 98, next block 323, flags: (RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;;              97 [always] 
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1331 1330 1332 99 60 (nil) [1 uses])
(note 1332 1331 1333 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1333 1332 4197 99 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":329 221 {*addsi_1}
     (nil))
(jump_insn 4197 1333 4198 99 (set (pc)
        (label_ref 1334)) "CLDRAD.f":329 683 {jump}
     (nil)
 -> 1334)
;;  succ:       95 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136

(barrier 4198 4197 4352)
;; basic block 323, loop depth 0, maybe hot
;;  prev block 99, next block 100, flags: (RTL, MODIFIED)
;;  pred:       95
;; bb 323 artificial_defs: { }
;; bb 323 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4352 4198 4351 323 245 (nil) [1 uses])
(note 4351 4352 4353 323 [bb 323] NOTE_INSN_BASIC_BLOCK)
(insn 4353 4351 1337 323 (const_int 0 [0]) "CLDRAD.f":330 718 {nop}
     (nil))
;;  succ:       100 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136

;; basic block 100, loop depth 0, maybe hot
;;  prev block 323, next block 322, flags: (RTL, MODIFIED)
;;  pred:       323 [always]  (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1337 4353 1338 100 58 (nil) [0 uses])
(note 1338 1337 1339 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1339 1338 4199 100 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":328 221 {*addsi_1}
     (nil))
(jump_insn 4199 1339 4200 100 (set (pc)
        (label_ref 1340)) "CLDRAD.f":328 683 {jump}
     (nil)
 -> 1340)
;;  succ:       93 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1136

(barrier 4200 4199 4349)
;; basic block 322, loop depth 0, maybe hot
;;  prev block 100, next block 101, flags: (RTL, MODIFIED)
;;  pred:       93
;; bb 322 artificial_defs: { }
;; bb 322 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4349 4200 4348 322 244 (nil) [1 uses])
(note 4348 4349 4350 322 [bb 322] NOTE_INSN_BASIC_BLOCK)
(insn 4350 4348 1343 322 (const_int 0 [0]) "CLDRAD.f":329 718 {nop}
     (nil))
;;  succ:       101 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 101, loop depth 0, maybe hot
;;  prev block 322, next block 102, flags: (RTL, MODIFIED)
;;  pred:       322 [always]  (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 353 1516 1517 1518 1519 1520 1521 1522 1523 1525 1526 1527 1528
(code_label 1343 4350 1344 101 57 (nil) [0 uses])
(note 1344 1343 1345 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1345 1344 1346 101 (set (reg:DI 1 dx [1516])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1346 1345 1347 101 (set (reg:DI 0 ax [1517])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1347 1346 1348 101 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":338 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1348 1347 1349 101 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":338 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1349 1348 1350 101 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1516])) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1350 1349 1351 101 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1517])) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1351 1350 1352 101 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1352 1351 1353 101 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1353 1352 1354 101 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1354 1353 1355 101 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f2038fb47e0 *.LC15>)) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1355 1354 1356 101 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":338 88 {*movqi_internal}
     (nil))
(call_insn 1356 1355 1357 101 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":338 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1357 1356 1358 101 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":338 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1358 1357 1359 101 (set (reg/f:DI 1 dx [1518])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":339 85 {*movdi_internal}
     (nil))
(insn 1359 1358 1360 101 (set (reg:DI 0 ax [1519])
        (const_int 0 [0])) "CLDRAD.f":339 85 {*movdi_internal}
     (nil))
(insn 1360 1359 4473 101 (set (reg:DI 2 cx [1520])
        (const_int 12 [0xc])) "CLDRAD.f":339 85 {*movdi_internal}
     (nil))
(insn 4473 1360 1361 101 (set (reg/f:DI 5 di [1518])
        (reg/f:DI 1 dx [1518])) "CLDRAD.f":339 85 {*movdi_internal}
     (nil))
(insn 1361 4473 4474 101 (parallel [
            (set (reg:DI 2 cx [1520])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1518])
                (plus:DI (ashift:DI (reg:DI 2 cx [1520])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1518])))
            (set (mem/c:BLK (reg/f:DI 5 di [1518]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1519]))
            (use (reg:DI 2 cx [1520]))
        ]) "CLDRAD.f":339 984 {*rep_stosdi_rex64}
     (nil))
(insn 4474 1361 1362 101 (set (reg/f:DI 1 dx [1518])
        (reg/f:DI 5 di [1518])) "CLDRAD.f":339 85 {*movdi_internal}
     (nil))
(insn 1362 4474 1363 101 (set (mem/c:SI (reg/f:DI 1 dx [1518]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1519])) "CLDRAD.f":339 86 {*movsi_internal}
     (nil))
(insn 1363 1362 1364 101 (parallel [
            (set (reg/f:DI 1 dx [1518])
                (plus:DI (reg/f:DI 1 dx [1518])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":339 222 {*adddi_1}
     (nil))
(insn 1364 1363 1365 101 (set (reg:SI 0 ax [1521])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":341 86 {*movsi_internal}
     (nil))
(insn 1365 1364 1366 101 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1521])) "CLDRAD.f":341 86 {*movsi_internal}
     (nil))
(insn 1366 1365 1367 101 (set (reg/f:DI 0 ax [1522])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 1367 1366 1368 101 (set (reg:SF 21 xmm0 [orig:353 _267 ] [353])
        (mem/c:SF (reg/f:DI 0 ax [1522]) [1 acmcld.tclod+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1368 1367 1369 101 (set (reg:SI 0 ax [1523])
        (fix:SI (reg:SF 21 xmm0 [orig:353 _267 ] [353]))) "CLDRAD.f":342 174 {fix_truncsfsi_sse}
     (nil))
(insn 1369 1368 1370 101 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])
        (reg:SI 0 ax [1523])) "CLDRAD.f":342 86 {*movsi_internal}
     (nil))
(insn 1370 1369 1371 101 (set (reg:SI 0 ax [1525])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":343 86 {*movsi_internal}
     (nil))
(insn 1371 1370 1372 101 (parallel [
            (set (reg:SI 0 ax [1527])
                (div:SI (reg:SI 0 ax [1525])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (set (reg:SI 1 dx [1526])
                (mod:SI (reg:SI 0 ax [1525])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":343 382 {*divmodsi4}
     (nil))
(insn 1372 1371 1373 101 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1526])) "CLDRAD.f":343 86 {*movsi_internal}
     (nil))
(insn 1373 1372 1374 101 (set (reg:SI 0 ax [1528])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":344 86 {*movsi_internal}
     (nil))
(insn 1374 1373 1375 101 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [1528])) "CLDRAD.f":344 86 {*movsi_internal}
     (nil))
(insn 1375 1374 1376 101 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":345 86 {*movsi_internal}
     (nil))
(insn 1376 1375 1377 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":346 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1377 1376 1378 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1384)
            (pc))) "CLDRAD.f":346 682 {*jcc}
     (nil)
 -> 1384)
;;  succ:       102 (FALLTHRU)
;;              103
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 102, loop depth 0, maybe hot
;;  prev block 101, next block 103, flags: (RTL, MODIFIED)
;;  pred:       101 (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 354 1529
(note 1378 1377 1379 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1379 1378 1380 102 (set (reg:SI 0 ax [1529])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":347 86 {*movsi_internal}
     (nil))
(insn 1380 1379 1381 102 (parallel [
            (set (reg:SI 0 ax [orig:354 _268 ] [354])
                (minus:SI (reg:SI 0 ax [1529])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":347 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -92 [0xffffffffffffffa4])) [2 itclod+0 S4 A32]))
        (nil)))
(insn 1381 1380 4201 102 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:354 _268 ] [354])) "CLDRAD.f":347 86 {*movsi_internal}
     (nil))
(jump_insn 4201 1381 4202 102 (set (pc)
        (label_ref 1389)) 683 {jump}
     (nil)
 -> 1389)
;;  succ:       104 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4202 4201 1384)
;; basic block 103, loop depth 0, maybe hot
;;  prev block 102, next block 104, flags: (RTL, MODIFIED)
;;  pred:       101
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 355 1530
(code_label 1384 4202 1385 103 63 (nil) [1 uses])
(note 1385 1384 1386 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1386 1385 1387 103 (set (reg:SI 0 ax [1530])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":349 86 {*movsi_internal}
     (nil))
(insn 1387 1386 1388 103 (parallel [
            (set (reg:SI 0 ax [orig:355 _269 ] [355])
                (minus:SI (reg:SI 0 ax [1530])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":349 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 1388 1387 1389 103 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:355 _269 ] [355])) "CLDRAD.f":349 86 {*movsi_internal}
     (nil))
;;  succ:       104 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 104, loop depth 0, maybe hot
;;  prev block 103, next block 105, flags: (RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;;              102 [always] 
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 356
(code_label 1389 1388 1390 104 64 (nil) [1 uses])
(note 1390 1389 1391 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1391 1390 1392 104 (set (reg:SI 0 ax [orig:356 _270 ] [356])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":351 86 {*movsi_internal}
     (nil))
(insn 1392 1391 1393 104 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:356 _270 ] [356])
            (const_int 0 [0]))) "CLDRAD.f":351 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1393 1392 1394 104 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1396)
            (pc))) "CLDRAD.f":351 682 {*jcc}
     (nil)
 -> 1396)
;;  succ:       105 (FALLTHRU)
;;              106
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 105, loop depth 0, maybe hot
;;  prev block 104, next block 106, flags: (RTL, MODIFIED)
;;  pred:       104 (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1394 1393 1395 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1395 1394 1396 105 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":351 86 {*movsi_internal}
     (nil))
;;  succ:       106 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 106, loop depth 0, maybe hot
;;  prev block 105, next block 107, flags: (RTL, MODIFIED)
;;  pred:       104
;;              105 (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 357 358 359 360 361 1531 1532 1533 1534 1535 1536 1537 1538 1539 1540 1541
(code_label 1396 1395 1397 106 65 (nil) [1 uses])
(note 1397 1396 1398 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 1398 1397 1399 106 (set (reg:DI 2 cx [1531])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":352 85 {*movdi_internal}
     (nil))
(insn 1399 1398 1400 106 (set (reg:DI 1 dx [1532])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":352 85 {*movdi_internal}
     (nil))
(insn 1400 1399 1403 106 (set (reg:DI 0 ax [1533])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":352 85 {*movdi_internal}
     (nil))
(insn 1403 1400 1404 106 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":352 85 {*movdi_internal}
     (nil))
(insn 1404 1403 1405 106 (set (reg:DI 5 di)
        (reg:DI 0 ax [1533])) "CLDRAD.f":352 85 {*movdi_internal}
     (nil))
(insn 1405 1404 1406 106 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":352 88 {*movqi_internal}
     (nil))
(call_insn 1406 1405 1407 106 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":352 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1407 1406 1408 106 (set (reg:SI 0 ax [orig:357 _271 ] [357])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 584 [0x248]))) [2 rqstfld.iget+568 S4 A64])) "CLDRAD.f":354 86 {*movsi_internal}
     (nil))
(insn 1408 1407 1409 106 (set (reg:DI 0 ax [orig:358 _272 ] [358])
        (sign_extend:DI (reg:SI 0 ax [orig:357 _271 ] [357]))) "CLDRAD.f":354 149 {*extendsidi2_rex64}
     (nil))
(insn 1409 1408 1410 106 (parallel [
            (set (reg:DI 1 dx [orig:359 _273 ] [359])
                (plus:DI (reg:DI 0 ax [orig:358 _272 ] [358])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":354 222 {*adddi_1}
     (nil))
(insn 1410 1409 1411 106 (set (reg:DI 0 ax [1534])
        (reg:DI 1 dx [orig:359 _273 ] [359])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1411 1410 1413 106 (parallel [
            (set (reg:DI 0 ax [1535])
                (ashift:DI (reg:DI 0 ax [1534])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":354 551 {*ashldi3_1}
     (nil))
(insn 1413 1411 1414 106 (parallel [
            (set (reg:DI 0 ax [1534])
                (minus:DI (reg:DI 0 ax [1534])
                    (reg:DI 1 dx [orig:359 _273 ] [359])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":354 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:359 _273 ] [359])
            (const_int 15 [0xf]))
        (nil)))
(insn 1414 1413 1417 106 (parallel [
            (set (reg:DI 0 ax [1536])
                (ashift:DI (reg:DI 0 ax [1534])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":354 551 {*ashldi3_1}
     (nil))
(insn 1417 1414 1418 106 (parallel [
            (set (reg:DI 0 ax [1537])
                (plus:DI (reg:DI 0 ax [orig:360 _274 ] [360])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":354 222 {*adddi_1}
     (nil))
(insn 1418 1417 1419 106 (parallel [
            (set (reg:DI 0 ax [1538])
                (ashift:DI (reg:DI 0 ax [1537])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":354 551 {*ashldi3_1}
     (nil))
(insn 1419 1418 1420 106 (parallel [
            (set (reg/f:DI 1 dx [orig:361 _275 ] [361])
                (plus:DI (reg:DI 0 ax [1538])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":354 222 {*adddi_1}
     (nil))
(insn 1420 1419 1421 106 (set (reg:DI 4 si [1539])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1421 1420 1422 106 (set (reg:DI 2 cx [1540])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1422 1421 1423 106 (set (reg:DI 0 ax [1541])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1423 1422 1424 106 (set (reg:DI 38 r9)
        (reg:DI 4 si [1539])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1424 1423 1425 106 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1540])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1425 1424 1427 106 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1541])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1427 1425 1428 106 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 584 [0x248])))) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1428 1427 1429 106 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1429 1428 1430 106 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":354 88 {*movqi_internal}
     (nil))
(call_insn 1430 1429 1431 106 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":354 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       107 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 107, loop depth 0, maybe hot
;;  prev block 106, next block 108, flags: (RTL, MODIFIED)
;;  pred:       91
;;              106 (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 362
(code_label 1431 1430 1432 107 56 (nil) [1 uses])
(note 1432 1431 1433 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1433 1432 1434 107 (set (reg:SI 0 ax [orig:362 _276 ] [362])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 604 [0x25c]))) [2 rqstfld.iget+588 S4 A32])) "CLDRAD.f":358 86 {*movsi_internal}
     (nil))
(insn 1434 1433 1435 107 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:362 _276 ] [362])
            (const_int 0 [0]))) "CLDRAD.f":358 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1435 1434 1436 107 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1440)
            (pc))) "CLDRAD.f":358 682 {*jcc}
     (nil)
 -> 1440)
;;  succ:       109
;;              108 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 108, loop depth 0, maybe hot
;;  prev block 107, next block 109, flags: (RTL, MODIFIED)
;;  pred:       107 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 363
(note 1436 1435 1437 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 1437 1436 1438 108 (set (reg:SI 0 ax [orig:363 _277 ] [363])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 724 [0x2d4]))) [2 rqstfld.iget+708 S4 A32])) "CLDRAD.f":358 86 {*movsi_internal}
     (nil))
(insn 1438 1437 1439 108 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:363 _277 ] [363])
            (const_int 0 [0]))) "CLDRAD.f":358 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1439 1438 1440 108 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1972)
            (pc))) "CLDRAD.f":358 682 {*jcc}
     (nil)
 -> 1972)
;;  succ:       109 (FALLTHRU)
;;              140
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 109, loop depth 0, maybe hot
;;  prev block 108, next block 110, flags: (RTL, MODIFIED)
;;  pred:       107
;;              108 (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1139 1140 1542
(code_label 1440 1439 1441 109 66 (nil) [1 uses])
(note 1441 1440 1442 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 1442 1441 1443 109 (set (reg:SF 21 xmm0 [1542])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":359 131 {*movsf_internal}
     (nil))
(insn 1443 1442 1444 109 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 climit+0 S4 A32])
        (reg:SF 21 xmm0 [1542])) "CLDRAD.f":359 131 {*movsf_internal}
     (nil))
(insn 1444 1443 1445 109 (set (reg:SI 1 dx [orig:1139 _1341 ] [1139])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":360 86 {*movsi_internal}
     (nil))
(insn 1445 1444 1446 109 (set (reg:SI 0 ax [orig:1140 _1342 ] [1140])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":360 86 {*movsi_internal}
     (nil))
(insn 1446 1445 1498 109 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1139 _1341 ] [1139])) "CLDRAD.f":360 86 {*movsi_internal}
     (nil))
;;  succ:       110 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140

;; basic block 110, loop depth 0, maybe hot
;;  prev block 109, next block 111, flags: (RTL, MODIFIED)
;;  pred:       109 (FALLTHRU)
;;              114 [always] 
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140
;; lr  def 	 17 [flags] 1141 1543
(code_label 1498 1446 1447 110 71 (nil) [1 uses])
(note 1447 1498 1448 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1448 1447 1449 110 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1140 _1342 ] [1140]))) "CLDRAD.f":360 11 {*cmpsi_1}
     (nil))
(insn 1449 1448 1450 110 (set (reg:QI 1 dx [1543])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":360 678 {*setcc_qi}
     (nil))
(insn 1450 1449 1451 110 (set (reg:SI 1 dx [orig:1141 _1344 ] [1141])
        (zero_extend:SI (reg:QI 1 dx [1543]))) "CLDRAD.f":360 140 {*zero_extendqisi2}
     (nil))
(insn 1451 1450 1452 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1141 _1344 ] [1141])
            (const_int 0 [0]))) "CLDRAD.f":360 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1452 1451 1453 110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4355)
            (pc))) "CLDRAD.f":360 682 {*jcc}
     (nil)
 -> 4355)
;;  succ:       324
;;              111 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140

;; basic block 111, loop depth 0, maybe hot
;;  prev block 110, next block 112, flags: (RTL, MODIFIED)
;;  pred:       110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1453 1452 1454 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 1454 1453 1492 111 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":361 86 {*movsi_internal}
     (nil))
;;  succ:       112 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140

;; basic block 112, loop depth 0, maybe hot
;;  prev block 111, next block 113, flags: (RTL, MODIFIED)
;;  pred:       111 (FALLTHRU)
;;              113 [always] 
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1142 1544
(code_label 1492 1454 1455 112 70 (nil) [1 uses])
(note 1455 1492 1456 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 1456 1455 1457 112 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":361 11 {*cmpsi_1}
     (nil))
(insn 1457 1456 1458 112 (set (reg:QI 1 dx [1544])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":361 678 {*setcc_qi}
     (nil))
(insn 1458 1457 1459 112 (set (reg:SI 1 dx [orig:1142 _1346 ] [1142])
        (zero_extend:SI (reg:QI 1 dx [1544]))) "CLDRAD.f":361 140 {*zero_extendqisi2}
     (nil))
(insn 1459 1458 1460 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1142 _1346 ] [1142])
            (const_int 0 [0]))) "CLDRAD.f":361 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1460 1459 1461 112 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4358)
            (pc))) "CLDRAD.f":361 682 {*jcc}
     (nil)
 -> 4358)
;;  succ:       325
;;              113 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140

;; basic block 113, loop depth 0, maybe hot
;;  prev block 112, next block 325, flags: (RTL, MODIFIED)
;;  pred:       112 (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 1545 1546 1547 1548 1549 1550 1551 1552 1553
(note 1461 1460 1462 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1462 1461 1463 113 (set (reg:SI 1 dx [1545])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":362 86 {*movsi_internal}
     (nil))
(insn 1463 1462 1464 113 (set (reg:DI 1 dx [orig:364 _278 ] [364])
        (sign_extend:DI (reg:SI 1 dx [1545]))) "CLDRAD.f":362 149 {*extendsidi2_rex64}
     (nil))
(insn 1464 1463 1465 113 (parallel [
            (set (reg:DI 2 cx [orig:365 _279 ] [365])
                (mult:DI (reg:DI 1 dx [orig:364 _278 ] [364])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":362 349 {*muldi3_1}
     (nil))
(insn 1465 1464 1466 113 (set (reg:SI 1 dx [1546])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":362 86 {*movsi_internal}
     (nil))
(insn 1466 1465 1467 113 (set (reg:DI 1 dx [orig:366 _280 ] [366])
        (sign_extend:DI (reg:SI 1 dx [1546]))) "CLDRAD.f":362 149 {*extendsidi2_rex64}
     (nil))
(insn 1467 1466 1468 113 (parallel [
            (set (reg:DI 1 dx [orig:367 _281 ] [367])
                (plus:DI (reg:DI 1 dx [orig:366 _280 ] [366])
                    (reg:DI 2 cx [orig:365 _279 ] [365])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":362 222 {*adddi_1}
     (nil))
(insn 1468 1467 1469 113 (parallel [
            (set (reg:DI 2 cx [orig:368 _282 ] [368])
                (plus:DI (reg:DI 1 dx [orig:367 _281 ] [367])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":362 222 {*adddi_1}
     (nil))
(insn 1469 1468 1470 113 (set (reg/f:DI 1 dx [1547])
        (symbol_ref:DI ("need.4414") [flags 0x202]  <var_decl 0x7f2038edcbd0 need>)) "CLDRAD.f":362 85 {*movdi_internal}
     (nil))
(insn 1470 1469 1471 113 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:368 _282 ] [368])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1547])) [7 need S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":362 86 {*movsi_internal}
     (nil))
(insn 1471 1470 1472 113 (set (reg:SI 1 dx [1548])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":363 86 {*movsi_internal}
     (nil))
(insn 1472 1471 1473 113 (set (reg:DI 1 dx [orig:369 _283 ] [369])
        (sign_extend:DI (reg:SI 1 dx [1548]))) "CLDRAD.f":363 149 {*extendsidi2_rex64}
     (nil))
(insn 1473 1472 1474 113 (parallel [
            (set (reg:DI 2 cx [orig:370 _284 ] [370])
                (mult:DI (reg:DI 1 dx [orig:369 _283 ] [369])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":363 349 {*muldi3_1}
     (nil))
(insn 1474 1473 1475 113 (set (reg:SI 1 dx [1549])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":363 86 {*movsi_internal}
     (nil))
(insn 1475 1474 1476 113 (set (reg:DI 1 dx [orig:371 _285 ] [371])
        (sign_extend:DI (reg:SI 1 dx [1549]))) "CLDRAD.f":363 149 {*extendsidi2_rex64}
     (nil))
(insn 1476 1475 1477 113 (parallel [
            (set (reg:DI 1 dx [orig:372 _286 ] [372])
                (plus:DI (reg:DI 1 dx [orig:371 _285 ] [371])
                    (reg:DI 2 cx [orig:370 _284 ] [370])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":363 222 {*adddi_1}
     (nil))
(insn 1477 1476 1478 113 (parallel [
            (set (reg:DI 2 cx [orig:373 _287 ] [373])
                (plus:DI (reg:DI 1 dx [orig:372 _286 ] [372])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":363 222 {*adddi_1}
     (nil))
(insn 1478 1477 1479 113 (set (reg:SF 21 xmm0 [orig:374 _288 ] [374])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1479 1478 1480 113 (set (reg/f:DI 1 dx [1550])
        (symbol_ref:DI ("cldbp.4367") [flags 0x202]  <var_decl 0x7f20392d76c0 cldbp>)) "CLDRAD.f":363 85 {*movdi_internal}
     (nil))
(insn 1480 1479 1481 113 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:373 _287 ] [373])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1550])) [1 cldbp S4 A32])
        (reg:SF 21 xmm0 [orig:374 _288 ] [374])) "CLDRAD.f":363 131 {*movsf_internal}
     (nil))
(insn 1481 1480 1482 113 (set (reg:SI 1 dx [1551])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":364 86 {*movsi_internal}
     (nil))
(insn 1482 1481 1483 113 (set (reg:DI 1 dx [orig:375 _289 ] [375])
        (sign_extend:DI (reg:SI 1 dx [1551]))) "CLDRAD.f":364 149 {*extendsidi2_rex64}
     (nil))
(insn 1483 1482 1484 113 (parallel [
            (set (reg:DI 2 cx [orig:376 _290 ] [376])
                (mult:DI (reg:DI 1 dx [orig:375 _289 ] [375])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":364 349 {*muldi3_1}
     (nil))
(insn 1484 1483 1485 113 (set (reg:SI 1 dx [1552])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":364 86 {*movsi_internal}
     (nil))
(insn 1485 1484 1486 113 (set (reg:DI 1 dx [orig:377 _291 ] [377])
        (sign_extend:DI (reg:SI 1 dx [1552]))) "CLDRAD.f":364 149 {*extendsidi2_rex64}
     (nil))
(insn 1486 1485 1487 113 (parallel [
            (set (reg:DI 1 dx [orig:378 _292 ] [378])
                (plus:DI (reg:DI 1 dx [orig:377 _291 ] [377])
                    (reg:DI 2 cx [orig:376 _290 ] [376])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":364 222 {*adddi_1}
     (nil))
(insn 1487 1486 1488 113 (parallel [
            (set (reg:DI 2 cx [orig:379 _293 ] [379])
                (plus:DI (reg:DI 1 dx [orig:378 _292 ] [378])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":364 222 {*adddi_1}
     (nil))
(insn 1488 1487 1489 113 (set (reg:SF 21 xmm0 [orig:380 _294 ] [380])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1489 1488 1490 113 (set (reg/f:DI 1 dx [1553])
        (symbol_ref:DI ("cldbz.4369") [flags 0x202]  <var_decl 0x7f20392d7750 cldbz>)) "CLDRAD.f":364 85 {*movdi_internal}
     (nil))
(insn 1490 1489 1491 113 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:379 _293 ] [379])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1553])) [1 cldbz S4 A32])
        (reg:SF 21 xmm0 [orig:380 _294 ] [380])) "CLDRAD.f":364 131 {*movsf_internal}
     (nil))
(insn 1491 1490 4203 113 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":361 221 {*addsi_1}
     (nil))
(jump_insn 4203 1491 4204 113 (set (pc)
        (label_ref 1492)) "CLDRAD.f":361 683 {jump}
     (nil)
 -> 1492)
;;  succ:       112 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140

(barrier 4204 4203 4358)
;; basic block 325, loop depth 0, maybe hot
;;  prev block 113, next block 114, flags: (RTL, MODIFIED)
;;  pred:       112
;; bb 325 artificial_defs: { }
;; bb 325 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4358 4204 4357 325 247 (nil) [1 uses])
(note 4357 4358 4359 325 [bb 325] NOTE_INSN_BASIC_BLOCK)
(insn 4359 4357 1495 325 (const_int 0 [0]) "CLDRAD.f":364 718 {nop}
     (nil))
;;  succ:       114 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140

;; basic block 114, loop depth 0, maybe hot
;;  prev block 325, next block 324, flags: (RTL, MODIFIED)
;;  pred:       325 [always]  (FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1495 4359 1496 114 69 (nil) [0 uses])
(note 1496 1495 1497 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 1497 1496 4205 114 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":360 221 {*addsi_1}
     (nil))
(jump_insn 4205 1497 4206 114 (set (pc)
        (label_ref 1498)) "CLDRAD.f":360 683 {jump}
     (nil)
 -> 1498)
;;  succ:       110 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1140

(barrier 4206 4205 4355)
;; basic block 324, loop depth 0, maybe hot
;;  prev block 114, next block 115, flags: (RTL, MODIFIED)
;;  pred:       110
;; bb 324 artificial_defs: { }
;; bb 324 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4355 4206 4354 324 246 (nil) [1 uses])
(note 4354 4355 4356 324 [bb 324] NOTE_INSN_BASIC_BLOCK)
(insn 4356 4354 1501 324 (const_int 0 [0]) "CLDRAD.f":361 718 {nop}
     (nil))
;;  succ:       115 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 115, loop depth 0, maybe hot
;;  prev block 324, next block 116, flags: (RTL, MODIFIED)
;;  pred:       324 [always]  (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1143 1144
(code_label 1501 4356 1502 115 68 (nil) [0 uses])
(note 1502 1501 1503 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 1503 1502 1504 115 (set (reg:SI 0 ax [orig:1143 _1352 ] [1143])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":370 86 {*movsi_internal}
     (nil))
(insn 1504 1503 1505 115 (set (reg:SI 3 bx [orig:1144 _1353 ] [1144])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":370 86 {*movsi_internal}
     (nil))
(insn 1505 1504 1871 115 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 0 ax [orig:1143 _1352 ] [1143])) "CLDRAD.f":370 86 {*movsi_internal}
     (nil))
;;  succ:       116 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 116, loop depth 0, maybe hot
;;  prev block 115, next block 117, flags: (RTL, MODIFIED)
;;  pred:       115 (FALLTHRU)
;;              135 [always] 
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  def 	 17 [flags] 1145 1554
(code_label 1871 1505 1506 116 86 (nil) [1 uses])
(note 1506 1871 1507 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 1507 1506 1508 116 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 3 bx [orig:1144 _1353 ] [1144]))) "CLDRAD.f":370 11 {*cmpsi_1}
     (nil))
(insn 1508 1507 1509 116 (set (reg:QI 0 ax [1554])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":370 678 {*setcc_qi}
     (nil))
(insn 1509 1508 1510 116 (set (reg:SI 0 ax [orig:1145 _1355 ] [1145])
        (zero_extend:SI (reg:QI 0 ax [1554]))) "CLDRAD.f":370 140 {*zero_extendqisi2}
     (nil))
(insn 1510 1509 1511 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1145 _1355 ] [1145])
            (const_int 0 [0]))) "CLDRAD.f":370 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1511 1510 1512 116 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4361)
            (pc))) "CLDRAD.f":370 682 {*jcc}
     (nil)
 -> 4361)
;;  succ:       326
;;              117 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 117, loop depth 0, maybe hot
;;  prev block 116, next block 118, flags: (RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1512 1511 1513 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 1513 1512 1865 117 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":371 86 {*movsi_internal}
     (nil))
;;  succ:       118 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 118, loop depth 0, maybe hot
;;  prev block 117, next block 119, flags: (RTL, MODIFIED)
;;  pred:       117 (FALLTHRU)
;;              134 [always] 
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1146 1555
(code_label 1865 1513 1514 118 85 (nil) [1 uses])
(note 1514 1865 1515 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 1515 1514 1516 118 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":371 11 {*cmpsi_1}
     (nil))
(insn 1516 1515 1517 118 (set (reg:QI 0 ax [1555])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":371 678 {*setcc_qi}
     (nil))
(insn 1517 1516 1518 118 (set (reg:SI 0 ax [orig:1146 _1357 ] [1146])
        (zero_extend:SI (reg:QI 0 ax [1555]))) "CLDRAD.f":371 140 {*zero_extendqisi2}
     (nil))
(insn 1518 1517 1519 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1146 _1357 ] [1146])
            (const_int 0 [0]))) "CLDRAD.f":371 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1519 1518 1520 118 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4364)
            (pc))) "CLDRAD.f":371 682 {*jcc}
     (nil)
 -> 4364)
;;  succ:       327
;;              119 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 119, loop depth 0, maybe hot
;;  prev block 118, next block 120, flags: (RTL, MODIFIED)
;;  pred:       118 (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 381 382 383 384 385 1147 1556 1557 1558 1559 1560 1561
(note 1520 1519 1521 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 1521 1520 1522 119 (set (reg:SI 0 ax [1556])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":372 86 {*movsi_internal}
     (nil))
(insn 1522 1521 1523 119 (set (reg:DI 0 ax [orig:381 _295 ] [381])
        (sign_extend:DI (reg:SI 0 ax [1556]))) "CLDRAD.f":372 149 {*extendsidi2_rex64}
     (nil))
(insn 1523 1522 1524 119 (parallel [
            (set (reg:DI 1 dx [orig:382 _296 ] [382])
                (mult:DI (reg:DI 0 ax [orig:381 _295 ] [381])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":372 349 {*muldi3_1}
     (nil))
(insn 1524 1523 1525 119 (set (reg:SI 0 ax [1557])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":372 86 {*movsi_internal}
     (nil))
(insn 1525 1524 1526 119 (set (reg:DI 0 ax [orig:383 _297 ] [383])
        (sign_extend:DI (reg:SI 0 ax [1557]))) "CLDRAD.f":372 149 {*extendsidi2_rex64}
     (nil))
(insn 1526 1525 1527 119 (parallel [
            (set (reg:DI 0 ax [orig:384 _298 ] [384])
                (plus:DI (reg:DI 0 ax [orig:383 _297 ] [383])
                    (reg:DI 1 dx [orig:382 _296 ] [382])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":372 222 {*adddi_1}
     (nil))
(insn 1527 1526 1528 119 (parallel [
            (set (reg:DI 1 dx [orig:385 _299 ] [385])
                (plus:DI (reg:DI 0 ax [orig:384 _298 ] [384])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":372 222 {*adddi_1}
     (nil))
(insn 1528 1527 1529 119 (set (reg/f:DI 0 ax [1558])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f20392b7bd0 loops>)) "CLDRAD.f":372 85 {*movdi_internal}
     (nil))
(insn 1529 1528 1530 119 (parallel [
            (set (reg:DI 1 dx [1559])
                (plus:DI (reg:DI 1 dx [orig:385 _299 ] [385])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":372 222 {*adddi_1}
     (nil))
(insn 1530 1529 1531 119 (set (reg:SI 0 ax [1560])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1559])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1558])) [2 loops.lmh S4 A32])) "CLDRAD.f":372 86 {*movsi_internal}
     (nil))
(insn 1531 1530 1532 119 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [2 llmh+0 S4 A32])
        (reg:SI 0 ax [1560])) "CLDRAD.f":372 86 {*movsi_internal}
     (nil))
(insn 1532 1531 1533 119 (set (reg:SF 21 xmm0 [1561])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":373 131 {*movsf_internal}
     (nil))
(insn 1533 1532 1534 119 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])
        (reg:SF 21 xmm0 [1561])) "CLDRAD.f":373 131 {*movsf_internal}
     (nil))
(insn 1534 1533 1535 119 (set (reg:SI 0 ax [orig:1147 _1360 ] [1147])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [2 llmh+0 S4 A32])) "CLDRAD.f":374 86 {*movsi_internal}
     (nil))
(insn 1535 1534 1617 119 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
        (reg:SI 0 ax [orig:1147 _1360 ] [1147])) "CLDRAD.f":374 86 {*movsi_internal}
     (nil))
;;  succ:       120 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 120, loop depth 0, maybe hot
;;  prev block 119, next block 121, flags: (RTL, MODIFIED)
;;  pred:       119 (FALLTHRU)
;;              126 [always] 
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1148 1562
(code_label 1617 1535 1536 120 79 (nil) [1 uses])
(note 1536 1617 1537 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 1537 1536 1538 120 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":374 7 {*cmpsi_ccno_1}
     (nil))
(insn 1538 1537 1539 120 (set (reg:QI 0 ax [1562])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":374 678 {*setcc_qi}
     (nil))
(insn 1539 1538 1540 120 (set (reg:SI 0 ax [orig:1148 _1362 ] [1148])
        (zero_extend:SI (reg:QI 0 ax [1562]))) "CLDRAD.f":374 140 {*zero_extendqisi2}
     (nil))
(insn 1540 1539 1541 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1148 _1362 ] [1148])
            (const_int 0 [0]))) "CLDRAD.f":374 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1541 1540 1542 120 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4367)
            (pc))) "CLDRAD.f":374 682 {*jcc}
     (nil)
 -> 4367)
;;  succ:       328
;;              121 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 121, loop depth 0, maybe hot
;;  prev block 120, next block 122, flags: (RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 386 387 388 389 390 391 392 393 394 1563 1564 1565 1566
(note 1542 1541 1543 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 1543 1542 1544 121 (set (reg:SI 0 ax [1563])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])) "CLDRAD.f":382 86 {*movsi_internal}
     (nil))
(insn 1544 1543 1545 121 (set (reg:DI 0 ax [orig:386 _300 ] [386])
        (sign_extend:DI (reg:SI 0 ax [1563]))) "CLDRAD.f":382 149 {*extendsidi2_rex64}
     (nil))
(insn 1545 1544 1546 121 (parallel [
            (set (reg:DI 1 dx [orig:387 _301 ] [387])
                (mult:DI (reg:DI 0 ax [orig:386 _300 ] [386])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 349 {*muldi3_1}
     (nil))
(insn 1546 1545 1547 121 (set (reg:SI 0 ax [1564])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":382 86 {*movsi_internal}
     (nil))
(insn 1547 1546 1548 121 (set (reg:DI 0 ax [orig:388 _302 ] [388])
        (sign_extend:DI (reg:SI 0 ax [1564]))) "CLDRAD.f":382 149 {*extendsidi2_rex64}
     (nil))
(insn 1548 1547 1549 121 (parallel [
            (set (reg:DI 0 ax [orig:389 _303 ] [389])
                (mult:DI (reg:DI 0 ax [orig:388 _302 ] [388])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 349 {*muldi3_1}
     (nil))
(insn 1549 1548 1550 121 (parallel [
            (set (reg:DI 1 dx [orig:390 _304 ] [390])
                (plus:DI (reg:DI 1 dx [orig:387 _301 ] [387])
                    (reg:DI 0 ax [orig:389 _303 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 222 {*adddi_1}
     (nil))
(insn 1550 1549 1551 121 (set (reg:SI 0 ax [1565])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":382 86 {*movsi_internal}
     (nil))
(insn 1551 1550 1552 121 (set (reg:DI 0 ax [orig:391 _305 ] [391])
        (sign_extend:DI (reg:SI 0 ax [1565]))) "CLDRAD.f":382 149 {*extendsidi2_rex64}
     (nil))
(insn 1552 1551 1553 121 (parallel [
            (set (reg:DI 0 ax [orig:392 _306 ] [392])
                (plus:DI (reg:DI 0 ax [orig:391 _305 ] [391])
                    (reg:DI 1 dx [orig:390 _304 ] [390])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 222 {*adddi_1}
     (nil))
(insn 1553 1552 1554 121 (parallel [
            (set (reg:DI 1 dx [orig:393 _307 ] [393])
                (plus:DI (reg:DI 0 ax [orig:392 _306 ] [392])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 222 {*adddi_1}
     (nil))
(insn 1554 1553 1555 121 (set (reg/f:DI 0 ax [1566])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f20392a8a20 cldwtr>)) "CLDRAD.f":382 85 {*movdi_internal}
     (nil))
(insn 1555 1554 1556 121 (set (reg:SF 21 xmm0 [orig:394 _308 ] [394])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:393 _307 ] [393])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1566])) [1 cldwtr.cwm S4 A32])) "CLDRAD.f":382 131 {*movsf_internal}
     (nil))
(insn 1556 1555 1557 121 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:394 _308 ] [394])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])) [1 climit+0 S4 A32]))) "CLDRAD.f":382 53 {*cmpisf}
     (nil))
(jump_insn 1557 1556 1561 121 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1614)
            (pc))) "CLDRAD.f":382 682 {*jcc}
     (nil)
 -> 1614)
;;  succ:       122 (FALLTHRU)
;;              126
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 122, loop depth 0, maybe hot
;;  prev block 121, next block 123, flags: (RTL, MODIFIED)
;;  pred:       121 (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 395 396 397 398 399 400 1567 1568 1569
(note 1561 1557 1562 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 1562 1561 1563 122 (set (reg:SI 0 ax [1567])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":382 86 {*movsi_internal}
     (nil))
(insn 1563 1562 1564 122 (set (reg:DI 0 ax [orig:395 _309 ] [395])
        (sign_extend:DI (reg:SI 0 ax [1567]))) "CLDRAD.f":382 149 {*extendsidi2_rex64}
     (nil))
(insn 1564 1563 1565 122 (parallel [
            (set (reg:DI 1 dx [orig:396 _310 ] [396])
                (mult:DI (reg:DI 0 ax [orig:395 _309 ] [395])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 349 {*muldi3_1}
     (nil))
(insn 1565 1564 1566 122 (set (reg:SI 0 ax [1568])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":382 86 {*movsi_internal}
     (nil))
(insn 1566 1565 1567 122 (set (reg:DI 0 ax [orig:397 _311 ] [397])
        (sign_extend:DI (reg:SI 0 ax [1568]))) "CLDRAD.f":382 149 {*extendsidi2_rex64}
     (nil))
(insn 1567 1566 1568 122 (parallel [
            (set (reg:DI 0 ax [orig:398 _312 ] [398])
                (plus:DI (reg:DI 0 ax [orig:397 _311 ] [397])
                    (reg:DI 1 dx [orig:396 _310 ] [396])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 222 {*adddi_1}
     (nil))
(insn 1568 1567 1569 122 (parallel [
            (set (reg:DI 1 dx [orig:399 _313 ] [399])
                (plus:DI (reg:DI 0 ax [orig:398 _312 ] [398])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 222 {*adddi_1}
     (nil))
(insn 1569 1568 1570 122 (set (reg/f:DI 0 ax [1569])
        (symbol_ref:DI ("need.4414") [flags 0x202]  <var_decl 0x7f2038edcbd0 need>)) "CLDRAD.f":382 85 {*movdi_internal}
     (nil))
(insn 1570 1569 1571 122 (set (reg:SI 0 ax [orig:400 _314 ] [400])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:399 _313 ] [399])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1569])) [7 need S4 A32])) "CLDRAD.f":382 86 {*movsi_internal}
     (nil))
(insn 1571 1570 1572 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:400 _314 ] [400])
            (const_int 0 [0]))) "CLDRAD.f":382 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1572 1571 1573 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1614)
            (pc))) "CLDRAD.f":382 682 {*jcc}
     (nil)
 -> 1614)
;;  succ:       123 (FALLTHRU)
;;              126
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 123, loop depth 0, maybe hot
;;  prev block 122, next block 124, flags: (RTL, MODIFIED)
;;  pred:       122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 401 402 403 404 405 406 1570 1571 1572 1573 1574
(note 1573 1572 1574 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 1574 1573 1575 123 (set (reg:SF 21 xmm0 [1570])
        (float:SF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32]))) "CLDRAD.f":383 203 {*floatsisf2_mixed}
     (nil))
(insn 1575 1574 1576 123 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])
        (reg:SF 21 xmm0 [1570])) "CLDRAD.f":383 131 {*movsf_internal}
     (nil))
(insn 1576 1575 1577 123 (set (reg:SI 0 ax [1571])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":384 86 {*movsi_internal}
     (nil))
(insn 1577 1576 1578 123 (set (reg:DI 0 ax [orig:401 _315 ] [401])
        (sign_extend:DI (reg:SI 0 ax [1571]))) "CLDRAD.f":384 149 {*extendsidi2_rex64}
     (nil))
(insn 1578 1577 1579 123 (parallel [
            (set (reg:DI 1 dx [orig:402 _316 ] [402])
                (mult:DI (reg:DI 0 ax [orig:401 _315 ] [401])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":384 349 {*muldi3_1}
     (nil))
(insn 1579 1578 1580 123 (set (reg:SI 0 ax [1572])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":384 86 {*movsi_internal}
     (nil))
(insn 1580 1579 1581 123 (set (reg:DI 0 ax [orig:403 _317 ] [403])
        (sign_extend:DI (reg:SI 0 ax [1572]))) "CLDRAD.f":384 149 {*extendsidi2_rex64}
     (nil))
(insn 1581 1580 1582 123 (parallel [
            (set (reg:DI 0 ax [orig:404 _318 ] [404])
                (plus:DI (reg:DI 0 ax [orig:403 _317 ] [403])
                    (reg:DI 1 dx [orig:402 _316 ] [402])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":384 222 {*adddi_1}
     (nil))
(insn 1582 1581 1583 123 (parallel [
            (set (reg:DI 1 dx [orig:405 _319 ] [405])
                (plus:DI (reg:DI 0 ax [orig:404 _318 ] [404])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":384 222 {*adddi_1}
     (nil))
(insn 1583 1582 1584 123 (set (reg/f:DI 0 ax [1573])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":384 85 {*movdi_internal}
     (nil))
(insn 1584 1583 1585 123 (parallel [
            (set (reg:DI 1 dx [1574])
                (plus:DI (reg:DI 1 dx [orig:405 _319 ] [405])
                    (const_int 297170 [0x488d2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":384 222 {*adddi_1}
     (nil))
(insn 1585 1584 1586 123 (set (reg:SF 21 xmm0 [orig:406 _320 ] [406])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1574])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1573])) [1 phys.hbot S4 A32])) "CLDRAD.f":384 131 {*movsf_internal}
     (nil))
(insn 1586 1585 1587 123 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:406 _320 ] [406])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32]))) "CLDRAD.f":384 53 {*cmpisf}
     (nil))
(jump_insn 1587 1586 1591 123 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1603)
            (pc))) "CLDRAD.f":384 682 {*jcc}
     (nil)
 -> 1603)
;;  succ:       124 (FALLTHRU)
;;              125
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 124, loop depth 0, maybe hot
;;  prev block 123, next block 125, flags: (RTL, MODIFIED)
;;  pred:       123 (FALLTHRU)
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 407 408 409 410 411 1575 1576 1577 1578 1579
(note 1591 1587 1592 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 1592 1591 1593 124 (set (reg:SI 0 ax [1575])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":385 86 {*movsi_internal}
     (nil))
(insn 1593 1592 1594 124 (set (reg:DI 0 ax [orig:407 _321 ] [407])
        (sign_extend:DI (reg:SI 0 ax [1575]))) "CLDRAD.f":385 149 {*extendsidi2_rex64}
     (nil))
(insn 1594 1593 1595 124 (parallel [
            (set (reg:DI 1 dx [orig:408 _322 ] [408])
                (mult:DI (reg:DI 0 ax [orig:407 _321 ] [407])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":385 349 {*muldi3_1}
     (nil))
(insn 1595 1594 1596 124 (set (reg:SI 0 ax [1576])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":385 86 {*movsi_internal}
     (nil))
(insn 1596 1595 1597 124 (set (reg:DI 0 ax [orig:409 _323 ] [409])
        (sign_extend:DI (reg:SI 0 ax [1576]))) "CLDRAD.f":385 149 {*extendsidi2_rex64}
     (nil))
(insn 1597 1596 1598 124 (parallel [
            (set (reg:DI 0 ax [orig:410 _324 ] [410])
                (plus:DI (reg:DI 0 ax [orig:409 _323 ] [409])
                    (reg:DI 1 dx [orig:408 _322 ] [408])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":385 222 {*adddi_1}
     (nil))
(insn 1598 1597 1599 124 (parallel [
            (set (reg:DI 1 dx [orig:411 _325 ] [411])
                (plus:DI (reg:DI 0 ax [orig:410 _324 ] [410])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":385 222 {*adddi_1}
     (nil))
(insn 1599 1598 1600 124 (set (reg/f:DI 0 ax [1577])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":385 85 {*movdi_internal}
     (nil))
(insn 1600 1599 1601 124 (parallel [
            (set (reg:DI 1 dx [1578])
                (plus:DI (reg:DI 1 dx [orig:411 _325 ] [411])
                    (const_int 297170 [0x488d2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":385 222 {*adddi_1}
     (nil))
(insn 1601 1600 1602 124 (set (reg:SF 21 xmm0 [1579])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1578])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1577])) [1 phys.hbot S4 A32])) "CLDRAD.f":385 131 {*movsf_internal}
     (nil))
(insn 1602 1601 1603 124 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])
        (reg:SF 21 xmm0 [1579])) "CLDRAD.f":385 131 {*movsf_internal}
     (nil))
;;  succ:       125 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 125, loop depth 0, maybe hot
;;  prev block 124, next block 126, flags: (RTL, MODIFIED)
;;  pred:       124 (FALLTHRU)
;;              123
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 412 413 414 415 416 1580 1581 1582
(code_label 1603 1602 1604 125 77 (nil) [1 uses])
(note 1604 1603 1605 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 1605 1604 1606 125 (set (reg:SI 0 ax [1580])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":387 86 {*movsi_internal}
     (nil))
(insn 1606 1605 1607 125 (set (reg:DI 0 ax [orig:412 _326 ] [412])
        (sign_extend:DI (reg:SI 0 ax [1580]))) "CLDRAD.f":387 149 {*extendsidi2_rex64}
     (nil))
(insn 1607 1606 1608 125 (parallel [
            (set (reg:DI 1 dx [orig:413 _327 ] [413])
                (mult:DI (reg:DI 0 ax [orig:412 _326 ] [412])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":387 349 {*muldi3_1}
     (nil))
(insn 1608 1607 1609 125 (set (reg:SI 0 ax [1581])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":387 86 {*movsi_internal}
     (nil))
(insn 1609 1608 1610 125 (set (reg:DI 0 ax [orig:414 _328 ] [414])
        (sign_extend:DI (reg:SI 0 ax [1581]))) "CLDRAD.f":387 149 {*extendsidi2_rex64}
     (nil))
(insn 1610 1609 1611 125 (parallel [
            (set (reg:DI 0 ax [orig:415 _329 ] [415])
                (plus:DI (reg:DI 0 ax [orig:414 _328 ] [414])
                    (reg:DI 1 dx [orig:413 _327 ] [413])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":387 222 {*adddi_1}
     (nil))
(insn 1611 1610 1612 125 (parallel [
            (set (reg:DI 1 dx [orig:416 _330 ] [416])
                (plus:DI (reg:DI 0 ax [orig:415 _329 ] [415])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":387 222 {*adddi_1}
     (nil))
(insn 1612 1611 1613 125 (set (reg/f:DI 0 ax [1582])
        (symbol_ref:DI ("need.4414") [flags 0x202]  <var_decl 0x7f2038edcbd0 need>)) "CLDRAD.f":387 85 {*movdi_internal}
     (nil))
(insn 1613 1612 1614 125 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:416 _330 ] [416])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1582])) [7 need S4 A32])
        (const_int 0 [0])) "CLDRAD.f":387 86 {*movsi_internal}
     (nil))
;;  succ:       126 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 126, loop depth 0, maybe hot
;;  prev block 125, next block 328, flags: (RTL, MODIFIED)
;;  pred:       125 (FALLTHRU)
;;              122
;;              121
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1614 1613 1615 126 75 (nil) [2 uses])
(note 1615 1614 1616 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 1616 1615 4207 126 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":374 221 {*addsi_1}
     (nil))
(jump_insn 4207 1616 4208 126 (set (pc)
        (label_ref 1617)) "CLDRAD.f":374 683 {jump}
     (nil)
 -> 1617)
;;  succ:       120 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

(barrier 4208 4207 4367)
;; basic block 328, loop depth 0, maybe hot
;;  prev block 126, next block 127, flags: (RTL, MODIFIED)
;;  pred:       120
;; bb 328 artificial_defs: { }
;; bb 328 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4367 4208 4366 328 250 (nil) [1 uses])
(note 4366 4367 4368 328 [bb 328] NOTE_INSN_BASIC_BLOCK)
(insn 4368 4366 1620 328 (const_int 0 [0]) "CLDRAD.f":382 718 {nop}
     (nil))
;;  succ:       127 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 127, loop depth 0, maybe hot
;;  prev block 328, next block 128, flags: (RTL, MODIFIED)
;;  pred:       328 [always]  (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1583
(code_label 1620 4368 1621 127 74 (nil) [0 uses])
(note 1621 1620 1622 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1622 1621 1623 127 (set (reg:SF 21 xmm0 [1583])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])) "CLDRAD.f":391 131 {*movsf_internal}
     (nil))
(insn 1623 1622 1624 127 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1583])
                    (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":391 54 {*cmpiusf}
     (nil))
(jump_insn 1624 1623 4106 127 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1654)
            (pc))) "CLDRAD.f":391 682 {*jcc}
     (nil)
 -> 1654)
;;  succ:       130
;;              128 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 128, loop depth 0, maybe hot
;;  prev block 127, next block 129, flags: (RTL, MODIFIED)
;;  pred:       127 (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1584
(note 4106 1624 1625 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 1625 4106 1626 128 (set (reg:SF 21 xmm0 [1584])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])) "CLDRAD.f":391 131 {*movsf_internal}
     (nil))
(insn 1626 1625 1627 128 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1584])
                    (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":391 54 {*cmpiusf}
     (nil))
(jump_insn 1627 1626 1631 128 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1654)
            (pc))) "CLDRAD.f":391 682 {*jcc}
     (nil)
 -> 1654)
;;  succ:       129 (FALLTHRU)
;;              130
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 129, loop depth 0, maybe hot
;;  prev block 128, next block 130, flags: (RTL, MODIFIED)
;;  pred:       128 (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 417 418 419 420 421 422 423 424 425 426 427 428 1585 1586 1587 1588 1589 1590
(note 1631 1627 1632 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1632 1631 1633 129 (set (reg:SI 0 ax [1585])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":392 86 {*movsi_internal}
     (nil))
(insn 1633 1632 1634 129 (set (reg:DI 0 ax [orig:417 _331 ] [417])
        (sign_extend:DI (reg:SI 0 ax [1585]))) "CLDRAD.f":392 149 {*extendsidi2_rex64}
     (nil))
(insn 1634 1633 1635 129 (parallel [
            (set (reg:DI 1 dx [orig:418 _332 ] [418])
                (mult:DI (reg:DI 0 ax [orig:417 _331 ] [417])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":392 349 {*muldi3_1}
     (nil))
(insn 1635 1634 1636 129 (set (reg:SI 0 ax [1586])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":392 86 {*movsi_internal}
     (nil))
(insn 1636 1635 1637 129 (set (reg:DI 0 ax [orig:419 _333 ] [419])
        (sign_extend:DI (reg:SI 0 ax [1586]))) "CLDRAD.f":392 149 {*extendsidi2_rex64}
     (nil))
(insn 1637 1636 1638 129 (parallel [
            (set (reg:DI 0 ax [orig:420 _334 ] [420])
                (plus:DI (reg:DI 0 ax [orig:419 _333 ] [419])
                    (reg:DI 1 dx [orig:418 _332 ] [418])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":392 222 {*adddi_1}
     (nil))
(insn 1638 1637 1639 129 (parallel [
            (set (reg:DI 1 dx [orig:421 _335 ] [421])
                (plus:DI (reg:DI 0 ax [orig:420 _334 ] [420])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":392 222 {*adddi_1}
     (nil))
(insn 1639 1638 1640 129 (set (reg:SF 21 xmm0 [orig:422 _336 ] [422])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1640 1639 1641 129 (set (reg/f:DI 0 ax [1587])
        (symbol_ref:DI ("cldbp.4367") [flags 0x202]  <var_decl 0x7f20392d76c0 cldbp>)) "CLDRAD.f":392 85 {*movdi_internal}
     (nil))
(insn 1641 1640 1642 129 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:421 _335 ] [421])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1587])) [1 cldbp S4 A32])
        (reg:SF 21 xmm0 [orig:422 _336 ] [422])) "CLDRAD.f":392 131 {*movsf_internal}
     (nil))
(insn 1642 1641 1643 129 (set (reg:SI 0 ax [1588])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":393 86 {*movsi_internal}
     (nil))
(insn 1643 1642 1644 129 (set (reg:DI 0 ax [orig:423 _337 ] [423])
        (sign_extend:DI (reg:SI 0 ax [1588]))) "CLDRAD.f":393 149 {*extendsidi2_rex64}
     (nil))
(insn 1644 1643 1645 129 (parallel [
            (set (reg:DI 1 dx [orig:424 _338 ] [424])
                (mult:DI (reg:DI 0 ax [orig:423 _337 ] [423])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":393 349 {*muldi3_1}
     (nil))
(insn 1645 1644 1646 129 (set (reg:SI 0 ax [1589])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":393 86 {*movsi_internal}
     (nil))
(insn 1646 1645 1647 129 (set (reg:DI 0 ax [orig:425 _339 ] [425])
        (sign_extend:DI (reg:SI 0 ax [1589]))) "CLDRAD.f":393 149 {*extendsidi2_rex64}
     (nil))
(insn 1647 1646 1648 129 (parallel [
            (set (reg:DI 0 ax [orig:426 _340 ] [426])
                (plus:DI (reg:DI 0 ax [orig:425 _339 ] [425])
                    (reg:DI 1 dx [orig:424 _338 ] [424])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":393 222 {*adddi_1}
     (nil))
(insn 1648 1647 1649 129 (parallel [
            (set (reg:DI 1 dx [orig:427 _341 ] [427])
                (plus:DI (reg:DI 0 ax [orig:426 _340 ] [426])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":393 222 {*adddi_1}
     (nil))
(insn 1649 1648 1650 129 (set (reg:SF 21 xmm0 [orig:428 _342 ] [428])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1650 1649 1651 129 (set (reg/f:DI 0 ax [1590])
        (symbol_ref:DI ("cldbz.4369") [flags 0x202]  <var_decl 0x7f20392d7750 cldbz>)) "CLDRAD.f":393 85 {*movdi_internal}
     (nil))
(insn 1651 1650 4209 129 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:427 _341 ] [427])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1590])) [1 cldbz S4 A32])
        (reg:SF 21 xmm0 [orig:428 _342 ] [428])) "CLDRAD.f":393 131 {*movsf_internal}
     (nil))
(jump_insn 4209 1651 4210 129 (set (pc)
        (label_ref 1862)) 683 {jump}
     (nil)
 -> 1862)
;;  succ:       134 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

(barrier 4210 4209 1654)
;; basic block 130, loop depth 0, maybe hot
;;  prev block 129, next block 131, flags: (RTL, MODIFIED)
;;  pred:       127
;;              128
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1591
(code_label 1654 4210 1655 130 80 (nil) [2 uses])
(note 1655 1654 1656 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1656 1655 1657 130 (set (reg:SF 21 xmm0 [1591])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])) "CLDRAD.f":394 131 {*movsf_internal}
     (nil))
(insn 1657 1656 1658 130 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1591])
                    (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":394 54 {*cmpiusf}
     (nil))
(jump_insn 1658 1657 4109 130 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1717)
            (pc))) "CLDRAD.f":394 682 {*jcc}
     (nil)
 -> 1717)
;;  succ:       133
;;              131 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 131, loop depth 0, maybe hot
;;  prev block 130, next block 132, flags: (RTL, MODIFIED)
;;  pred:       130 (FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1592
(note 4109 1658 1659 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 1659 4109 1660 131 (set (reg:SF 21 xmm0 [1592])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])) "CLDRAD.f":394 131 {*movsf_internal}
     (nil))
(insn 1660 1659 1661 131 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1592])
                    (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":394 54 {*cmpiusf}
     (nil))
(jump_insn 1661 1660 1665 131 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1717)
            (pc))) "CLDRAD.f":394 682 {*jcc}
     (nil)
 -> 1717)
;;  succ:       132 (FALLTHRU)
;;              133
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 132, loop depth 0, maybe hot
;;  prev block 131, next block 133, flags: (RTL, MODIFIED)
;;  pred:       131 (FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 1593 1594 1595 1596 1597 1598 1599 1600 1601 1602 1603 1604 1605 1606 1607 1608 1609 1610
(note 1665 1661 1666 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 1666 1665 1667 132 (set (reg:SF 21 xmm0 [1593])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])) "CLDRAD.f":395 131 {*movsf_internal}
     (nil))
(insn 1667 1666 1668 132 (set (reg:SI 0 ax [orig:429 _343 ] [429])
        (fix:SI (reg:SF 21 xmm0 [1593]))) "CLDRAD.f":395 174 {fix_truncsfsi_sse}
     (nil))
(insn 1668 1667 1669 132 (set (reg:DI 0 ax [orig:430 _344 ] [430])
        (sign_extend:DI (reg:SI 0 ax [orig:429 _343 ] [429]))) "CLDRAD.f":395 149 {*extendsidi2_rex64}
     (nil))
(insn 1669 1668 1670 132 (parallel [
            (set (reg:DI 1 dx [orig:431 _345 ] [431])
                (plus:DI (reg:DI 0 ax [orig:430 _344 ] [430])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 222 {*adddi_1}
     (nil))
(insn 1670 1669 1671 132 (set (reg/f:DI 0 ax [1594])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":395 85 {*movdi_internal}
     (nil))
(insn 1671 1670 1672 132 (parallel [
            (set (reg:DI 1 dx [1595])
                (plus:DI (reg:DI 1 dx [orig:431 _345 ] [431])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 222 {*adddi_1}
     (nil))
(insn 1672 1671 1673 132 (set (reg:SF 22 xmm1 [orig:432 _346 ] [432])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1595])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1594])) [1 phys.aeta1 S4 A32])) "CLDRAD.f":395 131 {*movsf_internal}
     (nil))
(insn 1673 1672 1674 132 (set (reg:SI 0 ax [1596])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":395 86 {*movsi_internal}
     (nil))
(insn 1674 1673 1675 132 (set (reg:DI 0 ax [orig:433 _347 ] [433])
        (sign_extend:DI (reg:SI 0 ax [1596]))) "CLDRAD.f":395 149 {*extendsidi2_rex64}
     (nil))
(insn 1675 1674 1676 132 (parallel [
            (set (reg:DI 1 dx [orig:434 _348 ] [434])
                (mult:DI (reg:DI 0 ax [orig:433 _347 ] [433])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 349 {*muldi3_1}
     (nil))
(insn 1676 1675 1677 132 (set (reg:SI 0 ax [1597])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":395 86 {*movsi_internal}
     (nil))
(insn 1677 1676 1678 132 (set (reg:DI 0 ax [orig:435 _349 ] [435])
        (sign_extend:DI (reg:SI 0 ax [1597]))) "CLDRAD.f":395 149 {*extendsidi2_rex64}
     (nil))
(insn 1678 1677 1679 132 (parallel [
            (set (reg:DI 0 ax [orig:436 _350 ] [436])
                (plus:DI (reg:DI 0 ax [orig:435 _349 ] [435])
                    (reg:DI 1 dx [orig:434 _348 ] [434])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 222 {*adddi_1}
     (nil))
(insn 1679 1678 1680 132 (parallel [
            (set (reg:DI 1 dx [orig:437 _351 ] [437])
                (plus:DI (reg:DI 0 ax [orig:436 _350 ] [436])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 222 {*adddi_1}
     (nil))
(insn 1680 1679 1681 132 (set (reg/f:DI 0 ax [1598])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":395 85 {*movdi_internal}
     (nil))
(insn 1681 1680 1682 132 (parallel [
            (set (reg:DI 1 dx [1599])
                (plus:DI (reg:DI 1 dx [orig:437 _351 ] [437])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 222 {*adddi_1}
     (nil))
(insn 1682 1681 1683 132 (set (reg:SF 21 xmm0 [orig:438 _352 ] [438])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1599])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1598])) [1 extra.pdsl S4 A32])) "CLDRAD.f":395 131 {*movsf_internal}
     (nil))
(insn 1683 1682 1684 132 (set (reg:SF 22 xmm1 [orig:439 _353 ] [439])
        (mult:SF (reg:SF 22 xmm1 [orig:432 _346 ] [432])
            (reg:SF 21 xmm0 [orig:438 _352 ] [438]))) "CLDRAD.f":395 838 {*fop_sf_comm}
     (nil))
(insn 1684 1683 1685 132 (set (reg/f:DI 0 ax [1600])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 1685 1684 1686 132 (set (reg:SF 21 xmm0 [orig:440 _354 ] [440])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1600])
                (const_int 4 [0x4])) [1 phys.pt1+0 S4 A32])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1686 1685 1687 132 (set (reg:SI 0 ax [1601])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":395 86 {*movsi_internal}
     (nil))
(insn 1687 1686 1688 132 (set (reg:DI 0 ax [orig:441 _355 ] [441])
        (sign_extend:DI (reg:SI 0 ax [1601]))) "CLDRAD.f":395 149 {*extendsidi2_rex64}
     (nil))
(insn 1688 1687 1689 132 (parallel [
            (set (reg:DI 1 dx [orig:442 _356 ] [442])
                (mult:DI (reg:DI 0 ax [orig:441 _355 ] [441])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 349 {*muldi3_1}
     (nil))
(insn 1689 1688 1690 132 (set (reg:SI 0 ax [1602])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":395 86 {*movsi_internal}
     (nil))
(insn 1690 1689 1691 132 (set (reg:DI 0 ax [orig:443 _357 ] [443])
        (sign_extend:DI (reg:SI 0 ax [1602]))) "CLDRAD.f":395 149 {*extendsidi2_rex64}
     (nil))
(insn 1691 1690 1692 132 (parallel [
            (set (reg:DI 0 ax [orig:444 _358 ] [444])
                (plus:DI (reg:DI 0 ax [orig:443 _357 ] [443])
                    (reg:DI 1 dx [orig:442 _356 ] [442])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 222 {*adddi_1}
     (nil))
(insn 1692 1691 1693 132 (parallel [
            (set (reg:DI 1 dx [orig:445 _359 ] [445])
                (plus:DI (reg:DI 0 ax [orig:444 _358 ] [444])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 222 {*adddi_1}
     (nil))
(insn 1693 1692 1694 132 (set (reg:SF 21 xmm0 [orig:446 _360 ] [446])
        (plus:SF (reg:SF 21 xmm0 [orig:440 _354 ] [440])
            (reg:SF 22 xmm1 [orig:439 _353 ] [439]))) "CLDRAD.f":395 838 {*fop_sf_comm}
     (nil))
(insn 1694 1693 1695 132 (set (reg/f:DI 0 ax [1603])
        (symbol_ref:DI ("cldbp.4367") [flags 0x202]  <var_decl 0x7f20392d76c0 cldbp>)) "CLDRAD.f":395 85 {*movdi_internal}
     (nil))
(insn 1695 1694 1696 132 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:445 _359 ] [445])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1603])) [1 cldbp S4 A32])
        (reg:SF 21 xmm0 [orig:446 _360 ] [446])) "CLDRAD.f":395 131 {*movsf_internal}
     (nil))
(insn 1696 1695 1697 132 (set (reg:SI 0 ax [1604])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":396 86 {*movsi_internal}
     (nil))
(insn 1697 1696 1698 132 (set (reg:DI 0 ax [orig:447 _361 ] [447])
        (sign_extend:DI (reg:SI 0 ax [1604]))) "CLDRAD.f":396 149 {*extendsidi2_rex64}
     (nil))
(insn 1698 1697 1699 132 (parallel [
            (set (reg:DI 1 dx [orig:448 _362 ] [448])
                (mult:DI (reg:DI 0 ax [orig:447 _361 ] [447])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":396 349 {*muldi3_1}
     (nil))
(insn 1699 1698 1700 132 (set (reg:SI 0 ax [1605])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":396 86 {*movsi_internal}
     (nil))
(insn 1700 1699 1701 132 (set (reg:DI 0 ax [orig:449 _363 ] [449])
        (sign_extend:DI (reg:SI 0 ax [1605]))) "CLDRAD.f":396 149 {*extendsidi2_rex64}
     (nil))
(insn 1701 1700 1702 132 (parallel [
            (set (reg:DI 0 ax [orig:450 _364 ] [450])
                (plus:DI (reg:DI 0 ax [orig:449 _363 ] [449])
                    (reg:DI 1 dx [orig:448 _362 ] [448])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":396 222 {*adddi_1}
     (nil))
(insn 1702 1701 1703 132 (parallel [
            (set (reg:DI 2 cx [orig:451 _365 ] [451])
                (plus:DI (reg:DI 0 ax [orig:450 _364 ] [450])
                    (const_int 1096227 [0x10ba23])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":396 222 {*adddi_1}
     (nil))
(insn 1703 1702 1704 132 (set (reg:SI 0 ax [1606])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":396 86 {*movsi_internal}
     (nil))
(insn 1704 1703 1705 132 (set (reg:DI 0 ax [orig:452 _366 ] [452])
        (sign_extend:DI (reg:SI 0 ax [1606]))) "CLDRAD.f":396 149 {*extendsidi2_rex64}
     (nil))
(insn 1705 1704 1706 132 (parallel [
            (set (reg:DI 1 dx [orig:453 _367 ] [453])
                (mult:DI (reg:DI 0 ax [orig:452 _366 ] [452])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":396 349 {*muldi3_1}
     (nil))
(insn 1706 1705 1707 132 (set (reg:SI 0 ax [1607])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":396 86 {*movsi_internal}
     (nil))
(insn 1707 1706 1708 132 (set (reg:DI 0 ax [orig:454 _368 ] [454])
        (sign_extend:DI (reg:SI 0 ax [1607]))) "CLDRAD.f":396 149 {*extendsidi2_rex64}
     (nil))
(insn 1708 1707 1709 132 (parallel [
            (set (reg:DI 0 ax [orig:455 _369 ] [455])
                (plus:DI (reg:DI 0 ax [orig:454 _368 ] [454])
                    (reg:DI 1 dx [orig:453 _367 ] [453])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":396 222 {*adddi_1}
     (nil))
(insn 1709 1708 1710 132 (parallel [
            (set (reg:DI 1 dx [orig:456 _370 ] [456])
                (plus:DI (reg:DI 0 ax [orig:455 _369 ] [455])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":396 222 {*adddi_1}
     (nil))
(insn 1710 1709 1711 132 (set (reg/f:DI 0 ax [1608])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":396 85 {*movdi_internal}
     (nil))
(insn 1711 1710 1712 132 (parallel [
            (set (reg:DI 2 cx [1609])
                (plus:DI (reg:DI 2 cx [orig:451 _365 ] [451])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":396 222 {*adddi_1}
     (nil))
(insn 1712 1711 1713 132 (set (reg:SF 21 xmm0 [orig:457 _371 ] [457])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1609])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1608])) [1 extra.zint S4 A32])) "CLDRAD.f":396 131 {*movsf_internal}
     (nil))
(insn 1713 1712 1714 132 (set (reg/f:DI 0 ax [1610])
        (symbol_ref:DI ("cldbz.4369") [flags 0x202]  <var_decl 0x7f20392d7750 cldbz>)) "CLDRAD.f":396 85 {*movdi_internal}
     (nil))
(insn 1714 1713 4211 132 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:456 _370 ] [456])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1610])) [1 cldbz S4 A32])
        (reg:SF 21 xmm0 [orig:457 _371 ] [457])) "CLDRAD.f":396 131 {*movsf_internal}
     (nil))
(jump_insn 4211 1714 4212 132 (set (pc)
        (label_ref 1862)) 683 {jump}
     (nil)
 -> 1862)
;;  succ:       134 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

(barrier 4212 4211 1717)
;; basic block 133, loop depth 0, maybe hot
;;  prev block 132, next block 134, flags: (RTL, MODIFIED)
;;  pred:       130
;;              131
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 1611 1612 1613 1614 1615 1616 1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 1649 1650 1651 1652 1653 1654 1655 1656
(code_label 1717 4212 1718 133 83 (nil) [2 uses])
(note 1718 1717 1719 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 1719 1718 1720 133 (set (reg:SF 21 xmm0 [1611])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])) "CLDRAD.f":398 131 {*movsf_internal}
     (nil))
(insn 1720 1719 1721 133 (set (reg:SI 0 ax [1612])
        (fix:SI (reg:SF 21 xmm0 [1611]))) "CLDRAD.f":398 174 {fix_truncsfsi_sse}
     (nil))
(insn 1721 1720 1722 133 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])
        (reg:SI 0 ax [1612])) "CLDRAD.f":398 86 {*movsi_internal}
     (nil))
(insn 1722 1721 1723 133 (set (reg:SI 0 ax [1613])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":399 86 {*movsi_internal}
     (nil))
(insn 1723 1722 1724 133 (set (reg:DI 0 ax [orig:458 _372 ] [458])
        (sign_extend:DI (reg:SI 0 ax [1613]))) "CLDRAD.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1724 1723 1725 133 (parallel [
            (set (reg:DI 1 dx [orig:459 _373 ] [459])
                (plus:DI (reg:DI 0 ax [orig:458 _372 ] [458])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 222 {*adddi_1}
     (nil))
(insn 1725 1724 1726 133 (set (reg/f:DI 0 ax [1614])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":399 85 {*movdi_internal}
     (nil))
(insn 1726 1725 1727 133 (parallel [
            (set (reg:DI 1 dx [1615])
                (plus:DI (reg:DI 1 dx [orig:459 _373 ] [459])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 222 {*adddi_1}
     (nil))
(insn 1727 1726 1728 133 (set (reg:SF 22 xmm1 [orig:460 _374 ] [460])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1615])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1614])) [1 phys.aeta1 S4 A32])) "CLDRAD.f":399 131 {*movsf_internal}
     (nil))
(insn 1728 1727 1729 133 (set (reg:SI 0 ax [1616])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":399 86 {*movsi_internal}
     (nil))
(insn 1729 1728 1730 133 (set (reg:DI 0 ax [orig:461 _375 ] [461])
        (sign_extend:DI (reg:SI 0 ax [1616]))) "CLDRAD.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1730 1729 1731 133 (parallel [
            (set (reg:DI 1 dx [orig:462 _376 ] [462])
                (mult:DI (reg:DI 0 ax [orig:461 _375 ] [461])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 349 {*muldi3_1}
     (nil))
(insn 1731 1730 1732 133 (set (reg:SI 0 ax [1617])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":399 86 {*movsi_internal}
     (nil))
(insn 1732 1731 1733 133 (set (reg:DI 0 ax [orig:463 _377 ] [463])
        (sign_extend:DI (reg:SI 0 ax [1617]))) "CLDRAD.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1733 1732 1734 133 (parallel [
            (set (reg:DI 0 ax [orig:464 _378 ] [464])
                (plus:DI (reg:DI 0 ax [orig:463 _377 ] [463])
                    (reg:DI 1 dx [orig:462 _376 ] [462])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 222 {*adddi_1}
     (nil))
(insn 1734 1733 1735 133 (parallel [
            (set (reg:DI 1 dx [orig:465 _379 ] [465])
                (plus:DI (reg:DI 0 ax [orig:464 _378 ] [464])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 222 {*adddi_1}
     (nil))
(insn 1735 1734 1736 133 (set (reg/f:DI 0 ax [1618])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":399 85 {*movdi_internal}
     (nil))
(insn 1736 1735 1737 133 (parallel [
            (set (reg:DI 1 dx [1619])
                (plus:DI (reg:DI 1 dx [orig:465 _379 ] [465])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 222 {*adddi_1}
     (nil))
(insn 1737 1736 1738 133 (set (reg:SF 21 xmm0 [orig:466 _380 ] [466])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1619])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1618])) [1 extra.pdsl S4 A32])) "CLDRAD.f":399 131 {*movsf_internal}
     (nil))
(insn 1738 1737 1739 133 (set (reg:SF 22 xmm1 [orig:467 _381 ] [467])
        (mult:SF (reg:SF 22 xmm1 [orig:460 _374 ] [460])
            (reg:SF 21 xmm0 [orig:466 _380 ] [466]))) "CLDRAD.f":399 838 {*fop_sf_comm}
     (nil))
(insn 1739 1738 1740 133 (set (reg/f:DI 0 ax [1620])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 1740 1739 1741 133 (set (reg:SF 21 xmm0 [orig:468 _382 ] [468])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1620])
                (const_int 4 [0x4])) [1 phys.pt1+0 S4 A32])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1741 1740 1742 133 (set (reg:SI 0 ax [1621])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":399 86 {*movsi_internal}
     (nil))
(insn 1742 1741 1743 133 (set (reg:DI 0 ax [orig:469 _383 ] [469])
        (sign_extend:DI (reg:SI 0 ax [1621]))) "CLDRAD.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1743 1742 1744 133 (parallel [
            (set (reg:DI 1 dx [orig:470 _384 ] [470])
                (mult:DI (reg:DI 0 ax [orig:469 _383 ] [469])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 349 {*muldi3_1}
     (nil))
(insn 1744 1743 1745 133 (set (reg:SI 0 ax [1622])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":399 86 {*movsi_internal}
     (nil))
(insn 1745 1744 1746 133 (set (reg:DI 0 ax [orig:471 _385 ] [471])
        (sign_extend:DI (reg:SI 0 ax [1622]))) "CLDRAD.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1746 1745 1747 133 (parallel [
            (set (reg:DI 0 ax [orig:472 _386 ] [472])
                (plus:DI (reg:DI 0 ax [orig:471 _385 ] [471])
                    (reg:DI 1 dx [orig:470 _384 ] [470])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 222 {*adddi_1}
     (nil))
(insn 1747 1746 1748 133 (parallel [
            (set (reg:DI 1 dx [orig:473 _387 ] [473])
                (plus:DI (reg:DI 0 ax [orig:472 _386 ] [472])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 222 {*adddi_1}
     (nil))
(insn 1748 1747 1749 133 (set (reg:SF 21 xmm0 [orig:474 _388 ] [474])
        (plus:SF (reg:SF 21 xmm0 [orig:468 _382 ] [468])
            (reg:SF 22 xmm1 [orig:467 _381 ] [467]))) "CLDRAD.f":399 838 {*fop_sf_comm}
     (nil))
(insn 1749 1748 1750 133 (set (reg/f:DI 0 ax [1623])
        (symbol_ref:DI ("cldbp.4367") [flags 0x202]  <var_decl 0x7f20392d76c0 cldbp>)) "CLDRAD.f":399 85 {*movdi_internal}
     (nil))
(insn 1750 1749 1751 133 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:473 _387 ] [473])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1623])) [1 cldbp S4 A32])
        (reg:SF 21 xmm0 [orig:474 _388 ] [474])) "CLDRAD.f":399 131 {*movsf_internal}
     (nil))
(insn 1751 1750 1752 133 (set (reg:SI 0 ax [1624])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1752 1751 1753 133 (parallel [
            (set (reg:SI 0 ax [orig:475 _389 ] [475])
                (plus:SI (reg:SI 0 ax [1624])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1753 1752 1754 133 (set (reg:DI 0 ax [orig:476 _390 ] [476])
        (sign_extend:DI (reg:SI 0 ax [orig:475 _389 ] [475]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1754 1753 1755 133 (parallel [
            (set (reg:DI 1 dx [orig:477 _391 ] [477])
                (mult:DI (reg:DI 0 ax [orig:476 _390 ] [476])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1755 1754 1756 133 (set (reg:SI 0 ax [1625])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1756 1755 1757 133 (set (reg:DI 0 ax [orig:478 _392 ] [478])
        (sign_extend:DI (reg:SI 0 ax [1625]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1757 1756 1758 133 (parallel [
            (set (reg:DI 0 ax [orig:479 _393 ] [479])
                (mult:DI (reg:DI 0 ax [orig:478 _392 ] [478])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1758 1757 1759 133 (parallel [
            (set (reg:DI 1 dx [orig:480 _394 ] [480])
                (plus:DI (reg:DI 1 dx [orig:477 _391 ] [477])
                    (reg:DI 0 ax [orig:479 _393 ] [479])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1759 1758 1760 133 (set (reg:SI 0 ax [1626])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1760 1759 1761 133 (set (reg:DI 0 ax [orig:481 _395 ] [481])
        (sign_extend:DI (reg:SI 0 ax [1626]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1761 1760 1762 133 (parallel [
            (set (reg:DI 0 ax [orig:482 _396 ] [482])
                (plus:DI (reg:DI 0 ax [orig:481 _395 ] [481])
                    (reg:DI 1 dx [orig:480 _394 ] [480])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1762 1761 1763 133 (parallel [
            (set (reg:DI 1 dx [orig:483 _397 ] [483])
                (plus:DI (reg:DI 0 ax [orig:482 _396 ] [482])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1763 1762 1764 133 (set (reg/f:DI 0 ax [1627])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f20392c13f0 masks>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1764 1763 1765 133 (parallel [
            (set (reg:DI 1 dx [1628])
                (plus:DI (reg:DI 1 dx [orig:483 _397 ] [483])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1765 1764 1766 133 (set (reg:SF 22 xmm1 [orig:484 _398 ] [484])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1628])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1627])) [1 masks.htm S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 1766 1765 1767 133 (set (reg:SI 0 ax [1629])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1767 1766 1768 133 (parallel [
            (set (reg:SI 0 ax [orig:485 _399 ] [485])
                (plus:SI (reg:SI 0 ax [1629])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1768 1767 1769 133 (set (reg:DI 0 ax [orig:486 _400 ] [486])
        (sign_extend:DI (reg:SI 0 ax [orig:485 _399 ] [485]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1769 1768 1770 133 (parallel [
            (set (reg:DI 1 dx [orig:487 _401 ] [487])
                (mult:DI (reg:DI 0 ax [orig:486 _400 ] [486])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1770 1769 1771 133 (set (reg:SI 0 ax [1630])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1771 1770 1772 133 (set (reg:DI 0 ax [orig:488 _402 ] [488])
        (sign_extend:DI (reg:SI 0 ax [1630]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1772 1771 1773 133 (parallel [
            (set (reg:DI 0 ax [orig:489 _403 ] [489])
                (mult:DI (reg:DI 0 ax [orig:488 _402 ] [488])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1773 1772 1774 133 (parallel [
            (set (reg:DI 1 dx [orig:490 _404 ] [490])
                (plus:DI (reg:DI 1 dx [orig:487 _401 ] [487])
                    (reg:DI 0 ax [orig:489 _403 ] [489])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1774 1773 1775 133 (set (reg:SI 0 ax [1631])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1775 1774 1776 133 (set (reg:DI 0 ax [orig:491 _405 ] [491])
        (sign_extend:DI (reg:SI 0 ax [1631]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1776 1775 1777 133 (parallel [
            (set (reg:DI 0 ax [orig:492 _406 ] [492])
                (plus:DI (reg:DI 0 ax [orig:491 _405 ] [491])
                    (reg:DI 1 dx [orig:490 _404 ] [490])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1777 1776 1778 133 (parallel [
            (set (reg:DI 1 dx [orig:493 _407 ] [493])
                (plus:DI (reg:DI 0 ax [orig:492 _406 ] [492])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1778 1777 1779 133 (set (reg/f:DI 0 ax [1632])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1779 1778 1780 133 (parallel [
            (set (reg:DI 1 dx [1633])
                (plus:DI (reg:DI 1 dx [orig:493 _407 ] [493])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1780 1779 1781 133 (set (reg:SF 21 xmm0 [orig:494 _408 ] [494])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1633])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1632])) [1 vrbls.t S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 1781 1780 1782 133 (set (reg:SF 21 xmm0 [orig:495 _409 ] [495])
        (mult:SF (reg:SF 21 xmm0 [orig:494 _408 ] [494])
            (reg:SF 22 xmm1 [orig:484 _398 ] [484]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 1782 1781 1783 133 (set (reg:SI 0 ax [1634])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1783 1782 1784 133 (parallel [
            (set (reg:SI 0 ax [orig:496 _410 ] [496])
                (plus:SI (reg:SI 0 ax [1634])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1784 1783 1785 133 (set (reg:DI 0 ax [orig:497 _411 ] [497])
        (sign_extend:DI (reg:SI 0 ax [orig:496 _410 ] [496]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1785 1784 1786 133 (parallel [
            (set (reg:DI 1 dx [orig:498 _412 ] [498])
                (mult:DI (reg:DI 0 ax [orig:497 _411 ] [497])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1786 1785 1787 133 (set (reg:SI 0 ax [1635])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1787 1786 1788 133 (set (reg:DI 0 ax [orig:499 _413 ] [499])
        (sign_extend:DI (reg:SI 0 ax [1635]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1788 1787 1789 133 (parallel [
            (set (reg:DI 0 ax [orig:500 _414 ] [500])
                (mult:DI (reg:DI 0 ax [orig:499 _413 ] [499])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1789 1788 1790 133 (parallel [
            (set (reg:DI 1 dx [orig:501 _415 ] [501])
                (plus:DI (reg:DI 1 dx [orig:498 _412 ] [498])
                    (reg:DI 0 ax [orig:500 _414 ] [500])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1790 1789 1791 133 (set (reg:SI 0 ax [1636])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1791 1790 1792 133 (set (reg:DI 0 ax [orig:502 _416 ] [502])
        (sign_extend:DI (reg:SI 0 ax [1636]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1792 1791 1793 133 (parallel [
            (set (reg:DI 0 ax [orig:503 _417 ] [503])
                (plus:DI (reg:DI 0 ax [orig:502 _416 ] [502])
                    (reg:DI 1 dx [orig:501 _415 ] [501])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1793 1792 1794 133 (parallel [
            (set (reg:DI 1 dx [orig:504 _418 ] [504])
                (plus:DI (reg:DI 0 ax [orig:503 _417 ] [503])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1794 1793 1795 133 (set (reg/f:DI 0 ax [1637])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1795 1794 1796 133 (parallel [
            (set (reg:DI 1 dx [1638])
                (plus:DI (reg:DI 1 dx [orig:504 _418 ] [504])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1796 1795 1797 133 (set (reg:SF 23 xmm2 [orig:505 _419 ] [505])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1638])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1637])) [1 vrbls.q S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 1797 1796 1798 133 (set (reg:SF 22 xmm1 [1639])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 1798 1797 1799 133 (set (reg:SF 23 xmm2 [orig:506 _420 ] [506])
        (mult:SF (reg:SF 23 xmm2 [orig:505 _419 ] [505])
            (reg:SF 22 xmm1 [1639]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 1799 1798 1800 133 (set (reg:SF 22 xmm1 [1640])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1800 1799 1802 133 (set (reg:SF 22 xmm1 [orig:507 _421 ] [507])
        (plus:SF (reg:SF 22 xmm1 [1640])
            (reg:SF 23 xmm2 [orig:506 _420 ] [506]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 1802 1800 1803 133 (set (reg:SF 22 xmm1 [orig:509 _423 ] [509])
        (mult:SF (reg:SF 22 xmm1 [orig:508 _422 ] [508])
            (reg:SF 21 xmm0 [orig:495 _409 ] [495]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 1803 1802 1804 133 (set (reg:SF 21 xmm0 [1641])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC21") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.92897968292236328125e+1 [0x0.ea5181p+5])
        (nil)))
(insn 1804 1803 4476 133 (set (reg:SF 22 xmm1 [orig:509 _423 ] [509])
        (mult:SF (reg:SF 22 xmm1 [orig:509 _423 ] [509])
            (reg:SF 21 xmm0 [1641]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 4476 1804 4518 133 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [22 %sfp+-164 S4 A32])
        (reg:SF 22 xmm1 [orig:509 _423 ] [509])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(note 4518 4476 1805 133 NOTE_INSN_DELETED)
(insn 1805 4518 1806 133 (set (reg:SI 0 ax [1642])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1806 1805 1807 133 (parallel [
            (set (reg:SI 0 ax [orig:511 _425 ] [511])
                (plus:SI (reg:SI 0 ax [1642])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1807 1806 1808 133 (set (reg:DI 0 ax [orig:512 _426 ] [512])
        (sign_extend:DI (reg:SI 0 ax [orig:511 _425 ] [511]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1808 1807 1809 133 (parallel [
            (set (reg:DI 1 dx [orig:513 _427 ] [513])
                (mult:DI (reg:DI 0 ax [orig:512 _426 ] [512])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1809 1808 1810 133 (set (reg:SI 0 ax [1643])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1810 1809 1811 133 (set (reg:DI 0 ax [orig:514 _428 ] [514])
        (sign_extend:DI (reg:SI 0 ax [1643]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1811 1810 1812 133 (parallel [
            (set (reg:DI 0 ax [orig:515 _429 ] [515])
                (mult:DI (reg:DI 0 ax [orig:514 _428 ] [514])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1812 1811 1813 133 (parallel [
            (set (reg:DI 1 dx [orig:516 _430 ] [516])
                (plus:DI (reg:DI 1 dx [orig:513 _427 ] [513])
                    (reg:DI 0 ax [orig:515 _429 ] [515])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1813 1812 1814 133 (set (reg:SI 0 ax [1644])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1814 1813 1815 133 (set (reg:DI 0 ax [orig:517 _431 ] [517])
        (sign_extend:DI (reg:SI 0 ax [1644]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1815 1814 1816 133 (parallel [
            (set (reg:DI 0 ax [orig:518 _432 ] [518])
                (plus:DI (reg:DI 0 ax [orig:517 _431 ] [517])
                    (reg:DI 1 dx [orig:516 _430 ] [516])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1816 1815 1817 133 (parallel [
            (set (reg:DI 1 dx [orig:519 _433 ] [519])
                (plus:DI (reg:DI 0 ax [orig:518 _432 ] [518])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1817 1816 1818 133 (set (reg/f:DI 0 ax [1645])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1818 1817 1820 133 (set (reg:SF 21 xmm0 [orig:520 _434 ] [520])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:519 _433 ] [519])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1645])) [1 extra.pint S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(call_insn/u 1820 1818 1821 133 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2039116900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CLDRAD.f":403 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 1821 1820 4517 133 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [22 %sfp+-168 S4 A32])
        (reg:SF 21 xmm0)) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(note 4517 1821 1822 133 NOTE_INSN_DELETED)
(insn 1822 4517 1823 133 (set (reg:SI 0 ax [1646])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1823 1822 1824 133 (set (reg:DI 0 ax [orig:522 _436 ] [522])
        (sign_extend:DI (reg:SI 0 ax [1646]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1824 1823 1825 133 (parallel [
            (set (reg:DI 1 dx [orig:523 _437 ] [523])
                (mult:DI (reg:DI 0 ax [orig:522 _436 ] [522])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1825 1824 1826 133 (set (reg:SI 0 ax [1647])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1826 1825 1827 133 (set (reg:DI 0 ax [orig:524 _438 ] [524])
        (sign_extend:DI (reg:SI 0 ax [1647]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1827 1826 1828 133 (parallel [
            (set (reg:DI 0 ax [orig:525 _439 ] [525])
                (plus:DI (reg:DI 0 ax [orig:524 _438 ] [524])
                    (reg:DI 1 dx [orig:523 _437 ] [523])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1828 1827 1829 133 (parallel [
            (set (reg:DI 1 dx [orig:526 _440 ] [526])
                (plus:DI (reg:DI 0 ax [orig:525 _439 ] [525])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1829 1828 1830 133 (set (reg/f:DI 0 ax [1648])
        (symbol_ref:DI ("cldbp.4367") [flags 0x202]  <var_decl 0x7f20392d76c0 cldbp>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1830 1829 1832 133 (set (reg:SF 21 xmm0 [orig:527 _441 ] [527])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:526 _440 ] [526])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1648])) [1 cldbp S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(call_insn/u 1832 1830 4477 133 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2039116900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CLDRAD.f":403 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 4477 1832 1834 133 (set (reg:SF 24 xmm3 [orig:521 _435 ] [521])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [22 %sfp+-168 S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 1834 4477 4478 133 (set (reg:SF 24 xmm3 [orig:521 _435 ] [521])
        (minus:SF (reg:SF 24 xmm3 [orig:521 _435 ] [521])
            (reg:SF 21 xmm0 [orig:528 _442 ] [528]))) "CLDRAD.f":403 841 {*fop_sf_1}
     (nil))
(insn 4478 1834 4479 133 (set (reg:SF 21 xmm0 [orig:529 _443 ] [529])
        (reg:SF 24 xmm3 [orig:521 _435 ] [521])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 4479 4478 1836 133 (set (reg:SF 22 xmm1 [orig:510 _424 ] [510])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [22 %sfp+-164 S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 1836 4479 1837 133 (set (reg:SF 22 xmm1 [orig:510 _424 ] [510])
        (mult:SF (reg:SF 22 xmm1 [orig:510 _424 ] [510])
            (reg:SF 21 xmm0 [orig:530 _444 ] [530]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 1837 1836 1838 133 (set (reg:SI 0 ax [1649])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1838 1837 1839 133 (parallel [
            (set (reg:SI 0 ax [orig:532 _446 ] [532])
                (plus:SI (reg:SI 0 ax [1649])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1839 1838 1840 133 (set (reg:DI 0 ax [orig:533 _447 ] [533])
        (sign_extend:DI (reg:SI 0 ax [orig:532 _446 ] [532]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1840 1839 1841 133 (parallel [
            (set (reg:DI 1 dx [orig:534 _448 ] [534])
                (mult:DI (reg:DI 0 ax [orig:533 _447 ] [533])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1841 1840 1842 133 (set (reg:SI 0 ax [1650])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1842 1841 1843 133 (set (reg:DI 0 ax [orig:535 _449 ] [535])
        (sign_extend:DI (reg:SI 0 ax [1650]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1843 1842 1844 133 (parallel [
            (set (reg:DI 0 ax [orig:536 _450 ] [536])
                (mult:DI (reg:DI 0 ax [orig:535 _449 ] [535])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1844 1843 1845 133 (parallel [
            (set (reg:DI 1 dx [orig:537 _451 ] [537])
                (plus:DI (reg:DI 1 dx [orig:534 _448 ] [534])
                    (reg:DI 0 ax [orig:536 _450 ] [536])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1845 1844 1846 133 (set (reg:SI 0 ax [1651])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1846 1845 1847 133 (set (reg:DI 0 ax [orig:538 _452 ] [538])
        (sign_extend:DI (reg:SI 0 ax [1651]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1847 1846 1848 133 (parallel [
            (set (reg:DI 0 ax [orig:539 _453 ] [539])
                (plus:DI (reg:DI 0 ax [orig:538 _452 ] [538])
                    (reg:DI 1 dx [orig:537 _451 ] [537])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1848 1847 1849 133 (parallel [
            (set (reg:DI 1 dx [orig:540 _454 ] [540])
                (plus:DI (reg:DI 0 ax [orig:539 _453 ] [539])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1849 1848 1850 133 (set (reg/f:DI 0 ax [1652])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1850 1849 1851 133 (parallel [
            (set (reg:DI 1 dx [1653])
                (plus:DI (reg:DI 1 dx [orig:540 _454 ] [540])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1851 1850 1852 133 (set (reg:SF 21 xmm0 [orig:541 _455 ] [541])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1653])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1652])) [1 extra.zint S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 1852 1851 1853 133 (set (reg:SI 0 ax [1654])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1853 1852 1854 133 (set (reg:DI 0 ax [orig:542 _456 ] [542])
        (sign_extend:DI (reg:SI 0 ax [1654]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1854 1853 1855 133 (parallel [
            (set (reg:DI 1 dx [orig:543 _457 ] [543])
                (mult:DI (reg:DI 0 ax [orig:542 _456 ] [542])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1855 1854 1856 133 (set (reg:SI 0 ax [1655])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1856 1855 1857 133 (set (reg:DI 0 ax [orig:544 _458 ] [544])
        (sign_extend:DI (reg:SI 0 ax [1655]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1857 1856 1858 133 (parallel [
            (set (reg:DI 0 ax [orig:545 _459 ] [545])
                (plus:DI (reg:DI 0 ax [orig:544 _458 ] [544])
                    (reg:DI 1 dx [orig:543 _457 ] [543])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1858 1857 1859 133 (parallel [
            (set (reg:DI 1 dx [orig:546 _460 ] [546])
                (plus:DI (reg:DI 0 ax [orig:545 _459 ] [545])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1859 1858 1860 133 (set (reg:SF 21 xmm0 [orig:547 _461 ] [547])
        (plus:SF (reg:SF 21 xmm0 [orig:541 _455 ] [541])
            (reg:SF 22 xmm1 [orig:531 _445 ] [531]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 1860 1859 1861 133 (set (reg/f:DI 0 ax [1656])
        (symbol_ref:DI ("cldbz.4369") [flags 0x202]  <var_decl 0x7f20392d7750 cldbz>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1861 1860 1862 133 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:546 _460 ] [546])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1656])) [1 cldbz S4 A32])
        (reg:SF 21 xmm0 [orig:547 _461 ] [547])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
;;  succ:       134 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 134, loop depth 0, maybe hot
;;  prev block 133, next block 327, flags: (RTL, MODIFIED)
;;  pred:       133 (FALLTHRU)
;;              129 [always] 
;;              132 [always] 
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1862 1861 1863 134 82 (nil) [2 uses])
(note 1863 1862 1864 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1864 1863 4213 134 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":371 221 {*addsi_1}
     (nil))
(jump_insn 4213 1864 4214 134 (set (pc)
        (label_ref 1865)) "CLDRAD.f":371 683 {jump}
     (nil)
 -> 1865)
;;  succ:       118 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

(barrier 4214 4213 4364)
;; basic block 327, loop depth 0, maybe hot
;;  prev block 134, next block 135, flags: (RTL, MODIFIED)
;;  pred:       118
;; bb 327 artificial_defs: { }
;; bb 327 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4364 4214 4363 327 249 (nil) [1 uses])
(note 4363 4364 4365 327 [bb 327] NOTE_INSN_BASIC_BLOCK)
(insn 4365 4363 1868 327 (const_int 0 [0]) "CLDRAD.f":391 718 {nop}
     (nil))
;;  succ:       135 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

;; basic block 135, loop depth 0, maybe hot
;;  prev block 327, next block 326, flags: (RTL, MODIFIED)
;;  pred:       327 [always]  (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1868 4365 1869 135 73 (nil) [0 uses])
(note 1869 1868 1870 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1870 1869 4215 135 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":370 221 {*addsi_1}
     (nil))
(jump_insn 4215 1870 4216 135 (set (pc)
        (label_ref 1871)) "CLDRAD.f":370 683 {jump}
     (nil)
 -> 1871)
;;  succ:       116 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1144

(barrier 4216 4215 4361)
;; basic block 326, loop depth 0, maybe hot
;;  prev block 135, next block 136, flags: (RTL, MODIFIED)
;;  pred:       116
;; bb 326 artificial_defs: { }
;; bb 326 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4361 4216 4360 326 248 (nil) [1 uses])
(note 4360 4361 4362 326 [bb 326] NOTE_INSN_BASIC_BLOCK)
(insn 4362 4360 1874 326 (const_int 0 [0]) "CLDRAD.f":371 718 {nop}
     (nil))
;;  succ:       136 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 136, loop depth 0, maybe hot
;;  prev block 326, next block 137, flags: (RTL, MODIFIED)
;;  pred:       326 [always]  (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 548
(code_label 1874 4362 1875 136 72 (nil) [0 uses])
(note 1875 1874 1876 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1876 1875 1877 136 (set (reg:SI 0 ax [orig:548 _462 ] [548])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 604 [0x25c]))) [2 rqstfld.iget+588 S4 A32])) "CLDRAD.f":408 86 {*movsi_internal}
     (nil))
(insn 1877 1876 1878 136 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:548 _462 ] [548])
            (const_int 0 [0]))) "CLDRAD.f":408 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1878 1877 1879 136 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1923)
            (pc))) "CLDRAD.f":408 682 {*jcc}
     (nil)
 -> 1923)
;;  succ:       137 (FALLTHRU)
;;              138
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 137, loop depth 0, maybe hot
;;  prev block 136, next block 138, flags: (RTL, MODIFIED)
;;  pred:       136 (FALLTHRU)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 549 550 551 552 553 1657 1658 1659 1660 1661 1662 1663 1664 1665 1666 1667 1668 1669
(note 1879 1878 1880 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1880 1879 1881 137 (set (reg:DI 1 dx [1657])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1881 1880 1882 137 (set (reg:DI 0 ax [1658])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1882 1881 1883 137 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":409 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1883 1882 1884 137 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":409 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1884 1883 1885 137 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1657])) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1885 1884 1886 137 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1658])) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1886 1885 1887 137 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1887 1886 1888 137 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cldbp.4367") [flags 0x202]  <var_decl 0x7f20392d76c0 cldbp>)) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1888 1887 1889 137 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1889 1888 1890 137 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f2038fb4870 *.LC22>)) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1890 1889 1891 137 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":409 88 {*movqi_internal}
     (nil))
(call_insn 1891 1890 1892 137 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":409 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1892 1891 1893 137 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":409 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1893 1892 1894 137 (set (reg/f:DI 1 dx [1659])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":410 85 {*movdi_internal}
     (nil))
(insn 1894 1893 1895 137 (set (reg:DI 0 ax [1660])
        (const_int 0 [0])) "CLDRAD.f":410 85 {*movdi_internal}
     (nil))
(insn 1895 1894 4481 137 (set (reg:DI 2 cx [1661])
        (const_int 12 [0xc])) "CLDRAD.f":410 85 {*movdi_internal}
     (nil))
(insn 4481 1895 1896 137 (set (reg/f:DI 5 di [1659])
        (reg/f:DI 1 dx [1659])) "CLDRAD.f":410 85 {*movdi_internal}
     (nil))
(insn 1896 4481 4482 137 (parallel [
            (set (reg:DI 2 cx [1661])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1659])
                (plus:DI (ashift:DI (reg:DI 2 cx [1661])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1659])))
            (set (mem/c:BLK (reg/f:DI 5 di [1659]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1660]))
            (use (reg:DI 2 cx [1661]))
        ]) "CLDRAD.f":410 984 {*rep_stosdi_rex64}
     (nil))
(insn 4482 1896 1897 137 (set (reg/f:DI 1 dx [1659])
        (reg/f:DI 5 di [1659])) "CLDRAD.f":410 85 {*movdi_internal}
     (nil))
(insn 1897 4482 1898 137 (set (mem/c:SI (reg/f:DI 1 dx [1659]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1660])) "CLDRAD.f":410 86 {*movsi_internal}
     (nil))
(insn 1898 1897 1899 137 (parallel [
            (set (reg/f:DI 1 dx [1659])
                (plus:DI (reg/f:DI 1 dx [1659])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":410 222 {*adddi_1}
     (nil))
(insn 1899 1898 1900 137 (set (reg:SI 0 ax [orig:549 _463 ] [549])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 604 [0x25c]))) [2 rqstfld.iget+588 S4 A32])) "CLDRAD.f":412 86 {*movsi_internal}
     (nil))
(insn 1900 1899 1901 137 (set (reg:DI 0 ax [orig:550 _464 ] [550])
        (sign_extend:DI (reg:SI 0 ax [orig:549 _463 ] [549]))) "CLDRAD.f":412 149 {*extendsidi2_rex64}
     (nil))
(insn 1901 1900 1902 137 (parallel [
            (set (reg:DI 1 dx [orig:551 _465 ] [551])
                (plus:DI (reg:DI 0 ax [orig:550 _464 ] [550])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":412 222 {*adddi_1}
     (nil))
(insn 1902 1901 1903 137 (set (reg:DI 0 ax [1662])
        (reg:DI 1 dx [orig:551 _465 ] [551])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1903 1902 1905 137 (parallel [
            (set (reg:DI 0 ax [1663])
                (ashift:DI (reg:DI 0 ax [1662])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":412 551 {*ashldi3_1}
     (nil))
(insn 1905 1903 1906 137 (parallel [
            (set (reg:DI 0 ax [1662])
                (minus:DI (reg:DI 0 ax [1662])
                    (reg:DI 1 dx [orig:551 _465 ] [551])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":412 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:551 _465 ] [551])
            (const_int 15 [0xf]))
        (nil)))
(insn 1906 1905 1909 137 (parallel [
            (set (reg:DI 0 ax [1664])
                (ashift:DI (reg:DI 0 ax [1662])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":412 551 {*ashldi3_1}
     (nil))
(insn 1909 1906 1910 137 (parallel [
            (set (reg:DI 0 ax [1665])
                (plus:DI (reg:DI 0 ax [orig:552 _466 ] [552])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":412 222 {*adddi_1}
     (nil))
(insn 1910 1909 1911 137 (parallel [
            (set (reg:DI 0 ax [1666])
                (ashift:DI (reg:DI 0 ax [1665])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":412 551 {*ashldi3_1}
     (nil))
(insn 1911 1910 1912 137 (parallel [
            (set (reg/f:DI 1 dx [orig:553 _467 ] [553])
                (plus:DI (reg:DI 0 ax [1666])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":412 222 {*adddi_1}
     (nil))
(insn 1912 1911 1913 137 (set (reg:DI 4 si [1667])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1913 1912 1914 137 (set (reg:DI 2 cx [1668])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1914 1913 1915 137 (set (reg:DI 0 ax [1669])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1915 1914 1916 137 (set (reg:DI 38 r9)
        (reg:DI 4 si [1667])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1916 1915 1917 137 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1668])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1917 1916 1919 137 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1669])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1919 1917 1920 137 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 604 [0x25c])))) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1920 1919 1921 137 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1921 1920 1922 137 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":412 88 {*movqi_internal}
     (nil))
(call_insn 1922 1921 1923 137 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":412 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       138 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 138, loop depth 0, maybe hot
;;  prev block 137, next block 139, flags: (RTL, MODIFIED)
;;  pred:       136
;;              137 (FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 554
(code_label 1923 1922 1924 138 87 (nil) [1 uses])
(note 1924 1923 1925 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1925 1924 1926 138 (set (reg:SI 0 ax [orig:554 _468 ] [554])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 724 [0x2d4]))) [2 rqstfld.iget+708 S4 A32])) "CLDRAD.f":416 86 {*movsi_internal}
     (nil))
(insn 1926 1925 1927 138 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:554 _468 ] [554])
            (const_int 0 [0]))) "CLDRAD.f":416 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1927 1926 1928 138 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1972)
            (pc))) "CLDRAD.f":416 682 {*jcc}
     (nil)
 -> 1972)
;;  succ:       139 (FALLTHRU)
;;              140
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 139, loop depth 0, maybe hot
;;  prev block 138, next block 140, flags: (RTL, MODIFIED)
;;  pred:       138 (FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 555 556 557 558 559 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 1681 1682
(note 1928 1927 1929 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1929 1928 1930 139 (set (reg:DI 1 dx [1670])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1930 1929 1931 139 (set (reg:DI 0 ax [1671])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1931 1930 1932 139 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":417 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1932 1931 1933 139 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":417 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1933 1932 1934 139 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1670])) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1934 1933 1935 139 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1671])) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1935 1934 1936 139 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1936 1935 1937 139 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cldbz.4369") [flags 0x202]  <var_decl 0x7f20392d7750 cldbz>)) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1937 1936 1938 139 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1938 1937 1939 139 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f2038fb4870 *.LC22>)) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1939 1938 1940 139 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":417 88 {*movqi_internal}
     (nil))
(call_insn 1940 1939 1941 139 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":417 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1941 1940 1942 139 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":417 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1942 1941 1943 139 (set (reg/f:DI 1 dx [1672])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":418 85 {*movdi_internal}
     (nil))
(insn 1943 1942 1944 139 (set (reg:DI 0 ax [1673])
        (const_int 0 [0])) "CLDRAD.f":418 85 {*movdi_internal}
     (nil))
(insn 1944 1943 4483 139 (set (reg:DI 2 cx [1674])
        (const_int 12 [0xc])) "CLDRAD.f":418 85 {*movdi_internal}
     (nil))
(insn 4483 1944 1945 139 (set (reg/f:DI 5 di [1672])
        (reg/f:DI 1 dx [1672])) "CLDRAD.f":418 85 {*movdi_internal}
     (nil))
(insn 1945 4483 4484 139 (parallel [
            (set (reg:DI 2 cx [1674])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1672])
                (plus:DI (ashift:DI (reg:DI 2 cx [1674])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1672])))
            (set (mem/c:BLK (reg/f:DI 5 di [1672]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1673]))
            (use (reg:DI 2 cx [1674]))
        ]) "CLDRAD.f":418 984 {*rep_stosdi_rex64}
     (nil))
(insn 4484 1945 1946 139 (set (reg/f:DI 1 dx [1672])
        (reg/f:DI 5 di [1672])) "CLDRAD.f":418 85 {*movdi_internal}
     (nil))
(insn 1946 4484 1947 139 (set (mem/c:SI (reg/f:DI 1 dx [1672]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1673])) "CLDRAD.f":418 86 {*movsi_internal}
     (nil))
(insn 1947 1946 1948 139 (parallel [
            (set (reg/f:DI 1 dx [1672])
                (plus:DI (reg/f:DI 1 dx [1672])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":418 222 {*adddi_1}
     (nil))
(insn 1948 1947 1949 139 (set (reg:SI 0 ax [orig:555 _469 ] [555])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 724 [0x2d4]))) [2 rqstfld.iget+708 S4 A32])) "CLDRAD.f":420 86 {*movsi_internal}
     (nil))
(insn 1949 1948 1950 139 (set (reg:DI 0 ax [orig:556 _470 ] [556])
        (sign_extend:DI (reg:SI 0 ax [orig:555 _469 ] [555]))) "CLDRAD.f":420 149 {*extendsidi2_rex64}
     (nil))
(insn 1950 1949 1951 139 (parallel [
            (set (reg:DI 1 dx [orig:557 _471 ] [557])
                (plus:DI (reg:DI 0 ax [orig:556 _470 ] [556])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":420 222 {*adddi_1}
     (nil))
(insn 1951 1950 1952 139 (set (reg:DI 0 ax [1675])
        (reg:DI 1 dx [orig:557 _471 ] [557])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1952 1951 1954 139 (parallel [
            (set (reg:DI 0 ax [1676])
                (ashift:DI (reg:DI 0 ax [1675])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":420 551 {*ashldi3_1}
     (nil))
(insn 1954 1952 1955 139 (parallel [
            (set (reg:DI 0 ax [1675])
                (minus:DI (reg:DI 0 ax [1675])
                    (reg:DI 1 dx [orig:557 _471 ] [557])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":420 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:557 _471 ] [557])
            (const_int 15 [0xf]))
        (nil)))
(insn 1955 1954 1958 139 (parallel [
            (set (reg:DI 0 ax [1677])
                (ashift:DI (reg:DI 0 ax [1675])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":420 551 {*ashldi3_1}
     (nil))
(insn 1958 1955 1959 139 (parallel [
            (set (reg:DI 0 ax [1678])
                (plus:DI (reg:DI 0 ax [orig:558 _472 ] [558])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":420 222 {*adddi_1}
     (nil))
(insn 1959 1958 1960 139 (parallel [
            (set (reg:DI 0 ax [1679])
                (ashift:DI (reg:DI 0 ax [1678])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":420 551 {*ashldi3_1}
     (nil))
(insn 1960 1959 1961 139 (parallel [
            (set (reg/f:DI 1 dx [orig:559 _473 ] [559])
                (plus:DI (reg:DI 0 ax [1679])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":420 222 {*adddi_1}
     (nil))
(insn 1961 1960 1962 139 (set (reg:DI 4 si [1680])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1962 1961 1963 139 (set (reg:DI 2 cx [1681])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1963 1962 1964 139 (set (reg:DI 0 ax [1682])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1964 1963 1965 139 (set (reg:DI 38 r9)
        (reg:DI 4 si [1680])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1965 1964 1966 139 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1681])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1966 1965 1968 139 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1682])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1968 1966 1969 139 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 724 [0x2d4])))) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1969 1968 1970 139 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1970 1969 1971 139 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":420 88 {*movqi_internal}
     (nil))
(call_insn 1971 1970 1972 139 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":420 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       140 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 140, loop depth 0, maybe hot
;;  prev block 139, next block 141, flags: (RTL, MODIFIED)
;;  pred:       108
;;              138
;;              139 (FALLTHRU)
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 560
(code_label 1972 1971 1973 140 67 (nil) [2 uses])
(note 1973 1972 1974 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 1974 1973 1975 140 (set (reg:SI 0 ax [orig:560 _474 ] [560])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 608 [0x260]))) [2 rqstfld.iget+592 S4 A128])) "CLDRAD.f":425 86 {*movsi_internal}
     (nil))
(insn 1975 1974 1976 140 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:560 _474 ] [560])
            (const_int 0 [0]))) "CLDRAD.f":425 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1976 1975 1977 140 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1985)
            (pc))) "CLDRAD.f":425 682 {*jcc}
     (nil)
 -> 1985)
;;  succ:       143
;;              141 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 141, loop depth 0, maybe hot
;;  prev block 140, next block 142, flags: (RTL, MODIFIED)
;;  pred:       140 (FALLTHRU)
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 561
(note 1977 1976 1978 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1978 1977 1979 141 (set (reg:SI 0 ax [orig:561 _475 ] [561])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 728 [0x2d8]))) [2 rqstfld.iget+712 S4 A64])) "CLDRAD.f":425 86 {*movsi_internal}
     (nil))
(insn 1979 1978 1980 141 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:561 _475 ] [561])
            (const_int 0 [0]))) "CLDRAD.f":425 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1980 1979 1981 141 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1985)
            (pc))) "CLDRAD.f":425 682 {*jcc}
     (nil)
 -> 1985)
;;  succ:       143
;;              142 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 142, loop depth 0, maybe hot
;;  prev block 141, next block 143, flags: (RTL, MODIFIED)
;;  pred:       141 (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 562
(note 1981 1980 1982 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 1982 1981 1983 142 (set (reg:SI 0 ax [orig:562 _476 ] [562])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 684 [0x2ac]))) [2 rqstfld.iget+668 S4 A32])) "CLDRAD.f":425 86 {*movsi_internal}
     (nil))
(insn 1983 1982 1984 142 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:562 _476 ] [562])
            (const_int 0 [0]))) "CLDRAD.f":425 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1984 1983 1985 142 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2618)
            (pc))) "CLDRAD.f":425 682 {*jcc}
     (nil)
 -> 2618)
;;  succ:       143 (FALLTHRU)
;;              176
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 143, loop depth 0, maybe hot
;;  prev block 142, next block 144, flags: (RTL, MODIFIED)
;;  pred:       140
;;              141
;;              142 (FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1149 1150 1683
(code_label 1985 1984 1986 143 88 (nil) [2 uses])
(note 1986 1985 1987 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 1987 1986 1988 143 (set (reg:SF 21 xmm0 [1683])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":427 131 {*movsf_internal}
     (nil))
(insn 1988 1987 1989 143 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 climit+0 S4 A32])
        (reg:SF 21 xmm0 [1683])) "CLDRAD.f":427 131 {*movsf_internal}
     (nil))
(insn 1989 1988 1990 143 (set (reg:SI 1 dx [orig:1149 _1383 ] [1149])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":428 86 {*movsi_internal}
     (nil))
(insn 1990 1989 1991 143 (set (reg:SI 0 ax [orig:1150 _1384 ] [1150])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":428 86 {*movsi_internal}
     (nil))
(insn 1991 1990 2023 143 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1149 _1383 ] [1149])) "CLDRAD.f":428 86 {*movsi_internal}
     (nil))
;;  succ:       144 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150

;; basic block 144, loop depth 0, maybe hot
;;  prev block 143, next block 145, flags: (RTL, MODIFIED)
;;  pred:       143 (FALLTHRU)
;;              148 [always] 
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150
;; lr  def 	 17 [flags] 1151 1684
(code_label 2023 1991 1992 144 93 (nil) [1 uses])
(note 1992 2023 1993 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1993 1992 1994 144 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1150 _1384 ] [1150]))) "CLDRAD.f":428 11 {*cmpsi_1}
     (nil))
(insn 1994 1993 1995 144 (set (reg:QI 1 dx [1684])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":428 678 {*setcc_qi}
     (nil))
(insn 1995 1994 1996 144 (set (reg:SI 1 dx [orig:1151 _1386 ] [1151])
        (zero_extend:SI (reg:QI 1 dx [1684]))) "CLDRAD.f":428 140 {*zero_extendqisi2}
     (nil))
(insn 1996 1995 1997 144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1151 _1386 ] [1151])
            (const_int 0 [0]))) "CLDRAD.f":428 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1997 1996 1998 144 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4370)
            (pc))) "CLDRAD.f":428 682 {*jcc}
     (nil)
 -> 4370)
;;  succ:       329
;;              145 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150

;; basic block 145, loop depth 0, maybe hot
;;  prev block 144, next block 146, flags: (RTL, MODIFIED)
;;  pred:       144 (FALLTHRU)
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1998 1997 1999 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 1999 1998 2017 145 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":429 86 {*movsi_internal}
     (nil))
;;  succ:       146 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150

;; basic block 146, loop depth 0, maybe hot
;;  prev block 145, next block 147, flags: (RTL, MODIFIED)
;;  pred:       145 (FALLTHRU)
;;              147 [always] 
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1152 1685
(code_label 2017 1999 2000 146 92 (nil) [1 uses])
(note 2000 2017 2001 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 2001 2000 2002 146 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":429 11 {*cmpsi_1}
     (nil))
(insn 2002 2001 2003 146 (set (reg:QI 1 dx [1685])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":429 678 {*setcc_qi}
     (nil))
(insn 2003 2002 2004 146 (set (reg:SI 1 dx [orig:1152 _1388 ] [1152])
        (zero_extend:SI (reg:QI 1 dx [1685]))) "CLDRAD.f":429 140 {*zero_extendqisi2}
     (nil))
(insn 2004 2003 2005 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1152 _1388 ] [1152])
            (const_int 0 [0]))) "CLDRAD.f":429 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2005 2004 2006 146 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4373)
            (pc))) "CLDRAD.f":429 682 {*jcc}
     (nil)
 -> 4373)
;;  succ:       330
;;              147 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150

;; basic block 147, loop depth 0, maybe hot
;;  prev block 146, next block 330, flags: (RTL, MODIFIED)
;;  pred:       146 (FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 563 564 565 566 567 1686 1687 1688
(note 2006 2005 2007 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 2007 2006 2008 147 (set (reg:SI 1 dx [1686])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":430 86 {*movsi_internal}
     (nil))
(insn 2008 2007 2009 147 (set (reg:DI 1 dx [orig:563 _477 ] [563])
        (sign_extend:DI (reg:SI 1 dx [1686]))) "CLDRAD.f":430 149 {*extendsidi2_rex64}
     (nil))
(insn 2009 2008 2010 147 (parallel [
            (set (reg:DI 2 cx [orig:564 _478 ] [564])
                (mult:DI (reg:DI 1 dx [orig:563 _477 ] [563])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":430 349 {*muldi3_1}
     (nil))
(insn 2010 2009 2011 147 (set (reg:SI 1 dx [1687])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":430 86 {*movsi_internal}
     (nil))
(insn 2011 2010 2012 147 (set (reg:DI 1 dx [orig:565 _479 ] [565])
        (sign_extend:DI (reg:SI 1 dx [1687]))) "CLDRAD.f":430 149 {*extendsidi2_rex64}
     (nil))
(insn 2012 2011 2013 147 (parallel [
            (set (reg:DI 1 dx [orig:566 _480 ] [566])
                (plus:DI (reg:DI 1 dx [orig:565 _479 ] [565])
                    (reg:DI 2 cx [orig:564 _478 ] [564])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":430 222 {*adddi_1}
     (nil))
(insn 2013 2012 2014 147 (parallel [
            (set (reg:DI 2 cx [orig:567 _481 ] [567])
                (plus:DI (reg:DI 1 dx [orig:566 _480 ] [566])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":430 222 {*adddi_1}
     (nil))
(insn 2014 2013 2015 147 (set (reg/f:DI 1 dx [1688])
        (symbol_ref:DI ("need.4414") [flags 0x202]  <var_decl 0x7f2038edcbd0 need>)) "CLDRAD.f":430 85 {*movdi_internal}
     (nil))
(insn 2015 2014 2016 147 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:567 _481 ] [567])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1688])) [7 need S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":430 86 {*movsi_internal}
     (nil))
(insn 2016 2015 4217 147 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":429 221 {*addsi_1}
     (nil))
(jump_insn 4217 2016 4218 147 (set (pc)
        (label_ref 2017)) "CLDRAD.f":429 683 {jump}
     (nil)
 -> 2017)
;;  succ:       146 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150

(barrier 4218 4217 4373)
;; basic block 330, loop depth 0, maybe hot
;;  prev block 147, next block 148, flags: (RTL, MODIFIED)
;;  pred:       146
;; bb 330 artificial_defs: { }
;; bb 330 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4373 4218 4372 330 252 (nil) [1 uses])
(note 4372 4373 4374 330 [bb 330] NOTE_INSN_BASIC_BLOCK)
(insn 4374 4372 2020 330 (const_int 0 [0]) "CLDRAD.f":430 718 {nop}
     (nil))
;;  succ:       148 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150

;; basic block 148, loop depth 0, maybe hot
;;  prev block 330, next block 329, flags: (RTL, MODIFIED)
;;  pred:       330 [always]  (FALLTHRU)
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2020 4374 2021 148 91 (nil) [0 uses])
(note 2021 2020 2022 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 2022 2021 4219 148 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":428 221 {*addsi_1}
     (nil))
(jump_insn 4219 2022 4220 148 (set (pc)
        (label_ref 2023)) "CLDRAD.f":428 683 {jump}
     (nil)
 -> 2023)
;;  succ:       144 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1150

(barrier 4220 4219 4370)
;; basic block 329, loop depth 0, maybe hot
;;  prev block 148, next block 149, flags: (RTL, MODIFIED)
;;  pred:       144
;; bb 329 artificial_defs: { }
;; bb 329 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4370 4220 4369 329 251 (nil) [1 uses])
(note 4369 4370 4371 329 [bb 329] NOTE_INSN_BASIC_BLOCK)
(insn 4371 4369 2026 329 (const_int 0 [0]) "CLDRAD.f":429 718 {nop}
     (nil))
;;  succ:       149 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 149, loop depth 0, maybe hot
;;  prev block 329, next block 150, flags: (RTL, MODIFIED)
;;  pred:       329 [always]  (FALLTHRU)
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1153 1154
(code_label 2026 4371 2027 149 90 (nil) [0 uses])
(note 2027 2026 2028 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 2028 2027 2029 149 (set (reg:SI 0 ax [orig:1153 _1392 ] [1153])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":443 86 {*movsi_internal}
     (nil))
(insn 2029 2028 2030 149 (set (reg:SI 3 bx [orig:1154 _1393 ] [1154])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":443 86 {*movsi_internal}
     (nil))
(insn 2030 2029 2468 149 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 0 ax [orig:1153 _1392 ] [1153])) "CLDRAD.f":443 86 {*movsi_internal}
     (nil))
;;  succ:       150 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

;; basic block 150, loop depth 0, maybe hot
;;  prev block 149, next block 151, flags: (RTL, MODIFIED)
;;  pred:       149 (FALLTHRU)
;;              169 [always] 
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  def 	 17 [flags] 1155 1689
(code_label 2468 2030 2031 150 108 (nil) [1 uses])
(note 2031 2468 2032 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 2032 2031 2033 150 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 3 bx [orig:1154 _1393 ] [1154]))) "CLDRAD.f":443 11 {*cmpsi_1}
     (nil))
(insn 2033 2032 2034 150 (set (reg:QI 0 ax [1689])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":443 678 {*setcc_qi}
     (nil))
(insn 2034 2033 2035 150 (set (reg:SI 0 ax [orig:1155 _1395 ] [1155])
        (zero_extend:SI (reg:QI 0 ax [1689]))) "CLDRAD.f":443 140 {*zero_extendqisi2}
     (nil))
(insn 2035 2034 2036 150 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1155 _1395 ] [1155])
            (const_int 0 [0]))) "CLDRAD.f":443 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2036 2035 2037 150 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4376)
            (pc))) "CLDRAD.f":443 682 {*jcc}
     (nil)
 -> 4376)
;;  succ:       331
;;              151 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

;; basic block 151, loop depth 0, maybe hot
;;  prev block 150, next block 152, flags: (RTL, MODIFIED)
;;  pred:       150 (FALLTHRU)
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2037 2036 2038 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 2038 2037 2462 151 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":444 86 {*movsi_internal}
     (nil))
;;  succ:       152 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

;; basic block 152, loop depth 0, maybe hot
;;  prev block 151, next block 153, flags: (RTL, MODIFIED)
;;  pred:       151 (FALLTHRU)
;;              168 [always] 
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1156 1690
(code_label 2462 2038 2039 152 107 (nil) [1 uses])
(note 2039 2462 2040 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 2040 2039 2041 152 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":444 11 {*cmpsi_1}
     (nil))
(insn 2041 2040 2042 152 (set (reg:QI 0 ax [1690])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":444 678 {*setcc_qi}
     (nil))
(insn 2042 2041 2043 152 (set (reg:SI 0 ax [orig:1156 _1397 ] [1156])
        (zero_extend:SI (reg:QI 0 ax [1690]))) "CLDRAD.f":444 140 {*zero_extendqisi2}
     (nil))
(insn 2043 2042 2044 152 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1156 _1397 ] [1156])
            (const_int 0 [0]))) "CLDRAD.f":444 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2044 2043 2045 152 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4379)
            (pc))) "CLDRAD.f":444 682 {*jcc}
     (nil)
 -> 4379)
;;  succ:       332
;;              153 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

;; basic block 153, loop depth 0, maybe hot
;;  prev block 152, next block 154, flags: (RTL, MODIFIED)
;;  pred:       152 (FALLTHRU)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 568 569 570 571 572 1157 1691 1692 1693 1694 1695 1696
(note 2045 2044 2046 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 2046 2045 2047 153 (set (reg:SF 21 xmm0 [1691])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":445 131 {*movsf_internal}
     (nil))
(insn 2047 2046 2048 153 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])
        (reg:SF 21 xmm0 [1691])) "CLDRAD.f":445 131 {*movsf_internal}
     (nil))
(insn 2048 2047 2049 153 (set (reg:SI 0 ax [1692])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":446 86 {*movsi_internal}
     (nil))
(insn 2049 2048 2050 153 (set (reg:DI 0 ax [orig:568 _482 ] [568])
        (sign_extend:DI (reg:SI 0 ax [1692]))) "CLDRAD.f":446 149 {*extendsidi2_rex64}
     (nil))
(insn 2050 2049 2051 153 (parallel [
            (set (reg:DI 1 dx [orig:569 _483 ] [569])
                (mult:DI (reg:DI 0 ax [orig:568 _482 ] [568])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":446 349 {*muldi3_1}
     (nil))
(insn 2051 2050 2052 153 (set (reg:SI 0 ax [1693])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":446 86 {*movsi_internal}
     (nil))
(insn 2052 2051 2053 153 (set (reg:DI 0 ax [orig:570 _484 ] [570])
        (sign_extend:DI (reg:SI 0 ax [1693]))) "CLDRAD.f":446 149 {*extendsidi2_rex64}
     (nil))
(insn 2053 2052 2054 153 (parallel [
            (set (reg:DI 0 ax [orig:571 _485 ] [571])
                (plus:DI (reg:DI 0 ax [orig:570 _484 ] [570])
                    (reg:DI 1 dx [orig:569 _483 ] [569])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":446 222 {*adddi_1}
     (nil))
(insn 2054 2053 2055 153 (parallel [
            (set (reg:DI 1 dx [orig:572 _486 ] [572])
                (plus:DI (reg:DI 0 ax [orig:571 _485 ] [571])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":446 222 {*adddi_1}
     (nil))
(insn 2055 2054 2056 153 (set (reg/f:DI 0 ax [1694])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f20392b7bd0 loops>)) "CLDRAD.f":446 85 {*movdi_internal}
     (nil))
(insn 2056 2055 2057 153 (parallel [
            (set (reg:DI 1 dx [1695])
                (plus:DI (reg:DI 1 dx [orig:572 _486 ] [572])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":446 222 {*adddi_1}
     (nil))
(insn 2057 2056 2058 153 (set (reg:SI 0 ax [1696])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1695])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1694])) [2 loops.lmh S4 A32])) "CLDRAD.f":446 86 {*movsi_internal}
     (nil))
(insn 2058 2057 2059 153 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [2 lmhk+0 S4 A32])
        (reg:SI 0 ax [1696])) "CLDRAD.f":446 86 {*movsi_internal}
     (nil))
(insn 2059 2058 2060 153 (set (reg:SI 0 ax [orig:1157 _1400 ] [1157])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [2 lmhk+0 S4 A32])) "CLDRAD.f":447 86 {*movsi_internal}
     (nil))
(insn 2060 2059 2143 153 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":447 86 {*movsi_internal}
     (nil))
;;  succ:       154 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157

;; basic block 154, loop depth 0, maybe hot
;;  prev block 153, next block 155, flags: (RTL, MODIFIED)
;;  pred:       153 (FALLTHRU)
;;              160 [always] 
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1157
;; lr  def 	 17 [flags] 1158 1697
(code_label 2143 2060 2061 154 101 (nil) [1 uses])
(note 2061 2143 2062 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 2062 2061 2063 154 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
            (reg:SI 0 ax [orig:1157 _1400 ] [1157]))) "CLDRAD.f":447 11 {*cmpsi_1}
     (nil))
(insn 2063 2062 2064 154 (set (reg:QI 1 dx [1697])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":447 678 {*setcc_qi}
     (nil))
(insn 2064 2063 2065 154 (set (reg:SI 1 dx [orig:1158 _1402 ] [1158])
        (zero_extend:SI (reg:QI 1 dx [1697]))) "CLDRAD.f":447 140 {*zero_extendqisi2}
     (nil))
(insn 2065 2064 2066 154 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1158 _1402 ] [1158])
            (const_int 0 [0]))) "CLDRAD.f":447 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2066 2065 2067 154 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4382)
            (pc))) "CLDRAD.f":447 682 {*jcc}
     (nil)
 -> 4382)
;;  succ:       333
;;              155 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157

;; basic block 155, loop depth 0, maybe hot
;;  prev block 154, next block 156, flags: (RTL, MODIFIED)
;;  pred:       154 (FALLTHRU)
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 573 574 575 576 577 578 579 580 581 1698 1699 1700 1701
(note 2067 2066 2068 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 2068 2067 2069 155 (set (reg:SI 1 dx [1698])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])) "CLDRAD.f":448 86 {*movsi_internal}
     (nil))
(insn 2069 2068 2070 155 (set (reg:DI 1 dx [orig:573 _487 ] [573])
        (sign_extend:DI (reg:SI 1 dx [1698]))) "CLDRAD.f":448 149 {*extendsidi2_rex64}
     (nil))
(insn 2070 2069 2071 155 (parallel [
            (set (reg:DI 2 cx [orig:574 _488 ] [574])
                (mult:DI (reg:DI 1 dx [orig:573 _487 ] [573])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 349 {*muldi3_1}
     (nil))
(insn 2071 2070 2072 155 (set (reg:SI 1 dx [1699])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":448 86 {*movsi_internal}
     (nil))
(insn 2072 2071 2073 155 (set (reg:DI 1 dx [orig:575 _489 ] [575])
        (sign_extend:DI (reg:SI 1 dx [1699]))) "CLDRAD.f":448 149 {*extendsidi2_rex64}
     (nil))
(insn 2073 2072 2074 155 (parallel [
            (set (reg:DI 1 dx [orig:576 _490 ] [576])
                (mult:DI (reg:DI 1 dx [orig:575 _489 ] [575])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 349 {*muldi3_1}
     (nil))
(insn 2074 2073 2075 155 (parallel [
            (set (reg:DI 2 cx [orig:577 _491 ] [577])
                (plus:DI (reg:DI 2 cx [orig:574 _488 ] [574])
                    (reg:DI 1 dx [orig:576 _490 ] [576])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 222 {*adddi_1}
     (nil))
(insn 2075 2074 2076 155 (set (reg:SI 1 dx [1700])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":448 86 {*movsi_internal}
     (nil))
(insn 2076 2075 2077 155 (set (reg:DI 1 dx [orig:578 _492 ] [578])
        (sign_extend:DI (reg:SI 1 dx [1700]))) "CLDRAD.f":448 149 {*extendsidi2_rex64}
     (nil))
(insn 2077 2076 2078 155 (parallel [
            (set (reg:DI 1 dx [orig:579 _493 ] [579])
                (plus:DI (reg:DI 1 dx [orig:578 _492 ] [578])
                    (reg:DI 2 cx [orig:577 _491 ] [577])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 222 {*adddi_1}
     (nil))
(insn 2078 2077 2079 155 (parallel [
            (set (reg:DI 2 cx [orig:580 _494 ] [580])
                (plus:DI (reg:DI 1 dx [orig:579 _493 ] [579])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 222 {*adddi_1}
     (nil))
(insn 2079 2078 2080 155 (set (reg/f:DI 1 dx [1701])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f20392a8a20 cldwtr>)) "CLDRAD.f":448 85 {*movdi_internal}
     (nil))
(insn 2080 2079 2081 155 (set (reg:SF 21 xmm0 [orig:581 _495 ] [581])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:580 _494 ] [580])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1701])) [1 cldwtr.cwm S4 A32])) "CLDRAD.f":448 131 {*movsf_internal}
     (nil))
(insn 2081 2080 2082 155 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:581 _495 ] [581])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])) [1 climit+0 S4 A32]))) "CLDRAD.f":448 53 {*cmpisf}
     (nil))
(jump_insn 2082 2081 2086 155 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2140)
            (pc))) "CLDRAD.f":448 682 {*jcc}
     (nil)
 -> 2140)
;;  succ:       156 (FALLTHRU)
;;              160
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157

;; basic block 156, loop depth 0, maybe hot
;;  prev block 155, next block 157, flags: (RTL, MODIFIED)
;;  pred:       155 (FALLTHRU)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 582 583 584 585 586 587 1702 1703 1704
(note 2086 2082 2087 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 2087 2086 2088 156 (set (reg:SI 1 dx [1702])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":448 86 {*movsi_internal}
     (nil))
(insn 2088 2087 2089 156 (set (reg:DI 1 dx [orig:582 _496 ] [582])
        (sign_extend:DI (reg:SI 1 dx [1702]))) "CLDRAD.f":448 149 {*extendsidi2_rex64}
     (nil))
(insn 2089 2088 2090 156 (parallel [
            (set (reg:DI 2 cx [orig:583 _497 ] [583])
                (mult:DI (reg:DI 1 dx [orig:582 _496 ] [582])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 349 {*muldi3_1}
     (nil))
(insn 2090 2089 2091 156 (set (reg:SI 1 dx [1703])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":448 86 {*movsi_internal}
     (nil))
(insn 2091 2090 2092 156 (set (reg:DI 1 dx [orig:584 _498 ] [584])
        (sign_extend:DI (reg:SI 1 dx [1703]))) "CLDRAD.f":448 149 {*extendsidi2_rex64}
     (nil))
(insn 2092 2091 2093 156 (parallel [
            (set (reg:DI 1 dx [orig:585 _499 ] [585])
                (plus:DI (reg:DI 1 dx [orig:584 _498 ] [584])
                    (reg:DI 2 cx [orig:583 _497 ] [583])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 222 {*adddi_1}
     (nil))
(insn 2093 2092 2094 156 (parallel [
            (set (reg:DI 2 cx [orig:586 _500 ] [586])
                (plus:DI (reg:DI 1 dx [orig:585 _499 ] [585])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 222 {*adddi_1}
     (nil))
(insn 2094 2093 2095 156 (set (reg/f:DI 1 dx [1704])
        (symbol_ref:DI ("need.4414") [flags 0x202]  <var_decl 0x7f2038edcbd0 need>)) "CLDRAD.f":448 85 {*movdi_internal}
     (nil))
(insn 2095 2094 2096 156 (set (reg:SI 1 dx [orig:587 _501 ] [587])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:586 _500 ] [586])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1704])) [7 need S4 A32])) "CLDRAD.f":448 86 {*movsi_internal}
     (nil))
(insn 2096 2095 2097 156 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:587 _501 ] [587])
            (const_int 0 [0]))) "CLDRAD.f":448 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2097 2096 2098 156 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2140)
            (pc))) "CLDRAD.f":448 682 {*jcc}
     (nil)
 -> 2140)
;;  succ:       157 (FALLTHRU)
;;              160
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157

;; basic block 157, loop depth 0, maybe hot
;;  prev block 156, next block 158, flags: (RTL, MODIFIED)
;;  pred:       156 (FALLTHRU)
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 588 589 590 591 592 593 1705 1706 1707 1708 1709 1710
(note 2098 2097 2099 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 2099 2098 2100 157 (set (reg:SF 21 xmm0 [1705])
        (float:SF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32]))) "CLDRAD.f":449 203 {*floatsisf2_mixed}
     (nil))
(insn 2100 2099 2101 157 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])
        (reg:SF 21 xmm0 [1705])) "CLDRAD.f":449 131 {*movsf_internal}
     (nil))
(insn 2101 2100 2102 157 (set (reg:SI 1 dx [1706])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":450 86 {*movsi_internal}
     (nil))
(insn 2102 2101 2103 157 (set (reg:DI 1 dx [orig:588 _502 ] [588])
        (sign_extend:DI (reg:SI 1 dx [1706]))) "CLDRAD.f":450 149 {*extendsidi2_rex64}
     (nil))
(insn 2103 2102 2104 157 (parallel [
            (set (reg:DI 2 cx [orig:589 _503 ] [589])
                (mult:DI (reg:DI 1 dx [orig:588 _502 ] [588])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":450 349 {*muldi3_1}
     (nil))
(insn 2104 2103 2105 157 (set (reg:SI 1 dx [1707])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":450 86 {*movsi_internal}
     (nil))
(insn 2105 2104 2106 157 (set (reg:DI 1 dx [orig:590 _504 ] [590])
        (sign_extend:DI (reg:SI 1 dx [1707]))) "CLDRAD.f":450 149 {*extendsidi2_rex64}
     (nil))
(insn 2106 2105 2107 157 (parallel [
            (set (reg:DI 1 dx [orig:591 _505 ] [591])
                (plus:DI (reg:DI 1 dx [orig:590 _504 ] [590])
                    (reg:DI 2 cx [orig:589 _503 ] [589])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":450 222 {*adddi_1}
     (nil))
(insn 2107 2106 2108 157 (parallel [
            (set (reg:DI 2 cx [orig:592 _506 ] [592])
                (plus:DI (reg:DI 1 dx [orig:591 _505 ] [591])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":450 222 {*adddi_1}
     (nil))
(insn 2108 2107 2109 157 (set (reg/f:DI 1 dx [1708])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":450 85 {*movdi_internal}
     (nil))
(insn 2109 2108 2110 157 (parallel [
            (set (reg:DI 2 cx [1709])
                (plus:DI (reg:DI 2 cx [orig:592 _506 ] [592])
                    (const_int 267539 [0x41513])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":450 222 {*adddi_1}
     (nil))
(insn 2110 2109 2111 157 (set (reg:SF 22 xmm1 [orig:593 _507 ] [593])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1709])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1708])) [1 phys.htop S4 A32])) "CLDRAD.f":450 131 {*movsf_internal}
     (nil))
(insn 2111 2110 2112 157 (set (reg:SF 21 xmm0 [1710])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])) "CLDRAD.f":450 131 {*movsf_internal}
     (nil))
(insn 2112 2111 2113 157 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1710])
            (reg:SF 22 xmm1 [orig:593 _507 ] [593]))) "CLDRAD.f":450 53 {*cmpisf}
     (nil))
(jump_insn 2113 2112 2117 157 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2129)
            (pc))) "CLDRAD.f":450 682 {*jcc}
     (nil)
 -> 2129)
;;  succ:       158 (FALLTHRU)
;;              159
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157

;; basic block 158, loop depth 0, maybe hot
;;  prev block 157, next block 159, flags: (RTL, MODIFIED)
;;  pred:       157 (FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 594 595 596 597 598 1711 1712 1713 1714 1715
(note 2117 2113 2118 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 2118 2117 2119 158 (set (reg:SI 1 dx [1711])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":451 86 {*movsi_internal}
     (nil))
(insn 2119 2118 2120 158 (set (reg:DI 1 dx [orig:594 _508 ] [594])
        (sign_extend:DI (reg:SI 1 dx [1711]))) "CLDRAD.f":451 149 {*extendsidi2_rex64}
     (nil))
(insn 2120 2119 2121 158 (parallel [
            (set (reg:DI 2 cx [orig:595 _509 ] [595])
                (mult:DI (reg:DI 1 dx [orig:594 _508 ] [594])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":451 349 {*muldi3_1}
     (nil))
(insn 2121 2120 2122 158 (set (reg:SI 1 dx [1712])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":451 86 {*movsi_internal}
     (nil))
(insn 2122 2121 2123 158 (set (reg:DI 1 dx [orig:596 _510 ] [596])
        (sign_extend:DI (reg:SI 1 dx [1712]))) "CLDRAD.f":451 149 {*extendsidi2_rex64}
     (nil))
(insn 2123 2122 2124 158 (parallel [
            (set (reg:DI 1 dx [orig:597 _511 ] [597])
                (plus:DI (reg:DI 1 dx [orig:596 _510 ] [596])
                    (reg:DI 2 cx [orig:595 _509 ] [595])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":451 222 {*adddi_1}
     (nil))
(insn 2124 2123 2125 158 (parallel [
            (set (reg:DI 2 cx [orig:598 _512 ] [598])
                (plus:DI (reg:DI 1 dx [orig:597 _511 ] [597])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":451 222 {*adddi_1}
     (nil))
(insn 2125 2124 2126 158 (set (reg/f:DI 1 dx [1713])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":451 85 {*movdi_internal}
     (nil))
(insn 2126 2125 2127 158 (parallel [
            (set (reg:DI 2 cx [1714])
                (plus:DI (reg:DI 2 cx [orig:598 _512 ] [598])
                    (const_int 267539 [0x41513])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":451 222 {*adddi_1}
     (nil))
(insn 2127 2126 2128 158 (set (reg:SF 21 xmm0 [1715])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1714])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1713])) [1 phys.htop S4 A32])) "CLDRAD.f":451 131 {*movsf_internal}
     (nil))
(insn 2128 2127 2129 158 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])
        (reg:SF 21 xmm0 [1715])) "CLDRAD.f":451 131 {*movsf_internal}
     (nil))
;;  succ:       159 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157

;; basic block 159, loop depth 0, maybe hot
;;  prev block 158, next block 160, flags: (RTL, MODIFIED)
;;  pred:       158 (FALLTHRU)
;;              157
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 599 600 601 602 603 1716 1717 1718
(code_label 2129 2128 2130 159 99 (nil) [1 uses])
(note 2130 2129 2131 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 2131 2130 2132 159 (set (reg:SI 1 dx [1716])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":453 86 {*movsi_internal}
     (nil))
(insn 2132 2131 2133 159 (set (reg:DI 1 dx [orig:599 _513 ] [599])
        (sign_extend:DI (reg:SI 1 dx [1716]))) "CLDRAD.f":453 149 {*extendsidi2_rex64}
     (nil))
(insn 2133 2132 2134 159 (parallel [
            (set (reg:DI 2 cx [orig:600 _514 ] [600])
                (mult:DI (reg:DI 1 dx [orig:599 _513 ] [599])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":453 349 {*muldi3_1}
     (nil))
(insn 2134 2133 2135 159 (set (reg:SI 1 dx [1717])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":453 86 {*movsi_internal}
     (nil))
(insn 2135 2134 2136 159 (set (reg:DI 1 dx [orig:601 _515 ] [601])
        (sign_extend:DI (reg:SI 1 dx [1717]))) "CLDRAD.f":453 149 {*extendsidi2_rex64}
     (nil))
(insn 2136 2135 2137 159 (parallel [
            (set (reg:DI 1 dx [orig:602 _516 ] [602])
                (plus:DI (reg:DI 1 dx [orig:601 _515 ] [601])
                    (reg:DI 2 cx [orig:600 _514 ] [600])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":453 222 {*adddi_1}
     (nil))
(insn 2137 2136 2138 159 (parallel [
            (set (reg:DI 2 cx [orig:603 _517 ] [603])
                (plus:DI (reg:DI 1 dx [orig:602 _516 ] [602])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":453 222 {*adddi_1}
     (nil))
(insn 2138 2137 2139 159 (set (reg/f:DI 1 dx [1718])
        (symbol_ref:DI ("need.4414") [flags 0x202]  <var_decl 0x7f2038edcbd0 need>)) "CLDRAD.f":453 85 {*movdi_internal}
     (nil))
(insn 2139 2138 2140 159 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:603 _517 ] [603])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1718])) [7 need S4 A32])
        (const_int 0 [0])) "CLDRAD.f":453 86 {*movsi_internal}
     (nil))
;;  succ:       160 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157

;; basic block 160, loop depth 0, maybe hot
;;  prev block 159, next block 333, flags: (RTL, MODIFIED)
;;  pred:       159 (FALLTHRU)
;;              156
;;              155
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2140 2139 2141 160 97 (nil) [2 uses])
(note 2141 2140 2142 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 2142 2141 4221 160 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":447 221 {*addsi_1}
     (nil))
(jump_insn 4221 2142 4222 160 (set (pc)
        (label_ref 2143)) "CLDRAD.f":447 683 {jump}
     (nil)
 -> 2143)
;;  succ:       154 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154 1157

(barrier 4222 4221 4382)
;; basic block 333, loop depth 0, maybe hot
;;  prev block 160, next block 161, flags: (RTL, MODIFIED)
;;  pred:       154
;; bb 333 artificial_defs: { }
;; bb 333 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4382 4222 4381 333 255 (nil) [1 uses])
(note 4381 4382 4383 333 [bb 333] NOTE_INSN_BASIC_BLOCK)
(insn 4383 4381 2146 333 (const_int 0 [0]) "CLDRAD.f":448 718 {nop}
     (nil))
;;  succ:       161 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

;; basic block 161, loop depth 0, maybe hot
;;  prev block 333, next block 162, flags: (RTL, MODIFIED)
;;  pred:       333 [always]  (FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1719
(code_label 2146 4383 2147 161 96 (nil) [0 uses])
(note 2147 2146 2148 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 2148 2147 2149 161 (set (reg:SF 21 xmm0 [1719])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":457 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2149 2148 2150 161 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1719])
                    (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":457 54 {*cmpiusf}
     (nil))
(jump_insn 2150 2149 4116 161 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 2214)
            (pc))) "CLDRAD.f":457 682 {*jcc}
     (nil)
 -> 2214)
;;  succ:       164
;;              162 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

;; basic block 162, loop depth 0, maybe hot
;;  prev block 161, next block 163, flags: (RTL, MODIFIED)
;;  pred:       161 (FALLTHRU)
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1720
(note 4116 2150 2151 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 2151 4116 2152 162 (set (reg:SF 21 xmm0 [1720])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":457 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2152 2151 2153 162 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1720])
                    (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":457 54 {*cmpiusf}
     (nil))
(jump_insn 2153 2152 2157 162 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2214)
            (pc))) "CLDRAD.f":457 682 {*jcc}
     (nil)
 -> 2214)
;;  succ:       163 (FALLTHRU)
;;              164
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

;; basic block 163, loop depth 0, maybe hot
;;  prev block 162, next block 164, flags: (RTL, MODIFIED)
;;  pred:       162 (FALLTHRU)
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 1721 1722 1723 1724 1725 1726 1727 1728 1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739
(note 2157 2153 2158 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 2158 2157 2159 163 (set (reg:SI 0 ax [1721])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":458 86 {*movsi_internal}
     (nil))
(insn 2159 2158 2160 163 (set (reg:DI 0 ax [orig:604 _518 ] [604])
        (sign_extend:DI (reg:SI 0 ax [1721]))) "CLDRAD.f":458 149 {*extendsidi2_rex64}
     (nil))
(insn 2160 2159 2161 163 (parallel [
            (set (reg:DI 1 dx [orig:605 _519 ] [605])
                (mult:DI (reg:DI 0 ax [orig:604 _518 ] [604])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":458 349 {*muldi3_1}
     (nil))
(insn 2161 2160 2162 163 (set (reg:SI 0 ax [1722])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":458 86 {*movsi_internal}
     (nil))
(insn 2162 2161 2163 163 (set (reg:DI 0 ax [orig:606 _520 ] [606])
        (sign_extend:DI (reg:SI 0 ax [1722]))) "CLDRAD.f":458 149 {*extendsidi2_rex64}
     (nil))
(insn 2163 2162 2164 163 (parallel [
            (set (reg:DI 0 ax [orig:607 _521 ] [607])
                (plus:DI (reg:DI 0 ax [orig:606 _520 ] [606])
                    (reg:DI 1 dx [orig:605 _519 ] [605])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":458 222 {*adddi_1}
     (nil))
(insn 2164 2163 2165 163 (parallel [
            (set (reg:DI 1 dx [orig:608 _522 ] [608])
                (plus:DI (reg:DI 0 ax [orig:607 _521 ] [607])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":458 222 {*adddi_1}
     (nil))
(insn 2165 2164 2166 163 (set (reg:SF 21 xmm0 [orig:609 _523 ] [609])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2166 2165 2167 163 (set (reg/f:DI 0 ax [1723])
        (symbol_ref:DI ("cldtp.4371") [flags 0x202]  <var_decl 0x7f20392d77e0 cldtp>)) "CLDRAD.f":458 85 {*movdi_internal}
     (nil))
(insn 2167 2166 2168 163 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:608 _522 ] [608])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1723])) [1 cldtp S4 A32])
        (reg:SF 21 xmm0 [orig:609 _523 ] [609])) "CLDRAD.f":458 131 {*movsf_internal}
     (nil))
(insn 2168 2167 2169 163 (set (reg:SI 0 ax [1724])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":459 86 {*movsi_internal}
     (nil))
(insn 2169 2168 2170 163 (set (reg:DI 0 ax [orig:610 _524 ] [610])
        (sign_extend:DI (reg:SI 0 ax [1724]))) "CLDRAD.f":459 149 {*extendsidi2_rex64}
     (nil))
(insn 2170 2169 2171 163 (parallel [
            (set (reg:DI 1 dx [orig:611 _525 ] [611])
                (mult:DI (reg:DI 0 ax [orig:610 _524 ] [610])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":459 349 {*muldi3_1}
     (nil))
(insn 2171 2170 2172 163 (set (reg:SI 0 ax [1725])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":459 86 {*movsi_internal}
     (nil))
(insn 2172 2171 2173 163 (set (reg:DI 0 ax [orig:612 _526 ] [612])
        (sign_extend:DI (reg:SI 0 ax [1725]))) "CLDRAD.f":459 149 {*extendsidi2_rex64}
     (nil))
(insn 2173 2172 2174 163 (parallel [
            (set (reg:DI 0 ax [orig:613 _527 ] [613])
                (plus:DI (reg:DI 0 ax [orig:612 _526 ] [612])
                    (reg:DI 1 dx [orig:611 _525 ] [611])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":459 222 {*adddi_1}
     (nil))
(insn 2174 2173 2175 163 (parallel [
            (set (reg:DI 1 dx [orig:614 _528 ] [614])
                (plus:DI (reg:DI 0 ax [orig:613 _527 ] [613])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":459 222 {*adddi_1}
     (nil))
(insn 2175 2174 2176 163 (set (reg:SF 21 xmm0 [orig:615 _529 ] [615])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2176 2175 2177 163 (set (reg/f:DI 0 ax [1726])
        (symbol_ref:DI ("cldtz.4375") [flags 0x202]  <var_decl 0x7f20392d7900 cldtz>)) "CLDRAD.f":459 85 {*movdi_internal}
     (nil))
(insn 2177 2176 2178 163 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:614 _528 ] [614])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1726])) [1 cldtz S4 A32])
        (reg:SF 21 xmm0 [orig:615 _529 ] [615])) "CLDRAD.f":459 131 {*movsf_internal}
     (nil))
(insn 2178 2177 2179 163 (set (reg:SI 0 ax [1727])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":460 86 {*movsi_internal}
     (nil))
(insn 2179 2178 2180 163 (set (reg:DI 0 ax [orig:616 _530 ] [616])
        (sign_extend:DI (reg:SI 0 ax [1727]))) "CLDRAD.f":460 149 {*extendsidi2_rex64}
     (nil))
(insn 2180 2179 2181 163 (parallel [
            (set (reg:DI 1 dx [orig:617 _531 ] [617])
                (mult:DI (reg:DI 0 ax [orig:616 _530 ] [616])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":460 349 {*muldi3_1}
     (nil))
(insn 2181 2180 2182 163 (set (reg:SI 0 ax [1728])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":460 86 {*movsi_internal}
     (nil))
(insn 2182 2181 2183 163 (set (reg:DI 0 ax [orig:618 _532 ] [618])
        (sign_extend:DI (reg:SI 0 ax [1728]))) "CLDRAD.f":460 149 {*extendsidi2_rex64}
     (nil))
(insn 2183 2182 2184 163 (parallel [
            (set (reg:DI 0 ax [orig:619 _533 ] [619])
                (plus:DI (reg:DI 0 ax [orig:618 _532 ] [618])
                    (reg:DI 1 dx [orig:617 _531 ] [617])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":460 222 {*adddi_1}
     (nil))
(insn 2184 2183 2185 163 (parallel [
            (set (reg:DI 1 dx [orig:620 _534 ] [620])
                (plus:DI (reg:DI 0 ax [orig:619 _533 ] [619])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":460 222 {*adddi_1}
     (nil))
(insn 2185 2184 2186 163 (set (reg/f:DI 0 ax [1729])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f20392b7bd0 loops>)) "CLDRAD.f":460 85 {*movdi_internal}
     (nil))
(insn 2186 2185 2187 163 (parallel [
            (set (reg:DI 1 dx [1730])
                (plus:DI (reg:DI 1 dx [orig:620 _534 ] [620])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":460 222 {*adddi_1}
     (nil))
(insn 2187 2186 2188 163 (set (reg:SI 0 ax [1731])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1730])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1729])) [2 loops.lmh S4 A32])) "CLDRAD.f":460 86 {*movsi_internal}
     (nil))
(insn 2188 2187 2189 163 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [2 lmhk+0 S4 A32])
        (reg:SI 0 ax [1731])) "CLDRAD.f":460 86 {*movsi_internal}
     (nil))
(insn 2189 2188 2190 163 (set (reg:SI 0 ax [1732])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [2 lmhk+0 S4 A32])) "CLDRAD.f":461 86 {*movsi_internal}
     (nil))
(insn 2190 2189 2191 163 (set (reg:DI 0 ax [orig:621 _535 ] [621])
        (sign_extend:DI (reg:SI 0 ax [1732]))) "CLDRAD.f":461 149 {*extendsidi2_rex64}
     (nil))
(insn 2191 2190 2192 163 (parallel [
            (set (reg:DI 1 dx [orig:622 _536 ] [622])
                (mult:DI (reg:DI 0 ax [orig:621 _535 ] [621])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 349 {*muldi3_1}
     (nil))
(insn 2192 2191 2193 163 (set (reg:SI 0 ax [1733])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":461 86 {*movsi_internal}
     (nil))
(insn 2193 2192 2194 163 (set (reg:DI 0 ax [orig:623 _537 ] [623])
        (sign_extend:DI (reg:SI 0 ax [1733]))) "CLDRAD.f":461 149 {*extendsidi2_rex64}
     (nil))
(insn 2194 2193 2195 163 (parallel [
            (set (reg:DI 0 ax [orig:624 _538 ] [624])
                (mult:DI (reg:DI 0 ax [orig:623 _537 ] [623])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 349 {*muldi3_1}
     (nil))
(insn 2195 2194 2196 163 (parallel [
            (set (reg:DI 1 dx [orig:625 _539 ] [625])
                (plus:DI (reg:DI 1 dx [orig:622 _536 ] [622])
                    (reg:DI 0 ax [orig:624 _538 ] [624])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 222 {*adddi_1}
     (nil))
(insn 2196 2195 2197 163 (set (reg:SI 0 ax [1734])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":461 86 {*movsi_internal}
     (nil))
(insn 2197 2196 2198 163 (set (reg:DI 0 ax [orig:626 _540 ] [626])
        (sign_extend:DI (reg:SI 0 ax [1734]))) "CLDRAD.f":461 149 {*extendsidi2_rex64}
     (nil))
(insn 2198 2197 2199 163 (parallel [
            (set (reg:DI 0 ax [orig:627 _541 ] [627])
                (plus:DI (reg:DI 0 ax [orig:626 _540 ] [626])
                    (reg:DI 1 dx [orig:625 _539 ] [625])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 222 {*adddi_1}
     (nil))
(insn 2199 2198 2200 163 (parallel [
            (set (reg:DI 2 cx [orig:628 _542 ] [628])
                (plus:DI (reg:DI 0 ax [orig:627 _541 ] [627])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 222 {*adddi_1}
     (nil))
(insn 2200 2199 2201 163 (set (reg:SI 0 ax [1735])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":461 86 {*movsi_internal}
     (nil))
(insn 2201 2200 2202 163 (set (reg:DI 0 ax [orig:629 _543 ] [629])
        (sign_extend:DI (reg:SI 0 ax [1735]))) "CLDRAD.f":461 149 {*extendsidi2_rex64}
     (nil))
(insn 2202 2201 2203 163 (parallel [
            (set (reg:DI 1 dx [orig:630 _544 ] [630])
                (mult:DI (reg:DI 0 ax [orig:629 _543 ] [629])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 349 {*muldi3_1}
     (nil))
(insn 2203 2202 2204 163 (set (reg:SI 0 ax [1736])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":461 86 {*movsi_internal}
     (nil))
(insn 2204 2203 2205 163 (set (reg:DI 0 ax [orig:631 _545 ] [631])
        (sign_extend:DI (reg:SI 0 ax [1736]))) "CLDRAD.f":461 149 {*extendsidi2_rex64}
     (nil))
(insn 2205 2204 2206 163 (parallel [
            (set (reg:DI 0 ax [orig:632 _546 ] [632])
                (plus:DI (reg:DI 0 ax [orig:631 _545 ] [631])
                    (reg:DI 1 dx [orig:630 _544 ] [630])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 222 {*adddi_1}
     (nil))
(insn 2206 2205 2207 163 (parallel [
            (set (reg:DI 1 dx [orig:633 _547 ] [633])
                (plus:DI (reg:DI 0 ax [orig:632 _546 ] [632])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 222 {*adddi_1}
     (nil))
(insn 2207 2206 2208 163 (set (reg/f:DI 0 ax [1737])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":461 85 {*movdi_internal}
     (nil))
(insn 2208 2207 2209 163 (parallel [
            (set (reg:DI 2 cx [1738])
                (plus:DI (reg:DI 2 cx [orig:628 _542 ] [628])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 222 {*adddi_1}
     (nil))
(insn 2209 2208 2210 163 (set (reg:SF 21 xmm0 [orig:634 _548 ] [634])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1738])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1737])) [1 vrbls.t S4 A32])) "CLDRAD.f":461 131 {*movsf_internal}
     (nil))
(insn 2210 2209 2211 163 (set (reg/f:DI 0 ax [1739])
        (symbol_ref:DI ("cldtt.4373") [flags 0x202]  <var_decl 0x7f20392d7870 cldtt>)) "CLDRAD.f":461 85 {*movdi_internal}
     (nil))
(insn 2211 2210 4223 163 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:633 _547 ] [633])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1739])) [1 cldtt S4 A32])
        (reg:SF 21 xmm0 [orig:634 _548 ] [634])) "CLDRAD.f":461 131 {*movsf_internal}
     (nil))
(jump_insn 4223 2211 4224 163 (set (pc)
        (label_ref 2459)) 683 {jump}
     (nil)
 -> 2459)
;;  succ:       168 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

(barrier 4224 4223 2214)
;; basic block 164, loop depth 0, maybe hot
;;  prev block 163, next block 165, flags: (RTL, MODIFIED)
;;  pred:       161
;;              162
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1740
(code_label 2214 4224 2215 164 102 (nil) [2 uses])
(note 2215 2214 2216 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 2216 2215 2217 164 (set (reg:SF 21 xmm0 [1740])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])) "CLDRAD.f":462 131 {*movsf_internal}
     (nil))
(insn 2217 2216 2218 164 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1740])
                    (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":462 54 {*cmpiusf}
     (nil))
(jump_insn 2218 2217 4119 164 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 2291)
            (pc))) "CLDRAD.f":462 682 {*jcc}
     (nil)
 -> 2291)
;;  succ:       167
;;              165 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

;; basic block 165, loop depth 0, maybe hot
;;  prev block 164, next block 166, flags: (RTL, MODIFIED)
;;  pred:       164 (FALLTHRU)
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1741
(note 4119 2218 2219 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 2219 4119 2220 165 (set (reg:SF 21 xmm0 [1741])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])) "CLDRAD.f":462 131 {*movsf_internal}
     (nil))
(insn 2220 2219 2221 165 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1741])
                    (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":462 54 {*cmpiusf}
     (nil))
(jump_insn 2221 2220 2225 165 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2291)
            (pc))) "CLDRAD.f":462 682 {*jcc}
     (nil)
 -> 2291)
;;  succ:       166 (FALLTHRU)
;;              167
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

;; basic block 166, loop depth 0, maybe hot
;;  prev block 165, next block 167, flags: (RTL, MODIFIED)
;;  pred:       165 (FALLTHRU)
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 1742 1743 1744 1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 1761 1762 1763 1764
(note 2225 2221 2226 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 2226 2225 2227 166 (set (reg/f:DI 0 ax [1742])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":463 85 {*movdi_internal}
     (nil))
(insn 2227 2226 2228 166 (set (reg:SF 22 xmm1 [orig:635 _549 ] [635])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1742])
                (const_int 384 [0x180])) [1 phys.aeta1+148 S4 A128])) "CLDRAD.f":463 131 {*movsf_internal}
     (nil))
(insn 2228 2227 2229 166 (set (reg:SI 0 ax [1743])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":463 86 {*movsi_internal}
     (nil))
(insn 2229 2228 2230 166 (set (reg:DI 0 ax [orig:636 _550 ] [636])
        (sign_extend:DI (reg:SI 0 ax [1743]))) "CLDRAD.f":463 149 {*extendsidi2_rex64}
     (nil))
(insn 2230 2229 2231 166 (parallel [
            (set (reg:DI 1 dx [orig:637 _551 ] [637])
                (mult:DI (reg:DI 0 ax [orig:636 _550 ] [636])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":463 349 {*muldi3_1}
     (nil))
(insn 2231 2230 2232 166 (set (reg:SI 0 ax [1744])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":463 86 {*movsi_internal}
     (nil))
(insn 2232 2231 2233 166 (set (reg:DI 0 ax [orig:638 _552 ] [638])
        (sign_extend:DI (reg:SI 0 ax [1744]))) "CLDRAD.f":463 149 {*extendsidi2_rex64}
     (nil))
(insn 2233 2232 2234 166 (parallel [
            (set (reg:DI 0 ax [orig:639 _553 ] [639])
                (plus:DI (reg:DI 0 ax [orig:638 _552 ] [638])
                    (reg:DI 1 dx [orig:637 _551 ] [637])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":463 222 {*adddi_1}
     (nil))
(insn 2234 2233 2235 166 (parallel [
            (set (reg:DI 1 dx [orig:640 _554 ] [640])
                (plus:DI (reg:DI 0 ax [orig:639 _553 ] [639])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":463 222 {*adddi_1}
     (nil))
(insn 2235 2234 2236 166 (set (reg/f:DI 0 ax [1745])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":463 85 {*movdi_internal}
     (nil))
(insn 2236 2235 2237 166 (parallel [
            (set (reg:DI 1 dx [1746])
                (plus:DI (reg:DI 1 dx [orig:640 _554 ] [640])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":463 222 {*adddi_1}
     (nil))
(insn 2237 2236 2238 166 (set (reg:SF 21 xmm0 [orig:641 _555 ] [641])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1746])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1745])) [1 extra.pdsl S4 A32])) "CLDRAD.f":463 131 {*movsf_internal}
     (nil))
(insn 2238 2237 2239 166 (set (reg:SF 22 xmm1 [orig:642 _556 ] [642])
        (mult:SF (reg:SF 22 xmm1 [orig:635 _549 ] [635])
            (reg:SF 21 xmm0 [orig:641 _555 ] [641]))) "CLDRAD.f":463 838 {*fop_sf_comm}
     (nil))
(insn 2239 2238 2240 166 (set (reg/f:DI 0 ax [1747])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2240 2239 2241 166 (set (reg:SF 21 xmm0 [orig:643 _557 ] [643])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1747])
                (const_int 4 [0x4])) [1 phys.pt1+0 S4 A32])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2241 2240 2242 166 (set (reg:SI 0 ax [1748])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":463 86 {*movsi_internal}
     (nil))
(insn 2242 2241 2243 166 (set (reg:DI 0 ax [orig:644 _558 ] [644])
        (sign_extend:DI (reg:SI 0 ax [1748]))) "CLDRAD.f":463 149 {*extendsidi2_rex64}
     (nil))
(insn 2243 2242 2244 166 (parallel [
            (set (reg:DI 1 dx [orig:645 _559 ] [645])
                (mult:DI (reg:DI 0 ax [orig:644 _558 ] [644])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":463 349 {*muldi3_1}
     (nil))
(insn 2244 2243 2245 166 (set (reg:SI 0 ax [1749])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":463 86 {*movsi_internal}
     (nil))
(insn 2245 2244 2246 166 (set (reg:DI 0 ax [orig:646 _560 ] [646])
        (sign_extend:DI (reg:SI 0 ax [1749]))) "CLDRAD.f":463 149 {*extendsidi2_rex64}
     (nil))
(insn 2246 2245 2247 166 (parallel [
            (set (reg:DI 0 ax [orig:647 _561 ] [647])
                (plus:DI (reg:DI 0 ax [orig:646 _560 ] [646])
                    (reg:DI 1 dx [orig:645 _559 ] [645])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":463 222 {*adddi_1}
     (nil))
(insn 2247 2246 2248 166 (parallel [
            (set (reg:DI 1 dx [orig:648 _562 ] [648])
                (plus:DI (reg:DI 0 ax [orig:647 _561 ] [647])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":463 222 {*adddi_1}
     (nil))
(insn 2248 2247 2249 166 (set (reg:SF 21 xmm0 [orig:649 _563 ] [649])
        (plus:SF (reg:SF 21 xmm0 [orig:643 _557 ] [643])
            (reg:SF 22 xmm1 [orig:642 _556 ] [642]))) "CLDRAD.f":463 838 {*fop_sf_comm}
     (nil))
(insn 2249 2248 2250 166 (set (reg/f:DI 0 ax [1750])
        (symbol_ref:DI ("cldtp.4371") [flags 0x202]  <var_decl 0x7f20392d77e0 cldtp>)) "CLDRAD.f":463 85 {*movdi_internal}
     (nil))
(insn 2250 2249 2251 166 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:648 _562 ] [648])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1750])) [1 cldtp S4 A32])
        (reg:SF 21 xmm0 [orig:649 _563 ] [649])) "CLDRAD.f":463 131 {*movsf_internal}
     (nil))
(insn 2251 2250 2252 166 (set (reg:SI 0 ax [1751])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":464 86 {*movsi_internal}
     (nil))
(insn 2252 2251 2253 166 (set (reg:DI 0 ax [orig:650 _564 ] [650])
        (sign_extend:DI (reg:SI 0 ax [1751]))) "CLDRAD.f":464 149 {*extendsidi2_rex64}
     (nil))
(insn 2253 2252 2254 166 (parallel [
            (set (reg:DI 1 dx [orig:651 _565 ] [651])
                (mult:DI (reg:DI 0 ax [orig:650 _564 ] [650])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":464 349 {*muldi3_1}
     (nil))
(insn 2254 2253 2255 166 (set (reg:SI 0 ax [1752])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":464 86 {*movsi_internal}
     (nil))
(insn 2255 2254 2256 166 (set (reg:DI 0 ax [orig:652 _566 ] [652])
        (sign_extend:DI (reg:SI 0 ax [1752]))) "CLDRAD.f":464 149 {*extendsidi2_rex64}
     (nil))
(insn 2256 2255 2257 166 (parallel [
            (set (reg:DI 0 ax [orig:653 _567 ] [653])
                (plus:DI (reg:DI 0 ax [orig:652 _566 ] [652])
                    (reg:DI 1 dx [orig:651 _565 ] [651])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":464 222 {*adddi_1}
     (nil))
(insn 2257 2256 2258 166 (parallel [
            (set (reg:DI 2 cx [orig:654 _568 ] [654])
                (plus:DI (reg:DI 0 ax [orig:653 _567 ] [653])
                    (const_int 1096227 [0x10ba23])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":464 222 {*adddi_1}
     (nil))
(insn 2258 2257 2259 166 (set (reg:SI 0 ax [1753])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":464 86 {*movsi_internal}
     (nil))
(insn 2259 2258 2260 166 (set (reg:DI 0 ax [orig:655 _569 ] [655])
        (sign_extend:DI (reg:SI 0 ax [1753]))) "CLDRAD.f":464 149 {*extendsidi2_rex64}
     (nil))
(insn 2260 2259 2261 166 (parallel [
            (set (reg:DI 1 dx [orig:656 _570 ] [656])
                (mult:DI (reg:DI 0 ax [orig:655 _569 ] [655])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":464 349 {*muldi3_1}
     (nil))
(insn 2261 2260 2262 166 (set (reg:SI 0 ax [1754])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":464 86 {*movsi_internal}
     (nil))
(insn 2262 2261 2263 166 (set (reg:DI 0 ax [orig:657 _571 ] [657])
        (sign_extend:DI (reg:SI 0 ax [1754]))) "CLDRAD.f":464 149 {*extendsidi2_rex64}
     (nil))
(insn 2263 2262 2264 166 (parallel [
            (set (reg:DI 0 ax [orig:658 _572 ] [658])
                (plus:DI (reg:DI 0 ax [orig:657 _571 ] [657])
                    (reg:DI 1 dx [orig:656 _570 ] [656])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":464 222 {*adddi_1}
     (nil))
(insn 2264 2263 2265 166 (parallel [
            (set (reg:DI 1 dx [orig:659 _573 ] [659])
                (plus:DI (reg:DI 0 ax [orig:658 _572 ] [658])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":464 222 {*adddi_1}
     (nil))
(insn 2265 2264 2266 166 (set (reg/f:DI 0 ax [1755])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":464 85 {*movdi_internal}
     (nil))
(insn 2266 2265 2267 166 (parallel [
            (set (reg:DI 2 cx [1756])
                (plus:DI (reg:DI 2 cx [orig:654 _568 ] [654])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":464 222 {*adddi_1}
     (nil))
(insn 2267 2266 2268 166 (set (reg:SF 21 xmm0 [orig:660 _574 ] [660])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1756])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1755])) [1 extra.zint S4 A32])) "CLDRAD.f":464 131 {*movsf_internal}
     (nil))
(insn 2268 2267 2269 166 (set (reg/f:DI 0 ax [1757])
        (symbol_ref:DI ("cldtz.4375") [flags 0x202]  <var_decl 0x7f20392d7900 cldtz>)) "CLDRAD.f":464 85 {*movdi_internal}
     (nil))
(insn 2269 2268 2270 166 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:659 _573 ] [659])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1757])) [1 cldtz S4 A32])
        (reg:SF 21 xmm0 [orig:660 _574 ] [660])) "CLDRAD.f":464 131 {*movsf_internal}
     (nil))
(insn 2270 2269 2271 166 (set (reg:SI 0 ax [1758])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":465 86 {*movsi_internal}
     (nil))
(insn 2271 2270 2272 166 (set (reg:DI 0 ax [orig:661 _575 ] [661])
        (sign_extend:DI (reg:SI 0 ax [1758]))) "CLDRAD.f":465 149 {*extendsidi2_rex64}
     (nil))
(insn 2272 2271 2273 166 (parallel [
            (set (reg:DI 1 dx [orig:662 _576 ] [662])
                (mult:DI (reg:DI 0 ax [orig:661 _575 ] [661])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":465 349 {*muldi3_1}
     (nil))
(insn 2273 2272 2274 166 (set (reg:SI 0 ax [1759])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":465 86 {*movsi_internal}
     (nil))
(insn 2274 2273 2275 166 (set (reg:DI 0 ax [orig:663 _577 ] [663])
        (sign_extend:DI (reg:SI 0 ax [1759]))) "CLDRAD.f":465 149 {*extendsidi2_rex64}
     (nil))
(insn 2275 2274 2276 166 (parallel [
            (set (reg:DI 0 ax [orig:664 _578 ] [664])
                (plus:DI (reg:DI 0 ax [orig:663 _577 ] [663])
                    (reg:DI 1 dx [orig:662 _576 ] [662])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":465 222 {*adddi_1}
     (nil))
(insn 2276 2275 2277 166 (parallel [
            (set (reg:DI 2 cx [orig:665 _579 ] [665])
                (plus:DI (reg:DI 0 ax [orig:664 _578 ] [664])
                    (const_int 1096227 [0x10ba23])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":465 222 {*adddi_1}
     (nil))
(insn 2277 2276 2278 166 (set (reg:SI 0 ax [1760])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":465 86 {*movsi_internal}
     (nil))
(insn 2278 2277 2279 166 (set (reg:DI 0 ax [orig:666 _580 ] [666])
        (sign_extend:DI (reg:SI 0 ax [1760]))) "CLDRAD.f":465 149 {*extendsidi2_rex64}
     (nil))
(insn 2279 2278 2280 166 (parallel [
            (set (reg:DI 1 dx [orig:667 _581 ] [667])
                (mult:DI (reg:DI 0 ax [orig:666 _580 ] [666])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":465 349 {*muldi3_1}
     (nil))
(insn 2280 2279 2281 166 (set (reg:SI 0 ax [1761])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":465 86 {*movsi_internal}
     (nil))
(insn 2281 2280 2282 166 (set (reg:DI 0 ax [orig:668 _582 ] [668])
        (sign_extend:DI (reg:SI 0 ax [1761]))) "CLDRAD.f":465 149 {*extendsidi2_rex64}
     (nil))
(insn 2282 2281 2283 166 (parallel [
            (set (reg:DI 0 ax [orig:669 _583 ] [669])
                (plus:DI (reg:DI 0 ax [orig:668 _582 ] [668])
                    (reg:DI 1 dx [orig:667 _581 ] [667])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":465 222 {*adddi_1}
     (nil))
(insn 2283 2282 2284 166 (parallel [
            (set (reg:DI 1 dx [orig:670 _584 ] [670])
                (plus:DI (reg:DI 0 ax [orig:669 _583 ] [669])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":465 222 {*adddi_1}
     (nil))
(insn 2284 2283 2285 166 (set (reg/f:DI 0 ax [1762])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":465 85 {*movdi_internal}
     (nil))
(insn 2285 2284 2286 166 (parallel [
            (set (reg:DI 2 cx [1763])
                (plus:DI (reg:DI 2 cx [orig:665 _579 ] [665])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":465 222 {*adddi_1}
     (nil))
(insn 2286 2285 2287 166 (set (reg:SF 21 xmm0 [orig:671 _585 ] [671])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1763])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1762])) [1 vrbls.t S4 A32])) "CLDRAD.f":465 131 {*movsf_internal}
     (nil))
(insn 2287 2286 2288 166 (set (reg/f:DI 0 ax [1764])
        (symbol_ref:DI ("cldtt.4373") [flags 0x202]  <var_decl 0x7f20392d7870 cldtt>)) "CLDRAD.f":465 85 {*movdi_internal}
     (nil))
(insn 2288 2287 4225 166 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:670 _584 ] [670])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1764])) [1 cldtt S4 A32])
        (reg:SF 21 xmm0 [orig:671 _585 ] [671])) "CLDRAD.f":465 131 {*movsf_internal}
     (nil))
(jump_insn 4225 2288 4226 166 (set (pc)
        (label_ref 2459)) 683 {jump}
     (nil)
 -> 2459)
;;  succ:       168 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

(barrier 4226 4225 2291)
;; basic block 167, loop depth 0, maybe hot
;;  prev block 166, next block 168, flags: (RTL, MODIFIED)
;;  pred:       164
;;              165
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 1809 1810 1811 1812 1813 1814 1815 1816 1817 1818
(code_label 2291 4226 2292 167 105 (nil) [2 uses])
(note 2292 2291 2293 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 2293 2292 2294 167 (set (reg:SF 21 xmm0 [1765])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])) "CLDRAD.f":467 131 {*movsf_internal}
     (nil))
(insn 2294 2293 2295 167 (set (reg:SI 0 ax [1766])
        (fix:SI (reg:SF 21 xmm0 [1765]))) "CLDRAD.f":467 174 {fix_truncsfsi_sse}
     (nil))
(insn 2295 2294 2296 167 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])
        (reg:SI 0 ax [1766])) "CLDRAD.f":467 86 {*movsi_internal}
     (nil))
(insn 2296 2295 2297 167 (set (reg:SI 0 ax [1767])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":468 86 {*movsi_internal}
     (nil))
(insn 2297 2296 2298 167 (set (reg:DI 0 ax [orig:672 _586 ] [672])
        (sign_extend:DI (reg:SI 0 ax [1767]))) "CLDRAD.f":468 149 {*extendsidi2_rex64}
     (nil))
(insn 2298 2297 2299 167 (parallel [
            (set (reg:DI 1 dx [orig:673 _587 ] [673])
                (plus:DI (reg:DI 0 ax [orig:672 _586 ] [672])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 222 {*adddi_1}
     (nil))
(insn 2299 2298 2300 167 (set (reg/f:DI 0 ax [1768])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":468 85 {*movdi_internal}
     (nil))
(insn 2300 2299 2301 167 (parallel [
            (set (reg:DI 1 dx [1769])
                (plus:DI (reg:DI 1 dx [orig:673 _587 ] [673])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 222 {*adddi_1}
     (nil))
(insn 2301 2300 2302 167 (set (reg:SF 22 xmm1 [orig:674 _588 ] [674])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1769])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1768])) [1 phys.aeta1 S4 A32])) "CLDRAD.f":468 131 {*movsf_internal}
     (nil))
(insn 2302 2301 2303 167 (set (reg:SI 0 ax [1770])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":468 86 {*movsi_internal}
     (nil))
(insn 2303 2302 2304 167 (set (reg:DI 0 ax [orig:675 _589 ] [675])
        (sign_extend:DI (reg:SI 0 ax [1770]))) "CLDRAD.f":468 149 {*extendsidi2_rex64}
     (nil))
(insn 2304 2303 2305 167 (parallel [
            (set (reg:DI 1 dx [orig:676 _590 ] [676])
                (mult:DI (reg:DI 0 ax [orig:675 _589 ] [675])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 349 {*muldi3_1}
     (nil))
(insn 2305 2304 2306 167 (set (reg:SI 0 ax [1771])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":468 86 {*movsi_internal}
     (nil))
(insn 2306 2305 2307 167 (set (reg:DI 0 ax [orig:677 _591 ] [677])
        (sign_extend:DI (reg:SI 0 ax [1771]))) "CLDRAD.f":468 149 {*extendsidi2_rex64}
     (nil))
(insn 2307 2306 2308 167 (parallel [
            (set (reg:DI 0 ax [orig:678 _592 ] [678])
                (plus:DI (reg:DI 0 ax [orig:677 _591 ] [677])
                    (reg:DI 1 dx [orig:676 _590 ] [676])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 222 {*adddi_1}
     (nil))
(insn 2308 2307 2309 167 (parallel [
            (set (reg:DI 1 dx [orig:679 _593 ] [679])
                (plus:DI (reg:DI 0 ax [orig:678 _592 ] [678])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 222 {*adddi_1}
     (nil))
(insn 2309 2308 2310 167 (set (reg/f:DI 0 ax [1772])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":468 85 {*movdi_internal}
     (nil))
(insn 2310 2309 2311 167 (parallel [
            (set (reg:DI 1 dx [1773])
                (plus:DI (reg:DI 1 dx [orig:679 _593 ] [679])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 222 {*adddi_1}
     (nil))
(insn 2311 2310 2312 167 (set (reg:SF 21 xmm0 [orig:680 _594 ] [680])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1773])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1772])) [1 extra.pdsl S4 A32])) "CLDRAD.f":468 131 {*movsf_internal}
     (nil))
(insn 2312 2311 2313 167 (set (reg:SF 22 xmm1 [orig:681 _595 ] [681])
        (mult:SF (reg:SF 22 xmm1 [orig:674 _588 ] [674])
            (reg:SF 21 xmm0 [orig:680 _594 ] [680]))) "CLDRAD.f":468 838 {*fop_sf_comm}
     (nil))
(insn 2313 2312 2314 167 (set (reg/f:DI 0 ax [1774])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2314 2313 2315 167 (set (reg:SF 21 xmm0 [orig:682 _596 ] [682])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1774])
                (const_int 4 [0x4])) [1 phys.pt1+0 S4 A32])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2315 2314 2316 167 (set (reg:SI 0 ax [1775])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":468 86 {*movsi_internal}
     (nil))
(insn 2316 2315 2317 167 (set (reg:DI 0 ax [orig:683 _597 ] [683])
        (sign_extend:DI (reg:SI 0 ax [1775]))) "CLDRAD.f":468 149 {*extendsidi2_rex64}
     (nil))
(insn 2317 2316 2318 167 (parallel [
            (set (reg:DI 1 dx [orig:684 _598 ] [684])
                (mult:DI (reg:DI 0 ax [orig:683 _597 ] [683])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 349 {*muldi3_1}
     (nil))
(insn 2318 2317 2319 167 (set (reg:SI 0 ax [1776])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":468 86 {*movsi_internal}
     (nil))
(insn 2319 2318 2320 167 (set (reg:DI 0 ax [orig:685 _599 ] [685])
        (sign_extend:DI (reg:SI 0 ax [1776]))) "CLDRAD.f":468 149 {*extendsidi2_rex64}
     (nil))
(insn 2320 2319 2321 167 (parallel [
            (set (reg:DI 0 ax [orig:686 _600 ] [686])
                (plus:DI (reg:DI 0 ax [orig:685 _599 ] [685])
                    (reg:DI 1 dx [orig:684 _598 ] [684])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 222 {*adddi_1}
     (nil))
(insn 2321 2320 2322 167 (parallel [
            (set (reg:DI 1 dx [orig:687 _601 ] [687])
                (plus:DI (reg:DI 0 ax [orig:686 _600 ] [686])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 222 {*adddi_1}
     (nil))
(insn 2322 2321 2323 167 (set (reg:SF 21 xmm0 [orig:688 _602 ] [688])
        (plus:SF (reg:SF 21 xmm0 [orig:682 _596 ] [682])
            (reg:SF 22 xmm1 [orig:681 _595 ] [681]))) "CLDRAD.f":468 838 {*fop_sf_comm}
     (nil))
(insn 2323 2322 2324 167 (set (reg/f:DI 0 ax [1777])
        (symbol_ref:DI ("cldtp.4371") [flags 0x202]  <var_decl 0x7f20392d77e0 cldtp>)) "CLDRAD.f":468 85 {*movdi_internal}
     (nil))
(insn 2324 2323 2325 167 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:687 _601 ] [687])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1777])) [1 cldtp S4 A32])
        (reg:SF 21 xmm0 [orig:688 _602 ] [688])) "CLDRAD.f":468 131 {*movsf_internal}
     (nil))
(insn 2325 2324 2326 167 (set (reg:SI 0 ax [1778])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2326 2325 2327 167 (parallel [
            (set (reg:SI 0 ax [orig:689 _603 ] [689])
                (plus:SI (reg:SI 0 ax [1778])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2327 2326 2328 167 (set (reg:DI 0 ax [orig:690 _604 ] [690])
        (sign_extend:DI (reg:SI 0 ax [orig:689 _603 ] [689]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2328 2327 2329 167 (parallel [
            (set (reg:DI 1 dx [orig:691 _605 ] [691])
                (mult:DI (reg:DI 0 ax [orig:690 _604 ] [690])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2329 2328 2330 167 (set (reg:SI 0 ax [1779])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2330 2329 2331 167 (set (reg:DI 0 ax [orig:692 _606 ] [692])
        (sign_extend:DI (reg:SI 0 ax [1779]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2331 2330 2332 167 (parallel [
            (set (reg:DI 0 ax [orig:693 _607 ] [693])
                (mult:DI (reg:DI 0 ax [orig:692 _606 ] [692])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2332 2331 2333 167 (parallel [
            (set (reg:DI 1 dx [orig:694 _608 ] [694])
                (plus:DI (reg:DI 1 dx [orig:691 _605 ] [691])
                    (reg:DI 0 ax [orig:693 _607 ] [693])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2333 2332 2334 167 (set (reg:SI 0 ax [1780])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2334 2333 2335 167 (set (reg:DI 0 ax [orig:695 _609 ] [695])
        (sign_extend:DI (reg:SI 0 ax [1780]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2335 2334 2336 167 (parallel [
            (set (reg:DI 0 ax [orig:696 _610 ] [696])
                (plus:DI (reg:DI 0 ax [orig:695 _609 ] [695])
                    (reg:DI 1 dx [orig:694 _608 ] [694])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2336 2335 2337 167 (parallel [
            (set (reg:DI 1 dx [orig:697 _611 ] [697])
                (plus:DI (reg:DI 0 ax [orig:696 _610 ] [696])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2337 2336 2338 167 (set (reg/f:DI 0 ax [1781])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f20392c13f0 masks>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2338 2337 2339 167 (parallel [
            (set (reg:DI 1 dx [1782])
                (plus:DI (reg:DI 1 dx [orig:697 _611 ] [697])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2339 2338 2340 167 (set (reg:SF 22 xmm1 [orig:698 _612 ] [698])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1782])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1781])) [1 masks.htm S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2340 2339 2341 167 (set (reg:SI 0 ax [1783])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2341 2340 2342 167 (parallel [
            (set (reg:SI 0 ax [orig:699 _613 ] [699])
                (plus:SI (reg:SI 0 ax [1783])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2342 2341 2343 167 (set (reg:DI 0 ax [orig:700 _614 ] [700])
        (sign_extend:DI (reg:SI 0 ax [orig:699 _613 ] [699]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2343 2342 2344 167 (parallel [
            (set (reg:DI 1 dx [orig:701 _615 ] [701])
                (mult:DI (reg:DI 0 ax [orig:700 _614 ] [700])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2344 2343 2345 167 (set (reg:SI 0 ax [1784])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2345 2344 2346 167 (set (reg:DI 0 ax [orig:702 _616 ] [702])
        (sign_extend:DI (reg:SI 0 ax [1784]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2346 2345 2347 167 (parallel [
            (set (reg:DI 0 ax [orig:703 _617 ] [703])
                (mult:DI (reg:DI 0 ax [orig:702 _616 ] [702])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2347 2346 2348 167 (parallel [
            (set (reg:DI 1 dx [orig:704 _618 ] [704])
                (plus:DI (reg:DI 1 dx [orig:701 _615 ] [701])
                    (reg:DI 0 ax [orig:703 _617 ] [703])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2348 2347 2349 167 (set (reg:SI 0 ax [1785])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2349 2348 2350 167 (set (reg:DI 0 ax [orig:705 _619 ] [705])
        (sign_extend:DI (reg:SI 0 ax [1785]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2350 2349 2351 167 (parallel [
            (set (reg:DI 0 ax [orig:706 _620 ] [706])
                (plus:DI (reg:DI 0 ax [orig:705 _619 ] [705])
                    (reg:DI 1 dx [orig:704 _618 ] [704])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2351 2350 2352 167 (parallel [
            (set (reg:DI 1 dx [orig:707 _621 ] [707])
                (plus:DI (reg:DI 0 ax [orig:706 _620 ] [706])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2352 2351 2353 167 (set (reg/f:DI 0 ax [1786])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2353 2352 2354 167 (parallel [
            (set (reg:DI 1 dx [1787])
                (plus:DI (reg:DI 1 dx [orig:707 _621 ] [707])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2354 2353 2355 167 (set (reg:SF 21 xmm0 [orig:708 _622 ] [708])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1787])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1786])) [1 vrbls.t S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2355 2354 2356 167 (set (reg:SF 21 xmm0 [orig:709 _623 ] [709])
        (mult:SF (reg:SF 21 xmm0 [orig:708 _622 ] [708])
            (reg:SF 22 xmm1 [orig:698 _612 ] [698]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 2356 2355 2357 167 (set (reg:SI 0 ax [1788])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2357 2356 2358 167 (parallel [
            (set (reg:SI 0 ax [orig:710 _624 ] [710])
                (plus:SI (reg:SI 0 ax [1788])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2358 2357 2359 167 (set (reg:DI 0 ax [orig:711 _625 ] [711])
        (sign_extend:DI (reg:SI 0 ax [orig:710 _624 ] [710]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2359 2358 2360 167 (parallel [
            (set (reg:DI 1 dx [orig:712 _626 ] [712])
                (mult:DI (reg:DI 0 ax [orig:711 _625 ] [711])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2360 2359 2361 167 (set (reg:SI 0 ax [1789])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2361 2360 2362 167 (set (reg:DI 0 ax [orig:713 _627 ] [713])
        (sign_extend:DI (reg:SI 0 ax [1789]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2362 2361 2363 167 (parallel [
            (set (reg:DI 0 ax [orig:714 _628 ] [714])
                (mult:DI (reg:DI 0 ax [orig:713 _627 ] [713])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2363 2362 2364 167 (parallel [
            (set (reg:DI 1 dx [orig:715 _629 ] [715])
                (plus:DI (reg:DI 1 dx [orig:712 _626 ] [712])
                    (reg:DI 0 ax [orig:714 _628 ] [714])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2364 2363 2365 167 (set (reg:SI 0 ax [1790])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2365 2364 2366 167 (set (reg:DI 0 ax [orig:716 _630 ] [716])
        (sign_extend:DI (reg:SI 0 ax [1790]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2366 2365 2367 167 (parallel [
            (set (reg:DI 0 ax [orig:717 _631 ] [717])
                (plus:DI (reg:DI 0 ax [orig:716 _630 ] [716])
                    (reg:DI 1 dx [orig:715 _629 ] [715])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2367 2366 2368 167 (parallel [
            (set (reg:DI 1 dx [orig:718 _632 ] [718])
                (plus:DI (reg:DI 0 ax [orig:717 _631 ] [717])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2368 2367 2369 167 (set (reg/f:DI 0 ax [1791])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2369 2368 2370 167 (parallel [
            (set (reg:DI 1 dx [1792])
                (plus:DI (reg:DI 1 dx [orig:718 _632 ] [718])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2370 2369 2371 167 (set (reg:SF 23 xmm2 [orig:719 _633 ] [719])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1792])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1791])) [1 vrbls.q S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2371 2370 2372 167 (set (reg:SF 22 xmm1 [1793])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 2372 2371 2373 167 (set (reg:SF 23 xmm2 [orig:720 _634 ] [720])
        (mult:SF (reg:SF 23 xmm2 [orig:719 _633 ] [719])
            (reg:SF 22 xmm1 [1793]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 2373 2372 2374 167 (set (reg:SF 22 xmm1 [1794])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2374 2373 2376 167 (set (reg:SF 22 xmm1 [orig:721 _635 ] [721])
        (plus:SF (reg:SF 22 xmm1 [1794])
            (reg:SF 23 xmm2 [orig:720 _634 ] [720]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 2376 2374 2377 167 (set (reg:SF 22 xmm1 [orig:723 _637 ] [723])
        (mult:SF (reg:SF 22 xmm1 [orig:722 _636 ] [722])
            (reg:SF 21 xmm0 [orig:709 _623 ] [709]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 2377 2376 2378 167 (set (reg:SF 21 xmm0 [1795])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC21") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.92897968292236328125e+1 [0x0.ea5181p+5])
        (nil)))
(insn 2378 2377 4486 167 (set (reg:SF 22 xmm1 [orig:723 _637 ] [723])
        (mult:SF (reg:SF 22 xmm1 [orig:723 _637 ] [723])
            (reg:SF 21 xmm0 [1795]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 4486 2378 4520 167 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [22 %sfp+-164 S4 A32])
        (reg:SF 22 xmm1 [orig:723 _637 ] [723])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(note 4520 4486 2379 167 NOTE_INSN_DELETED)
(insn 2379 4520 2380 167 (set (reg:SI 0 ax [1796])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2380 2379 2381 167 (parallel [
            (set (reg:SI 0 ax [orig:725 _639 ] [725])
                (plus:SI (reg:SI 0 ax [1796])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2381 2380 2382 167 (set (reg:DI 0 ax [orig:726 _640 ] [726])
        (sign_extend:DI (reg:SI 0 ax [orig:725 _639 ] [725]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2382 2381 2383 167 (parallel [
            (set (reg:DI 1 dx [orig:727 _641 ] [727])
                (mult:DI (reg:DI 0 ax [orig:726 _640 ] [726])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2383 2382 2384 167 (set (reg:SI 0 ax [1797])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2384 2383 2385 167 (set (reg:DI 0 ax [orig:728 _642 ] [728])
        (sign_extend:DI (reg:SI 0 ax [1797]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2385 2384 2386 167 (parallel [
            (set (reg:DI 0 ax [orig:729 _643 ] [729])
                (mult:DI (reg:DI 0 ax [orig:728 _642 ] [728])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2386 2385 2387 167 (parallel [
            (set (reg:DI 1 dx [orig:730 _644 ] [730])
                (plus:DI (reg:DI 1 dx [orig:727 _641 ] [727])
                    (reg:DI 0 ax [orig:729 _643 ] [729])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2387 2386 2388 167 (set (reg:SI 0 ax [1798])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2388 2387 2389 167 (set (reg:DI 0 ax [orig:731 _645 ] [731])
        (sign_extend:DI (reg:SI 0 ax [1798]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2389 2388 2390 167 (parallel [
            (set (reg:DI 0 ax [orig:732 _646 ] [732])
                (plus:DI (reg:DI 0 ax [orig:731 _645 ] [731])
                    (reg:DI 1 dx [orig:730 _644 ] [730])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2390 2389 2391 167 (parallel [
            (set (reg:DI 1 dx [orig:733 _647 ] [733])
                (plus:DI (reg:DI 0 ax [orig:732 _646 ] [732])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2391 2390 2392 167 (set (reg/f:DI 0 ax [1799])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2392 2391 2394 167 (set (reg:SF 21 xmm0 [orig:734 _648 ] [734])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:733 _647 ] [733])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1799])) [1 extra.pint S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(call_insn/u 2394 2392 2395 167 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2039116900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CLDRAD.f":472 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 2395 2394 4519 167 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [22 %sfp+-168 S4 A32])
        (reg:SF 21 xmm0)) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(note 4519 2395 2396 167 NOTE_INSN_DELETED)
(insn 2396 4519 2397 167 (set (reg:SI 0 ax [1800])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2397 2396 2398 167 (set (reg:DI 0 ax [orig:736 _650 ] [736])
        (sign_extend:DI (reg:SI 0 ax [1800]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2398 2397 2399 167 (parallel [
            (set (reg:DI 1 dx [orig:737 _651 ] [737])
                (mult:DI (reg:DI 0 ax [orig:736 _650 ] [736])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2399 2398 2400 167 (set (reg:SI 0 ax [1801])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2400 2399 2401 167 (set (reg:DI 0 ax [orig:738 _652 ] [738])
        (sign_extend:DI (reg:SI 0 ax [1801]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2401 2400 2402 167 (parallel [
            (set (reg:DI 0 ax [orig:739 _653 ] [739])
                (plus:DI (reg:DI 0 ax [orig:738 _652 ] [738])
                    (reg:DI 1 dx [orig:737 _651 ] [737])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2402 2401 2403 167 (parallel [
            (set (reg:DI 1 dx [orig:740 _654 ] [740])
                (plus:DI (reg:DI 0 ax [orig:739 _653 ] [739])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2403 2402 2404 167 (set (reg/f:DI 0 ax [1802])
        (symbol_ref:DI ("cldtp.4371") [flags 0x202]  <var_decl 0x7f20392d77e0 cldtp>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2404 2403 2406 167 (set (reg:SF 21 xmm0 [orig:741 _655 ] [741])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:740 _654 ] [740])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1802])) [1 cldtp S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(call_insn/u 2406 2404 4487 167 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2039116900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CLDRAD.f":472 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 4487 2406 2408 167 (set (reg:SF 25 xmm4 [orig:735 _649 ] [735])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [22 %sfp+-168 S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2408 4487 4488 167 (set (reg:SF 25 xmm4 [orig:735 _649 ] [735])
        (minus:SF (reg:SF 25 xmm4 [orig:735 _649 ] [735])
            (reg:SF 21 xmm0 [orig:742 _656 ] [742]))) "CLDRAD.f":472 841 {*fop_sf_1}
     (nil))
(insn 4488 2408 4489 167 (set (reg:SF 21 xmm0 [orig:743 _657 ] [743])
        (reg:SF 25 xmm4 [orig:735 _649 ] [735])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 4489 4488 2410 167 (set (reg:SF 22 xmm1 [orig:724 _638 ] [724])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [22 %sfp+-164 S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2410 4489 2411 167 (set (reg:SF 22 xmm1 [orig:724 _638 ] [724])
        (mult:SF (reg:SF 22 xmm1 [orig:724 _638 ] [724])
            (reg:SF 21 xmm0 [orig:744 _658 ] [744]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 2411 2410 2412 167 (set (reg:SI 0 ax [1803])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2412 2411 2413 167 (parallel [
            (set (reg:SI 0 ax [orig:746 _660 ] [746])
                (plus:SI (reg:SI 0 ax [1803])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2413 2412 2414 167 (set (reg:DI 0 ax [orig:747 _661 ] [747])
        (sign_extend:DI (reg:SI 0 ax [orig:746 _660 ] [746]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2414 2413 2415 167 (parallel [
            (set (reg:DI 1 dx [orig:748 _662 ] [748])
                (mult:DI (reg:DI 0 ax [orig:747 _661 ] [747])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2415 2414 2416 167 (set (reg:SI 0 ax [1804])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2416 2415 2417 167 (set (reg:DI 0 ax [orig:749 _663 ] [749])
        (sign_extend:DI (reg:SI 0 ax [1804]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2417 2416 2418 167 (parallel [
            (set (reg:DI 0 ax [orig:750 _664 ] [750])
                (mult:DI (reg:DI 0 ax [orig:749 _663 ] [749])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2418 2417 2419 167 (parallel [
            (set (reg:DI 1 dx [orig:751 _665 ] [751])
                (plus:DI (reg:DI 1 dx [orig:748 _662 ] [748])
                    (reg:DI 0 ax [orig:750 _664 ] [750])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2419 2418 2420 167 (set (reg:SI 0 ax [1805])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2420 2419 2421 167 (set (reg:DI 0 ax [orig:752 _666 ] [752])
        (sign_extend:DI (reg:SI 0 ax [1805]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2421 2420 2422 167 (parallel [
            (set (reg:DI 0 ax [orig:753 _667 ] [753])
                (plus:DI (reg:DI 0 ax [orig:752 _666 ] [752])
                    (reg:DI 1 dx [orig:751 _665 ] [751])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2422 2421 2423 167 (parallel [
            (set (reg:DI 1 dx [orig:754 _668 ] [754])
                (plus:DI (reg:DI 0 ax [orig:753 _667 ] [753])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2423 2422 2424 167 (set (reg/f:DI 0 ax [1806])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2424 2423 2425 167 (parallel [
            (set (reg:DI 1 dx [1807])
                (plus:DI (reg:DI 1 dx [orig:754 _668 ] [754])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2425 2424 2426 167 (set (reg:SF 21 xmm0 [orig:755 _669 ] [755])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1807])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1806])) [1 extra.zint S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2426 2425 2427 167 (set (reg:SI 0 ax [1808])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2427 2426 2428 167 (set (reg:DI 0 ax [orig:756 _670 ] [756])
        (sign_extend:DI (reg:SI 0 ax [1808]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2428 2427 2429 167 (parallel [
            (set (reg:DI 1 dx [orig:757 _671 ] [757])
                (mult:DI (reg:DI 0 ax [orig:756 _670 ] [756])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2429 2428 2430 167 (set (reg:SI 0 ax [1809])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2430 2429 2431 167 (set (reg:DI 0 ax [orig:758 _672 ] [758])
        (sign_extend:DI (reg:SI 0 ax [1809]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2431 2430 2432 167 (parallel [
            (set (reg:DI 0 ax [orig:759 _673 ] [759])
                (plus:DI (reg:DI 0 ax [orig:758 _672 ] [758])
                    (reg:DI 1 dx [orig:757 _671 ] [757])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2432 2431 2433 167 (parallel [
            (set (reg:DI 1 dx [orig:760 _674 ] [760])
                (plus:DI (reg:DI 0 ax [orig:759 _673 ] [759])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2433 2432 2434 167 (set (reg:SF 21 xmm0 [orig:761 _675 ] [761])
        (plus:SF (reg:SF 21 xmm0 [orig:755 _669 ] [755])
            (reg:SF 22 xmm1 [orig:745 _659 ] [745]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 2434 2433 2435 167 (set (reg/f:DI 0 ax [1810])
        (symbol_ref:DI ("cldtz.4375") [flags 0x202]  <var_decl 0x7f20392d7900 cldtz>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2435 2434 2436 167 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:760 _674 ] [760])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1810])) [1 cldtz S4 A32])
        (reg:SF 21 xmm0 [orig:761 _675 ] [761])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2436 2435 2437 167 (set (reg:SI 0 ax [1811])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":473 86 {*movsi_internal}
     (nil))
(insn 2437 2436 2438 167 (set (reg:DI 0 ax [orig:762 _676 ] [762])
        (sign_extend:DI (reg:SI 0 ax [1811]))) "CLDRAD.f":473 149 {*extendsidi2_rex64}
     (nil))
(insn 2438 2437 2439 167 (parallel [
            (set (reg:DI 1 dx [orig:763 _677 ] [763])
                (mult:DI (reg:DI 0 ax [orig:762 _676 ] [762])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 349 {*muldi3_1}
     (nil))
(insn 2439 2438 2440 167 (set (reg:SI 0 ax [1812])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":473 86 {*movsi_internal}
     (nil))
(insn 2440 2439 2441 167 (set (reg:DI 0 ax [orig:764 _678 ] [764])
        (sign_extend:DI (reg:SI 0 ax [1812]))) "CLDRAD.f":473 149 {*extendsidi2_rex64}
     (nil))
(insn 2441 2440 2442 167 (parallel [
            (set (reg:DI 0 ax [orig:765 _679 ] [765])
                (mult:DI (reg:DI 0 ax [orig:764 _678 ] [764])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 349 {*muldi3_1}
     (nil))
(insn 2442 2441 2443 167 (parallel [
            (set (reg:DI 1 dx [orig:766 _680 ] [766])
                (plus:DI (reg:DI 1 dx [orig:763 _677 ] [763])
                    (reg:DI 0 ax [orig:765 _679 ] [765])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 222 {*adddi_1}
     (nil))
(insn 2443 2442 2444 167 (set (reg:SI 0 ax [1813])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":473 86 {*movsi_internal}
     (nil))
(insn 2444 2443 2445 167 (set (reg:DI 0 ax [orig:767 _681 ] [767])
        (sign_extend:DI (reg:SI 0 ax [1813]))) "CLDRAD.f":473 149 {*extendsidi2_rex64}
     (nil))
(insn 2445 2444 2446 167 (parallel [
            (set (reg:DI 0 ax [orig:768 _682 ] [768])
                (plus:DI (reg:DI 0 ax [orig:767 _681 ] [767])
                    (reg:DI 1 dx [orig:766 _680 ] [766])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 222 {*adddi_1}
     (nil))
(insn 2446 2445 2447 167 (parallel [
            (set (reg:DI 2 cx [orig:769 _683 ] [769])
                (plus:DI (reg:DI 0 ax [orig:768 _682 ] [768])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 222 {*adddi_1}
     (nil))
(insn 2447 2446 2448 167 (set (reg:SI 0 ax [1814])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":473 86 {*movsi_internal}
     (nil))
(insn 2448 2447 2449 167 (set (reg:DI 0 ax [orig:770 _684 ] [770])
        (sign_extend:DI (reg:SI 0 ax [1814]))) "CLDRAD.f":473 149 {*extendsidi2_rex64}
     (nil))
(insn 2449 2448 2450 167 (parallel [
            (set (reg:DI 1 dx [orig:771 _685 ] [771])
                (mult:DI (reg:DI 0 ax [orig:770 _684 ] [770])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 349 {*muldi3_1}
     (nil))
(insn 2450 2449 2451 167 (set (reg:SI 0 ax [1815])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":473 86 {*movsi_internal}
     (nil))
(insn 2451 2450 2452 167 (set (reg:DI 0 ax [orig:772 _686 ] [772])
        (sign_extend:DI (reg:SI 0 ax [1815]))) "CLDRAD.f":473 149 {*extendsidi2_rex64}
     (nil))
(insn 2452 2451 2453 167 (parallel [
            (set (reg:DI 0 ax [orig:773 _687 ] [773])
                (plus:DI (reg:DI 0 ax [orig:772 _686 ] [772])
                    (reg:DI 1 dx [orig:771 _685 ] [771])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 222 {*adddi_1}
     (nil))
(insn 2453 2452 2454 167 (parallel [
            (set (reg:DI 1 dx [orig:774 _688 ] [774])
                (plus:DI (reg:DI 0 ax [orig:773 _687 ] [773])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 222 {*adddi_1}
     (nil))
(insn 2454 2453 2455 167 (set (reg/f:DI 0 ax [1816])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":473 85 {*movdi_internal}
     (nil))
(insn 2455 2454 2456 167 (parallel [
            (set (reg:DI 2 cx [1817])
                (plus:DI (reg:DI 2 cx [orig:769 _683 ] [769])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 222 {*adddi_1}
     (nil))
(insn 2456 2455 2457 167 (set (reg:SF 21 xmm0 [orig:775 _689 ] [775])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1817])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1816])) [1 vrbls.t S4 A32])) "CLDRAD.f":473 131 {*movsf_internal}
     (nil))
(insn 2457 2456 2458 167 (set (reg/f:DI 0 ax [1818])
        (symbol_ref:DI ("cldtt.4373") [flags 0x202]  <var_decl 0x7f20392d7870 cldtt>)) "CLDRAD.f":473 85 {*movdi_internal}
     (nil))
(insn 2458 2457 2459 167 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:774 _688 ] [774])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1818])) [1 cldtt S4 A32])
        (reg:SF 21 xmm0 [orig:775 _689 ] [775])) "CLDRAD.f":473 131 {*movsf_internal}
     (nil))
;;  succ:       168 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

;; basic block 168, loop depth 0, maybe hot
;;  prev block 167, next block 332, flags: (RTL, MODIFIED)
;;  pred:       167 (FALLTHRU)
;;              163 [always] 
;;              166 [always] 
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2459 2458 2460 168 104 (nil) [2 uses])
(note 2460 2459 2461 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 2461 2460 4227 168 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":444 221 {*addsi_1}
     (nil))
(jump_insn 4227 2461 4228 168 (set (pc)
        (label_ref 2462)) "CLDRAD.f":444 683 {jump}
     (nil)
 -> 2462)
;;  succ:       152 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

(barrier 4228 4227 4379)
;; basic block 332, loop depth 0, maybe hot
;;  prev block 168, next block 169, flags: (RTL, MODIFIED)
;;  pred:       152
;; bb 332 artificial_defs: { }
;; bb 332 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4379 4228 4378 332 254 (nil) [1 uses])
(note 4378 4379 4380 332 [bb 332] NOTE_INSN_BASIC_BLOCK)
(insn 4380 4378 2465 332 (const_int 0 [0]) "CLDRAD.f":457 718 {nop}
     (nil))
;;  succ:       169 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

;; basic block 169, loop depth 0, maybe hot
;;  prev block 332, next block 331, flags: (RTL, MODIFIED)
;;  pred:       332 [always]  (FALLTHRU)
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2465 4380 2466 169 95 (nil) [0 uses])
(note 2466 2465 2467 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 2467 2466 4229 169 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":443 221 {*addsi_1}
     (nil))
(jump_insn 4229 2467 4230 169 (set (pc)
        (label_ref 2468)) "CLDRAD.f":443 683 {jump}
     (nil)
 -> 2468)
;;  succ:       150 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1154

(barrier 4230 4229 4376)
;; basic block 331, loop depth 0, maybe hot
;;  prev block 169, next block 170, flags: (RTL, MODIFIED)
;;  pred:       150
;; bb 331 artificial_defs: { }
;; bb 331 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4376 4230 4375 331 253 (nil) [1 uses])
(note 4375 4376 4377 331 [bb 331] NOTE_INSN_BASIC_BLOCK)
(insn 4377 4375 2471 331 (const_int 0 [0]) "CLDRAD.f":444 718 {nop}
     (nil))
;;  succ:       170 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 170, loop depth 0, maybe hot
;;  prev block 331, next block 171, flags: (RTL, MODIFIED)
;;  pred:       331 [always]  (FALLTHRU)
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 776
(code_label 2471 4377 2472 170 94 (nil) [0 uses])
(note 2472 2471 2473 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 2473 2472 2474 170 (set (reg:SI 0 ax [orig:776 _690 ] [776])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 608 [0x260]))) [2 rqstfld.iget+592 S4 A128])) "CLDRAD.f":478 86 {*movsi_internal}
     (nil))
(insn 2474 2473 2475 170 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:776 _690 ] [776])
            (const_int 0 [0]))) "CLDRAD.f":478 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2475 2474 2476 170 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2520)
            (pc))) "CLDRAD.f":478 682 {*jcc}
     (nil)
 -> 2520)
;;  succ:       171 (FALLTHRU)
;;              172
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 171, loop depth 0, maybe hot
;;  prev block 170, next block 172, flags: (RTL, MODIFIED)
;;  pred:       170 (FALLTHRU)
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 777 778 779 780 781 1819 1820 1821 1822 1823 1824 1825 1826 1827 1828 1829 1830 1831
(note 2476 2475 2477 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 2477 2476 2478 171 (set (reg:DI 1 dx [1819])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2478 2477 2479 171 (set (reg:DI 0 ax [1820])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2479 2478 2480 171 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":479 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2480 2479 2481 171 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":479 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2481 2480 2482 171 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1819])) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2482 2481 2483 171 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1820])) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2483 2482 2484 171 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2484 2483 2485 171 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cldtp.4371") [flags 0x202]  <var_decl 0x7f20392d77e0 cldtp>)) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2485 2484 2486 171 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2486 2485 2487 171 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f2038fb4900 *.LC23>)) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2487 2486 2488 171 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":479 88 {*movqi_internal}
     (nil))
(call_insn 2488 2487 2489 171 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":479 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2489 2488 2490 171 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":479 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2490 2489 2491 171 (set (reg/f:DI 1 dx [1821])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":480 85 {*movdi_internal}
     (nil))
(insn 2491 2490 2492 171 (set (reg:DI 0 ax [1822])
        (const_int 0 [0])) "CLDRAD.f":480 85 {*movdi_internal}
     (nil))
(insn 2492 2491 4491 171 (set (reg:DI 2 cx [1823])
        (const_int 12 [0xc])) "CLDRAD.f":480 85 {*movdi_internal}
     (nil))
(insn 4491 2492 2493 171 (set (reg/f:DI 5 di [1821])
        (reg/f:DI 1 dx [1821])) "CLDRAD.f":480 85 {*movdi_internal}
     (nil))
(insn 2493 4491 4492 171 (parallel [
            (set (reg:DI 2 cx [1823])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1821])
                (plus:DI (ashift:DI (reg:DI 2 cx [1823])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1821])))
            (set (mem/c:BLK (reg/f:DI 5 di [1821]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1822]))
            (use (reg:DI 2 cx [1823]))
        ]) "CLDRAD.f":480 984 {*rep_stosdi_rex64}
     (nil))
(insn 4492 2493 2494 171 (set (reg/f:DI 1 dx [1821])
        (reg/f:DI 5 di [1821])) "CLDRAD.f":480 85 {*movdi_internal}
     (nil))
(insn 2494 4492 2495 171 (set (mem/c:SI (reg/f:DI 1 dx [1821]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1822])) "CLDRAD.f":480 86 {*movsi_internal}
     (nil))
(insn 2495 2494 2496 171 (parallel [
            (set (reg/f:DI 1 dx [1821])
                (plus:DI (reg/f:DI 1 dx [1821])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":480 222 {*adddi_1}
     (nil))
(insn 2496 2495 2497 171 (set (reg:SI 0 ax [orig:777 _691 ] [777])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 608 [0x260]))) [2 rqstfld.iget+592 S4 A128])) "CLDRAD.f":482 86 {*movsi_internal}
     (nil))
(insn 2497 2496 2498 171 (set (reg:DI 0 ax [orig:778 _692 ] [778])
        (sign_extend:DI (reg:SI 0 ax [orig:777 _691 ] [777]))) "CLDRAD.f":482 149 {*extendsidi2_rex64}
     (nil))
(insn 2498 2497 2499 171 (parallel [
            (set (reg:DI 1 dx [orig:779 _693 ] [779])
                (plus:DI (reg:DI 0 ax [orig:778 _692 ] [778])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":482 222 {*adddi_1}
     (nil))
(insn 2499 2498 2500 171 (set (reg:DI 0 ax [1824])
        (reg:DI 1 dx [orig:779 _693 ] [779])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2500 2499 2502 171 (parallel [
            (set (reg:DI 0 ax [1825])
                (ashift:DI (reg:DI 0 ax [1824])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":482 551 {*ashldi3_1}
     (nil))
(insn 2502 2500 2503 171 (parallel [
            (set (reg:DI 0 ax [1824])
                (minus:DI (reg:DI 0 ax [1824])
                    (reg:DI 1 dx [orig:779 _693 ] [779])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":482 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:779 _693 ] [779])
            (const_int 15 [0xf]))
        (nil)))
(insn 2503 2502 2506 171 (parallel [
            (set (reg:DI 0 ax [1826])
                (ashift:DI (reg:DI 0 ax [1824])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":482 551 {*ashldi3_1}
     (nil))
(insn 2506 2503 2507 171 (parallel [
            (set (reg:DI 0 ax [1827])
                (plus:DI (reg:DI 0 ax [orig:780 _694 ] [780])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":482 222 {*adddi_1}
     (nil))
(insn 2507 2506 2508 171 (parallel [
            (set (reg:DI 0 ax [1828])
                (ashift:DI (reg:DI 0 ax [1827])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":482 551 {*ashldi3_1}
     (nil))
(insn 2508 2507 2509 171 (parallel [
            (set (reg/f:DI 1 dx [orig:781 _695 ] [781])
                (plus:DI (reg:DI 0 ax [1828])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":482 222 {*adddi_1}
     (nil))
(insn 2509 2508 2510 171 (set (reg:DI 4 si [1829])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2510 2509 2511 171 (set (reg:DI 2 cx [1830])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2511 2510 2512 171 (set (reg:DI 0 ax [1831])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2512 2511 2513 171 (set (reg:DI 38 r9)
        (reg:DI 4 si [1829])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2513 2512 2514 171 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1830])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2514 2513 2516 171 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1831])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2516 2514 2517 171 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 608 [0x260])))) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2517 2516 2518 171 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2518 2517 2519 171 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":482 88 {*movqi_internal}
     (nil))
(call_insn 2519 2518 2520 171 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":482 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       172 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 172, loop depth 0, maybe hot
;;  prev block 171, next block 173, flags: (RTL, MODIFIED)
;;  pred:       170
;;              171 (FALLTHRU)
;; bb 172 artificial_defs: { }
;; bb 172 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 782
(code_label 2520 2519 2521 172 109 (nil) [1 uses])
(note 2521 2520 2522 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 2522 2521 2523 172 (set (reg:SI 0 ax [orig:782 _696 ] [782])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 728 [0x2d8]))) [2 rqstfld.iget+712 S4 A64])) "CLDRAD.f":486 86 {*movsi_internal}
     (nil))
(insn 2523 2522 2524 172 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:782 _696 ] [782])
            (const_int 0 [0]))) "CLDRAD.f":486 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2524 2523 2525 172 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2569)
            (pc))) "CLDRAD.f":486 682 {*jcc}
     (nil)
 -> 2569)
;;  succ:       173 (FALLTHRU)
;;              174
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 173, loop depth 0, maybe hot
;;  prev block 172, next block 174, flags: (RTL, MODIFIED)
;;  pred:       172 (FALLTHRU)
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 783 784 785 786 787 1832 1833 1834 1835 1836 1837 1838 1839 1840 1841 1842 1843 1844
(note 2525 2524 2526 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 2526 2525 2527 173 (set (reg:DI 1 dx [1832])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2527 2526 2528 173 (set (reg:DI 0 ax [1833])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2528 2527 2529 173 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":487 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2529 2528 2530 173 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":487 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2530 2529 2531 173 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1832])) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2531 2530 2532 173 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1833])) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2532 2531 2533 173 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2533 2532 2534 173 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cldtz.4375") [flags 0x202]  <var_decl 0x7f20392d7900 cldtz>)) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2534 2533 2535 173 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2535 2534 2536 173 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f2038fb4990 *.LC24>)) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2536 2535 2537 173 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":487 88 {*movqi_internal}
     (nil))
(call_insn 2537 2536 2538 173 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":487 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2538 2537 2539 173 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":487 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2539 2538 2540 173 (set (reg/f:DI 1 dx [1834])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":488 85 {*movdi_internal}
     (nil))
(insn 2540 2539 2541 173 (set (reg:DI 0 ax [1835])
        (const_int 0 [0])) "CLDRAD.f":488 85 {*movdi_internal}
     (nil))
(insn 2541 2540 4493 173 (set (reg:DI 2 cx [1836])
        (const_int 12 [0xc])) "CLDRAD.f":488 85 {*movdi_internal}
     (nil))
(insn 4493 2541 2542 173 (set (reg/f:DI 5 di [1834])
        (reg/f:DI 1 dx [1834])) "CLDRAD.f":488 85 {*movdi_internal}
     (nil))
(insn 2542 4493 4494 173 (parallel [
            (set (reg:DI 2 cx [1836])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1834])
                (plus:DI (ashift:DI (reg:DI 2 cx [1836])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1834])))
            (set (mem/c:BLK (reg/f:DI 5 di [1834]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1835]))
            (use (reg:DI 2 cx [1836]))
        ]) "CLDRAD.f":488 984 {*rep_stosdi_rex64}
     (nil))
(insn 4494 2542 2543 173 (set (reg/f:DI 1 dx [1834])
        (reg/f:DI 5 di [1834])) "CLDRAD.f":488 85 {*movdi_internal}
     (nil))
(insn 2543 4494 2544 173 (set (mem/c:SI (reg/f:DI 1 dx [1834]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1835])) "CLDRAD.f":488 86 {*movsi_internal}
     (nil))
(insn 2544 2543 2545 173 (parallel [
            (set (reg/f:DI 1 dx [1834])
                (plus:DI (reg/f:DI 1 dx [1834])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":488 222 {*adddi_1}
     (nil))
(insn 2545 2544 2546 173 (set (reg:SI 0 ax [orig:783 _697 ] [783])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 728 [0x2d8]))) [2 rqstfld.iget+712 S4 A64])) "CLDRAD.f":490 86 {*movsi_internal}
     (nil))
(insn 2546 2545 2547 173 (set (reg:DI 0 ax [orig:784 _698 ] [784])
        (sign_extend:DI (reg:SI 0 ax [orig:783 _697 ] [783]))) "CLDRAD.f":490 149 {*extendsidi2_rex64}
     (nil))
(insn 2547 2546 2548 173 (parallel [
            (set (reg:DI 1 dx [orig:785 _699 ] [785])
                (plus:DI (reg:DI 0 ax [orig:784 _698 ] [784])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":490 222 {*adddi_1}
     (nil))
(insn 2548 2547 2549 173 (set (reg:DI 0 ax [1837])
        (reg:DI 1 dx [orig:785 _699 ] [785])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2549 2548 2551 173 (parallel [
            (set (reg:DI 0 ax [1838])
                (ashift:DI (reg:DI 0 ax [1837])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":490 551 {*ashldi3_1}
     (nil))
(insn 2551 2549 2552 173 (parallel [
            (set (reg:DI 0 ax [1837])
                (minus:DI (reg:DI 0 ax [1837])
                    (reg:DI 1 dx [orig:785 _699 ] [785])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":490 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:785 _699 ] [785])
            (const_int 15 [0xf]))
        (nil)))
(insn 2552 2551 2555 173 (parallel [
            (set (reg:DI 0 ax [1839])
                (ashift:DI (reg:DI 0 ax [1837])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":490 551 {*ashldi3_1}
     (nil))
(insn 2555 2552 2556 173 (parallel [
            (set (reg:DI 0 ax [1840])
                (plus:DI (reg:DI 0 ax [orig:786 _700 ] [786])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":490 222 {*adddi_1}
     (nil))
(insn 2556 2555 2557 173 (parallel [
            (set (reg:DI 0 ax [1841])
                (ashift:DI (reg:DI 0 ax [1840])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":490 551 {*ashldi3_1}
     (nil))
(insn 2557 2556 2558 173 (parallel [
            (set (reg/f:DI 1 dx [orig:787 _701 ] [787])
                (plus:DI (reg:DI 0 ax [1841])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":490 222 {*adddi_1}
     (nil))
(insn 2558 2557 2559 173 (set (reg:DI 4 si [1842])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2559 2558 2560 173 (set (reg:DI 2 cx [1843])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2560 2559 2561 173 (set (reg:DI 0 ax [1844])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2561 2560 2562 173 (set (reg:DI 38 r9)
        (reg:DI 4 si [1842])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2562 2561 2563 173 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1843])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2563 2562 2565 173 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1844])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2565 2563 2566 173 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 728 [0x2d8])))) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2566 2565 2567 173 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2567 2566 2568 173 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":490 88 {*movqi_internal}
     (nil))
(call_insn 2568 2567 2569 173 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":490 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       174 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 174, loop depth 0, maybe hot
;;  prev block 173, next block 175, flags: (RTL, MODIFIED)
;;  pred:       172
;;              173 (FALLTHRU)
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 788
(code_label 2569 2568 2570 174 110 (nil) [1 uses])
(note 2570 2569 2571 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 2571 2570 2572 174 (set (reg:SI 0 ax [orig:788 _702 ] [788])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 684 [0x2ac]))) [2 rqstfld.iget+668 S4 A32])) "CLDRAD.f":494 86 {*movsi_internal}
     (nil))
(insn 2572 2571 2573 174 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:788 _702 ] [788])
            (const_int 0 [0]))) "CLDRAD.f":494 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2573 2572 2574 174 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2618)
            (pc))) "CLDRAD.f":494 682 {*jcc}
     (nil)
 -> 2618)
;;  succ:       175 (FALLTHRU)
;;              176
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 175, loop depth 0, maybe hot
;;  prev block 174, next block 176, flags: (RTL, MODIFIED)
;;  pred:       174 (FALLTHRU)
;; bb 175 artificial_defs: { }
;; bb 175 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 789 790 791 792 793 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 1857
(note 2574 2573 2575 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 2575 2574 2576 175 (set (reg:DI 1 dx [1845])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2576 2575 2577 175 (set (reg:DI 0 ax [1846])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2577 2576 2578 175 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":496 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2578 2577 2579 175 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":496 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2579 2578 2580 175 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1845])) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2580 2579 2581 175 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1846])) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2581 2580 2582 175 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2582 2581 2583 175 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cldtt.4373") [flags 0x202]  <var_decl 0x7f20392d7870 cldtt>)) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2583 2582 2584 175 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2584 2583 2585 175 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f2038fb4a20 *.LC25>)) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2585 2584 2586 175 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":496 88 {*movqi_internal}
     (nil))
(call_insn 2586 2585 2587 175 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":496 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2587 2586 2588 175 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":496 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2588 2587 2589 175 (set (reg/f:DI 1 dx [1847])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":497 85 {*movdi_internal}
     (nil))
(insn 2589 2588 2590 175 (set (reg:DI 0 ax [1848])
        (const_int 0 [0])) "CLDRAD.f":497 85 {*movdi_internal}
     (nil))
(insn 2590 2589 4495 175 (set (reg:DI 2 cx [1849])
        (const_int 12 [0xc])) "CLDRAD.f":497 85 {*movdi_internal}
     (nil))
(insn 4495 2590 2591 175 (set (reg/f:DI 5 di [1847])
        (reg/f:DI 1 dx [1847])) "CLDRAD.f":497 85 {*movdi_internal}
     (nil))
(insn 2591 4495 4496 175 (parallel [
            (set (reg:DI 2 cx [1849])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1847])
                (plus:DI (ashift:DI (reg:DI 2 cx [1849])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1847])))
            (set (mem/c:BLK (reg/f:DI 5 di [1847]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1848]))
            (use (reg:DI 2 cx [1849]))
        ]) "CLDRAD.f":497 984 {*rep_stosdi_rex64}
     (nil))
(insn 4496 2591 2592 175 (set (reg/f:DI 1 dx [1847])
        (reg/f:DI 5 di [1847])) "CLDRAD.f":497 85 {*movdi_internal}
     (nil))
(insn 2592 4496 2593 175 (set (mem/c:SI (reg/f:DI 1 dx [1847]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1848])) "CLDRAD.f":497 86 {*movsi_internal}
     (nil))
(insn 2593 2592 2594 175 (parallel [
            (set (reg/f:DI 1 dx [1847])
                (plus:DI (reg/f:DI 1 dx [1847])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":497 222 {*adddi_1}
     (nil))
(insn 2594 2593 2595 175 (set (reg:SI 0 ax [orig:789 _703 ] [789])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 684 [0x2ac]))) [2 rqstfld.iget+668 S4 A32])) "CLDRAD.f":499 86 {*movsi_internal}
     (nil))
(insn 2595 2594 2596 175 (set (reg:DI 0 ax [orig:790 _704 ] [790])
        (sign_extend:DI (reg:SI 0 ax [orig:789 _703 ] [789]))) "CLDRAD.f":499 149 {*extendsidi2_rex64}
     (nil))
(insn 2596 2595 2597 175 (parallel [
            (set (reg:DI 1 dx [orig:791 _705 ] [791])
                (plus:DI (reg:DI 0 ax [orig:790 _704 ] [790])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":499 222 {*adddi_1}
     (nil))
(insn 2597 2596 2598 175 (set (reg:DI 0 ax [1850])
        (reg:DI 1 dx [orig:791 _705 ] [791])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2598 2597 2600 175 (parallel [
            (set (reg:DI 0 ax [1851])
                (ashift:DI (reg:DI 0 ax [1850])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":499 551 {*ashldi3_1}
     (nil))
(insn 2600 2598 2601 175 (parallel [
            (set (reg:DI 0 ax [1850])
                (minus:DI (reg:DI 0 ax [1850])
                    (reg:DI 1 dx [orig:791 _705 ] [791])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":499 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:791 _705 ] [791])
            (const_int 15 [0xf]))
        (nil)))
(insn 2601 2600 2604 175 (parallel [
            (set (reg:DI 0 ax [1852])
                (ashift:DI (reg:DI 0 ax [1850])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":499 551 {*ashldi3_1}
     (nil))
(insn 2604 2601 2605 175 (parallel [
            (set (reg:DI 0 ax [1853])
                (plus:DI (reg:DI 0 ax [orig:792 _706 ] [792])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":499 222 {*adddi_1}
     (nil))
(insn 2605 2604 2606 175 (parallel [
            (set (reg:DI 0 ax [1854])
                (ashift:DI (reg:DI 0 ax [1853])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":499 551 {*ashldi3_1}
     (nil))
(insn 2606 2605 2607 175 (parallel [
            (set (reg/f:DI 1 dx [orig:793 _707 ] [793])
                (plus:DI (reg:DI 0 ax [1854])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":499 222 {*adddi_1}
     (nil))
(insn 2607 2606 2608 175 (set (reg:DI 4 si [1855])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2608 2607 2609 175 (set (reg:DI 2 cx [1856])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2609 2608 2610 175 (set (reg:DI 0 ax [1857])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2610 2609 2611 175 (set (reg:DI 38 r9)
        (reg:DI 4 si [1855])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2611 2610 2612 175 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1856])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2612 2611 2614 175 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1857])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2614 2612 2615 175 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 684 [0x2ac])))) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2615 2614 2616 175 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2616 2615 2617 175 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":499 88 {*movqi_internal}
     (nil))
(call_insn 2617 2616 2618 175 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":499 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       176 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 176, loop depth 0, maybe hot
;;  prev block 175, next block 177, flags: (RTL, MODIFIED)
;;  pred:       142
;;              174
;;              175 (FALLTHRU)
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 794
(code_label 2618 2617 2619 176 89 (nil) [2 uses])
(note 2619 2618 2620 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 2620 2619 2621 176 (set (reg:SI 0 ax [orig:794 _708 ] [794])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 516 [0x204]))) [2 rqstfld.iget+500 S4 A32])) "CLDRAD.f":507 86 {*movsi_internal}
     (nil))
(insn 2621 2620 2622 176 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:794 _708 ] [794])
            (const_int 0 [0]))) "CLDRAD.f":507 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2622 2621 2623 176 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2773)
            (pc))) "CLDRAD.f":507 682 {*jcc}
     (nil)
 -> 2773)
;;  succ:       177 (FALLTHRU)
;;              192
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 177, loop depth 0, maybe hot
;;  prev block 176, next block 178, flags: (RTL, MODIFIED)
;;  pred:       176 (FALLTHRU)
;; bb 177 artificial_defs: { }
;; bb 177 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 795 1858 1859
(note 2623 2622 2624 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 2624 2623 2625 177 (set (reg/f:DI 0 ax [1858])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2625 2624 2626 177 (set (reg:SF 21 xmm0 [orig:795 _709 ] [795])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1858])
                (const_int 8 [0x8])) [1 acmrds.ardsw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2626 2625 2627 177 (set (reg:SF 22 xmm1 [1859])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":508 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2627 2626 2628 177 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:795 _709 ] [795])
            (reg:SF 22 xmm1 [1859]))) "CLDRAD.f":508 53 {*cmpisf}
     (nil))
(jump_insn 2628 2627 2632 177 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4231)
            (pc))) "CLDRAD.f":508 682 {*jcc}
     (nil)
 -> 4231)
;;  succ:       178 (FALLTHRU)
;;              179
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 178, loop depth 0, maybe hot
;;  prev block 177, next block 179, flags: (RTL, MODIFIED)
;;  pred:       177 (FALLTHRU)
;; bb 178 artificial_defs: { }
;; bb 178 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 796 1860 1861 1862
(note 2632 2628 2633 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 2633 2632 2634 178 (set (reg/f:DI 0 ax [1860])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2634 2633 2635 178 (set (reg:SF 22 xmm1 [orig:796 _710 ] [796])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1860])
                (const_int 8 [0x8])) [1 acmrds.ardsw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2635 2634 2636 178 (set (reg:SF 21 xmm0 [1862])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":509 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2636 2635 2637 178 (set (reg:SF 21 xmm0 [1861])
        (div:SF (reg:SF 21 xmm0 [1862])
            (reg:SF 22 xmm1 [orig:796 _710 ] [796]))) "CLDRAD.f":509 841 {*fop_sf_1}
     (nil))
(insn 2637 2636 4232 178 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1861])) "CLDRAD.f":509 131 {*movsf_internal}
     (nil))
(jump_insn 4232 2637 4233 178 (set (pc)
        (label_ref 2644)) 683 {jump}
     (nil)
 -> 2644)
;;  succ:       180 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4233 4232 4231)
;; basic block 179, loop depth 0, maybe hot
;;  prev block 178, next block 180, flags: (RTL, MODIFIED)
;;  pred:       177
;; bb 179 artificial_defs: { }
;; bb 179 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1863
(code_label 4231 4233 2641 179 221 (nil) [1 uses])
(note 2641 4231 2642 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 2642 2641 2643 179 (set (reg:SF 21 xmm0 [1863])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":511 131 {*movsf_internal}
     (nil))
(insn 2643 2642 2644 179 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1863])) "CLDRAD.f":511 131 {*movsf_internal}
     (nil))
;;  succ:       180 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 180, loop depth 0, maybe hot
;;  prev block 179, next block 181, flags: (RTL, MODIFIED)
;;  pred:       179 (FALLTHRU)
;;              178 [always] 
;; bb 180 artificial_defs: { }
;; bb 180 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1159 1160
(code_label 2644 2643 2645 180 114 (nil) [1 uses])
(note 2645 2644 2646 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 2646 2645 2647 180 (set (reg:SI 1 dx [orig:1159 _1431 ] [1159])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":513 86 {*movsi_internal}
     (nil))
(insn 2647 2646 2648 180 (set (reg:SI 0 ax [orig:1160 _1432 ] [1160])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":513 86 {*movsi_internal}
     (nil))
(insn 2648 2647 2691 180 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1159 _1431 ] [1159])) "CLDRAD.f":513 86 {*movsi_internal}
     (nil))
;;  succ:       181 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160

;; basic block 181, loop depth 0, maybe hot
;;  prev block 180, next block 182, flags: (RTL, MODIFIED)
;;  pred:       180 (FALLTHRU)
;;              185 [always] 
;; bb 181 artificial_defs: { }
;; bb 181 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160
;; lr  def 	 17 [flags] 1161 1864
(code_label 2691 2648 2649 181 118 (nil) [1 uses])
(note 2649 2691 2650 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 2650 2649 2651 181 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1160 _1432 ] [1160]))) "CLDRAD.f":513 11 {*cmpsi_1}
     (nil))
(insn 2651 2650 2652 181 (set (reg:QI 1 dx [1864])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":513 678 {*setcc_qi}
     (nil))
(insn 2652 2651 2653 181 (set (reg:SI 1 dx [orig:1161 _1434 ] [1161])
        (zero_extend:SI (reg:QI 1 dx [1864]))) "CLDRAD.f":513 140 {*zero_extendqisi2}
     (nil))
(insn 2653 2652 2654 181 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1161 _1434 ] [1161])
            (const_int 0 [0]))) "CLDRAD.f":513 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2654 2653 2655 181 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4385)
            (pc))) "CLDRAD.f":513 682 {*jcc}
     (nil)
 -> 4385)
;;  succ:       334
;;              182 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160

;; basic block 182, loop depth 0, maybe hot
;;  prev block 181, next block 183, flags: (RTL, MODIFIED)
;;  pred:       181 (FALLTHRU)
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2655 2654 2656 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 2656 2655 2685 182 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":514 86 {*movsi_internal}
     (nil))
;;  succ:       183 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160

;; basic block 183, loop depth 0, maybe hot
;;  prev block 182, next block 184, flags: (RTL, MODIFIED)
;;  pred:       182 (FALLTHRU)
;;              184 [always] 
;; bb 183 artificial_defs: { }
;; bb 183 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1162 1865
(code_label 2685 2656 2657 183 117 (nil) [1 uses])
(note 2657 2685 2658 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 2658 2657 2659 183 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":514 11 {*cmpsi_1}
     (nil))
(insn 2659 2658 2660 183 (set (reg:QI 1 dx [1865])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":514 678 {*setcc_qi}
     (nil))
(insn 2660 2659 2661 183 (set (reg:SI 1 dx [orig:1162 _1436 ] [1162])
        (zero_extend:SI (reg:QI 1 dx [1865]))) "CLDRAD.f":514 140 {*zero_extendqisi2}
     (nil))
(insn 2661 2660 2662 183 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1162 _1436 ] [1162])
            (const_int 0 [0]))) "CLDRAD.f":514 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2662 2661 2663 183 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4388)
            (pc))) "CLDRAD.f":514 682 {*jcc}
     (nil)
 -> 4388)
;;  succ:       335
;;              184 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160

;; basic block 184, loop depth 0, maybe hot
;;  prev block 183, next block 335, flags: (RTL, MODIFIED)
;;  pred:       183 (FALLTHRU)
;; bb 184 artificial_defs: { }
;; bb 184 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 797 798 799 800 801 802 803 804 805 806 807 808 1866 1867 1868 1869 1870 1871 1872
(note 2663 2662 2664 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 2664 2663 2665 184 (set (reg:SI 1 dx [1866])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":515 86 {*movsi_internal}
     (nil))
(insn 2665 2664 2666 184 (set (reg:DI 1 dx [orig:797 _711 ] [797])
        (sign_extend:DI (reg:SI 1 dx [1866]))) "CLDRAD.f":515 149 {*extendsidi2_rex64}
     (nil))
(insn 2666 2665 2667 184 (parallel [
            (set (reg:DI 2 cx [orig:798 _712 ] [798])
                (mult:DI (reg:DI 1 dx [orig:797 _711 ] [797])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":515 349 {*muldi3_1}
     (nil))
(insn 2667 2666 2668 184 (set (reg:SI 1 dx [1867])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":515 86 {*movsi_internal}
     (nil))
(insn 2668 2667 2669 184 (set (reg:DI 1 dx [orig:799 _713 ] [799])
        (sign_extend:DI (reg:SI 1 dx [1867]))) "CLDRAD.f":515 149 {*extendsidi2_rex64}
     (nil))
(insn 2669 2668 2670 184 (parallel [
            (set (reg:DI 1 dx [orig:800 _714 ] [800])
                (plus:DI (reg:DI 1 dx [orig:799 _713 ] [799])
                    (reg:DI 2 cx [orig:798 _712 ] [798])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":515 222 {*adddi_1}
     (nil))
(insn 2670 2669 2671 184 (parallel [
            (set (reg:DI 2 cx [orig:801 _715 ] [801])
                (plus:DI (reg:DI 1 dx [orig:800 _714 ] [800])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":515 222 {*adddi_1}
     (nil))
(insn 2671 2670 2672 184 (set (reg/f:DI 1 dx [1868])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":515 85 {*movdi_internal}
     (nil))
(insn 2672 2671 2673 184 (parallel [
            (set (reg:DI 2 cx [1869])
                (plus:DI (reg:DI 2 cx [orig:801 _715 ] [801])
                    (const_int 88896 [0x15b40])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":515 222 {*adddi_1}
     (nil))
(insn 2673 2672 2674 184 (set (reg:SF 21 xmm0 [orig:802 _716 ] [802])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1869])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1868])) [1 acmrds.aswin S4 A32])) "CLDRAD.f":515 131 {*movsf_internal}
     (nil))
(insn 2674 2673 2675 184 (set (reg:SI 1 dx [1870])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":515 86 {*movsi_internal}
     (nil))
(insn 2675 2674 2676 184 (set (reg:DI 1 dx [orig:803 _717 ] [803])
        (sign_extend:DI (reg:SI 1 dx [1870]))) "CLDRAD.f":515 149 {*extendsidi2_rex64}
     (nil))
(insn 2676 2675 2677 184 (parallel [
            (set (reg:DI 2 cx [orig:804 _718 ] [804])
                (mult:DI (reg:DI 1 dx [orig:803 _717 ] [803])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":515 349 {*muldi3_1}
     (nil))
(insn 2677 2676 2678 184 (set (reg:SI 1 dx [1871])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":515 86 {*movsi_internal}
     (nil))
(insn 2678 2677 2679 184 (set (reg:DI 1 dx [orig:805 _719 ] [805])
        (sign_extend:DI (reg:SI 1 dx [1871]))) "CLDRAD.f":515 149 {*extendsidi2_rex64}
     (nil))
(insn 2679 2678 2680 184 (parallel [
            (set (reg:DI 1 dx [orig:806 _720 ] [806])
                (plus:DI (reg:DI 1 dx [orig:805 _719 ] [805])
                    (reg:DI 2 cx [orig:804 _718 ] [804])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":515 222 {*adddi_1}
     (nil))
(insn 2680 2679 2681 184 (parallel [
            (set (reg:DI 2 cx [orig:807 _721 ] [807])
                (plus:DI (reg:DI 1 dx [orig:806 _720 ] [806])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":515 222 {*adddi_1}
     (nil))
(insn 2681 2680 2682 184 (set (reg:SF 21 xmm0 [orig:808 _722 ] [808])
        (mult:SF (reg:SF 21 xmm0 [orig:802 _716 ] [802])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32]))) "CLDRAD.f":515 838 {*fop_sf_comm}
     (nil))
(insn 2682 2681 2683 184 (set (reg/f:DI 1 dx [1872])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":515 85 {*movdi_internal}
     (nil))
(insn 2683 2682 2684 184 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:807 _721 ] [807])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1872])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:808 _722 ] [808])) "CLDRAD.f":515 131 {*movsf_internal}
     (nil))
(insn 2684 2683 4234 184 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":514 221 {*addsi_1}
     (nil))
(jump_insn 4234 2684 4235 184 (set (pc)
        (label_ref 2685)) "CLDRAD.f":514 683 {jump}
     (nil)
 -> 2685)
;;  succ:       183 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160

(barrier 4235 4234 4388)
;; basic block 335, loop depth 0, maybe hot
;;  prev block 184, next block 185, flags: (RTL, MODIFIED)
;;  pred:       183
;; bb 335 artificial_defs: { }
;; bb 335 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4388 4235 4387 335 257 (nil) [1 uses])
(note 4387 4388 4389 335 [bb 335] NOTE_INSN_BASIC_BLOCK)
(insn 4389 4387 2688 335 (const_int 0 [0]) "CLDRAD.f":515 718 {nop}
     (nil))
;;  succ:       185 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160

;; basic block 185, loop depth 0, maybe hot
;;  prev block 335, next block 334, flags: (RTL, MODIFIED)
;;  pred:       335 [always]  (FALLTHRU)
;; bb 185 artificial_defs: { }
;; bb 185 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2688 4389 2689 185 116 (nil) [0 uses])
(note 2689 2688 2690 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn 2690 2689 4236 185 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":513 221 {*addsi_1}
     (nil))
(jump_insn 4236 2690 4237 185 (set (pc)
        (label_ref 2691)) "CLDRAD.f":513 683 {jump}
     (nil)
 -> 2691)
;;  succ:       181 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1160

(barrier 4237 4236 4385)
;; basic block 334, loop depth 0, maybe hot
;;  prev block 185, next block 186, flags: (RTL, MODIFIED)
;;  pred:       181
;; bb 334 artificial_defs: { }
;; bb 334 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4385 4237 4384 334 256 (nil) [1 uses])
(note 4384 4385 4386 334 [bb 334] NOTE_INSN_BASIC_BLOCK)
(insn 4386 4384 2694 334 (const_int 0 [0]) "CLDRAD.f":514 718 {nop}
     (nil))
;;  succ:       186 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 186, loop depth 0, maybe hot
;;  prev block 334, next block 187, flags: (RTL, MODIFIED)
;;  pred:       334 [always]  (FALLTHRU)
;; bb 186 artificial_defs: { }
;; bb 186 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 809 1873 1874 1875 1876 1877 1878 1879 1880 1882 1883 1884 1885
(code_label 2694 4386 2695 186 115 (nil) [0 uses])
(note 2695 2694 2696 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 2696 2695 2697 186 (set (reg:DI 1 dx [1873])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2697 2696 2698 186 (set (reg:DI 0 ax [1874])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2698 2697 2699 186 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":518 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2699 2698 2700 186 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":518 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2700 2699 2701 186 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1873])) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2701 2700 2702 186 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1874])) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2702 2701 2703 186 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2703 2702 2704 186 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2704 2703 2705 186 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2705 2704 2706 186 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f2038fb4ab0 *.LC26>)) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2706 2705 2707 186 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":518 88 {*movqi_internal}
     (nil))
(call_insn 2707 2706 2708 186 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":518 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2708 2707 2709 186 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":518 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2709 2708 2710 186 (set (reg/f:DI 1 dx [1875])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":519 85 {*movdi_internal}
     (nil))
(insn 2710 2709 2711 186 (set (reg:DI 0 ax [1876])
        (const_int 0 [0])) "CLDRAD.f":519 85 {*movdi_internal}
     (nil))
(insn 2711 2710 4497 186 (set (reg:DI 2 cx [1877])
        (const_int 12 [0xc])) "CLDRAD.f":519 85 {*movdi_internal}
     (nil))
(insn 4497 2711 2712 186 (set (reg/f:DI 5 di [1875])
        (reg/f:DI 1 dx [1875])) "CLDRAD.f":519 85 {*movdi_internal}
     (nil))
(insn 2712 4497 4498 186 (parallel [
            (set (reg:DI 2 cx [1877])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1875])
                (plus:DI (ashift:DI (reg:DI 2 cx [1877])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1875])))
            (set (mem/c:BLK (reg/f:DI 5 di [1875]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1876]))
            (use (reg:DI 2 cx [1877]))
        ]) "CLDRAD.f":519 984 {*rep_stosdi_rex64}
     (nil))
(insn 4498 2712 2713 186 (set (reg/f:DI 1 dx [1875])
        (reg/f:DI 5 di [1875])) "CLDRAD.f":519 85 {*movdi_internal}
     (nil))
(insn 2713 4498 2714 186 (set (mem/c:SI (reg/f:DI 1 dx [1875]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1876])) "CLDRAD.f":519 86 {*movsi_internal}
     (nil))
(insn 2714 2713 2715 186 (parallel [
            (set (reg/f:DI 1 dx [1875])
                (plus:DI (reg/f:DI 1 dx [1875])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":519 222 {*adddi_1}
     (nil))
(insn 2715 2714 2716 186 (set (reg:SI 0 ax [1878])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":521 86 {*movsi_internal}
     (nil))
(insn 2716 2715 2717 186 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1878])) "CLDRAD.f":521 86 {*movsi_internal}
     (nil))
(insn 2717 2716 2718 186 (set (reg/f:DI 0 ax [1879])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2718 2717 2719 186 (set (reg:SF 21 xmm0 [orig:809 _723 ] [809])
        (mem/c:SF (reg/f:DI 0 ax [1879]) [1 acmrds.trdsw+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2719 2718 2720 186 (set (reg:SI 0 ax [1880])
        (fix:SI (reg:SF 21 xmm0 [orig:809 _723 ] [809]))) "CLDRAD.f":522 174 {fix_truncsfsi_sse}
     (nil))
(insn 2720 2719 2721 186 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])
        (reg:SI 0 ax [1880])) "CLDRAD.f":522 86 {*movsi_internal}
     (nil))
(insn 2721 2720 2722 186 (set (reg:SI 0 ax [1882])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":523 86 {*movsi_internal}
     (nil))
(insn 2722 2721 2723 186 (parallel [
            (set (reg:SI 0 ax [1884])
                (div:SI (reg:SI 0 ax [1882])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (set (reg:SI 1 dx [1883])
                (mod:SI (reg:SI 0 ax [1882])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":523 382 {*divmodsi4}
     (nil))
(insn 2723 2722 2724 186 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1883])) "CLDRAD.f":523 86 {*movsi_internal}
     (nil))
(insn 2724 2723 2725 186 (set (reg:SI 0 ax [1885])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":524 86 {*movsi_internal}
     (nil))
(insn 2725 2724 2726 186 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [1885])) "CLDRAD.f":524 86 {*movsi_internal}
     (nil))
(insn 2726 2725 2727 186 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":525 86 {*movsi_internal}
     (nil))
(insn 2727 2726 2728 186 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":526 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2728 2727 2729 186 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2735)
            (pc))) "CLDRAD.f":526 682 {*jcc}
     (nil)
 -> 2735)
;;  succ:       187 (FALLTHRU)
;;              188
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 187, loop depth 0, maybe hot
;;  prev block 186, next block 188, flags: (RTL, MODIFIED)
;;  pred:       186 (FALLTHRU)
;; bb 187 artificial_defs: { }
;; bb 187 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 810 1886
(note 2729 2728 2730 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(insn 2730 2729 2731 187 (set (reg:SI 0 ax [1886])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":527 86 {*movsi_internal}
     (nil))
(insn 2731 2730 2732 187 (parallel [
            (set (reg:SI 0 ax [orig:810 _724 ] [810])
                (minus:SI (reg:SI 0 ax [1886])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":527 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -116 [0xffffffffffffff8c])) [2 itrdsw+0 S4 A32]))
        (nil)))
(insn 2732 2731 4238 187 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:810 _724 ] [810])) "CLDRAD.f":527 86 {*movsi_internal}
     (nil))
(jump_insn 4238 2732 4239 187 (set (pc)
        (label_ref 2740)) 683 {jump}
     (nil)
 -> 2740)
;;  succ:       189 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4239 4238 2735)
;; basic block 188, loop depth 0, maybe hot
;;  prev block 187, next block 189, flags: (RTL, MODIFIED)
;;  pred:       186
;; bb 188 artificial_defs: { }
;; bb 188 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 811 1887
(code_label 2735 4239 2736 188 119 (nil) [1 uses])
(note 2736 2735 2737 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 2737 2736 2738 188 (set (reg:SI 0 ax [1887])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":529 86 {*movsi_internal}
     (nil))
(insn 2738 2737 2739 188 (parallel [
            (set (reg:SI 0 ax [orig:811 _725 ] [811])
                (minus:SI (reg:SI 0 ax [1887])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":529 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 2739 2738 2740 188 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:811 _725 ] [811])) "CLDRAD.f":529 86 {*movsi_internal}
     (nil))
;;  succ:       189 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 189, loop depth 0, maybe hot
;;  prev block 188, next block 190, flags: (RTL, MODIFIED)
;;  pred:       188 (FALLTHRU)
;;              187 [always] 
;; bb 189 artificial_defs: { }
;; bb 189 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 812
(code_label 2740 2739 2741 189 120 (nil) [1 uses])
(note 2741 2740 2742 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 2742 2741 2743 189 (set (reg:SI 0 ax [orig:812 _726 ] [812])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":531 86 {*movsi_internal}
     (nil))
(insn 2743 2742 2744 189 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:812 _726 ] [812])
            (const_int 0 [0]))) "CLDRAD.f":531 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2744 2743 2745 189 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2747)
            (pc))) "CLDRAD.f":531 682 {*jcc}
     (nil)
 -> 2747)
;;  succ:       190 (FALLTHRU)
;;              191
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 190, loop depth 0, maybe hot
;;  prev block 189, next block 191, flags: (RTL, MODIFIED)
;;  pred:       189 (FALLTHRU)
;; bb 190 artificial_defs: { }
;; bb 190 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2745 2744 2746 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(insn 2746 2745 2747 190 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":531 86 {*movsi_internal}
     (nil))
;;  succ:       191 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 191, loop depth 0, maybe hot
;;  prev block 190, next block 192, flags: (RTL, MODIFIED)
;;  pred:       189
;;              190 (FALLTHRU)
;; bb 191 artificial_defs: { }
;; bb 191 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 813 814 815 816 817 1888 1889 1890 1891 1892 1893 1894 1895
(code_label 2747 2746 2748 191 121 (nil) [1 uses])
(note 2748 2747 2749 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn 2749 2748 2750 191 (set (reg:SI 0 ax [orig:813 _727 ] [813])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 516 [0x204]))) [2 rqstfld.iget+500 S4 A32])) "CLDRAD.f":533 86 {*movsi_internal}
     (nil))
(insn 2750 2749 2751 191 (set (reg:DI 0 ax [orig:814 _728 ] [814])
        (sign_extend:DI (reg:SI 0 ax [orig:813 _727 ] [813]))) "CLDRAD.f":533 149 {*extendsidi2_rex64}
     (nil))
(insn 2751 2750 2752 191 (parallel [
            (set (reg:DI 1 dx [orig:815 _729 ] [815])
                (plus:DI (reg:DI 0 ax [orig:814 _728 ] [814])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":533 222 {*adddi_1}
     (nil))
(insn 2752 2751 2753 191 (set (reg:DI 0 ax [1888])
        (reg:DI 1 dx [orig:815 _729 ] [815])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2753 2752 2755 191 (parallel [
            (set (reg:DI 0 ax [1889])
                (ashift:DI (reg:DI 0 ax [1888])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":533 551 {*ashldi3_1}
     (nil))
(insn 2755 2753 2756 191 (parallel [
            (set (reg:DI 0 ax [1888])
                (minus:DI (reg:DI 0 ax [1888])
                    (reg:DI 1 dx [orig:815 _729 ] [815])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":533 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:815 _729 ] [815])
            (const_int 15 [0xf]))
        (nil)))
(insn 2756 2755 2759 191 (parallel [
            (set (reg:DI 0 ax [1890])
                (ashift:DI (reg:DI 0 ax [1888])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":533 551 {*ashldi3_1}
     (nil))
(insn 2759 2756 2760 191 (parallel [
            (set (reg:DI 0 ax [1891])
                (plus:DI (reg:DI 0 ax [orig:816 _730 ] [816])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":533 222 {*adddi_1}
     (nil))
(insn 2760 2759 2761 191 (parallel [
            (set (reg:DI 0 ax [1892])
                (ashift:DI (reg:DI 0 ax [1891])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":533 551 {*ashldi3_1}
     (nil))
(insn 2761 2760 2762 191 (parallel [
            (set (reg/f:DI 1 dx [orig:817 _731 ] [817])
                (plus:DI (reg:DI 0 ax [1892])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":533 222 {*adddi_1}
     (nil))
(insn 2762 2761 2763 191 (set (reg:DI 4 si [1893])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2763 2762 2764 191 (set (reg:DI 2 cx [1894])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2764 2763 2765 191 (set (reg:DI 0 ax [1895])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2765 2764 2766 191 (set (reg:DI 38 r9)
        (reg:DI 4 si [1893])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2766 2765 2767 191 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1894])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2767 2766 2769 191 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1895])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2769 2767 2770 191 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 516 [0x204])))) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2770 2769 2771 191 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2771 2770 2772 191 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":533 88 {*movqi_internal}
     (nil))
(call_insn 2772 2771 2773 191 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":533 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       192 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 192, loop depth 0, maybe hot
;;  prev block 191, next block 193, flags: (RTL, MODIFIED)
;;  pred:       176
;;              191 (FALLTHRU)
;; bb 192 artificial_defs: { }
;; bb 192 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 818
(code_label 2773 2772 2774 192 111 (nil) [1 uses])
(note 2774 2773 2775 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 2775 2774 2776 192 (set (reg:SI 0 ax [orig:818 _732 ] [818])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 520 [0x208]))) [2 rqstfld.iget+504 S4 A64])) "CLDRAD.f":537 86 {*movsi_internal}
     (nil))
(insn 2776 2775 2777 192 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:818 _732 ] [818])
            (const_int 0 [0]))) "CLDRAD.f":537 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2777 2776 2778 192 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2928)
            (pc))) "CLDRAD.f":537 682 {*jcc}
     (nil)
 -> 2928)
;;  succ:       193 (FALLTHRU)
;;              208
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 193, loop depth 0, maybe hot
;;  prev block 192, next block 194, flags: (RTL, MODIFIED)
;;  pred:       192 (FALLTHRU)
;; bb 193 artificial_defs: { }
;; bb 193 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 819 1896 1897
(note 2778 2777 2779 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 2779 2778 2780 193 (set (reg/f:DI 0 ax [1896])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2780 2779 2781 193 (set (reg:SF 21 xmm0 [orig:819 _733 ] [819])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1896])
                (const_int 8 [0x8])) [1 acmrdl.ardlw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2781 2780 2782 193 (set (reg:SF 22 xmm1 [1897])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":538 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2782 2781 2783 193 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:819 _733 ] [819])
            (reg:SF 22 xmm1 [1897]))) "CLDRAD.f":538 53 {*cmpisf}
     (nil))
(jump_insn 2783 2782 2787 193 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4240)
            (pc))) "CLDRAD.f":538 682 {*jcc}
     (nil)
 -> 4240)
;;  succ:       194 (FALLTHRU)
;;              195
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 194, loop depth 0, maybe hot
;;  prev block 193, next block 195, flags: (RTL, MODIFIED)
;;  pred:       193 (FALLTHRU)
;; bb 194 artificial_defs: { }
;; bb 194 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 820 1898 1899 1900
(note 2787 2783 2788 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(insn 2788 2787 2789 194 (set (reg/f:DI 0 ax [1898])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2789 2788 2790 194 (set (reg:SF 22 xmm1 [orig:820 _734 ] [820])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1898])
                (const_int 8 [0x8])) [1 acmrdl.ardlw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2790 2789 2791 194 (set (reg:SF 21 xmm0 [1900])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":539 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2791 2790 2792 194 (set (reg:SF 21 xmm0 [1899])
        (div:SF (reg:SF 21 xmm0 [1900])
            (reg:SF 22 xmm1 [orig:820 _734 ] [820]))) "CLDRAD.f":539 841 {*fop_sf_1}
     (nil))
(insn 2792 2791 4241 194 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1899])) "CLDRAD.f":539 131 {*movsf_internal}
     (nil))
(jump_insn 4241 2792 4242 194 (set (pc)
        (label_ref 2799)) 683 {jump}
     (nil)
 -> 2799)
;;  succ:       196 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4242 4241 4240)
;; basic block 195, loop depth 0, maybe hot
;;  prev block 194, next block 196, flags: (RTL, MODIFIED)
;;  pred:       193
;; bb 195 artificial_defs: { }
;; bb 195 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1901
(code_label 4240 4242 2796 195 222 (nil) [1 uses])
(note 2796 4240 2797 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(insn 2797 2796 2798 195 (set (reg:SF 21 xmm0 [1901])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":541 131 {*movsf_internal}
     (nil))
(insn 2798 2797 2799 195 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1901])) "CLDRAD.f":541 131 {*movsf_internal}
     (nil))
;;  succ:       196 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 196, loop depth 0, maybe hot
;;  prev block 195, next block 197, flags: (RTL, MODIFIED)
;;  pred:       195 (FALLTHRU)
;;              194 [always] 
;; bb 196 artificial_defs: { }
;; bb 196 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1163 1164
(code_label 2799 2798 2800 196 125 (nil) [1 uses])
(note 2800 2799 2801 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 2801 2800 2802 196 (set (reg:SI 1 dx [orig:1163 _1453 ] [1163])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":543 86 {*movsi_internal}
     (nil))
(insn 2802 2801 2803 196 (set (reg:SI 0 ax [orig:1164 _1454 ] [1164])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":543 86 {*movsi_internal}
     (nil))
(insn 2803 2802 2846 196 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1163 _1453 ] [1163])) "CLDRAD.f":543 86 {*movsi_internal}
     (nil))
;;  succ:       197 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164

;; basic block 197, loop depth 0, maybe hot
;;  prev block 196, next block 198, flags: (RTL, MODIFIED)
;;  pred:       196 (FALLTHRU)
;;              201 [always] 
;; bb 197 artificial_defs: { }
;; bb 197 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164
;; lr  def 	 17 [flags] 1165 1902
(code_label 2846 2803 2804 197 129 (nil) [1 uses])
(note 2804 2846 2805 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(insn 2805 2804 2806 197 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1164 _1454 ] [1164]))) "CLDRAD.f":543 11 {*cmpsi_1}
     (nil))
(insn 2806 2805 2807 197 (set (reg:QI 1 dx [1902])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":543 678 {*setcc_qi}
     (nil))
(insn 2807 2806 2808 197 (set (reg:SI 1 dx [orig:1165 _1456 ] [1165])
        (zero_extend:SI (reg:QI 1 dx [1902]))) "CLDRAD.f":543 140 {*zero_extendqisi2}
     (nil))
(insn 2808 2807 2809 197 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1165 _1456 ] [1165])
            (const_int 0 [0]))) "CLDRAD.f":543 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2809 2808 2810 197 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4391)
            (pc))) "CLDRAD.f":543 682 {*jcc}
     (nil)
 -> 4391)
;;  succ:       336
;;              198 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164

;; basic block 198, loop depth 0, maybe hot
;;  prev block 197, next block 199, flags: (RTL, MODIFIED)
;;  pred:       197 (FALLTHRU)
;; bb 198 artificial_defs: { }
;; bb 198 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2810 2809 2811 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn 2811 2810 2840 198 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":544 86 {*movsi_internal}
     (nil))
;;  succ:       199 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164

;; basic block 199, loop depth 0, maybe hot
;;  prev block 198, next block 200, flags: (RTL, MODIFIED)
;;  pred:       198 (FALLTHRU)
;;              200 [always] 
;; bb 199 artificial_defs: { }
;; bb 199 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1166 1903
(code_label 2840 2811 2812 199 128 (nil) [1 uses])
(note 2812 2840 2813 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(insn 2813 2812 2814 199 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":544 11 {*cmpsi_1}
     (nil))
(insn 2814 2813 2815 199 (set (reg:QI 1 dx [1903])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":544 678 {*setcc_qi}
     (nil))
(insn 2815 2814 2816 199 (set (reg:SI 1 dx [orig:1166 _1458 ] [1166])
        (zero_extend:SI (reg:QI 1 dx [1903]))) "CLDRAD.f":544 140 {*zero_extendqisi2}
     (nil))
(insn 2816 2815 2817 199 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1166 _1458 ] [1166])
            (const_int 0 [0]))) "CLDRAD.f":544 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2817 2816 2818 199 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4394)
            (pc))) "CLDRAD.f":544 682 {*jcc}
     (nil)
 -> 4394)
;;  succ:       337
;;              200 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164

;; basic block 200, loop depth 0, maybe hot
;;  prev block 199, next block 337, flags: (RTL, MODIFIED)
;;  pred:       199 (FALLTHRU)
;; bb 200 artificial_defs: { }
;; bb 200 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 821 822 823 824 825 826 827 828 829 830 831 832 1904 1905 1906 1907 1908 1909 1910
(note 2818 2817 2819 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 2819 2818 2820 200 (set (reg:SI 1 dx [1904])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":545 86 {*movsi_internal}
     (nil))
(insn 2820 2819 2821 200 (set (reg:DI 1 dx [orig:821 _735 ] [821])
        (sign_extend:DI (reg:SI 1 dx [1904]))) "CLDRAD.f":545 149 {*extendsidi2_rex64}
     (nil))
(insn 2821 2820 2822 200 (parallel [
            (set (reg:DI 2 cx [orig:822 _736 ] [822])
                (mult:DI (reg:DI 1 dx [orig:821 _735 ] [821])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":545 349 {*muldi3_1}
     (nil))
(insn 2822 2821 2823 200 (set (reg:SI 1 dx [1905])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":545 86 {*movsi_internal}
     (nil))
(insn 2823 2822 2824 200 (set (reg:DI 1 dx [orig:823 _737 ] [823])
        (sign_extend:DI (reg:SI 1 dx [1905]))) "CLDRAD.f":545 149 {*extendsidi2_rex64}
     (nil))
(insn 2824 2823 2825 200 (parallel [
            (set (reg:DI 1 dx [orig:824 _738 ] [824])
                (plus:DI (reg:DI 1 dx [orig:823 _737 ] [823])
                    (reg:DI 2 cx [orig:822 _736 ] [822])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":545 222 {*adddi_1}
     (nil))
(insn 2825 2824 2826 200 (parallel [
            (set (reg:DI 2 cx [orig:825 _739 ] [825])
                (plus:DI (reg:DI 1 dx [orig:824 _738 ] [824])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":545 222 {*adddi_1}
     (nil))
(insn 2826 2825 2827 200 (set (reg/f:DI 1 dx [1906])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":545 85 {*movdi_internal}
     (nil))
(insn 2827 2826 2828 200 (parallel [
            (set (reg:DI 2 cx [1907])
                (plus:DI (reg:DI 2 cx [orig:825 _739 ] [825])
                    (const_int 88896 [0x15b40])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":545 222 {*adddi_1}
     (nil))
(insn 2828 2827 2829 200 (set (reg:SF 21 xmm0 [orig:826 _740 ] [826])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1907])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1906])) [1 acmrdl.alwin S4 A32])) "CLDRAD.f":545 131 {*movsf_internal}
     (nil))
(insn 2829 2828 2830 200 (set (reg:SI 1 dx [1908])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":545 86 {*movsi_internal}
     (nil))
(insn 2830 2829 2831 200 (set (reg:DI 1 dx [orig:827 _741 ] [827])
        (sign_extend:DI (reg:SI 1 dx [1908]))) "CLDRAD.f":545 149 {*extendsidi2_rex64}
     (nil))
(insn 2831 2830 2832 200 (parallel [
            (set (reg:DI 2 cx [orig:828 _742 ] [828])
                (mult:DI (reg:DI 1 dx [orig:827 _741 ] [827])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":545 349 {*muldi3_1}
     (nil))
(insn 2832 2831 2833 200 (set (reg:SI 1 dx [1909])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":545 86 {*movsi_internal}
     (nil))
(insn 2833 2832 2834 200 (set (reg:DI 1 dx [orig:829 _743 ] [829])
        (sign_extend:DI (reg:SI 1 dx [1909]))) "CLDRAD.f":545 149 {*extendsidi2_rex64}
     (nil))
(insn 2834 2833 2835 200 (parallel [
            (set (reg:DI 1 dx [orig:830 _744 ] [830])
                (plus:DI (reg:DI 1 dx [orig:829 _743 ] [829])
                    (reg:DI 2 cx [orig:828 _742 ] [828])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":545 222 {*adddi_1}
     (nil))
(insn 2835 2834 2836 200 (parallel [
            (set (reg:DI 2 cx [orig:831 _745 ] [831])
                (plus:DI (reg:DI 1 dx [orig:830 _744 ] [830])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":545 222 {*adddi_1}
     (nil))
(insn 2836 2835 2837 200 (set (reg:SF 21 xmm0 [orig:832 _746 ] [832])
        (mult:SF (reg:SF 21 xmm0 [orig:826 _740 ] [826])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32]))) "CLDRAD.f":545 838 {*fop_sf_comm}
     (nil))
(insn 2837 2836 2838 200 (set (reg/f:DI 1 dx [1910])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":545 85 {*movdi_internal}
     (nil))
(insn 2838 2837 2839 200 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:831 _745 ] [831])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1910])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:832 _746 ] [832])) "CLDRAD.f":545 131 {*movsf_internal}
     (nil))
(insn 2839 2838 4243 200 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":544 221 {*addsi_1}
     (nil))
(jump_insn 4243 2839 4244 200 (set (pc)
        (label_ref 2840)) "CLDRAD.f":544 683 {jump}
     (nil)
 -> 2840)
;;  succ:       199 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164

(barrier 4244 4243 4394)
;; basic block 337, loop depth 0, maybe hot
;;  prev block 200, next block 201, flags: (RTL, MODIFIED)
;;  pred:       199
;; bb 337 artificial_defs: { }
;; bb 337 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4394 4244 4393 337 259 (nil) [1 uses])
(note 4393 4394 4395 337 [bb 337] NOTE_INSN_BASIC_BLOCK)
(insn 4395 4393 2843 337 (const_int 0 [0]) "CLDRAD.f":545 718 {nop}
     (nil))
;;  succ:       201 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164

;; basic block 201, loop depth 0, maybe hot
;;  prev block 337, next block 336, flags: (RTL, MODIFIED)
;;  pred:       337 [always]  (FALLTHRU)
;; bb 201 artificial_defs: { }
;; bb 201 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2843 4395 2844 201 127 (nil) [0 uses])
(note 2844 2843 2845 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(insn 2845 2844 4245 201 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":543 221 {*addsi_1}
     (nil))
(jump_insn 4245 2845 4246 201 (set (pc)
        (label_ref 2846)) "CLDRAD.f":543 683 {jump}
     (nil)
 -> 2846)
;;  succ:       197 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1164

(barrier 4246 4245 4391)
;; basic block 336, loop depth 0, maybe hot
;;  prev block 201, next block 202, flags: (RTL, MODIFIED)
;;  pred:       197
;; bb 336 artificial_defs: { }
;; bb 336 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4391 4246 4390 336 258 (nil) [1 uses])
(note 4390 4391 4392 336 [bb 336] NOTE_INSN_BASIC_BLOCK)
(insn 4392 4390 2849 336 (const_int 0 [0]) "CLDRAD.f":544 718 {nop}
     (nil))
;;  succ:       202 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 202, loop depth 0, maybe hot
;;  prev block 336, next block 203, flags: (RTL, MODIFIED)
;;  pred:       336 [always]  (FALLTHRU)
;; bb 202 artificial_defs: { }
;; bb 202 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 833 1911 1912 1913 1914 1915 1916 1917 1918 1920 1921 1922 1923
(code_label 2849 4392 2850 202 126 (nil) [0 uses])
(note 2850 2849 2851 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 2851 2850 2852 202 (set (reg:DI 1 dx [1911])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2852 2851 2853 202 (set (reg:DI 0 ax [1912])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2853 2852 2854 202 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":548 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2854 2853 2855 202 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":548 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2855 2854 2856 202 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1911])) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2856 2855 2857 202 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1912])) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2857 2856 2858 202 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2858 2857 2859 202 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2859 2858 2860 202 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2860 2859 2861 202 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f2038fb4b40 *.LC27>)) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2861 2860 2862 202 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":548 88 {*movqi_internal}
     (nil))
(call_insn 2862 2861 2863 202 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":548 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2863 2862 2864 202 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":548 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2864 2863 2865 202 (set (reg/f:DI 1 dx [1913])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":549 85 {*movdi_internal}
     (nil))
(insn 2865 2864 2866 202 (set (reg:DI 0 ax [1914])
        (const_int 0 [0])) "CLDRAD.f":549 85 {*movdi_internal}
     (nil))
(insn 2866 2865 4499 202 (set (reg:DI 2 cx [1915])
        (const_int 12 [0xc])) "CLDRAD.f":549 85 {*movdi_internal}
     (nil))
(insn 4499 2866 2867 202 (set (reg/f:DI 5 di [1913])
        (reg/f:DI 1 dx [1913])) "CLDRAD.f":549 85 {*movdi_internal}
     (nil))
(insn 2867 4499 4500 202 (parallel [
            (set (reg:DI 2 cx [1915])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1913])
                (plus:DI (ashift:DI (reg:DI 2 cx [1915])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1913])))
            (set (mem/c:BLK (reg/f:DI 5 di [1913]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1914]))
            (use (reg:DI 2 cx [1915]))
        ]) "CLDRAD.f":549 984 {*rep_stosdi_rex64}
     (nil))
(insn 4500 2867 2868 202 (set (reg/f:DI 1 dx [1913])
        (reg/f:DI 5 di [1913])) "CLDRAD.f":549 85 {*movdi_internal}
     (nil))
(insn 2868 4500 2869 202 (set (mem/c:SI (reg/f:DI 1 dx [1913]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1914])) "CLDRAD.f":549 86 {*movsi_internal}
     (nil))
(insn 2869 2868 2870 202 (parallel [
            (set (reg/f:DI 1 dx [1913])
                (plus:DI (reg/f:DI 1 dx [1913])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":549 222 {*adddi_1}
     (nil))
(insn 2870 2869 2871 202 (set (reg:SI 0 ax [1916])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":551 86 {*movsi_internal}
     (nil))
(insn 2871 2870 2872 202 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1916])) "CLDRAD.f":551 86 {*movsi_internal}
     (nil))
(insn 2872 2871 2873 202 (set (reg/f:DI 0 ax [1917])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2873 2872 2874 202 (set (reg:SF 21 xmm0 [orig:833 _747 ] [833])
        (mem/c:SF (reg/f:DI 0 ax [1917]) [1 acmrdl.trdlw+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2874 2873 2875 202 (set (reg:SI 0 ax [1918])
        (fix:SI (reg:SF 21 xmm0 [orig:833 _747 ] [833]))) "CLDRAD.f":552 174 {fix_truncsfsi_sse}
     (nil))
(insn 2875 2874 2876 202 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])
        (reg:SI 0 ax [1918])) "CLDRAD.f":552 86 {*movsi_internal}
     (nil))
(insn 2876 2875 2877 202 (set (reg:SI 0 ax [1920])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":553 86 {*movsi_internal}
     (nil))
(insn 2877 2876 2878 202 (parallel [
            (set (reg:SI 0 ax [1922])
                (div:SI (reg:SI 0 ax [1920])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (set (reg:SI 1 dx [1921])
                (mod:SI (reg:SI 0 ax [1920])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":553 382 {*divmodsi4}
     (nil))
(insn 2878 2877 2879 202 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1921])) "CLDRAD.f":553 86 {*movsi_internal}
     (nil))
(insn 2879 2878 2880 202 (set (reg:SI 0 ax [1923])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":554 86 {*movsi_internal}
     (nil))
(insn 2880 2879 2881 202 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [1923])) "CLDRAD.f":554 86 {*movsi_internal}
     (nil))
(insn 2881 2880 2882 202 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":555 86 {*movsi_internal}
     (nil))
(insn 2882 2881 2883 202 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":556 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2883 2882 2884 202 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2890)
            (pc))) "CLDRAD.f":556 682 {*jcc}
     (nil)
 -> 2890)
;;  succ:       203 (FALLTHRU)
;;              204
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 203, loop depth 0, maybe hot
;;  prev block 202, next block 204, flags: (RTL, MODIFIED)
;;  pred:       202 (FALLTHRU)
;; bb 203 artificial_defs: { }
;; bb 203 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 834 1924
(note 2884 2883 2885 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(insn 2885 2884 2886 203 (set (reg:SI 0 ax [1924])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":557 86 {*movsi_internal}
     (nil))
(insn 2886 2885 2887 203 (parallel [
            (set (reg:SI 0 ax [orig:834 _748 ] [834])
                (minus:SI (reg:SI 0 ax [1924])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":557 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -120 [0xffffffffffffff88])) [2 itrdlw+0 S4 A32]))
        (nil)))
(insn 2887 2886 4247 203 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:834 _748 ] [834])) "CLDRAD.f":557 86 {*movsi_internal}
     (nil))
(jump_insn 4247 2887 4248 203 (set (pc)
        (label_ref 2895)) 683 {jump}
     (nil)
 -> 2895)
;;  succ:       205 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4248 4247 2890)
;; basic block 204, loop depth 0, maybe hot
;;  prev block 203, next block 205, flags: (RTL, MODIFIED)
;;  pred:       202
;; bb 204 artificial_defs: { }
;; bb 204 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 835 1925
(code_label 2890 4248 2891 204 130 (nil) [1 uses])
(note 2891 2890 2892 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 2892 2891 2893 204 (set (reg:SI 0 ax [1925])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":559 86 {*movsi_internal}
     (nil))
(insn 2893 2892 2894 204 (parallel [
            (set (reg:SI 0 ax [orig:835 _749 ] [835])
                (minus:SI (reg:SI 0 ax [1925])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":559 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 2894 2893 2895 204 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:835 _749 ] [835])) "CLDRAD.f":559 86 {*movsi_internal}
     (nil))
;;  succ:       205 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 205, loop depth 0, maybe hot
;;  prev block 204, next block 206, flags: (RTL, MODIFIED)
;;  pred:       204 (FALLTHRU)
;;              203 [always] 
;; bb 205 artificial_defs: { }
;; bb 205 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 836
(code_label 2895 2894 2896 205 131 (nil) [1 uses])
(note 2896 2895 2897 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(insn 2897 2896 2898 205 (set (reg:SI 0 ax [orig:836 _750 ] [836])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":561 86 {*movsi_internal}
     (nil))
(insn 2898 2897 2899 205 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:836 _750 ] [836])
            (const_int 0 [0]))) "CLDRAD.f":561 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2899 2898 2900 205 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2902)
            (pc))) "CLDRAD.f":561 682 {*jcc}
     (nil)
 -> 2902)
;;  succ:       206 (FALLTHRU)
;;              207
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 206, loop depth 0, maybe hot
;;  prev block 205, next block 207, flags: (RTL, MODIFIED)
;;  pred:       205 (FALLTHRU)
;; bb 206 artificial_defs: { }
;; bb 206 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2900 2899 2901 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn 2901 2900 2902 206 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":561 86 {*movsi_internal}
     (nil))
;;  succ:       207 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 207, loop depth 0, maybe hot
;;  prev block 206, next block 208, flags: (RTL, MODIFIED)
;;  pred:       205
;;              206 (FALLTHRU)
;; bb 207 artificial_defs: { }
;; bb 207 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 837 838 839 840 841 1926 1927 1928 1929 1930 1931 1932 1933
(code_label 2902 2901 2903 207 132 (nil) [1 uses])
(note 2903 2902 2904 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(insn 2904 2903 2905 207 (set (reg:SI 0 ax [orig:837 _751 ] [837])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 520 [0x208]))) [2 rqstfld.iget+504 S4 A64])) "CLDRAD.f":563 86 {*movsi_internal}
     (nil))
(insn 2905 2904 2906 207 (set (reg:DI 0 ax [orig:838 _752 ] [838])
        (sign_extend:DI (reg:SI 0 ax [orig:837 _751 ] [837]))) "CLDRAD.f":563 149 {*extendsidi2_rex64}
     (nil))
(insn 2906 2905 2907 207 (parallel [
            (set (reg:DI 1 dx [orig:839 _753 ] [839])
                (plus:DI (reg:DI 0 ax [orig:838 _752 ] [838])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":563 222 {*adddi_1}
     (nil))
(insn 2907 2906 2908 207 (set (reg:DI 0 ax [1926])
        (reg:DI 1 dx [orig:839 _753 ] [839])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2908 2907 2910 207 (parallel [
            (set (reg:DI 0 ax [1927])
                (ashift:DI (reg:DI 0 ax [1926])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":563 551 {*ashldi3_1}
     (nil))
(insn 2910 2908 2911 207 (parallel [
            (set (reg:DI 0 ax [1926])
                (minus:DI (reg:DI 0 ax [1926])
                    (reg:DI 1 dx [orig:839 _753 ] [839])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":563 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:839 _753 ] [839])
            (const_int 15 [0xf]))
        (nil)))
(insn 2911 2910 2914 207 (parallel [
            (set (reg:DI 0 ax [1928])
                (ashift:DI (reg:DI 0 ax [1926])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":563 551 {*ashldi3_1}
     (nil))
(insn 2914 2911 2915 207 (parallel [
            (set (reg:DI 0 ax [1929])
                (plus:DI (reg:DI 0 ax [orig:840 _754 ] [840])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":563 222 {*adddi_1}
     (nil))
(insn 2915 2914 2916 207 (parallel [
            (set (reg:DI 0 ax [1930])
                (ashift:DI (reg:DI 0 ax [1929])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":563 551 {*ashldi3_1}
     (nil))
(insn 2916 2915 2917 207 (parallel [
            (set (reg/f:DI 1 dx [orig:841 _755 ] [841])
                (plus:DI (reg:DI 0 ax [1930])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":563 222 {*adddi_1}
     (nil))
(insn 2917 2916 2918 207 (set (reg:DI 4 si [1931])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2918 2917 2919 207 (set (reg:DI 2 cx [1932])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2919 2918 2920 207 (set (reg:DI 0 ax [1933])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2920 2919 2921 207 (set (reg:DI 38 r9)
        (reg:DI 4 si [1931])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2921 2920 2922 207 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1932])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2922 2921 2924 207 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1933])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2924 2922 2925 207 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 520 [0x208])))) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2925 2924 2926 207 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2926 2925 2927 207 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":563 88 {*movqi_internal}
     (nil))
(call_insn 2927 2926 2928 207 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":563 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       208 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 208, loop depth 0, maybe hot
;;  prev block 207, next block 209, flags: (RTL, MODIFIED)
;;  pred:       192
;;              207 (FALLTHRU)
;; bb 208 artificial_defs: { }
;; bb 208 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 842
(code_label 2928 2927 2929 208 122 (nil) [1 uses])
(note 2929 2928 2930 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(insn 2930 2929 2931 208 (set (reg:SI 0 ax [orig:842 _756 ] [842])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 524 [0x20c]))) [2 rqstfld.iget+508 S4 A32])) "CLDRAD.f":567 86 {*movsi_internal}
     (nil))
(insn 2931 2930 2932 208 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:842 _756 ] [842])
            (const_int 0 [0]))) "CLDRAD.f":567 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2932 2931 2933 208 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3085)
            (pc))) "CLDRAD.f":567 682 {*jcc}
     (nil)
 -> 3085)
;;  succ:       209 (FALLTHRU)
;;              224
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 209, loop depth 0, maybe hot
;;  prev block 208, next block 210, flags: (RTL, MODIFIED)
;;  pred:       208 (FALLTHRU)
;; bb 209 artificial_defs: { }
;; bb 209 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 843 1934 1935
(note 2933 2932 2934 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(insn 2934 2933 2935 209 (set (reg/f:DI 0 ax [1934])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2935 2934 2936 209 (set (reg:SF 21 xmm0 [orig:843 _757 ] [843])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1934])
                (const_int 8 [0x8])) [1 acmrds.ardsw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2936 2935 2937 209 (set (reg:SF 22 xmm1 [1935])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":568 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2937 2936 2938 209 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:843 _757 ] [843])
            (reg:SF 22 xmm1 [1935]))) "CLDRAD.f":568 53 {*cmpisf}
     (nil))
(jump_insn 2938 2937 2942 209 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4249)
            (pc))) "CLDRAD.f":568 682 {*jcc}
     (nil)
 -> 4249)
;;  succ:       210 (FALLTHRU)
;;              211
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 210, loop depth 0, maybe hot
;;  prev block 209, next block 211, flags: (RTL, MODIFIED)
;;  pred:       209 (FALLTHRU)
;; bb 210 artificial_defs: { }
;; bb 210 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 844 1936 1937 1938
(note 2942 2938 2943 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(insn 2943 2942 2944 210 (set (reg/f:DI 0 ax [1936])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2944 2943 2945 210 (set (reg:SF 22 xmm1 [orig:844 _758 ] [844])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1936])
                (const_int 8 [0x8])) [1 acmrds.ardsw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2945 2944 2946 210 (set (reg:SF 21 xmm0 [1938])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":569 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2946 2945 2947 210 (set (reg:SF 21 xmm0 [1937])
        (div:SF (reg:SF 21 xmm0 [1938])
            (reg:SF 22 xmm1 [orig:844 _758 ] [844]))) "CLDRAD.f":569 841 {*fop_sf_1}
     (nil))
(insn 2947 2946 4250 210 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1937])) "CLDRAD.f":569 131 {*movsf_internal}
     (nil))
(jump_insn 4250 2947 4251 210 (set (pc)
        (label_ref 2954)) 683 {jump}
     (nil)
 -> 2954)
;;  succ:       212 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4251 4250 4249)
;; basic block 211, loop depth 0, maybe hot
;;  prev block 210, next block 212, flags: (RTL, MODIFIED)
;;  pred:       209
;; bb 211 artificial_defs: { }
;; bb 211 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1939
(code_label 4249 4251 2951 211 223 (nil) [1 uses])
(note 2951 4249 2952 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(insn 2952 2951 2953 211 (set (reg:SF 21 xmm0 [1939])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":571 131 {*movsf_internal}
     (nil))
(insn 2953 2952 2954 211 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1939])) "CLDRAD.f":571 131 {*movsf_internal}
     (nil))
;;  succ:       212 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 212, loop depth 0, maybe hot
;;  prev block 211, next block 213, flags: (RTL, MODIFIED)
;;  pred:       211 (FALLTHRU)
;;              210 [always] 
;; bb 212 artificial_defs: { }
;; bb 212 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1167 1168
(code_label 2954 2953 2955 212 136 (nil) [1 uses])
(note 2955 2954 2956 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(insn 2956 2955 2957 212 (set (reg:SI 1 dx [orig:1167 _1475 ] [1167])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":573 86 {*movsi_internal}
     (nil))
(insn 2957 2956 2958 212 (set (reg:SI 0 ax [orig:1168 _1476 ] [1168])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":573 86 {*movsi_internal}
     (nil))
(insn 2958 2957 3003 212 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1167 _1475 ] [1167])) "CLDRAD.f":573 86 {*movsi_internal}
     (nil))
;;  succ:       213 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168

;; basic block 213, loop depth 0, maybe hot
;;  prev block 212, next block 214, flags: (RTL, MODIFIED)
;;  pred:       212 (FALLTHRU)
;;              217 [always] 
;; bb 213 artificial_defs: { }
;; bb 213 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168
;; lr  def 	 17 [flags] 1169 1940
(code_label 3003 2958 2959 213 140 (nil) [1 uses])
(note 2959 3003 2960 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 2960 2959 2961 213 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1168 _1476 ] [1168]))) "CLDRAD.f":573 11 {*cmpsi_1}
     (nil))
(insn 2961 2960 2962 213 (set (reg:QI 1 dx [1940])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":573 678 {*setcc_qi}
     (nil))
(insn 2962 2961 2963 213 (set (reg:SI 1 dx [orig:1169 _1478 ] [1169])
        (zero_extend:SI (reg:QI 1 dx [1940]))) "CLDRAD.f":573 140 {*zero_extendqisi2}
     (nil))
(insn 2963 2962 2964 213 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1169 _1478 ] [1169])
            (const_int 0 [0]))) "CLDRAD.f":573 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2964 2963 2965 213 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4397)
            (pc))) "CLDRAD.f":573 682 {*jcc}
     (nil)
 -> 4397)
;;  succ:       338
;;              214 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168

;; basic block 214, loop depth 0, maybe hot
;;  prev block 213, next block 215, flags: (RTL, MODIFIED)
;;  pred:       213 (FALLTHRU)
;; bb 214 artificial_defs: { }
;; bb 214 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2965 2964 2966 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(insn 2966 2965 2997 214 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":574 86 {*movsi_internal}
     (nil))
;;  succ:       215 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168

;; basic block 215, loop depth 0, maybe hot
;;  prev block 214, next block 216, flags: (RTL, MODIFIED)
;;  pred:       214 (FALLTHRU)
;;              216 [always] 
;; bb 215 artificial_defs: { }
;; bb 215 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1170 1941
(code_label 2997 2966 2967 215 139 (nil) [1 uses])
(note 2967 2997 2968 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(insn 2968 2967 2969 215 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":574 11 {*cmpsi_1}
     (nil))
(insn 2969 2968 2970 215 (set (reg:QI 1 dx [1941])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":574 678 {*setcc_qi}
     (nil))
(insn 2970 2969 2971 215 (set (reg:SI 1 dx [orig:1170 _1480 ] [1170])
        (zero_extend:SI (reg:QI 1 dx [1941]))) "CLDRAD.f":574 140 {*zero_extendqisi2}
     (nil))
(insn 2971 2970 2972 215 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1170 _1480 ] [1170])
            (const_int 0 [0]))) "CLDRAD.f":574 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2972 2971 2973 215 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4400)
            (pc))) "CLDRAD.f":574 682 {*jcc}
     (nil)
 -> 4400)
;;  succ:       339
;;              216 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168

;; basic block 216, loop depth 0, maybe hot
;;  prev block 215, next block 339, flags: (RTL, MODIFIED)
;;  pred:       215 (FALLTHRU)
;; bb 216 artificial_defs: { }
;; bb 216 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 845 846 847 848 849 850 851 852 853 854 855 856 857 1942 1943 1944 1945 1946 1947 1948 1949
(note 2973 2972 2974 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn 2974 2973 2975 216 (set (reg:SI 1 dx [1942])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":575 86 {*movsi_internal}
     (nil))
(insn 2975 2974 2976 216 (set (reg:DI 1 dx [orig:845 _759 ] [845])
        (sign_extend:DI (reg:SI 1 dx [1942]))) "CLDRAD.f":575 149 {*extendsidi2_rex64}
     (nil))
(insn 2976 2975 2977 216 (parallel [
            (set (reg:DI 2 cx [orig:846 _760 ] [846])
                (mult:DI (reg:DI 1 dx [orig:845 _759 ] [845])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 349 {*muldi3_1}
     (nil))
(insn 2977 2976 2978 216 (set (reg:SI 1 dx [1943])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":575 86 {*movsi_internal}
     (nil))
(insn 2978 2977 2979 216 (set (reg:DI 1 dx [orig:847 _761 ] [847])
        (sign_extend:DI (reg:SI 1 dx [1943]))) "CLDRAD.f":575 149 {*extendsidi2_rex64}
     (nil))
(insn 2979 2978 2980 216 (parallel [
            (set (reg:DI 1 dx [orig:848 _762 ] [848])
                (plus:DI (reg:DI 1 dx [orig:847 _761 ] [847])
                    (reg:DI 2 cx [orig:846 _760 ] [846])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 222 {*adddi_1}
     (nil))
(insn 2980 2979 2981 216 (parallel [
            (set (reg:DI 2 cx [orig:849 _763 ] [849])
                (plus:DI (reg:DI 1 dx [orig:848 _762 ] [848])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 222 {*adddi_1}
     (nil))
(insn 2981 2980 2982 216 (set (reg/f:DI 1 dx [1944])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":575 85 {*movdi_internal}
     (nil))
(insn 2982 2981 2983 216 (parallel [
            (set (reg:DI 2 cx [1945])
                (plus:DI (reg:DI 2 cx [orig:849 _763 ] [849])
                    (const_int 118527 [0x1ceff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 222 {*adddi_1}
     (nil))
(insn 2983 2982 2984 216 (set (reg:SF 21 xmm0 [orig:850 _764 ] [850])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1945])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1944])) [1 acmrds.aswout S4 A32])) "CLDRAD.f":575 131 {*movsf_internal}
     (nil))
(insn 2984 2983 2985 216 (set (reg:SF 21 xmm0 [orig:851 _765 ] [851])
        (mult:SF (reg:SF 21 xmm0 [orig:850 _764 ] [850])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32]))) "CLDRAD.f":575 838 {*fop_sf_comm}
     (nil))
(insn 2985 2984 2986 216 (set (reg:SI 1 dx [1946])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":575 86 {*movsi_internal}
     (nil))
(insn 2986 2985 2987 216 (set (reg:DI 1 dx [orig:852 _766 ] [852])
        (sign_extend:DI (reg:SI 1 dx [1946]))) "CLDRAD.f":575 149 {*extendsidi2_rex64}
     (nil))
(insn 2987 2986 2988 216 (parallel [
            (set (reg:DI 2 cx [orig:853 _767 ] [853])
                (mult:DI (reg:DI 1 dx [orig:852 _766 ] [852])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 349 {*muldi3_1}
     (nil))
(insn 2988 2987 2989 216 (set (reg:SI 1 dx [1947])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":575 86 {*movsi_internal}
     (nil))
(insn 2989 2988 2990 216 (set (reg:DI 1 dx [orig:854 _768 ] [854])
        (sign_extend:DI (reg:SI 1 dx [1947]))) "CLDRAD.f":575 149 {*extendsidi2_rex64}
     (nil))
(insn 2990 2989 2991 216 (parallel [
            (set (reg:DI 1 dx [orig:855 _769 ] [855])
                (plus:DI (reg:DI 1 dx [orig:854 _768 ] [854])
                    (reg:DI 2 cx [orig:853 _767 ] [853])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 222 {*adddi_1}
     (nil))
(insn 2991 2990 2992 216 (parallel [
            (set (reg:DI 2 cx [orig:856 _770 ] [856])
                (plus:DI (reg:DI 1 dx [orig:855 _769 ] [855])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 222 {*adddi_1}
     (nil))
(insn 2992 2991 2993 216 (set (reg:V4SF 22 xmm1 [1948])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) "CLDRAD.f":575 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 2993 2992 2994 216 (parallel [
            (set (reg:SF 21 xmm0 [orig:857 _771 ] [857])
                (neg:SF (reg:SF 21 xmm0 [orig:851 _765 ] [851])))
            (use (reg:V4SF 22 xmm1 [1948]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 507 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:851 _765 ] [851]))
        (nil)))
(insn 2994 2993 2995 216 (set (reg/f:DI 1 dx [1949])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":575 85 {*movdi_internal}
     (nil))
(insn 2995 2994 2996 216 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:856 _770 ] [856])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1949])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:857 _771 ] [857])) "CLDRAD.f":575 131 {*movsf_internal}
     (nil))
(insn 2996 2995 4252 216 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":574 221 {*addsi_1}
     (nil))
(jump_insn 4252 2996 4253 216 (set (pc)
        (label_ref 2997)) "CLDRAD.f":574 683 {jump}
     (nil)
 -> 2997)
;;  succ:       215 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168

(barrier 4253 4252 4400)
;; basic block 339, loop depth 0, maybe hot
;;  prev block 216, next block 217, flags: (RTL, MODIFIED)
;;  pred:       215
;; bb 339 artificial_defs: { }
;; bb 339 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4400 4253 4399 339 261 (nil) [1 uses])
(note 4399 4400 4401 339 [bb 339] NOTE_INSN_BASIC_BLOCK)
(insn 4401 4399 3000 339 (const_int 0 [0]) "CLDRAD.f":575 718 {nop}
     (nil))
;;  succ:       217 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168

;; basic block 217, loop depth 0, maybe hot
;;  prev block 339, next block 338, flags: (RTL, MODIFIED)
;;  pred:       339 [always]  (FALLTHRU)
;; bb 217 artificial_defs: { }
;; bb 217 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3000 4401 3001 217 138 (nil) [0 uses])
(note 3001 3000 3002 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(insn 3002 3001 4254 217 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":573 221 {*addsi_1}
     (nil))
(jump_insn 4254 3002 4255 217 (set (pc)
        (label_ref 3003)) "CLDRAD.f":573 683 {jump}
     (nil)
 -> 3003)
;;  succ:       213 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1168

(barrier 4255 4254 4397)
;; basic block 338, loop depth 0, maybe hot
;;  prev block 217, next block 218, flags: (RTL, MODIFIED)
;;  pred:       213
;; bb 338 artificial_defs: { }
;; bb 338 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4397 4255 4396 338 260 (nil) [1 uses])
(note 4396 4397 4398 338 [bb 338] NOTE_INSN_BASIC_BLOCK)
(insn 4398 4396 3006 338 (const_int 0 [0]) "CLDRAD.f":574 718 {nop}
     (nil))
;;  succ:       218 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 218, loop depth 0, maybe hot
;;  prev block 338, next block 219, flags: (RTL, MODIFIED)
;;  pred:       338 [always]  (FALLTHRU)
;; bb 218 artificial_defs: { }
;; bb 218 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 858 1950 1951 1952 1953 1954 1955 1956 1957 1959 1960 1961 1962
(code_label 3006 4398 3007 218 137 (nil) [0 uses])
(note 3007 3006 3008 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(insn 3008 3007 3009 218 (set (reg:DI 1 dx [1950])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3009 3008 3010 218 (set (reg:DI 0 ax [1951])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3010 3009 3011 218 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":578 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3011 3010 3012 218 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":578 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3012 3011 3013 218 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1950])) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3013 3012 3014 218 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1951])) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3014 3013 3015 218 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3015 3014 3016 218 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3016 3015 3017 218 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3017 3016 3018 218 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f2038fb4bd0 *.LC28>)) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3018 3017 3019 218 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":578 88 {*movqi_internal}
     (nil))
(call_insn 3019 3018 3020 218 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":578 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3020 3019 3021 218 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":578 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3021 3020 3022 218 (set (reg/f:DI 1 dx [1952])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":579 85 {*movdi_internal}
     (nil))
(insn 3022 3021 3023 218 (set (reg:DI 0 ax [1953])
        (const_int 0 [0])) "CLDRAD.f":579 85 {*movdi_internal}
     (nil))
(insn 3023 3022 4501 218 (set (reg:DI 2 cx [1954])
        (const_int 12 [0xc])) "CLDRAD.f":579 85 {*movdi_internal}
     (nil))
(insn 4501 3023 3024 218 (set (reg/f:DI 5 di [1952])
        (reg/f:DI 1 dx [1952])) "CLDRAD.f":579 85 {*movdi_internal}
     (nil))
(insn 3024 4501 4502 218 (parallel [
            (set (reg:DI 2 cx [1954])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1952])
                (plus:DI (ashift:DI (reg:DI 2 cx [1954])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1952])))
            (set (mem/c:BLK (reg/f:DI 5 di [1952]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1953]))
            (use (reg:DI 2 cx [1954]))
        ]) "CLDRAD.f":579 984 {*rep_stosdi_rex64}
     (nil))
(insn 4502 3024 3025 218 (set (reg/f:DI 1 dx [1952])
        (reg/f:DI 5 di [1952])) "CLDRAD.f":579 85 {*movdi_internal}
     (nil))
(insn 3025 4502 3026 218 (set (mem/c:SI (reg/f:DI 1 dx [1952]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1953])) "CLDRAD.f":579 86 {*movsi_internal}
     (nil))
(insn 3026 3025 3027 218 (parallel [
            (set (reg/f:DI 1 dx [1952])
                (plus:DI (reg/f:DI 1 dx [1952])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":579 222 {*adddi_1}
     (nil))
(insn 3027 3026 3028 218 (set (reg:SI 0 ax [1955])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":581 86 {*movsi_internal}
     (nil))
(insn 3028 3027 3029 218 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1955])) "CLDRAD.f":581 86 {*movsi_internal}
     (nil))
(insn 3029 3028 3030 218 (set (reg/f:DI 0 ax [1956])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3030 3029 3031 218 (set (reg:SF 21 xmm0 [orig:858 _772 ] [858])
        (mem/c:SF (reg/f:DI 0 ax [1956]) [1 acmrds.trdsw+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3031 3030 3032 218 (set (reg:SI 0 ax [1957])
        (fix:SI (reg:SF 21 xmm0 [orig:858 _772 ] [858]))) "CLDRAD.f":582 174 {fix_truncsfsi_sse}
     (nil))
(insn 3032 3031 3033 218 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])
        (reg:SI 0 ax [1957])) "CLDRAD.f":582 86 {*movsi_internal}
     (nil))
(insn 3033 3032 3034 218 (set (reg:SI 0 ax [1959])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":583 86 {*movsi_internal}
     (nil))
(insn 3034 3033 3035 218 (parallel [
            (set (reg:SI 0 ax [1961])
                (div:SI (reg:SI 0 ax [1959])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (set (reg:SI 1 dx [1960])
                (mod:SI (reg:SI 0 ax [1959])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":583 382 {*divmodsi4}
     (nil))
(insn 3035 3034 3036 218 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1960])) "CLDRAD.f":583 86 {*movsi_internal}
     (nil))
(insn 3036 3035 3037 218 (set (reg:SI 0 ax [1962])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":584 86 {*movsi_internal}
     (nil))
(insn 3037 3036 3038 218 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [1962])) "CLDRAD.f":584 86 {*movsi_internal}
     (nil))
(insn 3038 3037 3039 218 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":585 86 {*movsi_internal}
     (nil))
(insn 3039 3038 3040 218 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":586 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3040 3039 3041 218 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3047)
            (pc))) "CLDRAD.f":586 682 {*jcc}
     (nil)
 -> 3047)
;;  succ:       219 (FALLTHRU)
;;              220
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 219, loop depth 0, maybe hot
;;  prev block 218, next block 220, flags: (RTL, MODIFIED)
;;  pred:       218 (FALLTHRU)
;; bb 219 artificial_defs: { }
;; bb 219 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 859 1963
(note 3041 3040 3042 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(insn 3042 3041 3043 219 (set (reg:SI 0 ax [1963])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":587 86 {*movsi_internal}
     (nil))
(insn 3043 3042 3044 219 (parallel [
            (set (reg:SI 0 ax [orig:859 _773 ] [859])
                (minus:SI (reg:SI 0 ax [1963])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":587 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -116 [0xffffffffffffff8c])) [2 itrdsw+0 S4 A32]))
        (nil)))
(insn 3044 3043 4256 219 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:859 _773 ] [859])) "CLDRAD.f":587 86 {*movsi_internal}
     (nil))
(jump_insn 4256 3044 4257 219 (set (pc)
        (label_ref 3052)) 683 {jump}
     (nil)
 -> 3052)
;;  succ:       221 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4257 4256 3047)
;; basic block 220, loop depth 0, maybe hot
;;  prev block 219, next block 221, flags: (RTL, MODIFIED)
;;  pred:       218
;; bb 220 artificial_defs: { }
;; bb 220 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 860 1964
(code_label 3047 4257 3048 220 141 (nil) [1 uses])
(note 3048 3047 3049 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(insn 3049 3048 3050 220 (set (reg:SI 0 ax [1964])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":589 86 {*movsi_internal}
     (nil))
(insn 3050 3049 3051 220 (parallel [
            (set (reg:SI 0 ax [orig:860 _774 ] [860])
                (minus:SI (reg:SI 0 ax [1964])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":589 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 3051 3050 3052 220 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:860 _774 ] [860])) "CLDRAD.f":589 86 {*movsi_internal}
     (nil))
;;  succ:       221 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 221, loop depth 0, maybe hot
;;  prev block 220, next block 222, flags: (RTL, MODIFIED)
;;  pred:       220 (FALLTHRU)
;;              219 [always] 
;; bb 221 artificial_defs: { }
;; bb 221 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 861
(code_label 3052 3051 3053 221 142 (nil) [1 uses])
(note 3053 3052 3054 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(insn 3054 3053 3055 221 (set (reg:SI 0 ax [orig:861 _775 ] [861])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":591 86 {*movsi_internal}
     (nil))
(insn 3055 3054 3056 221 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:861 _775 ] [861])
            (const_int 0 [0]))) "CLDRAD.f":591 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3056 3055 3057 221 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 3059)
            (pc))) "CLDRAD.f":591 682 {*jcc}
     (nil)
 -> 3059)
;;  succ:       222 (FALLTHRU)
;;              223
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 222, loop depth 0, maybe hot
;;  prev block 221, next block 223, flags: (RTL, MODIFIED)
;;  pred:       221 (FALLTHRU)
;; bb 222 artificial_defs: { }
;; bb 222 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3057 3056 3058 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(insn 3058 3057 3059 222 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":591 86 {*movsi_internal}
     (nil))
;;  succ:       223 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 223, loop depth 0, maybe hot
;;  prev block 222, next block 224, flags: (RTL, MODIFIED)
;;  pred:       221
;;              222 (FALLTHRU)
;; bb 223 artificial_defs: { }
;; bb 223 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 862 863 864 865 866 1965 1966 1967 1968 1969 1970 1971 1972
(code_label 3059 3058 3060 223 143 (nil) [1 uses])
(note 3060 3059 3061 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 3061 3060 3062 223 (set (reg:SI 0 ax [orig:862 _776 ] [862])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 524 [0x20c]))) [2 rqstfld.iget+508 S4 A32])) "CLDRAD.f":593 86 {*movsi_internal}
     (nil))
(insn 3062 3061 3063 223 (set (reg:DI 0 ax [orig:863 _777 ] [863])
        (sign_extend:DI (reg:SI 0 ax [orig:862 _776 ] [862]))) "CLDRAD.f":593 149 {*extendsidi2_rex64}
     (nil))
(insn 3063 3062 3064 223 (parallel [
            (set (reg:DI 1 dx [orig:864 _778 ] [864])
                (plus:DI (reg:DI 0 ax [orig:863 _777 ] [863])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":593 222 {*adddi_1}
     (nil))
(insn 3064 3063 3065 223 (set (reg:DI 0 ax [1965])
        (reg:DI 1 dx [orig:864 _778 ] [864])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3065 3064 3067 223 (parallel [
            (set (reg:DI 0 ax [1966])
                (ashift:DI (reg:DI 0 ax [1965])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":593 551 {*ashldi3_1}
     (nil))
(insn 3067 3065 3068 223 (parallel [
            (set (reg:DI 0 ax [1965])
                (minus:DI (reg:DI 0 ax [1965])
                    (reg:DI 1 dx [orig:864 _778 ] [864])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":593 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:864 _778 ] [864])
            (const_int 15 [0xf]))
        (nil)))
(insn 3068 3067 3071 223 (parallel [
            (set (reg:DI 0 ax [1967])
                (ashift:DI (reg:DI 0 ax [1965])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":593 551 {*ashldi3_1}
     (nil))
(insn 3071 3068 3072 223 (parallel [
            (set (reg:DI 0 ax [1968])
                (plus:DI (reg:DI 0 ax [orig:865 _779 ] [865])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":593 222 {*adddi_1}
     (nil))
(insn 3072 3071 3073 223 (parallel [
            (set (reg:DI 0 ax [1969])
                (ashift:DI (reg:DI 0 ax [1968])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":593 551 {*ashldi3_1}
     (nil))
(insn 3073 3072 3074 223 (parallel [
            (set (reg/f:DI 1 dx [orig:866 _780 ] [866])
                (plus:DI (reg:DI 0 ax [1969])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":593 222 {*adddi_1}
     (nil))
(insn 3074 3073 3075 223 (set (reg:DI 4 si [1970])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3075 3074 3076 223 (set (reg:DI 2 cx [1971])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3076 3075 3077 223 (set (reg:DI 0 ax [1972])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3077 3076 3078 223 (set (reg:DI 38 r9)
        (reg:DI 4 si [1970])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3078 3077 3079 223 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1971])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3079 3078 3081 223 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1972])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3081 3079 3082 223 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 524 [0x20c])))) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3082 3081 3083 223 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3083 3082 3084 223 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":593 88 {*movqi_internal}
     (nil))
(call_insn 3084 3083 3085 223 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":593 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       224 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 224, loop depth 0, maybe hot
;;  prev block 223, next block 225, flags: (RTL, MODIFIED)
;;  pred:       208
;;              223 (FALLTHRU)
;; bb 224 artificial_defs: { }
;; bb 224 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 867
(code_label 3085 3084 3086 224 133 (nil) [1 uses])
(note 3086 3085 3087 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(insn 3087 3086 3088 224 (set (reg:SI 0 ax [orig:867 _781 ] [867])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 528 [0x210]))) [2 rqstfld.iget+512 S4 A128])) "CLDRAD.f":597 86 {*movsi_internal}
     (nil))
(insn 3088 3087 3089 224 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:867 _781 ] [867])
            (const_int 0 [0]))) "CLDRAD.f":597 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3089 3088 3090 224 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3242)
            (pc))) "CLDRAD.f":597 682 {*jcc}
     (nil)
 -> 3242)
;;  succ:       225 (FALLTHRU)
;;              240
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 225, loop depth 0, maybe hot
;;  prev block 224, next block 226, flags: (RTL, MODIFIED)
;;  pred:       224 (FALLTHRU)
;; bb 225 artificial_defs: { }
;; bb 225 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 868 1973 1974
(note 3090 3089 3091 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
(insn 3091 3090 3092 225 (set (reg/f:DI 0 ax [1973])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3092 3091 3093 225 (set (reg:SF 21 xmm0 [orig:868 _782 ] [868])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1973])
                (const_int 8 [0x8])) [1 acmrdl.ardlw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3093 3092 3094 225 (set (reg:SF 22 xmm1 [1974])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":598 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 3094 3093 3095 225 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:868 _782 ] [868])
            (reg:SF 22 xmm1 [1974]))) "CLDRAD.f":598 53 {*cmpisf}
     (nil))
(jump_insn 3095 3094 3099 225 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4258)
            (pc))) "CLDRAD.f":598 682 {*jcc}
     (nil)
 -> 4258)
;;  succ:       226 (FALLTHRU)
;;              227
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 226, loop depth 0, maybe hot
;;  prev block 225, next block 227, flags: (RTL, MODIFIED)
;;  pred:       225 (FALLTHRU)
;; bb 226 artificial_defs: { }
;; bb 226 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 869 1975 1976 1977
(note 3099 3095 3100 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn 3100 3099 3101 226 (set (reg/f:DI 0 ax [1975])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3101 3100 3102 226 (set (reg:SF 22 xmm1 [orig:869 _783 ] [869])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1975])
                (const_int 8 [0x8])) [1 acmrdl.ardlw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3102 3101 3103 226 (set (reg:SF 21 xmm0 [1977])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":599 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3103 3102 3104 226 (set (reg:SF 21 xmm0 [1976])
        (div:SF (reg:SF 21 xmm0 [1977])
            (reg:SF 22 xmm1 [orig:869 _783 ] [869]))) "CLDRAD.f":599 841 {*fop_sf_1}
     (nil))
(insn 3104 3103 4259 226 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1976])) "CLDRAD.f":599 131 {*movsf_internal}
     (nil))
(jump_insn 4259 3104 4260 226 (set (pc)
        (label_ref 3111)) 683 {jump}
     (nil)
 -> 3111)
;;  succ:       228 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4260 4259 4258)
;; basic block 227, loop depth 0, maybe hot
;;  prev block 226, next block 228, flags: (RTL, MODIFIED)
;;  pred:       225
;; bb 227 artificial_defs: { }
;; bb 227 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1978
(code_label 4258 4260 3108 227 224 (nil) [1 uses])
(note 3108 4258 3109 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn 3109 3108 3110 227 (set (reg:SF 21 xmm0 [1978])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":601 131 {*movsf_internal}
     (nil))
(insn 3110 3109 3111 227 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1978])) "CLDRAD.f":601 131 {*movsf_internal}
     (nil))
;;  succ:       228 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 228, loop depth 0, maybe hot
;;  prev block 227, next block 229, flags: (RTL, MODIFIED)
;;  pred:       227 (FALLTHRU)
;;              226 [always] 
;; bb 228 artificial_defs: { }
;; bb 228 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1171 1172
(code_label 3111 3110 3112 228 147 (nil) [1 uses])
(note 3112 3111 3113 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(insn 3113 3112 3114 228 (set (reg:SI 1 dx [orig:1171 _1497 ] [1171])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":603 86 {*movsi_internal}
     (nil))
(insn 3114 3113 3115 228 (set (reg:SI 0 ax [orig:1172 _1498 ] [1172])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":603 86 {*movsi_internal}
     (nil))
(insn 3115 3114 3160 228 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1171 _1497 ] [1171])) "CLDRAD.f":603 86 {*movsi_internal}
     (nil))
;;  succ:       229 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172

;; basic block 229, loop depth 0, maybe hot
;;  prev block 228, next block 230, flags: (RTL, MODIFIED)
;;  pred:       228 (FALLTHRU)
;;              233 [always] 
;; bb 229 artificial_defs: { }
;; bb 229 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172
;; lr  def 	 17 [flags] 1173 1979
(code_label 3160 3115 3116 229 151 (nil) [1 uses])
(note 3116 3160 3117 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(insn 3117 3116 3118 229 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1172 _1498 ] [1172]))) "CLDRAD.f":603 11 {*cmpsi_1}
     (nil))
(insn 3118 3117 3119 229 (set (reg:QI 1 dx [1979])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":603 678 {*setcc_qi}
     (nil))
(insn 3119 3118 3120 229 (set (reg:SI 1 dx [orig:1173 _1500 ] [1173])
        (zero_extend:SI (reg:QI 1 dx [1979]))) "CLDRAD.f":603 140 {*zero_extendqisi2}
     (nil))
(insn 3120 3119 3121 229 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1173 _1500 ] [1173])
            (const_int 0 [0]))) "CLDRAD.f":603 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3121 3120 3122 229 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4403)
            (pc))) "CLDRAD.f":603 682 {*jcc}
     (nil)
 -> 4403)
;;  succ:       340
;;              230 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172

;; basic block 230, loop depth 0, maybe hot
;;  prev block 229, next block 231, flags: (RTL, MODIFIED)
;;  pred:       229 (FALLTHRU)
;; bb 230 artificial_defs: { }
;; bb 230 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3122 3121 3123 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(insn 3123 3122 3154 230 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":604 86 {*movsi_internal}
     (nil))
;;  succ:       231 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172

;; basic block 231, loop depth 0, maybe hot
;;  prev block 230, next block 232, flags: (RTL, MODIFIED)
;;  pred:       230 (FALLTHRU)
;;              232 [always] 
;; bb 231 artificial_defs: { }
;; bb 231 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1174 1980
(code_label 3154 3123 3124 231 150 (nil) [1 uses])
(note 3124 3154 3125 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn 3125 3124 3126 231 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":604 11 {*cmpsi_1}
     (nil))
(insn 3126 3125 3127 231 (set (reg:QI 1 dx [1980])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":604 678 {*setcc_qi}
     (nil))
(insn 3127 3126 3128 231 (set (reg:SI 1 dx [orig:1174 _1502 ] [1174])
        (zero_extend:SI (reg:QI 1 dx [1980]))) "CLDRAD.f":604 140 {*zero_extendqisi2}
     (nil))
(insn 3128 3127 3129 231 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1174 _1502 ] [1174])
            (const_int 0 [0]))) "CLDRAD.f":604 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3129 3128 3130 231 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4406)
            (pc))) "CLDRAD.f":604 682 {*jcc}
     (nil)
 -> 4406)
;;  succ:       341
;;              232 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172

;; basic block 232, loop depth 0, maybe hot
;;  prev block 231, next block 341, flags: (RTL, MODIFIED)
;;  pred:       231 (FALLTHRU)
;; bb 232 artificial_defs: { }
;; bb 232 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 870 871 872 873 874 875 876 877 878 879 880 881 882 1981 1982 1983 1984 1985 1986 1987 1988
(note 3130 3129 3131 232 [bb 232] NOTE_INSN_BASIC_BLOCK)
(insn 3131 3130 3132 232 (set (reg:SI 1 dx [1981])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":605 86 {*movsi_internal}
     (nil))
(insn 3132 3131 3133 232 (set (reg:DI 1 dx [orig:870 _784 ] [870])
        (sign_extend:DI (reg:SI 1 dx [1981]))) "CLDRAD.f":605 149 {*extendsidi2_rex64}
     (nil))
(insn 3133 3132 3134 232 (parallel [
            (set (reg:DI 2 cx [orig:871 _785 ] [871])
                (mult:DI (reg:DI 1 dx [orig:870 _784 ] [870])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 349 {*muldi3_1}
     (nil))
(insn 3134 3133 3135 232 (set (reg:SI 1 dx [1982])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":605 86 {*movsi_internal}
     (nil))
(insn 3135 3134 3136 232 (set (reg:DI 1 dx [orig:872 _786 ] [872])
        (sign_extend:DI (reg:SI 1 dx [1982]))) "CLDRAD.f":605 149 {*extendsidi2_rex64}
     (nil))
(insn 3136 3135 3137 232 (parallel [
            (set (reg:DI 1 dx [orig:873 _787 ] [873])
                (plus:DI (reg:DI 1 dx [orig:872 _786 ] [872])
                    (reg:DI 2 cx [orig:871 _785 ] [871])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 222 {*adddi_1}
     (nil))
(insn 3137 3136 3138 232 (parallel [
            (set (reg:DI 2 cx [orig:874 _788 ] [874])
                (plus:DI (reg:DI 1 dx [orig:873 _787 ] [873])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 222 {*adddi_1}
     (nil))
(insn 3138 3137 3139 232 (set (reg/f:DI 1 dx [1983])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":605 85 {*movdi_internal}
     (nil))
(insn 3139 3138 3140 232 (parallel [
            (set (reg:DI 2 cx [1984])
                (plus:DI (reg:DI 2 cx [orig:874 _788 ] [874])
                    (const_int 118527 [0x1ceff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 222 {*adddi_1}
     (nil))
(insn 3140 3139 3141 232 (set (reg:SF 21 xmm0 [orig:875 _789 ] [875])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1984])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1983])) [1 acmrdl.alwout S4 A32])) "CLDRAD.f":605 131 {*movsf_internal}
     (nil))
(insn 3141 3140 3142 232 (set (reg:SF 21 xmm0 [orig:876 _790 ] [876])
        (mult:SF (reg:SF 21 xmm0 [orig:875 _789 ] [875])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32]))) "CLDRAD.f":605 838 {*fop_sf_comm}
     (nil))
(insn 3142 3141 3143 232 (set (reg:SI 1 dx [1985])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":605 86 {*movsi_internal}
     (nil))
(insn 3143 3142 3144 232 (set (reg:DI 1 dx [orig:877 _791 ] [877])
        (sign_extend:DI (reg:SI 1 dx [1985]))) "CLDRAD.f":605 149 {*extendsidi2_rex64}
     (nil))
(insn 3144 3143 3145 232 (parallel [
            (set (reg:DI 2 cx [orig:878 _792 ] [878])
                (mult:DI (reg:DI 1 dx [orig:877 _791 ] [877])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 349 {*muldi3_1}
     (nil))
(insn 3145 3144 3146 232 (set (reg:SI 1 dx [1986])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":605 86 {*movsi_internal}
     (nil))
(insn 3146 3145 3147 232 (set (reg:DI 1 dx [orig:879 _793 ] [879])
        (sign_extend:DI (reg:SI 1 dx [1986]))) "CLDRAD.f":605 149 {*extendsidi2_rex64}
     (nil))
(insn 3147 3146 3148 232 (parallel [
            (set (reg:DI 1 dx [orig:880 _794 ] [880])
                (plus:DI (reg:DI 1 dx [orig:879 _793 ] [879])
                    (reg:DI 2 cx [orig:878 _792 ] [878])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 222 {*adddi_1}
     (nil))
(insn 3148 3147 3149 232 (parallel [
            (set (reg:DI 2 cx [orig:881 _795 ] [881])
                (plus:DI (reg:DI 1 dx [orig:880 _794 ] [880])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 222 {*adddi_1}
     (nil))
(insn 3149 3148 3150 232 (set (reg:V4SF 22 xmm1 [1987])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S16 A128])) "CLDRAD.f":605 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 3150 3149 3151 232 (parallel [
            (set (reg:SF 21 xmm0 [orig:882 _796 ] [882])
                (neg:SF (reg:SF 21 xmm0 [orig:876 _790 ] [876])))
            (use (reg:V4SF 22 xmm1 [1987]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 507 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:876 _790 ] [876]))
        (nil)))
(insn 3151 3150 3152 232 (set (reg/f:DI 1 dx [1988])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":605 85 {*movdi_internal}
     (nil))
(insn 3152 3151 3153 232 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:881 _795 ] [881])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1988])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:882 _796 ] [882])) "CLDRAD.f":605 131 {*movsf_internal}
     (nil))
(insn 3153 3152 4261 232 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":604 221 {*addsi_1}
     (nil))
(jump_insn 4261 3153 4262 232 (set (pc)
        (label_ref 3154)) "CLDRAD.f":604 683 {jump}
     (nil)
 -> 3154)
;;  succ:       231 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172

(barrier 4262 4261 4406)
;; basic block 341, loop depth 0, maybe hot
;;  prev block 232, next block 233, flags: (RTL, MODIFIED)
;;  pred:       231
;; bb 341 artificial_defs: { }
;; bb 341 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4406 4262 4405 341 263 (nil) [1 uses])
(note 4405 4406 4407 341 [bb 341] NOTE_INSN_BASIC_BLOCK)
(insn 4407 4405 3157 341 (const_int 0 [0]) "CLDRAD.f":605 718 {nop}
     (nil))
;;  succ:       233 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172

;; basic block 233, loop depth 0, maybe hot
;;  prev block 341, next block 340, flags: (RTL, MODIFIED)
;;  pred:       341 [always]  (FALLTHRU)
;; bb 233 artificial_defs: { }
;; bb 233 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3157 4407 3158 233 149 (nil) [0 uses])
(note 3158 3157 3159 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(insn 3159 3158 4263 233 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":603 221 {*addsi_1}
     (nil))
(jump_insn 4263 3159 4264 233 (set (pc)
        (label_ref 3160)) "CLDRAD.f":603 683 {jump}
     (nil)
 -> 3160)
;;  succ:       229 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1172

(barrier 4264 4263 4403)
;; basic block 340, loop depth 0, maybe hot
;;  prev block 233, next block 234, flags: (RTL, MODIFIED)
;;  pred:       229
;; bb 340 artificial_defs: { }
;; bb 340 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4403 4264 4402 340 262 (nil) [1 uses])
(note 4402 4403 4404 340 [bb 340] NOTE_INSN_BASIC_BLOCK)
(insn 4404 4402 3163 340 (const_int 0 [0]) "CLDRAD.f":604 718 {nop}
     (nil))
;;  succ:       234 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 234, loop depth 0, maybe hot
;;  prev block 340, next block 235, flags: (RTL, MODIFIED)
;;  pred:       340 [always]  (FALLTHRU)
;; bb 234 artificial_defs: { }
;; bb 234 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 883 1989 1990 1991 1992 1993 1994 1995 1996 1998 1999 2000 2001
(code_label 3163 4404 3164 234 148 (nil) [0 uses])
(note 3164 3163 3165 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(insn 3165 3164 3166 234 (set (reg:DI 1 dx [1989])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3166 3165 3167 234 (set (reg:DI 0 ax [1990])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3167 3166 3168 234 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":608 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3168 3167 3169 234 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":608 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3169 3168 3170 234 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1989])) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3170 3169 3171 234 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1990])) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3171 3170 3172 234 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3172 3171 3173 234 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3173 3172 3174 234 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3174 3173 3175 234 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f2038fb4c60 *.LC29>)) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3175 3174 3176 234 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":608 88 {*movqi_internal}
     (nil))
(call_insn 3176 3175 3177 234 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":608 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3177 3176 3178 234 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":608 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3178 3177 3179 234 (set (reg/f:DI 1 dx [1991])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":609 85 {*movdi_internal}
     (nil))
(insn 3179 3178 3180 234 (set (reg:DI 0 ax [1992])
        (const_int 0 [0])) "CLDRAD.f":609 85 {*movdi_internal}
     (nil))
(insn 3180 3179 4503 234 (set (reg:DI 2 cx [1993])
        (const_int 12 [0xc])) "CLDRAD.f":609 85 {*movdi_internal}
     (nil))
(insn 4503 3180 3181 234 (set (reg/f:DI 5 di [1991])
        (reg/f:DI 1 dx [1991])) "CLDRAD.f":609 85 {*movdi_internal}
     (nil))
(insn 3181 4503 4504 234 (parallel [
            (set (reg:DI 2 cx [1993])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1991])
                (plus:DI (ashift:DI (reg:DI 2 cx [1993])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1991])))
            (set (mem/c:BLK (reg/f:DI 5 di [1991]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1992]))
            (use (reg:DI 2 cx [1993]))
        ]) "CLDRAD.f":609 984 {*rep_stosdi_rex64}
     (nil))
(insn 4504 3181 3182 234 (set (reg/f:DI 1 dx [1991])
        (reg/f:DI 5 di [1991])) "CLDRAD.f":609 85 {*movdi_internal}
     (nil))
(insn 3182 4504 3183 234 (set (mem/c:SI (reg/f:DI 1 dx [1991]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1992])) "CLDRAD.f":609 86 {*movsi_internal}
     (nil))
(insn 3183 3182 3184 234 (parallel [
            (set (reg/f:DI 1 dx [1991])
                (plus:DI (reg/f:DI 1 dx [1991])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":609 222 {*adddi_1}
     (nil))
(insn 3184 3183 3185 234 (set (reg:SI 0 ax [1994])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":611 86 {*movsi_internal}
     (nil))
(insn 3185 3184 3186 234 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1994])) "CLDRAD.f":611 86 {*movsi_internal}
     (nil))
(insn 3186 3185 3187 234 (set (reg/f:DI 0 ax [1995])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3187 3186 3188 234 (set (reg:SF 21 xmm0 [orig:883 _797 ] [883])
        (mem/c:SF (reg/f:DI 0 ax [1995]) [1 acmrdl.trdlw+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3188 3187 3189 234 (set (reg:SI 0 ax [1996])
        (fix:SI (reg:SF 21 xmm0 [orig:883 _797 ] [883]))) "CLDRAD.f":612 174 {fix_truncsfsi_sse}
     (nil))
(insn 3189 3188 3190 234 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])
        (reg:SI 0 ax [1996])) "CLDRAD.f":612 86 {*movsi_internal}
     (nil))
(insn 3190 3189 3191 234 (set (reg:SI 0 ax [1998])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":613 86 {*movsi_internal}
     (nil))
(insn 3191 3190 3192 234 (parallel [
            (set (reg:SI 0 ax [2000])
                (div:SI (reg:SI 0 ax [1998])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (set (reg:SI 1 dx [1999])
                (mod:SI (reg:SI 0 ax [1998])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":613 382 {*divmodsi4}
     (nil))
(insn 3192 3191 3193 234 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1999])) "CLDRAD.f":613 86 {*movsi_internal}
     (nil))
(insn 3193 3192 3194 234 (set (reg:SI 0 ax [2001])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":614 86 {*movsi_internal}
     (nil))
(insn 3194 3193 3195 234 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [2001])) "CLDRAD.f":614 86 {*movsi_internal}
     (nil))
(insn 3195 3194 3196 234 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":615 86 {*movsi_internal}
     (nil))
(insn 3196 3195 3197 234 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":616 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3197 3196 3198 234 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3204)
            (pc))) "CLDRAD.f":616 682 {*jcc}
     (nil)
 -> 3204)
;;  succ:       235 (FALLTHRU)
;;              236
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 235, loop depth 0, maybe hot
;;  prev block 234, next block 236, flags: (RTL, MODIFIED)
;;  pred:       234 (FALLTHRU)
;; bb 235 artificial_defs: { }
;; bb 235 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 884 2002
(note 3198 3197 3199 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(insn 3199 3198 3200 235 (set (reg:SI 0 ax [2002])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":617 86 {*movsi_internal}
     (nil))
(insn 3200 3199 3201 235 (parallel [
            (set (reg:SI 0 ax [orig:884 _798 ] [884])
                (minus:SI (reg:SI 0 ax [2002])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":617 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -120 [0xffffffffffffff88])) [2 itrdlw+0 S4 A32]))
        (nil)))
(insn 3201 3200 4265 235 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:884 _798 ] [884])) "CLDRAD.f":617 86 {*movsi_internal}
     (nil))
(jump_insn 4265 3201 4266 235 (set (pc)
        (label_ref 3209)) 683 {jump}
     (nil)
 -> 3209)
;;  succ:       237 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4266 4265 3204)
;; basic block 236, loop depth 0, maybe hot
;;  prev block 235, next block 237, flags: (RTL, MODIFIED)
;;  pred:       234
;; bb 236 artificial_defs: { }
;; bb 236 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 885 2003
(code_label 3204 4266 3205 236 152 (nil) [1 uses])
(note 3205 3204 3206 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(insn 3206 3205 3207 236 (set (reg:SI 0 ax [2003])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":619 86 {*movsi_internal}
     (nil))
(insn 3207 3206 3208 236 (parallel [
            (set (reg:SI 0 ax [orig:885 _799 ] [885])
                (minus:SI (reg:SI 0 ax [2003])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":619 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 3208 3207 3209 236 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:885 _799 ] [885])) "CLDRAD.f":619 86 {*movsi_internal}
     (nil))
;;  succ:       237 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 237, loop depth 0, maybe hot
;;  prev block 236, next block 238, flags: (RTL, MODIFIED)
;;  pred:       236 (FALLTHRU)
;;              235 [always] 
;; bb 237 artificial_defs: { }
;; bb 237 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 886
(code_label 3209 3208 3210 237 153 (nil) [1 uses])
(note 3210 3209 3211 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn 3211 3210 3212 237 (set (reg:SI 0 ax [orig:886 _800 ] [886])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":621 86 {*movsi_internal}
     (nil))
(insn 3212 3211 3213 237 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:886 _800 ] [886])
            (const_int 0 [0]))) "CLDRAD.f":621 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3213 3212 3214 237 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 3216)
            (pc))) "CLDRAD.f":621 682 {*jcc}
     (nil)
 -> 3216)
;;  succ:       238 (FALLTHRU)
;;              239
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 238, loop depth 0, maybe hot
;;  prev block 237, next block 239, flags: (RTL, MODIFIED)
;;  pred:       237 (FALLTHRU)
;; bb 238 artificial_defs: { }
;; bb 238 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3214 3213 3215 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(insn 3215 3214 3216 238 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":621 86 {*movsi_internal}
     (nil))
;;  succ:       239 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 239, loop depth 0, maybe hot
;;  prev block 238, next block 240, flags: (RTL, MODIFIED)
;;  pred:       237
;;              238 (FALLTHRU)
;; bb 239 artificial_defs: { }
;; bb 239 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 887 888 889 890 891 2004 2005 2006 2007 2008 2009 2010 2011
(code_label 3216 3215 3217 239 154 (nil) [1 uses])
(note 3217 3216 3218 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn 3218 3217 3219 239 (set (reg:SI 0 ax [orig:887 _801 ] [887])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 528 [0x210]))) [2 rqstfld.iget+512 S4 A128])) "CLDRAD.f":623 86 {*movsi_internal}
     (nil))
(insn 3219 3218 3220 239 (set (reg:DI 0 ax [orig:888 _802 ] [888])
        (sign_extend:DI (reg:SI 0 ax [orig:887 _801 ] [887]))) "CLDRAD.f":623 149 {*extendsidi2_rex64}
     (nil))
(insn 3220 3219 3221 239 (parallel [
            (set (reg:DI 1 dx [orig:889 _803 ] [889])
                (plus:DI (reg:DI 0 ax [orig:888 _802 ] [888])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":623 222 {*adddi_1}
     (nil))
(insn 3221 3220 3222 239 (set (reg:DI 0 ax [2004])
        (reg:DI 1 dx [orig:889 _803 ] [889])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3222 3221 3224 239 (parallel [
            (set (reg:DI 0 ax [2005])
                (ashift:DI (reg:DI 0 ax [2004])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":623 551 {*ashldi3_1}
     (nil))
(insn 3224 3222 3225 239 (parallel [
            (set (reg:DI 0 ax [2004])
                (minus:DI (reg:DI 0 ax [2004])
                    (reg:DI 1 dx [orig:889 _803 ] [889])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":623 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:889 _803 ] [889])
            (const_int 15 [0xf]))
        (nil)))
(insn 3225 3224 3228 239 (parallel [
            (set (reg:DI 0 ax [2006])
                (ashift:DI (reg:DI 0 ax [2004])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":623 551 {*ashldi3_1}
     (nil))
(insn 3228 3225 3229 239 (parallel [
            (set (reg:DI 0 ax [2007])
                (plus:DI (reg:DI 0 ax [orig:890 _804 ] [890])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":623 222 {*adddi_1}
     (nil))
(insn 3229 3228 3230 239 (parallel [
            (set (reg:DI 0 ax [2008])
                (ashift:DI (reg:DI 0 ax [2007])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":623 551 {*ashldi3_1}
     (nil))
(insn 3230 3229 3231 239 (parallel [
            (set (reg/f:DI 1 dx [orig:891 _805 ] [891])
                (plus:DI (reg:DI 0 ax [2008])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":623 222 {*adddi_1}
     (nil))
(insn 3231 3230 3232 239 (set (reg:DI 4 si [2009])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3232 3231 3233 239 (set (reg:DI 2 cx [2010])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3233 3232 3234 239 (set (reg:DI 0 ax [2011])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3234 3233 3235 239 (set (reg:DI 38 r9)
        (reg:DI 4 si [2009])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3235 3234 3236 239 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2010])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3236 3235 3238 239 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2011])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3238 3236 3239 239 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 528 [0x210])))) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3239 3238 3240 239 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3240 3239 3241 239 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":623 88 {*movqi_internal}
     (nil))
(call_insn 3241 3240 3242 239 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":623 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       240 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 240, loop depth 0, maybe hot
;;  prev block 239, next block 241, flags: (RTL, MODIFIED)
;;  pred:       224
;;              239 (FALLTHRU)
;; bb 240 artificial_defs: { }
;; bb 240 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 892
(code_label 3242 3241 3243 240 144 (nil) [1 uses])
(note 3243 3242 3244 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(insn 3244 3243 3245 240 (set (reg:SI 0 ax [orig:892 _806 ] [892])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 532 [0x214]))) [2 rqstfld.iget+516 S4 A32])) "CLDRAD.f":627 86 {*movsi_internal}
     (nil))
(insn 3245 3244 3246 240 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:892 _806 ] [892])
            (const_int 0 [0]))) "CLDRAD.f":627 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3246 3245 3247 240 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3397)
            (pc))) "CLDRAD.f":627 682 {*jcc}
     (nil)
 -> 3397)
;;  succ:       241 (FALLTHRU)
;;              256
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 241, loop depth 0, maybe hot
;;  prev block 240, next block 242, flags: (RTL, MODIFIED)
;;  pred:       240 (FALLTHRU)
;; bb 241 artificial_defs: { }
;; bb 241 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 893 2012 2013
(note 3247 3246 3248 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(insn 3248 3247 3249 241 (set (reg/f:DI 0 ax [2012])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3249 3248 3250 241 (set (reg:SF 21 xmm0 [orig:893 _807 ] [893])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [2012])
                (const_int 8 [0x8])) [1 acmrds.ardsw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3250 3249 3251 241 (set (reg:SF 22 xmm1 [2013])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":628 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 3251 3250 3252 241 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:893 _807 ] [893])
            (reg:SF 22 xmm1 [2013]))) "CLDRAD.f":628 53 {*cmpisf}
     (nil))
(jump_insn 3252 3251 3256 241 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4267)
            (pc))) "CLDRAD.f":628 682 {*jcc}
     (nil)
 -> 4267)
;;  succ:       242 (FALLTHRU)
;;              243
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 242, loop depth 0, maybe hot
;;  prev block 241, next block 243, flags: (RTL, MODIFIED)
;;  pred:       241 (FALLTHRU)
;; bb 242 artificial_defs: { }
;; bb 242 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 894 2014 2015 2016
(note 3256 3252 3257 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(insn 3257 3256 3258 242 (set (reg/f:DI 0 ax [2014])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3258 3257 3259 242 (set (reg:SF 22 xmm1 [orig:894 _808 ] [894])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [2014])
                (const_int 8 [0x8])) [1 acmrds.ardsw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3259 3258 3260 242 (set (reg:SF 21 xmm0 [2016])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":629 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3260 3259 3261 242 (set (reg:SF 21 xmm0 [2015])
        (div:SF (reg:SF 21 xmm0 [2016])
            (reg:SF 22 xmm1 [orig:894 _808 ] [894]))) "CLDRAD.f":629 841 {*fop_sf_1}
     (nil))
(insn 3261 3260 4268 242 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [2015])) "CLDRAD.f":629 131 {*movsf_internal}
     (nil))
(jump_insn 4268 3261 4269 242 (set (pc)
        (label_ref 3268)) 683 {jump}
     (nil)
 -> 3268)
;;  succ:       244 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4269 4268 4267)
;; basic block 243, loop depth 0, maybe hot
;;  prev block 242, next block 244, flags: (RTL, MODIFIED)
;;  pred:       241
;; bb 243 artificial_defs: { }
;; bb 243 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2017
(code_label 4267 4269 3265 243 225 (nil) [1 uses])
(note 3265 4267 3266 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn 3266 3265 3267 243 (set (reg:SF 21 xmm0 [2017])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":631 131 {*movsf_internal}
     (nil))
(insn 3267 3266 3268 243 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [2017])) "CLDRAD.f":631 131 {*movsf_internal}
     (nil))
;;  succ:       244 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 244, loop depth 0, maybe hot
;;  prev block 243, next block 245, flags: (RTL, MODIFIED)
;;  pred:       243 (FALLTHRU)
;;              242 [always] 
;; bb 244 artificial_defs: { }
;; bb 244 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1175 1176
(code_label 3268 3267 3269 244 158 (nil) [1 uses])
(note 3269 3268 3270 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(insn 3270 3269 3271 244 (set (reg:SI 1 dx [orig:1175 _1519 ] [1175])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":633 86 {*movsi_internal}
     (nil))
(insn 3271 3270 3272 244 (set (reg:SI 0 ax [orig:1176 _1520 ] [1176])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":633 86 {*movsi_internal}
     (nil))
(insn 3272 3271 3315 244 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1175 _1519 ] [1175])) "CLDRAD.f":633 86 {*movsi_internal}
     (nil))
;;  succ:       245 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176

;; basic block 245, loop depth 0, maybe hot
;;  prev block 244, next block 246, flags: (RTL, MODIFIED)
;;  pred:       244 (FALLTHRU)
;;              249 [always] 
;; bb 245 artificial_defs: { }
;; bb 245 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176
;; lr  def 	 17 [flags] 1177 2018
(code_label 3315 3272 3273 245 162 (nil) [1 uses])
(note 3273 3315 3274 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn 3274 3273 3275 245 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1176 _1520 ] [1176]))) "CLDRAD.f":633 11 {*cmpsi_1}
     (nil))
(insn 3275 3274 3276 245 (set (reg:QI 1 dx [2018])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":633 678 {*setcc_qi}
     (nil))
(insn 3276 3275 3277 245 (set (reg:SI 1 dx [orig:1177 _1522 ] [1177])
        (zero_extend:SI (reg:QI 1 dx [2018]))) "CLDRAD.f":633 140 {*zero_extendqisi2}
     (nil))
(insn 3277 3276 3278 245 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1177 _1522 ] [1177])
            (const_int 0 [0]))) "CLDRAD.f":633 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3278 3277 3279 245 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4409)
            (pc))) "CLDRAD.f":633 682 {*jcc}
     (nil)
 -> 4409)
;;  succ:       342
;;              246 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176

;; basic block 246, loop depth 0, maybe hot
;;  prev block 245, next block 247, flags: (RTL, MODIFIED)
;;  pred:       245 (FALLTHRU)
;; bb 246 artificial_defs: { }
;; bb 246 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3279 3278 3280 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(insn 3280 3279 3309 246 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":634 86 {*movsi_internal}
     (nil))
;;  succ:       247 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176

;; basic block 247, loop depth 0, maybe hot
;;  prev block 246, next block 248, flags: (RTL, MODIFIED)
;;  pred:       246 (FALLTHRU)
;;              248 [always] 
;; bb 247 artificial_defs: { }
;; bb 247 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1178 2019
(code_label 3309 3280 3281 247 161 (nil) [1 uses])
(note 3281 3309 3282 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
(insn 3282 3281 3283 247 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":634 11 {*cmpsi_1}
     (nil))
(insn 3283 3282 3284 247 (set (reg:QI 1 dx [2019])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":634 678 {*setcc_qi}
     (nil))
(insn 3284 3283 3285 247 (set (reg:SI 1 dx [orig:1178 _1524 ] [1178])
        (zero_extend:SI (reg:QI 1 dx [2019]))) "CLDRAD.f":634 140 {*zero_extendqisi2}
     (nil))
(insn 3285 3284 3286 247 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1178 _1524 ] [1178])
            (const_int 0 [0]))) "CLDRAD.f":634 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3286 3285 3287 247 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4412)
            (pc))) "CLDRAD.f":634 682 {*jcc}
     (nil)
 -> 4412)
;;  succ:       343
;;              248 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176

;; basic block 248, loop depth 0, maybe hot
;;  prev block 247, next block 343, flags: (RTL, MODIFIED)
;;  pred:       247 (FALLTHRU)
;; bb 248 artificial_defs: { }
;; bb 248 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 895 896 897 898 899 900 901 902 903 904 905 906 2020 2021 2022 2023 2024 2025 2026
(note 3287 3286 3288 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
(insn 3288 3287 3289 248 (set (reg:SI 1 dx [2020])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":635 86 {*movsi_internal}
     (nil))
(insn 3289 3288 3290 248 (set (reg:DI 1 dx [orig:895 _809 ] [895])
        (sign_extend:DI (reg:SI 1 dx [2020]))) "CLDRAD.f":635 149 {*extendsidi2_rex64}
     (nil))
(insn 3290 3289 3291 248 (parallel [
            (set (reg:DI 2 cx [orig:896 _810 ] [896])
                (mult:DI (reg:DI 1 dx [orig:895 _809 ] [895])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":635 349 {*muldi3_1}
     (nil))
(insn 3291 3290 3292 248 (set (reg:SI 1 dx [2021])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":635 86 {*movsi_internal}
     (nil))
(insn 3292 3291 3293 248 (set (reg:DI 1 dx [orig:897 _811 ] [897])
        (sign_extend:DI (reg:SI 1 dx [2021]))) "CLDRAD.f":635 149 {*extendsidi2_rex64}
     (nil))
(insn 3293 3292 3294 248 (parallel [
            (set (reg:DI 1 dx [orig:898 _812 ] [898])
                (plus:DI (reg:DI 1 dx [orig:897 _811 ] [897])
                    (reg:DI 2 cx [orig:896 _810 ] [896])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":635 222 {*adddi_1}
     (nil))
(insn 3294 3293 3295 248 (parallel [
            (set (reg:DI 2 cx [orig:899 _813 ] [899])
                (plus:DI (reg:DI 1 dx [orig:898 _812 ] [898])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":635 222 {*adddi_1}
     (nil))
(insn 3295 3294 3296 248 (set (reg/f:DI 1 dx [2022])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":635 85 {*movdi_internal}
     (nil))
(insn 3296 3295 3297 248 (parallel [
            (set (reg:DI 2 cx [2023])
                (plus:DI (reg:DI 2 cx [orig:899 _813 ] [899])
                    (const_int 148158 [0x242be])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":635 222 {*adddi_1}
     (nil))
(insn 3297 3296 3298 248 (set (reg:SF 21 xmm0 [orig:900 _814 ] [900])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2023])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2022])) [1 acmrds.aswtoa S4 A32])) "CLDRAD.f":635 131 {*movsf_internal}
     (nil))
(insn 3298 3297 3299 248 (set (reg:SI 1 dx [2024])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":635 86 {*movsi_internal}
     (nil))
(insn 3299 3298 3300 248 (set (reg:DI 1 dx [orig:901 _815 ] [901])
        (sign_extend:DI (reg:SI 1 dx [2024]))) "CLDRAD.f":635 149 {*extendsidi2_rex64}
     (nil))
(insn 3300 3299 3301 248 (parallel [
            (set (reg:DI 2 cx [orig:902 _816 ] [902])
                (mult:DI (reg:DI 1 dx [orig:901 _815 ] [901])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":635 349 {*muldi3_1}
     (nil))
(insn 3301 3300 3302 248 (set (reg:SI 1 dx [2025])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":635 86 {*movsi_internal}
     (nil))
(insn 3302 3301 3303 248 (set (reg:DI 1 dx [orig:903 _817 ] [903])
        (sign_extend:DI (reg:SI 1 dx [2025]))) "CLDRAD.f":635 149 {*extendsidi2_rex64}
     (nil))
(insn 3303 3302 3304 248 (parallel [
            (set (reg:DI 1 dx [orig:904 _818 ] [904])
                (plus:DI (reg:DI 1 dx [orig:903 _817 ] [903])
                    (reg:DI 2 cx [orig:902 _816 ] [902])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":635 222 {*adddi_1}
     (nil))
(insn 3304 3303 3305 248 (parallel [
            (set (reg:DI 2 cx [orig:905 _819 ] [905])
                (plus:DI (reg:DI 1 dx [orig:904 _818 ] [904])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":635 222 {*adddi_1}
     (nil))
(insn 3305 3304 3306 248 (set (reg:SF 21 xmm0 [orig:906 _820 ] [906])
        (mult:SF (reg:SF 21 xmm0 [orig:900 _814 ] [900])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32]))) "CLDRAD.f":635 838 {*fop_sf_comm}
     (nil))
(insn 3306 3305 3307 248 (set (reg/f:DI 1 dx [2026])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":635 85 {*movdi_internal}
     (nil))
(insn 3307 3306 3308 248 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:905 _819 ] [905])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2026])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:906 _820 ] [906])) "CLDRAD.f":635 131 {*movsf_internal}
     (nil))
(insn 3308 3307 4270 248 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":634 221 {*addsi_1}
     (nil))
(jump_insn 4270 3308 4271 248 (set (pc)
        (label_ref 3309)) "CLDRAD.f":634 683 {jump}
     (nil)
 -> 3309)
;;  succ:       247 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176

(barrier 4271 4270 4412)
;; basic block 343, loop depth 0, maybe hot
;;  prev block 248, next block 249, flags: (RTL, MODIFIED)
;;  pred:       247
;; bb 343 artificial_defs: { }
;; bb 343 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4412 4271 4411 343 265 (nil) [1 uses])
(note 4411 4412 4413 343 [bb 343] NOTE_INSN_BASIC_BLOCK)
(insn 4413 4411 3312 343 (const_int 0 [0]) "CLDRAD.f":635 718 {nop}
     (nil))
;;  succ:       249 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176

;; basic block 249, loop depth 0, maybe hot
;;  prev block 343, next block 342, flags: (RTL, MODIFIED)
;;  pred:       343 [always]  (FALLTHRU)
;; bb 249 artificial_defs: { }
;; bb 249 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3312 4413 3313 249 160 (nil) [0 uses])
(note 3313 3312 3314 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(insn 3314 3313 4272 249 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":633 221 {*addsi_1}
     (nil))
(jump_insn 4272 3314 4273 249 (set (pc)
        (label_ref 3315)) "CLDRAD.f":633 683 {jump}
     (nil)
 -> 3315)
;;  succ:       245 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1176

(barrier 4273 4272 4409)
;; basic block 342, loop depth 0, maybe hot
;;  prev block 249, next block 250, flags: (RTL, MODIFIED)
;;  pred:       245
;; bb 342 artificial_defs: { }
;; bb 342 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4409 4273 4408 342 264 (nil) [1 uses])
(note 4408 4409 4410 342 [bb 342] NOTE_INSN_BASIC_BLOCK)
(insn 4410 4408 3318 342 (const_int 0 [0]) "CLDRAD.f":634 718 {nop}
     (nil))
;;  succ:       250 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 250, loop depth 0, maybe hot
;;  prev block 342, next block 251, flags: (RTL, MODIFIED)
;;  pred:       342 [always]  (FALLTHRU)
;; bb 250 artificial_defs: { }
;; bb 250 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 907 2027 2028 2029 2030 2031 2032 2033 2034 2036 2037 2038 2039
(code_label 3318 4410 3319 250 159 (nil) [0 uses])
(note 3319 3318 3320 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
(insn 3320 3319 3321 250 (set (reg:DI 1 dx [2027])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3321 3320 3322 250 (set (reg:DI 0 ax [2028])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3322 3321 3323 250 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":638 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3323 3322 3324 250 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":638 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3324 3323 3325 250 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2027])) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3325 3324 3326 250 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2028])) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3326 3325 3327 250 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3327 3326 3328 250 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3328 3327 3329 250 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3329 3328 3330 250 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f2038fb4cf0 *.LC30>)) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3330 3329 3331 250 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":638 88 {*movqi_internal}
     (nil))
(call_insn 3331 3330 3332 250 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":638 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3332 3331 3333 250 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":638 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3333 3332 3334 250 (set (reg/f:DI 1 dx [2029])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":639 85 {*movdi_internal}
     (nil))
(insn 3334 3333 3335 250 (set (reg:DI 0 ax [2030])
        (const_int 0 [0])) "CLDRAD.f":639 85 {*movdi_internal}
     (nil))
(insn 3335 3334 4505 250 (set (reg:DI 2 cx [2031])
        (const_int 12 [0xc])) "CLDRAD.f":639 85 {*movdi_internal}
     (nil))
(insn 4505 3335 3336 250 (set (reg/f:DI 5 di [2029])
        (reg/f:DI 1 dx [2029])) "CLDRAD.f":639 85 {*movdi_internal}
     (nil))
(insn 3336 4505 4506 250 (parallel [
            (set (reg:DI 2 cx [2031])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2029])
                (plus:DI (ashift:DI (reg:DI 2 cx [2031])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2029])))
            (set (mem/c:BLK (reg/f:DI 5 di [2029]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2030]))
            (use (reg:DI 2 cx [2031]))
        ]) "CLDRAD.f":639 984 {*rep_stosdi_rex64}
     (nil))
(insn 4506 3336 3337 250 (set (reg/f:DI 1 dx [2029])
        (reg/f:DI 5 di [2029])) "CLDRAD.f":639 85 {*movdi_internal}
     (nil))
(insn 3337 4506 3338 250 (set (mem/c:SI (reg/f:DI 1 dx [2029]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2030])) "CLDRAD.f":639 86 {*movsi_internal}
     (nil))
(insn 3338 3337 3339 250 (parallel [
            (set (reg/f:DI 1 dx [2029])
                (plus:DI (reg/f:DI 1 dx [2029])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":639 222 {*adddi_1}
     (nil))
(insn 3339 3338 3340 250 (set (reg:SI 0 ax [2032])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":641 86 {*movsi_internal}
     (nil))
(insn 3340 3339 3341 250 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [2032])) "CLDRAD.f":641 86 {*movsi_internal}
     (nil))
(insn 3341 3340 3342 250 (set (reg/f:DI 0 ax [2033])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3342 3341 3343 250 (set (reg:SF 21 xmm0 [orig:907 _821 ] [907])
        (mem/c:SF (reg/f:DI 0 ax [2033]) [1 acmrds.trdsw+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3343 3342 3344 250 (set (reg:SI 0 ax [2034])
        (fix:SI (reg:SF 21 xmm0 [orig:907 _821 ] [907]))) "CLDRAD.f":642 174 {fix_truncsfsi_sse}
     (nil))
(insn 3344 3343 3345 250 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])
        (reg:SI 0 ax [2034])) "CLDRAD.f":642 86 {*movsi_internal}
     (nil))
(insn 3345 3344 3346 250 (set (reg:SI 0 ax [2036])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":643 86 {*movsi_internal}
     (nil))
(insn 3346 3345 3347 250 (parallel [
            (set (reg:SI 0 ax [2038])
                (div:SI (reg:SI 0 ax [2036])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (set (reg:SI 1 dx [2037])
                (mod:SI (reg:SI 0 ax [2036])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":643 382 {*divmodsi4}
     (nil))
(insn 3347 3346 3348 250 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [2037])) "CLDRAD.f":643 86 {*movsi_internal}
     (nil))
(insn 3348 3347 3349 250 (set (reg:SI 0 ax [2039])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":644 86 {*movsi_internal}
     (nil))
(insn 3349 3348 3350 250 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [2039])) "CLDRAD.f":644 86 {*movsi_internal}
     (nil))
(insn 3350 3349 3351 250 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":645 86 {*movsi_internal}
     (nil))
(insn 3351 3350 3352 250 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":646 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3352 3351 3353 250 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3359)
            (pc))) "CLDRAD.f":646 682 {*jcc}
     (nil)
 -> 3359)
;;  succ:       251 (FALLTHRU)
;;              252
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 251, loop depth 0, maybe hot
;;  prev block 250, next block 252, flags: (RTL, MODIFIED)
;;  pred:       250 (FALLTHRU)
;; bb 251 artificial_defs: { }
;; bb 251 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 908 2040
(note 3353 3352 3354 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(insn 3354 3353 3355 251 (set (reg:SI 0 ax [2040])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":647 86 {*movsi_internal}
     (nil))
(insn 3355 3354 3356 251 (parallel [
            (set (reg:SI 0 ax [orig:908 _822 ] [908])
                (minus:SI (reg:SI 0 ax [2040])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":647 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -116 [0xffffffffffffff8c])) [2 itrdsw+0 S4 A32]))
        (nil)))
(insn 3356 3355 4274 251 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:908 _822 ] [908])) "CLDRAD.f":647 86 {*movsi_internal}
     (nil))
(jump_insn 4274 3356 4275 251 (set (pc)
        (label_ref 3364)) 683 {jump}
     (nil)
 -> 3364)
;;  succ:       253 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4275 4274 3359)
;; basic block 252, loop depth 0, maybe hot
;;  prev block 251, next block 253, flags: (RTL, MODIFIED)
;;  pred:       250
;; bb 252 artificial_defs: { }
;; bb 252 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 909 2041
(code_label 3359 4275 3360 252 163 (nil) [1 uses])
(note 3360 3359 3361 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(insn 3361 3360 3362 252 (set (reg:SI 0 ax [2041])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":649 86 {*movsi_internal}
     (nil))
(insn 3362 3361 3363 252 (parallel [
            (set (reg:SI 0 ax [orig:909 _823 ] [909])
                (minus:SI (reg:SI 0 ax [2041])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":649 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 3363 3362 3364 252 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:909 _823 ] [909])) "CLDRAD.f":649 86 {*movsi_internal}
     (nil))
;;  succ:       253 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 253, loop depth 0, maybe hot
;;  prev block 252, next block 254, flags: (RTL, MODIFIED)
;;  pred:       252 (FALLTHRU)
;;              251 [always] 
;; bb 253 artificial_defs: { }
;; bb 253 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 910
(code_label 3364 3363 3365 253 164 (nil) [1 uses])
(note 3365 3364 3366 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(insn 3366 3365 3367 253 (set (reg:SI 0 ax [orig:910 _824 ] [910])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":651 86 {*movsi_internal}
     (nil))
(insn 3367 3366 3368 253 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:910 _824 ] [910])
            (const_int 0 [0]))) "CLDRAD.f":651 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3368 3367 3369 253 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 3371)
            (pc))) "CLDRAD.f":651 682 {*jcc}
     (nil)
 -> 3371)
;;  succ:       254 (FALLTHRU)
;;              255
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 254, loop depth 0, maybe hot
;;  prev block 253, next block 255, flags: (RTL, MODIFIED)
;;  pred:       253 (FALLTHRU)
;; bb 254 artificial_defs: { }
;; bb 254 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3369 3368 3370 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(insn 3370 3369 3371 254 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":651 86 {*movsi_internal}
     (nil))
;;  succ:       255 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 255, loop depth 0, maybe hot
;;  prev block 254, next block 256, flags: (RTL, MODIFIED)
;;  pred:       253
;;              254 (FALLTHRU)
;; bb 255 artificial_defs: { }
;; bb 255 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 911 912 913 914 915 2042 2043 2044 2045 2046 2047 2048 2049
(code_label 3371 3370 3372 255 165 (nil) [1 uses])
(note 3372 3371 3373 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(insn 3373 3372 3374 255 (set (reg:SI 0 ax [orig:911 _825 ] [911])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 532 [0x214]))) [2 rqstfld.iget+516 S4 A32])) "CLDRAD.f":653 86 {*movsi_internal}
     (nil))
(insn 3374 3373 3375 255 (set (reg:DI 0 ax [orig:912 _826 ] [912])
        (sign_extend:DI (reg:SI 0 ax [orig:911 _825 ] [911]))) "CLDRAD.f":653 149 {*extendsidi2_rex64}
     (nil))
(insn 3375 3374 3376 255 (parallel [
            (set (reg:DI 1 dx [orig:913 _827 ] [913])
                (plus:DI (reg:DI 0 ax [orig:912 _826 ] [912])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":653 222 {*adddi_1}
     (nil))
(insn 3376 3375 3377 255 (set (reg:DI 0 ax [2042])
        (reg:DI 1 dx [orig:913 _827 ] [913])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3377 3376 3379 255 (parallel [
            (set (reg:DI 0 ax [2043])
                (ashift:DI (reg:DI 0 ax [2042])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":653 551 {*ashldi3_1}
     (nil))
(insn 3379 3377 3380 255 (parallel [
            (set (reg:DI 0 ax [2042])
                (minus:DI (reg:DI 0 ax [2042])
                    (reg:DI 1 dx [orig:913 _827 ] [913])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":653 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:913 _827 ] [913])
            (const_int 15 [0xf]))
        (nil)))
(insn 3380 3379 3383 255 (parallel [
            (set (reg:DI 0 ax [2044])
                (ashift:DI (reg:DI 0 ax [2042])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":653 551 {*ashldi3_1}
     (nil))
(insn 3383 3380 3384 255 (parallel [
            (set (reg:DI 0 ax [2045])
                (plus:DI (reg:DI 0 ax [orig:914 _828 ] [914])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":653 222 {*adddi_1}
     (nil))
(insn 3384 3383 3385 255 (parallel [
            (set (reg:DI 0 ax [2046])
                (ashift:DI (reg:DI 0 ax [2045])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":653 551 {*ashldi3_1}
     (nil))
(insn 3385 3384 3386 255 (parallel [
            (set (reg/f:DI 1 dx [orig:915 _829 ] [915])
                (plus:DI (reg:DI 0 ax [2046])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":653 222 {*adddi_1}
     (nil))
(insn 3386 3385 3387 255 (set (reg:DI 4 si [2047])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3387 3386 3388 255 (set (reg:DI 2 cx [2048])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3388 3387 3389 255 (set (reg:DI 0 ax [2049])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3389 3388 3390 255 (set (reg:DI 38 r9)
        (reg:DI 4 si [2047])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3390 3389 3391 255 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2048])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3391 3390 3393 255 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2049])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3393 3391 3394 255 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 532 [0x214])))) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3394 3393 3395 255 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3395 3394 3396 255 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":653 88 {*movqi_internal}
     (nil))
(call_insn 3396 3395 3397 255 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":653 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       256 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 256, loop depth 0, maybe hot
;;  prev block 255, next block 257, flags: (RTL, MODIFIED)
;;  pred:       240
;;              255 (FALLTHRU)
;; bb 256 artificial_defs: { }
;; bb 256 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 916
(code_label 3397 3396 3398 256 155 (nil) [1 uses])
(note 3398 3397 3399 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(insn 3399 3398 3400 256 (set (reg:SI 0 ax [orig:916 _830 ] [916])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 536 [0x218]))) [2 rqstfld.iget+520 S4 A64])) "CLDRAD.f":657 86 {*movsi_internal}
     (nil))
(insn 3400 3399 3401 256 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:916 _830 ] [916])
            (const_int 0 [0]))) "CLDRAD.f":657 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3401 3400 3402 256 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3552)
            (pc))) "CLDRAD.f":657 682 {*jcc}
     (nil)
 -> 3552)
;;  succ:       257 (FALLTHRU)
;;              272
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 257, loop depth 0, maybe hot
;;  prev block 256, next block 258, flags: (RTL, MODIFIED)
;;  pred:       256 (FALLTHRU)
;; bb 257 artificial_defs: { }
;; bb 257 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 917 2050 2051
(note 3402 3401 3403 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
(insn 3403 3402 3404 257 (set (reg/f:DI 0 ax [2050])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3404 3403 3405 257 (set (reg:SF 21 xmm0 [orig:917 _831 ] [917])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [2050])
                (const_int 8 [0x8])) [1 acmrdl.ardlw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3405 3404 3406 257 (set (reg:SF 22 xmm1 [2051])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":658 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 3406 3405 3407 257 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:917 _831 ] [917])
            (reg:SF 22 xmm1 [2051]))) "CLDRAD.f":658 53 {*cmpisf}
     (nil))
(jump_insn 3407 3406 3411 257 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4276)
            (pc))) "CLDRAD.f":658 682 {*jcc}
     (nil)
 -> 4276)
;;  succ:       258 (FALLTHRU)
;;              259
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 258, loop depth 0, maybe hot
;;  prev block 257, next block 259, flags: (RTL, MODIFIED)
;;  pred:       257 (FALLTHRU)
;; bb 258 artificial_defs: { }
;; bb 258 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 918 2052 2053 2054
(note 3411 3407 3412 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(insn 3412 3411 3413 258 (set (reg/f:DI 0 ax [2052])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3413 3412 3414 258 (set (reg:SF 22 xmm1 [orig:918 _832 ] [918])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [2052])
                (const_int 8 [0x8])) [1 acmrdl.ardlw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3414 3413 3415 258 (set (reg:SF 21 xmm0 [2054])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":659 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3415 3414 3416 258 (set (reg:SF 21 xmm0 [2053])
        (div:SF (reg:SF 21 xmm0 [2054])
            (reg:SF 22 xmm1 [orig:918 _832 ] [918]))) "CLDRAD.f":659 841 {*fop_sf_1}
     (nil))
(insn 3416 3415 4277 258 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [2053])) "CLDRAD.f":659 131 {*movsf_internal}
     (nil))
(jump_insn 4277 3416 4278 258 (set (pc)
        (label_ref 3423)) 683 {jump}
     (nil)
 -> 3423)
;;  succ:       260 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4278 4277 4276)
;; basic block 259, loop depth 0, maybe hot
;;  prev block 258, next block 260, flags: (RTL, MODIFIED)
;;  pred:       257
;; bb 259 artificial_defs: { }
;; bb 259 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2055
(code_label 4276 4278 3420 259 226 (nil) [1 uses])
(note 3420 4276 3421 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(insn 3421 3420 3422 259 (set (reg:SF 21 xmm0 [2055])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":661 131 {*movsf_internal}
     (nil))
(insn 3422 3421 3423 259 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [2055])) "CLDRAD.f":661 131 {*movsf_internal}
     (nil))
;;  succ:       260 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 260, loop depth 0, maybe hot
;;  prev block 259, next block 261, flags: (RTL, MODIFIED)
;;  pred:       259 (FALLTHRU)
;;              258 [always] 
;; bb 260 artificial_defs: { }
;; bb 260 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1179 1180
(code_label 3423 3422 3424 260 169 (nil) [1 uses])
(note 3424 3423 3425 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
(insn 3425 3424 3426 260 (set (reg:SI 1 dx [orig:1179 _1541 ] [1179])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":663 86 {*movsi_internal}
     (nil))
(insn 3426 3425 3427 260 (set (reg:SI 0 ax [orig:1180 _1542 ] [1180])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":663 86 {*movsi_internal}
     (nil))
(insn 3427 3426 3470 260 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1179 _1541 ] [1179])) "CLDRAD.f":663 86 {*movsi_internal}
     (nil))
;;  succ:       261 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180

;; basic block 261, loop depth 0, maybe hot
;;  prev block 260, next block 262, flags: (RTL, MODIFIED)
;;  pred:       260 (FALLTHRU)
;;              265 [always] 
;; bb 261 artificial_defs: { }
;; bb 261 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180
;; lr  def 	 17 [flags] 1181 2056
(code_label 3470 3427 3428 261 173 (nil) [1 uses])
(note 3428 3470 3429 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(insn 3429 3428 3430 261 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1180 _1542 ] [1180]))) "CLDRAD.f":663 11 {*cmpsi_1}
     (nil))
(insn 3430 3429 3431 261 (set (reg:QI 1 dx [2056])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":663 678 {*setcc_qi}
     (nil))
(insn 3431 3430 3432 261 (set (reg:SI 1 dx [orig:1181 _1544 ] [1181])
        (zero_extend:SI (reg:QI 1 dx [2056]))) "CLDRAD.f":663 140 {*zero_extendqisi2}
     (nil))
(insn 3432 3431 3433 261 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1181 _1544 ] [1181])
            (const_int 0 [0]))) "CLDRAD.f":663 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3433 3432 3434 261 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4415)
            (pc))) "CLDRAD.f":663 682 {*jcc}
     (nil)
 -> 4415)
;;  succ:       344
;;              262 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180

;; basic block 262, loop depth 0, maybe hot
;;  prev block 261, next block 263, flags: (RTL, MODIFIED)
;;  pred:       261 (FALLTHRU)
;; bb 262 artificial_defs: { }
;; bb 262 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3434 3433 3435 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(insn 3435 3434 3464 262 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":664 86 {*movsi_internal}
     (nil))
;;  succ:       263 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180

;; basic block 263, loop depth 0, maybe hot
;;  prev block 262, next block 264, flags: (RTL, MODIFIED)
;;  pred:       262 (FALLTHRU)
;;              264 [always] 
;; bb 263 artificial_defs: { }
;; bb 263 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1182 2057
(code_label 3464 3435 3436 263 172 (nil) [1 uses])
(note 3436 3464 3437 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(insn 3437 3436 3438 263 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":664 11 {*cmpsi_1}
     (nil))
(insn 3438 3437 3439 263 (set (reg:QI 1 dx [2057])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":664 678 {*setcc_qi}
     (nil))
(insn 3439 3438 3440 263 (set (reg:SI 1 dx [orig:1182 _1546 ] [1182])
        (zero_extend:SI (reg:QI 1 dx [2057]))) "CLDRAD.f":664 140 {*zero_extendqisi2}
     (nil))
(insn 3440 3439 3441 263 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1182 _1546 ] [1182])
            (const_int 0 [0]))) "CLDRAD.f":664 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3441 3440 3442 263 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4418)
            (pc))) "CLDRAD.f":664 682 {*jcc}
     (nil)
 -> 4418)
;;  succ:       345
;;              264 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180

;; basic block 264, loop depth 0, maybe hot
;;  prev block 263, next block 345, flags: (RTL, MODIFIED)
;;  pred:       263 (FALLTHRU)
;; bb 264 artificial_defs: { }
;; bb 264 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 919 920 921 922 923 924 925 926 927 928 929 930 2058 2059 2060 2061 2062 2063 2064
(note 3442 3441 3443 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(insn 3443 3442 3444 264 (set (reg:SI 1 dx [2058])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":665 86 {*movsi_internal}
     (nil))
(insn 3444 3443 3445 264 (set (reg:DI 1 dx [orig:919 _833 ] [919])
        (sign_extend:DI (reg:SI 1 dx [2058]))) "CLDRAD.f":665 149 {*extendsidi2_rex64}
     (nil))
(insn 3445 3444 3446 264 (parallel [
            (set (reg:DI 2 cx [orig:920 _834 ] [920])
                (mult:DI (reg:DI 1 dx [orig:919 _833 ] [919])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":665 349 {*muldi3_1}
     (nil))
(insn 3446 3445 3447 264 (set (reg:SI 1 dx [2059])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":665 86 {*movsi_internal}
     (nil))
(insn 3447 3446 3448 264 (set (reg:DI 1 dx [orig:921 _835 ] [921])
        (sign_extend:DI (reg:SI 1 dx [2059]))) "CLDRAD.f":665 149 {*extendsidi2_rex64}
     (nil))
(insn 3448 3447 3449 264 (parallel [
            (set (reg:DI 1 dx [orig:922 _836 ] [922])
                (plus:DI (reg:DI 1 dx [orig:921 _835 ] [921])
                    (reg:DI 2 cx [orig:920 _834 ] [920])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":665 222 {*adddi_1}
     (nil))
(insn 3449 3448 3450 264 (parallel [
            (set (reg:DI 2 cx [orig:923 _837 ] [923])
                (plus:DI (reg:DI 1 dx [orig:922 _836 ] [922])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":665 222 {*adddi_1}
     (nil))
(insn 3450 3449 3451 264 (set (reg/f:DI 1 dx [2060])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":665 85 {*movdi_internal}
     (nil))
(insn 3451 3450 3452 264 (parallel [
            (set (reg:DI 2 cx [2061])
                (plus:DI (reg:DI 2 cx [orig:923 _837 ] [923])
                    (const_int 148158 [0x242be])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":665 222 {*adddi_1}
     (nil))
(insn 3452 3451 3453 264 (set (reg:SF 21 xmm0 [orig:924 _838 ] [924])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2061])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2060])) [1 acmrdl.alwtoa S4 A32])) "CLDRAD.f":665 131 {*movsf_internal}
     (nil))
(insn 3453 3452 3454 264 (set (reg:SI 1 dx [2062])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":665 86 {*movsi_internal}
     (nil))
(insn 3454 3453 3455 264 (set (reg:DI 1 dx [orig:925 _839 ] [925])
        (sign_extend:DI (reg:SI 1 dx [2062]))) "CLDRAD.f":665 149 {*extendsidi2_rex64}
     (nil))
(insn 3455 3454 3456 264 (parallel [
            (set (reg:DI 2 cx [orig:926 _840 ] [926])
                (mult:DI (reg:DI 1 dx [orig:925 _839 ] [925])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":665 349 {*muldi3_1}
     (nil))
(insn 3456 3455 3457 264 (set (reg:SI 1 dx [2063])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":665 86 {*movsi_internal}
     (nil))
(insn 3457 3456 3458 264 (set (reg:DI 1 dx [orig:927 _841 ] [927])
        (sign_extend:DI (reg:SI 1 dx [2063]))) "CLDRAD.f":665 149 {*extendsidi2_rex64}
     (nil))
(insn 3458 3457 3459 264 (parallel [
            (set (reg:DI 1 dx [orig:928 _842 ] [928])
                (plus:DI (reg:DI 1 dx [orig:927 _841 ] [927])
                    (reg:DI 2 cx [orig:926 _840 ] [926])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":665 222 {*adddi_1}
     (nil))
(insn 3459 3458 3460 264 (parallel [
            (set (reg:DI 2 cx [orig:929 _843 ] [929])
                (plus:DI (reg:DI 1 dx [orig:928 _842 ] [928])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":665 222 {*adddi_1}
     (nil))
(insn 3460 3459 3461 264 (set (reg:SF 21 xmm0 [orig:930 _844 ] [930])
        (mult:SF (reg:SF 21 xmm0 [orig:924 _838 ] [924])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32]))) "CLDRAD.f":665 838 {*fop_sf_comm}
     (nil))
(insn 3461 3460 3462 264 (set (reg/f:DI 1 dx [2064])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":665 85 {*movdi_internal}
     (nil))
(insn 3462 3461 3463 264 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:929 _843 ] [929])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2064])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:930 _844 ] [930])) "CLDRAD.f":665 131 {*movsf_internal}
     (nil))
(insn 3463 3462 4279 264 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":664 221 {*addsi_1}
     (nil))
(jump_insn 4279 3463 4280 264 (set (pc)
        (label_ref 3464)) "CLDRAD.f":664 683 {jump}
     (nil)
 -> 3464)
;;  succ:       263 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180

(barrier 4280 4279 4418)
;; basic block 345, loop depth 0, maybe hot
;;  prev block 264, next block 265, flags: (RTL, MODIFIED)
;;  pred:       263
;; bb 345 artificial_defs: { }
;; bb 345 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4418 4280 4417 345 267 (nil) [1 uses])
(note 4417 4418 4419 345 [bb 345] NOTE_INSN_BASIC_BLOCK)
(insn 4419 4417 3467 345 (const_int 0 [0]) "CLDRAD.f":665 718 {nop}
     (nil))
;;  succ:       265 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180

;; basic block 265, loop depth 0, maybe hot
;;  prev block 345, next block 344, flags: (RTL, MODIFIED)
;;  pred:       345 [always]  (FALLTHRU)
;; bb 265 artificial_defs: { }
;; bb 265 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3467 4419 3468 265 171 (nil) [0 uses])
(note 3468 3467 3469 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(insn 3469 3468 4281 265 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":663 221 {*addsi_1}
     (nil))
(jump_insn 4281 3469 4282 265 (set (pc)
        (label_ref 3470)) "CLDRAD.f":663 683 {jump}
     (nil)
 -> 3470)
;;  succ:       261 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1180

(barrier 4282 4281 4415)
;; basic block 344, loop depth 0, maybe hot
;;  prev block 265, next block 266, flags: (RTL, MODIFIED)
;;  pred:       261
;; bb 344 artificial_defs: { }
;; bb 344 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4415 4282 4414 344 266 (nil) [1 uses])
(note 4414 4415 4416 344 [bb 344] NOTE_INSN_BASIC_BLOCK)
(insn 4416 4414 3473 344 (const_int 0 [0]) "CLDRAD.f":664 718 {nop}
     (nil))
;;  succ:       266 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 266, loop depth 0, maybe hot
;;  prev block 344, next block 267, flags: (RTL, MODIFIED)
;;  pred:       344 [always]  (FALLTHRU)
;; bb 266 artificial_defs: { }
;; bb 266 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 931 2065 2066 2067 2068 2069 2070 2071 2072 2074 2075 2076 2077
(code_label 3473 4416 3474 266 170 (nil) [0 uses])
(note 3474 3473 3475 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
(insn 3475 3474 3476 266 (set (reg:DI 1 dx [2065])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3476 3475 3477 266 (set (reg:DI 0 ax [2066])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3477 3476 3478 266 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":668 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3478 3477 3479 266 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":668 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3479 3478 3480 266 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2065])) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3480 3479 3481 266 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2066])) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3481 3480 3482 266 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3482 3481 3483 266 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3483 3482 3484 266 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3484 3483 3485 266 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f2038fb4d80 *.LC31>)) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3485 3484 3486 266 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":668 88 {*movqi_internal}
     (nil))
(call_insn 3486 3485 3487 266 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":668 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3487 3486 3488 266 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":668 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3488 3487 3489 266 (set (reg/f:DI 1 dx [2067])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":669 85 {*movdi_internal}
     (nil))
(insn 3489 3488 3490 266 (set (reg:DI 0 ax [2068])
        (const_int 0 [0])) "CLDRAD.f":669 85 {*movdi_internal}
     (nil))
(insn 3490 3489 4507 266 (set (reg:DI 2 cx [2069])
        (const_int 12 [0xc])) "CLDRAD.f":669 85 {*movdi_internal}
     (nil))
(insn 4507 3490 3491 266 (set (reg/f:DI 5 di [2067])
        (reg/f:DI 1 dx [2067])) "CLDRAD.f":669 85 {*movdi_internal}
     (nil))
(insn 3491 4507 4508 266 (parallel [
            (set (reg:DI 2 cx [2069])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2067])
                (plus:DI (ashift:DI (reg:DI 2 cx [2069])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2067])))
            (set (mem/c:BLK (reg/f:DI 5 di [2067]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2068]))
            (use (reg:DI 2 cx [2069]))
        ]) "CLDRAD.f":669 984 {*rep_stosdi_rex64}
     (nil))
(insn 4508 3491 3492 266 (set (reg/f:DI 1 dx [2067])
        (reg/f:DI 5 di [2067])) "CLDRAD.f":669 85 {*movdi_internal}
     (nil))
(insn 3492 4508 3493 266 (set (mem/c:SI (reg/f:DI 1 dx [2067]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2068])) "CLDRAD.f":669 86 {*movsi_internal}
     (nil))
(insn 3493 3492 3494 266 (parallel [
            (set (reg/f:DI 1 dx [2067])
                (plus:DI (reg/f:DI 1 dx [2067])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":669 222 {*adddi_1}
     (nil))
(insn 3494 3493 3495 266 (set (reg:SI 0 ax [2070])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":671 86 {*movsi_internal}
     (nil))
(insn 3495 3494 3496 266 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [2070])) "CLDRAD.f":671 86 {*movsi_internal}
     (nil))
(insn 3496 3495 3497 266 (set (reg/f:DI 0 ax [2071])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3497 3496 3498 266 (set (reg:SF 21 xmm0 [orig:931 _845 ] [931])
        (mem/c:SF (reg/f:DI 0 ax [2071]) [1 acmrdl.trdlw+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3498 3497 3499 266 (set (reg:SI 0 ax [2072])
        (fix:SI (reg:SF 21 xmm0 [orig:931 _845 ] [931]))) "CLDRAD.f":672 174 {fix_truncsfsi_sse}
     (nil))
(insn 3499 3498 3500 266 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])
        (reg:SI 0 ax [2072])) "CLDRAD.f":672 86 {*movsi_internal}
     (nil))
(insn 3500 3499 3501 266 (set (reg:SI 0 ax [2074])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":673 86 {*movsi_internal}
     (nil))
(insn 3501 3500 3502 266 (parallel [
            (set (reg:SI 0 ax [2076])
                (div:SI (reg:SI 0 ax [2074])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (set (reg:SI 1 dx [2075])
                (mod:SI (reg:SI 0 ax [2074])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":673 382 {*divmodsi4}
     (nil))
(insn 3502 3501 3503 266 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [2075])) "CLDRAD.f":673 86 {*movsi_internal}
     (nil))
(insn 3503 3502 3504 266 (set (reg:SI 0 ax [2077])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":674 86 {*movsi_internal}
     (nil))
(insn 3504 3503 3505 266 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [2077])) "CLDRAD.f":674 86 {*movsi_internal}
     (nil))
(insn 3505 3504 3506 266 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":675 86 {*movsi_internal}
     (nil))
(insn 3506 3505 3507 266 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":676 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3507 3506 3508 266 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3514)
            (pc))) "CLDRAD.f":676 682 {*jcc}
     (nil)
 -> 3514)
;;  succ:       267 (FALLTHRU)
;;              268
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 267, loop depth 0, maybe hot
;;  prev block 266, next block 268, flags: (RTL, MODIFIED)
;;  pred:       266 (FALLTHRU)
;; bb 267 artificial_defs: { }
;; bb 267 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 932 2078
(note 3508 3507 3509 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(insn 3509 3508 3510 267 (set (reg:SI 0 ax [2078])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":677 86 {*movsi_internal}
     (nil))
(insn 3510 3509 3511 267 (parallel [
            (set (reg:SI 0 ax [orig:932 _846 ] [932])
                (minus:SI (reg:SI 0 ax [2078])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":677 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -120 [0xffffffffffffff88])) [2 itrdlw+0 S4 A32]))
        (nil)))
(insn 3511 3510 4283 267 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:932 _846 ] [932])) "CLDRAD.f":677 86 {*movsi_internal}
     (nil))
(jump_insn 4283 3511 4284 267 (set (pc)
        (label_ref 3519)) 683 {jump}
     (nil)
 -> 3519)
;;  succ:       269 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 4284 4283 3514)
;; basic block 268, loop depth 0, maybe hot
;;  prev block 267, next block 269, flags: (RTL, MODIFIED)
;;  pred:       266
;; bb 268 artificial_defs: { }
;; bb 268 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 933 2079
(code_label 3514 4284 3515 268 174 (nil) [1 uses])
(note 3515 3514 3516 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
(insn 3516 3515 3517 268 (set (reg:SI 0 ax [2079])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":679 86 {*movsi_internal}
     (nil))
(insn 3517 3516 3518 268 (parallel [
            (set (reg:SI 0 ax [orig:933 _847 ] [933])
                (minus:SI (reg:SI 0 ax [2079])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":679 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 3518 3517 3519 268 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:933 _847 ] [933])) "CLDRAD.f":679 86 {*movsi_internal}
     (nil))
;;  succ:       269 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 269, loop depth 0, maybe hot
;;  prev block 268, next block 270, flags: (RTL, MODIFIED)
;;  pred:       268 (FALLTHRU)
;;              267 [always] 
;; bb 269 artificial_defs: { }
;; bb 269 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 934
(code_label 3519 3518 3520 269 175 (nil) [1 uses])
(note 3520 3519 3521 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
(insn 3521 3520 3522 269 (set (reg:SI 0 ax [orig:934 _848 ] [934])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":681 86 {*movsi_internal}
     (nil))
(insn 3522 3521 3523 269 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:934 _848 ] [934])
            (const_int 0 [0]))) "CLDRAD.f":681 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3523 3522 3524 269 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 3526)
            (pc))) "CLDRAD.f":681 682 {*jcc}
     (nil)
 -> 3526)
;;  succ:       270 (FALLTHRU)
;;              271
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 270, loop depth 0, maybe hot
;;  prev block 269, next block 271, flags: (RTL, MODIFIED)
;;  pred:       269 (FALLTHRU)
;; bb 270 artificial_defs: { }
;; bb 270 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3524 3523 3525 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
(insn 3525 3524 3526 270 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":681 86 {*movsi_internal}
     (nil))
;;  succ:       271 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 271, loop depth 0, maybe hot
;;  prev block 270, next block 272, flags: (RTL, MODIFIED)
;;  pred:       269
;;              270 (FALLTHRU)
;; bb 271 artificial_defs: { }
;; bb 271 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 935 936 937 938 939 2080 2081 2082 2083 2084 2085 2086 2087
(code_label 3526 3525 3527 271 176 (nil) [1 uses])
(note 3527 3526 3528 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
(insn 3528 3527 3529 271 (set (reg:SI 0 ax [orig:935 _849 ] [935])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 536 [0x218]))) [2 rqstfld.iget+520 S4 A64])) "CLDRAD.f":683 86 {*movsi_internal}
     (nil))
(insn 3529 3528 3530 271 (set (reg:DI 0 ax [orig:936 _850 ] [936])
        (sign_extend:DI (reg:SI 0 ax [orig:935 _849 ] [935]))) "CLDRAD.f":683 149 {*extendsidi2_rex64}
     (nil))
(insn 3530 3529 3531 271 (parallel [
            (set (reg:DI 1 dx [orig:937 _851 ] [937])
                (plus:DI (reg:DI 0 ax [orig:936 _850 ] [936])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":683 222 {*adddi_1}
     (nil))
(insn 3531 3530 3532 271 (set (reg:DI 0 ax [2080])
        (reg:DI 1 dx [orig:937 _851 ] [937])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3532 3531 3534 271 (parallel [
            (set (reg:DI 0 ax [2081])
                (ashift:DI (reg:DI 0 ax [2080])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":683 551 {*ashldi3_1}
     (nil))
(insn 3534 3532 3535 271 (parallel [
            (set (reg:DI 0 ax [2080])
                (minus:DI (reg:DI 0 ax [2080])
                    (reg:DI 1 dx [orig:937 _851 ] [937])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":683 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:937 _851 ] [937])
            (const_int 15 [0xf]))
        (nil)))
(insn 3535 3534 3538 271 (parallel [
            (set (reg:DI 0 ax [2082])
                (ashift:DI (reg:DI 0 ax [2080])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":683 551 {*ashldi3_1}
     (nil))
(insn 3538 3535 3539 271 (parallel [
            (set (reg:DI 0 ax [2083])
                (plus:DI (reg:DI 0 ax [orig:938 _852 ] [938])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":683 222 {*adddi_1}
     (nil))
(insn 3539 3538 3540 271 (parallel [
            (set (reg:DI 0 ax [2084])
                (ashift:DI (reg:DI 0 ax [2083])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":683 551 {*ashldi3_1}
     (nil))
(insn 3540 3539 3541 271 (parallel [
            (set (reg/f:DI 1 dx [orig:939 _853 ] [939])
                (plus:DI (reg:DI 0 ax [2084])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":683 222 {*adddi_1}
     (nil))
(insn 3541 3540 3542 271 (set (reg:DI 4 si [2085])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3542 3541 3543 271 (set (reg:DI 2 cx [2086])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3543 3542 3544 271 (set (reg:DI 0 ax [2087])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3544 3543 3545 271 (set (reg:DI 38 r9)
        (reg:DI 4 si [2085])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3545 3544 3546 271 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2086])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3546 3545 3548 271 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2087])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3548 3546 3549 271 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 536 [0x218])))) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3549 3548 3550 271 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3550 3549 3551 271 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":683 88 {*movqi_internal}
     (nil))
(call_insn 3551 3550 3552 271 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":683 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       272 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 272, loop depth 0, maybe hot
;;  prev block 271, next block 273, flags: (RTL, MODIFIED)
;;  pred:       256
;;              271 (FALLTHRU)
;; bb 272 artificial_defs: { }
;; bb 272 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 940
(code_label 3552 3551 3553 272 166 (nil) [1 uses])
(note 3553 3552 3554 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
(insn 3554 3553 3555 272 (set (reg:SI 0 ax [orig:940 _854 ] [940])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 636 [0x27c]))) [2 rqstfld.iget+620 S4 A32])) "CLDRAD.f":687 86 {*movsi_internal}
     (nil))
(insn 3555 3554 3556 272 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:940 _854 ] [940])
            (const_int 0 [0]))) "CLDRAD.f":687 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3556 3555 3557 272 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3707)
            (pc))) "CLDRAD.f":687 682 {*jcc}
     (nil)
 -> 3707)
;;  succ:       273 (FALLTHRU)
;;              283
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 273, loop depth 0, maybe hot
;;  prev block 272, next block 274, flags: (RTL, MODIFIED)
;;  pred:       272 (FALLTHRU)
;; bb 273 artificial_defs: { }
;; bb 273 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1183 1184
(note 3557 3556 3558 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
(insn 3558 3557 3559 273 (set (reg:SI 1 dx [orig:1183 _1561 ] [1183])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":688 86 {*movsi_internal}
     (nil))
(insn 3559 3558 3560 273 (set (reg:SI 0 ax [orig:1184 _1562 ] [1184])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":688 86 {*movsi_internal}
     (nil))
(insn 3560 3559 3659 273 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1183 _1561 ] [1183])) "CLDRAD.f":688 86 {*movsi_internal}
     (nil))
;;  succ:       274 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184

;; basic block 274, loop depth 0, maybe hot
;;  prev block 273, next block 275, flags: (RTL, MODIFIED)
;;  pred:       273 (FALLTHRU)
;;              281 [always] 
;; bb 274 artificial_defs: { }
;; bb 274 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184
;; lr  def 	 17 [flags] 1185 2088
(code_label 3659 3560 3561 274 184 (nil) [1 uses])
(note 3561 3659 3562 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
(insn 3562 3561 3563 274 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1184 _1562 ] [1184]))) "CLDRAD.f":688 11 {*cmpsi_1}
     (nil))
(insn 3563 3562 3564 274 (set (reg:QI 1 dx [2088])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":688 678 {*setcc_qi}
     (nil))
(insn 3564 3563 3565 274 (set (reg:SI 1 dx [orig:1185 _1564 ] [1185])
        (zero_extend:SI (reg:QI 1 dx [2088]))) "CLDRAD.f":688 140 {*zero_extendqisi2}
     (nil))
(insn 3565 3564 3566 274 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1185 _1564 ] [1185])
            (const_int 0 [0]))) "CLDRAD.f":688 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3566 3565 3567 274 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4421)
            (pc))) "CLDRAD.f":688 682 {*jcc}
     (nil)
 -> 4421)
;;  succ:       346
;;              275 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184

;; basic block 275, loop depth 0, maybe hot
;;  prev block 274, next block 276, flags: (RTL, MODIFIED)
;;  pred:       274 (FALLTHRU)
;; bb 275 artificial_defs: { }
;; bb 275 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3567 3566 3568 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
(insn 3568 3567 3653 275 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":689 86 {*movsi_internal}
     (nil))
;;  succ:       276 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184

;; basic block 276, loop depth 0, maybe hot
;;  prev block 275, next block 277, flags: (RTL, MODIFIED)
;;  pred:       275 (FALLTHRU)
;;              280 [always] 
;; bb 276 artificial_defs: { }
;; bb 276 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1186 2089
(code_label 3653 3568 3569 276 183 (nil) [1 uses])
(note 3569 3653 3570 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
(insn 3570 3569 3571 276 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":689 11 {*cmpsi_1}
     (nil))
(insn 3571 3570 3572 276 (set (reg:QI 1 dx [2089])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":689 678 {*setcc_qi}
     (nil))
(insn 3572 3571 3573 276 (set (reg:SI 1 dx [orig:1186 _1566 ] [1186])
        (zero_extend:SI (reg:QI 1 dx [2089]))) "CLDRAD.f":689 140 {*zero_extendqisi2}
     (nil))
(insn 3573 3572 3574 276 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1186 _1566 ] [1186])
            (const_int 0 [0]))) "CLDRAD.f":689 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3574 3573 3575 276 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4424)
            (pc))) "CLDRAD.f":689 682 {*jcc}
     (nil)
 -> 4424)
;;  succ:       347
;;              277 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184

;; basic block 277, loop depth 0, maybe hot
;;  prev block 276, next block 278, flags: (RTL, MODIFIED)
;;  pred:       276 (FALLTHRU)
;; bb 277 artificial_defs: { }
;; bb 277 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 941 942 943 944 945 946 2090 2091 2092 2093
(note 3575 3574 3576 277 [bb 277] NOTE_INSN_BASIC_BLOCK)
(insn 3576 3575 3577 277 (set (reg:SI 1 dx [2090])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":690 86 {*movsi_internal}
     (nil))
(insn 3577 3576 3578 277 (set (reg:DI 1 dx [orig:941 _855 ] [941])
        (sign_extend:DI (reg:SI 1 dx [2090]))) "CLDRAD.f":690 149 {*extendsidi2_rex64}
     (nil))
(insn 3578 3577 3579 277 (parallel [
            (set (reg:DI 2 cx [orig:942 _856 ] [942])
                (mult:DI (reg:DI 1 dx [orig:941 _855 ] [941])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":690 349 {*muldi3_1}
     (nil))
(insn 3579 3578 3580 277 (set (reg:SI 1 dx [2091])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":690 86 {*movsi_internal}
     (nil))
(insn 3580 3579 3581 277 (set (reg:DI 1 dx [orig:943 _857 ] [943])
        (sign_extend:DI (reg:SI 1 dx [2091]))) "CLDRAD.f":690 149 {*extendsidi2_rex64}
     (nil))
(insn 3581 3580 3582 277 (parallel [
            (set (reg:DI 1 dx [orig:944 _858 ] [944])
                (plus:DI (reg:DI 1 dx [orig:943 _857 ] [943])
                    (reg:DI 2 cx [orig:942 _856 ] [942])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":690 222 {*adddi_1}
     (nil))
(insn 3582 3581 3583 277 (parallel [
            (set (reg:DI 2 cx [orig:945 _859 ] [945])
                (plus:DI (reg:DI 1 dx [orig:944 _858 ] [944])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":690 222 {*adddi_1}
     (nil))
(insn 3583 3582 3584 277 (set (reg/f:DI 1 dx [2092])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":690 85 {*movdi_internal}
     (nil))
(insn 3584 3583 3585 277 (parallel [
            (set (reg:DI 2 cx [2093])
                (plus:DI (reg:DI 2 cx [orig:945 _859 ] [945])
                    (const_int 504587 [0x7b30b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":690 222 {*adddi_1}
     (nil))
(insn 3585 3584 3586 277 (set (reg:SF 21 xmm0 [orig:946 _860 ] [946])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2093])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2092])) [1 phys.czmean S4 A32])) "CLDRAD.f":690 131 {*movsf_internal}
     (nil))
(insn 3586 3585 3587 277 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:946 _860 ] [946])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32]))) "CLDRAD.f":690 53 {*cmpisf}
     (nil))
(jump_insn 3587 3586 3591 277 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4285)
            (pc))) "CLDRAD.f":690 682 {*jcc}
     (nil)
 -> 4285)
;;  succ:       278 (FALLTHRU)
;;              279
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184

;; basic block 278, loop depth 0, maybe hot
;;  prev block 277, next block 279, flags: (RTL, MODIFIED)
;;  pred:       277 (FALLTHRU)
;; bb 278 artificial_defs: { }
;; bb 278 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 947 948 949 950 951 952 953 954 955 956 957 958 2094 2095 2096 2097 2098 2099 2100 2101 2102
(note 3591 3587 3592 278 [bb 278] NOTE_INSN_BASIC_BLOCK)
(insn 3592 3591 3593 278 (set (reg:SI 1 dx [2094])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":691 86 {*movsi_internal}
     (nil))
(insn 3593 3592 3594 278 (set (reg:DI 1 dx [orig:947 _861 ] [947])
        (sign_extend:DI (reg:SI 1 dx [2094]))) "CLDRAD.f":691 149 {*extendsidi2_rex64}
     (nil))
(insn 3594 3593 3595 278 (parallel [
            (set (reg:DI 2 cx [orig:948 _862 ] [948])
                (mult:DI (reg:DI 1 dx [orig:947 _861 ] [947])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 349 {*muldi3_1}
     (nil))
(insn 3595 3594 3596 278 (set (reg:SI 1 dx [2095])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":691 86 {*movsi_internal}
     (nil))
(insn 3596 3595 3597 278 (set (reg:DI 1 dx [orig:949 _863 ] [949])
        (sign_extend:DI (reg:SI 1 dx [2095]))) "CLDRAD.f":691 149 {*extendsidi2_rex64}
     (nil))
(insn 3597 3596 3598 278 (parallel [
            (set (reg:DI 1 dx [orig:950 _864 ] [950])
                (plus:DI (reg:DI 1 dx [orig:949 _863 ] [949])
                    (reg:DI 2 cx [orig:948 _862 ] [948])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 222 {*adddi_1}
     (nil))
(insn 3598 3597 3599 278 (parallel [
            (set (reg:DI 2 cx [orig:951 _865 ] [951])
                (plus:DI (reg:DI 1 dx [orig:950 _864 ] [950])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 222 {*adddi_1}
     (nil))
(insn 3599 3598 3600 278 (set (reg/f:DI 1 dx [2096])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":691 85 {*movdi_internal}
     (nil))
(insn 3600 3599 3601 278 (parallel [
            (set (reg:DI 2 cx [2097])
                (plus:DI (reg:DI 2 cx [orig:951 _865 ] [951])
                    (const_int 178646 [0x2b9d6])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 222 {*adddi_1}
     (nil))
(insn 3601 3600 3602 278 (set (reg:SF 21 xmm0 [orig:952 _866 ] [952])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2097])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2096])) [1 phys.czen S4 A32])) "CLDRAD.f":691 131 {*movsf_internal}
     (nil))
(insn 3602 3601 3603 278 (set (reg:SI 1 dx [2098])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":691 86 {*movsi_internal}
     (nil))
(insn 3603 3602 3604 278 (set (reg:DI 1 dx [orig:953 _867 ] [953])
        (sign_extend:DI (reg:SI 1 dx [2098]))) "CLDRAD.f":691 149 {*extendsidi2_rex64}
     (nil))
(insn 3604 3603 3605 278 (parallel [
            (set (reg:DI 2 cx [orig:954 _868 ] [954])
                (mult:DI (reg:DI 1 dx [orig:953 _867 ] [953])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 349 {*muldi3_1}
     (nil))
(insn 3605 3604 3606 278 (set (reg:SI 1 dx [2099])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":691 86 {*movsi_internal}
     (nil))
(insn 3606 3605 3607 278 (set (reg:DI 1 dx [orig:955 _869 ] [955])
        (sign_extend:DI (reg:SI 1 dx [2099]))) "CLDRAD.f":691 149 {*extendsidi2_rex64}
     (nil))
(insn 3607 3606 3608 278 (parallel [
            (set (reg:DI 1 dx [orig:956 _870 ] [956])
                (plus:DI (reg:DI 1 dx [orig:955 _869 ] [955])
                    (reg:DI 2 cx [orig:954 _868 ] [954])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 222 {*adddi_1}
     (nil))
(insn 3608 3607 3609 278 (parallel [
            (set (reg:DI 2 cx [orig:957 _871 ] [957])
                (plus:DI (reg:DI 1 dx [orig:956 _870 ] [956])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 222 {*adddi_1}
     (nil))
(insn 3609 3608 3610 278 (set (reg/f:DI 1 dx [2100])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":691 85 {*movdi_internal}
     (nil))
(insn 3610 3609 3611 278 (parallel [
            (set (reg:DI 2 cx [2101])
                (plus:DI (reg:DI 2 cx [orig:957 _871 ] [957])
                    (const_int 504587 [0x7b30b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 222 {*adddi_1}
     (nil))
(insn 3611 3610 3612 278 (set (reg:SF 22 xmm1 [orig:958 _872 ] [958])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2101])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2100])) [1 phys.czmean S4 A32])) "CLDRAD.f":691 131 {*movsf_internal}
     (nil))
(insn 3612 3611 3613 278 (set (reg:SF 21 xmm0 [2102])
        (div:SF (reg:SF 21 xmm0 [orig:952 _866 ] [952])
            (reg:SF 22 xmm1 [orig:958 _872 ] [958]))) "CLDRAD.f":691 841 {*fop_sf_1}
     (nil))
(insn 3613 3612 4286 278 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 factrs+0 S4 A32])
        (reg:SF 21 xmm0 [2102])) "CLDRAD.f":691 131 {*movsf_internal}
     (nil))
(jump_insn 4286 3613 4287 278 (set (pc)
        (label_ref 3620)) 683 {jump}
     (nil)
 -> 3620)
;;  succ:       280 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184

(barrier 4287 4286 4285)
;; basic block 279, loop depth 0, maybe hot
;;  prev block 278, next block 280, flags: (RTL, MODIFIED)
;;  pred:       277
;; bb 279 artificial_defs: { }
;; bb 279 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2103
(code_label 4285 4287 3617 279 227 (nil) [1 uses])
(note 3617 4285 3618 279 [bb 279] NOTE_INSN_BASIC_BLOCK)
(insn 3618 3617 3619 279 (set (reg:SF 21 xmm0 [2103])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":693 131 {*movsf_internal}
     (nil))
(insn 3619 3618 3620 279 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 factrs+0 S4 A32])
        (reg:SF 21 xmm0 [2103])) "CLDRAD.f":693 131 {*movsf_internal}
     (nil))
;;  succ:       280 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184

;; basic block 280, loop depth 0, maybe hot
;;  prev block 279, next block 347, flags: (RTL, MODIFIED)
;;  pred:       279 (FALLTHRU)
;;              278 [always] 
;; bb 280 artificial_defs: { }
;; bb 280 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 2104 2105 2106 2107 2108 2109 2110 2111 2112 2113
(code_label 3620 3619 3621 280 182 (nil) [1 uses])
(note 3621 3620 3622 280 [bb 280] NOTE_INSN_BASIC_BLOCK)
(insn 3622 3621 3623 280 (set (reg:SI 1 dx [2104])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":695 86 {*movsi_internal}
     (nil))
(insn 3623 3622 3624 280 (set (reg:DI 1 dx [orig:959 _873 ] [959])
        (sign_extend:DI (reg:SI 1 dx [2104]))) "CLDRAD.f":695 149 {*extendsidi2_rex64}
     (nil))
(insn 3624 3623 3625 280 (parallel [
            (set (reg:DI 2 cx [orig:960 _874 ] [960])
                (mult:DI (reg:DI 1 dx [orig:959 _873 ] [959])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 349 {*muldi3_1}
     (nil))
(insn 3625 3624 3626 280 (set (reg:SI 1 dx [2105])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":695 86 {*movsi_internal}
     (nil))
(insn 3626 3625 3627 280 (set (reg:DI 1 dx [orig:961 _875 ] [961])
        (sign_extend:DI (reg:SI 1 dx [2105]))) "CLDRAD.f":695 149 {*extendsidi2_rex64}
     (nil))
(insn 3627 3626 3628 280 (parallel [
            (set (reg:DI 1 dx [orig:962 _876 ] [962])
                (plus:DI (reg:DI 1 dx [orig:961 _875 ] [961])
                    (reg:DI 2 cx [orig:960 _874 ] [960])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 222 {*adddi_1}
     (nil))
(insn 3628 3627 3629 280 (parallel [
            (set (reg:DI 2 cx [orig:963 _877 ] [963])
                (plus:DI (reg:DI 1 dx [orig:962 _876 ] [962])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 222 {*adddi_1}
     (nil))
(insn 3629 3628 3630 280 (set (reg/f:DI 1 dx [2106])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f20392c13f0 masks>)) "CLDRAD.f":695 85 {*movdi_internal}
     (nil))
(insn 3630 3629 3631 280 (set (reg:SF 22 xmm1 [orig:964 _878 ] [964])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:963 _877 ] [963])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2106])) [1 masks.hbm2 S4 A32])) "CLDRAD.f":695 131 {*movsf_internal}
     (nil))
(insn 3631 3630 3632 280 (set (reg:SI 1 dx [2107])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":695 86 {*movsi_internal}
     (nil))
(insn 3632 3631 3633 280 (set (reg:DI 1 dx [orig:965 _879 ] [965])
        (sign_extend:DI (reg:SI 1 dx [2107]))) "CLDRAD.f":695 149 {*extendsidi2_rex64}
     (nil))
(insn 3633 3632 3634 280 (parallel [
            (set (reg:DI 2 cx [orig:966 _880 ] [966])
                (mult:DI (reg:DI 1 dx [orig:965 _879 ] [965])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 349 {*muldi3_1}
     (nil))
(insn 3634 3633 3635 280 (set (reg:SI 1 dx [2108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":695 86 {*movsi_internal}
     (nil))
(insn 3635 3634 3636 280 (set (reg:DI 1 dx [orig:967 _881 ] [967])
        (sign_extend:DI (reg:SI 1 dx [2108]))) "CLDRAD.f":695 149 {*extendsidi2_rex64}
     (nil))
(insn 3636 3635 3637 280 (parallel [
            (set (reg:DI 1 dx [orig:968 _882 ] [968])
                (plus:DI (reg:DI 1 dx [orig:967 _881 ] [967])
                    (reg:DI 2 cx [orig:966 _880 ] [966])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 222 {*adddi_1}
     (nil))
(insn 3637 3636 3638 280 (parallel [
            (set (reg:DI 2 cx [orig:969 _883 ] [969])
                (plus:DI (reg:DI 1 dx [orig:968 _882 ] [968])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 222 {*adddi_1}
     (nil))
(insn 3638 3637 3639 280 (set (reg/f:DI 1 dx [2109])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":695 85 {*movdi_internal}
     (nil))
(insn 3639 3638 3640 280 (parallel [
            (set (reg:DI 2 cx [2110])
                (plus:DI (reg:DI 2 cx [orig:969 _883 ] [969])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 222 {*adddi_1}
     (nil))
(insn 3640 3639 3641 280 (set (reg:SF 21 xmm0 [orig:970 _884 ] [970])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2110])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2109])) [1 acmrds.rswin S4 A32])) "CLDRAD.f":695 131 {*movsf_internal}
     (nil))
(insn 3641 3640 3642 280 (set (reg:SF 21 xmm0 [orig:971 _885 ] [971])
        (mult:SF (reg:SF 21 xmm0 [orig:970 _884 ] [970])
            (reg:SF 22 xmm1 [orig:964 _878 ] [964]))) "CLDRAD.f":695 838 {*fop_sf_comm}
     (nil))
(insn 3642 3641 3643 280 (set (reg:SI 1 dx [2111])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":695 86 {*movsi_internal}
     (nil))
(insn 3643 3642 3644 280 (set (reg:DI 1 dx [orig:972 _886 ] [972])
        (sign_extend:DI (reg:SI 1 dx [2111]))) "CLDRAD.f":695 149 {*extendsidi2_rex64}
     (nil))
(insn 3644 3643 3645 280 (parallel [
            (set (reg:DI 2 cx [orig:973 _887 ] [973])
                (mult:DI (reg:DI 1 dx [orig:972 _886 ] [972])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 349 {*muldi3_1}
     (nil))
(insn 3645 3644 3646 280 (set (reg:SI 1 dx [2112])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":695 86 {*movsi_internal}
     (nil))
(insn 3646 3645 3647 280 (set (reg:DI 1 dx [orig:974 _888 ] [974])
        (sign_extend:DI (reg:SI 1 dx [2112]))) "CLDRAD.f":695 149 {*extendsidi2_rex64}
     (nil))
(insn 3647 3646 3648 280 (parallel [
            (set (reg:DI 1 dx [orig:975 _889 ] [975])
                (plus:DI (reg:DI 1 dx [orig:974 _888 ] [974])
                    (reg:DI 2 cx [orig:973 _887 ] [973])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 222 {*adddi_1}
     (nil))
(insn 3648 3647 3649 280 (parallel [
            (set (reg:DI 2 cx [orig:976 _890 ] [976])
                (plus:DI (reg:DI 1 dx [orig:975 _889 ] [975])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 222 {*adddi_1}
     (nil))
(insn 3649 3648 3650 280 (set (reg:SF 21 xmm0 [orig:977 _891 ] [977])
        (mult:SF (reg:SF 21 xmm0 [orig:971 _885 ] [971])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [1 factrs+0 S4 A32]))) "CLDRAD.f":695 838 {*fop_sf_comm}
     (nil))
(insn 3650 3649 3651 280 (set (reg/f:DI 1 dx [2113])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":695 85 {*movdi_internal}
     (nil))
(insn 3651 3650 3652 280 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:976 _890 ] [976])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2113])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:977 _891 ] [977])) "CLDRAD.f":695 131 {*movsf_internal}
     (nil))
(insn 3652 3651 4288 280 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":689 221 {*addsi_1}
     (nil))
(jump_insn 4288 3652 4289 280 (set (pc)
        (label_ref 3653)) "CLDRAD.f":689 683 {jump}
     (nil)
 -> 3653)
;;  succ:       276 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184

(barrier 4289 4288 4424)
;; basic block 347, loop depth 0, maybe hot
;;  prev block 280, next block 281, flags: (RTL, MODIFIED)
;;  pred:       276
;; bb 347 artificial_defs: { }
;; bb 347 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4424 4289 4423 347 269 (nil) [1 uses])
(note 4423 4424 4425 347 [bb 347] NOTE_INSN_BASIC_BLOCK)
(insn 4425 4423 3656 347 (const_int 0 [0]) "CLDRAD.f":695 718 {nop}
     (nil))
;;  succ:       281 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184

;; basic block 281, loop depth 0, maybe hot
;;  prev block 347, next block 346, flags: (RTL, MODIFIED)
;;  pred:       347 [always]  (FALLTHRU)
;; bb 281 artificial_defs: { }
;; bb 281 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3656 4425 3657 281 179 (nil) [0 uses])
(note 3657 3656 3658 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
(insn 3658 3657 4290 281 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":688 221 {*addsi_1}
     (nil))
(jump_insn 4290 3658 4291 281 (set (pc)
        (label_ref 3659)) "CLDRAD.f":688 683 {jump}
     (nil)
 -> 3659)
;;  succ:       274 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1184

(barrier 4291 4290 4421)
;; basic block 346, loop depth 0, maybe hot
;;  prev block 281, next block 282, flags: (RTL, MODIFIED)
;;  pred:       274
;; bb 346 artificial_defs: { }
;; bb 346 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4421 4291 4420 346 268 (nil) [1 uses])
(note 4420 4421 4422 346 [bb 346] NOTE_INSN_BASIC_BLOCK)
(insn 4422 4420 3662 346 (const_int 0 [0]) "CLDRAD.f":689 718 {nop}
     (nil))
;;  succ:       282 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 282, loop depth 0, maybe hot
;;  prev block 346, next block 283, flags: (RTL, MODIFIED)
;;  pred:       346 [always]  (FALLTHRU)
;; bb 282 artificial_defs: { }
;; bb 282 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 978 979 980 981 982 2114 2115 2116 2117 2118 2119 2120 2121 2122 2123 2124 2125 2126
(code_label 3662 4422 3663 282 178 (nil) [0 uses])
(note 3663 3662 3664 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
(insn 3664 3663 3665 282 (set (reg:DI 1 dx [2114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3665 3664 3666 282 (set (reg:DI 0 ax [2115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3666 3665 3667 282 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":699 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3667 3666 3668 282 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":699 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3668 3667 3669 282 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2114])) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3669 3668 3670 282 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2115])) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3670 3669 3671 282 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3671 3670 3672 282 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3672 3671 3673 282 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3673 3672 3674 282 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f2038fb4e10 *.LC32>)) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3674 3673 3675 282 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":699 88 {*movqi_internal}
     (nil))
(call_insn 3675 3674 3676 282 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":699 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3676 3675 3677 282 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":699 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3677 3676 3678 282 (set (reg/f:DI 1 dx [2116])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":700 85 {*movdi_internal}
     (nil))
(insn 3678 3677 3679 282 (set (reg:DI 0 ax [2117])
        (const_int 0 [0])) "CLDRAD.f":700 85 {*movdi_internal}
     (nil))
(insn 3679 3678 4509 282 (set (reg:DI 2 cx [2118])
        (const_int 12 [0xc])) "CLDRAD.f":700 85 {*movdi_internal}
     (nil))
(insn 4509 3679 3680 282 (set (reg/f:DI 5 di [2116])
        (reg/f:DI 1 dx [2116])) "CLDRAD.f":700 85 {*movdi_internal}
     (nil))
(insn 3680 4509 4510 282 (parallel [
            (set (reg:DI 2 cx [2118])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2116])
                (plus:DI (ashift:DI (reg:DI 2 cx [2118])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2116])))
            (set (mem/c:BLK (reg/f:DI 5 di [2116]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2117]))
            (use (reg:DI 2 cx [2118]))
        ]) "CLDRAD.f":700 984 {*rep_stosdi_rex64}
     (nil))
(insn 4510 3680 3681 282 (set (reg/f:DI 1 dx [2116])
        (reg/f:DI 5 di [2116])) "CLDRAD.f":700 85 {*movdi_internal}
     (nil))
(insn 3681 4510 3682 282 (set (mem/c:SI (reg/f:DI 1 dx [2116]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2117])) "CLDRAD.f":700 86 {*movsi_internal}
     (nil))
(insn 3682 3681 3683 282 (parallel [
            (set (reg/f:DI 1 dx [2116])
                (plus:DI (reg/f:DI 1 dx [2116])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":700 222 {*adddi_1}
     (nil))
(insn 3683 3682 3684 282 (set (reg:SI 0 ax [orig:978 _892 ] [978])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 636 [0x27c]))) [2 rqstfld.iget+620 S4 A32])) "CLDRAD.f":702 86 {*movsi_internal}
     (nil))
(insn 3684 3683 3685 282 (set (reg:DI 0 ax [orig:979 _893 ] [979])
        (sign_extend:DI (reg:SI 0 ax [orig:978 _892 ] [978]))) "CLDRAD.f":702 149 {*extendsidi2_rex64}
     (nil))
(insn 3685 3684 3686 282 (parallel [
            (set (reg:DI 1 dx [orig:980 _894 ] [980])
                (plus:DI (reg:DI 0 ax [orig:979 _893 ] [979])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":702 222 {*adddi_1}
     (nil))
(insn 3686 3685 3687 282 (set (reg:DI 0 ax [2119])
        (reg:DI 1 dx [orig:980 _894 ] [980])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3687 3686 3689 282 (parallel [
            (set (reg:DI 0 ax [2120])
                (ashift:DI (reg:DI 0 ax [2119])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":702 551 {*ashldi3_1}
     (nil))
(insn 3689 3687 3690 282 (parallel [
            (set (reg:DI 0 ax [2119])
                (minus:DI (reg:DI 0 ax [2119])
                    (reg:DI 1 dx [orig:980 _894 ] [980])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":702 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:980 _894 ] [980])
            (const_int 15 [0xf]))
        (nil)))
(insn 3690 3689 3693 282 (parallel [
            (set (reg:DI 0 ax [2121])
                (ashift:DI (reg:DI 0 ax [2119])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":702 551 {*ashldi3_1}
     (nil))
(insn 3693 3690 3694 282 (parallel [
            (set (reg:DI 0 ax [2122])
                (plus:DI (reg:DI 0 ax [orig:981 _895 ] [981])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":702 222 {*adddi_1}
     (nil))
(insn 3694 3693 3695 282 (parallel [
            (set (reg:DI 0 ax [2123])
                (ashift:DI (reg:DI 0 ax [2122])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":702 551 {*ashldi3_1}
     (nil))
(insn 3695 3694 3696 282 (parallel [
            (set (reg/f:DI 1 dx [orig:982 _896 ] [982])
                (plus:DI (reg:DI 0 ax [2123])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":702 222 {*adddi_1}
     (nil))
(insn 3696 3695 3697 282 (set (reg:DI 4 si [2124])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3697 3696 3698 282 (set (reg:DI 2 cx [2125])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3698 3697 3699 282 (set (reg:DI 0 ax [2126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3699 3698 3700 282 (set (reg:DI 38 r9)
        (reg:DI 4 si [2124])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3700 3699 3701 282 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2125])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3701 3700 3703 282 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2126])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3703 3701 3704 282 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 636 [0x27c])))) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3704 3703 3705 282 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3705 3704 3706 282 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":702 88 {*movqi_internal}
     (nil))
(call_insn 3706 3705 3707 282 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":702 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       283 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 283, loop depth 0, maybe hot
;;  prev block 282, next block 284, flags: (RTL, MODIFIED)
;;  pred:       272
;;              282 (FALLTHRU)
;; bb 283 artificial_defs: { }
;; bb 283 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 983
(code_label 3707 3706 3708 283 177 (nil) [1 uses])
(note 3708 3707 3709 283 [bb 283] NOTE_INSN_BASIC_BLOCK)
(insn 3709 3708 3710 283 (set (reg:SI 0 ax [orig:983 _897 ] [983])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 640 [0x280]))) [2 rqstfld.iget+624 S4 A128])) "CLDRAD.f":706 86 {*movsi_internal}
     (nil))
(insn 3710 3709 3711 283 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:983 _897 ] [983])
            (const_int 0 [0]))) "CLDRAD.f":706 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3711 3710 3712 283 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3885)
            (pc))) "CLDRAD.f":706 682 {*jcc}
     (nil)
 -> 3885)
;;  succ:       284 (FALLTHRU)
;;              294
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 284, loop depth 0, maybe hot
;;  prev block 283, next block 285, flags: (RTL, MODIFIED)
;;  pred:       283 (FALLTHRU)
;; bb 284 artificial_defs: { }
;; bb 284 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1187 1188
(note 3712 3711 3713 284 [bb 284] NOTE_INSN_BASIC_BLOCK)
(insn 3713 3712 3714 284 (set (reg:SI 1 dx [orig:1187 _1575 ] [1187])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":707 86 {*movsi_internal}
     (nil))
(insn 3714 3713 3715 284 (set (reg:SI 0 ax [orig:1188 _1576 ] [1188])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":707 86 {*movsi_internal}
     (nil))
(insn 3715 3714 3837 284 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1187 _1575 ] [1187])) "CLDRAD.f":707 86 {*movsi_internal}
     (nil))
;;  succ:       285 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188

;; basic block 285, loop depth 0, maybe hot
;;  prev block 284, next block 286, flags: (RTL, MODIFIED)
;;  pred:       284 (FALLTHRU)
;;              292 [always] 
;; bb 285 artificial_defs: { }
;; bb 285 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188
;; lr  def 	 17 [flags] 1189 2127
(code_label 3837 3715 3716 285 192 (nil) [1 uses])
(note 3716 3837 3717 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
(insn 3717 3716 3718 285 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1188 _1576 ] [1188]))) "CLDRAD.f":707 11 {*cmpsi_1}
     (nil))
(insn 3718 3717 3719 285 (set (reg:QI 1 dx [2127])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":707 678 {*setcc_qi}
     (nil))
(insn 3719 3718 3720 285 (set (reg:SI 1 dx [orig:1189 _1578 ] [1189])
        (zero_extend:SI (reg:QI 1 dx [2127]))) "CLDRAD.f":707 140 {*zero_extendqisi2}
     (nil))
(insn 3720 3719 3721 285 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1189 _1578 ] [1189])
            (const_int 0 [0]))) "CLDRAD.f":707 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3721 3720 3722 285 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4427)
            (pc))) "CLDRAD.f":707 682 {*jcc}
     (nil)
 -> 4427)
;;  succ:       348
;;              286 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188

;; basic block 286, loop depth 0, maybe hot
;;  prev block 285, next block 287, flags: (RTL, MODIFIED)
;;  pred:       285 (FALLTHRU)
;; bb 286 artificial_defs: { }
;; bb 286 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3722 3721 3723 286 [bb 286] NOTE_INSN_BASIC_BLOCK)
(insn 3723 3722 3831 286 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":708 86 {*movsi_internal}
     (nil))
;;  succ:       287 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188

;; basic block 287, loop depth 0, maybe hot
;;  prev block 286, next block 288, flags: (RTL, MODIFIED)
;;  pred:       286 (FALLTHRU)
;;              291 [always] 
;; bb 287 artificial_defs: { }
;; bb 287 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1190 2128
(code_label 3831 3723 3724 287 191 (nil) [1 uses])
(note 3724 3831 3725 287 [bb 287] NOTE_INSN_BASIC_BLOCK)
(insn 3725 3724 3726 287 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":708 11 {*cmpsi_1}
     (nil))
(insn 3726 3725 3727 287 (set (reg:QI 1 dx [2128])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":708 678 {*setcc_qi}
     (nil))
(insn 3727 3726 3728 287 (set (reg:SI 1 dx [orig:1190 _1580 ] [1190])
        (zero_extend:SI (reg:QI 1 dx [2128]))) "CLDRAD.f":708 140 {*zero_extendqisi2}
     (nil))
(insn 3728 3727 3729 287 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1190 _1580 ] [1190])
            (const_int 0 [0]))) "CLDRAD.f":708 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3729 3728 3730 287 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4430)
            (pc))) "CLDRAD.f":708 682 {*jcc}
     (nil)
 -> 4430)
;;  succ:       349
;;              288 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188

;; basic block 288, loop depth 0, maybe hot
;;  prev block 287, next block 289, flags: (RTL, MODIFIED)
;;  pred:       287 (FALLTHRU)
;; bb 288 artificial_defs: { }
;; bb 288 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 984 985 986 987 988 989 2129 2130 2131 2132 2133
(note 3730 3729 3731 288 [bb 288] NOTE_INSN_BASIC_BLOCK)
(insn 3731 3730 3732 288 (set (reg:SI 1 dx [2129])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":709 86 {*movsi_internal}
     (nil))
(insn 3732 3731 3733 288 (set (reg:DI 1 dx [orig:984 _898 ] [984])
        (sign_extend:DI (reg:SI 1 dx [2129]))) "CLDRAD.f":709 149 {*extendsidi2_rex64}
     (nil))
(insn 3733 3732 3734 288 (parallel [
            (set (reg:DI 2 cx [orig:985 _899 ] [985])
                (mult:DI (reg:DI 1 dx [orig:984 _898 ] [984])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":709 349 {*muldi3_1}
     (nil))
(insn 3734 3733 3735 288 (set (reg:SI 1 dx [2130])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":709 86 {*movsi_internal}
     (nil))
(insn 3735 3734 3736 288 (set (reg:DI 1 dx [orig:986 _900 ] [986])
        (sign_extend:DI (reg:SI 1 dx [2130]))) "CLDRAD.f":709 149 {*extendsidi2_rex64}
     (nil))
(insn 3736 3735 3737 288 (parallel [
            (set (reg:DI 1 dx [orig:987 _901 ] [987])
                (plus:DI (reg:DI 1 dx [orig:986 _900 ] [986])
                    (reg:DI 2 cx [orig:985 _899 ] [985])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":709 222 {*adddi_1}
     (nil))
(insn 3737 3736 3738 288 (parallel [
            (set (reg:DI 2 cx [orig:988 _902 ] [988])
                (plus:DI (reg:DI 1 dx [orig:987 _901 ] [987])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":709 222 {*adddi_1}
     (nil))
(insn 3738 3737 3739 288 (set (reg/f:DI 1 dx [2131])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":709 85 {*movdi_internal}
     (nil))
(insn 3739 3738 3740 288 (parallel [
            (set (reg:DI 2 cx [2132])
                (plus:DI (reg:DI 2 cx [orig:988 _902 ] [988])
                    (const_int 534218 [0x826ca])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":709 222 {*adddi_1}
     (nil))
(insn 3740 3739 3741 288 (set (reg:SF 21 xmm0 [orig:989 _903 ] [989])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2132])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2131])) [1 phys.sigt4 S4 A32])) "CLDRAD.f":709 131 {*movsf_internal}
     (nil))
(insn 3741 3740 3742 288 (set (reg:SF 22 xmm1 [2133])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":709 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 3742 3741 3743 288 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:989 _903 ] [989])
            (reg:SF 22 xmm1 [2133]))) "CLDRAD.f":709 53 {*cmpisf}
     (nil))
(jump_insn 3743 3742 3747 288 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4292)
            (pc))) "CLDRAD.f":709 682 {*jcc}
     (nil)
 -> 4292)
;;  succ:       289 (FALLTHRU)
;;              290
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188

;; basic block 289, loop depth 0, maybe hot
;;  prev block 288, next block 290, flags: (RTL, MODIFIED)
;;  pred:       288 (FALLTHRU)
;; bb 289 artificial_defs: { }
;; bb 289 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 2134 2135 2136 2137 2138 2139 2140 2141 2142 2143 2144 2145 2146 2147 2148 2149 2150 2151
(note 3747 3743 3748 289 [bb 289] NOTE_INSN_BASIC_BLOCK)
(insn 3748 3747 3749 289 (set (reg:SI 1 dx [2134])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":710 86 {*movsi_internal}
     (nil))
(insn 3749 3748 3750 289 (set (reg:DI 1 dx [orig:990 _904 ] [990])
        (sign_extend:DI (reg:SI 1 dx [2134]))) "CLDRAD.f":710 149 {*extendsidi2_rex64}
     (nil))
(insn 3750 3749 3751 289 (parallel [
            (set (reg:DI 2 cx [orig:991 _905 ] [991])
                (mult:DI (reg:DI 1 dx [orig:990 _904 ] [990])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":710 349 {*muldi3_1}
     (nil))
(insn 3751 3750 3752 289 (set (reg:SI 1 dx [2135])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":710 86 {*movsi_internal}
     (nil))
(insn 3752 3751 3753 289 (set (reg:DI 1 dx [orig:992 _906 ] [992])
        (sign_extend:DI (reg:SI 1 dx [2135]))) "CLDRAD.f":710 149 {*extendsidi2_rex64}
     (nil))
(insn 3753 3752 3754 289 (parallel [
            (set (reg:DI 1 dx [orig:993 _907 ] [993])
                (plus:DI (reg:DI 1 dx [orig:992 _906 ] [992])
                    (reg:DI 2 cx [orig:991 _905 ] [991])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":710 222 {*adddi_1}
     (nil))
(insn 3754 3753 3755 289 (parallel [
            (set (reg:DI 2 cx [orig:994 _908 ] [994])
                (plus:DI (reg:DI 1 dx [orig:993 _907 ] [993])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":710 222 {*adddi_1}
     (nil))
(insn 3755 3754 3756 289 (set (reg/f:DI 1 dx [2136])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f20392b7bd0 loops>)) "CLDRAD.f":710 85 {*movdi_internal}
     (nil))
(insn 3756 3755 3757 289 (parallel [
            (set (reg:DI 2 cx [2137])
                (plus:DI (reg:DI 2 cx [orig:994 _908 ] [994])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":710 222 {*adddi_1}
     (nil))
(insn 3757 3756 3758 289 (set (reg:SI 1 dx [2138])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [2137])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2136])) [2 loops.lmh S4 A32])) "CLDRAD.f":710 86 {*movsi_internal}
     (nil))
(insn 3758 3757 3759 289 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [2 llmh+0 S4 A32])
        (reg:SI 1 dx [2138])) "CLDRAD.f":710 86 {*movsi_internal}
     (nil))
(insn 3759 3758 3760 289 (set (reg:SI 1 dx [2139])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [2 llmh+0 S4 A32])) "CLDRAD.f":711 86 {*movsi_internal}
     (nil))
(insn 3760 3759 3761 289 (set (reg:DI 1 dx [orig:995 _909 ] [995])
        (sign_extend:DI (reg:SI 1 dx [2139]))) "CLDRAD.f":711 149 {*extendsidi2_rex64}
     (nil))
(insn 3761 3760 3762 289 (parallel [
            (set (reg:DI 2 cx [orig:996 _910 ] [996])
                (mult:DI (reg:DI 1 dx [orig:995 _909 ] [995])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":711 349 {*muldi3_1}
     (nil))
(insn 3762 3761 3763 289 (set (reg:SI 1 dx [2140])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":711 86 {*movsi_internal}
     (nil))
(insn 3763 3762 3764 289 (set (reg:DI 1 dx [orig:997 _911 ] [997])
        (sign_extend:DI (reg:SI 1 dx [2140]))) "CLDRAD.f":711 149 {*extendsidi2_rex64}
     (nil))
(insn 3764 3763 3765 289 (parallel [
            (set (reg:DI 1 dx [orig:998 _912 ] [998])
                (mult:DI (reg:DI 1 dx [orig:997 _911 ] [997])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":711 349 {*muldi3_1}
     (nil))
(insn 3765 3764 3766 289 (parallel [
            (set (reg:DI 2 cx [orig:999 _913 ] [999])
                (plus:DI (reg:DI 2 cx [orig:996 _910 ] [996])
                    (reg:DI 1 dx [orig:998 _912 ] [998])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":711 222 {*adddi_1}
     (nil))
(insn 3766 3765 3767 289 (set (reg:SI 1 dx [2141])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":711 86 {*movsi_internal}
     (nil))
(insn 3767 3766 3768 289 (set (reg:DI 1 dx [orig:1000 _914 ] [1000])
        (sign_extend:DI (reg:SI 1 dx [2141]))) "CLDRAD.f":711 149 {*extendsidi2_rex64}
     (nil))
(insn 3768 3767 3769 289 (parallel [
            (set (reg:DI 1 dx [orig:1001 _915 ] [1001])
                (plus:DI (reg:DI 1 dx [orig:1000 _914 ] [1000])
                    (reg:DI 2 cx [orig:999 _913 ] [999])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":711 222 {*adddi_1}
     (nil))
(insn 3769 3768 3770 289 (parallel [
            (set (reg:DI 2 cx [orig:1002 _916 ] [1002])
                (plus:DI (reg:DI 1 dx [orig:1001 _915 ] [1001])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":711 222 {*adddi_1}
     (nil))
(insn 3770 3769 3771 289 (set (reg/f:DI 1 dx [2142])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":711 85 {*movdi_internal}
     (nil))
(insn 3771 3770 3772 289 (parallel [
            (set (reg:DI 2 cx [2143])
                (plus:DI (reg:DI 2 cx [orig:1002 _916 ] [1002])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":711 222 {*adddi_1}
     (nil))
(insn 3772 3771 3773 289 (set (reg:SF 21 xmm0 [2144])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2143])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2142])) [1 vrbls.t S4 A32])) "CLDRAD.f":711 131 {*movsf_internal}
     (nil))
(insn 3773 3772 3774 289 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 tlmh+0 S4 A32])
        (reg:SF 21 xmm0 [2144])) "CLDRAD.f":711 131 {*movsf_internal}
     (nil))
(insn 3774 3773 3775 289 (set (reg:SF 22 xmm1 [2145])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 tlmh+0 S4 A32])) "CLDRAD.f":712 131 {*movsf_internal}
     (nil))
(insn 3775 3774 3776 289 (set (reg:SF 21 xmm0 [2146])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC33") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":712 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.6699999362308517447672784328460693359375e-8 [0x0.f3864fp-24])
        (nil)))
(insn 3776 3775 3777 289 (set (reg:SF 21 xmm0 [orig:1003 _917 ] [1003])
        (mult:SF (reg:SF 21 xmm0 [2146])
            (reg:SF 22 xmm1 [2145]))) "CLDRAD.f":712 838 {*fop_sf_comm}
     (nil))
(insn 3777 3776 3778 289 (set (reg:SF 21 xmm0 [orig:1004 _918 ] [1004])
        (mult:SF (reg:SF 21 xmm0 [orig:1003 _917 ] [1003])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 tlmh+0 S4 A32]))) "CLDRAD.f":712 838 {*fop_sf_comm}
     (nil))
(insn 3778 3777 3779 289 (set (reg:SF 21 xmm0 [orig:1005 _919 ] [1005])
        (mult:SF (reg:SF 21 xmm0 [orig:1004 _918 ] [1004])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 tlmh+0 S4 A32]))) "CLDRAD.f":712 838 {*fop_sf_comm}
     (nil))
(insn 3779 3778 3780 289 (set (reg:SF 21 xmm0 [orig:1006 _920 ] [1006])
        (mult:SF (reg:SF 21 xmm0 [orig:1005 _919 ] [1005])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 tlmh+0 S4 A32]))) "CLDRAD.f":712 838 {*fop_sf_comm}
     (nil))
(insn 3780 3779 3781 289 (set (reg:SI 1 dx [2147])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":712 86 {*movsi_internal}
     (nil))
(insn 3781 3780 3782 289 (set (reg:DI 1 dx [orig:1007 _921 ] [1007])
        (sign_extend:DI (reg:SI 1 dx [2147]))) "CLDRAD.f":712 149 {*extendsidi2_rex64}
     (nil))
(insn 3782 3781 3783 289 (parallel [
            (set (reg:DI 2 cx [orig:1008 _922 ] [1008])
                (mult:DI (reg:DI 1 dx [orig:1007 _921 ] [1007])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":712 349 {*muldi3_1}
     (nil))
(insn 3783 3782 3784 289 (set (reg:SI 1 dx [2148])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":712 86 {*movsi_internal}
     (nil))
(insn 3784 3783 3785 289 (set (reg:DI 1 dx [orig:1009 _923 ] [1009])
        (sign_extend:DI (reg:SI 1 dx [2148]))) "CLDRAD.f":712 149 {*extendsidi2_rex64}
     (nil))
(insn 3785 3784 3786 289 (parallel [
            (set (reg:DI 1 dx [orig:1010 _924 ] [1010])
                (plus:DI (reg:DI 1 dx [orig:1009 _923 ] [1009])
                    (reg:DI 2 cx [orig:1008 _922 ] [1008])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":712 222 {*adddi_1}
     (nil))
(insn 3786 3785 3787 289 (parallel [
            (set (reg:DI 2 cx [orig:1011 _925 ] [1011])
                (plus:DI (reg:DI 1 dx [orig:1010 _924 ] [1010])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":712 222 {*adddi_1}
     (nil))
(insn 3787 3786 3788 289 (set (reg/f:DI 1 dx [2149])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":712 85 {*movdi_internal}
     (nil))
(insn 3788 3787 3789 289 (parallel [
            (set (reg:DI 2 cx [2150])
                (plus:DI (reg:DI 2 cx [orig:1011 _925 ] [1011])
                    (const_int 534218 [0x826ca])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":712 222 {*adddi_1}
     (nil))
(insn 3789 3788 3790 289 (set (reg:SF 22 xmm1 [orig:1012 _926 ] [1012])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2150])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2149])) [1 phys.sigt4 S4 A32])) "CLDRAD.f":712 131 {*movsf_internal}
     (nil))
(insn 3790 3789 3791 289 (set (reg:SF 21 xmm0 [2151])
        (div:SF (reg:SF 21 xmm0 [orig:1006 _920 ] [1006])
            (reg:SF 22 xmm1 [orig:1012 _926 ] [1012]))) "CLDRAD.f":712 841 {*fop_sf_1}
     (nil))
(insn 3791 3790 4293 289 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 factrl+0 S4 A32])
        (reg:SF 21 xmm0 [2151])) "CLDRAD.f":712 131 {*movsf_internal}
     (nil))
(jump_insn 4293 3791 4294 289 (set (pc)
        (label_ref 3798)) 683 {jump}
     (nil)
 -> 3798)
;;  succ:       291 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188

(barrier 4294 4293 4292)
;; basic block 290, loop depth 0, maybe hot
;;  prev block 289, next block 291, flags: (RTL, MODIFIED)
;;  pred:       288
;; bb 290 artificial_defs: { }
;; bb 290 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2152
(code_label 4292 4294 3795 290 228 (nil) [1 uses])
(note 3795 4292 3796 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
(insn 3796 3795 3797 290 (set (reg:SF 21 xmm0 [2152])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":714 131 {*movsf_internal}
     (nil))
(insn 3797 3796 3798 290 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 factrl+0 S4 A32])
        (reg:SF 21 xmm0 [2152])) "CLDRAD.f":714 131 {*movsf_internal}
     (nil))
;;  succ:       291 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188

;; basic block 291, loop depth 0, maybe hot
;;  prev block 290, next block 349, flags: (RTL, MODIFIED)
;;  pred:       290 (FALLTHRU)
;;              289 [always] 
;; bb 291 artificial_defs: { }
;; bb 291 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 2153 2154 2155 2156 2157 2158 2159 2160 2161 2162
(code_label 3798 3797 3799 291 190 (nil) [1 uses])
(note 3799 3798 3800 291 [bb 291] NOTE_INSN_BASIC_BLOCK)
(insn 3800 3799 3801 291 (set (reg:SI 1 dx [2153])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":716 86 {*movsi_internal}
     (nil))
(insn 3801 3800 3802 291 (set (reg:DI 1 dx [orig:1013 _927 ] [1013])
        (sign_extend:DI (reg:SI 1 dx [2153]))) "CLDRAD.f":716 149 {*extendsidi2_rex64}
     (nil))
(insn 3802 3801 3803 291 (parallel [
            (set (reg:DI 2 cx [orig:1014 _928 ] [1014])
                (mult:DI (reg:DI 1 dx [orig:1013 _927 ] [1013])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 349 {*muldi3_1}
     (nil))
(insn 3803 3802 3804 291 (set (reg:SI 1 dx [2154])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":716 86 {*movsi_internal}
     (nil))
(insn 3804 3803 3805 291 (set (reg:DI 1 dx [orig:1015 _929 ] [1015])
        (sign_extend:DI (reg:SI 1 dx [2154]))) "CLDRAD.f":716 149 {*extendsidi2_rex64}
     (nil))
(insn 3805 3804 3806 291 (parallel [
            (set (reg:DI 1 dx [orig:1016 _930 ] [1016])
                (plus:DI (reg:DI 1 dx [orig:1015 _929 ] [1015])
                    (reg:DI 2 cx [orig:1014 _928 ] [1014])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 222 {*adddi_1}
     (nil))
(insn 3806 3805 3807 291 (parallel [
            (set (reg:DI 2 cx [orig:1017 _931 ] [1017])
                (plus:DI (reg:DI 1 dx [orig:1016 _930 ] [1016])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 222 {*adddi_1}
     (nil))
(insn 3807 3806 3808 291 (set (reg/f:DI 1 dx [2155])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f20392c13f0 masks>)) "CLDRAD.f":716 85 {*movdi_internal}
     (nil))
(insn 3808 3807 3809 291 (set (reg:SF 22 xmm1 [orig:1018 _932 ] [1018])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1017 _931 ] [1017])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2155])) [1 masks.hbm2 S4 A32])) "CLDRAD.f":716 131 {*movsf_internal}
     (nil))
(insn 3809 3808 3810 291 (set (reg:SI 1 dx [2156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":716 86 {*movsi_internal}
     (nil))
(insn 3810 3809 3811 291 (set (reg:DI 1 dx [orig:1019 _933 ] [1019])
        (sign_extend:DI (reg:SI 1 dx [2156]))) "CLDRAD.f":716 149 {*extendsidi2_rex64}
     (nil))
(insn 3811 3810 3812 291 (parallel [
            (set (reg:DI 2 cx [orig:1020 _934 ] [1020])
                (mult:DI (reg:DI 1 dx [orig:1019 _933 ] [1019])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 349 {*muldi3_1}
     (nil))
(insn 3812 3811 3813 291 (set (reg:SI 1 dx [2157])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":716 86 {*movsi_internal}
     (nil))
(insn 3813 3812 3814 291 (set (reg:DI 1 dx [orig:1021 _935 ] [1021])
        (sign_extend:DI (reg:SI 1 dx [2157]))) "CLDRAD.f":716 149 {*extendsidi2_rex64}
     (nil))
(insn 3814 3813 3815 291 (parallel [
            (set (reg:DI 1 dx [orig:1022 _936 ] [1022])
                (plus:DI (reg:DI 1 dx [orig:1021 _935 ] [1021])
                    (reg:DI 2 cx [orig:1020 _934 ] [1020])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 222 {*adddi_1}
     (nil))
(insn 3815 3814 3816 291 (parallel [
            (set (reg:DI 2 cx [orig:1023 _937 ] [1023])
                (plus:DI (reg:DI 1 dx [orig:1022 _936 ] [1022])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 222 {*adddi_1}
     (nil))
(insn 3816 3815 3817 291 (set (reg/f:DI 1 dx [2158])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":716 85 {*movdi_internal}
     (nil))
(insn 3817 3816 3818 291 (parallel [
            (set (reg:DI 2 cx [2159])
                (plus:DI (reg:DI 2 cx [orig:1023 _937 ] [1023])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 222 {*adddi_1}
     (nil))
(insn 3818 3817 3819 291 (set (reg:SF 21 xmm0 [orig:1024 _938 ] [1024])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2159])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2158])) [1 acmrdl.rlwin S4 A32])) "CLDRAD.f":716 131 {*movsf_internal}
     (nil))
(insn 3819 3818 3820 291 (set (reg:SF 21 xmm0 [orig:1025 _939 ] [1025])
        (mult:SF (reg:SF 21 xmm0 [orig:1024 _938 ] [1024])
            (reg:SF 22 xmm1 [orig:1018 _932 ] [1018]))) "CLDRAD.f":716 838 {*fop_sf_comm}
     (nil))
(insn 3820 3819 3821 291 (set (reg:SI 1 dx [2160])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":716 86 {*movsi_internal}
     (nil))
(insn 3821 3820 3822 291 (set (reg:DI 1 dx [orig:1026 _940 ] [1026])
        (sign_extend:DI (reg:SI 1 dx [2160]))) "CLDRAD.f":716 149 {*extendsidi2_rex64}
     (nil))
(insn 3822 3821 3823 291 (parallel [
            (set (reg:DI 2 cx [orig:1027 _941 ] [1027])
                (mult:DI (reg:DI 1 dx [orig:1026 _940 ] [1026])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 349 {*muldi3_1}
     (nil))
(insn 3823 3822 3824 291 (set (reg:SI 1 dx [2161])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":716 86 {*movsi_internal}
     (nil))
(insn 3824 3823 3825 291 (set (reg:DI 1 dx [orig:1028 _942 ] [1028])
        (sign_extend:DI (reg:SI 1 dx [2161]))) "CLDRAD.f":716 149 {*extendsidi2_rex64}
     (nil))
(insn 3825 3824 3826 291 (parallel [
            (set (reg:DI 1 dx [orig:1029 _943 ] [1029])
                (plus:DI (reg:DI 1 dx [orig:1028 _942 ] [1028])
                    (reg:DI 2 cx [orig:1027 _941 ] [1027])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 222 {*adddi_1}
     (nil))
(insn 3826 3825 3827 291 (parallel [
            (set (reg:DI 2 cx [orig:1030 _944 ] [1030])
                (plus:DI (reg:DI 1 dx [orig:1029 _943 ] [1029])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 222 {*adddi_1}
     (nil))
(insn 3827 3826 3828 291 (set (reg:SF 21 xmm0 [orig:1031 _945 ] [1031])
        (mult:SF (reg:SF 21 xmm0 [orig:1025 _939 ] [1025])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 factrl+0 S4 A32]))) "CLDRAD.f":716 838 {*fop_sf_comm}
     (nil))
(insn 3828 3827 3829 291 (set (reg/f:DI 1 dx [2162])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":716 85 {*movdi_internal}
     (nil))
(insn 3829 3828 3830 291 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1030 _944 ] [1030])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2162])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:1031 _945 ] [1031])) "CLDRAD.f":716 131 {*movsf_internal}
     (nil))
(insn 3830 3829 4295 291 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":708 221 {*addsi_1}
     (nil))
(jump_insn 4295 3830 4296 291 (set (pc)
        (label_ref 3831)) "CLDRAD.f":708 683 {jump}
     (nil)
 -> 3831)
;;  succ:       287 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188

(barrier 4296 4295 4430)
;; basic block 349, loop depth 0, maybe hot
;;  prev block 291, next block 292, flags: (RTL, MODIFIED)
;;  pred:       287
;; bb 349 artificial_defs: { }
;; bb 349 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4430 4296 4429 349 271 (nil) [1 uses])
(note 4429 4430 4431 349 [bb 349] NOTE_INSN_BASIC_BLOCK)
(insn 4431 4429 3834 349 (const_int 0 [0]) "CLDRAD.f":716 718 {nop}
     (nil))
;;  succ:       292 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188

;; basic block 292, loop depth 0, maybe hot
;;  prev block 349, next block 348, flags: (RTL, MODIFIED)
;;  pred:       349 [always]  (FALLTHRU)
;; bb 292 artificial_defs: { }
;; bb 292 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3834 4431 3835 292 187 (nil) [0 uses])
(note 3835 3834 3836 292 [bb 292] NOTE_INSN_BASIC_BLOCK)
(insn 3836 3835 4297 292 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":707 221 {*addsi_1}
     (nil))
(jump_insn 4297 3836 4298 292 (set (pc)
        (label_ref 3837)) "CLDRAD.f":707 683 {jump}
     (nil)
 -> 3837)
;;  succ:       285 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1188

(barrier 4298 4297 4427)
;; basic block 348, loop depth 0, maybe hot
;;  prev block 292, next block 293, flags: (RTL, MODIFIED)
;;  pred:       285
;; bb 348 artificial_defs: { }
;; bb 348 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4427 4298 4426 348 270 (nil) [1 uses])
(note 4426 4427 4428 348 [bb 348] NOTE_INSN_BASIC_BLOCK)
(insn 4428 4426 3840 348 (const_int 0 [0]) "CLDRAD.f":708 718 {nop}
     (nil))
;;  succ:       293 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 293, loop depth 0, maybe hot
;;  prev block 348, next block 294, flags: (RTL, MODIFIED)
;;  pred:       348 [always]  (FALLTHRU)
;; bb 293 artificial_defs: { }
;; bb 293 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1032 1033 1034 1035 1036 2163 2164 2165 2166 2167 2168 2169 2170 2171 2172 2173 2174 2175
(code_label 3840 4428 3841 293 186 (nil) [0 uses])
(note 3841 3840 3842 293 [bb 293] NOTE_INSN_BASIC_BLOCK)
(insn 3842 3841 3843 293 (set (reg:DI 1 dx [2163])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3843 3842 3844 293 (set (reg:DI 0 ax [2164])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3844 3843 3845 293 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":720 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3845 3844 3846 293 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":720 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3846 3845 3847 293 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2163])) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3847 3846 3848 293 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2164])) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3848 3847 3849 293 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3849 3848 3850 293 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3850 3849 3851 293 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3851 3850 3852 293 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f2038fb4ea0 *.LC34>)) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3852 3851 3853 293 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":720 88 {*movqi_internal}
     (nil))
(call_insn 3853 3852 3854 293 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":720 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3854 3853 3855 293 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":720 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3855 3854 3856 293 (set (reg/f:DI 1 dx [2165])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":721 85 {*movdi_internal}
     (nil))
(insn 3856 3855 3857 293 (set (reg:DI 0 ax [2166])
        (const_int 0 [0])) "CLDRAD.f":721 85 {*movdi_internal}
     (nil))
(insn 3857 3856 4511 293 (set (reg:DI 2 cx [2167])
        (const_int 12 [0xc])) "CLDRAD.f":721 85 {*movdi_internal}
     (nil))
(insn 4511 3857 3858 293 (set (reg/f:DI 5 di [2165])
        (reg/f:DI 1 dx [2165])) "CLDRAD.f":721 85 {*movdi_internal}
     (nil))
(insn 3858 4511 4512 293 (parallel [
            (set (reg:DI 2 cx [2167])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2165])
                (plus:DI (ashift:DI (reg:DI 2 cx [2167])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2165])))
            (set (mem/c:BLK (reg/f:DI 5 di [2165]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2166]))
            (use (reg:DI 2 cx [2167]))
        ]) "CLDRAD.f":721 984 {*rep_stosdi_rex64}
     (nil))
(insn 4512 3858 3859 293 (set (reg/f:DI 1 dx [2165])
        (reg/f:DI 5 di [2165])) "CLDRAD.f":721 85 {*movdi_internal}
     (nil))
(insn 3859 4512 3860 293 (set (mem/c:SI (reg/f:DI 1 dx [2165]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2166])) "CLDRAD.f":721 86 {*movsi_internal}
     (nil))
(insn 3860 3859 3861 293 (parallel [
            (set (reg/f:DI 1 dx [2165])
                (plus:DI (reg/f:DI 1 dx [2165])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":721 222 {*adddi_1}
     (nil))
(insn 3861 3860 3862 293 (set (reg:SI 0 ax [orig:1032 _946 ] [1032])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 640 [0x280]))) [2 rqstfld.iget+624 S4 A128])) "CLDRAD.f":723 86 {*movsi_internal}
     (nil))
(insn 3862 3861 3863 293 (set (reg:DI 0 ax [orig:1033 _947 ] [1033])
        (sign_extend:DI (reg:SI 0 ax [orig:1032 _946 ] [1032]))) "CLDRAD.f":723 149 {*extendsidi2_rex64}
     (nil))
(insn 3863 3862 3864 293 (parallel [
            (set (reg:DI 1 dx [orig:1034 _948 ] [1034])
                (plus:DI (reg:DI 0 ax [orig:1033 _947 ] [1033])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":723 222 {*adddi_1}
     (nil))
(insn 3864 3863 3865 293 (set (reg:DI 0 ax [2168])
        (reg:DI 1 dx [orig:1034 _948 ] [1034])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3865 3864 3867 293 (parallel [
            (set (reg:DI 0 ax [2169])
                (ashift:DI (reg:DI 0 ax [2168])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":723 551 {*ashldi3_1}
     (nil))
(insn 3867 3865 3868 293 (parallel [
            (set (reg:DI 0 ax [2168])
                (minus:DI (reg:DI 0 ax [2168])
                    (reg:DI 1 dx [orig:1034 _948 ] [1034])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":723 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1034 _948 ] [1034])
            (const_int 15 [0xf]))
        (nil)))
(insn 3868 3867 3871 293 (parallel [
            (set (reg:DI 0 ax [2170])
                (ashift:DI (reg:DI 0 ax [2168])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":723 551 {*ashldi3_1}
     (nil))
(insn 3871 3868 3872 293 (parallel [
            (set (reg:DI 0 ax [2171])
                (plus:DI (reg:DI 0 ax [orig:1035 _949 ] [1035])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":723 222 {*adddi_1}
     (nil))
(insn 3872 3871 3873 293 (parallel [
            (set (reg:DI 0 ax [2172])
                (ashift:DI (reg:DI 0 ax [2171])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":723 551 {*ashldi3_1}
     (nil))
(insn 3873 3872 3874 293 (parallel [
            (set (reg/f:DI 1 dx [orig:1036 _950 ] [1036])
                (plus:DI (reg:DI 0 ax [2172])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":723 222 {*adddi_1}
     (nil))
(insn 3874 3873 3875 293 (set (reg:DI 4 si [2173])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3875 3874 3876 293 (set (reg:DI 2 cx [2174])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3876 3875 3877 293 (set (reg:DI 0 ax [2175])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3877 3876 3878 293 (set (reg:DI 38 r9)
        (reg:DI 4 si [2173])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3878 3877 3879 293 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2174])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3879 3878 3881 293 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2175])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3881 3879 3882 293 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 640 [0x280])))) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3882 3881 3883 293 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3883 3882 3884 293 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":723 88 {*movqi_internal}
     (nil))
(call_insn 3884 3883 3885 293 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":723 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       294 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 294, loop depth 0, maybe hot
;;  prev block 293, next block 295, flags: (RTL, MODIFIED)
;;  pred:       283
;;              293 (FALLTHRU)
;; bb 294 artificial_defs: { }
;; bb 294 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1037
(code_label 3885 3884 3886 294 185 (nil) [1 uses])
(note 3886 3885 3887 294 [bb 294] NOTE_INSN_BASIC_BLOCK)
(insn 3887 3886 3888 294 (set (reg:SI 0 ax [orig:1037 _951 ] [1037])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 576 [0x240]))) [2 rqstfld.iget+560 S4 A128])) "CLDRAD.f":727 86 {*movsi_internal}
     (nil))
(insn 3888 3887 3889 294 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1037 _951 ] [1037])
            (const_int 0 [0]))) "CLDRAD.f":727 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3889 3888 3890 294 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 4040)
            (pc))) "CLDRAD.f":727 682 {*jcc}
     (nil)
 -> 4040)
;;  succ:       295 (FALLTHRU)
;;              305
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 295, loop depth 0, maybe hot
;;  prev block 294, next block 296, flags: (RTL, MODIFIED)
;;  pred:       294 (FALLTHRU)
;; bb 295 artificial_defs: { }
;; bb 295 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1191 1192
(note 3890 3889 3891 295 [bb 295] NOTE_INSN_BASIC_BLOCK)
(insn 3891 3890 3892 295 (set (reg:SI 1 dx [orig:1191 _1591 ] [1191])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":728 86 {*movsi_internal}
     (nil))
(insn 3892 3891 3893 295 (set (reg:SI 0 ax [orig:1192 _1592 ] [1192])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":728 86 {*movsi_internal}
     (nil))
(insn 3893 3892 3992 295 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1191 _1591 ] [1191])) "CLDRAD.f":728 86 {*movsi_internal}
     (nil))
;;  succ:       296 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192

;; basic block 296, loop depth 0, maybe hot
;;  prev block 295, next block 297, flags: (RTL, MODIFIED)
;;  pred:       295 (FALLTHRU)
;;              303 [always] 
;; bb 296 artificial_defs: { }
;; bb 296 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192
;; lr  def 	 17 [flags] 1193 2176
(code_label 3992 3893 3894 296 200 (nil) [1 uses])
(note 3894 3992 3895 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
(insn 3895 3894 3896 296 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1192 _1592 ] [1192]))) "CLDRAD.f":728 11 {*cmpsi_1}
     (nil))
(insn 3896 3895 3897 296 (set (reg:QI 1 dx [2176])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":728 678 {*setcc_qi}
     (nil))
(insn 3897 3896 3898 296 (set (reg:SI 1 dx [orig:1193 _1594 ] [1193])
        (zero_extend:SI (reg:QI 1 dx [2176]))) "CLDRAD.f":728 140 {*zero_extendqisi2}
     (nil))
(insn 3898 3897 3899 296 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1193 _1594 ] [1193])
            (const_int 0 [0]))) "CLDRAD.f":728 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3899 3898 3900 296 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4433)
            (pc))) "CLDRAD.f":728 682 {*jcc}
     (nil)
 -> 4433)
;;  succ:       350
;;              297 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192

;; basic block 297, loop depth 0, maybe hot
;;  prev block 296, next block 298, flags: (RTL, MODIFIED)
;;  pred:       296 (FALLTHRU)
;; bb 297 artificial_defs: { }
;; bb 297 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3900 3899 3901 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
(insn 3901 3900 3986 297 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":729 86 {*movsi_internal}
     (nil))
;;  succ:       298 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192

;; basic block 298, loop depth 0, maybe hot
;;  prev block 297, next block 299, flags: (RTL, MODIFIED)
;;  pred:       297 (FALLTHRU)
;;              302 [always] 
;; bb 298 artificial_defs: { }
;; bb 298 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1194 2177
(code_label 3986 3901 3902 298 199 (nil) [1 uses])
(note 3902 3986 3903 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
(insn 3903 3902 3904 298 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":729 11 {*cmpsi_1}
     (nil))
(insn 3904 3903 3905 298 (set (reg:QI 1 dx [2177])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":729 678 {*setcc_qi}
     (nil))
(insn 3905 3904 3906 298 (set (reg:SI 1 dx [orig:1194 _1596 ] [1194])
        (zero_extend:SI (reg:QI 1 dx [2177]))) "CLDRAD.f":729 140 {*zero_extendqisi2}
     (nil))
(insn 3906 3905 3907 298 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1194 _1596 ] [1194])
            (const_int 0 [0]))) "CLDRAD.f":729 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3907 3906 3908 298 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4436)
            (pc))) "CLDRAD.f":729 682 {*jcc}
     (nil)
 -> 4436)
;;  succ:       351
;;              299 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192

;; basic block 299, loop depth 0, maybe hot
;;  prev block 298, next block 300, flags: (RTL, MODIFIED)
;;  pred:       298 (FALLTHRU)
;; bb 299 artificial_defs: { }
;; bb 299 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1038 1039 1040 1041 1042 1043 2178 2179 2180 2181
(note 3908 3907 3909 299 [bb 299] NOTE_INSN_BASIC_BLOCK)
(insn 3909 3908 3910 299 (set (reg:SI 1 dx [2178])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":730 86 {*movsi_internal}
     (nil))
(insn 3910 3909 3911 299 (set (reg:DI 1 dx [orig:1038 _952 ] [1038])
        (sign_extend:DI (reg:SI 1 dx [2178]))) "CLDRAD.f":730 149 {*extendsidi2_rex64}
     (nil))
(insn 3911 3910 3912 299 (parallel [
            (set (reg:DI 2 cx [orig:1039 _953 ] [1039])
                (mult:DI (reg:DI 1 dx [orig:1038 _952 ] [1038])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":730 349 {*muldi3_1}
     (nil))
(insn 3912 3911 3913 299 (set (reg:SI 1 dx [2179])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":730 86 {*movsi_internal}
     (nil))
(insn 3913 3912 3914 299 (set (reg:DI 1 dx [orig:1040 _954 ] [1040])
        (sign_extend:DI (reg:SI 1 dx [2179]))) "CLDRAD.f":730 149 {*extendsidi2_rex64}
     (nil))
(insn 3914 3913 3915 299 (parallel [
            (set (reg:DI 1 dx [orig:1041 _955 ] [1041])
                (plus:DI (reg:DI 1 dx [orig:1040 _954 ] [1040])
                    (reg:DI 2 cx [orig:1039 _953 ] [1039])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":730 222 {*adddi_1}
     (nil))
(insn 3915 3914 3916 299 (parallel [
            (set (reg:DI 2 cx [orig:1042 _956 ] [1042])
                (plus:DI (reg:DI 1 dx [orig:1041 _955 ] [1041])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":730 222 {*adddi_1}
     (nil))
(insn 3916 3915 3917 299 (set (reg/f:DI 1 dx [2180])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":730 85 {*movdi_internal}
     (nil))
(insn 3917 3916 3918 299 (parallel [
            (set (reg:DI 2 cx [2181])
                (plus:DI (reg:DI 2 cx [orig:1042 _956 ] [1042])
                    (const_int 504587 [0x7b30b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":730 222 {*adddi_1}
     (nil))
(insn 3918 3917 3919 299 (set (reg:SF 21 xmm0 [orig:1043 _957 ] [1043])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2181])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2180])) [1 phys.czmean S4 A32])) "CLDRAD.f":730 131 {*movsf_internal}
     (nil))
(insn 3919 3918 3920 299 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1043 _957 ] [1043])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32]))) "CLDRAD.f":730 53 {*cmpisf}
     (nil))
(jump_insn 3920 3919 3924 299 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4299)
            (pc))) "CLDRAD.f":730 682 {*jcc}
     (nil)
 -> 4299)
;;  succ:       300 (FALLTHRU)
;;              301
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192

;; basic block 300, loop depth 0, maybe hot
;;  prev block 299, next block 301, flags: (RTL, MODIFIED)
;;  pred:       299 (FALLTHRU)
;; bb 300 artificial_defs: { }
;; bb 300 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 2182 2183 2184 2185 2186 2187 2188 2189 2190
(note 3924 3920 3925 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
(insn 3925 3924 3926 300 (set (reg:SI 1 dx [2182])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":731 86 {*movsi_internal}
     (nil))
(insn 3926 3925 3927 300 (set (reg:DI 1 dx [orig:1044 _958 ] [1044])
        (sign_extend:DI (reg:SI 1 dx [2182]))) "CLDRAD.f":731 149 {*extendsidi2_rex64}
     (nil))
(insn 3927 3926 3928 300 (parallel [
            (set (reg:DI 2 cx [orig:1045 _959 ] [1045])
                (mult:DI (reg:DI 1 dx [orig:1044 _958 ] [1044])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 349 {*muldi3_1}
     (nil))
(insn 3928 3927 3929 300 (set (reg:SI 1 dx [2183])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":731 86 {*movsi_internal}
     (nil))
(insn 3929 3928 3930 300 (set (reg:DI 1 dx [orig:1046 _960 ] [1046])
        (sign_extend:DI (reg:SI 1 dx [2183]))) "CLDRAD.f":731 149 {*extendsidi2_rex64}
     (nil))
(insn 3930 3929 3931 300 (parallel [
            (set (reg:DI 1 dx [orig:1047 _961 ] [1047])
                (plus:DI (reg:DI 1 dx [orig:1046 _960 ] [1046])
                    (reg:DI 2 cx [orig:1045 _959 ] [1045])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 222 {*adddi_1}
     (nil))
(insn 3931 3930 3932 300 (parallel [
            (set (reg:DI 2 cx [orig:1048 _962 ] [1048])
                (plus:DI (reg:DI 1 dx [orig:1047 _961 ] [1047])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 222 {*adddi_1}
     (nil))
(insn 3932 3931 3933 300 (set (reg/f:DI 1 dx [2184])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":731 85 {*movdi_internal}
     (nil))
(insn 3933 3932 3934 300 (parallel [
            (set (reg:DI 2 cx [2185])
                (plus:DI (reg:DI 2 cx [orig:1048 _962 ] [1048])
                    (const_int 178646 [0x2b9d6])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 222 {*adddi_1}
     (nil))
(insn 3934 3933 3935 300 (set (reg:SF 21 xmm0 [orig:1049 _963 ] [1049])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2185])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2184])) [1 phys.czen S4 A32])) "CLDRAD.f":731 131 {*movsf_internal}
     (nil))
(insn 3935 3934 3936 300 (set (reg:SI 1 dx [2186])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":731 86 {*movsi_internal}
     (nil))
(insn 3936 3935 3937 300 (set (reg:DI 1 dx [orig:1050 _964 ] [1050])
        (sign_extend:DI (reg:SI 1 dx [2186]))) "CLDRAD.f":731 149 {*extendsidi2_rex64}
     (nil))
(insn 3937 3936 3938 300 (parallel [
            (set (reg:DI 2 cx [orig:1051 _965 ] [1051])
                (mult:DI (reg:DI 1 dx [orig:1050 _964 ] [1050])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 349 {*muldi3_1}
     (nil))
(insn 3938 3937 3939 300 (set (reg:SI 1 dx [2187])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":731 86 {*movsi_internal}
     (nil))
(insn 3939 3938 3940 300 (set (reg:DI 1 dx [orig:1052 _966 ] [1052])
        (sign_extend:DI (reg:SI 1 dx [2187]))) "CLDRAD.f":731 149 {*extendsidi2_rex64}
     (nil))
(insn 3940 3939 3941 300 (parallel [
            (set (reg:DI 1 dx [orig:1053 _967 ] [1053])
                (plus:DI (reg:DI 1 dx [orig:1052 _966 ] [1052])
                    (reg:DI 2 cx [orig:1051 _965 ] [1051])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 222 {*adddi_1}
     (nil))
(insn 3941 3940 3942 300 (parallel [
            (set (reg:DI 2 cx [orig:1054 _968 ] [1054])
                (plus:DI (reg:DI 1 dx [orig:1053 _967 ] [1053])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 222 {*adddi_1}
     (nil))
(insn 3942 3941 3943 300 (set (reg/f:DI 1 dx [2188])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":731 85 {*movdi_internal}
     (nil))
(insn 3943 3942 3944 300 (parallel [
            (set (reg:DI 2 cx [2189])
                (plus:DI (reg:DI 2 cx [orig:1054 _968 ] [1054])
                    (const_int 504587 [0x7b30b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 222 {*adddi_1}
     (nil))
(insn 3944 3943 3945 300 (set (reg:SF 22 xmm1 [orig:1055 _969 ] [1055])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2189])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2188])) [1 phys.czmean S4 A32])) "CLDRAD.f":731 131 {*movsf_internal}
     (nil))
(insn 3945 3944 3946 300 (set (reg:SF 21 xmm0 [2190])
        (div:SF (reg:SF 21 xmm0 [orig:1049 _963 ] [1049])
            (reg:SF 22 xmm1 [orig:1055 _969 ] [1055]))) "CLDRAD.f":731 841 {*fop_sf_1}
     (nil))
(insn 3946 3945 4300 300 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 factrs+0 S4 A32])
        (reg:SF 21 xmm0 [2190])) "CLDRAD.f":731 131 {*movsf_internal}
     (nil))
(jump_insn 4300 3946 4301 300 (set (pc)
        (label_ref 3953)) 683 {jump}
     (nil)
 -> 3953)
;;  succ:       302 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192

(barrier 4301 4300 4299)
;; basic block 301, loop depth 0, maybe hot
;;  prev block 300, next block 302, flags: (RTL, MODIFIED)
;;  pred:       299
;; bb 301 artificial_defs: { }
;; bb 301 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2191
(code_label 4299 4301 3950 301 229 (nil) [1 uses])
(note 3950 4299 3951 301 [bb 301] NOTE_INSN_BASIC_BLOCK)
(insn 3951 3950 3952 301 (set (reg:SF 21 xmm0 [2191])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":733 131 {*movsf_internal}
     (nil))
(insn 3952 3951 3953 301 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 factrs+0 S4 A32])
        (reg:SF 21 xmm0 [2191])) "CLDRAD.f":733 131 {*movsf_internal}
     (nil))
;;  succ:       302 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192

;; basic block 302, loop depth 0, maybe hot
;;  prev block 301, next block 351, flags: (RTL, MODIFIED)
;;  pred:       301 (FALLTHRU)
;;              300 [always] 
;; bb 302 artificial_defs: { }
;; bb 302 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 2192 2193 2194 2195 2196 2197 2198 2199 2200 2201
(code_label 3953 3952 3954 302 198 (nil) [1 uses])
(note 3954 3953 3955 302 [bb 302] NOTE_INSN_BASIC_BLOCK)
(insn 3955 3954 3956 302 (set (reg:SI 1 dx [2192])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":735 86 {*movsi_internal}
     (nil))
(insn 3956 3955 3957 302 (set (reg:DI 1 dx [orig:1056 _970 ] [1056])
        (sign_extend:DI (reg:SI 1 dx [2192]))) "CLDRAD.f":735 149 {*extendsidi2_rex64}
     (nil))
(insn 3957 3956 3958 302 (parallel [
            (set (reg:DI 2 cx [orig:1057 _971 ] [1057])
                (mult:DI (reg:DI 1 dx [orig:1056 _970 ] [1056])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 349 {*muldi3_1}
     (nil))
(insn 3958 3957 3959 302 (set (reg:SI 1 dx [2193])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":735 86 {*movsi_internal}
     (nil))
(insn 3959 3958 3960 302 (set (reg:DI 1 dx [orig:1058 _972 ] [1058])
        (sign_extend:DI (reg:SI 1 dx [2193]))) "CLDRAD.f":735 149 {*extendsidi2_rex64}
     (nil))
(insn 3960 3959 3961 302 (parallel [
            (set (reg:DI 1 dx [orig:1059 _973 ] [1059])
                (plus:DI (reg:DI 1 dx [orig:1058 _972 ] [1058])
                    (reg:DI 2 cx [orig:1057 _971 ] [1057])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 222 {*adddi_1}
     (nil))
(insn 3961 3960 3962 302 (parallel [
            (set (reg:DI 2 cx [orig:1060 _974 ] [1060])
                (plus:DI (reg:DI 1 dx [orig:1059 _973 ] [1059])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 222 {*adddi_1}
     (nil))
(insn 3962 3961 3963 302 (set (reg/f:DI 1 dx [2194])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f20392c13f0 masks>)) "CLDRAD.f":735 85 {*movdi_internal}
     (nil))
(insn 3963 3962 3964 302 (set (reg:SF 22 xmm1 [orig:1061 _975 ] [1061])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1060 _974 ] [1060])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2194])) [1 masks.hbm2 S4 A32])) "CLDRAD.f":735 131 {*movsf_internal}
     (nil))
(insn 3964 3963 3965 302 (set (reg:SI 1 dx [2195])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":735 86 {*movsi_internal}
     (nil))
(insn 3965 3964 3966 302 (set (reg:DI 1 dx [orig:1062 _976 ] [1062])
        (sign_extend:DI (reg:SI 1 dx [2195]))) "CLDRAD.f":735 149 {*extendsidi2_rex64}
     (nil))
(insn 3966 3965 3967 302 (parallel [
            (set (reg:DI 2 cx [orig:1063 _977 ] [1063])
                (mult:DI (reg:DI 1 dx [orig:1062 _976 ] [1062])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 349 {*muldi3_1}
     (nil))
(insn 3967 3966 3968 302 (set (reg:SI 1 dx [2196])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":735 86 {*movsi_internal}
     (nil))
(insn 3968 3967 3969 302 (set (reg:DI 1 dx [orig:1064 _978 ] [1064])
        (sign_extend:DI (reg:SI 1 dx [2196]))) "CLDRAD.f":735 149 {*extendsidi2_rex64}
     (nil))
(insn 3969 3968 3970 302 (parallel [
            (set (reg:DI 1 dx [orig:1065 _979 ] [1065])
                (plus:DI (reg:DI 1 dx [orig:1064 _978 ] [1064])
                    (reg:DI 2 cx [orig:1063 _977 ] [1063])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 222 {*adddi_1}
     (nil))
(insn 3970 3969 3971 302 (parallel [
            (set (reg:DI 2 cx [orig:1066 _980 ] [1066])
                (plus:DI (reg:DI 1 dx [orig:1065 _979 ] [1065])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 222 {*adddi_1}
     (nil))
(insn 3971 3970 3972 302 (set (reg/f:DI 1 dx [2197])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":735 85 {*movdi_internal}
     (nil))
(insn 3972 3971 3973 302 (parallel [
            (set (reg:DI 2 cx [2198])
                (plus:DI (reg:DI 2 cx [orig:1066 _980 ] [1066])
                    (const_int 29634 [0x73c2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 222 {*adddi_1}
     (nil))
(insn 3973 3972 3974 302 (set (reg:SF 21 xmm0 [orig:1067 _981 ] [1067])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2198])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2197])) [1 acmrds.rswout S4 A32])) "CLDRAD.f":735 131 {*movsf_internal}
     (nil))
(insn 3974 3973 3975 302 (set (reg:SF 21 xmm0 [orig:1068 _982 ] [1068])
        (mult:SF (reg:SF 21 xmm0 [orig:1067 _981 ] [1067])
            (reg:SF 22 xmm1 [orig:1061 _975 ] [1061]))) "CLDRAD.f":735 838 {*fop_sf_comm}
     (nil))
(insn 3975 3974 3976 302 (set (reg:SI 1 dx [2199])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":735 86 {*movsi_internal}
     (nil))
(insn 3976 3975 3977 302 (set (reg:DI 1 dx [orig:1069 _983 ] [1069])
        (sign_extend:DI (reg:SI 1 dx [2199]))) "CLDRAD.f":735 149 {*extendsidi2_rex64}
     (nil))
(insn 3977 3976 3978 302 (parallel [
            (set (reg:DI 2 cx [orig:1070 _984 ] [1070])
                (mult:DI (reg:DI 1 dx [orig:1069 _983 ] [1069])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 349 {*muldi3_1}
     (nil))
(insn 3978 3977 3979 302 (set (reg:SI 1 dx [2200])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":735 86 {*movsi_internal}
     (nil))
(insn 3979 3978 3980 302 (set (reg:DI 1 dx [orig:1071 _985 ] [1071])
        (sign_extend:DI (reg:SI 1 dx [2200]))) "CLDRAD.f":735 149 {*extendsidi2_rex64}
     (nil))
(insn 3980 3979 3981 302 (parallel [
            (set (reg:DI 1 dx [orig:1072 _986 ] [1072])
                (plus:DI (reg:DI 1 dx [orig:1071 _985 ] [1071])
                    (reg:DI 2 cx [orig:1070 _984 ] [1070])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 222 {*adddi_1}
     (nil))
(insn 3981 3980 3982 302 (parallel [
            (set (reg:DI 2 cx [orig:1073 _987 ] [1073])
                (plus:DI (reg:DI 1 dx [orig:1072 _986 ] [1072])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 222 {*adddi_1}
     (nil))
(insn 3982 3981 3983 302 (set (reg:SF 21 xmm0 [orig:1074 _988 ] [1074])
        (mult:SF (reg:SF 21 xmm0 [orig:1068 _982 ] [1068])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [1 factrs+0 S4 A32]))) "CLDRAD.f":735 838 {*fop_sf_comm}
     (nil))
(insn 3983 3982 3984 302 (set (reg/f:DI 1 dx [2201])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":735 85 {*movdi_internal}
     (nil))
(insn 3984 3983 3985 302 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1073 _987 ] [1073])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2201])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:1074 _988 ] [1074])) "CLDRAD.f":735 131 {*movsf_internal}
     (nil))
(insn 3985 3984 4302 302 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":729 221 {*addsi_1}
     (nil))
(jump_insn 4302 3985 4303 302 (set (pc)
        (label_ref 3986)) "CLDRAD.f":729 683 {jump}
     (nil)
 -> 3986)
;;  succ:       298 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192

(barrier 4303 4302 4436)
;; basic block 351, loop depth 0, maybe hot
;;  prev block 302, next block 303, flags: (RTL, MODIFIED)
;;  pred:       298
;; bb 351 artificial_defs: { }
;; bb 351 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4436 4303 4435 351 273 (nil) [1 uses])
(note 4435 4436 4437 351 [bb 351] NOTE_INSN_BASIC_BLOCK)
(insn 4437 4435 3989 351 (const_int 0 [0]) "CLDRAD.f":735 718 {nop}
     (nil))
;;  succ:       303 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192

;; basic block 303, loop depth 0, maybe hot
;;  prev block 351, next block 350, flags: (RTL, MODIFIED)
;;  pred:       351 [always]  (FALLTHRU)
;; bb 303 artificial_defs: { }
;; bb 303 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3989 4437 3990 303 195 (nil) [0 uses])
(note 3990 3989 3991 303 [bb 303] NOTE_INSN_BASIC_BLOCK)
(insn 3991 3990 4304 303 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":728 221 {*addsi_1}
     (nil))
(jump_insn 4304 3991 4305 303 (set (pc)
        (label_ref 3992)) "CLDRAD.f":728 683 {jump}
     (nil)
 -> 3992)
;;  succ:       296 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1192

(barrier 4305 4304 4433)
;; basic block 350, loop depth 0, maybe hot
;;  prev block 303, next block 304, flags: (RTL, MODIFIED)
;;  pred:       296
;; bb 350 artificial_defs: { }
;; bb 350 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4433 4305 4432 350 272 (nil) [1 uses])
(note 4432 4433 4434 350 [bb 350] NOTE_INSN_BASIC_BLOCK)
(insn 4434 4432 3995 350 (const_int 0 [0]) "CLDRAD.f":729 718 {nop}
     (nil))
;;  succ:       304 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 304, loop depth 0, maybe hot
;;  prev block 350, next block 305, flags: (RTL, MODIFIED)
;;  pred:       350 [always]  (FALLTHRU)
;; bb 304 artificial_defs: { }
;; bb 304 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1075 1076 1077 1078 1079 2202 2203 2204 2205 2206 2207 2208 2209 2210 2211 2212 2213 2214
(code_label 3995 4434 3996 304 194 (nil) [0 uses])
(note 3996 3995 3997 304 [bb 304] NOTE_INSN_BASIC_BLOCK)
(insn 3997 3996 3998 304 (set (reg:DI 1 dx [2202])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 3998 3997 3999 304 (set (reg:DI 0 ax [2203])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 3999 3998 4000 304 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":739 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 4000 3999 4001 304 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":739 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 4001 4000 4002 304 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2202])) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 4002 4001 4003 304 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2203])) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 4003 4002 4004 304 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 4004 4003 4005 304 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 4005 4004 4006 304 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 4006 4005 4007 304 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f2038fb4f30 *.LC35>)) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 4007 4006 4008 304 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":739 88 {*movqi_internal}
     (nil))
(call_insn 4008 4007 4009 304 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":739 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 4009 4008 4010 304 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":739 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 4010 4009 4011 304 (set (reg/f:DI 1 dx [2204])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":740 85 {*movdi_internal}
     (nil))
(insn 4011 4010 4012 304 (set (reg:DI 0 ax [2205])
        (const_int 0 [0])) "CLDRAD.f":740 85 {*movdi_internal}
     (nil))
(insn 4012 4011 4513 304 (set (reg:DI 2 cx [2206])
        (const_int 12 [0xc])) "CLDRAD.f":740 85 {*movdi_internal}
     (nil))
(insn 4513 4012 4013 304 (set (reg/f:DI 5 di [2204])
        (reg/f:DI 1 dx [2204])) "CLDRAD.f":740 85 {*movdi_internal}
     (nil))
(insn 4013 4513 4514 304 (parallel [
            (set (reg:DI 2 cx [2206])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2204])
                (plus:DI (ashift:DI (reg:DI 2 cx [2206])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2204])))
            (set (mem/c:BLK (reg/f:DI 5 di [2204]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2205]))
            (use (reg:DI 2 cx [2206]))
        ]) "CLDRAD.f":740 984 {*rep_stosdi_rex64}
     (nil))
(insn 4514 4013 4014 304 (set (reg/f:DI 1 dx [2204])
        (reg/f:DI 5 di [2204])) "CLDRAD.f":740 85 {*movdi_internal}
     (nil))
(insn 4014 4514 4015 304 (set (mem/c:SI (reg/f:DI 1 dx [2204]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2205])) "CLDRAD.f":740 86 {*movsi_internal}
     (nil))
(insn 4015 4014 4016 304 (parallel [
            (set (reg/f:DI 1 dx [2204])
                (plus:DI (reg/f:DI 1 dx [2204])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":740 222 {*adddi_1}
     (nil))
(insn 4016 4015 4017 304 (set (reg:SI 0 ax [orig:1075 _989 ] [1075])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 576 [0x240]))) [2 rqstfld.iget+560 S4 A128])) "CLDRAD.f":742 86 {*movsi_internal}
     (nil))
(insn 4017 4016 4018 304 (set (reg:DI 0 ax [orig:1076 _990 ] [1076])
        (sign_extend:DI (reg:SI 0 ax [orig:1075 _989 ] [1075]))) "CLDRAD.f":742 149 {*extendsidi2_rex64}
     (nil))
(insn 4018 4017 4019 304 (parallel [
            (set (reg:DI 1 dx [orig:1077 _991 ] [1077])
                (plus:DI (reg:DI 0 ax [orig:1076 _990 ] [1076])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":742 222 {*adddi_1}
     (nil))
(insn 4019 4018 4020 304 (set (reg:DI 0 ax [2207])
        (reg:DI 1 dx [orig:1077 _991 ] [1077])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4020 4019 4022 304 (parallel [
            (set (reg:DI 0 ax [2208])
                (ashift:DI (reg:DI 0 ax [2207])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":742 551 {*ashldi3_1}
     (nil))
(insn 4022 4020 4023 304 (parallel [
            (set (reg:DI 0 ax [2207])
                (minus:DI (reg:DI 0 ax [2207])
                    (reg:DI 1 dx [orig:1077 _991 ] [1077])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":742 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1077 _991 ] [1077])
            (const_int 15 [0xf]))
        (nil)))
(insn 4023 4022 4026 304 (parallel [
            (set (reg:DI 0 ax [2209])
                (ashift:DI (reg:DI 0 ax [2207])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":742 551 {*ashldi3_1}
     (nil))
(insn 4026 4023 4027 304 (parallel [
            (set (reg:DI 0 ax [2210])
                (plus:DI (reg:DI 0 ax [orig:1078 _992 ] [1078])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":742 222 {*adddi_1}
     (nil))
(insn 4027 4026 4028 304 (parallel [
            (set (reg:DI 0 ax [2211])
                (ashift:DI (reg:DI 0 ax [2210])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":742 551 {*ashldi3_1}
     (nil))
(insn 4028 4027 4029 304 (parallel [
            (set (reg/f:DI 1 dx [orig:1079 _993 ] [1079])
                (plus:DI (reg:DI 0 ax [2211])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":742 222 {*adddi_1}
     (nil))
(insn 4029 4028 4030 304 (set (reg:DI 4 si [2212])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4030 4029 4031 304 (set (reg:DI 2 cx [2213])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4031 4030 4032 304 (set (reg:DI 0 ax [2214])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4032 4031 4033 304 (set (reg:DI 38 r9)
        (reg:DI 4 si [2212])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4033 4032 4034 304 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2213])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4034 4033 4036 304 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2214])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4036 4034 4037 304 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 576 [0x240])))) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4037 4036 4038 304 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4038 4037 4039 304 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":742 88 {*movqi_internal}
     (nil))
(call_insn 4039 4038 4040 304 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":742 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       305 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 305, loop depth 0, maybe hot
;;  prev block 304, next block 306, flags: (RTL, MODIFIED)
;;  pred:       294
;;              304 (FALLTHRU)
;; bb 305 artificial_defs: { }
;; bb 305 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1080
(code_label 4040 4039 4041 305 193 (nil) [1 uses])
(note 4041 4040 4042 305 [bb 305] NOTE_INSN_BASIC_BLOCK)
(insn 4042 4041 4043 305 (set (reg:SI 0 ax [orig:1080 _994 ] [1080])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 580 [0x244]))) [2 rqstfld.iget+564 S4 A32])) "CLDRAD.f":746 86 {*movsi_internal}
     (nil))
(insn 4043 4042 4044 305 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1080 _994 ] [1080])
            (const_int 0 [0]))) "CLDRAD.f":746 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4044 4043 4045 305 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4441)
            (pc))) "CLDRAD.f":746 682 {*jcc}
     (nil)
 -> 4441)
;;  succ:       306 (FALLTHRU)
;;              352
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 306, loop depth 0, maybe hot
;;  prev block 305, next block 352, flags: (RTL, MODIFIED)
;;  pred:       305 (FALLTHRU)
;; bb 306 artificial_defs: { }
;; bb 306 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1081 1082 1083 1084 1085 2215 2216 2217 2218 2219 2220 2221 2222 2223 2224 2225 2226 2227
(note 4045 4044 4046 306 [bb 306] NOTE_INSN_BASIC_BLOCK)
(insn 4046 4045 4047 306 (set (reg:DI 1 dx [2215])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4047 4046 4048 306 (set (reg:DI 0 ax [2216])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4048 4047 4049 306 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":747 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 4049 4048 4050 306 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":747 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 4050 4049 4051 306 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2215])) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4051 4050 4052 306 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2216])) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4052 4051 4053 306 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4053 4052 4054 306 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)
                (const_int 359012 [0x57a64])))) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4054 4053 4055 306 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4055 4054 4056 306 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f2038fb4000 *.LC36>)) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4056 4055 4057 306 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":747 88 {*movqi_internal}
     (nil))
(call_insn 4057 4056 4058 306 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":747 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 4058 4057 4059 306 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":747 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 4059 4058 4060 306 (set (reg/f:DI 1 dx [2217])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":748 85 {*movdi_internal}
     (nil))
(insn 4060 4059 4061 306 (set (reg:DI 0 ax [2218])
        (const_int 0 [0])) "CLDRAD.f":748 85 {*movdi_internal}
     (nil))
(insn 4061 4060 4515 306 (set (reg:DI 2 cx [2219])
        (const_int 12 [0xc])) "CLDRAD.f":748 85 {*movdi_internal}
     (nil))
(insn 4515 4061 4062 306 (set (reg/f:DI 5 di [2217])
        (reg/f:DI 1 dx [2217])) "CLDRAD.f":748 85 {*movdi_internal}
     (nil))
(insn 4062 4515 4516 306 (parallel [
            (set (reg:DI 2 cx [2219])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2217])
                (plus:DI (ashift:DI (reg:DI 2 cx [2219])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2217])))
            (set (mem/c:BLK (reg/f:DI 5 di [2217]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2218]))
            (use (reg:DI 2 cx [2219]))
        ]) "CLDRAD.f":748 984 {*rep_stosdi_rex64}
     (nil))
(insn 4516 4062 4063 306 (set (reg/f:DI 1 dx [2217])
        (reg/f:DI 5 di [2217])) "CLDRAD.f":748 85 {*movdi_internal}
     (nil))
(insn 4063 4516 4064 306 (set (mem/c:SI (reg/f:DI 1 dx [2217]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2218])) "CLDRAD.f":748 86 {*movsi_internal}
     (nil))
(insn 4064 4063 4065 306 (parallel [
            (set (reg/f:DI 1 dx [2217])
                (plus:DI (reg/f:DI 1 dx [2217])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":748 222 {*adddi_1}
     (nil))
(insn 4065 4064 4066 306 (set (reg:SI 0 ax [orig:1081 _995 ] [1081])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 580 [0x244]))) [2 rqstfld.iget+564 S4 A32])) "CLDRAD.f":750 86 {*movsi_internal}
     (nil))
(insn 4066 4065 4067 306 (set (reg:DI 0 ax [orig:1082 _996 ] [1082])
        (sign_extend:DI (reg:SI 0 ax [orig:1081 _995 ] [1081]))) "CLDRAD.f":750 149 {*extendsidi2_rex64}
     (nil))
(insn 4067 4066 4068 306 (parallel [
            (set (reg:DI 1 dx [orig:1083 _997 ] [1083])
                (plus:DI (reg:DI 0 ax [orig:1082 _996 ] [1082])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":750 222 {*adddi_1}
     (nil))
(insn 4068 4067 4069 306 (set (reg:DI 0 ax [2220])
        (reg:DI 1 dx [orig:1083 _997 ] [1083])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4069 4068 4071 306 (parallel [
            (set (reg:DI 0 ax [2221])
                (ashift:DI (reg:DI 0 ax [2220])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":750 551 {*ashldi3_1}
     (nil))
(insn 4071 4069 4072 306 (parallel [
            (set (reg:DI 0 ax [2220])
                (minus:DI (reg:DI 0 ax [2220])
                    (reg:DI 1 dx [orig:1083 _997 ] [1083])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":750 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1083 _997 ] [1083])
            (const_int 15 [0xf]))
        (nil)))
(insn 4072 4071 4075 306 (parallel [
            (set (reg:DI 0 ax [2222])
                (ashift:DI (reg:DI 0 ax [2220])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":750 551 {*ashldi3_1}
     (nil))
(insn 4075 4072 4076 306 (parallel [
            (set (reg:DI 0 ax [2223])
                (plus:DI (reg:DI 0 ax [orig:1084 _998 ] [1084])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":750 222 {*adddi_1}
     (nil))
(insn 4076 4075 4077 306 (parallel [
            (set (reg:DI 0 ax [2224])
                (ashift:DI (reg:DI 0 ax [2223])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":750 551 {*ashldi3_1}
     (nil))
(insn 4077 4076 4078 306 (parallel [
            (set (reg/f:DI 1 dx [orig:1085 _999 ] [1085])
                (plus:DI (reg:DI 0 ax [2224])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":750 222 {*adddi_1}
     (nil))
(insn 4078 4077 4079 306 (set (reg:DI 4 si [2225])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4079 4078 4080 306 (set (reg:DI 2 cx [2226])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4080 4079 4081 306 (set (reg:DI 0 ax [2227])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4081 4080 4082 306 (set (reg:DI 38 r9)
        (reg:DI 4 si [2225])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4082 4081 4083 306 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2226])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4083 4082 4085 306 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2227])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4085 4083 4086 306 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 580 [0x244])))) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4086 4085 4087 306 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4087 4086 4088 306 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":750 88 {*movqi_internal}
     (nil))
(call_insn 4088 4087 4441 306 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":750 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       352 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 352, loop depth 0, maybe hot
;;  prev block 306, next block 307, flags: (RTL, MODIFIED)
;;  pred:       305
;;              306 [always]  (FALLTHRU)
;; bb 352 artificial_defs: { }
;; bb 352 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 4441 4088 4440 352 274 (nil) [1 uses])
(note 4440 4441 4442 352 [bb 352] NOTE_INSN_BASIC_BLOCK)
(insn 4442 4440 4157 352 (const_int 0 [0]) "CLDRAD.f":755 718 {nop}
     (nil))
;;  succ:       307 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 307, loop depth 0, maybe hot
;;  prev block 352, next block 1, flags: (RTL, MODIFIED)
;;  pred:       352 [always]  (FALLTHRU)
;; bb 307 artificial_defs: { }
;; bb 307 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2228 2229
(code_label 4157 4442 4091 307 220 (nil) [0 uses])
(note 4091 4157 4092 307 [bb 307] NOTE_INSN_BASIC_BLOCK)
(insn 4092 4091 4093 307 (set (reg:DI 0 ax [2228])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 4093 4092 4094 307 (set (reg:DI 5 di)
        (reg:DI 0 ax [2228])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(call_insn 4094 4093 4095 307 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f2039124e00 __builtin_free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "CLDRAD.f":105 689 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 4095 4094 4096 307 (set (reg:DI 0 ax [2229])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 4096 4095 4097 307 (set (reg:DI 5 di)
        (reg:DI 0 ax [2229])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(call_insn 4097 4096 4158 307 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f2039124e00 __builtin_free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "CLDRAD.f":105 689 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 4158 4097 4443 307 (const_int 0 [0]) "CLDRAD.f":755 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 4443 4158 0 NOTE_INSN_DELETED)
