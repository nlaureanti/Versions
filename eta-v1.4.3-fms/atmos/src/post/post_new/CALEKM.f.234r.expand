
;; Function calekm (calekm_, funcdef_no=0, decl_uid=3770, cgraph_uid=0, symbol_order=0)

calekm (real(kind=4)[29631] * restrict u1d, real(kind=4)[29631] * restrict v1d)
{
  logical(kind=4) D.4203;
  logical(kind=4) D.4200;
  integer(kind=4) D.4197;
  integer(kind=4) D.4196;
  logical(kind=4) D.4193;
  logical(kind=4) D.4190;
  integer(kind=4) D.4187;
  integer(kind=4) D.4186;
  logical(kind=4) D.4183;
  logical(kind=4) D.4180;
  integer(kind=4) D.4177;
  integer(kind=4) D.4176;
  static real(kind=4) zv[29631];
  static real(kind=4) zh[29631];
  real(kind=4) wdirt;
  real(kind=4) wdirg;
  real(kind=4) vg;
  real(kind=4) vfal;
  real(kind=4) ug;
  real(kind=4) ufal;
  real(kind=4) sqrt2;
  real(kind=4) spdg;
  real(kind=4) sinarg;
  real(kind=4) sinalf;
  integer(kind=4) llmh;
  integer(kind=4) j;
  integer(kind=4) i;
  real(kind=4) grf;
  real(kind=4) ftrue;
  real(kind=4) exbzmh;
  real(kind=4) dzdy;
  real(kind=4) dzdx;
  real(kind=4) deg2rd;
  real(kind=4) d75pi;
  real(kind=4) cosarg;
  real(kind=4) bzmh;
  real(kind=4) b;
  real(kind=4) arg;
  real(kind=4) alphas;
  static real(kind=4) q[1125978] [value-expr: vrbls.q];
  static real(kind=4) t[1125978] [value-expr: vrbls.t];
  static real(kind=4) v[1125978] [value-expr: vrbls.v];
  static real(kind=4) u[1125978] [value-expr: vrbls.u];
  static real(kind=4) fis[29631] [value-expr: vrbls.fis];
  static real(kind=4) res[29631] [value-expr: vrbls.res];
  static real(kind=4) pd[29631] [value-expr: vrbls.pd];
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static real(kind=4) vtm[1125978] [value-expr: masks.vtm];
  static real(kind=4) htm[1125978] [value-expr: masks.htm];
  static real(kind=4) sice[29631] [value-expr: masks.sice];
  static real(kind=4) sm[29631] [value-expr: masks.sm];
  static real(kind=4) vbm3[29631] [value-expr: masks.vbm3];
  static real(kind=4) vbm2[29631] [value-expr: masks.vbm2];
  static real(kind=4) hbm2[29631] [value-expr: masks.hbm2];
  static integer(kind=4) nunit [value-expr: mapot.nunit];
  static integer(kind=4) iunit [value-expr: mapot.iunit];
  static integer(kind=4) munit [value-expr: mapot.munit];
  static integer(kind=4) lunit [value-expr: mapot.lunit];
  static integer(kind=4) kunit [value-expr: mapot.kunit];
  static real(kind=4) sphi0 [value-expr: mapot.sphi0];
  static real(kind=4) cphi0 [value-expr: mapot.cphi0];
  static real(kind=4) erlam0 [value-expr: mapot.erlam0];
  static real(kind=4) tshde[999999] [value-expr: mapot.tshde];
  static real(kind=4) eta[39] [value-expr: mapot.eta];
  static real(kind=4) aeta[38] [value-expr: mapot.aeta];
  static real(kind=4) deta[38] [value-expr: mapot.deta];
  static real(kind=4) alsl[22] [value-expr: mapot.alsl];
  static real(kind=4) spl[22] [value-expr: mapot.spl];
  static real(kind=4) z0slp [value-expr: mapot.z0slp];
  static real(kind=4) dislp [value-expr: mapot.dislp];
  static real(kind=4) y1p [value-expr: mapot.y1p];
  static real(kind=4) x1p [value-expr: mapot.x1p];
  static real(kind=4) dp30 [value-expr: mapot.dp30];
  static real(kind=4) cmld [value-expr: mapot.cmld];
  static real(kind=4) dphd [value-expr: mapot.dphd];
  static real(kind=4) dlmd [value-expr: mapot.dlmd];
  static real(kind=4) tph0d [value-expr: mapot.tph0d];
  static real(kind=4) tlm0d [value-expr: mapot.tlm0d];
  static real(kind=4) sbd [value-expr: mapot.sbd];
  static real(kind=4) wbd [value-expr: mapot.wbd];
  static real(kind=4) tsph [value-expr: mapot.tsph];
  static real(kind=4) pt [value-expr: mapot.pt];
  static real(kind=4) r [value-expr: mapot.r];
  static integer(kind=4) ishde[999999] [value-expr: mapot.ishde];
  static integer(kind=4) iym [value-expr: mapot.iym];
  static integer(kind=4) ixm [value-expr: mapot.ixm];
  static integer(kind=4) lsl [value-expr: mapot.lsl];
  static integer(kind=4) lmv[29631] [value-expr: loops.lmv];
  static integer(kind=4) lmh[29631] [value-expr: loops.lmh];
  static integer(kind=4) jra[484] [value-expr: loops.jra];
  static integer(kind=4) ivha[484] [value-expr: loops.ivha];
  static integer(kind=4) ivla[484] [value-expr: loops.ivla];
  static integer(kind=4) ihha[484] [value-expr: loops.ihha];
  static integer(kind=4) ihla[484] [value-expr: loops.ihla];
  static integer(kind=4) ivw[249] [value-expr: indx.ivw];
  static integer(kind=4) ive[249] [value-expr: indx.ive];
  static integer(kind=4) ihw[249] [value-expr: indx.ihw];
  static integer(kind=4) ihe[249] [value-expr: indx.ihe];
  static integer(kind=4) maxwv[29631] [value-expr: extra.maxwv];
  static integer(kind=4) maxwu[29631] [value-expr: extra.maxwu];
  static real(kind=4) tlmax[29631] [value-expr: extra.tlmax];
  static real(kind=4) tlmin[29631] [value-expr: extra.tlmin];
  static real(kind=4) stdrd [value-expr: extra.stdrd];
  static real(kind=4) oldrd [value-expr: extra.oldrd];
  static real(kind=4) z1000[29631] [value-expr: extra.z1000];
  static real(kind=4) qsl[29631] [value-expr: extra.qsl];
  static real(kind=4) fsl[29631] [value-expr: extra.fsl];
  static real(kind=4) ttv[29631] [value-expr: extra.ttv];
  static real(kind=4) tsl[29631] [value-expr: extra.tsl];
  static real(kind=4) pfsl[29631] [value-expr: extra.pfsl];
  static real(kind=4) ptsl[29631] [value-expr: extra.ptsl];
  static real(kind=4) pslp[29631] [value-expr: extra.pslp];
  static real(kind=4) pdvp1[29631] [value-expr: extra.pdvp1];
  static real(kind=4) pdsl[29631] [value-expr: extra.pdsl];
  static real(kind=4) t500[29631] [value-expr: extra.t500];
  static real(kind=4) slp[29631] [value-expr: extra.slp];
  static integer(kind=4) kmnt[1121266] [value-expr: extra.kmnt];
  static integer(kind=4) kmntm[38] [value-expr: extra.kmntm];
  static real(kind=4) zint[1155609] [value-expr: extra.zint];
  static real(kind=4) alpint[1155609] [value-expr: extra.alpint];
  static real(kind=4) pint[1155609] [value-expr: extra.pint];
  static real(kind=4) ddmpv[29631] [value-expr: dynam.ddmpv];
  static real(kind=4) ddmpu[29631] [value-expr: dynam.ddmpu];
  static real(kind=4) f[29631] [value-expr: dynam.f];
  static real(kind=4) fad[29631] [value-expr: dynam.fad];
  static real(kind=4) fdiv[29631] [value-expr: dynam.fdiv];
  static real(kind=4) fcp[29631] [value-expr: dynam.fcp];
  static real(kind=4) curv[29631] [value-expr: dynam.curv];
  static real(kind=4) cpgfu[29631] [value-expr: dynam.cpgfu];
  static real(kind=4) wpdar[29631] [value-expr: dynam.wpdar];
  static real(kind=4) dx[29631] [value-expr: dynam.dx];
  static real(kind=4) emt[484] [value-expr: dynam.emt];
  static real(kind=4) em[484] [value-expr: dynam.em];
  static real(kind=4) dfl[39] [value-expr: dynam.dfl];
  static real(kind=4) etad[39] [value-expr: dynam.etad];
  static real(kind=4) f4q2[38] [value-expr: dynam.f4q2];
  static real(kind=4) aetad[38] [value-expr: dynam.aetad];
  static real(kind=4) rdeta[38] [value-expr: dynam.rdeta];
  static real(kind=4) detad[38] [value-expr: dynam.detad];
  static real(kind=4) ef4t [value-expr: dynam.ef4t];
  static real(kind=4) f4q [value-expr: dynam.f4q];
  static real(kind=4) f4d [value-expr: dynam.f4d];
  static real(kind=4) ptdyn [value-expr: dynam.ptdyn];
  static real(kind=4) rdyn [value-expr: dynam.rdyn];
  static real(kind=4) ent [value-expr: dynam.ent];
  static real(kind=4) en [value-expr: dynam.en];
  static real(kind=4) cpgfv [value-expr: dynam.cpgfv];
  static real(kind=4) dy [value-expr: dynam.dy];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=8) _1;
  integer(kind=8) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  integer(kind=8) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  integer(kind=8) _12;
  integer(kind=8) _13;
  integer(kind=8) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  real(kind=4) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  integer(kind=8) _24;
  integer(kind=8) _25;
  integer(kind=8) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  integer(kind=4) _31;
  integer(kind=4) _32;
  integer(kind=8) _33;
  integer(kind=8) _34;
  integer(kind=8) _35;
  real(kind=4) _36;
  integer(kind=8) _37;
  integer(kind=8) _38;
  integer(kind=8) _39;
  integer(kind=8) _40;
  integer(kind=4) _41;
  integer(kind=4) _42;
  integer(kind=8) _43;
  integer(kind=8) _44;
  integer(kind=8) _45;
  real(kind=4) _46;
  real(kind=4) _47;
  integer(kind=4) _48;
  integer(kind=8) _49;
  integer(kind=8) _50;
  integer(kind=8) _51;
  integer(kind=8) _52;
  integer(kind=8) _53;
  real(kind=4) _54;
  real(kind=4) _55;
  integer(kind=4) _56;
  integer(kind=8) _57;
  integer(kind=8) _58;
  integer(kind=8) _59;
  integer(kind=8) _60;
  integer(kind=8) _61;
  real(kind=4) _62;
  real(kind=4) _63;
  real(kind=4) _64;
  integer(kind=8) _65;
  integer(kind=8) _66;
  integer(kind=8) _67;
  integer(kind=8) _68;
  integer(kind=8) _69;
  real(kind=4) _70;
  integer(kind=8) _71;
  integer(kind=8) _72;
  integer(kind=8) _73;
  integer(kind=8) _74;
  integer(kind=8) _75;
  integer(kind=8) _76;
  integer(kind=8) _77;
  integer(kind=8) _78;
  integer(kind=8) _79;
  integer(kind=8) _80;
  integer(kind=8) _81;
  integer(kind=8) _82;
  integer(kind=8) _83;
  real(kind=4) _84;
  integer(kind=8) _85;
  integer(kind=8) _86;
  integer(kind=8) _87;
  integer(kind=8) _88;
  integer(kind=8) _89;
  integer(kind=8) _90;
  integer(kind=8) _91;
  integer(kind=8) _92;
  real(kind=4) _93;
  integer(kind=8) _94;
  integer(kind=8) _95;
  integer(kind=8) _96;
  integer(kind=8) _97;
  integer(kind=8) _98;
  real(kind=4) _99;
  real(kind=4) _100;
  real(kind=4) _101;
  real(kind=4) _102;
  integer(kind=8) _103;
  integer(kind=8) _104;
  integer(kind=8) _105;
  integer(kind=8) _106;
  integer(kind=4) _107;
  integer(kind=4) _108;
  integer(kind=8) _109;
  integer(kind=8) _110;
  integer(kind=8) _111;
  real(kind=4) _112;
  integer(kind=8) _113;
  integer(kind=8) _114;
  integer(kind=8) _115;
  integer(kind=8) _116;
  integer(kind=4) _117;
  integer(kind=4) _118;
  integer(kind=8) _119;
  integer(kind=8) _120;
  integer(kind=8) _121;
  real(kind=4) _122;
  real(kind=4) _123;
  real(kind=4) _124;
  integer(kind=8) _125;
  integer(kind=8) _126;
  integer(kind=8) _127;
  integer(kind=8) _128;
  integer(kind=8) _129;
  real(kind=4) _130;
  real(kind=4) _131;
  real(kind=4) _132;
  integer(kind=4) _133;
  integer(kind=8) _134;
  integer(kind=8) _135;
  integer(kind=8) _136;
  integer(kind=8) _137;
  integer(kind=8) _138;
  real(kind=4) _139;
  integer(kind=4) _140;
  integer(kind=8) _141;
  integer(kind=8) _142;
  integer(kind=8) _143;
  integer(kind=8) _144;
  integer(kind=8) _145;
  real(kind=4) _146;
  real(kind=4) _147;
  real(kind=4) _148;
  real(kind=4) _149;
  real(kind=4) _150;
  real(kind=4) _151;
  real(kind=4) _152;
  integer(kind=8) _153;
  integer(kind=8) _154;
  integer(kind=8) _155;
  integer(kind=8) _156;
  integer(kind=8) _157;
  real(kind=4) _158;
  real(kind=4) _159;
  real(kind=4) _160;
  real(kind=4) _161;
  integer(kind=8) _162;
  integer(kind=8) _163;
  integer(kind=8) _164;
  integer(kind=8) _165;
  integer(kind=8) _166;
  real(kind=4) _167;
  real(kind=4) _168;
  real(kind=4) ug.0_169;
  real(kind=4) ug.1_170;
  real(kind=4) _171;
  real(kind=4) vg.2_172;
  real(kind=4) vg.3_173;
  real(kind=4) _174;
  real(kind=4) _175;
  real(kind=4) _176;
  real(kind=4) _177;
  real(kind=4) _178;
  real(kind=4) _179;
  real(kind=4) _180;
  real(kind=4) _181;
  real(kind=4) _182;
  real(kind=4) ug.4_183;
  integer(kind=8) _184;
  integer(kind=8) _185;
  integer(kind=8) _186;
  integer(kind=8) _187;
  integer(kind=8) _188;
  real(kind=4) _189;
  real(kind=4) _190;
  real(kind=4) _191;
  real(kind=4) _192;
  real(kind=4) _193;
  real(kind=4) _194;
  real(kind=4) vg.5_195;
  integer(kind=8) _196;
  integer(kind=8) _197;
  integer(kind=8) _198;
  integer(kind=8) _199;
  integer(kind=8) _200;
  real(kind=4) _201;
  integer(kind=8) _202;
  integer(kind=8) _203;
  integer(kind=8) _204;
  integer(kind=8) _205;
  integer(kind=8) _206;
  real(kind=4) _207;
  integer(kind=8) _208;
  integer(kind=8) _209;
  integer(kind=8) _210;
  integer(kind=8) _211;
  integer(kind=8) _212;
  real(kind=4) _213;
  integer(kind=8) _214;
  integer(kind=8) _215;
  integer(kind=8) _216;
  integer(kind=8) _217;
  integer(kind=8) _218;
  real(kind=4) _219;
  integer(kind=8) _220;
  integer(kind=8) _221;
  integer(kind=8) _222;
  integer(kind=8) _223;
  integer(kind=8) _224;
  real(kind=4) _225;
  integer(kind=4) _246;
  integer(kind=4) _247;
  logical(kind=4) _249;
  logical(kind=4) _251;
  integer(kind=4) _261;
  integer(kind=4) _262;
  logical(kind=4) _264;
  logical(kind=4) _266;
  integer(kind=4) _271;
  integer(kind=4) _272;
  logical(kind=4) _274;
  logical(kind=4) _276;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  d75pi_242 = 2.35619449615478515625e+0;
  deg2rd_243 = 1.745329238474369049072265625e-2;
  sqrt2_244 = 1.41421353816986083984375e+0;
  _246 = parallel.jsta;
  _247 = parallel.jend;
  j_248 = _246;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # j_232 = PHI <j_248(2), j_259(7)>
  _249 = j_232 > _247;
  if (_249 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_250 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                6
  # i_229 = PHI <i_250(4), i_258(6)>
  _251 = i_229 > 119;
  if (_251 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _1 = (integer(kind=8)) j_232;
  _2 = _1 * 119;
  _3 = (integer(kind=8)) i_229;
  _4 = _2 + _3;
  _5 = _4 + -120;
  *u1d_252(D)[_5] = 0.0;
  _6 = (integer(kind=8)) j_232;
  _7 = _6 * 119;
  _8 = (integer(kind=8)) i_229;
  _9 = _7 + _8;
  _10 = _9 + -120;
  *v1d_254(D)[_10] = 0.0;
  _11 = (integer(kind=8)) j_232;
  _12 = _11 * 119;
  _13 = (integer(kind=8)) i_229;
  _14 = _12 + _13;
  _15 = _14 + -120;
  _16 = (integer(kind=8)) j_232;
  _17 = _16 * 119;
  _18 = (integer(kind=8)) i_229;
  _19 = _17 + _18;
  _20 = _19 + -120;
  _21 = extra.z1000[_15];
  zh[_20] = _21;
  _22 = (integer(kind=8)) j_232;
  _23 = _22 * 119;
  _24 = (integer(kind=8)) i_229;
  _25 = _23 + _24;
  _26 = _25 + -120;
  zv[_26] = 0.0;
  i_258 = i_229 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       5
  j_259 = j_232 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       3
  p2filt (&C.4184, &masks.hbm2, &zh);
  _261 = parallel.jsta_m;
  _262 = parallel.jend_m;
  j_263 = _261;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       8
;;                13
  # j_233 = PHI <j_263(8), j_269(13)>
  _264 = j_233 > _262;
  if (_264 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       14
;;                10

;;   basic block 10, loop depth 1
;;    pred:       9
  i_265 = 2;
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_230 = PHI <i_265(10), i_268(12)>
  _266 = i_230 > 118;
  if (_266 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       13
;;                12

;;   basic block 12, loop depth 2
;;    pred:       11
  _27 = (integer(kind=8)) j_233;
  _28 = _27 * 119;
  _29 = (integer(kind=8)) j_233;
  _30 = _29 + -1;
  _31 = indx.ive[_30];
  _32 = i_230 + _31;
  _33 = (integer(kind=8)) _32;
  _34 = _28 + _33;
  _35 = _34 + -120;
  _36 = zh[_35];
  _37 = (integer(kind=8)) j_233;
  _38 = _37 * 119;
  _39 = (integer(kind=8)) j_233;
  _40 = _39 + -1;
  _41 = indx.ivw[_40];
  _42 = i_230 + _41;
  _43 = (integer(kind=8)) _42;
  _44 = _38 + _43;
  _45 = _44 + -120;
  _46 = zh[_45];
  _47 = _36 + _46;
  _48 = j_233 + 1;
  _49 = (integer(kind=8)) _48;
  _50 = _49 * 119;
  _51 = (integer(kind=8)) i_230;
  _52 = _50 + _51;
  _53 = _52 + -120;
  _54 = zh[_53];
  _55 = _47 + _54;
  _56 = j_233 + -1;
  _57 = (integer(kind=8)) _56;
  _58 = _57 * 119;
  _59 = (integer(kind=8)) i_230;
  _60 = _58 + _59;
  _61 = _60 + -120;
  _62 = zh[_61];
  _63 = _55 + _62;
  _64 = ((_63));
  _65 = (integer(kind=8)) j_233;
  _66 = _65 * 119;
  _67 = (integer(kind=8)) i_230;
  _68 = _66 + _67;
  _69 = _68 + -120;
  _70 = _64 * 2.5e-1;
  zv[_69] = _70;
  i_268 = i_230 + 1;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 13, loop depth 1
;;    pred:       11
  j_269 = j_233 + 1;
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 14, loop depth 0
;;    pred:       9
  p2fltv (&C.4194, &masks.vbm2, &zv);
  _271 = parallel.jsta_m2;
  _272 = parallel.jend_m2;
  j_273 = _271;
;;    succ:       15

;;   basic block 15, loop depth 1
;;    pred:       14
;;                31
  # j_234 = PHI <j_273(14), j_313(31)>
  _274 = j_234 > _272;
  if (_274 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 16>; [INV]
;;    succ:       32
;;                16

;;   basic block 16, loop depth 1
;;    pred:       15
  i_275 = 2;
;;    succ:       17

;;   basic block 17, loop depth 2
;;    pred:       16
;;                30
  # i_231 = PHI <i_275(16), i_312(30)>
  _276 = i_231 > 118;
  if (_276 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       31
;;                18

;;   basic block 18, loop depth 2
;;    pred:       17
  _71 = (integer(kind=8)) j_234;
  _72 = _71 * 119;
  _73 = (integer(kind=8)) i_231;
  _74 = _72 + _73;
  _75 = _74 + -120;
  llmh_277 = loops.lmh[_75];
  _76 = (integer(kind=8)) llmh_277;
  _77 = _76 * 29631;
  _78 = (integer(kind=8)) j_234;
  _79 = _78 * 119;
  _80 = _77 + _79;
  _81 = (integer(kind=8)) i_231;
  _82 = _80 + _81;
  _83 = _82 + -29751;
  _84 = vrbls.u[_83];
  ufal = _84;
  _85 = (integer(kind=8)) llmh_277;
  _86 = _85 * 29631;
  _87 = (integer(kind=8)) j_234;
  _88 = _87 * 119;
  _89 = _86 + _88;
  _90 = (integer(kind=8)) i_231;
  _91 = _89 + _90;
  _92 = _91 + -29751;
  _93 = vrbls.v[_92];
  vfal = _93;
  _94 = (integer(kind=8)) j_234;
  _95 = _94 * 119;
  _96 = (integer(kind=8)) i_231;
  _97 = _95 + _96;
  _98 = _97 + -120;
  _99 = dynam.f[_98];
  _100 = _99 * 2.0e+0;
  _101 = ((_100));
  _102 = ctlblk.dt;
  ftrue_280 = _101 / _102;
  grf_281 = 9.80000019073486328125e+0 / ftrue_280;
  _103 = (integer(kind=8)) j_234;
  _104 = _103 * 119;
  _105 = (integer(kind=8)) j_234;
  _106 = _105 + -1;
  _107 = indx.ihe[_106];
  _108 = i_231 + _107;
  _109 = (integer(kind=8)) _108;
  _110 = _104 + _109;
  _111 = _110 + -120;
  _112 = zv[_111];
  _113 = (integer(kind=8)) j_234;
  _114 = _113 * 119;
  _115 = (integer(kind=8)) j_234;
  _116 = _115 + -1;
  _117 = indx.ihw[_116];
  _118 = i_231 + _117;
  _119 = (integer(kind=8)) _118;
  _120 = _114 + _119;
  _121 = _120 + -120;
  _122 = zv[_121];
  _123 = _112 - _122;
  _124 = ((_123));
  _125 = (integer(kind=8)) j_234;
  _126 = _125 * 119;
  _127 = (integer(kind=8)) i_231;
  _128 = _126 + _127;
  _129 = _128 + -120;
  _130 = dynam.dx[_129];
  _131 = _130 * 2.0e+0;
  _132 = ((_131));
  dzdx_282 = _124 / _132;
  _133 = j_234 + 1;
  _134 = (integer(kind=8)) _133;
  _135 = _134 * 119;
  _136 = (integer(kind=8)) i_231;
  _137 = _135 + _136;
  _138 = _137 + -120;
  _139 = zv[_138];
  _140 = j_234 + -1;
  _141 = (integer(kind=8)) _140;
  _142 = _141 * 119;
  _143 = (integer(kind=8)) i_231;
  _144 = _142 + _143;
  _145 = _144 + -120;
  _146 = zv[_145];
  _147 = _139 - _146;
  _148 = ((_147));
  _149 = dynam.dy;
  _150 = _149 * 2.0e+0;
  _151 = ((_150));
  dzdy_283 = _148 / _151;
  _152 = grf_281 * dzdy_283;
  _153 = (integer(kind=8)) j_234;
  _154 = _153 * 119;
  _155 = (integer(kind=8)) i_231;
  _156 = _154 + _155;
  _157 = _156 + -120;
  _158 = masks.hbm2[_157];
  _159 = _152 * _158;
  _160 = -_159;
  ug = _160;
  _161 = grf_281 * dzdx_282;
  _162 = (integer(kind=8)) j_234;
  _163 = _162 * 119;
  _164 = (integer(kind=8)) i_231;
  _165 = _163 + _164;
  _166 = _165 + -120;
  _167 = masks.hbm2[_166];
  _168 = _161 * _167;
  vg = _168;
  ug.0_169 = ug;
  ug.1_170 = ug;
  _171 = ug.0_169 * ug.1_170;
  vg.2_172 = vg;
  vg.3_173 = vg;
  _174 = vg.2_172 * vg.3_173;
  _175 = _171 + _174;
  spdg_286 = __builtin_sqrtf (_175);
  wdirt_288 = wdir (&ufal, &vfal);
  wdirg_290 = wdir (&ug, &vg);
  _176 = ftrue_280 / 1.0e+1;
  b_291 = __builtin_sqrtf (_176);
  bzmh_292 = b_291 * 2.0e+2;
  if (bzmh_292 > 5.0e+2)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 2
;;    pred:       18
  bzmh_293 = 5.0e+2;
;;    succ:       20

;;   basic block 20, loop depth 2
;;    pred:       18
;;                19
  # bzmh_226 = PHI <bzmh_292(18), bzmh_293(19)>
  if (bzmh_226 < -5.0e+2)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]
;;    succ:       21
;;                22

;;   basic block 21, loop depth 2
;;    pred:       20
  bzmh_294 = -5.0e+2;
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       20
;;                21
  # bzmh_227 = PHI <bzmh_226(20), bzmh_294(21)>
  _177 = -bzmh_227;
  exbzmh_295 = __builtin_expf (_177);
  alphas_296 = 4.5e+1;
  alphas_297 = alphas_296 * deg2rd_243;
  sinalf_298 = __builtin_sinf (alphas_297);
  _178 = d75pi_242 + alphas_297;
  arg_299 = _178 - bzmh_227;
  cosarg_300 = __builtin_cosf (arg_299);
  if (wdirg_290 >= 0.0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]
;;    succ:       23
;;                24

;;   basic block 23, loop depth 2
;;    pred:       22
  if (wdirg_290 <= 9.0e+1)
    goto <bb 26>; [INV]
  else
    goto <bb 24>; [INV]
;;    succ:       26
;;                24

;;   basic block 24, loop depth 2
;;    pred:       22
;;                23
  if (wdirg_290 >= 2.7e+2)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]
;;    succ:       25
;;                27

;;   basic block 25, loop depth 2
;;    pred:       24
  if (wdirg_290 <= 3.6e+2)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]
;;    succ:       26
;;                27

;;   basic block 26, loop depth 2
;;    pred:       23
;;                25
  cosarg_301 = -cosarg_300;
;;    succ:       27

;;   basic block 27, loop depth 2
;;    pred:       24
;;                25
;;                26
  # cosarg_228 = PHI <cosarg_300(24), cosarg_300(25), cosarg_301(26)>
  _179 = sqrt2_244 * spdg_286;
  _180 = sinalf_298 * _179;
  _181 = exbzmh_295 * _180;
  _182 = cosarg_228 * _181;
  ug.4_183 = ug;
  _184 = (integer(kind=8)) j_234;
  _185 = _184 * 119;
  _186 = (integer(kind=8)) i_231;
  _187 = _185 + _186;
  _188 = _187 + -120;
  _189 = _182 + ug.4_183;
  *u1d_252(D)[_188] = _189;
  alphas_303 = 4.5e+1;
  alphas_304 = alphas_303 * deg2rd_243;
  sinalf_305 = __builtin_sinf (alphas_304);
  _190 = d75pi_242 + alphas_304;
  arg_306 = _190 - bzmh_227;
  sinarg_307 = __builtin_sinf (arg_306);
  if (wdirg_290 >= 0.0)
    goto <bb 28>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       28
;;                30

;;   basic block 28, loop depth 2
;;    pred:       27
  if (wdirg_290 <= 1.8e+2)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       29
;;                30

;;   basic block 29, loop depth 2
;;    pred:       28
  sinarg_308 = -sinarg_307;
;;    succ:       30

;;   basic block 30, loop depth 2
;;    pred:       27
;;                28
;;                29
  # sinarg_235 = PHI <sinarg_307(27), sinarg_307(28), sinarg_308(29)>
  _191 = sqrt2_244 * spdg_286;
  _192 = sinalf_305 * _191;
  _193 = exbzmh_295 * _192;
  _194 = sinarg_235 * _193;
  vg.5_195 = vg;
  _196 = (integer(kind=8)) j_234;
  _197 = _196 * 119;
  _198 = (integer(kind=8)) i_231;
  _199 = _197 + _198;
  _200 = _199 + -120;
  _201 = _194 + vg.5_195;
  *v1d_254(D)[_200] = _201;
  _202 = (integer(kind=8)) j_234;
  _203 = _202 * 119;
  _204 = (integer(kind=8)) i_231;
  _205 = _203 + _204;
  _206 = _205 + -120;
  _207 = *u1d_252(D)[_206];
  _208 = (integer(kind=8)) j_234;
  _209 = _208 * 119;
  _210 = (integer(kind=8)) i_231;
  _211 = _209 + _210;
  _212 = _211 + -120;
  _213 = _207 * 5.0e-1;
  *u1d_252(D)[_212] = _213;
  _214 = (integer(kind=8)) j_234;
  _215 = _214 * 119;
  _216 = (integer(kind=8)) i_231;
  _217 = _215 + _216;
  _218 = _217 + -120;
  _219 = *v1d_254(D)[_218];
  _220 = (integer(kind=8)) j_234;
  _221 = _220 * 119;
  _222 = (integer(kind=8)) i_231;
  _223 = _221 + _222;
  _224 = _223 + -120;
  _225 = _219 * 5.0e-1;
  *v1d_254(D)[_224] = _225;
  i_312 = i_231 + 1;
  goto <bb 17>; [INV]
;;    succ:       17

;;   basic block 31, loop depth 1
;;    pred:       17
  j_313 = j_234 + 1;
  goto <bb 15>; [INV]
;;    succ:       15

;;   basic block 32, loop depth 0
;;    pred:       15
;;    succ:       33

;;   basic block 33, loop depth 0
;;    pred:       32
  ufal ={v} {CLOBBER};
  ug ={v} {CLOBBER};
  vfal ={v} {CLOBBER};
  vg ={v} {CLOBBER};
;;    succ:       34

;;   basic block 34, loop depth 0
;;    pred:       33
<L45>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (_101 - 101 )
Partition 102 (_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )
Partition 112 (_112 - 112 )
Partition 113 (_113 - 113 )
Partition 114 (_114 - 114 )
Partition 115 (_115 - 115 )
Partition 116 (_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (_120 - 120 )
Partition 121 (_121 - 121 )
Partition 122 (_122 - 122 )
Partition 123 (_123 - 123 )
Partition 124 (_124 - 124 )
Partition 125 (_125 - 125 )
Partition 126 (_126 - 126 )
Partition 127 (_127 - 127 )
Partition 128 (_128 - 128 )
Partition 129 (_129 - 129 )
Partition 130 (_130 - 130 )
Partition 131 (_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (_133 - 133 )
Partition 134 (_134 - 134 )
Partition 135 (_135 - 135 )
Partition 136 (_136 - 136 )
Partition 137 (_137 - 137 )
Partition 138 (_138 - 138 )
Partition 139 (_139 - 139 )
Partition 140 (_140 - 140 )
Partition 141 (_141 - 141 )
Partition 142 (_142 - 142 )
Partition 143 (_143 - 143 )
Partition 144 (_144 - 144 )
Partition 145 (_145 - 145 )
Partition 146 (_146 - 146 )
Partition 147 (_147 - 147 )
Partition 148 (_148 - 148 )
Partition 149 (_149 - 149 )
Partition 150 (_150 - 150 )
Partition 151 (_151 - 151 )
Partition 152 (_152 - 152 )
Partition 153 (_153 - 153 )
Partition 154 (_154 - 154 )
Partition 155 (_155 - 155 )
Partition 156 (_156 - 156 )
Partition 157 (_157 - 157 )
Partition 158 (_158 - 158 )
Partition 159 (_159 - 159 )
Partition 160 (_160 - 160 )
Partition 161 (_161 - 161 )
Partition 162 (_162 - 162 )
Partition 163 (_163 - 163 )
Partition 164 (_164 - 164 )
Partition 165 (_165 - 165 )
Partition 166 (_166 - 166 )
Partition 167 (_167 - 167 )
Partition 168 (_168 - 168 )
Partition 169 (ug.0_169 - 169 )
Partition 170 (ug.1_170 - 170 )
Partition 171 (_171 - 171 )
Partition 172 (vg.2_172 - 172 )
Partition 173 (vg.3_173 - 173 )
Partition 174 (_174 - 174 )
Partition 175 (_175 - 175 )
Partition 176 (_176 - 176 )
Partition 177 (_177 - 177 )
Partition 178 (_178 - 178 )
Partition 179 (_179 - 179 )
Partition 180 (_180 - 180 )
Partition 181 (_181 - 181 )
Partition 182 (_182 - 182 )
Partition 183 (ug.4_183 - 183 )
Partition 184 (_184 - 184 )
Partition 185 (_185 - 185 )
Partition 186 (_186 - 186 )
Partition 187 (_187 - 187 )
Partition 188 (_188 - 188 )
Partition 189 (_189 - 189 )
Partition 190 (_190 - 190 )
Partition 191 (_191 - 191 )
Partition 192 (_192 - 192 )
Partition 193 (_193 - 193 )
Partition 194 (_194 - 194 )
Partition 195 (vg.5_195 - 195 )
Partition 196 (_196 - 196 )
Partition 197 (_197 - 197 )
Partition 198 (_198 - 198 )
Partition 199 (_199 - 199 )
Partition 200 (_200 - 200 )
Partition 201 (_201 - 201 )
Partition 202 (_202 - 202 )
Partition 203 (_203 - 203 )
Partition 204 (_204 - 204 )
Partition 205 (_205 - 205 )
Partition 206 (_206 - 206 )
Partition 207 (_207 - 207 )
Partition 208 (_208 - 208 )
Partition 209 (_209 - 209 )
Partition 210 (_210 - 210 )
Partition 211 (_211 - 211 )
Partition 212 (_212 - 212 )
Partition 213 (_213 - 213 )
Partition 214 (_214 - 214 )
Partition 215 (_215 - 215 )
Partition 216 (_216 - 216 )
Partition 217 (_217 - 217 )
Partition 218 (_218 - 218 )
Partition 219 (_219 - 219 )
Partition 220 (_220 - 220 )
Partition 221 (_221 - 221 )
Partition 222 (_222 - 222 )
Partition 223 (_223 - 223 )
Partition 224 (_224 - 224 )
Partition 225 (_225 - 225 )
Partition 226 (bzmh_226 - 226 )
Partition 227 (bzmh_227 - 227 )
Partition 228 (cosarg_228 - 228 )
Partition 229 (i_229 - 229 )
Partition 230 (i_230 - 230 )
Partition 231 (i_231 - 231 )
Partition 232 (j_232 - 232 )
Partition 233 (j_233 - 233 )
Partition 234 (j_234 - 234 )
Partition 235 (sinarg_235 - 235 )
Partition 242 (d75pi_242 - 242 )
Partition 243 (deg2rd_243 - 243 )
Partition 244 (sqrt2_244 - 244 )
Partition 246 (_246 - 246 )
Partition 247 (_247 - 247 )
Partition 248 (j_248 - 248 )
Partition 249 (_249 - 249 )
Partition 250 (i_250 - 250 )
Partition 251 (_251 - 251 )
Partition 252 (u1d_252(D) - 252 )
Partition 254 (v1d_254(D) - 254 )
Partition 258 (i_258 - 258 )
Partition 259 (j_259 - 259 )
Partition 261 (_261 - 261 )
Partition 262 (_262 - 262 )
Partition 263 (j_263 - 263 )
Partition 264 (_264 - 264 )
Partition 265 (i_265 - 265 )
Partition 266 (_266 - 266 )
Partition 268 (i_268 - 268 )
Partition 269 (j_269 - 269 )
Partition 271 (_271 - 271 )
Partition 272 (_272 - 272 )
Partition 273 (j_273 - 273 )
Partition 274 (_274 - 274 )
Partition 275 (i_275 - 275 )
Partition 276 (_276 - 276 )
Partition 277 (llmh_277 - 277 )
Partition 280 (ftrue_280 - 280 )
Partition 281 (grf_281 - 281 )
Partition 282 (dzdx_282 - 282 )
Partition 283 (dzdy_283 - 283 )
Partition 286 (spdg_286 - 286 )
Partition 288 (wdirt_288 - 288 )
Partition 290 (wdirg_290 - 290 )
Partition 291 (b_291 - 291 )
Partition 292 (bzmh_292 - 292 )
Partition 293 (bzmh_293 - 293 )
Partition 294 (bzmh_294 - 294 )
Partition 295 (exbzmh_295 - 295 )
Partition 296 (alphas_296 - 296 )
Partition 297 (alphas_297 - 297 )
Partition 298 (sinalf_298 - 298 )
Partition 299 (arg_299 - 299 )
Partition 300 (cosarg_300 - 300 )
Partition 301 (cosarg_301 - 301 )
Partition 303 (alphas_303 - 303 )
Partition 304 (alphas_304 - 304 )
Partition 305 (sinalf_305 - 305 )
Partition 306 (arg_306 - 306 )
Partition 307 (sinarg_307 - 307 )
Partition 308 (sinarg_308 - 308 )
Partition 312 (i_312 - 312 )
Partition 313 (j_313 - 313 )


Coalescible Partition map 

Partition 0, base 0 (bzmh_226 - 226 227 292 293 294 )
Partition 2, base 1 (cosarg_228 - 228 300 301 )
Partition 3, base 2 (i_229 - 229 230 231 250 258 265 268 275 312 )
Partition 6, base 3 (j_232 - 232 233 234 248 259 263 269 273 313 )
Partition 9, base 4 (sinarg_235 - 235 307 308 )
Partition 12, base 5 (u1d_252(D) - 252 )
Partition 13, base 6 (v1d_254(D) - 254 )
Partition 25, base 7 (alphas_296 - 296 297 303 304 )
Partition 27, base 8 (sinalf_298 - 298 305 )
Partition 28, base 9 (arg_299 - 299 306 )


Partition map 

Partition 0 (bzmh_226 - 226 )
Partition 1 (bzmh_227 - 227 )
Partition 2 (cosarg_228 - 228 )
Partition 3 (i_229 - 229 )
Partition 4 (i_230 - 230 )
Partition 5 (i_231 - 231 )
Partition 6 (j_232 - 232 )
Partition 7 (j_233 - 233 )
Partition 8 (j_234 - 234 )
Partition 9 (sinarg_235 - 235 )
Partition 10 (j_248 - 248 )
Partition 11 (i_250 - 250 )
Partition 12 (u1d_252(D) - 252 )
Partition 13 (v1d_254(D) - 254 )
Partition 14 (i_258 - 258 )
Partition 15 (j_259 - 259 )
Partition 16 (j_263 - 263 )
Partition 17 (i_265 - 265 )
Partition 18 (i_268 - 268 )
Partition 19 (j_269 - 269 )
Partition 20 (j_273 - 273 )
Partition 21 (i_275 - 275 )
Partition 22 (bzmh_292 - 292 )
Partition 23 (bzmh_293 - 293 )
Partition 24 (bzmh_294 - 294 )
Partition 25 (alphas_296 - 296 )
Partition 26 (alphas_297 - 297 )
Partition 27 (sinalf_298 - 298 )
Partition 28 (arg_299 - 299 )
Partition 29 (cosarg_300 - 300 )
Partition 30 (cosarg_301 - 301 )
Partition 31 (alphas_303 - 303 )
Partition 32 (alphas_304 - 304 )
Partition 33 (sinalf_305 - 305 )
Partition 34 (arg_306 - 306 )
Partition 35 (sinarg_307 - 307 )
Partition 36 (sinarg_308 - 308 )
Partition 37 (i_312 - 312 )
Partition 38 (j_313 - 313 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) j_232 <-> j_248
(2147483646, 0) j_232 <-> j_259
(2147483646, 0) i_229 <-> i_250
(2147483646, 0) i_229 <-> i_258
(2147483646, 0) bzmh_226 <-> bzmh_292
(2147483646, 0) bzmh_226 <-> bzmh_293
(2147483646, 0) bzmh_226 <-> bzmh_227
(2147483646, 0) cosarg_228 <-> cosarg_300
(2147483646, 0) cosarg_228 <-> cosarg_301
(2147483646, 0) sinarg_235 <-> sinarg_307
(2147483646, 0) sinarg_235 <-> sinarg_308
(2147483646, 0) i_229 <-> i_230
(2147483646, 0) i_229 <-> i_231
(2147483646, 0) j_232 <-> j_233
(2147483646, 0) j_232 <-> j_234
(2147483646, 0) j_232 <-> j_263
(2147483646, 0) i_229 <-> i_265
(2147483646, 0) i_229 <-> i_268
(2147483646, 0) j_232 <-> j_269
(2147483646, 0) j_232 <-> j_273
(2147483646, 0) i_229 <-> i_275
(2147483646, 0) bzmh_226 <-> bzmh_294
(2147483646, 0) alphas_296 <-> alphas_297
(2147483646, 0) alphas_296 <-> alphas_303
(2147483646, 0) alphas_296 <-> alphas_304
(2147483646, 0) sinalf_298 <-> sinalf_305
(2147483646, 0) arg_299 <-> arg_306
(2147483646, 0) i_229 <-> i_312
(2147483646, 0) j_232 <-> j_313
(10000, 0) j_233 <-> j_263
(10000, 0) j_233 <-> j_269
(10000, 0) i_230 <-> i_265
(10000, 0) i_230 <-> i_268
(10000, 0) j_234 <-> j_273
(10000, 0) j_234 <-> j_313
(10000, 0) i_231 <-> i_275
(10000, 0) i_231 <-> i_312
(10000, 0) bzmh_227 <-> bzmh_294

Partition map 

Partition 0 (bzmh_226 - 226 )
Partition 1 (bzmh_227 - 227 )
Partition 2 (cosarg_228 - 228 )
Partition 3 (i_229 - 229 )
Partition 4 (i_230 - 230 )
Partition 5 (i_231 - 231 )
Partition 6 (j_232 - 232 )
Partition 7 (j_233 - 233 )
Partition 8 (j_234 - 234 )
Partition 9 (sinarg_235 - 235 )
Partition 10 (j_248 - 248 )
Partition 11 (i_250 - 250 )
Partition 12 (u1d_252(D) - 252 )
Partition 13 (v1d_254(D) - 254 )
Partition 14 (i_258 - 258 )
Partition 15 (j_259 - 259 )
Partition 16 (j_263 - 263 )
Partition 17 (i_265 - 265 )
Partition 18 (i_268 - 268 )
Partition 19 (j_269 - 269 )
Partition 20 (j_273 - 273 )
Partition 21 (i_275 - 275 )
Partition 22 (bzmh_292 - 292 )
Partition 23 (bzmh_293 - 293 )
Partition 24 (bzmh_294 - 294 )
Partition 25 (alphas_296 - 296 )
Partition 26 (alphas_297 - 297 )
Partition 27 (sinalf_298 - 298 )
Partition 28 (arg_299 - 299 )
Partition 29 (cosarg_300 - 300 )
Partition 30 (cosarg_301 - 301 )
Partition 31 (alphas_303 - 303 )
Partition 32 (alphas_304 - 304 )
Partition 33 (sinalf_305 - 305 )
Partition 34 (arg_306 - 306 )
Partition 35 (sinarg_307 - 307 )
Partition 36 (sinarg_308 - 308 )
Partition 37 (i_312 - 312 )
Partition 38 (j_313 - 313 )

Coalesce list: (232)j_232 & (248)j_248 [map: 6, 10] : Success -> 6
Coalesce list: (232)j_232 & (259)j_259 [map: 6, 15] : Success -> 6
Coalesce list: (229)i_229 & (250)i_250 [map: 3, 11] : Success -> 3
Coalesce list: (229)i_229 & (258)i_258 [map: 3, 14] : Success -> 3
Coalesce list: (226)bzmh_226 & (292)bzmh_292 [map: 0, 22] : Success -> 0
Coalesce list: (226)bzmh_226 & (293)bzmh_293 [map: 0, 23] : Success -> 0
Coalesce list: (226)bzmh_226 & (227)bzmh_227 [map: 0, 1] : Success -> 0
Coalesce list: (228)cosarg_228 & (300)cosarg_300 [map: 2, 29] : Success -> 2
Coalesce list: (228)cosarg_228 & (301)cosarg_301 [map: 2, 30] : Success -> 2
Coalesce list: (235)sinarg_235 & (307)sinarg_307 [map: 9, 35] : Success -> 9
Coalesce list: (235)sinarg_235 & (308)sinarg_308 [map: 9, 36] : Success -> 9
Coalesce list: (229)i_229 & (230)i_230 [map: 3, 4] : Success -> 3
Coalesce list: (229)i_229 & (231)i_231 [map: 3, 5] : Success -> 3
Coalesce list: (232)j_232 & (233)j_233 [map: 6, 7] : Success -> 6
Coalesce list: (232)j_232 & (234)j_234 [map: 6, 8] : Success -> 6
Coalesce list: (232)j_232 & (263)j_263 [map: 6, 16] : Success -> 6
Coalesce list: (229)i_229 & (265)i_265 [map: 3, 17] : Success -> 3
Coalesce list: (229)i_229 & (268)i_268 [map: 3, 18] : Success -> 3
Coalesce list: (232)j_232 & (269)j_269 [map: 6, 19] : Success -> 6
Coalesce list: (232)j_232 & (273)j_273 [map: 6, 20] : Success -> 6
Coalesce list: (229)i_229 & (275)i_275 [map: 3, 21] : Success -> 3
Coalesce list: (226)bzmh_226 & (294)bzmh_294 [map: 0, 24] : Success -> 0
Coalesce list: (296)alphas_296 & (297)alphas_297 [map: 25, 26] : Success -> 25
Coalesce list: (296)alphas_296 & (303)alphas_303 [map: 25, 31] : Success -> 25
Coalesce list: (296)alphas_296 & (304)alphas_304 [map: 25, 32] : Success -> 25
Coalesce list: (298)sinalf_298 & (305)sinalf_305 [map: 27, 33] : Success -> 27
Coalesce list: (299)arg_299 & (306)arg_306 [map: 28, 34] : Success -> 28
Coalesce list: (229)i_229 & (312)i_312 [map: 3, 37] : Success -> 3
Coalesce list: (232)j_232 & (313)j_313 [map: 6, 38] : Success -> 6
Coalesce list: (233)j_232 & (263)j_232: Already Coalesced.
Coalesce list: (233)j_232 & (269)j_232: Already Coalesced.
Coalesce list: (230)i_229 & (265)i_229: Already Coalesced.
Coalesce list: (230)i_229 & (268)i_229: Already Coalesced.
Coalesce list: (234)j_232 & (273)j_232: Already Coalesced.
Coalesce list: (234)j_232 & (313)j_232: Already Coalesced.
Coalesce list: (231)i_229 & (275)i_229: Already Coalesced.
Coalesce list: (231)i_229 & (312)i_229: Already Coalesced.
Coalesce list: (227)bzmh_226 & (294)bzmh_226: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (_72 - 72 )
Partition 72 (_73 - 73 )
Partition 73 (_74 - 74 )
Partition 74 (_75 - 75 )
Partition 75 (_76 - 76 )
Partition 76 (_77 - 77 )
Partition 77 (_78 - 78 )
Partition 78 (_79 - 79 )
Partition 79 (_80 - 80 )
Partition 80 (_81 - 81 )
Partition 81 (_82 - 82 )
Partition 82 (_83 - 83 )
Partition 83 (_84 - 84 )
Partition 84 (_85 - 85 )
Partition 85 (_86 - 86 )
Partition 86 (_87 - 87 )
Partition 87 (_88 - 88 )
Partition 88 (_89 - 89 )
Partition 89 (_90 - 90 )
Partition 90 (_91 - 91 )
Partition 91 (_92 - 92 )
Partition 92 (_93 - 93 )
Partition 93 (_94 - 94 )
Partition 94 (_95 - 95 )
Partition 95 (_96 - 96 )
Partition 96 (_97 - 97 )
Partition 97 (_98 - 98 )
Partition 98 (_99 - 99 )
Partition 99 (_100 - 100 )
Partition 100 (_101 - 101 )
Partition 101 (_102 - 102 )
Partition 102 (_103 - 103 )
Partition 103 (_104 - 104 )
Partition 104 (_105 - 105 )
Partition 105 (_106 - 106 )
Partition 106 (_107 - 107 )
Partition 107 (_108 - 108 )
Partition 108 (_109 - 109 )
Partition 109 (_110 - 110 )
Partition 110 (_111 - 111 )
Partition 111 (_112 - 112 )
Partition 112 (_113 - 113 )
Partition 113 (_114 - 114 )
Partition 114 (_115 - 115 )
Partition 115 (_116 - 116 )
Partition 116 (_117 - 117 )
Partition 117 (_118 - 118 )
Partition 118 (_119 - 119 )
Partition 119 (_120 - 120 )
Partition 120 (_121 - 121 )
Partition 121 (_122 - 122 )
Partition 122 (_123 - 123 )
Partition 123 (_124 - 124 )
Partition 124 (_125 - 125 )
Partition 125 (_126 - 126 )
Partition 126 (_127 - 127 )
Partition 127 (_128 - 128 )
Partition 128 (_129 - 129 )
Partition 129 (_130 - 130 )
Partition 130 (_131 - 131 )
Partition 131 (_132 - 132 )
Partition 132 (_133 - 133 )
Partition 133 (_134 - 134 )
Partition 134 (_135 - 135 )
Partition 135 (_136 - 136 )
Partition 136 (_137 - 137 )
Partition 137 (_138 - 138 )
Partition 138 (_139 - 139 )
Partition 139 (_140 - 140 )
Partition 140 (_141 - 141 )
Partition 141 (_142 - 142 )
Partition 142 (_143 - 143 )
Partition 143 (_144 - 144 )
Partition 144 (_145 - 145 )
Partition 145 (_146 - 146 )
Partition 146 (_147 - 147 )
Partition 147 (_148 - 148 )
Partition 148 (_149 - 149 )
Partition 149 (_150 - 150 )
Partition 150 (_151 - 151 )
Partition 151 (_152 - 152 )
Partition 152 (_153 - 153 )
Partition 153 (_154 - 154 )
Partition 154 (_155 - 155 )
Partition 155 (_156 - 156 )
Partition 156 (_157 - 157 )
Partition 157 (_158 - 158 )
Partition 158 (_159 - 159 )
Partition 159 (_160 - 160 )
Partition 160 (_161 - 161 )
Partition 161 (_162 - 162 )
Partition 162 (_163 - 163 )
Partition 163 (_164 - 164 )
Partition 164 (_165 - 165 )
Partition 165 (_166 - 166 )
Partition 166 (_167 - 167 )
Partition 167 (_168 - 168 )
Partition 168 (ug.0_169 - 169 )
Partition 169 (ug.1_170 - 170 )
Partition 170 (_171 - 171 )
Partition 171 (vg.2_172 - 172 )
Partition 172 (vg.3_173 - 173 )
Partition 173 (_174 - 174 )
Partition 174 (_175 - 175 )
Partition 175 (_176 - 176 )
Partition 176 (_177 - 177 )
Partition 177 (_178 - 178 )
Partition 178 (_179 - 179 )
Partition 179 (_180 - 180 )
Partition 180 (_181 - 181 )
Partition 181 (_182 - 182 )
Partition 182 (ug.4_183 - 183 )
Partition 183 (_184 - 184 )
Partition 184 (_185 - 185 )
Partition 185 (_186 - 186 )
Partition 186 (_187 - 187 )
Partition 187 (_188 - 188 )
Partition 188 (_189 - 189 )
Partition 189 (_190 - 190 )
Partition 190 (_191 - 191 )
Partition 191 (_192 - 192 )
Partition 192 (_193 - 193 )
Partition 193 (_194 - 194 )
Partition 194 (vg.5_195 - 195 )
Partition 195 (_196 - 196 )
Partition 196 (_197 - 197 )
Partition 197 (_198 - 198 )
Partition 198 (_199 - 199 )
Partition 199 (_200 - 200 )
Partition 200 (_201 - 201 )
Partition 201 (_202 - 202 )
Partition 202 (_203 - 203 )
Partition 203 (_204 - 204 )
Partition 204 (_205 - 205 )
Partition 205 (_206 - 206 )
Partition 206 (_207 - 207 )
Partition 207 (_208 - 208 )
Partition 208 (_209 - 209 )
Partition 209 (_210 - 210 )
Partition 210 (_211 - 211 )
Partition 211 (_212 - 212 )
Partition 212 (_213 - 213 )
Partition 213 (_214 - 214 )
Partition 214 (_215 - 215 )
Partition 215 (_216 - 216 )
Partition 216 (_217 - 217 )
Partition 217 (_218 - 218 )
Partition 218 (_219 - 219 )
Partition 219 (_220 - 220 )
Partition 220 (_221 - 221 )
Partition 221 (_222 - 222 )
Partition 222 (_223 - 223 )
Partition 223 (_224 - 224 )
Partition 224 (_225 - 225 )
Partition 225 (bzmh_226 - 226 227 292 293 294 )
Partition 226 (cosarg_228 - 228 300 301 )
Partition 227 (i_229 - 229 230 231 250 258 265 268 275 312 )
Partition 228 (j_232 - 232 233 234 248 259 263 269 273 313 )
Partition 229 (sinarg_235 - 235 307 308 )
Partition 230 (d75pi_242 - 242 )
Partition 231 (deg2rd_243 - 243 )
Partition 232 (sqrt2_244 - 244 )
Partition 233 (_246 - 246 )
Partition 234 (_247 - 247 )
Partition 235 (_249 - 249 )
Partition 236 (_251 - 251 )
Partition 237 (u1d_252(D) - 252 )
Partition 238 (v1d_254(D) - 254 )
Partition 239 (_261 - 261 )
Partition 240 (_262 - 262 )
Partition 241 (_264 - 264 )
Partition 242 (_266 - 266 )
Partition 243 (_271 - 271 )
Partition 244 (_272 - 272 )
Partition 245 (_274 - 274 )
Partition 246 (_276 - 276 )
Partition 247 (llmh_277 - 277 )
Partition 248 (ftrue_280 - 280 )
Partition 249 (grf_281 - 281 )
Partition 250 (dzdx_282 - 282 )
Partition 251 (dzdy_283 - 283 )
Partition 252 (spdg_286 - 286 )
Partition 253 (wdirt_288 - 288 )
Partition 254 (wdirg_290 - 290 )
Partition 255 (b_291 - 291 )
Partition 256 (exbzmh_295 - 295 )
Partition 257 (alphas_296 - 296 297 303 304 )
Partition 258 (sinalf_298 - 298 305 )
Partition 259 (arg_299 - 299 306 )

calekm (real(kind=4)[29631] * restrict u1d, real(kind=4)[29631] * restrict v1d)
{
  logical(kind=4) D.4203;
  logical(kind=4) D.4200;
  integer(kind=4) D.4197;
  integer(kind=4) D.4196;
  logical(kind=4) D.4193;
  logical(kind=4) D.4190;
  integer(kind=4) D.4187;
  integer(kind=4) D.4186;
  logical(kind=4) D.4183;
  logical(kind=4) D.4180;
  integer(kind=4) D.4177;
  integer(kind=4) D.4176;
  static real(kind=4) zv[29631];
  static real(kind=4) zh[29631];
  real(kind=4) wdirt;
  real(kind=4) wdirg;
  real(kind=4) vg;
  real(kind=4) vfal;
  real(kind=4) ug;
  real(kind=4) ufal;
  real(kind=4) sqrt2;
  real(kind=4) spdg;
  real(kind=4) sinarg;
  real(kind=4) sinalf;
  integer(kind=4) llmh;
  integer(kind=4) j;
  integer(kind=4) i;
  real(kind=4) grf;
  real(kind=4) ftrue;
  real(kind=4) exbzmh;
  real(kind=4) dzdy;
  real(kind=4) dzdx;
  real(kind=4) deg2rd;
  real(kind=4) d75pi;
  real(kind=4) cosarg;
  real(kind=4) bzmh;
  real(kind=4) b;
  real(kind=4) arg;
  real(kind=4) alphas;
  static real(kind=4) q[1125978] [value-expr: vrbls.q];
  static real(kind=4) t[1125978] [value-expr: vrbls.t];
  static real(kind=4) v[1125978] [value-expr: vrbls.v];
  static real(kind=4) u[1125978] [value-expr: vrbls.u];
  static real(kind=4) fis[29631] [value-expr: vrbls.fis];
  static real(kind=4) res[29631] [value-expr: vrbls.res];
  static real(kind=4) pd[29631] [value-expr: vrbls.pd];
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static real(kind=4) vtm[1125978] [value-expr: masks.vtm];
  static real(kind=4) htm[1125978] [value-expr: masks.htm];
  static real(kind=4) sice[29631] [value-expr: masks.sice];
  static real(kind=4) sm[29631] [value-expr: masks.sm];
  static real(kind=4) vbm3[29631] [value-expr: masks.vbm3];
  static real(kind=4) vbm2[29631] [value-expr: masks.vbm2];
  static real(kind=4) hbm2[29631] [value-expr: masks.hbm2];
  static integer(kind=4) nunit [value-expr: mapot.nunit];
  static integer(kind=4) iunit [value-expr: mapot.iunit];
  static integer(kind=4) munit [value-expr: mapot.munit];
  static integer(kind=4) lunit [value-expr: mapot.lunit];
  static integer(kind=4) kunit [value-expr: mapot.kunit];
  static real(kind=4) sphi0 [value-expr: mapot.sphi0];
  static real(kind=4) cphi0 [value-expr: mapot.cphi0];
  static real(kind=4) erlam0 [value-expr: mapot.erlam0];
  static real(kind=4) tshde[999999] [value-expr: mapot.tshde];
  static real(kind=4) eta[39] [value-expr: mapot.eta];
  static real(kind=4) aeta[38] [value-expr: mapot.aeta];
  static real(kind=4) deta[38] [value-expr: mapot.deta];
  static real(kind=4) alsl[22] [value-expr: mapot.alsl];
  static real(kind=4) spl[22] [value-expr: mapot.spl];
  static real(kind=4) z0slp [value-expr: mapot.z0slp];
  static real(kind=4) dislp [value-expr: mapot.dislp];
  static real(kind=4) y1p [value-expr: mapot.y1p];
  static real(kind=4) x1p [value-expr: mapot.x1p];
  static real(kind=4) dp30 [value-expr: mapot.dp30];
  static real(kind=4) cmld [value-expr: mapot.cmld];
  static real(kind=4) dphd [value-expr: mapot.dphd];
  static real(kind=4) dlmd [value-expr: mapot.dlmd];
  static real(kind=4) tph0d [value-expr: mapot.tph0d];
  static real(kind=4) tlm0d [value-expr: mapot.tlm0d];
  static real(kind=4) sbd [value-expr: mapot.sbd];
  static real(kind=4) wbd [value-expr: mapot.wbd];
  static real(kind=4) tsph [value-expr: mapot.tsph];
  static real(kind=4) pt [value-expr: mapot.pt];
  static real(kind=4) r [value-expr: mapot.r];
  static integer(kind=4) ishde[999999] [value-expr: mapot.ishde];
  static integer(kind=4) iym [value-expr: mapot.iym];
  static integer(kind=4) ixm [value-expr: mapot.ixm];
  static integer(kind=4) lsl [value-expr: mapot.lsl];
  static integer(kind=4) lmv[29631] [value-expr: loops.lmv];
  static integer(kind=4) lmh[29631] [value-expr: loops.lmh];
  static integer(kind=4) jra[484] [value-expr: loops.jra];
  static integer(kind=4) ivha[484] [value-expr: loops.ivha];
  static integer(kind=4) ivla[484] [value-expr: loops.ivla];
  static integer(kind=4) ihha[484] [value-expr: loops.ihha];
  static integer(kind=4) ihla[484] [value-expr: loops.ihla];
  static integer(kind=4) ivw[249] [value-expr: indx.ivw];
  static integer(kind=4) ive[249] [value-expr: indx.ive];
  static integer(kind=4) ihw[249] [value-expr: indx.ihw];
  static integer(kind=4) ihe[249] [value-expr: indx.ihe];
  static integer(kind=4) maxwv[29631] [value-expr: extra.maxwv];
  static integer(kind=4) maxwu[29631] [value-expr: extra.maxwu];
  static real(kind=4) tlmax[29631] [value-expr: extra.tlmax];
  static real(kind=4) tlmin[29631] [value-expr: extra.tlmin];
  static real(kind=4) stdrd [value-expr: extra.stdrd];
  static real(kind=4) oldrd [value-expr: extra.oldrd];
  static real(kind=4) z1000[29631] [value-expr: extra.z1000];
  static real(kind=4) qsl[29631] [value-expr: extra.qsl];
  static real(kind=4) fsl[29631] [value-expr: extra.fsl];
  static real(kind=4) ttv[29631] [value-expr: extra.ttv];
  static real(kind=4) tsl[29631] [value-expr: extra.tsl];
  static real(kind=4) pfsl[29631] [value-expr: extra.pfsl];
  static real(kind=4) ptsl[29631] [value-expr: extra.ptsl];
  static real(kind=4) pslp[29631] [value-expr: extra.pslp];
  static real(kind=4) pdvp1[29631] [value-expr: extra.pdvp1];
  static real(kind=4) pdsl[29631] [value-expr: extra.pdsl];
  static real(kind=4) t500[29631] [value-expr: extra.t500];
  static real(kind=4) slp[29631] [value-expr: extra.slp];
  static integer(kind=4) kmnt[1121266] [value-expr: extra.kmnt];
  static integer(kind=4) kmntm[38] [value-expr: extra.kmntm];
  static real(kind=4) zint[1155609] [value-expr: extra.zint];
  static real(kind=4) alpint[1155609] [value-expr: extra.alpint];
  static real(kind=4) pint[1155609] [value-expr: extra.pint];
  static real(kind=4) ddmpv[29631] [value-expr: dynam.ddmpv];
  static real(kind=4) ddmpu[29631] [value-expr: dynam.ddmpu];
  static real(kind=4) f[29631] [value-expr: dynam.f];
  static real(kind=4) fad[29631] [value-expr: dynam.fad];
  static real(kind=4) fdiv[29631] [value-expr: dynam.fdiv];
  static real(kind=4) fcp[29631] [value-expr: dynam.fcp];
  static real(kind=4) curv[29631] [value-expr: dynam.curv];
  static real(kind=4) cpgfu[29631] [value-expr: dynam.cpgfu];
  static real(kind=4) wpdar[29631] [value-expr: dynam.wpdar];
  static real(kind=4) dx[29631] [value-expr: dynam.dx];
  static real(kind=4) emt[484] [value-expr: dynam.emt];
  static real(kind=4) em[484] [value-expr: dynam.em];
  static real(kind=4) dfl[39] [value-expr: dynam.dfl];
  static real(kind=4) etad[39] [value-expr: dynam.etad];
  static real(kind=4) f4q2[38] [value-expr: dynam.f4q2];
  static real(kind=4) aetad[38] [value-expr: dynam.aetad];
  static real(kind=4) rdeta[38] [value-expr: dynam.rdeta];
  static real(kind=4) detad[38] [value-expr: dynam.detad];
  static real(kind=4) ef4t [value-expr: dynam.ef4t];
  static real(kind=4) f4q [value-expr: dynam.f4q];
  static real(kind=4) f4d [value-expr: dynam.f4d];
  static real(kind=4) ptdyn [value-expr: dynam.ptdyn];
  static real(kind=4) rdyn [value-expr: dynam.rdyn];
  static real(kind=4) ent [value-expr: dynam.ent];
  static real(kind=4) en [value-expr: dynam.en];
  static real(kind=4) cpgfv [value-expr: dynam.cpgfv];
  static real(kind=4) dy [value-expr: dynam.dy];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=8) _1;
  integer(kind=8) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  integer(kind=8) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  integer(kind=8) _12;
  integer(kind=8) _13;
  integer(kind=8) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  real(kind=4) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  integer(kind=8) _24;
  integer(kind=8) _25;
  integer(kind=8) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  integer(kind=4) _31;
  integer(kind=4) _32;
  integer(kind=8) _33;
  integer(kind=8) _34;
  integer(kind=8) _35;
  real(kind=4) _36;
  integer(kind=8) _37;
  integer(kind=8) _38;
  integer(kind=8) _39;
  integer(kind=8) _40;
  integer(kind=4) _41;
  integer(kind=4) _42;
  integer(kind=8) _43;
  integer(kind=8) _44;
  integer(kind=8) _45;
  real(kind=4) _46;
  real(kind=4) _47;
  integer(kind=4) _48;
  integer(kind=8) _49;
  integer(kind=8) _50;
  integer(kind=8) _51;
  integer(kind=8) _52;
  integer(kind=8) _53;
  real(kind=4) _54;
  real(kind=4) _55;
  integer(kind=4) _56;
  integer(kind=8) _57;
  integer(kind=8) _58;
  integer(kind=8) _59;
  integer(kind=8) _60;
  integer(kind=8) _61;
  real(kind=4) _62;
  real(kind=4) _63;
  real(kind=4) _64;
  integer(kind=8) _65;
  integer(kind=8) _66;
  integer(kind=8) _67;
  integer(kind=8) _68;
  integer(kind=8) _69;
  real(kind=4) _70;
  integer(kind=8) _71;
  integer(kind=8) _72;
  integer(kind=8) _73;
  integer(kind=8) _74;
  integer(kind=8) _75;
  integer(kind=8) _76;
  integer(kind=8) _77;
  integer(kind=8) _78;
  integer(kind=8) _79;
  integer(kind=8) _80;
  integer(kind=8) _81;
  integer(kind=8) _82;
  integer(kind=8) _83;
  real(kind=4) _84;
  integer(kind=8) _85;
  integer(kind=8) _86;
  integer(kind=8) _87;
  integer(kind=8) _88;
  integer(kind=8) _89;
  integer(kind=8) _90;
  integer(kind=8) _91;
  integer(kind=8) _92;
  real(kind=4) _93;
  integer(kind=8) _94;
  integer(kind=8) _95;
  integer(kind=8) _96;
  integer(kind=8) _97;
  integer(kind=8) _98;
  real(kind=4) _99;
  real(kind=4) _100;
  real(kind=4) _101;
  real(kind=4) _102;
  integer(kind=8) _103;
  integer(kind=8) _104;
  integer(kind=8) _105;
  integer(kind=8) _106;
  integer(kind=4) _107;
  integer(kind=4) _108;
  integer(kind=8) _109;
  integer(kind=8) _110;
  integer(kind=8) _111;
  real(kind=4) _112;
  integer(kind=8) _113;
  integer(kind=8) _114;
  integer(kind=8) _115;
  integer(kind=8) _116;
  integer(kind=4) _117;
  integer(kind=4) _118;
  integer(kind=8) _119;
  integer(kind=8) _120;
  integer(kind=8) _121;
  real(kind=4) _122;
  real(kind=4) _123;
  real(kind=4) _124;
  integer(kind=8) _125;
  integer(kind=8) _126;
  integer(kind=8) _127;
  integer(kind=8) _128;
  integer(kind=8) _129;
  real(kind=4) _130;
  real(kind=4) _131;
  real(kind=4) _132;
  integer(kind=4) _133;
  integer(kind=8) _134;
  integer(kind=8) _135;
  integer(kind=8) _136;
  integer(kind=8) _137;
  integer(kind=8) _138;
  real(kind=4) _139;
  integer(kind=4) _140;
  integer(kind=8) _141;
  integer(kind=8) _142;
  integer(kind=8) _143;
  integer(kind=8) _144;
  integer(kind=8) _145;
  real(kind=4) _146;
  real(kind=4) _147;
  real(kind=4) _148;
  real(kind=4) _149;
  real(kind=4) _150;
  real(kind=4) _151;
  real(kind=4) _152;
  integer(kind=8) _153;
  integer(kind=8) _154;
  integer(kind=8) _155;
  integer(kind=8) _156;
  integer(kind=8) _157;
  real(kind=4) _158;
  real(kind=4) _159;
  real(kind=4) _160;
  real(kind=4) _161;
  integer(kind=8) _162;
  integer(kind=8) _163;
  integer(kind=8) _164;
  integer(kind=8) _165;
  integer(kind=8) _166;
  real(kind=4) _167;
  real(kind=4) _168;
  real(kind=4) ug.0_169;
  real(kind=4) ug.1_170;
  real(kind=4) _171;
  real(kind=4) vg.2_172;
  real(kind=4) vg.3_173;
  real(kind=4) _174;
  real(kind=4) _175;
  real(kind=4) _176;
  real(kind=4) _177;
  real(kind=4) _178;
  real(kind=4) _179;
  real(kind=4) _180;
  real(kind=4) _181;
  real(kind=4) _182;
  real(kind=4) ug.4_183;
  integer(kind=8) _184;
  integer(kind=8) _185;
  integer(kind=8) _186;
  integer(kind=8) _187;
  integer(kind=8) _188;
  real(kind=4) _189;
  real(kind=4) _190;
  real(kind=4) _191;
  real(kind=4) _192;
  real(kind=4) _193;
  real(kind=4) _194;
  real(kind=4) vg.5_195;
  integer(kind=8) _196;
  integer(kind=8) _197;
  integer(kind=8) _198;
  integer(kind=8) _199;
  integer(kind=8) _200;
  real(kind=4) _201;
  integer(kind=8) _202;
  integer(kind=8) _203;
  integer(kind=8) _204;
  integer(kind=8) _205;
  integer(kind=8) _206;
  real(kind=4) _207;
  integer(kind=8) _208;
  integer(kind=8) _209;
  integer(kind=8) _210;
  integer(kind=8) _211;
  integer(kind=8) _212;
  real(kind=4) _213;
  integer(kind=8) _214;
  integer(kind=8) _215;
  integer(kind=8) _216;
  integer(kind=8) _217;
  integer(kind=8) _218;
  real(kind=4) _219;
  integer(kind=8) _220;
  integer(kind=8) _221;
  integer(kind=8) _222;
  integer(kind=8) _223;
  integer(kind=8) _224;
  real(kind=4) _225;
  integer(kind=4) _246;
  integer(kind=4) _247;
  logical(kind=4) _249;
  logical(kind=4) _251;
  integer(kind=4) _261;
  integer(kind=4) _262;
  logical(kind=4) _264;
  logical(kind=4) _266;
  integer(kind=4) _271;
  integer(kind=4) _272;
  logical(kind=4) _274;
  logical(kind=4) _276;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  d75pi_242 = 2.35619449615478515625e+0;
  deg2rd_243 = 1.745329238474369049072265625e-2;
  sqrt2_244 = 1.41421353816986083984375e+0;
  _246 = parallel.jsta;
  _247 = parallel.jend;
  j_248 = _246;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # j_232 = PHI <j_248(2), j_259(7)>
  _249 = j_232 > _247;
  if (_249 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_250 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                6
  # i_229 = PHI <i_250(4), i_258(6)>
  _251 = i_229 > 119;
  if (_251 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _1 = (integer(kind=8)) j_232;
  _2 = _1 * 119;
  _3 = (integer(kind=8)) i_229;
  _4 = _2 + _3;
  _5 = _4 + -120;
  *u1d_252(D)[_5] = 0.0;
  _6 = (integer(kind=8)) j_232;
  _7 = _6 * 119;
  _8 = (integer(kind=8)) i_229;
  _9 = _7 + _8;
  _10 = _9 + -120;
  *v1d_254(D)[_10] = 0.0;
  _11 = (integer(kind=8)) j_232;
  _12 = _11 * 119;
  _13 = (integer(kind=8)) i_229;
  _14 = _12 + _13;
  _15 = _14 + -120;
  _16 = (integer(kind=8)) j_232;
  _17 = _16 * 119;
  _18 = (integer(kind=8)) i_229;
  _19 = _17 + _18;
  _20 = _19 + -120;
  _21 = extra.z1000[_15];
  zh[_20] = _21;
  _22 = (integer(kind=8)) j_232;
  _23 = _22 * 119;
  _24 = (integer(kind=8)) i_229;
  _25 = _23 + _24;
  _26 = _25 + -120;
  zv[_26] = 0.0;
  i_258 = i_229 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       5
  j_259 = j_232 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       3
  p2filt (&C.4184, &masks.hbm2, &zh);
  _261 = parallel.jsta_m;
  _262 = parallel.jend_m;
  j_263 = _261;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       8
;;                13
  # j_233 = PHI <j_263(8), j_269(13)>
  _264 = j_233 > _262;
  if (_264 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       14
;;                10

;;   basic block 10, loop depth 1
;;    pred:       9
  i_265 = 2;
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_230 = PHI <i_265(10), i_268(12)>
  _266 = i_230 > 118;
  if (_266 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       13
;;                12

;;   basic block 12, loop depth 2
;;    pred:       11
  _27 = (integer(kind=8)) j_233;
  _28 = _27 * 119;
  _29 = (integer(kind=8)) j_233;
  _30 = _29 + -1;
  _31 = indx.ive[_30];
  _32 = i_230 + _31;
  _33 = (integer(kind=8)) _32;
  _34 = _28 + _33;
  _35 = _34 + -120;
  _36 = zh[_35];
  _37 = (integer(kind=8)) j_233;
  _38 = _37 * 119;
  _39 = (integer(kind=8)) j_233;
  _40 = _39 + -1;
  _41 = indx.ivw[_40];
  _42 = i_230 + _41;
  _43 = (integer(kind=8)) _42;
  _44 = _38 + _43;
  _45 = _44 + -120;
  _46 = zh[_45];
  _47 = _36 + _46;
  _48 = j_233 + 1;
  _49 = (integer(kind=8)) _48;
  _50 = _49 * 119;
  _51 = (integer(kind=8)) i_230;
  _52 = _50 + _51;
  _53 = _52 + -120;
  _54 = zh[_53];
  _55 = _47 + _54;
  _56 = j_233 + -1;
  _57 = (integer(kind=8)) _56;
  _58 = _57 * 119;
  _59 = (integer(kind=8)) i_230;
  _60 = _58 + _59;
  _61 = _60 + -120;
  _62 = zh[_61];
  _63 = _55 + _62;
  _64 = ((_63));
  _65 = (integer(kind=8)) j_233;
  _66 = _65 * 119;
  _67 = (integer(kind=8)) i_230;
  _68 = _66 + _67;
  _69 = _68 + -120;
  _70 = _64 * 2.5e-1;
  zv[_69] = _70;
  i_268 = i_230 + 1;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 13, loop depth 1
;;    pred:       11
  j_269 = j_233 + 1;
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 14, loop depth 0
;;    pred:       9
  p2fltv (&C.4194, &masks.vbm2, &zv);
  _271 = parallel.jsta_m2;
  _272 = parallel.jend_m2;
  j_273 = _271;
;;    succ:       15

;;   basic block 15, loop depth 1
;;    pred:       14
;;                31
  # j_234 = PHI <j_273(14), j_313(31)>
  _274 = j_234 > _272;
  if (_274 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 16>; [INV]
;;    succ:       32
;;                16

;;   basic block 16, loop depth 1
;;    pred:       15
  i_275 = 2;
;;    succ:       17

;;   basic block 17, loop depth 2
;;    pred:       16
;;                30
  # i_231 = PHI <i_275(16), i_312(30)>
  _276 = i_231 > 118;
  if (_276 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       31
;;                18

;;   basic block 18, loop depth 2
;;    pred:       17
  _71 = (integer(kind=8)) j_234;
  _72 = _71 * 119;
  _73 = (integer(kind=8)) i_231;
  _74 = _72 + _73;
  _75 = _74 + -120;
  llmh_277 = loops.lmh[_75];
  _76 = (integer(kind=8)) llmh_277;
  _77 = _76 * 29631;
  _78 = (integer(kind=8)) j_234;
  _79 = _78 * 119;
  _80 = _77 + _79;
  _81 = (integer(kind=8)) i_231;
  _82 = _80 + _81;
  _83 = _82 + -29751;
  _84 = vrbls.u[_83];
  ufal = _84;
  _85 = (integer(kind=8)) llmh_277;
  _86 = _85 * 29631;
  _87 = (integer(kind=8)) j_234;
  _88 = _87 * 119;
  _89 = _86 + _88;
  _90 = (integer(kind=8)) i_231;
  _91 = _89 + _90;
  _92 = _91 + -29751;
  _93 = vrbls.v[_92];
  vfal = _93;
  _94 = (integer(kind=8)) j_234;
  _95 = _94 * 119;
  _96 = (integer(kind=8)) i_231;
  _97 = _95 + _96;
  _98 = _97 + -120;
  _99 = dynam.f[_98];
  _100 = _99 * 2.0e+0;
  _101 = ((_100));
  _102 = ctlblk.dt;
  ftrue_280 = _101 / _102;
  grf_281 = 9.80000019073486328125e+0 / ftrue_280;
  _103 = (integer(kind=8)) j_234;
  _104 = _103 * 119;
  _105 = (integer(kind=8)) j_234;
  _106 = _105 + -1;
  _107 = indx.ihe[_106];
  _108 = i_231 + _107;
  _109 = (integer(kind=8)) _108;
  _110 = _104 + _109;
  _111 = _110 + -120;
  _112 = zv[_111];
  _113 = (integer(kind=8)) j_234;
  _114 = _113 * 119;
  _115 = (integer(kind=8)) j_234;
  _116 = _115 + -1;
  _117 = indx.ihw[_116];
  _118 = i_231 + _117;
  _119 = (integer(kind=8)) _118;
  _120 = _114 + _119;
  _121 = _120 + -120;
  _122 = zv[_121];
  _123 = _112 - _122;
  _124 = ((_123));
  _125 = (integer(kind=8)) j_234;
  _126 = _125 * 119;
  _127 = (integer(kind=8)) i_231;
  _128 = _126 + _127;
  _129 = _128 + -120;
  _130 = dynam.dx[_129];
  _131 = _130 * 2.0e+0;
  _132 = ((_131));
  dzdx_282 = _124 / _132;
  _133 = j_234 + 1;
  _134 = (integer(kind=8)) _133;
  _135 = _134 * 119;
  _136 = (integer(kind=8)) i_231;
  _137 = _135 + _136;
  _138 = _137 + -120;
  _139 = zv[_138];
  _140 = j_234 + -1;
  _141 = (integer(kind=8)) _140;
  _142 = _141 * 119;
  _143 = (integer(kind=8)) i_231;
  _144 = _142 + _143;
  _145 = _144 + -120;
  _146 = zv[_145];
  _147 = _139 - _146;
  _148 = ((_147));
  _149 = dynam.dy;
  _150 = _149 * 2.0e+0;
  _151 = ((_150));
  dzdy_283 = _148 / _151;
  _152 = grf_281 * dzdy_283;
  _153 = (integer(kind=8)) j_234;
  _154 = _153 * 119;
  _155 = (integer(kind=8)) i_231;
  _156 = _154 + _155;
  _157 = _156 + -120;
  _158 = masks.hbm2[_157];
  _159 = _152 * _158;
  _160 = -_159;
  ug = _160;
  _161 = grf_281 * dzdx_282;
  _162 = (integer(kind=8)) j_234;
  _163 = _162 * 119;
  _164 = (integer(kind=8)) i_231;
  _165 = _163 + _164;
  _166 = _165 + -120;
  _167 = masks.hbm2[_166];
  _168 = _161 * _167;
  vg = _168;
  ug.0_169 = ug;
  ug.1_170 = ug;
  _171 = ug.0_169 * ug.1_170;
  vg.2_172 = vg;
  vg.3_173 = vg;
  _174 = vg.2_172 * vg.3_173;
  _175 = _171 + _174;
  spdg_286 = __builtin_sqrtf (_175);
  wdirt_288 = wdir (&ufal, &vfal);
  wdirg_290 = wdir (&ug, &vg);
  _176 = ftrue_280 / 1.0e+1;
  b_291 = __builtin_sqrtf (_176);
  bzmh_292 = b_291 * 2.0e+2;
  if (bzmh_292 > 5.0e+2)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 2
;;    pred:       18
  bzmh_293 = 5.0e+2;
;;    succ:       20

;;   basic block 20, loop depth 2
;;    pred:       18
;;                19
  # bzmh_226 = PHI <bzmh_292(18), bzmh_293(19)>
  if (bzmh_226 < -5.0e+2)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]
;;    succ:       21
;;                22

;;   basic block 21, loop depth 2
;;    pred:       20
  bzmh_294 = -5.0e+2;
;;    succ:       22

;;   basic block 22, loop depth 2
;;    pred:       20
;;                21
  # bzmh_227 = PHI <bzmh_226(20), bzmh_294(21)>
  _177 = -bzmh_227;
  exbzmh_295 = __builtin_expf (_177);
  alphas_296 = 4.5e+1;
  alphas_297 = alphas_296 * deg2rd_243;
  sinalf_298 = __builtin_sinf (alphas_297);
  _178 = d75pi_242 + alphas_297;
  arg_299 = _178 - bzmh_227;
  cosarg_300 = __builtin_cosf (arg_299);
  if (wdirg_290 >= 0.0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]
;;    succ:       23
;;                24

;;   basic block 23, loop depth 2
;;    pred:       22
  if (wdirg_290 <= 9.0e+1)
    goto <bb 26>; [INV]
  else
    goto <bb 24>; [INV]
;;    succ:       26
;;                24

;;   basic block 24, loop depth 2
;;    pred:       22
;;                23
  if (wdirg_290 >= 2.7e+2)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]
;;    succ:       25
;;                27

;;   basic block 25, loop depth 2
;;    pred:       24
  if (wdirg_290 <= 3.6e+2)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]
;;    succ:       26
;;                27

;;   basic block 26, loop depth 2
;;    pred:       23
;;                25
  cosarg_301 = -cosarg_300;
;;    succ:       27

;;   basic block 27, loop depth 2
;;    pred:       24
;;                25
;;                26
  # cosarg_228 = PHI <cosarg_300(24), cosarg_300(25), cosarg_301(26)>
  _179 = sqrt2_244 * spdg_286;
  _180 = sinalf_298 * _179;
  _181 = exbzmh_295 * _180;
  _182 = cosarg_228 * _181;
  ug.4_183 = ug;
  _184 = (integer(kind=8)) j_234;
  _185 = _184 * 119;
  _186 = (integer(kind=8)) i_231;
  _187 = _185 + _186;
  _188 = _187 + -120;
  _189 = _182 + ug.4_183;
  *u1d_252(D)[_188] = _189;
  alphas_303 = 4.5e+1;
  alphas_304 = alphas_303 * deg2rd_243;
  sinalf_305 = __builtin_sinf (alphas_304);
  _190 = d75pi_242 + alphas_304;
  arg_306 = _190 - bzmh_227;
  sinarg_307 = __builtin_sinf (arg_306);
  if (wdirg_290 >= 0.0)
    goto <bb 28>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       28
;;                30

;;   basic block 28, loop depth 2
;;    pred:       27
  if (wdirg_290 <= 1.8e+2)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       29
;;                30

;;   basic block 29, loop depth 2
;;    pred:       28
  sinarg_308 = -sinarg_307;
;;    succ:       30

;;   basic block 30, loop depth 2
;;    pred:       27
;;                28
;;                29
  # sinarg_235 = PHI <sinarg_307(27), sinarg_307(28), sinarg_308(29)>
  _191 = sqrt2_244 * spdg_286;
  _192 = sinalf_305 * _191;
  _193 = exbzmh_295 * _192;
  _194 = sinarg_235 * _193;
  vg.5_195 = vg;
  _196 = (integer(kind=8)) j_234;
  _197 = _196 * 119;
  _198 = (integer(kind=8)) i_231;
  _199 = _197 + _198;
  _200 = _199 + -120;
  _201 = _194 + vg.5_195;
  *v1d_254(D)[_200] = _201;
  _202 = (integer(kind=8)) j_234;
  _203 = _202 * 119;
  _204 = (integer(kind=8)) i_231;
  _205 = _203 + _204;
  _206 = _205 + -120;
  _207 = *u1d_252(D)[_206];
  _208 = (integer(kind=8)) j_234;
  _209 = _208 * 119;
  _210 = (integer(kind=8)) i_231;
  _211 = _209 + _210;
  _212 = _211 + -120;
  _213 = _207 * 5.0e-1;
  *u1d_252(D)[_212] = _213;
  _214 = (integer(kind=8)) j_234;
  _215 = _214 * 119;
  _216 = (integer(kind=8)) i_231;
  _217 = _215 + _216;
  _218 = _217 + -120;
  _219 = *v1d_254(D)[_218];
  _220 = (integer(kind=8)) j_234;
  _221 = _220 * 119;
  _222 = (integer(kind=8)) i_231;
  _223 = _221 + _222;
  _224 = _223 + -120;
  _225 = _219 * 5.0e-1;
  *v1d_254(D)[_224] = _225;
  i_312 = i_231 + 1;
  goto <bb 17>; [INV]
;;    succ:       17

;;   basic block 31, loop depth 1
;;    pred:       17
  j_313 = j_234 + 1;
  goto <bb 15>; [INV]
;;    succ:       15

;;   basic block 32, loop depth 0
;;    pred:       15
;;    succ:       33

;;   basic block 33, loop depth 0
;;    pred:       32
  ufal ={v} {CLOBBER};
  ug ={v} {CLOBBER};
  vfal ={v} {CLOBBER};
  vg ={v} {CLOBBER};
;;    succ:       34

;;   basic block 34, loop depth 0
;;    pred:       33
<L45>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; d75pi_242 = 2.35619449615478515625e+0;

(insn 7 6 8 (set (reg:SF 324)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALEKM.f":77 -1
     (nil))

(insn 8 7 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 d75pi+0 S4 A32])
        (reg:SF 324)) "CALEKM.f":77 -1
     (nil))

;; deg2rd_243 = 1.745329238474369049072265625e-2;

(insn 9 8 10 (set (reg:SF 325)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALEKM.f":78 -1
     (nil))

(insn 10 9 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 deg2rd+0 S4 A32])
        (reg:SF 325)) "CALEKM.f":78 -1
     (nil))

;; sqrt2_244 = 1.41421353816986083984375e+0;

(insn 11 10 12 (set (reg:SF 326)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALEKM.f":79 -1
     (nil))

(insn 12 11 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 sqrt2+0 S4 A32])
        (reg:SF 326)) "CALEKM.f":79 -1
     (nil))

;; _246 = parallel.jsta;

(insn 13 12 0 (set (reg:SI 312 [ _246 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9243e3a5a0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CALEKM.f":84 -1
     (nil))

;; _247 = parallel.jend;

(insn 14 13 0 (set (reg:SI 313 [ _247 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9243e3a5a0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CALEKM.f":84 -1
     (nil))

;; j_248 = _246;

(insn 15 14 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
        (reg:SI 312 [ _246 ])) "CALEKM.f":84 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _249 = j_232 > _247;

(insn 17 16 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (reg:SI 313 [ _247 ]))) "CALEKM.f":84 -1
     (nil))

(insn 18 17 19 (set (reg:QI 327)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALEKM.f":84 -1
     (nil))

(insn 19 18 0 (set (reg:SI 314 [ _249 ])
        (zero_extend:SI (reg:QI 327))) "CALEKM.f":84 -1
     (nil))

;; if (_249 != 0)

(insn 20 19 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 314 [ _249 ])
            (const_int 0 [0]))) "CALEKM.f":84 -1
     (nil))

(jump_insn 21 20 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALEKM.f":84 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; i_250 = 1;

(insn 23 22 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CALEKM.f":85 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _251 = i_229 > 119;

(insn 25 24 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALEKM.f":85 -1
     (nil))

(insn 26 25 27 (set (reg:QI 328)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALEKM.f":85 -1
     (nil))

(insn 27 26 0 (set (reg:SI 315 [ _251 ])
        (zero_extend:SI (reg:QI 328))) "CALEKM.f":85 -1
     (nil))

;; if (_251 != 0)

(insn 28 27 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 315 [ _251 ])
            (const_int 0 [0]))) "CALEKM.f":85 -1
     (nil))

(jump_insn 29 28 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALEKM.f":85 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _1 = (integer(kind=8)) j_232;

(insn 31 30 32 (set (reg:SI 329)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":86 -1
     (nil))

(insn 32 31 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 329))) "CALEKM.f":86 -1
     (nil))

;; _2 = _1 * 119;

(insn 33 32 0 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":86 -1
     (nil))

;; _3 = (integer(kind=8)) i_229;

(insn 34 33 35 (set (reg:SI 330)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":86 -1
     (nil))

(insn 35 34 0 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 330))) "CALEKM.f":86 -1
     (nil))

;; _4 = _2 + _3;

(insn 36 35 0 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":86 -1
     (nil))

;; _5 = _4 + -120;

(insn 37 36 0 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":86 -1
     (nil))

;; *u1d_252(D)[_5] = 0.0;

(insn 38 37 39 (set (reg/f:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 u1d+0 S8 A64])) "CALEKM.f":86 -1
     (nil))

(insn 39 38 40 (set (reg:SF 332)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALEKM.f":86 -1
     (nil))

(insn 40 39 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 91 [ _5 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 331)) [1 *u1d_252(D) S4 A32])
        (reg:SF 332)) "CALEKM.f":86 -1
     (nil))

;; _6 = (integer(kind=8)) j_232;

(insn 41 40 42 (set (reg:SI 333)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":87 -1
     (nil))

(insn 42 41 0 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 333))) "CALEKM.f":87 -1
     (nil))

;; _7 = _6 * 119;

(insn 43 42 0 (parallel [
            (set (reg:DI 93 [ _7 ])
                (mult:DI (reg:DI 92 [ _6 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":87 -1
     (nil))

;; _8 = (integer(kind=8)) i_229;

(insn 44 43 45 (set (reg:SI 334)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":87 -1
     (nil))

(insn 45 44 0 (set (reg:DI 94 [ _8 ])
        (sign_extend:DI (reg:SI 334))) "CALEKM.f":87 -1
     (nil))

;; _9 = _7 + _8;

(insn 46 45 0 (parallel [
            (set (reg:DI 95 [ _9 ])
                (plus:DI (reg:DI 93 [ _7 ])
                    (reg:DI 94 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":87 -1
     (nil))

;; _10 = _9 + -120;

(insn 47 46 0 (parallel [
            (set (reg:DI 96 [ _10 ])
                (plus:DI (reg:DI 95 [ _9 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":87 -1
     (nil))

;; *v1d_254(D)[_10] = 0.0;

(insn 48 47 49 (set (reg/f:DI 335)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 v1d+0 S8 A64])) "CALEKM.f":87 -1
     (nil))

(insn 49 48 50 (set (reg:SF 336)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALEKM.f":87 -1
     (nil))

(insn 50 49 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 96 [ _10 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 335)) [1 *v1d_254(D) S4 A32])
        (reg:SF 336)) "CALEKM.f":87 -1
     (nil))

;; _11 = (integer(kind=8)) j_232;

(insn 51 50 52 (set (reg:SI 337)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":88 -1
     (nil))

(insn 52 51 0 (set (reg:DI 97 [ _11 ])
        (sign_extend:DI (reg:SI 337))) "CALEKM.f":88 -1
     (nil))

;; _12 = _11 * 119;

(insn 53 52 0 (parallel [
            (set (reg:DI 98 [ _12 ])
                (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))

;; _13 = (integer(kind=8)) i_229;

(insn 54 53 55 (set (reg:SI 338)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":88 -1
     (nil))

(insn 55 54 0 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 338))) "CALEKM.f":88 -1
     (nil))

;; _14 = _12 + _13;

(insn 56 55 0 (parallel [
            (set (reg:DI 100 [ _14 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (reg:DI 99 [ _13 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))

;; _15 = _14 + -120;

(insn 57 56 0 (parallel [
            (set (reg:DI 101 [ _15 ])
                (plus:DI (reg:DI 100 [ _14 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))

;; _16 = (integer(kind=8)) j_232;

(insn 58 57 59 (set (reg:SI 339)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":88 -1
     (nil))

(insn 59 58 0 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 339))) "CALEKM.f":88 -1
     (nil))

;; _17 = _16 * 119;

(insn 60 59 0 (parallel [
            (set (reg:DI 103 [ _17 ])
                (mult:DI (reg:DI 102 [ _16 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))

;; _18 = (integer(kind=8)) i_229;

(insn 61 60 62 (set (reg:SI 340)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":88 -1
     (nil))

(insn 62 61 0 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 340))) "CALEKM.f":88 -1
     (nil))

;; _19 = _17 + _18;

(insn 63 62 0 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))

;; _20 = _19 + -120;

(insn 64 63 0 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))

;; _21 = extra.z1000[_15];

(insn 65 64 66 (set (reg/f:DI 341)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9243e2a870 extra>)) "CALEKM.f":88 -1
     (nil))

(insn 66 65 67 (parallel [
            (set (reg:DI 342)
                (plus:DI (reg:DI 101 [ _15 ])
                    (const_int 4914072 [0x4afb98])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))

(insn 67 66 0 (set (reg:SF 107 [ _21 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 342)
                    (const_int 4 [0x4]))
                (reg/f:DI 341)) [1 extra.z1000 S4 A32])) "CALEKM.f":88 -1
     (nil))

;; zh[_20] = _21;

(insn 68 67 69 (set (reg/f:DI 343)
        (symbol_ref:DI ("zh.4173") [flags 0x202]  <var_decl 0x7f9243e42120 zh>)) "CALEKM.f":88 -1
     (nil))

(insn 69 68 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 343)) [1 zh S4 A32])
        (reg:SF 107 [ _21 ])) "CALEKM.f":88 -1
     (nil))

;; _22 = (integer(kind=8)) j_232;

(insn 70 69 71 (set (reg:SI 344)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":89 -1
     (nil))

(insn 71 70 0 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 344))) "CALEKM.f":89 -1
     (nil))

;; _23 = _22 * 119;

(insn 72 71 0 (parallel [
            (set (reg:DI 109 [ _23 ])
                (mult:DI (reg:DI 108 [ _22 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":89 -1
     (nil))

;; _24 = (integer(kind=8)) i_229;

(insn 73 72 74 (set (reg:SI 345)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":89 -1
     (nil))

(insn 74 73 0 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 345))) "CALEKM.f":89 -1
     (nil))

;; _25 = _23 + _24;

(insn 75 74 0 (parallel [
            (set (reg:DI 111 [ _25 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (reg:DI 110 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":89 -1
     (nil))

;; _26 = _25 + -120;

(insn 76 75 0 (parallel [
            (set (reg:DI 112 [ _26 ])
                (plus:DI (reg:DI 111 [ _25 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":89 -1
     (nil))

;; zv[_26] = 0.0;

(insn 77 76 78 (set (reg/f:DI 346)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":89 -1
     (nil))

(insn 78 77 79 (set (reg:SF 347)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALEKM.f":89 -1
     (nil))

(insn 79 78 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 112 [ _26 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 346)) [1 zv S4 A32])
        (reg:SF 347)) "CALEKM.f":89 -1
     (nil))

;; i_258 = i_229 + 1;

(insn 80 79 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":85 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 84 83 85 3 (nil) [0 uses])

(note 85 84 0 NOTE_INSN_BASIC_BLOCK)

;; j_259 = j_232 + 1;

(insn 86 85 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":84 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 90 89 91 2 (nil) [0 uses])

(note 91 90 0 NOTE_INSN_BASIC_BLOCK)

;; p2filt (&C.4184, &masks.hbm2, &zh);

(insn 92 91 93 (set (reg:DI 1 dx)
        (symbol_ref:DI ("zh.4173") [flags 0x202]  <var_decl 0x7f9243e42120 zh>)) "CALEKM.f":97 -1
     (nil))

(insn 93 92 94 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f9243e3a120 masks>)) "CALEKM.f":97 -1
     (nil))

(insn 94 93 95 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f9243e42f30 *.LC4>)) "CALEKM.f":97 -1
     (nil))

(insn 95 94 96 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALEKM.f":97 -1
     (nil))

(call_insn 96 95 0 (call (mem:QI (symbol_ref:DI ("p2filt_") [flags 0x41]  <function_decl 0x7f9243e1a600 p2filt>) [0 p2filt S1 A8])
        (const_int 0 [0])) "CALEKM.f":97 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))

;; _261 = parallel.jsta_m;

(insn 97 96 0 (set (reg:SI 316 [ _261 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9243e3a5a0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "CALEKM.f":99 -1
     (nil))

;; _262 = parallel.jend_m;

(insn 98 97 0 (set (reg:SI 317 [ _262 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9243e3a5a0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "CALEKM.f":99 -1
     (nil))

;; j_263 = _261;

(insn 99 98 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
        (reg:SI 316 [ _261 ])) "CALEKM.f":99 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _264 = j_233 > _262;

(insn 101 100 102 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (reg:SI 317 [ _262 ]))) "CALEKM.f":99 -1
     (nil))

(insn 102 101 103 (set (reg:QI 348)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALEKM.f":99 -1
     (nil))

(insn 103 102 0 (set (reg:SI 318 [ _264 ])
        (zero_extend:SI (reg:QI 348))) "CALEKM.f":99 -1
     (nil))

;; if (_264 != 0)

(insn 104 103 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 318 [ _264 ])
            (const_int 0 [0]))) "CALEKM.f":99 -1
     (nil))

(jump_insn 105 104 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALEKM.f":99 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; i_265 = 2;

(insn 107 106 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALEKM.f":100 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _266 = i_230 > 118;

(insn 109 108 110 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALEKM.f":100 -1
     (nil))

(insn 110 109 111 (set (reg:QI 349)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALEKM.f":100 -1
     (nil))

(insn 111 110 0 (set (reg:SI 319 [ _266 ])
        (zero_extend:SI (reg:QI 349))) "CALEKM.f":100 -1
     (nil))

;; if (_266 != 0)

(insn 112 111 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 319 [ _266 ])
            (const_int 0 [0]))) "CALEKM.f":100 -1
     (nil))

(jump_insn 113 112 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALEKM.f":100 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; _27 = (integer(kind=8)) j_233;

(insn 115 114 116 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))

(insn 116 115 0 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 350))) "CALEKM.f":102 -1
     (nil))

;; _28 = _27 * 119;

(insn 117 116 0 (parallel [
            (set (reg:DI 114 [ _28 ])
                (mult:DI (reg:DI 113 [ _27 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _29 = (integer(kind=8)) j_233;

(insn 118 117 119 (set (reg:SI 351)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))

(insn 119 118 0 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 351))) "CALEKM.f":102 -1
     (nil))

;; _30 = _29 + -1;

(insn 120 119 0 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _31 = indx.ive[_30];

(insn 121 120 122 (parallel [
            (set (reg:DI 352)
                (plus:DI (reg:DI 116 [ _30 ])
                    (const_int 498 [0x1f2])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

(insn 122 121 0 (set (reg:SI 117 [ _31 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 352)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f9243e30630 indx>)) [2 indx.ive S4 A32])) "CALEKM.f":102 -1
     (nil))

;; _32 = i_230 + _31;

(insn 123 122 124 (set (reg:SI 353)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":102 -1
     (nil))

(insn 124 123 0 (parallel [
            (set (reg:SI 118 [ _32 ])
                (plus:SI (reg:SI 117 [ _31 ])
                    (reg:SI 353)))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 117 [ _31 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))

;; _33 = (integer(kind=8)) _32;

(insn 125 124 0 (set (reg:DI 119 [ _33 ])
        (sign_extend:DI (reg:SI 118 [ _32 ]))) "CALEKM.f":102 -1
     (nil))

;; _34 = _28 + _33;

(insn 126 125 0 (parallel [
            (set (reg:DI 120 [ _34 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (reg:DI 119 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _35 = _34 + -120;

(insn 127 126 0 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 120 [ _34 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _36 = zh[_35];

(insn 128 127 129 (set (reg/f:DI 354)
        (symbol_ref:DI ("zh.4173") [flags 0x202]  <var_decl 0x7f9243e42120 zh>)) "CALEKM.f":102 -1
     (nil))

(insn 129 128 0 (set (reg:SF 122 [ _36 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 121 [ _35 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 354)) [1 zh S4 A32])) "CALEKM.f":102 -1
     (nil))

;; _37 = (integer(kind=8)) j_233;

(insn 130 129 131 (set (reg:SI 355)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))

(insn 131 130 0 (set (reg:DI 123 [ _37 ])
        (sign_extend:DI (reg:SI 355))) "CALEKM.f":102 -1
     (nil))

;; _38 = _37 * 119;

(insn 132 131 0 (parallel [
            (set (reg:DI 124 [ _38 ])
                (mult:DI (reg:DI 123 [ _37 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _39 = (integer(kind=8)) j_233;

(insn 133 132 134 (set (reg:SI 356)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))

(insn 134 133 0 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 356))) "CALEKM.f":102 -1
     (nil))

;; _40 = _39 + -1;

(insn 135 134 0 (parallel [
            (set (reg:DI 126 [ _40 ])
                (plus:DI (reg:DI 125 [ _39 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _41 = indx.ivw[_40];

(insn 136 135 137 (parallel [
            (set (reg:DI 357)
                (plus:DI (reg:DI 126 [ _40 ])
                    (const_int 747 [0x2eb])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

(insn 137 136 0 (set (reg:SI 127 [ _41 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 357)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f9243e30630 indx>)) [2 indx.ivw S4 A32])) "CALEKM.f":102 -1
     (nil))

;; _42 = i_230 + _41;

(insn 138 137 139 (set (reg:SI 358)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":102 -1
     (nil))

(insn 139 138 0 (parallel [
            (set (reg:SI 128 [ _42 ])
                (plus:SI (reg:SI 127 [ _41 ])
                    (reg:SI 358)))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 127 [ _41 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))

;; _43 = (integer(kind=8)) _42;

(insn 140 139 0 (set (reg:DI 129 [ _43 ])
        (sign_extend:DI (reg:SI 128 [ _42 ]))) "CALEKM.f":102 -1
     (nil))

;; _44 = _38 + _43;

(insn 141 140 0 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (reg:DI 129 [ _43 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _45 = _44 + -120;

(insn 142 141 0 (parallel [
            (set (reg:DI 131 [ _45 ])
                (plus:DI (reg:DI 130 [ _44 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _46 = zh[_45];

(insn 143 142 144 (set (reg/f:DI 359)
        (symbol_ref:DI ("zh.4173") [flags 0x202]  <var_decl 0x7f9243e42120 zh>)) "CALEKM.f":102 -1
     (nil))

(insn 144 143 0 (set (reg:SF 132 [ _46 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 131 [ _45 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 359)) [1 zh S4 A32])) "CALEKM.f":102 -1
     (nil))

;; _47 = _36 + _46;

(insn 145 144 0 (set (reg:SF 133 [ _47 ])
        (plus:SF (reg:SF 122 [ _36 ])
            (reg:SF 132 [ _46 ]))) "CALEKM.f":102 -1
     (nil))

;; _48 = j_233 + 1;

(insn 146 145 147 (set (reg:SI 360)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))

(insn 147 146 0 (parallel [
            (set (reg:SI 134 [ _48 ])
                (plus:SI (reg:SI 360)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _49 = (integer(kind=8)) _48;

(insn 148 147 0 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 134 [ _48 ]))) "CALEKM.f":102 -1
     (nil))

;; _50 = _49 * 119;

(insn 149 148 0 (parallel [
            (set (reg:DI 136 [ _50 ])
                (mult:DI (reg:DI 135 [ _49 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _51 = (integer(kind=8)) i_230;

(insn 150 149 151 (set (reg:SI 361)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":102 -1
     (nil))

(insn 151 150 0 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 361))) "CALEKM.f":102 -1
     (nil))

;; _52 = _50 + _51;

(insn 152 151 0 (parallel [
            (set (reg:DI 138 [ _52 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _53 = _52 + -120;

(insn 153 152 0 (parallel [
            (set (reg:DI 139 [ _53 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _54 = zh[_53];

(insn 154 153 155 (set (reg/f:DI 362)
        (symbol_ref:DI ("zh.4173") [flags 0x202]  <var_decl 0x7f9243e42120 zh>)) "CALEKM.f":102 -1
     (nil))

(insn 155 154 0 (set (reg:SF 140 [ _54 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 139 [ _53 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 362)) [1 zh S4 A32])) "CALEKM.f":102 -1
     (nil))

;; _55 = _47 + _54;

(insn 156 155 0 (set (reg:SF 141 [ _55 ])
        (plus:SF (reg:SF 133 [ _47 ])
            (reg:SF 140 [ _54 ]))) "CALEKM.f":102 -1
     (nil))

;; _56 = j_233 + -1;

(insn 157 156 158 (set (reg:SI 363)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))

(insn 158 157 0 (parallel [
            (set (reg:SI 142 [ _56 ])
                (plus:SI (reg:SI 363)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; _57 = (integer(kind=8)) _56;

(insn 159 158 0 (set (reg:DI 143 [ _57 ])
        (sign_extend:DI (reg:SI 142 [ _56 ]))) "CALEKM.f":102 -1
     (nil))

;; _58 = _57 * 119;

(insn 160 159 0 (parallel [
            (set (reg:DI 144 [ _58 ])
                (mult:DI (reg:DI 143 [ _57 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _59 = (integer(kind=8)) i_230;

(insn 161 160 162 (set (reg:SI 364)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":102 -1
     (nil))

(insn 162 161 0 (set (reg:DI 145 [ _59 ])
        (sign_extend:DI (reg:SI 364))) "CALEKM.f":102 -1
     (nil))

;; _60 = _58 + _59;

(insn 163 162 0 (parallel [
            (set (reg:DI 146 [ _60 ])
                (plus:DI (reg:DI 144 [ _58 ])
                    (reg:DI 145 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _61 = _60 + -120;

(insn 164 163 0 (parallel [
            (set (reg:DI 147 [ _61 ])
                (plus:DI (reg:DI 146 [ _60 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _62 = zh[_61];

(insn 165 164 166 (set (reg/f:DI 365)
        (symbol_ref:DI ("zh.4173") [flags 0x202]  <var_decl 0x7f9243e42120 zh>)) "CALEKM.f":102 -1
     (nil))

(insn 166 165 0 (set (reg:SF 148 [ _62 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 147 [ _61 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 365)) [1 zh S4 A32])) "CALEKM.f":102 -1
     (nil))

;; _63 = _55 + _62;

(insn 167 166 0 (set (reg:SF 149 [ _63 ])
        (plus:SF (reg:SF 141 [ _55 ])
            (reg:SF 148 [ _62 ]))) "CALEKM.f":102 -1
     (nil))

;; _64 = ((_63));

(insn 168 167 0 (set (reg:SF 150 [ _64 ])
        (reg:SF 149 [ _63 ])) "CALEKM.f":102 -1
     (nil))

;; _65 = (integer(kind=8)) j_233;

(insn 169 168 170 (set (reg:SI 366)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))

(insn 170 169 0 (set (reg:DI 151 [ _65 ])
        (sign_extend:DI (reg:SI 366))) "CALEKM.f":102 -1
     (nil))

;; _66 = _65 * 119;

(insn 171 170 0 (parallel [
            (set (reg:DI 152 [ _66 ])
                (mult:DI (reg:DI 151 [ _65 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _67 = (integer(kind=8)) i_230;

(insn 172 171 173 (set (reg:SI 367)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":102 -1
     (nil))

(insn 173 172 0 (set (reg:DI 153 [ _67 ])
        (sign_extend:DI (reg:SI 367))) "CALEKM.f":102 -1
     (nil))

;; _68 = _66 + _67;

(insn 174 173 0 (parallel [
            (set (reg:DI 154 [ _68 ])
                (plus:DI (reg:DI 152 [ _66 ])
                    (reg:DI 153 [ _67 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _69 = _68 + -120;

(insn 175 174 0 (parallel [
            (set (reg:DI 155 [ _69 ])
                (plus:DI (reg:DI 154 [ _68 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))

;; _70 = _64 * 2.5e-1;

(insn 176 175 177 (set (reg:SF 368)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALEKM.f":102 -1
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))

(insn 177 176 0 (set (reg:SF 156 [ _70 ])
        (mult:SF (reg:SF 150 [ _64 ])
            (reg:SF 368))) "CALEKM.f":102 -1
     (nil))

;; zv[_69] = _70;

(insn 178 177 179 (set (reg/f:DI 369)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":102 -1
     (nil))

(insn 179 178 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 155 [ _69 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 369)) [1 zv S4 A32])
        (reg:SF 156 [ _70 ])) "CALEKM.f":102 -1
     (nil))

;; i_268 = i_230 + 1;

(insn 180 179 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":100 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 184 183 185 7 (nil) [0 uses])

(note 185 184 0 NOTE_INSN_BASIC_BLOCK)

;; j_269 = j_233 + 1;

(insn 186 185 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":99 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 190 189 191 6 (nil) [0 uses])

(note 191 190 0 NOTE_INSN_BASIC_BLOCK)

;; p2fltv (&C.4194, &masks.vbm2, &zv);

(insn 192 191 193 (set (reg:DI 1 dx)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":106 -1
     (nil))

(insn 193 192 194 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f9243e3a120 masks>)
                (const_int 118524 [0x1cefc])))) "CALEKM.f":106 -1
     (nil))

(insn 194 193 195 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f9243e42f30 *.LC4>)) "CALEKM.f":106 -1
     (nil))

(insn 195 194 196 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALEKM.f":106 -1
     (nil))

(call_insn 196 195 0 (call (mem:QI (symbol_ref:DI ("p2fltv_") [flags 0x41]  <function_decl 0x7f9243e1a700 p2fltv>) [0 p2fltv S1 A8])
        (const_int 0 [0])) "CALEKM.f":106 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))

;; _271 = parallel.jsta_m2;

(insn 197 196 0 (set (reg:SI 320 [ _271 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9243e3a5a0 parallel>)
                    (const_int 24 [0x18]))) [2 parallel.jsta_m2+0 S4 A64])) "CALEKM.f":110 -1
     (nil))

;; _272 = parallel.jend_m2;

(insn 198 197 0 (set (reg:SI 321 [ _272 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9243e3a5a0 parallel>)
                    (const_int 28 [0x1c]))) [2 parallel.jend_m2+0 S4 A32])) "CALEKM.f":110 -1
     (nil))

;; j_273 = _271;

(insn 199 198 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
        (reg:SI 320 [ _271 ])) "CALEKM.f":110 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; _274 = j_234 > _272;

(insn 201 200 202 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (reg:SI 321 [ _272 ]))) "CALEKM.f":110 -1
     (nil))

(insn 202 201 203 (set (reg:QI 370)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALEKM.f":110 -1
     (nil))

(insn 203 202 0 (set (reg:SI 322 [ _274 ])
        (zero_extend:SI (reg:QI 370))) "CALEKM.f":110 -1
     (nil))

;; if (_274 != 0)

(insn 204 203 205 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 322 [ _274 ])
            (const_int 0 [0]))) "CALEKM.f":110 -1
     (nil))

(jump_insn 205 204 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALEKM.f":110 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; i_275 = 2;

(insn 207 206 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALEKM.f":111 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; _276 = i_231 > 118;

(insn 209 208 210 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALEKM.f":111 -1
     (nil))

(insn 210 209 211 (set (reg:QI 371)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALEKM.f":111 -1
     (nil))

(insn 211 210 0 (set (reg:SI 323 [ _276 ])
        (zero_extend:SI (reg:QI 371))) "CALEKM.f":111 -1
     (nil))

;; if (_276 != 0)

(insn 212 211 213 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 323 [ _276 ])
            (const_int 0 [0]))) "CALEKM.f":111 -1
     (nil))

(jump_insn 213 212 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALEKM.f":111 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; _71 = (integer(kind=8)) j_234;

(insn 215 214 216 (set (reg:SI 372)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":115 -1
     (nil))

(insn 216 215 0 (set (reg:DI 157 [ _71 ])
        (sign_extend:DI (reg:SI 372))) "CALEKM.f":115 -1
     (nil))

;; _72 = _71 * 119;

(insn 217 216 0 (parallel [
            (set (reg:DI 158 [ _72 ])
                (mult:DI (reg:DI 157 [ _71 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":115 -1
     (nil))

;; _73 = (integer(kind=8)) i_231;

(insn 218 217 219 (set (reg:SI 373)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":115 -1
     (nil))

(insn 219 218 0 (set (reg:DI 159 [ _73 ])
        (sign_extend:DI (reg:SI 373))) "CALEKM.f":115 -1
     (nil))

;; _74 = _72 + _73;

(insn 220 219 0 (parallel [
            (set (reg:DI 160 [ _74 ])
                (plus:DI (reg:DI 158 [ _72 ])
                    (reg:DI 159 [ _73 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":115 -1
     (nil))

;; _75 = _74 + -120;

(insn 221 220 0 (parallel [
            (set (reg:DI 161 [ _75 ])
                (plus:DI (reg:DI 160 [ _74 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":115 -1
     (nil))

;; llmh_277 = loops.lmh[_75];

(insn 222 221 223 (set (reg/f:DI 374)
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9243e30900 loops>)) "CALEKM.f":115 -1
     (nil))

(insn 223 222 224 (parallel [
            (set (reg:DI 375)
                (plus:DI (reg:DI 161 [ _75 ])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":115 -1
     (nil))

(insn 224 223 225 (set (reg:SI 376)
        (mem:SI (plus:DI (mult:DI (reg:DI 375)
                    (const_int 4 [0x4]))
                (reg/f:DI 374)) [2 loops.lmh S4 A32])) "CALEKM.f":115 -1
     (nil))

(insn 225 224 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 llmh+0 S4 A32])
        (reg:SI 376)) "CALEKM.f":115 -1
     (nil))

;; _76 = (integer(kind=8)) llmh_277;

(insn 226 225 227 (set (reg:SI 377)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 llmh+0 S4 A32])) "CALEKM.f":116 -1
     (nil))

(insn 227 226 0 (set (reg:DI 162 [ _76 ])
        (sign_extend:DI (reg:SI 377))) "CALEKM.f":116 -1
     (nil))

;; _77 = _76 * 29631;

(insn 228 227 0 (parallel [
            (set (reg:DI 163 [ _77 ])
                (mult:DI (reg:DI 162 [ _76 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":116 -1
     (nil))

;; _78 = (integer(kind=8)) j_234;

(insn 229 228 230 (set (reg:SI 378)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":116 -1
     (nil))

(insn 230 229 0 (set (reg:DI 164 [ _78 ])
        (sign_extend:DI (reg:SI 378))) "CALEKM.f":116 -1
     (nil))

;; _79 = _78 * 119;

(insn 231 230 0 (parallel [
            (set (reg:DI 165 [ _79 ])
                (mult:DI (reg:DI 164 [ _78 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":116 -1
     (nil))

;; _80 = _77 + _79;

(insn 232 231 0 (parallel [
            (set (reg:DI 166 [ _80 ])
                (plus:DI (reg:DI 163 [ _77 ])
                    (reg:DI 165 [ _79 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":116 -1
     (nil))

;; _81 = (integer(kind=8)) i_231;

(insn 233 232 234 (set (reg:SI 379)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":116 -1
     (nil))

(insn 234 233 0 (set (reg:DI 167 [ _81 ])
        (sign_extend:DI (reg:SI 379))) "CALEKM.f":116 -1
     (nil))

;; _82 = _80 + _81;

(insn 235 234 0 (parallel [
            (set (reg:DI 168 [ _82 ])
                (plus:DI (reg:DI 166 [ _80 ])
                    (reg:DI 167 [ _81 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":116 -1
     (nil))

;; _83 = _82 + -29751;

(insn 236 235 0 (parallel [
            (set (reg:DI 169 [ _83 ])
                (plus:DI (reg:DI 168 [ _82 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":116 -1
     (nil))

;; _84 = vrbls.u[_83];

(insn 237 236 238 (set (reg/f:DI 380)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f9243e3ae10 vrbls>)) "CALEKM.f":116 -1
     (nil))

(insn 238 237 239 (parallel [
            (set (reg:DI 381)
                (plus:DI (reg:DI 169 [ _83 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":116 -1
     (nil))

(insn 239 238 0 (set (reg:SF 170 [ _84 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 381)
                    (const_int 4 [0x4]))
                (reg/f:DI 380)) [1 vrbls.u S4 A32])) "CALEKM.f":116 -1
     (nil))

;; ufal = _84;

(insn 240 239 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [1 ufal+0 S4 A64])
        (reg:SF 170 [ _84 ])) "CALEKM.f":116 -1
     (nil))

;; _85 = (integer(kind=8)) llmh_277;

(insn 241 240 242 (set (reg:SI 382)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 llmh+0 S4 A32])) "CALEKM.f":117 -1
     (nil))

(insn 242 241 0 (set (reg:DI 171 [ _85 ])
        (sign_extend:DI (reg:SI 382))) "CALEKM.f":117 -1
     (nil))

;; _86 = _85 * 29631;

(insn 243 242 0 (parallel [
            (set (reg:DI 172 [ _86 ])
                (mult:DI (reg:DI 171 [ _85 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":117 -1
     (nil))

;; _87 = (integer(kind=8)) j_234;

(insn 244 243 245 (set (reg:SI 383)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":117 -1
     (nil))

(insn 245 244 0 (set (reg:DI 173 [ _87 ])
        (sign_extend:DI (reg:SI 383))) "CALEKM.f":117 -1
     (nil))

;; _88 = _87 * 119;

(insn 246 245 0 (parallel [
            (set (reg:DI 174 [ _88 ])
                (mult:DI (reg:DI 173 [ _87 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":117 -1
     (nil))

;; _89 = _86 + _88;

(insn 247 246 0 (parallel [
            (set (reg:DI 175 [ _89 ])
                (plus:DI (reg:DI 172 [ _86 ])
                    (reg:DI 174 [ _88 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":117 -1
     (nil))

;; _90 = (integer(kind=8)) i_231;

(insn 248 247 249 (set (reg:SI 384)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":117 -1
     (nil))

(insn 249 248 0 (set (reg:DI 176 [ _90 ])
        (sign_extend:DI (reg:SI 384))) "CALEKM.f":117 -1
     (nil))

;; _91 = _89 + _90;

(insn 250 249 0 (parallel [
            (set (reg:DI 177 [ _91 ])
                (plus:DI (reg:DI 175 [ _89 ])
                    (reg:DI 176 [ _90 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":117 -1
     (nil))

;; _92 = _91 + -29751;

(insn 251 250 0 (parallel [
            (set (reg:DI 178 [ _92 ])
                (plus:DI (reg:DI 177 [ _91 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":117 -1
     (nil))

;; _93 = vrbls.v[_92];

(insn 252 251 253 (set (reg/f:DI 385)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f9243e3ae10 vrbls>)) "CALEKM.f":117 -1
     (nil))

(insn 253 252 254 (parallel [
            (set (reg:DI 386)
                (plus:DI (reg:DI 178 [ _92 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":117 -1
     (nil))

(insn 254 253 0 (set (reg:SF 179 [ _93 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 386)
                    (const_int 4 [0x4]))
                (reg/f:DI 385)) [1 vrbls.v S4 A32])) "CALEKM.f":117 -1
     (nil))

;; vfal = _93;

(insn 255 254 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [1 vfal+0 S4 A64])
        (reg:SF 179 [ _93 ])) "CALEKM.f":117 -1
     (nil))

;; _94 = (integer(kind=8)) j_234;

(insn 256 255 257 (set (reg:SI 387)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":125 -1
     (nil))

(insn 257 256 0 (set (reg:DI 180 [ _94 ])
        (sign_extend:DI (reg:SI 387))) "CALEKM.f":125 -1
     (nil))

;; _95 = _94 * 119;

(insn 258 257 0 (parallel [
            (set (reg:DI 181 [ _95 ])
                (mult:DI (reg:DI 180 [ _94 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":125 -1
     (nil))

;; _96 = (integer(kind=8)) i_231;

(insn 259 258 260 (set (reg:SI 388)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":125 -1
     (nil))

(insn 260 259 0 (set (reg:DI 182 [ _96 ])
        (sign_extend:DI (reg:SI 388))) "CALEKM.f":125 -1
     (nil))

;; _97 = _95 + _96;

(insn 261 260 0 (parallel [
            (set (reg:DI 183 [ _97 ])
                (plus:DI (reg:DI 181 [ _95 ])
                    (reg:DI 182 [ _96 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":125 -1
     (nil))

;; _98 = _97 + -120;

(insn 262 261 0 (parallel [
            (set (reg:DI 184 [ _98 ])
                (plus:DI (reg:DI 183 [ _97 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":125 -1
     (nil))

;; _99 = dynam.f[_98];

(insn 263 262 264 (set (reg/f:DI 389)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f9243e23870 dynam>)) "CALEKM.f":125 -1
     (nil))

(insn 264 263 265 (parallel [
            (set (reg:DI 390)
                (plus:DI (reg:DI 184 [ _98 ])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":125 -1
     (nil))

(insn 265 264 0 (set (reg:SF 185 [ _99 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 390)
                    (const_int 4 [0x4]))
                (reg/f:DI 389)) [1 dynam.f S4 A32])) "CALEKM.f":125 -1
     (nil))

;; _100 = _99 * 2.0e+0;

(insn 266 265 0 (set (reg:SF 186 [ _100 ])
        (plus:SF (reg:SF 185 [ _99 ])
            (reg:SF 185 [ _99 ]))) "CALEKM.f":125 -1
     (nil))

;; _101 = ((_100));

(insn 267 266 0 (set (reg:SF 187 [ _101 ])
        (reg:SF 186 [ _100 ])) "CALEKM.f":125 -1
     (nil))

;; _102 = ctlblk.dt;

(insn 268 267 0 (set (reg:SF 188 [ _102 ])
        (mem/c:SF (const:DI (plus:DI (symbol_ref:DI ("ctlblk_") [flags 0x2]  <var_decl 0x7f924ae8dab0 ctlblk>)
                    (const_int 48 [0x30]))) [1 ctlblk.dt+0 S4 A128])) "CALEKM.f":1 -1
     (nil))

;; ftrue_280 = _101 / _102;

(insn 269 268 270 (set (reg:SF 391)
        (div:SF (reg:SF 187 [ _101 ])
            (reg:SF 188 [ _102 ]))) "CALEKM.f":125 -1
     (nil))

(insn 270 269 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 ftrue+0 S4 A32])
        (reg:SF 391)) "CALEKM.f":125 -1
     (nil))

;; grf_281 = 9.80000019073486328125e+0 / ftrue_280;

(insn 271 270 272 (set (reg:SF 393)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALEKM.f":126 -1
     (expr_list:REG_EQUAL (const_double:SF 9.80000019073486328125e+0 [0x0.9ccccdp+4])
        (nil)))

(insn 272 271 273 (set (reg:SF 392)
        (div:SF (reg:SF 393)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [1 ftrue+0 S4 A32]))) "CALEKM.f":126 -1
     (nil))

(insn 273 272 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 grf+0 S4 A32])
        (reg:SF 392)) "CALEKM.f":126 -1
     (nil))

;; _103 = (integer(kind=8)) j_234;

(insn 274 273 275 (set (reg:SI 394)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":127 -1
     (nil))

(insn 275 274 0 (set (reg:DI 189 [ _103 ])
        (sign_extend:DI (reg:SI 394))) "CALEKM.f":127 -1
     (nil))

;; _104 = _103 * 119;

(insn 276 275 0 (parallel [
            (set (reg:DI 190 [ _104 ])
                (mult:DI (reg:DI 189 [ _103 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

;; _105 = (integer(kind=8)) j_234;

(insn 277 276 278 (set (reg:SI 395)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":127 -1
     (nil))

(insn 278 277 0 (set (reg:DI 191 [ _105 ])
        (sign_extend:DI (reg:SI 395))) "CALEKM.f":127 -1
     (nil))

;; _106 = _105 + -1;

(insn 279 278 0 (parallel [
            (set (reg:DI 192 [ _106 ])
                (plus:DI (reg:DI 191 [ _105 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

;; _107 = indx.ihe[_106];

(insn 280 279 0 (set (reg:SI 193 [ _107 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 192 [ _106 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f9243e30630 indx>)) [2 indx.ihe S4 A32])) "CALEKM.f":127 -1
     (nil))

;; _108 = i_231 + _107;

(insn 281 280 282 (set (reg:SI 396)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":127 -1
     (nil))

(insn 282 281 0 (parallel [
            (set (reg:SI 194 [ _108 ])
                (plus:SI (reg:SI 193 [ _107 ])
                    (reg:SI 396)))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 193 [ _107 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))

;; _109 = (integer(kind=8)) _108;

(insn 283 282 0 (set (reg:DI 195 [ _109 ])
        (sign_extend:DI (reg:SI 194 [ _108 ]))) "CALEKM.f":127 -1
     (nil))

;; _110 = _104 + _109;

(insn 284 283 0 (parallel [
            (set (reg:DI 196 [ _110 ])
                (plus:DI (reg:DI 190 [ _104 ])
                    (reg:DI 195 [ _109 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

;; _111 = _110 + -120;

(insn 285 284 0 (parallel [
            (set (reg:DI 197 [ _111 ])
                (plus:DI (reg:DI 196 [ _110 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

;; _112 = zv[_111];

(insn 286 285 287 (set (reg/f:DI 397)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":127 -1
     (nil))

(insn 287 286 0 (set (reg:SF 198 [ _112 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 197 [ _111 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 397)) [1 zv S4 A32])) "CALEKM.f":127 -1
     (nil))

;; _113 = (integer(kind=8)) j_234;

(insn 288 287 289 (set (reg:SI 398)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":127 -1
     (nil))

(insn 289 288 0 (set (reg:DI 199 [ _113 ])
        (sign_extend:DI (reg:SI 398))) "CALEKM.f":127 -1
     (nil))

;; _114 = _113 * 119;

(insn 290 289 0 (parallel [
            (set (reg:DI 200 [ _114 ])
                (mult:DI (reg:DI 199 [ _113 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

;; _115 = (integer(kind=8)) j_234;

(insn 291 290 292 (set (reg:SI 399)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":127 -1
     (nil))

(insn 292 291 0 (set (reg:DI 201 [ _115 ])
        (sign_extend:DI (reg:SI 399))) "CALEKM.f":127 -1
     (nil))

;; _116 = _115 + -1;

(insn 293 292 0 (parallel [
            (set (reg:DI 202 [ _116 ])
                (plus:DI (reg:DI 201 [ _115 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

;; _117 = indx.ihw[_116];

(insn 294 293 295 (parallel [
            (set (reg:DI 400)
                (plus:DI (reg:DI 202 [ _116 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

(insn 295 294 0 (set (reg:SI 203 [ _117 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 400)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f9243e30630 indx>)) [2 indx.ihw S4 A32])) "CALEKM.f":127 -1
     (nil))

;; _118 = i_231 + _117;

(insn 296 295 297 (set (reg:SI 401)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":127 -1
     (nil))

(insn 297 296 0 (parallel [
            (set (reg:SI 204 [ _118 ])
                (plus:SI (reg:SI 203 [ _117 ])
                    (reg:SI 401)))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 203 [ _117 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))

;; _119 = (integer(kind=8)) _118;

(insn 298 297 0 (set (reg:DI 205 [ _119 ])
        (sign_extend:DI (reg:SI 204 [ _118 ]))) "CALEKM.f":127 -1
     (nil))

;; _120 = _114 + _119;

(insn 299 298 0 (parallel [
            (set (reg:DI 206 [ _120 ])
                (plus:DI (reg:DI 200 [ _114 ])
                    (reg:DI 205 [ _119 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

;; _121 = _120 + -120;

(insn 300 299 0 (parallel [
            (set (reg:DI 207 [ _121 ])
                (plus:DI (reg:DI 206 [ _120 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

;; _122 = zv[_121];

(insn 301 300 302 (set (reg/f:DI 402)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":127 -1
     (nil))

(insn 302 301 0 (set (reg:SF 208 [ _122 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 207 [ _121 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 402)) [1 zv S4 A32])) "CALEKM.f":127 -1
     (nil))

;; _123 = _112 - _122;

(insn 303 302 0 (set (reg:SF 209 [ _123 ])
        (minus:SF (reg:SF 198 [ _112 ])
            (reg:SF 208 [ _122 ]))) "CALEKM.f":127 -1
     (nil))

;; _124 = ((_123));

(insn 304 303 0 (set (reg:SF 210 [ _124 ])
        (reg:SF 209 [ _123 ])) "CALEKM.f":127 -1
     (nil))

;; _125 = (integer(kind=8)) j_234;

(insn 305 304 306 (set (reg:SI 403)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":127 -1
     (nil))

(insn 306 305 0 (set (reg:DI 211 [ _125 ])
        (sign_extend:DI (reg:SI 403))) "CALEKM.f":127 -1
     (nil))

;; _126 = _125 * 119;

(insn 307 306 0 (parallel [
            (set (reg:DI 212 [ _126 ])
                (mult:DI (reg:DI 211 [ _125 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

;; _127 = (integer(kind=8)) i_231;

(insn 308 307 309 (set (reg:SI 404)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":127 -1
     (nil))

(insn 309 308 0 (set (reg:DI 213 [ _127 ])
        (sign_extend:DI (reg:SI 404))) "CALEKM.f":127 -1
     (nil))

;; _128 = _126 + _127;

(insn 310 309 0 (parallel [
            (set (reg:DI 214 [ _128 ])
                (plus:DI (reg:DI 212 [ _126 ])
                    (reg:DI 213 [ _127 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

;; _129 = _128 + -120;

(insn 311 310 0 (parallel [
            (set (reg:DI 215 [ _129 ])
                (plus:DI (reg:DI 214 [ _128 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

;; _130 = dynam.dx[_129];

(insn 312 311 313 (set (reg/f:DI 405)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f9243e23870 dynam>)) "CALEKM.f":127 -1
     (nil))

(insn 313 312 314 (parallel [
            (set (reg:DI 406)
                (plus:DI (reg:DI 215 [ _129 ])
                    (const_int 1207 [0x4b7])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))

(insn 314 313 0 (set (reg:SF 216 [ _130 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 406)
                    (const_int 4 [0x4]))
                (reg/f:DI 405)) [1 dynam.dx S4 A32])) "CALEKM.f":127 -1
     (nil))

;; _131 = _130 * 2.0e+0;

(insn 315 314 0 (set (reg:SF 217 [ _131 ])
        (plus:SF (reg:SF 216 [ _130 ])
            (reg:SF 216 [ _130 ]))) "CALEKM.f":127 -1
     (nil))

;; _132 = ((_131));

(insn 316 315 0 (set (reg:SF 218 [ _132 ])
        (reg:SF 217 [ _131 ])) "CALEKM.f":127 -1
     (nil))

;; dzdx_282 = _124 / _132;

(insn 317 316 318 (set (reg:SF 407)
        (div:SF (reg:SF 210 [ _124 ])
            (reg:SF 218 [ _132 ]))) "CALEKM.f":127 -1
     (nil))

(insn 318 317 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 dzdx+0 S4 A32])
        (reg:SF 407)) "CALEKM.f":127 -1
     (nil))

;; _133 = j_234 + 1;

(insn 319 318 320 (set (reg:SI 408)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":128 -1
     (nil))

(insn 320 319 0 (parallel [
            (set (reg:SI 219 [ _133 ])
                (plus:SI (reg:SI 408)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _134 = (integer(kind=8)) _133;

(insn 321 320 0 (set (reg:DI 220 [ _134 ])
        (sign_extend:DI (reg:SI 219 [ _133 ]))) "CALEKM.f":128 -1
     (nil))

;; _135 = _134 * 119;

(insn 322 321 0 (parallel [
            (set (reg:DI 221 [ _135 ])
                (mult:DI (reg:DI 220 [ _134 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (nil))

;; _136 = (integer(kind=8)) i_231;

(insn 323 322 324 (set (reg:SI 409)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":128 -1
     (nil))

(insn 324 323 0 (set (reg:DI 222 [ _136 ])
        (sign_extend:DI (reg:SI 409))) "CALEKM.f":128 -1
     (nil))

;; _137 = _135 + _136;

(insn 325 324 0 (parallel [
            (set (reg:DI 223 [ _137 ])
                (plus:DI (reg:DI 221 [ _135 ])
                    (reg:DI 222 [ _136 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (nil))

;; _138 = _137 + -120;

(insn 326 325 0 (parallel [
            (set (reg:DI 224 [ _138 ])
                (plus:DI (reg:DI 223 [ _137 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (nil))

;; _139 = zv[_138];

(insn 327 326 328 (set (reg/f:DI 410)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":128 -1
     (nil))

(insn 328 327 0 (set (reg:SF 225 [ _139 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 224 [ _138 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 410)) [1 zv S4 A32])) "CALEKM.f":128 -1
     (nil))

;; _140 = j_234 + -1;

(insn 329 328 330 (set (reg:SI 411)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":128 -1
     (nil))

(insn 330 329 0 (parallel [
            (set (reg:SI 226 [ _140 ])
                (plus:SI (reg:SI 411)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; _141 = (integer(kind=8)) _140;

(insn 331 330 0 (set (reg:DI 227 [ _141 ])
        (sign_extend:DI (reg:SI 226 [ _140 ]))) "CALEKM.f":128 -1
     (nil))

;; _142 = _141 * 119;

(insn 332 331 0 (parallel [
            (set (reg:DI 228 [ _142 ])
                (mult:DI (reg:DI 227 [ _141 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (nil))

;; _143 = (integer(kind=8)) i_231;

(insn 333 332 334 (set (reg:SI 412)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":128 -1
     (nil))

(insn 334 333 0 (set (reg:DI 229 [ _143 ])
        (sign_extend:DI (reg:SI 412))) "CALEKM.f":128 -1
     (nil))

;; _144 = _142 + _143;

(insn 335 334 0 (parallel [
            (set (reg:DI 230 [ _144 ])
                (plus:DI (reg:DI 228 [ _142 ])
                    (reg:DI 229 [ _143 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (nil))

;; _145 = _144 + -120;

(insn 336 335 0 (parallel [
            (set (reg:DI 231 [ _145 ])
                (plus:DI (reg:DI 230 [ _144 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (nil))

;; _146 = zv[_145];

(insn 337 336 338 (set (reg/f:DI 413)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":128 -1
     (nil))

(insn 338 337 0 (set (reg:SF 232 [ _146 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 231 [ _145 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 413)) [1 zv S4 A32])) "CALEKM.f":128 -1
     (nil))

;; _147 = _139 - _146;

(insn 339 338 0 (set (reg:SF 233 [ _147 ])
        (minus:SF (reg:SF 225 [ _139 ])
            (reg:SF 232 [ _146 ]))) "CALEKM.f":128 -1
     (nil))

;; _148 = ((_147));

(insn 340 339 0 (set (reg:SF 234 [ _148 ])
        (reg:SF 233 [ _147 ])) "CALEKM.f":128 -1
     (nil))

;; _149 = dynam.dy;

(insn 341 340 342 (set (reg/f:DI 414)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f9243e23870 dynam>)) "CALEKM.f":1 -1
     (nil))

(insn 342 341 0 (set (reg:SF 235 [ _149 ])
        (mem/c:SF (reg/f:DI 414) [1 dynam.dy+0 S4 A128])) "CALEKM.f":1 -1
     (nil))

;; _150 = _149 * 2.0e+0;

(insn 343 342 0 (set (reg:SF 236 [ _150 ])
        (plus:SF (reg:SF 235 [ _149 ])
            (reg:SF 235 [ _149 ]))) "CALEKM.f":128 -1
     (nil))

;; _151 = ((_150));

(insn 344 343 0 (set (reg:SF 237 [ _151 ])
        (reg:SF 236 [ _150 ])) "CALEKM.f":128 -1
     (nil))

;; dzdy_283 = _148 / _151;

(insn 345 344 346 (set (reg:SF 415)
        (div:SF (reg:SF 234 [ _148 ])
            (reg:SF 237 [ _151 ]))) "CALEKM.f":128 -1
     (nil))

(insn 346 345 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [1 dzdy+0 S4 A32])
        (reg:SF 415)) "CALEKM.f":128 -1
     (nil))

;; _152 = grf_281 * dzdy_283;

(insn 347 346 348 (set (reg:SF 416)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 grf+0 S4 A32])) "CALEKM.f":129 -1
     (nil))

(insn 348 347 0 (set (reg:SF 238 [ _152 ])
        (mult:SF (reg:SF 416)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [1 dzdy+0 S4 A32]))) "CALEKM.f":129 -1
     (nil))

;; _153 = (integer(kind=8)) j_234;

(insn 349 348 350 (set (reg:SI 417)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":129 -1
     (nil))

(insn 350 349 0 (set (reg:DI 239 [ _153 ])
        (sign_extend:DI (reg:SI 417))) "CALEKM.f":129 -1
     (nil))

;; _154 = _153 * 119;

(insn 351 350 0 (parallel [
            (set (reg:DI 240 [ _154 ])
                (mult:DI (reg:DI 239 [ _153 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":129 -1
     (nil))

;; _155 = (integer(kind=8)) i_231;

(insn 352 351 353 (set (reg:SI 418)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":129 -1
     (nil))

(insn 353 352 0 (set (reg:DI 241 [ _155 ])
        (sign_extend:DI (reg:SI 418))) "CALEKM.f":129 -1
     (nil))

;; _156 = _154 + _155;

(insn 354 353 0 (parallel [
            (set (reg:DI 242 [ _156 ])
                (plus:DI (reg:DI 240 [ _154 ])
                    (reg:DI 241 [ _155 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":129 -1
     (nil))

;; _157 = _156 + -120;

(insn 355 354 0 (parallel [
            (set (reg:DI 243 [ _157 ])
                (plus:DI (reg:DI 242 [ _156 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":129 -1
     (nil))

;; _158 = masks.hbm2[_157];

(insn 356 355 357 (set (reg/f:DI 419)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f9243e3a120 masks>)) "CALEKM.f":129 -1
     (nil))

(insn 357 356 0 (set (reg:SF 244 [ _158 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 243 [ _157 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 419)) [1 masks.hbm2 S4 A32])) "CALEKM.f":129 -1
     (nil))

;; _159 = _152 * _158;

(insn 358 357 0 (set (reg:SF 245 [ _159 ])
        (mult:SF (reg:SF 238 [ _152 ])
            (reg:SF 244 [ _158 ]))) "CALEKM.f":129 -1
     (nil))

;; _160 = -_159;

(insn 359 358 360 (set (reg:V4SF 420)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) "CALEKM.f":129 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 360 359 0 (parallel [
            (set (reg:SF 246 [ _160 ])
                (neg:SF (reg:SF 245 [ _159 ])))
            (use (reg:V4SF 420))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":129 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 245 [ _159 ]))
        (nil)))

;; ug = _160;

(insn 361 360 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [1 ug+0 S4 A32])
        (reg:SF 246 [ _160 ])) "CALEKM.f":129 -1
     (nil))

;; _161 = grf_281 * dzdx_282;

(insn 362 361 363 (set (reg:SF 421)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 grf+0 S4 A32])) "CALEKM.f":130 -1
     (nil))

(insn 363 362 0 (set (reg:SF 247 [ _161 ])
        (mult:SF (reg:SF 421)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [1 dzdx+0 S4 A32]))) "CALEKM.f":130 -1
     (nil))

;; _162 = (integer(kind=8)) j_234;

(insn 364 363 365 (set (reg:SI 422)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":130 -1
     (nil))

(insn 365 364 0 (set (reg:DI 248 [ _162 ])
        (sign_extend:DI (reg:SI 422))) "CALEKM.f":130 -1
     (nil))

;; _163 = _162 * 119;

(insn 366 365 0 (parallel [
            (set (reg:DI 249 [ _163 ])
                (mult:DI (reg:DI 248 [ _162 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":130 -1
     (nil))

;; _164 = (integer(kind=8)) i_231;

(insn 367 366 368 (set (reg:SI 423)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":130 -1
     (nil))

(insn 368 367 0 (set (reg:DI 250 [ _164 ])
        (sign_extend:DI (reg:SI 423))) "CALEKM.f":130 -1
     (nil))

;; _165 = _163 + _164;

(insn 369 368 0 (parallel [
            (set (reg:DI 251 [ _165 ])
                (plus:DI (reg:DI 249 [ _163 ])
                    (reg:DI 250 [ _164 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":130 -1
     (nil))

;; _166 = _165 + -120;

(insn 370 369 0 (parallel [
            (set (reg:DI 252 [ _166 ])
                (plus:DI (reg:DI 251 [ _165 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":130 -1
     (nil))

;; _167 = masks.hbm2[_166];

(insn 371 370 372 (set (reg/f:DI 424)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f9243e3a120 masks>)) "CALEKM.f":130 -1
     (nil))

(insn 372 371 0 (set (reg:SF 253 [ _167 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 252 [ _166 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 424)) [1 masks.hbm2 S4 A32])) "CALEKM.f":130 -1
     (nil))

;; _168 = _161 * _167;

(insn 373 372 0 (set (reg:SF 254 [ _168 ])
        (mult:SF (reg:SF 247 [ _161 ])
            (reg:SF 253 [ _167 ]))) "CALEKM.f":130 -1
     (nil))

;; vg = _168;

(insn 374 373 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [1 vg+0 S4 A32])
        (reg:SF 254 [ _168 ])) "CALEKM.f":130 -1
     (nil))

;; ug.0_169 = ug;

(insn 375 374 0 (set (reg:SF 255 [ ug.0_169 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [1 ug+0 S4 A32])) "CALEKM.f":131 -1
     (nil))

;; ug.1_170 = ug;

(insn 376 375 0 (set (reg:SF 256 [ ug.1_170 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [1 ug+0 S4 A32])) "CALEKM.f":131 -1
     (nil))

;; _171 = ug.0_169 * ug.1_170;

(insn 377 376 0 (set (reg:SF 257 [ _171 ])
        (mult:SF (reg:SF 255 [ ug.0_169 ])
            (reg:SF 256 [ ug.1_170 ]))) "CALEKM.f":131 -1
     (nil))

;; vg.2_172 = vg;

(insn 378 377 0 (set (reg:SF 258 [ vg.2_172 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [1 vg+0 S4 A32])) "CALEKM.f":131 -1
     (nil))

;; vg.3_173 = vg;

(insn 379 378 0 (set (reg:SF 259 [ vg.3_173 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [1 vg+0 S4 A32])) "CALEKM.f":131 -1
     (nil))

;; _174 = vg.2_172 * vg.3_173;

(insn 380 379 0 (set (reg:SF 260 [ _174 ])
        (mult:SF (reg:SF 258 [ vg.2_172 ])
            (reg:SF 259 [ vg.3_173 ]))) "CALEKM.f":131 -1
     (nil))

;; _175 = _171 + _174;

(insn 381 380 0 (set (reg:SF 261 [ _175 ])
        (plus:SF (reg:SF 257 [ _171 ])
            (reg:SF 260 [ _174 ]))) "CALEKM.f":131 -1
     (nil))

;; spdg_286 = __builtin_sqrtf (_175);

(insn 382 381 383 (set (reg:SF 425)
        (sqrt:SF (reg:SF 261 [ _175 ]))) "CALEKM.f":131 -1
     (nil))

(insn 383 382 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [1 spdg+0 S4 A32])
        (reg:SF 425)) "CALEKM.f":131 -1
     (nil))

;; wdirt_288 = wdir (&ufal, &vfal);

(insn 384 383 385 (parallel [
            (set (reg:DI 426)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":135 -1
     (nil))

(insn 385 384 386 (parallel [
            (set (reg:DI 427)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":135 -1
     (nil))

(insn 386 385 387 (set (reg:DI 4 si)
        (reg:DI 426)) "CALEKM.f":135 -1
     (nil))

(insn 387 386 388 (set (reg:DI 5 di)
        (reg:DI 427)) "CALEKM.f":135 -1
     (nil))

(insn 388 387 389 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALEKM.f":135 -1
     (nil))

(call_insn 389 388 390 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("wdir_") [flags 0x41]  <function_decl 0x7f9243e1a800 wdir>) [0 wdir S1 A8])
            (const_int 0 [0]))) "CALEKM.f":135 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

(insn 390 389 391 (set (reg:SF 428)
        (reg:SF 21 xmm0)) "CALEKM.f":135 -1
     (nil))

(insn 391 390 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [1 wdirt+0 S4 A32])
        (reg:SF 428)) "CALEKM.f":135 -1
     (nil))

;; wdirg_290 = wdir (&ug, &vg);

(insn 392 391 393 (parallel [
            (set (reg:DI 429)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -100 [0xffffffffffffff9c])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":136 -1
     (nil))

(insn 393 392 394 (parallel [
            (set (reg:DI 430)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":136 -1
     (nil))

(insn 394 393 395 (set (reg:DI 4 si)
        (reg:DI 429)) "CALEKM.f":136 -1
     (nil))

(insn 395 394 396 (set (reg:DI 5 di)
        (reg:DI 430)) "CALEKM.f":136 -1
     (nil))

(insn 396 395 397 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALEKM.f":136 -1
     (nil))

(call_insn 397 396 398 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("wdir_") [flags 0x41]  <function_decl 0x7f9243e1a800 wdir>) [0 wdir S1 A8])
            (const_int 0 [0]))) "CALEKM.f":136 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

(insn 398 397 399 (set (reg:SF 431)
        (reg:SF 21 xmm0)) "CALEKM.f":136 -1
     (nil))

(insn 399 398 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32])
        (reg:SF 431)) "CALEKM.f":136 -1
     (nil))

;; _176 = ftrue_280 / 1.0e+1;

(insn 400 399 401 (set (reg:SF 432)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 ftrue+0 S4 A32])) "CALEKM.f":137 -1
     (nil))

(insn 401 400 402 (set (reg:SF 433)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALEKM.f":137 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+1 [0x0.ap+4])
        (nil)))

(insn 402 401 0 (set (reg:SF 262 [ _176 ])
        (div:SF (reg:SF 432)
            (reg:SF 433))) "CALEKM.f":137 -1
     (nil))

;; b_291 = __builtin_sqrtf (_176);

(insn 403 402 404 (set (reg:SF 434)
        (sqrt:SF (reg:SF 262 [ _176 ]))) "CALEKM.f":137 -1
     (nil))

(insn 404 403 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [1 b+0 S4 A32])
        (reg:SF 434)) "CALEKM.f":137 -1
     (nil))

;; bzmh_292 = b_291 * 2.0e+2;

(insn 405 404 406 (set (reg:SF 436)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [1 b+0 S4 A32])) "CALEKM.f":138 -1
     (nil))

(insn 406 405 407 (set (reg:SF 437)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALEKM.f":138 -1
     (expr_list:REG_EQUAL (const_double:SF 2.0e+2 [0x0.c8p+8])
        (nil)))

(insn 407 406 408 (set (reg:SF 435)
        (mult:SF (reg:SF 436)
            (reg:SF 437))) "CALEKM.f":138 -1
     (nil))

(insn 408 407 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32])
        (reg:SF 435)) "CALEKM.f":138 -1
     (nil))

;; if (bzmh_292 > 5.0e+2)

(insn 409 408 410 (set (reg:SF 438)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32])) "CALEKM.f":139 -1
     (nil))

(insn 410 409 411 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 438)
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32]))) "CALEKM.f":139 -1
     (nil))

(jump_insn 411 410 412 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 414)
            (pc))) "CALEKM.f":139 -1
     (nil))

(jump_insn 412 411 413 (set (pc)
        (label_ref 0)) "CALEKM.f":139 -1
     (nil))

(barrier 413 412 414)

(code_label 414 413 0 13 (nil) [0 uses])

;; Generating RTL for gimple basic block 19

;; bzmh_293 = 5.0e+2;

(insn 416 415 417 (set (reg:SF 439)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALEKM.f":139 -1
     (nil))

(insn 417 416 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32])
        (reg:SF 439)) "CALEKM.f":139 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 418 417 419 12 (nil) [0 uses])

(note 419 418 0 NOTE_INSN_BASIC_BLOCK)

;; if (bzmh_226 < -5.0e+2)

(insn 420 419 421 (set (reg:SF 440)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALEKM.f":140 -1
     (expr_list:REG_EQUAL (const_double:SF -5.0e+2 [-0x0.fap+9])
        (nil)))

(insn 421 420 422 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 440)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32]))) "CALEKM.f":140 -1
     (nil))

(jump_insn 422 421 423 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 425)
            (pc))) "CALEKM.f":140 -1
     (nil))

(jump_insn 423 422 424 (set (pc)
        (label_ref 0)) "CALEKM.f":140 -1
     (nil))

(barrier 424 423 425)

(code_label 425 424 0 15 (nil) [0 uses])

;; Generating RTL for gimple basic block 21

;; bzmh_294 = -5.0e+2;

(insn 427 426 428 (set (reg:SF 441)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALEKM.f":140 -1
     (nil))

(insn 428 427 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32])
        (reg:SF 441)) "CALEKM.f":140 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; 

(code_label 429 428 430 14 (nil) [0 uses])

(note 430 429 0 NOTE_INSN_BASIC_BLOCK)

;; _177 = -bzmh_227;

(insn 431 430 432 (set (reg:SF 442)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32])) "CALEKM.f":141 -1
     (nil))

(insn 432 431 433 (set (reg:V4SF 443)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) "CALEKM.f":141 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 433 432 0 (parallel [
            (set (reg:SF 263 [ _177 ])
                (neg:SF (reg:SF 442)))
            (use (reg:V4SF 443))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":141 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 442))
        (nil)))

;; exbzmh_295 = __builtin_expf (_177);

(insn 434 433 435 (set (reg:SF 21 xmm0)
        (reg:SF 263 [ _177 ])) "CALEKM.f":141 -1
     (nil))

(call_insn/u 435 434 436 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x7f9243c92300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "CALEKM.f":141 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 436 435 437 (set (reg:SF 444)
        (reg:SF 21 xmm0)) "CALEKM.f":141 -1
     (nil))

(insn 437 436 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [1 exbzmh+0 S4 A32])
        (reg:SF 444)) "CALEKM.f":141 -1
     (nil))

;; alphas_296 = 4.5e+1;

(insn 438 437 439 (set (reg:SF 445)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALEKM.f":145 -1
     (nil))

(insn 439 438 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])
        (reg:SF 445)) "CALEKM.f":145 -1
     (nil))

;; alphas_297 = alphas_296 * deg2rd_243;

(insn 440 439 441 (set (reg:SF 447)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])) "CALEKM.f":146 -1
     (nil))

(insn 441 440 442 (set (reg:SF 446)
        (mult:SF (reg:SF 447)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [1 deg2rd+0 S4 A32]))) "CALEKM.f":146 -1
     (nil))

(insn 442 441 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])
        (reg:SF 446)) "CALEKM.f":146 -1
     (nil))

;; sinalf_298 = __builtin_sinf (alphas_297);

(insn 443 442 444 (set (reg:SF 448)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])) "CALEKM.f":147 -1
     (nil))

(insn 444 443 445 (set (reg:SF 21 xmm0)
        (reg:SF 448)) "CALEKM.f":147 -1
     (nil))

(call_insn/u 445 444 446 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x7f9243c93500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "CALEKM.f":147 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 446 445 447 (set (reg:SF 449)
        (reg:SF 21 xmm0)) "CALEKM.f":147 -1
     (nil))

(insn 447 446 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [1 sinalf+0 S4 A32])
        (reg:SF 449)) "CALEKM.f":147 -1
     (nil))

;; _178 = d75pi_242 + alphas_297;

(insn 448 447 449 (set (reg:SF 450)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 d75pi+0 S4 A32])) "CALEKM.f":148 -1
     (nil))

(insn 449 448 0 (set (reg:SF 264 [ _178 ])
        (plus:SF (reg:SF 450)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32]))) "CALEKM.f":148 -1
     (nil))

;; arg_299 = _178 - bzmh_227;

(insn 450 449 451 (set (reg:SF 451)
        (minus:SF (reg:SF 264 [ _178 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32]))) "CALEKM.f":148 -1
     (nil))

(insn 451 450 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [1 arg+0 S4 A32])
        (reg:SF 451)) "CALEKM.f":148 -1
     (nil))

;; cosarg_300 = __builtin_cosf (arg_299);

(insn 452 451 453 (set (reg:SF 452)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [1 arg+0 S4 A32])) "CALEKM.f":149 -1
     (nil))

(insn 453 452 454 (set (reg:SF 21 xmm0)
        (reg:SF 452)) "CALEKM.f":149 -1
     (nil))

(call_insn/u 454 453 455 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cosf") [flags 0x41]  <function_decl 0x7f9243c91700 __builtin_cosf>) [0 __builtin_cosf S1 A8])
            (const_int 0 [0]))) "CALEKM.f":149 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 455 454 456 (set (reg:SF 453)
        (reg:SF 21 xmm0)) "CALEKM.f":149 -1
     (nil))

(insn 456 455 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 cosarg+0 S4 A32])
        (reg:SF 453)) "CALEKM.f":149 -1
     (nil))

;; if (wdirg_290 >= 0.0)

(insn 457 456 458 (set (reg:SF 454)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32])) "CALEKM.f":150 -1
     (nil))

(insn 458 457 459 (set (reg:SF 455)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALEKM.f":150 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 459 458 460 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 454)
            (reg:SF 455))) "CALEKM.f":150 -1
     (nil))

(jump_insn 460 459 461 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 463)
            (pc))) "CALEKM.f":150 -1
     (nil))

(jump_insn 461 460 462 (set (pc)
        (label_ref 0)) "CALEKM.f":150 -1
     (nil))

(barrier 462 461 463)

(code_label 463 462 0 17 (nil) [0 uses])

;; Generating RTL for gimple basic block 23

;; if (wdirg_290 <= 9.0e+1)

(insn 465 464 466 (set (reg:SF 456)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "CALEKM.f":150 -1
     (expr_list:REG_EQUAL (const_double:SF 9.0e+1 [0x0.b4p+7])
        (nil)))

(insn 466 465 467 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 456)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32]))) "CALEKM.f":150 -1
     (nil))

(jump_insn 467 466 0 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALEKM.f":150 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 468 467 469 16 (nil) [0 uses])

(note 469 468 0 NOTE_INSN_BASIC_BLOCK)

;; if (wdirg_290 >= 2.7e+2)

(insn 470 469 471 (set (reg:SF 457)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32])) "CALEKM.f":150 -1
     (nil))

(insn 471 470 472 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 457)
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32]))) "CALEKM.f":150 -1
     (nil))

(jump_insn 472 471 473 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 475)
            (pc))) "CALEKM.f":150 -1
     (nil))

(jump_insn 473 472 474 (set (pc)
        (label_ref 0)) "CALEKM.f":150 -1
     (nil))

(barrier 474 473 475)

(code_label 475 474 0 20 (nil) [0 uses])

;; Generating RTL for gimple basic block 25

;; if (wdirg_290 <= 3.6e+2)

(insn 477 476 478 (set (reg:SF 458)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "CALEKM.f":150 -1
     (expr_list:REG_EQUAL (const_double:SF 3.6e+2 [0x0.b4p+9])
        (nil)))

(insn 478 477 479 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 458)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32]))) "CALEKM.f":150 -1
     (nil))

(jump_insn 479 478 480 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 482)
            (pc))) "CALEKM.f":150 -1
     (nil))

(jump_insn 480 479 481 (set (pc)
        (label_ref 0)) "CALEKM.f":150 -1
     (nil))

(barrier 481 480 482)

(code_label 482 481 0 21 (nil) [0 uses])

;; Generating RTL for gimple basic block 26

;; 

(code_label 483 482 484 18 (nil) [0 uses])

(note 484 483 0 NOTE_INSN_BASIC_BLOCK)

;; cosarg_301 = -cosarg_300;

(insn 485 484 486 (set (reg:SF 460)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 cosarg+0 S4 A32])) "CALEKM.f":152 -1
     (nil))

(insn 486 485 487 (set (reg:V4SF 461)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) "CALEKM.f":152 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 487 486 488 (parallel [
            (set (reg:SF 459)
                (neg:SF (reg:SF 460)))
            (use (reg:V4SF 461))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":152 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 460))
        (nil)))

(insn 488 487 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 cosarg+0 S4 A32])
        (reg:SF 459)) "CALEKM.f":152 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 489 488 490 19 (nil) [0 uses])

(note 490 489 0 NOTE_INSN_BASIC_BLOCK)

;; _179 = sqrt2_244 * spdg_286;

(insn 491 490 492 (set (reg:SF 462)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 sqrt2+0 S4 A32])) "CALEKM.f":153 -1
     (nil))

(insn 492 491 0 (set (reg:SF 265 [ _179 ])
        (mult:SF (reg:SF 462)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [1 spdg+0 S4 A32]))) "CALEKM.f":153 -1
     (nil))

;; _180 = sinalf_298 * _179;

(insn 493 492 0 (set (reg:SF 266 [ _180 ])
        (mult:SF (reg:SF 265 [ _179 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])) [1 sinalf+0 S4 A32]))) "CALEKM.f":153 -1
     (nil))

;; _181 = exbzmh_295 * _180;

(insn 494 493 0 (set (reg:SF 267 [ _181 ])
        (mult:SF (reg:SF 266 [ _180 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [1 exbzmh+0 S4 A32]))) "CALEKM.f":153 -1
     (nil))

;; _182 = cosarg_228 * _181;

(insn 495 494 0 (set (reg:SF 268 [ _182 ])
        (mult:SF (reg:SF 267 [ _181 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 cosarg+0 S4 A32]))) "CALEKM.f":153 -1
     (nil))

;; ug.4_183 = ug;

(insn 496 495 0 (set (reg:SF 269 [ ug.4_183 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [1 ug+0 S4 A32])) "CALEKM.f":153 -1
     (nil))

;; _184 = (integer(kind=8)) j_234;

(insn 497 496 498 (set (reg:SI 463)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":153 -1
     (nil))

(insn 498 497 0 (set (reg:DI 270 [ _184 ])
        (sign_extend:DI (reg:SI 463))) "CALEKM.f":153 -1
     (nil))

;; _185 = _184 * 119;

(insn 499 498 0 (parallel [
            (set (reg:DI 271 [ _185 ])
                (mult:DI (reg:DI 270 [ _184 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":153 -1
     (nil))

;; _186 = (integer(kind=8)) i_231;

(insn 500 499 501 (set (reg:SI 464)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":153 -1
     (nil))

(insn 501 500 0 (set (reg:DI 272 [ _186 ])
        (sign_extend:DI (reg:SI 464))) "CALEKM.f":153 -1
     (nil))

;; _187 = _185 + _186;

(insn 502 501 0 (parallel [
            (set (reg:DI 273 [ _187 ])
                (plus:DI (reg:DI 271 [ _185 ])
                    (reg:DI 272 [ _186 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":153 -1
     (nil))

;; _188 = _187 + -120;

(insn 503 502 0 (parallel [
            (set (reg:DI 274 [ _188 ])
                (plus:DI (reg:DI 273 [ _187 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":153 -1
     (nil))

;; _189 = _182 + ug.4_183;

(insn 504 503 0 (set (reg:SF 275 [ _189 ])
        (plus:SF (reg:SF 268 [ _182 ])
            (reg:SF 269 [ ug.4_183 ]))) "CALEKM.f":153 -1
     (nil))

;; *u1d_252(D)[_188] = _189;

(insn 505 504 506 (set (reg/f:DI 465)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 u1d+0 S8 A64])) "CALEKM.f":153 -1
     (nil))

(insn 506 505 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 274 [ _188 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 465)) [1 *u1d_252(D) S4 A32])
        (reg:SF 275 [ _189 ])) "CALEKM.f":153 -1
     (nil))

;; alphas_303 = 4.5e+1;

(insn 507 506 508 (set (reg:SF 466)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALEKM.f":161 -1
     (nil))

(insn 508 507 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])
        (reg:SF 466)) "CALEKM.f":161 -1
     (nil))

;; alphas_304 = alphas_303 * deg2rd_243;

(insn 509 508 510 (set (reg:SF 468)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])) "CALEKM.f":162 -1
     (nil))

(insn 510 509 511 (set (reg:SF 467)
        (mult:SF (reg:SF 468)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [1 deg2rd+0 S4 A32]))) "CALEKM.f":162 -1
     (nil))

(insn 511 510 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])
        (reg:SF 467)) "CALEKM.f":162 -1
     (nil))

;; sinalf_305 = __builtin_sinf (alphas_304);

(insn 512 511 513 (set (reg:SF 469)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])) "CALEKM.f":163 -1
     (nil))

(insn 513 512 514 (set (reg:SF 21 xmm0)
        (reg:SF 469)) "CALEKM.f":163 -1
     (nil))

(call_insn/u 514 513 515 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x7f9243c93500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "CALEKM.f":163 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 515 514 516 (set (reg:SF 470)
        (reg:SF 21 xmm0)) "CALEKM.f":163 -1
     (nil))

(insn 516 515 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [1 sinalf+0 S4 A32])
        (reg:SF 470)) "CALEKM.f":163 -1
     (nil))

;; _190 = d75pi_242 + alphas_304;

(insn 517 516 518 (set (reg:SF 471)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 d75pi+0 S4 A32])) "CALEKM.f":164 -1
     (nil))

(insn 518 517 0 (set (reg:SF 276 [ _190 ])
        (plus:SF (reg:SF 471)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32]))) "CALEKM.f":164 -1
     (nil))

;; arg_306 = _190 - bzmh_227;

(insn 519 518 520 (set (reg:SF 472)
        (minus:SF (reg:SF 276 [ _190 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32]))) "CALEKM.f":164 -1
     (nil))

(insn 520 519 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [1 arg+0 S4 A32])
        (reg:SF 472)) "CALEKM.f":164 -1
     (nil))

;; sinarg_307 = __builtin_sinf (arg_306);

(insn 521 520 522 (set (reg:SF 473)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [1 arg+0 S4 A32])) "CALEKM.f":165 -1
     (nil))

(insn 522 521 523 (set (reg:SF 21 xmm0)
        (reg:SF 473)) "CALEKM.f":165 -1
     (nil))

(call_insn/u 523 522 524 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x7f9243c93500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "CALEKM.f":165 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 524 523 525 (set (reg:SF 474)
        (reg:SF 21 xmm0)) "CALEKM.f":165 -1
     (nil))

(insn 525 524 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 sinarg+0 S4 A32])
        (reg:SF 474)) "CALEKM.f":165 -1
     (nil))

;; if (wdirg_290 >= 0.0)

(insn 526 525 527 (set (reg:SF 475)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32])) "CALEKM.f":166 -1
     (nil))

(insn 527 526 528 (set (reg:SF 476)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALEKM.f":166 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 528 527 529 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 475)
            (reg:SF 476))) "CALEKM.f":166 -1
     (nil))

(jump_insn 529 528 530 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 532)
            (pc))) "CALEKM.f":166 -1
     (nil))

(jump_insn 530 529 531 (set (pc)
        (label_ref 0)) "CALEKM.f":166 -1
     (nil))

(barrier 531 530 532)

(code_label 532 531 0 23 (nil) [0 uses])

;; Generating RTL for gimple basic block 28

;; if (wdirg_290 <= 1.8e+2)

(insn 534 533 535 (set (reg:SF 477)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CALEKM.f":166 -1
     (expr_list:REG_EQUAL (const_double:SF 1.8e+2 [0x0.b4p+8])
        (nil)))

(insn 535 534 536 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 477)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32]))) "CALEKM.f":166 -1
     (nil))

(jump_insn 536 535 537 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) "CALEKM.f":166 -1
     (nil))

(jump_insn 537 536 538 (set (pc)
        (label_ref 0)) "CALEKM.f":166 -1
     (nil))

(barrier 538 537 539)

(code_label 539 538 0 24 (nil) [0 uses])

;; Generating RTL for gimple basic block 29

;; sinarg_308 = -sinarg_307;

(insn 541 540 542 (set (reg:SF 479)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 sinarg+0 S4 A32])) "CALEKM.f":167 -1
     (nil))

(insn 542 541 543 (set (reg:V4SF 480)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) "CALEKM.f":167 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 543 542 544 (parallel [
            (set (reg:SF 478)
                (neg:SF (reg:SF 479)))
            (use (reg:V4SF 480))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":167 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 479))
        (nil)))

(insn 544 543 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 sinarg+0 S4 A32])
        (reg:SF 478)) "CALEKM.f":167 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; 

(code_label 545 544 546 22 (nil) [0 uses])

(note 546 545 0 NOTE_INSN_BASIC_BLOCK)

;; _191 = sqrt2_244 * spdg_286;

(insn 547 546 548 (set (reg:SF 481)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 sqrt2+0 S4 A32])) "CALEKM.f":168 -1
     (nil))

(insn 548 547 0 (set (reg:SF 277 [ _191 ])
        (mult:SF (reg:SF 481)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [1 spdg+0 S4 A32]))) "CALEKM.f":168 -1
     (nil))

;; _192 = sinalf_305 * _191;

(insn 549 548 0 (set (reg:SF 278 [ _192 ])
        (mult:SF (reg:SF 277 [ _191 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])) [1 sinalf+0 S4 A32]))) "CALEKM.f":168 -1
     (nil))

;; _193 = exbzmh_295 * _192;

(insn 550 549 0 (set (reg:SF 279 [ _193 ])
        (mult:SF (reg:SF 278 [ _192 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [1 exbzmh+0 S4 A32]))) "CALEKM.f":168 -1
     (nil))

;; _194 = sinarg_235 * _193;

(insn 551 550 0 (set (reg:SF 280 [ _194 ])
        (mult:SF (reg:SF 279 [ _193 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 sinarg+0 S4 A32]))) "CALEKM.f":168 -1
     (nil))

;; vg.5_195 = vg;

(insn 552 551 0 (set (reg:SF 281 [ vg.5_195 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [1 vg+0 S4 A32])) "CALEKM.f":168 -1
     (nil))

;; _196 = (integer(kind=8)) j_234;

(insn 553 552 554 (set (reg:SI 482)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":168 -1
     (nil))

(insn 554 553 0 (set (reg:DI 282 [ _196 ])
        (sign_extend:DI (reg:SI 482))) "CALEKM.f":168 -1
     (nil))

;; _197 = _196 * 119;

(insn 555 554 0 (parallel [
            (set (reg:DI 283 [ _197 ])
                (mult:DI (reg:DI 282 [ _196 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":168 -1
     (nil))

;; _198 = (integer(kind=8)) i_231;

(insn 556 555 557 (set (reg:SI 483)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":168 -1
     (nil))

(insn 557 556 0 (set (reg:DI 284 [ _198 ])
        (sign_extend:DI (reg:SI 483))) "CALEKM.f":168 -1
     (nil))

;; _199 = _197 + _198;

(insn 558 557 0 (parallel [
            (set (reg:DI 285 [ _199 ])
                (plus:DI (reg:DI 283 [ _197 ])
                    (reg:DI 284 [ _198 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":168 -1
     (nil))

;; _200 = _199 + -120;

(insn 559 558 0 (parallel [
            (set (reg:DI 286 [ _200 ])
                (plus:DI (reg:DI 285 [ _199 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":168 -1
     (nil))

;; _201 = _194 + vg.5_195;

(insn 560 559 0 (set (reg:SF 287 [ _201 ])
        (plus:SF (reg:SF 280 [ _194 ])
            (reg:SF 281 [ vg.5_195 ]))) "CALEKM.f":168 -1
     (nil))

;; *v1d_254(D)[_200] = _201;

(insn 561 560 562 (set (reg/f:DI 484)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 v1d+0 S8 A64])) "CALEKM.f":168 -1
     (nil))

(insn 562 561 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 286 [ _200 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 484)) [1 *v1d_254(D) S4 A32])
        (reg:SF 287 [ _201 ])) "CALEKM.f":168 -1
     (nil))

;; _202 = (integer(kind=8)) j_234;

(insn 563 562 564 (set (reg:SI 485)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":179 -1
     (nil))

(insn 564 563 0 (set (reg:DI 288 [ _202 ])
        (sign_extend:DI (reg:SI 485))) "CALEKM.f":179 -1
     (nil))

;; _203 = _202 * 119;

(insn 565 564 0 (parallel [
            (set (reg:DI 289 [ _203 ])
                (mult:DI (reg:DI 288 [ _202 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":179 -1
     (nil))

;; _204 = (integer(kind=8)) i_231;

(insn 566 565 567 (set (reg:SI 486)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":179 -1
     (nil))

(insn 567 566 0 (set (reg:DI 290 [ _204 ])
        (sign_extend:DI (reg:SI 486))) "CALEKM.f":179 -1
     (nil))

;; _205 = _203 + _204;

(insn 568 567 0 (parallel [
            (set (reg:DI 291 [ _205 ])
                (plus:DI (reg:DI 289 [ _203 ])
                    (reg:DI 290 [ _204 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":179 -1
     (nil))

;; _206 = _205 + -120;

(insn 569 568 0 (parallel [
            (set (reg:DI 292 [ _206 ])
                (plus:DI (reg:DI 291 [ _205 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":179 -1
     (nil))

;; _207 = *u1d_252(D)[_206];

(insn 570 569 571 (set (reg/f:DI 487)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 u1d+0 S8 A64])) "CALEKM.f":179 -1
     (nil))

(insn 571 570 0 (set (reg:SF 293 [ _207 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 292 [ _206 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 487)) [1 *u1d_252(D) S4 A32])) "CALEKM.f":179 -1
     (nil))

;; _208 = (integer(kind=8)) j_234;

(insn 572 571 573 (set (reg:SI 488)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":179 -1
     (nil))

(insn 573 572 0 (set (reg:DI 294 [ _208 ])
        (sign_extend:DI (reg:SI 488))) "CALEKM.f":179 -1
     (nil))

;; _209 = _208 * 119;

(insn 574 573 0 (parallel [
            (set (reg:DI 295 [ _209 ])
                (mult:DI (reg:DI 294 [ _208 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":179 -1
     (nil))

;; _210 = (integer(kind=8)) i_231;

(insn 575 574 576 (set (reg:SI 489)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":179 -1
     (nil))

(insn 576 575 0 (set (reg:DI 296 [ _210 ])
        (sign_extend:DI (reg:SI 489))) "CALEKM.f":179 -1
     (nil))

;; _211 = _209 + _210;

(insn 577 576 0 (parallel [
            (set (reg:DI 297 [ _211 ])
                (plus:DI (reg:DI 295 [ _209 ])
                    (reg:DI 296 [ _210 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":179 -1
     (nil))

;; _212 = _211 + -120;

(insn 578 577 0 (parallel [
            (set (reg:DI 298 [ _212 ])
                (plus:DI (reg:DI 297 [ _211 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":179 -1
     (nil))

;; _213 = _207 * 5.0e-1;

(insn 579 578 580 (set (reg:SF 490)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "CALEKM.f":179 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))

(insn 580 579 0 (set (reg:SF 299 [ _213 ])
        (mult:SF (reg:SF 293 [ _207 ])
            (reg:SF 490))) "CALEKM.f":179 -1
     (nil))

;; *u1d_252(D)[_212] = _213;

(insn 581 580 582 (set (reg/f:DI 491)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 u1d+0 S8 A64])) "CALEKM.f":179 -1
     (nil))

(insn 582 581 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 298 [ _212 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 491)) [1 *u1d_252(D) S4 A32])
        (reg:SF 299 [ _213 ])) "CALEKM.f":179 -1
     (nil))

;; _214 = (integer(kind=8)) j_234;

(insn 583 582 584 (set (reg:SI 492)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":180 -1
     (nil))

(insn 584 583 0 (set (reg:DI 300 [ _214 ])
        (sign_extend:DI (reg:SI 492))) "CALEKM.f":180 -1
     (nil))

;; _215 = _214 * 119;

(insn 585 584 0 (parallel [
            (set (reg:DI 301 [ _215 ])
                (mult:DI (reg:DI 300 [ _214 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":180 -1
     (nil))

;; _216 = (integer(kind=8)) i_231;

(insn 586 585 587 (set (reg:SI 493)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":180 -1
     (nil))

(insn 587 586 0 (set (reg:DI 302 [ _216 ])
        (sign_extend:DI (reg:SI 493))) "CALEKM.f":180 -1
     (nil))

;; _217 = _215 + _216;

(insn 588 587 0 (parallel [
            (set (reg:DI 303 [ _217 ])
                (plus:DI (reg:DI 301 [ _215 ])
                    (reg:DI 302 [ _216 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":180 -1
     (nil))

;; _218 = _217 + -120;

(insn 589 588 0 (parallel [
            (set (reg:DI 304 [ _218 ])
                (plus:DI (reg:DI 303 [ _217 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":180 -1
     (nil))

;; _219 = *v1d_254(D)[_218];

(insn 590 589 591 (set (reg/f:DI 494)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 v1d+0 S8 A64])) "CALEKM.f":180 -1
     (nil))

(insn 591 590 0 (set (reg:SF 305 [ _219 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 304 [ _218 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 494)) [1 *v1d_254(D) S4 A32])) "CALEKM.f":180 -1
     (nil))

;; _220 = (integer(kind=8)) j_234;

(insn 592 591 593 (set (reg:SI 495)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":180 -1
     (nil))

(insn 593 592 0 (set (reg:DI 306 [ _220 ])
        (sign_extend:DI (reg:SI 495))) "CALEKM.f":180 -1
     (nil))

;; _221 = _220 * 119;

(insn 594 593 0 (parallel [
            (set (reg:DI 307 [ _221 ])
                (mult:DI (reg:DI 306 [ _220 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":180 -1
     (nil))

;; _222 = (integer(kind=8)) i_231;

(insn 595 594 596 (set (reg:SI 496)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":180 -1
     (nil))

(insn 596 595 0 (set (reg:DI 308 [ _222 ])
        (sign_extend:DI (reg:SI 496))) "CALEKM.f":180 -1
     (nil))

;; _223 = _221 + _222;

(insn 597 596 0 (parallel [
            (set (reg:DI 309 [ _223 ])
                (plus:DI (reg:DI 307 [ _221 ])
                    (reg:DI 308 [ _222 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":180 -1
     (nil))

;; _224 = _223 + -120;

(insn 598 597 0 (parallel [
            (set (reg:DI 310 [ _224 ])
                (plus:DI (reg:DI 309 [ _223 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":180 -1
     (nil))

;; _225 = _219 * 5.0e-1;

(insn 599 598 600 (set (reg:SF 497)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "CALEKM.f":180 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))

(insn 600 599 0 (set (reg:SF 311 [ _225 ])
        (mult:SF (reg:SF 305 [ _219 ])
            (reg:SF 497))) "CALEKM.f":180 -1
     (nil))

;; *v1d_254(D)[_224] = _225;

(insn 601 600 602 (set (reg/f:DI 498)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 v1d+0 S8 A64])) "CALEKM.f":180 -1
     (nil))

(insn 602 601 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 310 [ _224 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 498)) [1 *v1d_254(D) S4 A32])
        (reg:SF 311 [ _225 ])) "CALEKM.f":180 -1
     (nil))

;; i_312 = i_231 + 1;

(insn 603 602 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":111 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; 

(code_label 607 606 608 11 (nil) [0 uses])

(note 608 607 0 NOTE_INSN_BASIC_BLOCK)

;; j_313 = j_234 + 1;

(insn 609 608 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":110 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; 

(code_label 613 612 614 10 (nil) [0 uses])

(note 614 613 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 33

;; ufal ={v} {CLOBBER};

(nil)

;; ug ={v} {CLOBBER};

(nil)

;; vfal ={v} {CLOBBER};

(nil)

;; vg ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 34

;; <L45>:

(code_label 616 615 617 27 (nil) [0 uses])

(note 617 616 0 NOTE_INSN_BASIC_BLOCK)
Purged non-fallthru edges from bb 38
Purged non-fallthru edges from bb 40
Purged non-fallthru edges from bb 42
Purged non-fallthru edges from bb 44
Purged non-fallthru edges from bb 46
Purged non-fallthru edges from bb 48
Purged non-fallthru edges from bb 50


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 19->21 redirected to 22
Forwarding edge 19->20 to 23 failed.
Forwarding edge 19->20 to 23 failed.
deleting block 21
Edge 23->25 redirected to 26
Forwarding edge 23->24 to 27 failed.
Forwarding edge 23->24 to 27 failed.
deleting block 25
Edge 27->29 redirected to 30
Forwarding edge 27->28 to 31 failed.
Forwarding edge 27->28 to 31 failed.
deleting block 29
Edge 31->33 redirected to 34
Forwarding edge 31->32 to 38 failed.
Forwarding edge 31->32 to 38 failed.
deleting block 33
Edge 34->36 redirected to 37
Forwarding edge 34->35 to 38 failed.
Forwarding edge 34->35 to 38 failed.
deleting block 36
Edge 38->40 redirected to 41
Forwarding edge 38->39 to 45 failed.
Forwarding edge 38->39 to 45 failed.
deleting block 40
Edge 41->43 redirected to 44
Forwarding edge 41->42 to 45 failed.
Forwarding edge 41->42 to 45 failed.
deleting block 43
Merging block 48 into block 47...
Merged blocks 47 and 48.
Merged 47 and 48 without moving.
Merging block 49 into block 47...
Merged blocks 47 and 49.
Merged 47 and 49 without moving.
Merging block 50 into block 47...
Merged blocks 47 and 50.
Merged 47 and 50 without moving.


try_optimize_cfg iteration 2

Forwarding edge 19->20 to 23 failed.
Forwarding edge 23->24 to 27 failed.
Forwarding edge 27->28 to 31 failed.
Forwarding edge 31->32 to 38 failed.
Forwarding edge 34->35 to 38 failed.
Forwarding edge 38->39 to 45 failed.
Forwarding edge 41->42 to 45 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 u1d+0 S8 A64])
        (reg:DI 5 di [ u1d ])) "CALEKM.f":1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 v1d+0 S8 A64])
        (reg:DI 4 si [ v1d ])) "CALEKM.f":1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SF 324)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALEKM.f":77 -1
     (nil))
(insn 8 7 9 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 d75pi+0 S4 A32])
        (reg:SF 324)) "CALEKM.f":77 -1
     (nil))
(insn 9 8 10 2 (set (reg:SF 325)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALEKM.f":78 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 deg2rd+0 S4 A32])
        (reg:SF 325)) "CALEKM.f":78 -1
     (nil))
(insn 11 10 12 2 (set (reg:SF 326)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALEKM.f":79 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 sqrt2+0 S4 A32])
        (reg:SF 326)) "CALEKM.f":79 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 312 [ _246 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9243e3a5a0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CALEKM.f":84 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 313 [ _247 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9243e3a5a0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CALEKM.f":84 -1
     (nil))
(insn 15 14 87 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
        (reg:SI 312 [ _246 ])) "CALEKM.f":84 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              8 (DFS_BACK)
(code_label 87 15 16 4 5 (nil) [1 uses])
(note 16 87 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (reg:SI 313 [ _247 ]))) "CALEKM.f":84 -1
     (nil))
(insn 18 17 19 4 (set (reg:QI 327)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALEKM.f":84 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 314 [ _249 ])
        (zero_extend:SI (reg:QI 327))) "CALEKM.f":84 -1
     (nil))
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 314 [ _249 ])
            (const_int 0 [0]))) "CALEKM.f":84 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) "CALEKM.f":84 -1
     (nil)
 -> 90)
;;  succ:       9
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 81 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CALEKM.f":85 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              7 (DFS_BACK)
(code_label 81 23 24 6 4 (nil) [1 uses])
(note 24 81 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALEKM.f":85 -1
     (nil))
(insn 26 25 27 6 (set (reg:QI 328)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALEKM.f":85 -1
     (nil))
(insn 27 26 28 6 (set (reg:SI 315 [ _251 ])
        (zero_extend:SI (reg:QI 328))) "CALEKM.f":85 -1
     (nil))
(insn 28 27 29 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 315 [ _251 ])
            (const_int 0 [0]))) "CALEKM.f":85 -1
     (nil))
(jump_insn 29 28 30 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "CALEKM.f":85 -1
     (nil)
 -> 84)
;;  succ:       8
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg:SI 329)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":86 -1
     (nil))
(insn 32 31 33 7 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 329))) "CALEKM.f":86 -1
     (nil))
(insn 33 32 34 7 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":86 -1
     (nil))
(insn 34 33 35 7 (set (reg:SI 330)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":86 -1
     (nil))
(insn 35 34 36 7 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 330))) "CALEKM.f":86 -1
     (nil))
(insn 36 35 37 7 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":86 -1
     (nil))
(insn 37 36 38 7 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":86 -1
     (nil))
(insn 38 37 39 7 (set (reg/f:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 u1d+0 S8 A64])) "CALEKM.f":86 -1
     (nil))
(insn 39 38 40 7 (set (reg:SF 332)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALEKM.f":86 -1
     (nil))
(insn 40 39 41 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 91 [ _5 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 331)) [1 *u1d_252(D) S4 A32])
        (reg:SF 332)) "CALEKM.f":86 -1
     (nil))
(insn 41 40 42 7 (set (reg:SI 333)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":87 -1
     (nil))
(insn 42 41 43 7 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 333))) "CALEKM.f":87 -1
     (nil))
(insn 43 42 44 7 (parallel [
            (set (reg:DI 93 [ _7 ])
                (mult:DI (reg:DI 92 [ _6 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":87 -1
     (nil))
(insn 44 43 45 7 (set (reg:SI 334)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":87 -1
     (nil))
(insn 45 44 46 7 (set (reg:DI 94 [ _8 ])
        (sign_extend:DI (reg:SI 334))) "CALEKM.f":87 -1
     (nil))
(insn 46 45 47 7 (parallel [
            (set (reg:DI 95 [ _9 ])
                (plus:DI (reg:DI 93 [ _7 ])
                    (reg:DI 94 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":87 -1
     (nil))
(insn 47 46 48 7 (parallel [
            (set (reg:DI 96 [ _10 ])
                (plus:DI (reg:DI 95 [ _9 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":87 -1
     (nil))
(insn 48 47 49 7 (set (reg/f:DI 335)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 v1d+0 S8 A64])) "CALEKM.f":87 -1
     (nil))
(insn 49 48 50 7 (set (reg:SF 336)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALEKM.f":87 -1
     (nil))
(insn 50 49 51 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 96 [ _10 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 335)) [1 *v1d_254(D) S4 A32])
        (reg:SF 336)) "CALEKM.f":87 -1
     (nil))
(insn 51 50 52 7 (set (reg:SI 337)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":88 -1
     (nil))
(insn 52 51 53 7 (set (reg:DI 97 [ _11 ])
        (sign_extend:DI (reg:SI 337))) "CALEKM.f":88 -1
     (nil))
(insn 53 52 54 7 (parallel [
            (set (reg:DI 98 [ _12 ])
                (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))
(insn 54 53 55 7 (set (reg:SI 338)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":88 -1
     (nil))
(insn 55 54 56 7 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 338))) "CALEKM.f":88 -1
     (nil))
(insn 56 55 57 7 (parallel [
            (set (reg:DI 100 [ _14 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (reg:DI 99 [ _13 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg:DI 101 [ _15 ])
                (plus:DI (reg:DI 100 [ _14 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))
(insn 58 57 59 7 (set (reg:SI 339)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":88 -1
     (nil))
(insn 59 58 60 7 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 339))) "CALEKM.f":88 -1
     (nil))
(insn 60 59 61 7 (parallel [
            (set (reg:DI 103 [ _17 ])
                (mult:DI (reg:DI 102 [ _16 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))
(insn 61 60 62 7 (set (reg:SI 340)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":88 -1
     (nil))
(insn 62 61 63 7 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 340))) "CALEKM.f":88 -1
     (nil))
(insn 63 62 64 7 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))
(insn 64 63 65 7 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))
(insn 65 64 66 7 (set (reg/f:DI 341)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9243e2a870 extra>)) "CALEKM.f":88 -1
     (nil))
(insn 66 65 67 7 (parallel [
            (set (reg:DI 342)
                (plus:DI (reg:DI 101 [ _15 ])
                    (const_int 4914072 [0x4afb98])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":88 -1
     (nil))
(insn 67 66 68 7 (set (reg:SF 107 [ _21 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 342)
                    (const_int 4 [0x4]))
                (reg/f:DI 341)) [1 extra.z1000 S4 A32])) "CALEKM.f":88 -1
     (nil))
(insn 68 67 69 7 (set (reg/f:DI 343)
        (symbol_ref:DI ("zh.4173") [flags 0x202]  <var_decl 0x7f9243e42120 zh>)) "CALEKM.f":88 -1
     (nil))
(insn 69 68 70 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 343)) [1 zh S4 A32])
        (reg:SF 107 [ _21 ])) "CALEKM.f":88 -1
     (nil))
(insn 70 69 71 7 (set (reg:SI 344)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":89 -1
     (nil))
(insn 71 70 72 7 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 344))) "CALEKM.f":89 -1
     (nil))
(insn 72 71 73 7 (parallel [
            (set (reg:DI 109 [ _23 ])
                (mult:DI (reg:DI 108 [ _22 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":89 -1
     (nil))
(insn 73 72 74 7 (set (reg:SI 345)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":89 -1
     (nil))
(insn 74 73 75 7 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 345))) "CALEKM.f":89 -1
     (nil))
(insn 75 74 76 7 (parallel [
            (set (reg:DI 111 [ _25 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (reg:DI 110 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":89 -1
     (nil))
(insn 76 75 77 7 (parallel [
            (set (reg:DI 112 [ _26 ])
                (plus:DI (reg:DI 111 [ _25 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":89 -1
     (nil))
(insn 77 76 78 7 (set (reg/f:DI 346)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":89 -1
     (nil))
(insn 78 77 79 7 (set (reg:SF 347)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALEKM.f":89 -1
     (nil))
(insn 79 78 80 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 112 [ _26 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 346)) [1 zv S4 A32])
        (reg:SF 347)) "CALEKM.f":89 -1
     (nil))
(insn 80 79 82 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":85 -1
     (nil))
(jump_insn 82 80 83 7 (set (pc)
        (label_ref 81)) "CALEKM.f":85 -1
     (nil)
 -> 81)
;;  succ:       6 (DFS_BACK)

(barrier 83 82 84)
;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 84 83 85 8 3 (nil) [1 uses])
(note 85 84 86 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 88 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":84 -1
     (nil))
(jump_insn 88 86 89 8 (set (pc)
        (label_ref 87)) "CALEKM.f":84 -1
     (nil)
 -> 87)
;;  succ:       4 (DFS_BACK)

(barrier 89 88 90)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 90 89 91 9 2 (nil) [1 uses])
(note 91 90 92 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 9 (set (reg:DI 1 dx)
        (symbol_ref:DI ("zh.4173") [flags 0x202]  <var_decl 0x7f9243e42120 zh>)) "CALEKM.f":97 -1
     (nil))
(insn 93 92 94 9 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f9243e3a120 masks>)) "CALEKM.f":97 -1
     (nil))
(insn 94 93 95 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f9243e42f30 *.LC4>)) "CALEKM.f":97 -1
     (nil))
(insn 95 94 96 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALEKM.f":97 -1
     (nil))
(call_insn 96 95 97 9 (call (mem:QI (symbol_ref:DI ("p2filt_") [flags 0x41]  <function_decl 0x7f9243e1a600 p2filt>) [0 p2filt S1 A8])
        (const_int 0 [0])) "CALEKM.f":97 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 97 96 98 9 (set (reg:SI 316 [ _261 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9243e3a5a0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "CALEKM.f":99 -1
     (nil))
(insn 98 97 99 9 (set (reg:SI 317 [ _262 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9243e3a5a0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "CALEKM.f":99 -1
     (nil))
(insn 99 98 187 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
        (reg:SI 316 [ _261 ])) "CALEKM.f":99 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 1, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
;;              14 (DFS_BACK)
(code_label 187 99 100 10 9 (nil) [1 uses])
(note 100 187 101 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (reg:SI 317 [ _262 ]))) "CALEKM.f":99 -1
     (nil))
(insn 102 101 103 10 (set (reg:QI 348)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALEKM.f":99 -1
     (nil))
(insn 103 102 104 10 (set (reg:SI 318 [ _264 ])
        (zero_extend:SI (reg:QI 348))) "CALEKM.f":99 -1
     (nil))
(insn 104 103 105 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 318 [ _264 ])
            (const_int 0 [0]))) "CALEKM.f":99 -1
     (nil))
(jump_insn 105 104 106 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) "CALEKM.f":99 -1
     (nil)
 -> 190)
;;  succ:       15
;;              11 (FALLTHRU)

;; basic block 11, loop depth 1, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 106 105 107 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 181 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALEKM.f":100 -1
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 2, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
;;              13 (DFS_BACK)
(code_label 181 107 108 12 8 (nil) [1 uses])
(note 108 181 109 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALEKM.f":100 -1
     (nil))
(insn 110 109 111 12 (set (reg:QI 349)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALEKM.f":100 -1
     (nil))
(insn 111 110 112 12 (set (reg:SI 319 [ _266 ])
        (zero_extend:SI (reg:QI 349))) "CALEKM.f":100 -1
     (nil))
(insn 112 111 113 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 319 [ _266 ])
            (const_int 0 [0]))) "CALEKM.f":100 -1
     (nil))
(jump_insn 113 112 114 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) "CALEKM.f":100 -1
     (nil)
 -> 184)
;;  succ:       14
;;              13 (FALLTHRU)

;; basic block 13, loop depth 2, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 114 113 115 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 13 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 116 115 117 13 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 350))) "CALEKM.f":102 -1
     (nil))
(insn 117 116 118 13 (parallel [
            (set (reg:DI 114 [ _28 ])
                (mult:DI (reg:DI 113 [ _27 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 118 117 119 13 (set (reg:SI 351)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 119 118 120 13 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 351))) "CALEKM.f":102 -1
     (nil))
(insn 120 119 121 13 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 121 120 122 13 (parallel [
            (set (reg:DI 352)
                (plus:DI (reg:DI 116 [ _30 ])
                    (const_int 498 [0x1f2])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 122 121 123 13 (set (reg:SI 117 [ _31 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 352)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f9243e30630 indx>)) [2 indx.ive S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 123 122 124 13 (set (reg:SI 353)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 124 123 125 13 (parallel [
            (set (reg:SI 118 [ _32 ])
                (plus:SI (reg:SI 117 [ _31 ])
                    (reg:SI 353)))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 117 [ _31 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))
(insn 125 124 126 13 (set (reg:DI 119 [ _33 ])
        (sign_extend:DI (reg:SI 118 [ _32 ]))) "CALEKM.f":102 -1
     (nil))
(insn 126 125 127 13 (parallel [
            (set (reg:DI 120 [ _34 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (reg:DI 119 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 127 126 128 13 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 120 [ _34 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 128 127 129 13 (set (reg/f:DI 354)
        (symbol_ref:DI ("zh.4173") [flags 0x202]  <var_decl 0x7f9243e42120 zh>)) "CALEKM.f":102 -1
     (nil))
(insn 129 128 130 13 (set (reg:SF 122 [ _36 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 121 [ _35 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 354)) [1 zh S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 130 129 131 13 (set (reg:SI 355)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 131 130 132 13 (set (reg:DI 123 [ _37 ])
        (sign_extend:DI (reg:SI 355))) "CALEKM.f":102 -1
     (nil))
(insn 132 131 133 13 (parallel [
            (set (reg:DI 124 [ _38 ])
                (mult:DI (reg:DI 123 [ _37 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 133 132 134 13 (set (reg:SI 356)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 134 133 135 13 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 356))) "CALEKM.f":102 -1
     (nil))
(insn 135 134 136 13 (parallel [
            (set (reg:DI 126 [ _40 ])
                (plus:DI (reg:DI 125 [ _39 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 136 135 137 13 (parallel [
            (set (reg:DI 357)
                (plus:DI (reg:DI 126 [ _40 ])
                    (const_int 747 [0x2eb])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 137 136 138 13 (set (reg:SI 127 [ _41 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 357)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f9243e30630 indx>)) [2 indx.ivw S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 138 137 139 13 (set (reg:SI 358)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 139 138 140 13 (parallel [
            (set (reg:SI 128 [ _42 ])
                (plus:SI (reg:SI 127 [ _41 ])
                    (reg:SI 358)))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 127 [ _41 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))
(insn 140 139 141 13 (set (reg:DI 129 [ _43 ])
        (sign_extend:DI (reg:SI 128 [ _42 ]))) "CALEKM.f":102 -1
     (nil))
(insn 141 140 142 13 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (reg:DI 129 [ _43 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 142 141 143 13 (parallel [
            (set (reg:DI 131 [ _45 ])
                (plus:DI (reg:DI 130 [ _44 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 143 142 144 13 (set (reg/f:DI 359)
        (symbol_ref:DI ("zh.4173") [flags 0x202]  <var_decl 0x7f9243e42120 zh>)) "CALEKM.f":102 -1
     (nil))
(insn 144 143 145 13 (set (reg:SF 132 [ _46 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 131 [ _45 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 359)) [1 zh S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 145 144 146 13 (set (reg:SF 133 [ _47 ])
        (plus:SF (reg:SF 122 [ _36 ])
            (reg:SF 132 [ _46 ]))) "CALEKM.f":102 -1
     (nil))
(insn 146 145 147 13 (set (reg:SI 360)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 147 146 148 13 (parallel [
            (set (reg:SI 134 [ _48 ])
                (plus:SI (reg:SI 360)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 148 147 149 13 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 134 [ _48 ]))) "CALEKM.f":102 -1
     (nil))
(insn 149 148 150 13 (parallel [
            (set (reg:DI 136 [ _50 ])
                (mult:DI (reg:DI 135 [ _49 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 150 149 151 13 (set (reg:SI 361)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 151 150 152 13 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 361))) "CALEKM.f":102 -1
     (nil))
(insn 152 151 153 13 (parallel [
            (set (reg:DI 138 [ _52 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 153 152 154 13 (parallel [
            (set (reg:DI 139 [ _53 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 154 153 155 13 (set (reg/f:DI 362)
        (symbol_ref:DI ("zh.4173") [flags 0x202]  <var_decl 0x7f9243e42120 zh>)) "CALEKM.f":102 -1
     (nil))
(insn 155 154 156 13 (set (reg:SF 140 [ _54 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 139 [ _53 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 362)) [1 zh S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 156 155 157 13 (set (reg:SF 141 [ _55 ])
        (plus:SF (reg:SF 133 [ _47 ])
            (reg:SF 140 [ _54 ]))) "CALEKM.f":102 -1
     (nil))
(insn 157 156 158 13 (set (reg:SI 363)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 158 157 159 13 (parallel [
            (set (reg:SI 142 [ _56 ])
                (plus:SI (reg:SI 363)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 159 158 160 13 (set (reg:DI 143 [ _57 ])
        (sign_extend:DI (reg:SI 142 [ _56 ]))) "CALEKM.f":102 -1
     (nil))
(insn 160 159 161 13 (parallel [
            (set (reg:DI 144 [ _58 ])
                (mult:DI (reg:DI 143 [ _57 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 161 160 162 13 (set (reg:SI 364)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 162 161 163 13 (set (reg:DI 145 [ _59 ])
        (sign_extend:DI (reg:SI 364))) "CALEKM.f":102 -1
     (nil))
(insn 163 162 164 13 (parallel [
            (set (reg:DI 146 [ _60 ])
                (plus:DI (reg:DI 144 [ _58 ])
                    (reg:DI 145 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 164 163 165 13 (parallel [
            (set (reg:DI 147 [ _61 ])
                (plus:DI (reg:DI 146 [ _60 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 165 164 166 13 (set (reg/f:DI 365)
        (symbol_ref:DI ("zh.4173") [flags 0x202]  <var_decl 0x7f9243e42120 zh>)) "CALEKM.f":102 -1
     (nil))
(insn 166 165 167 13 (set (reg:SF 148 [ _62 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 147 [ _61 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 365)) [1 zh S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 167 166 168 13 (set (reg:SF 149 [ _63 ])
        (plus:SF (reg:SF 141 [ _55 ])
            (reg:SF 148 [ _62 ]))) "CALEKM.f":102 -1
     (nil))
(insn 168 167 169 13 (set (reg:SF 150 [ _64 ])
        (reg:SF 149 [ _63 ])) "CALEKM.f":102 -1
     (nil))
(insn 169 168 170 13 (set (reg:SI 366)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 170 169 171 13 (set (reg:DI 151 [ _65 ])
        (sign_extend:DI (reg:SI 366))) "CALEKM.f":102 -1
     (nil))
(insn 171 170 172 13 (parallel [
            (set (reg:DI 152 [ _66 ])
                (mult:DI (reg:DI 151 [ _65 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 172 171 173 13 (set (reg:SI 367)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":102 -1
     (nil))
(insn 173 172 174 13 (set (reg:DI 153 [ _67 ])
        (sign_extend:DI (reg:SI 367))) "CALEKM.f":102 -1
     (nil))
(insn 174 173 175 13 (parallel [
            (set (reg:DI 154 [ _68 ])
                (plus:DI (reg:DI 152 [ _66 ])
                    (reg:DI 153 [ _67 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 175 174 176 13 (parallel [
            (set (reg:DI 155 [ _69 ])
                (plus:DI (reg:DI 154 [ _68 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":102 -1
     (nil))
(insn 176 175 177 13 (set (reg:SF 368)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALEKM.f":102 -1
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 177 176 178 13 (set (reg:SF 156 [ _70 ])
        (mult:SF (reg:SF 150 [ _64 ])
            (reg:SF 368))) "CALEKM.f":102 -1
     (nil))
(insn 178 177 179 13 (set (reg/f:DI 369)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":102 -1
     (nil))
(insn 179 178 180 13 (set (mem:SF (plus:DI (mult:DI (reg:DI 155 [ _69 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 369)) [1 zv S4 A32])
        (reg:SF 156 [ _70 ])) "CALEKM.f":102 -1
     (nil))
(insn 180 179 182 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":100 -1
     (nil))
(jump_insn 182 180 183 13 (set (pc)
        (label_ref 181)) "CALEKM.f":100 -1
     (nil)
 -> 181)
;;  succ:       12 (DFS_BACK)

(barrier 183 182 184)
;; basic block 14, loop depth 1, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 184 183 185 14 7 (nil) [1 uses])
(note 185 184 186 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 188 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":99 -1
     (nil))
(jump_insn 188 186 189 14 (set (pc)
        (label_ref 187)) "CALEKM.f":99 -1
     (nil)
 -> 187)
;;  succ:       10 (DFS_BACK)

(barrier 189 188 190)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 190 189 191 15 6 (nil) [1 uses])
(note 191 190 192 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 15 (set (reg:DI 1 dx)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":106 -1
     (nil))
(insn 193 192 194 15 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f9243e3a120 masks>)
                (const_int 118524 [0x1cefc])))) "CALEKM.f":106 -1
     (nil))
(insn 194 193 195 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f9243e42f30 *.LC4>)) "CALEKM.f":106 -1
     (nil))
(insn 195 194 196 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALEKM.f":106 -1
     (nil))
(call_insn 196 195 197 15 (call (mem:QI (symbol_ref:DI ("p2fltv_") [flags 0x41]  <function_decl 0x7f9243e1a700 p2fltv>) [0 p2fltv S1 A8])
        (const_int 0 [0])) "CALEKM.f":106 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 197 196 198 15 (set (reg:SI 320 [ _271 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9243e3a5a0 parallel>)
                    (const_int 24 [0x18]))) [2 parallel.jsta_m2+0 S4 A64])) "CALEKM.f":110 -1
     (nil))
(insn 198 197 199 15 (set (reg:SI 321 [ _272 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9243e3a5a0 parallel>)
                    (const_int 28 [0x1c]))) [2 parallel.jend_m2+0 S4 A32])) "CALEKM.f":110 -1
     (nil))
(insn 199 198 610 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
        (reg:SI 320 [ _271 ])) "CALEKM.f":110 -1
     (nil))
;;  succ:       16 (FALLTHRU)

;; basic block 16, loop depth 1, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
;;              46 (DFS_BACK)
(code_label 610 199 200 16 26 (nil) [1 uses])
(note 200 610 201 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (reg:SI 321 [ _272 ]))) "CALEKM.f":110 -1
     (nil))
(insn 202 201 203 16 (set (reg:QI 370)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALEKM.f":110 -1
     (nil))
(insn 203 202 204 16 (set (reg:SI 322 [ _274 ])
        (zero_extend:SI (reg:QI 370))) "CALEKM.f":110 -1
     (nil))
(insn 204 203 205 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 322 [ _274 ])
            (const_int 0 [0]))) "CALEKM.f":110 -1
     (nil))
(jump_insn 205 204 206 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 613)
            (pc))) "CALEKM.f":110 -1
     (nil)
 -> 613)
;;  succ:       47
;;              17 (FALLTHRU)

;; basic block 17, loop depth 1, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 206 205 207 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 604 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALEKM.f":111 -1
     (nil))
;;  succ:       18 (FALLTHRU)

;; basic block 18, loop depth 2, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
;;              45 (DFS_BACK)
(code_label 604 207 208 18 25 (nil) [1 uses])
(note 208 604 209 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALEKM.f":111 -1
     (nil))
(insn 210 209 211 18 (set (reg:QI 371)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALEKM.f":111 -1
     (nil))
(insn 211 210 212 18 (set (reg:SI 323 [ _276 ])
        (zero_extend:SI (reg:QI 371))) "CALEKM.f":111 -1
     (nil))
(insn 212 211 213 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 323 [ _276 ])
            (const_int 0 [0]))) "CALEKM.f":111 -1
     (nil))
(jump_insn 213 212 214 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 607)
            (pc))) "CALEKM.f":111 -1
     (nil)
 -> 607)
;;  succ:       46
;;              19 (FALLTHRU)

;; basic block 19, loop depth 2, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
(note 214 213 215 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 216 19 (set (reg:SI 372)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":115 -1
     (nil))
(insn 216 215 217 19 (set (reg:DI 157 [ _71 ])
        (sign_extend:DI (reg:SI 372))) "CALEKM.f":115 -1
     (nil))
(insn 217 216 218 19 (parallel [
            (set (reg:DI 158 [ _72 ])
                (mult:DI (reg:DI 157 [ _71 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":115 -1
     (nil))
(insn 218 217 219 19 (set (reg:SI 373)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":115 -1
     (nil))
(insn 219 218 220 19 (set (reg:DI 159 [ _73 ])
        (sign_extend:DI (reg:SI 373))) "CALEKM.f":115 -1
     (nil))
(insn 220 219 221 19 (parallel [
            (set (reg:DI 160 [ _74 ])
                (plus:DI (reg:DI 158 [ _72 ])
                    (reg:DI 159 [ _73 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":115 -1
     (nil))
(insn 221 220 222 19 (parallel [
            (set (reg:DI 161 [ _75 ])
                (plus:DI (reg:DI 160 [ _74 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":115 -1
     (nil))
(insn 222 221 223 19 (set (reg/f:DI 374)
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9243e30900 loops>)) "CALEKM.f":115 -1
     (nil))
(insn 223 222 224 19 (parallel [
            (set (reg:DI 375)
                (plus:DI (reg:DI 161 [ _75 ])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":115 -1
     (nil))
(insn 224 223 225 19 (set (reg:SI 376)
        (mem:SI (plus:DI (mult:DI (reg:DI 375)
                    (const_int 4 [0x4]))
                (reg/f:DI 374)) [2 loops.lmh S4 A32])) "CALEKM.f":115 -1
     (nil))
(insn 225 224 226 19 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 llmh+0 S4 A32])
        (reg:SI 376)) "CALEKM.f":115 -1
     (nil))
(insn 226 225 227 19 (set (reg:SI 377)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 llmh+0 S4 A32])) "CALEKM.f":116 -1
     (nil))
(insn 227 226 228 19 (set (reg:DI 162 [ _76 ])
        (sign_extend:DI (reg:SI 377))) "CALEKM.f":116 -1
     (nil))
(insn 228 227 229 19 (parallel [
            (set (reg:DI 163 [ _77 ])
                (mult:DI (reg:DI 162 [ _76 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":116 -1
     (nil))
(insn 229 228 230 19 (set (reg:SI 378)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":116 -1
     (nil))
(insn 230 229 231 19 (set (reg:DI 164 [ _78 ])
        (sign_extend:DI (reg:SI 378))) "CALEKM.f":116 -1
     (nil))
(insn 231 230 232 19 (parallel [
            (set (reg:DI 165 [ _79 ])
                (mult:DI (reg:DI 164 [ _78 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":116 -1
     (nil))
(insn 232 231 233 19 (parallel [
            (set (reg:DI 166 [ _80 ])
                (plus:DI (reg:DI 163 [ _77 ])
                    (reg:DI 165 [ _79 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":116 -1
     (nil))
(insn 233 232 234 19 (set (reg:SI 379)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":116 -1
     (nil))
(insn 234 233 235 19 (set (reg:DI 167 [ _81 ])
        (sign_extend:DI (reg:SI 379))) "CALEKM.f":116 -1
     (nil))
(insn 235 234 236 19 (parallel [
            (set (reg:DI 168 [ _82 ])
                (plus:DI (reg:DI 166 [ _80 ])
                    (reg:DI 167 [ _81 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":116 -1
     (nil))
(insn 236 235 237 19 (parallel [
            (set (reg:DI 169 [ _83 ])
                (plus:DI (reg:DI 168 [ _82 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":116 -1
     (nil))
(insn 237 236 238 19 (set (reg/f:DI 380)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f9243e3ae10 vrbls>)) "CALEKM.f":116 -1
     (nil))
(insn 238 237 239 19 (parallel [
            (set (reg:DI 381)
                (plus:DI (reg:DI 169 [ _83 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":116 -1
     (nil))
(insn 239 238 240 19 (set (reg:SF 170 [ _84 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 381)
                    (const_int 4 [0x4]))
                (reg/f:DI 380)) [1 vrbls.u S4 A32])) "CALEKM.f":116 -1
     (nil))
(insn 240 239 241 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [1 ufal+0 S4 A64])
        (reg:SF 170 [ _84 ])) "CALEKM.f":116 -1
     (nil))
(insn 241 240 242 19 (set (reg:SI 382)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 llmh+0 S4 A32])) "CALEKM.f":117 -1
     (nil))
(insn 242 241 243 19 (set (reg:DI 171 [ _85 ])
        (sign_extend:DI (reg:SI 382))) "CALEKM.f":117 -1
     (nil))
(insn 243 242 244 19 (parallel [
            (set (reg:DI 172 [ _86 ])
                (mult:DI (reg:DI 171 [ _85 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":117 -1
     (nil))
(insn 244 243 245 19 (set (reg:SI 383)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":117 -1
     (nil))
(insn 245 244 246 19 (set (reg:DI 173 [ _87 ])
        (sign_extend:DI (reg:SI 383))) "CALEKM.f":117 -1
     (nil))
(insn 246 245 247 19 (parallel [
            (set (reg:DI 174 [ _88 ])
                (mult:DI (reg:DI 173 [ _87 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":117 -1
     (nil))
(insn 247 246 248 19 (parallel [
            (set (reg:DI 175 [ _89 ])
                (plus:DI (reg:DI 172 [ _86 ])
                    (reg:DI 174 [ _88 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":117 -1
     (nil))
(insn 248 247 249 19 (set (reg:SI 384)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":117 -1
     (nil))
(insn 249 248 250 19 (set (reg:DI 176 [ _90 ])
        (sign_extend:DI (reg:SI 384))) "CALEKM.f":117 -1
     (nil))
(insn 250 249 251 19 (parallel [
            (set (reg:DI 177 [ _91 ])
                (plus:DI (reg:DI 175 [ _89 ])
                    (reg:DI 176 [ _90 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":117 -1
     (nil))
(insn 251 250 252 19 (parallel [
            (set (reg:DI 178 [ _92 ])
                (plus:DI (reg:DI 177 [ _91 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":117 -1
     (nil))
(insn 252 251 253 19 (set (reg/f:DI 385)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f9243e3ae10 vrbls>)) "CALEKM.f":117 -1
     (nil))
(insn 253 252 254 19 (parallel [
            (set (reg:DI 386)
                (plus:DI (reg:DI 178 [ _92 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":117 -1
     (nil))
(insn 254 253 255 19 (set (reg:SF 179 [ _93 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 386)
                    (const_int 4 [0x4]))
                (reg/f:DI 385)) [1 vrbls.v S4 A32])) "CALEKM.f":117 -1
     (nil))
(insn 255 254 256 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [1 vfal+0 S4 A64])
        (reg:SF 179 [ _93 ])) "CALEKM.f":117 -1
     (nil))
(insn 256 255 257 19 (set (reg:SI 387)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":125 -1
     (nil))
(insn 257 256 258 19 (set (reg:DI 180 [ _94 ])
        (sign_extend:DI (reg:SI 387))) "CALEKM.f":125 -1
     (nil))
(insn 258 257 259 19 (parallel [
            (set (reg:DI 181 [ _95 ])
                (mult:DI (reg:DI 180 [ _94 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":125 -1
     (nil))
(insn 259 258 260 19 (set (reg:SI 388)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":125 -1
     (nil))
(insn 260 259 261 19 (set (reg:DI 182 [ _96 ])
        (sign_extend:DI (reg:SI 388))) "CALEKM.f":125 -1
     (nil))
(insn 261 260 262 19 (parallel [
            (set (reg:DI 183 [ _97 ])
                (plus:DI (reg:DI 181 [ _95 ])
                    (reg:DI 182 [ _96 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":125 -1
     (nil))
(insn 262 261 263 19 (parallel [
            (set (reg:DI 184 [ _98 ])
                (plus:DI (reg:DI 183 [ _97 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":125 -1
     (nil))
(insn 263 262 264 19 (set (reg/f:DI 389)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f9243e23870 dynam>)) "CALEKM.f":125 -1
     (nil))
(insn 264 263 265 19 (parallel [
            (set (reg:DI 390)
                (plus:DI (reg:DI 184 [ _98 ])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":125 -1
     (nil))
(insn 265 264 266 19 (set (reg:SF 185 [ _99 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 390)
                    (const_int 4 [0x4]))
                (reg/f:DI 389)) [1 dynam.f S4 A32])) "CALEKM.f":125 -1
     (nil))
(insn 266 265 267 19 (set (reg:SF 186 [ _100 ])
        (plus:SF (reg:SF 185 [ _99 ])
            (reg:SF 185 [ _99 ]))) "CALEKM.f":125 -1
     (nil))
(insn 267 266 268 19 (set (reg:SF 187 [ _101 ])
        (reg:SF 186 [ _100 ])) "CALEKM.f":125 -1
     (nil))
(insn 268 267 269 19 (set (reg:SF 188 [ _102 ])
        (mem/c:SF (const:DI (plus:DI (symbol_ref:DI ("ctlblk_") [flags 0x2]  <var_decl 0x7f924ae8dab0 ctlblk>)
                    (const_int 48 [0x30]))) [1 ctlblk.dt+0 S4 A128])) "CALEKM.f":1 -1
     (nil))
(insn 269 268 270 19 (set (reg:SF 391)
        (div:SF (reg:SF 187 [ _101 ])
            (reg:SF 188 [ _102 ]))) "CALEKM.f":125 -1
     (nil))
(insn 270 269 271 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 ftrue+0 S4 A32])
        (reg:SF 391)) "CALEKM.f":125 -1
     (nil))
(insn 271 270 272 19 (set (reg:SF 393)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALEKM.f":126 -1
     (expr_list:REG_EQUAL (const_double:SF 9.80000019073486328125e+0 [0x0.9ccccdp+4])
        (nil)))
(insn 272 271 273 19 (set (reg:SF 392)
        (div:SF (reg:SF 393)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [1 ftrue+0 S4 A32]))) "CALEKM.f":126 -1
     (nil))
(insn 273 272 274 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 grf+0 S4 A32])
        (reg:SF 392)) "CALEKM.f":126 -1
     (nil))
(insn 274 273 275 19 (set (reg:SI 394)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 275 274 276 19 (set (reg:DI 189 [ _103 ])
        (sign_extend:DI (reg:SI 394))) "CALEKM.f":127 -1
     (nil))
(insn 276 275 277 19 (parallel [
            (set (reg:DI 190 [ _104 ])
                (mult:DI (reg:DI 189 [ _103 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 277 276 278 19 (set (reg:SI 395)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 278 277 279 19 (set (reg:DI 191 [ _105 ])
        (sign_extend:DI (reg:SI 395))) "CALEKM.f":127 -1
     (nil))
(insn 279 278 280 19 (parallel [
            (set (reg:DI 192 [ _106 ])
                (plus:DI (reg:DI 191 [ _105 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 280 279 281 19 (set (reg:SI 193 [ _107 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 192 [ _106 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f9243e30630 indx>)) [2 indx.ihe S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 281 280 282 19 (set (reg:SI 396)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 282 281 283 19 (parallel [
            (set (reg:SI 194 [ _108 ])
                (plus:SI (reg:SI 193 [ _107 ])
                    (reg:SI 396)))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 193 [ _107 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))
(insn 283 282 284 19 (set (reg:DI 195 [ _109 ])
        (sign_extend:DI (reg:SI 194 [ _108 ]))) "CALEKM.f":127 -1
     (nil))
(insn 284 283 285 19 (parallel [
            (set (reg:DI 196 [ _110 ])
                (plus:DI (reg:DI 190 [ _104 ])
                    (reg:DI 195 [ _109 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 285 284 286 19 (parallel [
            (set (reg:DI 197 [ _111 ])
                (plus:DI (reg:DI 196 [ _110 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 286 285 287 19 (set (reg/f:DI 397)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":127 -1
     (nil))
(insn 287 286 288 19 (set (reg:SF 198 [ _112 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 197 [ _111 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 397)) [1 zv S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 288 287 289 19 (set (reg:SI 398)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 289 288 290 19 (set (reg:DI 199 [ _113 ])
        (sign_extend:DI (reg:SI 398))) "CALEKM.f":127 -1
     (nil))
(insn 290 289 291 19 (parallel [
            (set (reg:DI 200 [ _114 ])
                (mult:DI (reg:DI 199 [ _113 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 291 290 292 19 (set (reg:SI 399)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 292 291 293 19 (set (reg:DI 201 [ _115 ])
        (sign_extend:DI (reg:SI 399))) "CALEKM.f":127 -1
     (nil))
(insn 293 292 294 19 (parallel [
            (set (reg:DI 202 [ _116 ])
                (plus:DI (reg:DI 201 [ _115 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 294 293 295 19 (parallel [
            (set (reg:DI 400)
                (plus:DI (reg:DI 202 [ _116 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 295 294 296 19 (set (reg:SI 203 [ _117 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 400)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f9243e30630 indx>)) [2 indx.ihw S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 296 295 297 19 (set (reg:SI 401)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 297 296 298 19 (parallel [
            (set (reg:SI 204 [ _118 ])
                (plus:SI (reg:SI 203 [ _117 ])
                    (reg:SI 401)))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 203 [ _117 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))
(insn 298 297 299 19 (set (reg:DI 205 [ _119 ])
        (sign_extend:DI (reg:SI 204 [ _118 ]))) "CALEKM.f":127 -1
     (nil))
(insn 299 298 300 19 (parallel [
            (set (reg:DI 206 [ _120 ])
                (plus:DI (reg:DI 200 [ _114 ])
                    (reg:DI 205 [ _119 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 300 299 301 19 (parallel [
            (set (reg:DI 207 [ _121 ])
                (plus:DI (reg:DI 206 [ _120 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 301 300 302 19 (set (reg/f:DI 402)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":127 -1
     (nil))
(insn 302 301 303 19 (set (reg:SF 208 [ _122 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 207 [ _121 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 402)) [1 zv S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 303 302 304 19 (set (reg:SF 209 [ _123 ])
        (minus:SF (reg:SF 198 [ _112 ])
            (reg:SF 208 [ _122 ]))) "CALEKM.f":127 -1
     (nil))
(insn 304 303 305 19 (set (reg:SF 210 [ _124 ])
        (reg:SF 209 [ _123 ])) "CALEKM.f":127 -1
     (nil))
(insn 305 304 306 19 (set (reg:SI 403)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 306 305 307 19 (set (reg:DI 211 [ _125 ])
        (sign_extend:DI (reg:SI 403))) "CALEKM.f":127 -1
     (nil))
(insn 307 306 308 19 (parallel [
            (set (reg:DI 212 [ _126 ])
                (mult:DI (reg:DI 211 [ _125 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 308 307 309 19 (set (reg:SI 404)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 309 308 310 19 (set (reg:DI 213 [ _127 ])
        (sign_extend:DI (reg:SI 404))) "CALEKM.f":127 -1
     (nil))
(insn 310 309 311 19 (parallel [
            (set (reg:DI 214 [ _128 ])
                (plus:DI (reg:DI 212 [ _126 ])
                    (reg:DI 213 [ _127 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 311 310 312 19 (parallel [
            (set (reg:DI 215 [ _129 ])
                (plus:DI (reg:DI 214 [ _128 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 312 311 313 19 (set (reg/f:DI 405)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f9243e23870 dynam>)) "CALEKM.f":127 -1
     (nil))
(insn 313 312 314 19 (parallel [
            (set (reg:DI 406)
                (plus:DI (reg:DI 215 [ _129 ])
                    (const_int 1207 [0x4b7])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":127 -1
     (nil))
(insn 314 313 315 19 (set (reg:SF 216 [ _130 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 406)
                    (const_int 4 [0x4]))
                (reg/f:DI 405)) [1 dynam.dx S4 A32])) "CALEKM.f":127 -1
     (nil))
(insn 315 314 316 19 (set (reg:SF 217 [ _131 ])
        (plus:SF (reg:SF 216 [ _130 ])
            (reg:SF 216 [ _130 ]))) "CALEKM.f":127 -1
     (nil))
(insn 316 315 317 19 (set (reg:SF 218 [ _132 ])
        (reg:SF 217 [ _131 ])) "CALEKM.f":127 -1
     (nil))
(insn 317 316 318 19 (set (reg:SF 407)
        (div:SF (reg:SF 210 [ _124 ])
            (reg:SF 218 [ _132 ]))) "CALEKM.f":127 -1
     (nil))
(insn 318 317 319 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [1 dzdx+0 S4 A32])
        (reg:SF 407)) "CALEKM.f":127 -1
     (nil))
(insn 319 318 320 19 (set (reg:SI 408)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":128 -1
     (nil))
(insn 320 319 321 19 (parallel [
            (set (reg:SI 219 [ _133 ])
                (plus:SI (reg:SI 408)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 321 320 322 19 (set (reg:DI 220 [ _134 ])
        (sign_extend:DI (reg:SI 219 [ _133 ]))) "CALEKM.f":128 -1
     (nil))
(insn 322 321 323 19 (parallel [
            (set (reg:DI 221 [ _135 ])
                (mult:DI (reg:DI 220 [ _134 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (nil))
(insn 323 322 324 19 (set (reg:SI 409)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":128 -1
     (nil))
(insn 324 323 325 19 (set (reg:DI 222 [ _136 ])
        (sign_extend:DI (reg:SI 409))) "CALEKM.f":128 -1
     (nil))
(insn 325 324 326 19 (parallel [
            (set (reg:DI 223 [ _137 ])
                (plus:DI (reg:DI 221 [ _135 ])
                    (reg:DI 222 [ _136 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (nil))
(insn 326 325 327 19 (parallel [
            (set (reg:DI 224 [ _138 ])
                (plus:DI (reg:DI 223 [ _137 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (nil))
(insn 327 326 328 19 (set (reg/f:DI 410)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":128 -1
     (nil))
(insn 328 327 329 19 (set (reg:SF 225 [ _139 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 224 [ _138 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 410)) [1 zv S4 A32])) "CALEKM.f":128 -1
     (nil))
(insn 329 328 330 19 (set (reg:SI 411)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":128 -1
     (nil))
(insn 330 329 331 19 (parallel [
            (set (reg:SI 226 [ _140 ])
                (plus:SI (reg:SI 411)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 331 330 332 19 (set (reg:DI 227 [ _141 ])
        (sign_extend:DI (reg:SI 226 [ _140 ]))) "CALEKM.f":128 -1
     (nil))
(insn 332 331 333 19 (parallel [
            (set (reg:DI 228 [ _142 ])
                (mult:DI (reg:DI 227 [ _141 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (nil))
(insn 333 332 334 19 (set (reg:SI 412)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":128 -1
     (nil))
(insn 334 333 335 19 (set (reg:DI 229 [ _143 ])
        (sign_extend:DI (reg:SI 412))) "CALEKM.f":128 -1
     (nil))
(insn 335 334 336 19 (parallel [
            (set (reg:DI 230 [ _144 ])
                (plus:DI (reg:DI 228 [ _142 ])
                    (reg:DI 229 [ _143 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (nil))
(insn 336 335 337 19 (parallel [
            (set (reg:DI 231 [ _145 ])
                (plus:DI (reg:DI 230 [ _144 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":128 -1
     (nil))
(insn 337 336 338 19 (set (reg/f:DI 413)
        (symbol_ref:DI ("zv.4175") [flags 0x202]  <var_decl 0x7f9243e421b0 zv>)) "CALEKM.f":128 -1
     (nil))
(insn 338 337 339 19 (set (reg:SF 232 [ _146 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 231 [ _145 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 413)) [1 zv S4 A32])) "CALEKM.f":128 -1
     (nil))
(insn 339 338 340 19 (set (reg:SF 233 [ _147 ])
        (minus:SF (reg:SF 225 [ _139 ])
            (reg:SF 232 [ _146 ]))) "CALEKM.f":128 -1
     (nil))
(insn 340 339 341 19 (set (reg:SF 234 [ _148 ])
        (reg:SF 233 [ _147 ])) "CALEKM.f":128 -1
     (nil))
(insn 341 340 342 19 (set (reg/f:DI 414)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f9243e23870 dynam>)) "CALEKM.f":1 -1
     (nil))
(insn 342 341 343 19 (set (reg:SF 235 [ _149 ])
        (mem/c:SF (reg/f:DI 414) [1 dynam.dy+0 S4 A128])) "CALEKM.f":1 -1
     (nil))
(insn 343 342 344 19 (set (reg:SF 236 [ _150 ])
        (plus:SF (reg:SF 235 [ _149 ])
            (reg:SF 235 [ _149 ]))) "CALEKM.f":128 -1
     (nil))
(insn 344 343 345 19 (set (reg:SF 237 [ _151 ])
        (reg:SF 236 [ _150 ])) "CALEKM.f":128 -1
     (nil))
(insn 345 344 346 19 (set (reg:SF 415)
        (div:SF (reg:SF 234 [ _148 ])
            (reg:SF 237 [ _151 ]))) "CALEKM.f":128 -1
     (nil))
(insn 346 345 347 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [1 dzdy+0 S4 A32])
        (reg:SF 415)) "CALEKM.f":128 -1
     (nil))
(insn 347 346 348 19 (set (reg:SF 416)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 grf+0 S4 A32])) "CALEKM.f":129 -1
     (nil))
(insn 348 347 349 19 (set (reg:SF 238 [ _152 ])
        (mult:SF (reg:SF 416)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [1 dzdy+0 S4 A32]))) "CALEKM.f":129 -1
     (nil))
(insn 349 348 350 19 (set (reg:SI 417)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":129 -1
     (nil))
(insn 350 349 351 19 (set (reg:DI 239 [ _153 ])
        (sign_extend:DI (reg:SI 417))) "CALEKM.f":129 -1
     (nil))
(insn 351 350 352 19 (parallel [
            (set (reg:DI 240 [ _154 ])
                (mult:DI (reg:DI 239 [ _153 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":129 -1
     (nil))
(insn 352 351 353 19 (set (reg:SI 418)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":129 -1
     (nil))
(insn 353 352 354 19 (set (reg:DI 241 [ _155 ])
        (sign_extend:DI (reg:SI 418))) "CALEKM.f":129 -1
     (nil))
(insn 354 353 355 19 (parallel [
            (set (reg:DI 242 [ _156 ])
                (plus:DI (reg:DI 240 [ _154 ])
                    (reg:DI 241 [ _155 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":129 -1
     (nil))
(insn 355 354 356 19 (parallel [
            (set (reg:DI 243 [ _157 ])
                (plus:DI (reg:DI 242 [ _156 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":129 -1
     (nil))
(insn 356 355 357 19 (set (reg/f:DI 419)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f9243e3a120 masks>)) "CALEKM.f":129 -1
     (nil))
(insn 357 356 358 19 (set (reg:SF 244 [ _158 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 243 [ _157 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 419)) [1 masks.hbm2 S4 A32])) "CALEKM.f":129 -1
     (nil))
(insn 358 357 359 19 (set (reg:SF 245 [ _159 ])
        (mult:SF (reg:SF 238 [ _152 ])
            (reg:SF 244 [ _158 ]))) "CALEKM.f":129 -1
     (nil))
(insn 359 358 360 19 (set (reg:V4SF 420)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) "CALEKM.f":129 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 360 359 361 19 (parallel [
            (set (reg:SF 246 [ _160 ])
                (neg:SF (reg:SF 245 [ _159 ])))
            (use (reg:V4SF 420))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":129 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 245 [ _159 ]))
        (nil)))
(insn 361 360 362 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [1 ug+0 S4 A32])
        (reg:SF 246 [ _160 ])) "CALEKM.f":129 -1
     (nil))
(insn 362 361 363 19 (set (reg:SF 421)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 grf+0 S4 A32])) "CALEKM.f":130 -1
     (nil))
(insn 363 362 364 19 (set (reg:SF 247 [ _161 ])
        (mult:SF (reg:SF 421)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [1 dzdx+0 S4 A32]))) "CALEKM.f":130 -1
     (nil))
(insn 364 363 365 19 (set (reg:SI 422)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":130 -1
     (nil))
(insn 365 364 366 19 (set (reg:DI 248 [ _162 ])
        (sign_extend:DI (reg:SI 422))) "CALEKM.f":130 -1
     (nil))
(insn 366 365 367 19 (parallel [
            (set (reg:DI 249 [ _163 ])
                (mult:DI (reg:DI 248 [ _162 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":130 -1
     (nil))
(insn 367 366 368 19 (set (reg:SI 423)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":130 -1
     (nil))
(insn 368 367 369 19 (set (reg:DI 250 [ _164 ])
        (sign_extend:DI (reg:SI 423))) "CALEKM.f":130 -1
     (nil))
(insn 369 368 370 19 (parallel [
            (set (reg:DI 251 [ _165 ])
                (plus:DI (reg:DI 249 [ _163 ])
                    (reg:DI 250 [ _164 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":130 -1
     (nil))
(insn 370 369 371 19 (parallel [
            (set (reg:DI 252 [ _166 ])
                (plus:DI (reg:DI 251 [ _165 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":130 -1
     (nil))
(insn 371 370 372 19 (set (reg/f:DI 424)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f9243e3a120 masks>)) "CALEKM.f":130 -1
     (nil))
(insn 372 371 373 19 (set (reg:SF 253 [ _167 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 252 [ _166 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 424)) [1 masks.hbm2 S4 A32])) "CALEKM.f":130 -1
     (nil))
(insn 373 372 374 19 (set (reg:SF 254 [ _168 ])
        (mult:SF (reg:SF 247 [ _161 ])
            (reg:SF 253 [ _167 ]))) "CALEKM.f":130 -1
     (nil))
(insn 374 373 375 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [1 vg+0 S4 A32])
        (reg:SF 254 [ _168 ])) "CALEKM.f":130 -1
     (nil))
(insn 375 374 376 19 (set (reg:SF 255 [ ug.0_169 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [1 ug+0 S4 A32])) "CALEKM.f":131 -1
     (nil))
(insn 376 375 377 19 (set (reg:SF 256 [ ug.1_170 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [1 ug+0 S4 A32])) "CALEKM.f":131 -1
     (nil))
(insn 377 376 378 19 (set (reg:SF 257 [ _171 ])
        (mult:SF (reg:SF 255 [ ug.0_169 ])
            (reg:SF 256 [ ug.1_170 ]))) "CALEKM.f":131 -1
     (nil))
(insn 378 377 379 19 (set (reg:SF 258 [ vg.2_172 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [1 vg+0 S4 A32])) "CALEKM.f":131 -1
     (nil))
(insn 379 378 380 19 (set (reg:SF 259 [ vg.3_173 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [1 vg+0 S4 A32])) "CALEKM.f":131 -1
     (nil))
(insn 380 379 381 19 (set (reg:SF 260 [ _174 ])
        (mult:SF (reg:SF 258 [ vg.2_172 ])
            (reg:SF 259 [ vg.3_173 ]))) "CALEKM.f":131 -1
     (nil))
(insn 381 380 382 19 (set (reg:SF 261 [ _175 ])
        (plus:SF (reg:SF 257 [ _171 ])
            (reg:SF 260 [ _174 ]))) "CALEKM.f":131 -1
     (nil))
(insn 382 381 383 19 (set (reg:SF 425)
        (sqrt:SF (reg:SF 261 [ _175 ]))) "CALEKM.f":131 -1
     (nil))
(insn 383 382 384 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [1 spdg+0 S4 A32])
        (reg:SF 425)) "CALEKM.f":131 -1
     (nil))
(insn 384 383 385 19 (parallel [
            (set (reg:DI 426)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":135 -1
     (nil))
(insn 385 384 386 19 (parallel [
            (set (reg:DI 427)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":135 -1
     (nil))
(insn 386 385 387 19 (set (reg:DI 4 si)
        (reg:DI 426)) "CALEKM.f":135 -1
     (nil))
(insn 387 386 388 19 (set (reg:DI 5 di)
        (reg:DI 427)) "CALEKM.f":135 -1
     (nil))
(insn 388 387 389 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALEKM.f":135 -1
     (nil))
(call_insn 389 388 390 19 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("wdir_") [flags 0x41]  <function_decl 0x7f9243e1a800 wdir>) [0 wdir S1 A8])
            (const_int 0 [0]))) "CALEKM.f":135 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 390 389 391 19 (set (reg:SF 428)
        (reg:SF 21 xmm0)) "CALEKM.f":135 -1
     (nil))
(insn 391 390 392 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [1 wdirt+0 S4 A32])
        (reg:SF 428)) "CALEKM.f":135 -1
     (nil))
(insn 392 391 393 19 (parallel [
            (set (reg:DI 429)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -100 [0xffffffffffffff9c])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":136 -1
     (nil))
(insn 393 392 394 19 (parallel [
            (set (reg:DI 430)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":136 -1
     (nil))
(insn 394 393 395 19 (set (reg:DI 4 si)
        (reg:DI 429)) "CALEKM.f":136 -1
     (nil))
(insn 395 394 396 19 (set (reg:DI 5 di)
        (reg:DI 430)) "CALEKM.f":136 -1
     (nil))
(insn 396 395 397 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALEKM.f":136 -1
     (nil))
(call_insn 397 396 398 19 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("wdir_") [flags 0x41]  <function_decl 0x7f9243e1a800 wdir>) [0 wdir S1 A8])
            (const_int 0 [0]))) "CALEKM.f":136 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 398 397 399 19 (set (reg:SF 431)
        (reg:SF 21 xmm0)) "CALEKM.f":136 -1
     (nil))
(insn 399 398 400 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32])
        (reg:SF 431)) "CALEKM.f":136 -1
     (nil))
(insn 400 399 401 19 (set (reg:SF 432)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 ftrue+0 S4 A32])) "CALEKM.f":137 -1
     (nil))
(insn 401 400 402 19 (set (reg:SF 433)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALEKM.f":137 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 402 401 403 19 (set (reg:SF 262 [ _176 ])
        (div:SF (reg:SF 432)
            (reg:SF 433))) "CALEKM.f":137 -1
     (nil))
(insn 403 402 404 19 (set (reg:SF 434)
        (sqrt:SF (reg:SF 262 [ _176 ]))) "CALEKM.f":137 -1
     (nil))
(insn 404 403 405 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [1 b+0 S4 A32])
        (reg:SF 434)) "CALEKM.f":137 -1
     (nil))
(insn 405 404 406 19 (set (reg:SF 436)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [1 b+0 S4 A32])) "CALEKM.f":138 -1
     (nil))
(insn 406 405 407 19 (set (reg:SF 437)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALEKM.f":138 -1
     (expr_list:REG_EQUAL (const_double:SF 2.0e+2 [0x0.c8p+8])
        (nil)))
(insn 407 406 408 19 (set (reg:SF 435)
        (mult:SF (reg:SF 436)
            (reg:SF 437))) "CALEKM.f":138 -1
     (nil))
(insn 408 407 409 19 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32])
        (reg:SF 435)) "CALEKM.f":138 -1
     (nil))
(insn 409 408 410 19 (set (reg:SF 438)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32])) "CALEKM.f":139 -1
     (nil))
(insn 410 409 411 19 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 438)
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32]))) "CALEKM.f":139 -1
     (nil))
(jump_insn 411 410 620 19 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 634)
            (pc))) "CALEKM.f":139 682 {*jcc}
     (nil)
 -> 634)
;;  succ:       22
;;              20 (FALLTHRU)

;; basic block 20, loop depth 2, maybe hot
;;  prev block 19, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
(note 620 411 412 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 412 620 413 20 (set (pc)
        (label_ref 418)) "CALEKM.f":139 -1
     (nil)
 -> 418)
;;  succ:       23

(barrier 413 412 634)
;; basic block 22, loop depth 2, maybe hot
;;  prev block 20, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
(code_label 634 413 415 22 28 (nil) [1 uses])
(note 415 634 416 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 416 415 417 22 (set (reg:SF 439)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALEKM.f":139 -1
     (nil))
(insn 417 416 418 22 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32])
        (reg:SF 439)) "CALEKM.f":139 -1
     (nil))
;;  succ:       23 (FALLTHRU)

;; basic block 23, loop depth 2, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;;              20
(code_label 418 417 419 23 12 (nil) [1 uses])
(note 419 418 420 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 420 419 421 23 (set (reg:SF 440)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALEKM.f":140 -1
     (expr_list:REG_EQUAL (const_double:SF -5.0e+2 [-0x0.fap+9])
        (nil)))
(insn 421 420 422 23 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 440)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32]))) "CALEKM.f":140 -1
     (nil))
(jump_insn 422 421 622 23 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 635)
            (pc))) "CALEKM.f":140 682 {*jcc}
     (nil)
 -> 635)
;;  succ:       26
;;              24 (FALLTHRU)

;; basic block 24, loop depth 2, maybe hot
;;  prev block 23, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
(note 622 422 423 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 423 622 424 24 (set (pc)
        (label_ref 429)) "CALEKM.f":140 -1
     (nil)
 -> 429)
;;  succ:       27

(barrier 424 423 635)
;; basic block 26, loop depth 2, maybe hot
;;  prev block 24, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
(code_label 635 424 426 26 29 (nil) [1 uses])
(note 426 635 427 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 26 (set (reg:SF 441)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALEKM.f":140 -1
     (nil))
(insn 428 427 429 26 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32])
        (reg:SF 441)) "CALEKM.f":140 -1
     (nil))
;;  succ:       27 (FALLTHRU)

;; basic block 27, loop depth 2, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;;              24
(code_label 429 428 430 27 14 (nil) [1 uses])
(note 430 429 431 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 431 430 432 27 (set (reg:SF 442)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32])) "CALEKM.f":141 -1
     (nil))
(insn 432 431 433 27 (set (reg:V4SF 443)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) "CALEKM.f":141 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 433 432 434 27 (parallel [
            (set (reg:SF 263 [ _177 ])
                (neg:SF (reg:SF 442)))
            (use (reg:V4SF 443))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":141 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 442))
        (nil)))
(insn 434 433 435 27 (set (reg:SF 21 xmm0)
        (reg:SF 263 [ _177 ])) "CALEKM.f":141 -1
     (nil))
(call_insn/u 435 434 436 27 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x7f9243c92300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "CALEKM.f":141 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 436 435 437 27 (set (reg:SF 444)
        (reg:SF 21 xmm0)) "CALEKM.f":141 -1
     (nil))
(insn 437 436 438 27 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [1 exbzmh+0 S4 A32])
        (reg:SF 444)) "CALEKM.f":141 -1
     (nil))
(insn 438 437 439 27 (set (reg:SF 445)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALEKM.f":145 -1
     (nil))
(insn 439 438 440 27 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])
        (reg:SF 445)) "CALEKM.f":145 -1
     (nil))
(insn 440 439 441 27 (set (reg:SF 447)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])) "CALEKM.f":146 -1
     (nil))
(insn 441 440 442 27 (set (reg:SF 446)
        (mult:SF (reg:SF 447)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [1 deg2rd+0 S4 A32]))) "CALEKM.f":146 -1
     (nil))
(insn 442 441 443 27 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])
        (reg:SF 446)) "CALEKM.f":146 -1
     (nil))
(insn 443 442 444 27 (set (reg:SF 448)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])) "CALEKM.f":147 -1
     (nil))
(insn 444 443 445 27 (set (reg:SF 21 xmm0)
        (reg:SF 448)) "CALEKM.f":147 -1
     (nil))
(call_insn/u 445 444 446 27 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x7f9243c93500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "CALEKM.f":147 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 446 445 447 27 (set (reg:SF 449)
        (reg:SF 21 xmm0)) "CALEKM.f":147 -1
     (nil))
(insn 447 446 448 27 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [1 sinalf+0 S4 A32])
        (reg:SF 449)) "CALEKM.f":147 -1
     (nil))
(insn 448 447 449 27 (set (reg:SF 450)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 d75pi+0 S4 A32])) "CALEKM.f":148 -1
     (nil))
(insn 449 448 450 27 (set (reg:SF 264 [ _178 ])
        (plus:SF (reg:SF 450)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32]))) "CALEKM.f":148 -1
     (nil))
(insn 450 449 451 27 (set (reg:SF 451)
        (minus:SF (reg:SF 264 [ _178 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32]))) "CALEKM.f":148 -1
     (nil))
(insn 451 450 452 27 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [1 arg+0 S4 A32])
        (reg:SF 451)) "CALEKM.f":148 -1
     (nil))
(insn 452 451 453 27 (set (reg:SF 452)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [1 arg+0 S4 A32])) "CALEKM.f":149 -1
     (nil))
(insn 453 452 454 27 (set (reg:SF 21 xmm0)
        (reg:SF 452)) "CALEKM.f":149 -1
     (nil))
(call_insn/u 454 453 455 27 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cosf") [flags 0x41]  <function_decl 0x7f9243c91700 __builtin_cosf>) [0 __builtin_cosf S1 A8])
            (const_int 0 [0]))) "CALEKM.f":149 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 455 454 456 27 (set (reg:SF 453)
        (reg:SF 21 xmm0)) "CALEKM.f":149 -1
     (nil))
(insn 456 455 457 27 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 cosarg+0 S4 A32])
        (reg:SF 453)) "CALEKM.f":149 -1
     (nil))
(insn 457 456 458 27 (set (reg:SF 454)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32])) "CALEKM.f":150 -1
     (nil))
(insn 458 457 459 27 (set (reg:SF 455)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALEKM.f":150 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 459 458 460 27 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 454)
            (reg:SF 455))) "CALEKM.f":150 -1
     (nil))
(jump_insn 460 459 624 27 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 636)
            (pc))) "CALEKM.f":150 682 {*jcc}
     (nil)
 -> 636)
;;  succ:       30
;;              28 (FALLTHRU)

;; basic block 28, loop depth 2, maybe hot
;;  prev block 27, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
(note 624 460 461 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 461 624 462 28 (set (pc)
        (label_ref 468)) "CALEKM.f":150 -1
     (nil)
 -> 468)
;;  succ:       31

(barrier 462 461 636)
;; basic block 30, loop depth 2, maybe hot
;;  prev block 28, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
(code_label 636 462 464 30 30 (nil) [1 uses])
(note 464 636 465 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 30 (set (reg:SF 456)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "CALEKM.f":150 -1
     (expr_list:REG_EQUAL (const_double:SF 9.0e+1 [0x0.b4p+7])
        (nil)))
(insn 466 465 467 30 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 456)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32]))) "CALEKM.f":150 -1
     (nil))
(jump_insn 467 466 468 30 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 483)
            (pc))) "CALEKM.f":150 -1
     (nil)
 -> 483)
;;  succ:       37
;;              31 (FALLTHRU)

;; basic block 31, loop depth 2, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;;              28
(code_label 468 467 469 31 16 (nil) [1 uses])
(note 469 468 470 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 470 469 471 31 (set (reg:SF 457)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32])) "CALEKM.f":150 -1
     (nil))
(insn 471 470 472 31 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 457)
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32]))) "CALEKM.f":150 -1
     (nil))
(jump_insn 472 471 626 31 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 637)
            (pc))) "CALEKM.f":150 682 {*jcc}
     (nil)
 -> 637)
;;  succ:       34
;;              32 (FALLTHRU)

;; basic block 32, loop depth 2, maybe hot
;;  prev block 31, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
(note 626 472 473 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(jump_insn 473 626 474 32 (set (pc)
        (label_ref 489)) "CALEKM.f":150 -1
     (nil)
 -> 489)
;;  succ:       38

(barrier 474 473 637)
;; basic block 34, loop depth 2, maybe hot
;;  prev block 32, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31
(code_label 637 474 476 34 31 (nil) [1 uses])
(note 476 637 477 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 477 476 478 34 (set (reg:SF 458)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "CALEKM.f":150 -1
     (expr_list:REG_EQUAL (const_double:SF 3.6e+2 [0x0.b4p+9])
        (nil)))
(insn 478 477 479 34 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 458)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32]))) "CALEKM.f":150 -1
     (nil))
(jump_insn 479 478 628 34 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 483)
            (pc))) "CALEKM.f":150 682 {*jcc}
     (nil)
 -> 483)
;;  succ:       37
;;              35 (FALLTHRU)

;; basic block 35, loop depth 2, maybe hot
;;  prev block 34, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
(note 628 479 480 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(jump_insn 480 628 481 35 (set (pc)
        (label_ref 489)) "CALEKM.f":150 -1
     (nil)
 -> 489)
;;  succ:       38

(barrier 481 480 483)
;; basic block 37, loop depth 2, maybe hot
;;  prev block 35, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       30
;;              34
(code_label 483 481 484 37 18 (nil) [2 uses])
(note 484 483 485 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 486 37 (set (reg:SF 460)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 cosarg+0 S4 A32])) "CALEKM.f":152 -1
     (nil))
(insn 486 485 487 37 (set (reg:V4SF 461)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) "CALEKM.f":152 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 487 486 488 37 (parallel [
            (set (reg:SF 459)
                (neg:SF (reg:SF 460)))
            (use (reg:V4SF 461))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":152 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 460))
        (nil)))
(insn 488 487 489 37 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 cosarg+0 S4 A32])
        (reg:SF 459)) "CALEKM.f":152 -1
     (nil))
;;  succ:       38 (FALLTHRU)

;; basic block 38, loop depth 2, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;;              32
;;              35
(code_label 489 488 490 38 19 (nil) [2 uses])
(note 490 489 491 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 491 490 492 38 (set (reg:SF 462)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 sqrt2+0 S4 A32])) "CALEKM.f":153 -1
     (nil))
(insn 492 491 493 38 (set (reg:SF 265 [ _179 ])
        (mult:SF (reg:SF 462)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [1 spdg+0 S4 A32]))) "CALEKM.f":153 -1
     (nil))
(insn 493 492 494 38 (set (reg:SF 266 [ _180 ])
        (mult:SF (reg:SF 265 [ _179 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])) [1 sinalf+0 S4 A32]))) "CALEKM.f":153 -1
     (nil))
(insn 494 493 495 38 (set (reg:SF 267 [ _181 ])
        (mult:SF (reg:SF 266 [ _180 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [1 exbzmh+0 S4 A32]))) "CALEKM.f":153 -1
     (nil))
(insn 495 494 496 38 (set (reg:SF 268 [ _182 ])
        (mult:SF (reg:SF 267 [ _181 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 cosarg+0 S4 A32]))) "CALEKM.f":153 -1
     (nil))
(insn 496 495 497 38 (set (reg:SF 269 [ ug.4_183 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [1 ug+0 S4 A32])) "CALEKM.f":153 -1
     (nil))
(insn 497 496 498 38 (set (reg:SI 463)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":153 -1
     (nil))
(insn 498 497 499 38 (set (reg:DI 270 [ _184 ])
        (sign_extend:DI (reg:SI 463))) "CALEKM.f":153 -1
     (nil))
(insn 499 498 500 38 (parallel [
            (set (reg:DI 271 [ _185 ])
                (mult:DI (reg:DI 270 [ _184 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":153 -1
     (nil))
(insn 500 499 501 38 (set (reg:SI 464)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":153 -1
     (nil))
(insn 501 500 502 38 (set (reg:DI 272 [ _186 ])
        (sign_extend:DI (reg:SI 464))) "CALEKM.f":153 -1
     (nil))
(insn 502 501 503 38 (parallel [
            (set (reg:DI 273 [ _187 ])
                (plus:DI (reg:DI 271 [ _185 ])
                    (reg:DI 272 [ _186 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":153 -1
     (nil))
(insn 503 502 504 38 (parallel [
            (set (reg:DI 274 [ _188 ])
                (plus:DI (reg:DI 273 [ _187 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":153 -1
     (nil))
(insn 504 503 505 38 (set (reg:SF 275 [ _189 ])
        (plus:SF (reg:SF 268 [ _182 ])
            (reg:SF 269 [ ug.4_183 ]))) "CALEKM.f":153 -1
     (nil))
(insn 505 504 506 38 (set (reg/f:DI 465)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 u1d+0 S8 A64])) "CALEKM.f":153 -1
     (nil))
(insn 506 505 507 38 (set (mem:SF (plus:DI (mult:DI (reg:DI 274 [ _188 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 465)) [1 *u1d_252(D) S4 A32])
        (reg:SF 275 [ _189 ])) "CALEKM.f":153 -1
     (nil))
(insn 507 506 508 38 (set (reg:SF 466)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALEKM.f":161 -1
     (nil))
(insn 508 507 509 38 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])
        (reg:SF 466)) "CALEKM.f":161 -1
     (nil))
(insn 509 508 510 38 (set (reg:SF 468)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])) "CALEKM.f":162 -1
     (nil))
(insn 510 509 511 38 (set (reg:SF 467)
        (mult:SF (reg:SF 468)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [1 deg2rd+0 S4 A32]))) "CALEKM.f":162 -1
     (nil))
(insn 511 510 512 38 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])
        (reg:SF 467)) "CALEKM.f":162 -1
     (nil))
(insn 512 511 513 38 (set (reg:SF 469)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32])) "CALEKM.f":163 -1
     (nil))
(insn 513 512 514 38 (set (reg:SF 21 xmm0)
        (reg:SF 469)) "CALEKM.f":163 -1
     (nil))
(call_insn/u 514 513 515 38 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x7f9243c93500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "CALEKM.f":163 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 515 514 516 38 (set (reg:SF 470)
        (reg:SF 21 xmm0)) "CALEKM.f":163 -1
     (nil))
(insn 516 515 517 38 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [1 sinalf+0 S4 A32])
        (reg:SF 470)) "CALEKM.f":163 -1
     (nil))
(insn 517 516 518 38 (set (reg:SF 471)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 d75pi+0 S4 A32])) "CALEKM.f":164 -1
     (nil))
(insn 518 517 519 38 (set (reg:SF 276 [ _190 ])
        (plus:SF (reg:SF 471)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [1 alphas+0 S4 A32]))) "CALEKM.f":164 -1
     (nil))
(insn 519 518 520 38 (set (reg:SF 472)
        (minus:SF (reg:SF 276 [ _190 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 bzmh+0 S4 A32]))) "CALEKM.f":164 -1
     (nil))
(insn 520 519 521 38 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [1 arg+0 S4 A32])
        (reg:SF 472)) "CALEKM.f":164 -1
     (nil))
(insn 521 520 522 38 (set (reg:SF 473)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [1 arg+0 S4 A32])) "CALEKM.f":165 -1
     (nil))
(insn 522 521 523 38 (set (reg:SF 21 xmm0)
        (reg:SF 473)) "CALEKM.f":165 -1
     (nil))
(call_insn/u 523 522 524 38 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x7f9243c93500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "CALEKM.f":165 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 524 523 525 38 (set (reg:SF 474)
        (reg:SF 21 xmm0)) "CALEKM.f":165 -1
     (nil))
(insn 525 524 526 38 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 sinarg+0 S4 A32])
        (reg:SF 474)) "CALEKM.f":165 -1
     (nil))
(insn 526 525 527 38 (set (reg:SF 475)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32])) "CALEKM.f":166 -1
     (nil))
(insn 527 526 528 38 (set (reg:SF 476)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALEKM.f":166 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 528 527 529 38 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 475)
            (reg:SF 476))) "CALEKM.f":166 -1
     (nil))
(jump_insn 529 528 630 38 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 638)
            (pc))) "CALEKM.f":166 682 {*jcc}
     (nil)
 -> 638)
;;  succ:       41
;;              39 (FALLTHRU)

;; basic block 39, loop depth 2, maybe hot
;;  prev block 38, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
(note 630 529 530 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(jump_insn 530 630 531 39 (set (pc)
        (label_ref 545)) "CALEKM.f":166 -1
     (nil)
 -> 545)
;;  succ:       45

(barrier 531 530 638)
;; basic block 41, loop depth 2, maybe hot
;;  prev block 39, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38
(code_label 638 531 533 41 32 (nil) [1 uses])
(note 533 638 534 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 534 533 535 41 (set (reg:SF 477)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CALEKM.f":166 -1
     (expr_list:REG_EQUAL (const_double:SF 1.8e+2 [0x0.b4p+8])
        (nil)))
(insn 535 534 536 41 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 477)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [1 wdirg+0 S4 A32]))) "CALEKM.f":166 -1
     (nil))
(jump_insn 536 535 632 41 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 639)
            (pc))) "CALEKM.f":166 682 {*jcc}
     (nil)
 -> 639)
;;  succ:       44
;;              42 (FALLTHRU)

;; basic block 42, loop depth 2, maybe hot
;;  prev block 41, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
(note 632 536 537 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(jump_insn 537 632 538 42 (set (pc)
        (label_ref 545)) "CALEKM.f":166 -1
     (nil)
 -> 545)
;;  succ:       45

(barrier 538 537 639)
;; basic block 44, loop depth 2, maybe hot
;;  prev block 42, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       41
(code_label 639 538 540 44 33 (nil) [1 uses])
(note 540 639 541 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 541 540 542 44 (set (reg:SF 479)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 sinarg+0 S4 A32])) "CALEKM.f":167 -1
     (nil))
(insn 542 541 543 44 (set (reg:V4SF 480)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) "CALEKM.f":167 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 543 542 544 44 (parallel [
            (set (reg:SF 478)
                (neg:SF (reg:SF 479)))
            (use (reg:V4SF 480))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":167 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 479))
        (nil)))
(insn 544 543 545 44 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 sinarg+0 S4 A32])
        (reg:SF 478)) "CALEKM.f":167 -1
     (nil))
;;  succ:       45 (FALLTHRU)

;; basic block 45, loop depth 2, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 (FALLTHRU)
;;              39
;;              42
(code_label 545 544 546 45 22 (nil) [2 uses])
(note 546 545 547 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 547 546 548 45 (set (reg:SF 481)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 sqrt2+0 S4 A32])) "CALEKM.f":168 -1
     (nil))
(insn 548 547 549 45 (set (reg:SF 277 [ _191 ])
        (mult:SF (reg:SF 481)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [1 spdg+0 S4 A32]))) "CALEKM.f":168 -1
     (nil))
(insn 549 548 550 45 (set (reg:SF 278 [ _192 ])
        (mult:SF (reg:SF 277 [ _191 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])) [1 sinalf+0 S4 A32]))) "CALEKM.f":168 -1
     (nil))
(insn 550 549 551 45 (set (reg:SF 279 [ _193 ])
        (mult:SF (reg:SF 278 [ _192 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [1 exbzmh+0 S4 A32]))) "CALEKM.f":168 -1
     (nil))
(insn 551 550 552 45 (set (reg:SF 280 [ _194 ])
        (mult:SF (reg:SF 279 [ _193 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 sinarg+0 S4 A32]))) "CALEKM.f":168 -1
     (nil))
(insn 552 551 553 45 (set (reg:SF 281 [ vg.5_195 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [1 vg+0 S4 A32])) "CALEKM.f":168 -1
     (nil))
(insn 553 552 554 45 (set (reg:SI 482)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":168 -1
     (nil))
(insn 554 553 555 45 (set (reg:DI 282 [ _196 ])
        (sign_extend:DI (reg:SI 482))) "CALEKM.f":168 -1
     (nil))
(insn 555 554 556 45 (parallel [
            (set (reg:DI 283 [ _197 ])
                (mult:DI (reg:DI 282 [ _196 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":168 -1
     (nil))
(insn 556 555 557 45 (set (reg:SI 483)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":168 -1
     (nil))
(insn 557 556 558 45 (set (reg:DI 284 [ _198 ])
        (sign_extend:DI (reg:SI 483))) "CALEKM.f":168 -1
     (nil))
(insn 558 557 559 45 (parallel [
            (set (reg:DI 285 [ _199 ])
                (plus:DI (reg:DI 283 [ _197 ])
                    (reg:DI 284 [ _198 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":168 -1
     (nil))
(insn 559 558 560 45 (parallel [
            (set (reg:DI 286 [ _200 ])
                (plus:DI (reg:DI 285 [ _199 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":168 -1
     (nil))
(insn 560 559 561 45 (set (reg:SF 287 [ _201 ])
        (plus:SF (reg:SF 280 [ _194 ])
            (reg:SF 281 [ vg.5_195 ]))) "CALEKM.f":168 -1
     (nil))
(insn 561 560 562 45 (set (reg/f:DI 484)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 v1d+0 S8 A64])) "CALEKM.f":168 -1
     (nil))
(insn 562 561 563 45 (set (mem:SF (plus:DI (mult:DI (reg:DI 286 [ _200 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 484)) [1 *v1d_254(D) S4 A32])
        (reg:SF 287 [ _201 ])) "CALEKM.f":168 -1
     (nil))
(insn 563 562 564 45 (set (reg:SI 485)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":179 -1
     (nil))
(insn 564 563 565 45 (set (reg:DI 288 [ _202 ])
        (sign_extend:DI (reg:SI 485))) "CALEKM.f":179 -1
     (nil))
(insn 565 564 566 45 (parallel [
            (set (reg:DI 289 [ _203 ])
                (mult:DI (reg:DI 288 [ _202 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":179 -1
     (nil))
(insn 566 565 567 45 (set (reg:SI 486)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":179 -1
     (nil))
(insn 567 566 568 45 (set (reg:DI 290 [ _204 ])
        (sign_extend:DI (reg:SI 486))) "CALEKM.f":179 -1
     (nil))
(insn 568 567 569 45 (parallel [
            (set (reg:DI 291 [ _205 ])
                (plus:DI (reg:DI 289 [ _203 ])
                    (reg:DI 290 [ _204 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":179 -1
     (nil))
(insn 569 568 570 45 (parallel [
            (set (reg:DI 292 [ _206 ])
                (plus:DI (reg:DI 291 [ _205 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":179 -1
     (nil))
(insn 570 569 571 45 (set (reg/f:DI 487)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 u1d+0 S8 A64])) "CALEKM.f":179 -1
     (nil))
(insn 571 570 572 45 (set (reg:SF 293 [ _207 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 292 [ _206 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 487)) [1 *u1d_252(D) S4 A32])) "CALEKM.f":179 -1
     (nil))
(insn 572 571 573 45 (set (reg:SI 488)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":179 -1
     (nil))
(insn 573 572 574 45 (set (reg:DI 294 [ _208 ])
        (sign_extend:DI (reg:SI 488))) "CALEKM.f":179 -1
     (nil))
(insn 574 573 575 45 (parallel [
            (set (reg:DI 295 [ _209 ])
                (mult:DI (reg:DI 294 [ _208 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":179 -1
     (nil))
(insn 575 574 576 45 (set (reg:SI 489)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":179 -1
     (nil))
(insn 576 575 577 45 (set (reg:DI 296 [ _210 ])
        (sign_extend:DI (reg:SI 489))) "CALEKM.f":179 -1
     (nil))
(insn 577 576 578 45 (parallel [
            (set (reg:DI 297 [ _211 ])
                (plus:DI (reg:DI 295 [ _209 ])
                    (reg:DI 296 [ _210 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":179 -1
     (nil))
(insn 578 577 579 45 (parallel [
            (set (reg:DI 298 [ _212 ])
                (plus:DI (reg:DI 297 [ _211 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":179 -1
     (nil))
(insn 579 578 580 45 (set (reg:SF 490)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "CALEKM.f":179 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 580 579 581 45 (set (reg:SF 299 [ _213 ])
        (mult:SF (reg:SF 293 [ _207 ])
            (reg:SF 490))) "CALEKM.f":179 -1
     (nil))
(insn 581 580 582 45 (set (reg/f:DI 491)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 u1d+0 S8 A64])) "CALEKM.f":179 -1
     (nil))
(insn 582 581 583 45 (set (mem:SF (plus:DI (mult:DI (reg:DI 298 [ _212 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 491)) [1 *u1d_252(D) S4 A32])
        (reg:SF 299 [ _213 ])) "CALEKM.f":179 -1
     (nil))
(insn 583 582 584 45 (set (reg:SI 492)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":180 -1
     (nil))
(insn 584 583 585 45 (set (reg:DI 300 [ _214 ])
        (sign_extend:DI (reg:SI 492))) "CALEKM.f":180 -1
     (nil))
(insn 585 584 586 45 (parallel [
            (set (reg:DI 301 [ _215 ])
                (mult:DI (reg:DI 300 [ _214 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":180 -1
     (nil))
(insn 586 585 587 45 (set (reg:SI 493)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":180 -1
     (nil))
(insn 587 586 588 45 (set (reg:DI 302 [ _216 ])
        (sign_extend:DI (reg:SI 493))) "CALEKM.f":180 -1
     (nil))
(insn 588 587 589 45 (parallel [
            (set (reg:DI 303 [ _217 ])
                (plus:DI (reg:DI 301 [ _215 ])
                    (reg:DI 302 [ _216 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":180 -1
     (nil))
(insn 589 588 590 45 (parallel [
            (set (reg:DI 304 [ _218 ])
                (plus:DI (reg:DI 303 [ _217 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":180 -1
     (nil))
(insn 590 589 591 45 (set (reg/f:DI 494)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 v1d+0 S8 A64])) "CALEKM.f":180 -1
     (nil))
(insn 591 590 592 45 (set (reg:SF 305 [ _219 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 304 [ _218 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 494)) [1 *v1d_254(D) S4 A32])) "CALEKM.f":180 -1
     (nil))
(insn 592 591 593 45 (set (reg:SI 495)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])) "CALEKM.f":180 -1
     (nil))
(insn 593 592 594 45 (set (reg:DI 306 [ _220 ])
        (sign_extend:DI (reg:SI 495))) "CALEKM.f":180 -1
     (nil))
(insn 594 593 595 45 (parallel [
            (set (reg:DI 307 [ _221 ])
                (mult:DI (reg:DI 306 [ _220 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":180 -1
     (nil))
(insn 595 594 596 45 (set (reg:SI 496)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "CALEKM.f":180 -1
     (nil))
(insn 596 595 597 45 (set (reg:DI 308 [ _222 ])
        (sign_extend:DI (reg:SI 496))) "CALEKM.f":180 -1
     (nil))
(insn 597 596 598 45 (parallel [
            (set (reg:DI 309 [ _223 ])
                (plus:DI (reg:DI 307 [ _221 ])
                    (reg:DI 308 [ _222 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":180 -1
     (nil))
(insn 598 597 599 45 (parallel [
            (set (reg:DI 310 [ _224 ])
                (plus:DI (reg:DI 309 [ _223 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":180 -1
     (nil))
(insn 599 598 600 45 (set (reg:SF 497)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "CALEKM.f":180 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 600 599 601 45 (set (reg:SF 311 [ _225 ])
        (mult:SF (reg:SF 305 [ _219 ])
            (reg:SF 497))) "CALEKM.f":180 -1
     (nil))
(insn 601 600 602 45 (set (reg/f:DI 498)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 v1d+0 S8 A64])) "CALEKM.f":180 -1
     (nil))
(insn 602 601 603 45 (set (mem:SF (plus:DI (mult:DI (reg:DI 310 [ _224 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 498)) [1 *v1d_254(D) S4 A32])
        (reg:SF 311 [ _225 ])) "CALEKM.f":180 -1
     (nil))
(insn 603 602 605 45 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":111 -1
     (nil))
(jump_insn 605 603 606 45 (set (pc)
        (label_ref 604)) "CALEKM.f":111 -1
     (nil)
 -> 604)
;;  succ:       18 (DFS_BACK)

(barrier 606 605 607)
;; basic block 46, loop depth 1, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
(code_label 607 606 608 46 11 (nil) [1 uses])
(note 608 607 609 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 609 608 611 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALEKM.f":110 -1
     (nil))
(jump_insn 611 609 612 46 (set (pc)
        (label_ref 610)) "CALEKM.f":110 -1
     (nil)
 -> 610)
;;  succ:       16 (DFS_BACK)

(barrier 612 611 613)
;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 613 612 614 47 10 (nil) [1 uses])
(note 614 613 640 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 640 614 0 47 (const_int 0 [0]) "CALEKM.f":191 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

