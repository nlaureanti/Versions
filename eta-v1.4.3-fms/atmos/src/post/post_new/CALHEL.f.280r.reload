
;; Function calhel (calhel_, funcdef_no=0, decl_uid=3771, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=176, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=144, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 31
	 Choosing alt 0 in insn 31:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 32:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 34:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 35:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 41
	 Choosing alt 0 in insn 41:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 42:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 43:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 44:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 45:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 48:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 51
	 Choosing alt 0 in insn 51:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 52:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 54:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 55:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 58:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 61
	 Choosing alt 0 in insn 61:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 62:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 63:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 64:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 65:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 66:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 72:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 78:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 79:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 81:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 82:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 94:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 95:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 96:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 98:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 99
	 Choosing alt 0 in insn 99:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 101:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 103:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 119:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 136:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 137:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 138:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 144
	 Choosing alt 0 in insn 144:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 147:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 148:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 155
	 Choosing alt 0 in insn 155:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 156:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 158:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 159:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 162
	 Choosing alt 0 in insn 162:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 163:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 164:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 165:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 167:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 168:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 170:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 171
	 Choosing alt 0 in insn 171:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 172:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 173:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 174:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 175:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 176:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 178:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 179:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 181:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 182
	 Choosing alt 0 in insn 182:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 183:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 184:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 185:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 187:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 188:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 190:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 191
	 Choosing alt 0 in insn 191:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 192:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 193:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 194:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 195:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 196
	 Choosing alt 1 in insn 196:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 197:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 199:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 200:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 201:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 203:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 204
	 Choosing alt 0 in insn 204:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 205:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 206:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 207:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 209:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 210:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 211:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 213:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 214
	 Choosing alt 0 in insn 214:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 215:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 216:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 217:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 218:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 219
	 Choosing alt 1 in insn 219:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 220:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 222:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 223:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 224:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 226:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 227
	 Choosing alt 0 in insn 227:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 228:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 229:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 230:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 232:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 233:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 234:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 236:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 237
	 Choosing alt 0 in insn 237:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 238:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 239:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 240:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 241:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 242
	 Choosing alt 1 in insn 242:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 243
	 Choosing alt 1 in insn 243:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 245:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 246
	 Choosing alt 1 in insn 246:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 247:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 249:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 250:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 252:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 253
	 Choosing alt 0 in insn 253:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 254:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 255:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 256:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 258:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 259:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 260:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 261:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 262:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 263:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1419 from oldreg=185, assigning class SSE_REGS to r1419
  263: r1419:SF=r1419:SF*[frame:DI-0x30]
      REG_DEAD r185:SF
    Inserting insn reload before:
 1676: r1419:SF=r185:SF
    Inserting insn reload after:
 1677: r186:SF=r1419:SF

            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 264:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 265:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 266
	 Choosing alt 1 in insn 266:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 267:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 269:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 270:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 271:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 272:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 273:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 274:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1420 from oldreg=190, assigning class SSE_REGS to r1420
  274: r1420:SF=r1420:SF*[frame:DI-0x30]
      REG_DEAD r190:SF
    Inserting insn reload before:
 1678: r1420:SF=r190:SF
    Inserting insn reload after:
 1679: r191:SF=r1420:SF

            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 275:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 276:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 277
	 Choosing alt 1 in insn 277:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 278:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 279:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 280:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 281:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 282:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 288:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 289:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 295:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 296:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 297:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 299:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 300
	 Choosing alt 0 in insn 300:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 301:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 302:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 303:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 305:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 306:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 307:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 308:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 309:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 310:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 312:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 313
	 Choosing alt 0 in insn 313:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 314:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 315:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 316:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 317:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 319:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 320:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 321:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 322:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 323:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 324
	 Choosing alt 1 in insn 324:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 325:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 326:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 327:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 329:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 330
	 Choosing alt 0 in insn 330:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 331:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 332
	 Choosing alt 1 in insn 332:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 333:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 334:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 336:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 337:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 339:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 340
	 Choosing alt 0 in insn 340:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 341:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 342:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 343:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 344:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 345:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 346:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 347:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 348:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 349:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 350:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 352:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 353
	 Choosing alt 0 in insn 353:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 354:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 355:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 356:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 357:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 359:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 360:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 361:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 362:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 363:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 364
	 Choosing alt 1 in insn 364:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 365:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 366:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 367:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 369:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 370
	 Choosing alt 0 in insn 370:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 371:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 372
	 Choosing alt 1 in insn 372:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 373:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 374:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 375:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 376:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 377:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 379:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 380
	 Choosing alt 0 in insn 380:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 381:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 382:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 383:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 384:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 385:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 386:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 387:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 388:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 389:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 390:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 391:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 392:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 393:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 394:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 395
	 Choosing alt 0 in insn 395:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 396:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 397
	 Choosing alt 1 in insn 397:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 398:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 399:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 402:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 408:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 414:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 420:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 421:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 422:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 425:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 430:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 432:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 433:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 435:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 438:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 439:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 440:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 442:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 443
	 Choosing alt 0 in insn 443:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 444:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 445:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 446:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 447:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 448:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 455:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 456:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 458:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 459
	 Choosing alt 0 in insn 459:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 460:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 461:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 462:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 463:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 464:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 465:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 466:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 467:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 468
	 Choosing alt 0 in insn 468:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 469:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 470:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 471:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 472:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 473:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 474:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 475:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 476:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 477:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 478:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 479
	 Choosing alt 0 in insn 479:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 480:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 481:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 482:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 483:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 484:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 485:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 486:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 488
	 Choosing alt 0 in insn 488:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 489:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 490:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 491:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 492:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 493:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 494:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 495:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1421 from oldreg=1074, assigning class SSE_REGS to r1421
  495: r1421:SF=r1421:SF*[frame:DI-0x20]
      REG_DEAD r1074:SF
    Inserting insn reload before:
 1680: r1421:SF=r1074:SF
    Inserting insn reload after:
 1681: r289:SF=r1421:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 496:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 497:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 498
	 Choosing alt 1 in insn 498:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 499:  (0) =v  (1) vm {*sqrtsf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 500:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 501:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 502:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 508:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 509:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 510:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 512:  (1) rBwBz {*call_value}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 1 in insn 514:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1422 from oldreg=292, assigning class SSE_REGS to r1422
  514: r1422:SF=r1422:SF*[frame:DI-0x20]
      REG_DEAD r292:SF
    Inserting insn reload before:
 1682: r1422:SF=r292:SF
    Inserting insn reload after:
 1683: r293:SF=r1422:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1683:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 515:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 517:  (1) rBwBz {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 519:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 520
	 Choosing alt 1 in insn 520:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1423 from oldreg=293, assigning class SSE_REGS to r1423
      Making reload reg 1423 for reg 293 optional
  520: r1081:SF=r295:SF+r1423:SF
      REG_DEAD r295:SF
      REG_DEAD r293:SF
    Inserting insn reload before:
 1684: r1423:SF=r293:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1684:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 521:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 522:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 524:  (1) rBwBz {*call_value}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 1 in insn 526:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1424 from oldreg=296, assigning class SSE_REGS to r1424
  526: r1424:SF=r1424:SF*[frame:DI-0x24]
      REG_DEAD r296:SF
    Inserting insn reload before:
 1685: r1424:SF=r296:SF
    Inserting insn reload after:
 1686: r297:SF=r1424:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1686:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 527:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (1) rBwBz {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 531:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 532:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1425 from oldreg=297, assigning class SSE_REGS to r1425
  532: r1425:SF=r1425:SF-r299:SF
      REG_DEAD r299:SF
      REG_DEAD r297:SF
    Inserting insn reload before:
 1687: r1425:SF=r297:SF
    Inserting insn reload after:
 1688: r1084:SF=r1425:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1687:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 533:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 534:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 535:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 536
	 Choosing alt 1 in insn 536:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 537:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 538:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 539:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 540
	 Choosing alt 1 in insn 540:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 541:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 546:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 547:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 548:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 550:  (1) rBwBz {*call_value}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 1 in insn 552:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1426 from oldreg=300, assigning class SSE_REGS to r1426
  552: r1426:SF=r1426:SF*[frame:DI-0x20]
      REG_DEAD r300:SF
    Inserting insn reload before:
 1689: r1426:SF=r300:SF
    Inserting insn reload after:
 1690: r301:SF=r1426:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1690:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 553:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 555:  (1) rBwBz {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 557:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 558
	 Choosing alt 1 in insn 558:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1427 from oldreg=301, assigning class SSE_REGS to r1427
      Making reload reg 1427 for reg 301 optional
  558: r1094:SF=r303:SF+r1427:SF
      REG_DEAD r303:SF
      REG_DEAD r301:SF
    Inserting insn reload before:
 1691: r1427:SF=r301:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1691:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 559:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 560:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 562:  (1) rBwBz {*call_value}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 1 in insn 564:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1428 from oldreg=304, assigning class SSE_REGS to r1428
  564: r1428:SF=r1428:SF*[frame:DI-0x24]
      REG_DEAD r304:SF
    Inserting insn reload before:
 1692: r1428:SF=r304:SF
    Inserting insn reload after:
 1693: r305:SF=r1428:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1693:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 565:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 567:  (1) rBwBz {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 569:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 570:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1429 from oldreg=305, assigning class SSE_REGS to r1429
  570: r1429:SF=r1429:SF-r307:SF
      REG_DEAD r307:SF
      REG_DEAD r305:SF
    Inserting insn reload before:
 1694: r1429:SF=r305:SF
    Inserting insn reload after:
 1695: r1097:SF=r1429:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1694:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 571:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 572:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 573:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 574
	 Choosing alt 1 in insn 574:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 575:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 576:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 577:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 578
	 Choosing alt 1 in insn 578:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 579:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 582:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 583:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 584:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 585:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 586:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 587
	 Choosing alt 0 in insn 587:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 588:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 589:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 590:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 591:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 592:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 593:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 594:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 596:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 597
	 Choosing alt 0 in insn 597:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 598:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 599:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 600:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 601:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 606:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 607:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 608:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 609:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 610:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 611
	 Choosing alt 0 in insn 611:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 612:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 613:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 614:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 615:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 616:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 617:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 618:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 619:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 620:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 621
	 Choosing alt 0 in insn 621:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 622:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 623:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 624:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 625:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 628:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 634:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 640:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 643:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 645:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 648:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 649:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 650:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 652:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 653:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 654:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 655:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 658:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 660:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 661:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 662:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 663:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 666:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 667:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 668:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 669:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 674:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 675
	 Choosing alt 0 in insn 675:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 676:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 677:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 678:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 679:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 680:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 681:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 685:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 686
	 Choosing alt 0 in insn 686:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 687:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 688:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 689:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 690:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 691:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 692:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 693:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 694:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 695:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 696:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 697
	 Choosing alt 0 in insn 697:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 698:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 699:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 700:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 701:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 702:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 703:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 704:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 705:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 706:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 707:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 708:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 709:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 710:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 711:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 712
	 Choosing alt 0 in insn 712:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 713:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 714:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 715:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 716:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 717:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 718:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 719:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 720:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 721:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 722:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 723:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 724:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 725:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 726:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 727
	 Choosing alt 0 in insn 727:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 728:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 729:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 730:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 731:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 732:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 733:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 734:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 735:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 736:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 737:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 738:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 739:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 740:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 741:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 742:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 743
	 Choosing alt 0 in insn 743:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 744:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 745:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 746:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 747:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 748:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 749:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 750:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 751:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 752:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 753:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 754:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 755:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 756:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 757:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 758:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 759
	 Choosing alt 0 in insn 759:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 760:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 761:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 762:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 763:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 764:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 765:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 766:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 767:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 768:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 769:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 770:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 771:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 772:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 773:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 774:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 775:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 776
	 Choosing alt 0 in insn 776:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 777:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 778:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 779:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 780:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 781:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 782:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 783:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 784:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 785:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 786:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 787:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 788:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 789:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 790:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 791:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 792
	 Choosing alt 0 in insn 792:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 793:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 794:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 795:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 796:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 797:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 798:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 799:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 800:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 801:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 802:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 803:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 804:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 805:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 806:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 807:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 808:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 809
	 Choosing alt 0 in insn 809:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 810:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 811:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 812:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 813:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 814
	 Choosing alt 1 in insn 814:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 816:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 817
	 Choosing alt 1 in insn 817:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 818:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 819:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 820:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 821:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 822:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 823:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 824
	 Choosing alt 0 in insn 824:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 825:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 826:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 827:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 828:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 829:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 830:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 831:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 832:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 833:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 834:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 835:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 836:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 837:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 838
	 Choosing alt 0 in insn 838:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 839:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 840:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 841:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 842:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 843:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 844:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 845:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 846:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 847:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 848
	 Choosing alt 0 in insn 848:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 849:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 850:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 851:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 852:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 853:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 854:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 855:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 856:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 857:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 858:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 859:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 860:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 861:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 862
	 Choosing alt 0 in insn 862:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 863:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 864:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 865:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 866:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 867:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 868:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 869:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 870:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 871:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 872:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 873
	 Choosing alt 0 in insn 873:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 874:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 875:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 876:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 877:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 878:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 879:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 880:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 881:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 882:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 883:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 884:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 885:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 886:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 887:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 888
	 Choosing alt 0 in insn 888:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 889:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 890:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 891:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 892:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 893:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 894:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 895:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 896:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 897:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 898:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 899
	 Choosing alt 0 in insn 899:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 900:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 901:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 902:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 903:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 904:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 905:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 906:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 907:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 908:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 909:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 910:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 911:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 912:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 913:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 914
	 Choosing alt 0 in insn 914:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 915:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 916:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 917:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 918:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 919
	 Choosing alt 1 in insn 919:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 921:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 922
	 Choosing alt 1 in insn 922:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 923:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 924:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 925:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 926:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 927:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 928:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 934:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 935:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 936:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 937:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 938:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 939
	 Choosing alt 0 in insn 939:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 940:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 941:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 942:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 943:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 944:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 947:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 948:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 949:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 950:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 951:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 952:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 953:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 954:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 955:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 956:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 957
	 Choosing alt 0 in insn 957:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 958:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 959:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 960:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 961:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 962:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 963:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 964:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 965:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 966:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 967:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 968:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 969:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 970:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 971:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 972
	 Choosing alt 0 in insn 972:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 973:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 974:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 975:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 976:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 977:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 978:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 979:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 980:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 981:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 982:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 983:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 984:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 985:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 986:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 987:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 988
	 Choosing alt 0 in insn 988:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 989:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 990:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 991:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 992:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 993:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 994:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 995:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 996:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 997:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 998:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 999:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1000:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1001:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1002:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1003:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1004
	 Choosing alt 0 in insn 1004:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1005:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1006:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1007:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1008:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1009:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1010:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1011:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1012:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1013:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1014:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1015:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1016:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1017:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1018:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1019:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1020:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1021
	 Choosing alt 0 in insn 1021:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1022:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1023:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1024:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1025:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1026:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1027:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1028:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1029:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1030:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1031:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1032:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1033:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1034:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1035:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1036:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1037:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1038
	 Choosing alt 0 in insn 1038:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1039:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1040:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1041:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1042:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1043:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1044:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1045:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1046:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1047:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1048:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1049:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1050:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1051:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1052:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1053:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1054:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1055
	 Choosing alt 0 in insn 1055:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1056:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1057:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1058:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1059:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1060:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1061:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1062:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1063:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1064:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1065:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1066:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1067:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1068:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1069:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1070:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1071:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1072
	 Choosing alt 0 in insn 1072:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1073:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1074:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1075:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1076:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1077
	 Choosing alt 1 in insn 1077:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1079:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1080
	 Choosing alt 1 in insn 1080:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1081:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1082:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1083:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1084:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1085:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1086:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1087:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1088:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1089:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1090:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1091:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1092
	 Choosing alt 0 in insn 1092:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1093:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1094:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1095:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1096:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1097:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1098:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1099:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1100:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1101:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1102:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1103:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1104:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1105:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1106
	 Choosing alt 0 in insn 1106:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1107:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1108:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1109:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1110:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1111:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1112:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1113:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1114:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1115:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1116:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1117:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1118:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1119:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1120:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1121:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1122
	 Choosing alt 0 in insn 1122:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1123:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1124:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1125:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1126:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1127:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1128:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1129:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1130:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1131:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1132:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1133:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1134:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1135:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1136:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1137
	 Choosing alt 0 in insn 1137:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1138:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1139:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1140:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1141:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1142:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1144:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1145:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1146:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1147:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1148:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1149:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1150:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1151:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1152:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1153:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1154
	 Choosing alt 0 in insn 1154:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1155:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1156:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1157:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1158:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1159:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1160:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1161:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1162:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1163:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1164:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1165:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1166:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1167:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1168:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1169:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1170
	 Choosing alt 0 in insn 1170:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1171:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1172:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1173:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1174:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1175:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1176:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1177:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1178:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1179:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1180:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1181:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1182:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1183:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1184:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1185:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1186:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1187
	 Choosing alt 0 in insn 1187:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1188:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1189:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1190:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1191:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1192:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1193:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1194:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1195:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1196:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1197:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1198:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1199:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1200:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1201:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1202:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1203
	 Choosing alt 0 in insn 1203:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1204:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1205:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1206:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1207:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1208
	 Choosing alt 1 in insn 1208:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1210:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1211
	 Choosing alt 1 in insn 1211:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1212:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1213:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1214:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1215:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1216:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1217:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1218:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1219:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1220:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1221:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1222
	 Choosing alt 0 in insn 1222:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1223:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1224:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1225:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1226:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1227:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1228:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1229:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1230:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1231:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1232:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1233:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1234:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1235:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1236
	 Choosing alt 0 in insn 1236:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1237:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1238:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1239:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1240:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1241:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1242:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1243:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1244:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1245:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1246:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1247:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1248:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1249:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1250:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1251:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1252
	 Choosing alt 0 in insn 1252:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1253:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1254:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1255:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1256:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1257:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1258:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1259:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1260:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1261:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1262:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1263:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1264:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1265:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1266:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1267:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1268
	 Choosing alt 0 in insn 1268:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1269:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1270:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1271:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1272:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1273
	 Choosing alt 1 in insn 1273:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1275:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1276:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1277:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1278:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1279:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1280:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1281:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1282:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1283:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1284:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1285
	 Choosing alt 0 in insn 1285:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1286:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1287:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1288:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1289:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1290:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1291:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1292:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1293:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1294:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1295:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1296:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1297:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1298:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1299:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1300
	 Choosing alt 0 in insn 1300:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1301:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1302:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1303:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1304:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1305:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1306:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1307:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1308:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1309:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1310:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1311:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1312:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1313:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1314:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1315:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1316:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1317
	 Choosing alt 0 in insn 1317:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1318:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1319:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1320:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1321:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1322:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1323:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1324:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1325:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1326:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1327:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1328:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1329:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1330:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1331:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1332:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1333:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1334
	 Choosing alt 0 in insn 1334:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1335:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1336:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1337:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1338:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1339
	 Choosing alt 1 in insn 1339:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 1341:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1430 from oldreg=719, assigning class SSE_REGS to r1430
 1341: r1430:SF=r1430:SF-r765:SF
      REG_DEAD r765:SF
      REG_DEAD r719:SF
    Inserting insn reload before:
 1696: r1430:SF=r719:SF
    Inserting insn reload after:
 1697: r766:SF=r1430:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1343:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1344
	 Choosing alt 1 in insn 1344:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1345:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1346:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1347:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1348:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1349:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1350:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1351:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1352:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1353:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1354:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1355:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1356:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1357:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1358:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1359:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1360:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1361:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1362
	 Choosing alt 0 in insn 1362:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1363:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1364:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1365:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1366:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1367:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1368:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1369:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1370:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1371:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1372:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1373:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1374:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1375:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1376
	 Choosing alt 0 in insn 1376:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1377:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1378:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1379:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1380:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1381:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1382:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1383:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1384:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1385:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1386:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1387:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1388:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1389:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1390:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1391:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1392
	 Choosing alt 0 in insn 1392:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1393:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1394:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1395:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1396:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1397:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1398:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1399:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1400:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1401:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1402:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1403:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1404:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1405:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1406:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1407
	 Choosing alt 0 in insn 1407:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1408:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1409:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1410:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1411:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1412:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1413:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1414:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1415:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1416:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1417:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1418:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1419:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1420:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1421:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1422:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1423:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1424
	 Choosing alt 0 in insn 1424:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1425:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1426:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1427:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1428:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1429:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1430:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1431:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1432:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1433:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1434:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1435:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1436:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1437:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1438
	 Choosing alt 0 in insn 1438:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1439:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1440:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1441:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1442:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1443:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1444:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1445:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1446:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1447:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1448:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1449:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1450:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1451:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1452:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1453:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1454
	 Choosing alt 0 in insn 1454:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1455:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1456:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1457:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1458:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1459:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1460:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1461:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1462:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1463:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1464:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1465:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1466:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1467:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1468:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1469
	 Choosing alt 0 in insn 1469:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1470:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1471:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1472:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1473:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1474:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1475:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1476:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1477:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1478:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1479:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1480:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1481:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1482:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1483:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1484:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1485
	 Choosing alt 0 in insn 1485:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1486:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1487:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1488:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1489:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1490:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1491:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1492:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1493:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1494:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1495
	 Choosing alt 0 in insn 1495:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1496:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1497:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1498:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1499:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1501:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1502:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1504:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1431 from oldreg=862, assigning class SSE_REGS to r1431
 1504: r1431:SF=r1431:SF*[frame:DI-0x68]
      REG_DEAD r862:SF
    Inserting insn reload before:
 1698: r1431:SF=r862:SF
    Inserting insn reload after:
 1699: r863:SF=r1431:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1505:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1506:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1508:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1509
	 Choosing alt 1 in insn 1509:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1511
	 Choosing alt 1 in insn 1511:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1512:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1513:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1514:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1515:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1516:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1517:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1518:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1519:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1520:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1521
	 Choosing alt 0 in insn 1521:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1522:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1523:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1524:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1525:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1526:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1527:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1528:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1529:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1530:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1531
	 Choosing alt 0 in insn 1531:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1532:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1533:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1534:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1535:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1537:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1538:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1540:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1432 from oldreg=888, assigning class SSE_REGS to r1432
 1540: r1432:SF=r1432:SF*[frame:DI-0x68]
      REG_DEAD r888:SF
    Inserting insn reload before:
 1700: r1432:SF=r888:SF
    Inserting insn reload after:
 1701: r889:SF=r1432:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1541:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1542:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1544:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1545
	 Choosing alt 1 in insn 1545:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1547
	 Choosing alt 1 in insn 1547:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1548:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1550:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1551:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1552:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 1554:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1433 from oldreg=898, assigning class SSE_REGS to r1433
 1554: r1433:SF=r1433:SF/r900:SF
      REG_DEAD r900:SF
      REG_DEAD r898:SF
    Inserting insn reload before:
 1702: r1433:SF=r898:SF
    Inserting insn reload after:
 1703: r901:SF=r1433:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1555:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1556:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1557:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1558:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1559:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1560
	 Choosing alt 0 in insn 1560:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1561:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1562:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1563:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1564:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1565:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1566:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1567:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1568:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1569
	 Choosing alt 0 in insn 1569:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1570:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1571
	 Choosing alt 1 in insn 1571:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1572:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1573:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1576:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1582:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1588:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 49
EBB 7
EBB 48
EBB 8
EBB 9 10
EBB 50
EBB 11
EBB 12 13
EBB 14 15
EBB 16 17 18 19
EBB 20
EBB 53
EBB 21
EBB 52
EBB 22
EBB 51
EBB 23
EBB 24 25
EBB 26 27 28 29
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1434 from oldreg=297, assigning class SSE_REGS to inheritance r1434
    Original reg change 297->1434 (bb29):
 1686: r1434:SF=r1424:SF
    Add original<-inheritance after:
 1704: r297:SF=r1434:SF

    Inheritance reuse change 297->1434 (bb29):
 1687: r1425:SF=r1434:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1435 from oldreg=293, assigning class SSE_REGS to inheritance r1435
    Original reg change 293->1435 (bb29):
 1683: r1435:SF=r1422:SF
    Add original<-inheritance after:
 1705: r293:SF=r1435:SF

    Inheritance reuse change 293->1435 (bb29):
 1684: r1423:SF=r1435:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1704: r297:SF=r1434:SF
deleting insn with uid = 1704.
	    Removing dead insn:
  1705: r293:SF=r1435:SF
deleting insn with uid = 1705.
EBB 30
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1436 from oldreg=305, assigning class SSE_REGS to inheritance r1436
    Original reg change 305->1436 (bb30):
 1693: r1436:SF=r1428:SF
    Add original<-inheritance after:
 1706: r305:SF=r1436:SF

    Inheritance reuse change 305->1436 (bb30):
 1694: r1429:SF=r1436:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1437 from oldreg=301, assigning class SSE_REGS to inheritance r1437
    Original reg change 301->1437 (bb30):
 1690: r1437:SF=r1426:SF
    Add original<-inheritance after:
 1707: r301:SF=r1437:SF

    Inheritance reuse change 301->1437 (bb30):
 1691: r1427:SF=r1437:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1706: r305:SF=r1436:SF
deleting insn with uid = 1706.
	    Removing dead insn:
  1707: r301:SF=r1437:SF
deleting insn with uid = 1707.
EBB 31
EBB 32
EBB 33
EBB 55
EBB 34
EBB 54
EBB 35
EBB 36 37
EBB 38 39
EBB 40 41 42 43
EBB 44
EBB 58
EBB 45
EBB 57
EBB 46
EBB 56
EBB 47

********** Pseudo live ranges #1: **********

  BB 47
   Insn 1613: point = 0, n_alt = -1
  BB 56
   Insn 1668: point = 0, n_alt = -1
  BB 36
   Insn 646: point = 0, n_alt = -1
   Insn 645: point = 0, n_alt = 0
   Insn 644: point = 1, n_alt = 0
   Insn 643: point = 3, n_alt = 0
   Insn 642: point = 4, n_alt = 0
  BB 46
   Insn 1640: point = 4, n_alt = -1
   Insn 1588: point = 4, n_alt = 1
  BB 57
   Insn 1671: point = 4, n_alt = -1
  BB 38
   Insn 656: point = 4, n_alt = -1
   Insn 655: point = 4, n_alt = 0
   Insn 654: point = 5, n_alt = 0
   Insn 653: point = 7, n_alt = 0
   Insn 652: point = 8, n_alt = 0
  BB 45
   Insn 1638: point = 9, n_alt = -1
   Insn 1582: point = 9, n_alt = 1
  BB 58
   Insn 1674: point = 10, n_alt = -1
  BB 40
   Insn 664: point = 11, n_alt = -1
   Insn 663: point = 11, n_alt = 0
   Insn 662: point = 12, n_alt = 0
   Insn 661: point = 14, n_alt = 0
   Insn 660: point = 15, n_alt = 0
  BB 44
   Insn 1636: point = 16, n_alt = -1
   Insn 1576: point = 16, n_alt = 1
  BB 43
   Insn 1573: point = 17, n_alt = 8
   Insn 1572: point = 18, n_alt = 3
   Insn 1571: point = 19, n_alt = 1
   Insn 1570: point = 21, n_alt = 3
   Insn 1569: point = 23, n_alt = 0
   Insn 1568: point = 25, n_alt = 1
   Insn 1567: point = 27, n_alt = 0
   Insn 1566: point = 28, n_alt = 0
   Insn 1565: point = 30, n_alt = 1
   Insn 1564: point = 32, n_alt = 0
   Insn 1563: point = 33, n_alt = 7
   Insn 1562: point = 35, n_alt = 3
   Insn 1561: point = 36, n_alt = 3
   Insn 1560: point = 38, n_alt = 0
   Insn 1559: point = 40, n_alt = 1
   Insn 1558: point = 42, n_alt = 0
   Insn 1557: point = 43, n_alt = 0
   Insn 1556: point = 45, n_alt = 1
   Insn 1555: point = 47, n_alt = 0
   Insn 1703: point = 48, n_alt = -2
	Hard reg 22 is preferable by r1433 with profit 1000
   Insn 1554: point = 50, n_alt = 2
   Insn 1702: point = 51, n_alt = -2
	Hard reg 22 is preferable by r1433 with profit 1000
	Hard reg 21 is preferable by r1433 with profit 1000
   Insn 1553: point = 53, n_alt = -2
   Insn 1552: point = 55, n_alt = 1
   Insn 1551: point = 57, n_alt = 7
   Insn 1550: point = 58, n_alt = 1
   Insn 1549: point = 60, n_alt = -2
   Insn 1548: point = 62, n_alt = 2
   Insn 1547: point = 64, n_alt = 1
   Insn 1546: point = 66, n_alt = -2
   Insn 1545: point = 68, n_alt = 1
   Insn 1544: point = 70, n_alt = 1
   Insn 1543: point = 72, n_alt = -2
   Insn 1542: point = 74, n_alt = 2
   Insn 1541: point = 76, n_alt = 7
   Insn 1701: point = 77, n_alt = -2
	Hard reg 23 is preferable by r1432 with profit 1000
   Insn 1540: point = 79, n_alt = 1
   Insn 1700: point = 79, n_alt = -2
	Hard reg 23 is preferable by r1432 with profit 1000
	Hard reg 22 is preferable by r1432 with profit 1000
   Insn 1539: point = 81, n_alt = -2
   Insn 1538: point = 83, n_alt = 2
   Insn 1537: point = 85, n_alt = 7
   Insn 1536: point = 86, n_alt = -2
   Insn 1535: point = 88, n_alt = 2
   Insn 1534: point = 90, n_alt = 7
   Insn 1533: point = 92, n_alt = 3
   Insn 1532: point = 93, n_alt = 3
   Insn 1531: point = 95, n_alt = 0
   Insn 1530: point = 97, n_alt = 1
   Insn 1529: point = 99, n_alt = 0
   Insn 1528: point = 100, n_alt = 0
   Insn 1527: point = 102, n_alt = 1
   Insn 1526: point = 104, n_alt = 0
   Insn 1525: point = 105, n_alt = 7
   Insn 1524: point = 107, n_alt = 0
   Insn 1523: point = 109, n_alt = 4
   Insn 1522: point = 110, n_alt = 3
   Insn 1521: point = 112, n_alt = 0
   Insn 1520: point = 114, n_alt = 1
   Insn 1519: point = 116, n_alt = 0
   Insn 1518: point = 117, n_alt = 0
   Insn 1517: point = 119, n_alt = 0
   Insn 1516: point = 121, n_alt = 1
   Insn 1515: point = 123, n_alt = 0
   Insn 1514: point = 124, n_alt = 1
   Insn 1513: point = 126, n_alt = 1
   Insn 1512: point = 128, n_alt = 0
   Insn 1511: point = 129, n_alt = 1
   Insn 1510: point = 131, n_alt = -2
   Insn 1509: point = 133, n_alt = 1
   Insn 1508: point = 135, n_alt = 1
   Insn 1507: point = 137, n_alt = -2
   Insn 1506: point = 139, n_alt = 2
   Insn 1505: point = 141, n_alt = 7
   Insn 1699: point = 142, n_alt = -2
	Hard reg 22 is preferable by r1431 with profit 1000
   Insn 1504: point = 144, n_alt = 1
   Insn 1698: point = 144, n_alt = -2
	Hard reg 22 is preferable by r1431 with profit 1000
	Hard reg 21 is preferable by r1431 with profit 1000
   Insn 1503: point = 146, n_alt = -2
   Insn 1502: point = 148, n_alt = 2
   Insn 1501: point = 150, n_alt = 7
   Insn 1500: point = 151, n_alt = -2
   Insn 1499: point = 153, n_alt = 2
   Insn 1498: point = 155, n_alt = 7
   Insn 1497: point = 157, n_alt = 3
   Insn 1496: point = 158, n_alt = 3
   Insn 1495: point = 160, n_alt = 0
   Insn 1494: point = 162, n_alt = 1
   Insn 1493: point = 164, n_alt = 0
   Insn 1492: point = 165, n_alt = 0
   Insn 1491: point = 167, n_alt = 1
   Insn 1490: point = 169, n_alt = 0
   Insn 1489: point = 170, n_alt = 7
   Insn 1488: point = 172, n_alt = 0
   Insn 1487: point = 174, n_alt = 4
   Insn 1486: point = 175, n_alt = 3
   Insn 1485: point = 177, n_alt = 0
   Insn 1484: point = 179, n_alt = 1
   Insn 1483: point = 181, n_alt = 0
   Insn 1482: point = 182, n_alt = 0
   Insn 1481: point = 184, n_alt = 0
   Insn 1480: point = 186, n_alt = 1
   Insn 1479: point = 188, n_alt = 0
   Insn 1478: point = 189, n_alt = 1
   Insn 1477: point = 191, n_alt = 1
   Insn 1476: point = 193, n_alt = 0
   Insn 1475: point = 194, n_alt = 8
   Insn 1474: point = 195, n_alt = 2
   Insn 1473: point = 197, n_alt = 7
   Insn 1472: point = 199, n_alt = 0
   Insn 1471: point = 201, n_alt = 4
   Insn 1470: point = 202, n_alt = 3
   Insn 1469: point = 204, n_alt = 0
   Insn 1468: point = 206, n_alt = 1
   Insn 1467: point = 208, n_alt = 0
   Insn 1466: point = 209, n_alt = 0
   Insn 1465: point = 211, n_alt = 0
   Insn 1464: point = 213, n_alt = 1
   Insn 1463: point = 215, n_alt = 0
   Insn 1462: point = 216, n_alt = 1
   Insn 1461: point = 218, n_alt = 1
   Insn 1460: point = 220, n_alt = 0
   Insn 1459: point = 222, n_alt = 0
   Insn 1458: point = 223, n_alt = 7
   Insn 1457: point = 225, n_alt = 0
   Insn 1456: point = 227, n_alt = 4
   Insn 1455: point = 228, n_alt = 3
   Insn 1454: point = 230, n_alt = 0
   Insn 1453: point = 232, n_alt = 1
   Insn 1452: point = 234, n_alt = 0
   Insn 1451: point = 235, n_alt = 0
   Insn 1450: point = 237, n_alt = 0
   Insn 1449: point = 239, n_alt = 1
   Insn 1448: point = 241, n_alt = 0
   Insn 1447: point = 242, n_alt = 1
   Insn 1446: point = 244, n_alt = 1
   Insn 1445: point = 246, n_alt = 0
   Insn 1444: point = 247, n_alt = 8
   Insn 1443: point = 248, n_alt = 2
   Insn 1442: point = 250, n_alt = 7
   Insn 1441: point = 252, n_alt = 0
   Insn 1440: point = 254, n_alt = 4
   Insn 1439: point = 255, n_alt = 3
   Insn 1438: point = 257, n_alt = 0
   Insn 1437: point = 259, n_alt = 1
   Insn 1436: point = 261, n_alt = 0
   Insn 1435: point = 262, n_alt = 0
   Insn 1434: point = 264, n_alt = 0
   Insn 1433: point = 266, n_alt = 1
   Insn 1432: point = 268, n_alt = 0
   Insn 1431: point = 269, n_alt = 1
   Insn 1430: point = 271, n_alt = 1
   Insn 1429: point = 273, n_alt = 0
   Insn 1428: point = 274, n_alt = 7
   Insn 1427: point = 276, n_alt = 0
   Insn 1426: point = 278, n_alt = 4
   Insn 1425: point = 279, n_alt = 3
   Insn 1424: point = 281, n_alt = 0
   Insn 1423: point = 283, n_alt = 1
   Insn 1422: point = 285, n_alt = 0
   Insn 1421: point = 286, n_alt = 0
   Insn 1420: point = 288, n_alt = 0
   Insn 1419: point = 290, n_alt = 1
   Insn 1418: point = 292, n_alt = 0
   Insn 1417: point = 293, n_alt = 1
   Insn 1416: point = 295, n_alt = 1
   Insn 1415: point = 297, n_alt = 0
   Insn 1414: point = 299, n_alt = 0
   Insn 1413: point = 300, n_alt = 8
   Insn 1412: point = 301, n_alt = 2
   Insn 1411: point = 303, n_alt = 7
   Insn 1410: point = 305, n_alt = 0
   Insn 1409: point = 307, n_alt = 4
   Insn 1408: point = 308, n_alt = 3
   Insn 1407: point = 310, n_alt = 0
   Insn 1406: point = 312, n_alt = 1
   Insn 1405: point = 314, n_alt = 0
   Insn 1404: point = 315, n_alt = 0
   Insn 1403: point = 317, n_alt = 0
   Insn 1402: point = 319, n_alt = 1
   Insn 1401: point = 321, n_alt = 0
   Insn 1400: point = 322, n_alt = 1
   Insn 1399: point = 324, n_alt = 1
   Insn 1398: point = 326, n_alt = 0
   Insn 1397: point = 328, n_alt = 0
   Insn 1396: point = 329, n_alt = 7
   Insn 1395: point = 331, n_alt = 0
   Insn 1394: point = 333, n_alt = 4
   Insn 1393: point = 334, n_alt = 3
   Insn 1392: point = 336, n_alt = 0
   Insn 1391: point = 338, n_alt = 1
   Insn 1390: point = 340, n_alt = 0
   Insn 1389: point = 341, n_alt = 0
   Insn 1388: point = 343, n_alt = 0
   Insn 1387: point = 345, n_alt = 1
   Insn 1386: point = 347, n_alt = 0
   Insn 1385: point = 348, n_alt = 1
   Insn 1384: point = 350, n_alt = 1
   Insn 1383: point = 352, n_alt = 0
   Insn 1382: point = 353, n_alt = 8
   Insn 1381: point = 354, n_alt = 2
   Insn 1380: point = 356, n_alt = 7
   Insn 1379: point = 358, n_alt = 0
   Insn 1378: point = 360, n_alt = 4
   Insn 1377: point = 361, n_alt = 3
   Insn 1376: point = 363, n_alt = 0
   Insn 1375: point = 365, n_alt = 1
   Insn 1374: point = 367, n_alt = 0
   Insn 1373: point = 368, n_alt = 0
   Insn 1372: point = 370, n_alt = 0
   Insn 1371: point = 372, n_alt = 1
   Insn 1370: point = 374, n_alt = 0
   Insn 1369: point = 375, n_alt = 1
   Insn 1368: point = 377, n_alt = 1
   Insn 1367: point = 379, n_alt = 0
   Insn 1366: point = 380, n_alt = 7
   Insn 1365: point = 382, n_alt = 0
   Insn 1364: point = 384, n_alt = 4
   Insn 1363: point = 385, n_alt = 3
   Insn 1362: point = 387, n_alt = 0
   Insn 1361: point = 389, n_alt = 1
   Insn 1360: point = 391, n_alt = 0
   Insn 1359: point = 392, n_alt = 0
   Insn 1358: point = 394, n_alt = 0
   Insn 1357: point = 396, n_alt = 1
   Insn 1356: point = 398, n_alt = 0
   Insn 1355: point = 399, n_alt = 1
   Insn 1354: point = 401, n_alt = 1
   Insn 1353: point = 403, n_alt = 0
   Insn 1352: point = 405, n_alt = 0
   Insn 1351: point = 406, n_alt = 8
   Insn 1350: point = 407, n_alt = 2
   Insn 1349: point = 409, n_alt = 7
   Insn 1348: point = 410, n_alt = 8
   Insn 1347: point = 411, n_alt = 2
   Insn 1346: point = 413, n_alt = 7
   Insn 1345: point = 414, n_alt = 8
   Insn 1344: point = 415, n_alt = 1
   Insn 1343: point = 417, n_alt = 7
   Insn 1342: point = 418, n_alt = -2
   Insn 1697: point = 420, n_alt = -2
	Hard reg 21 is preferable by r1430 with profit 1000
   Insn 1341: point = 422, n_alt = 2
   Insn 1696: point = 423, n_alt = -2
	Hard reg 21 is preferable by r1430 with profit 1000
	Hard reg 23 is preferable by r1430 with profit 1000
   Insn 1340: point = 425, n_alt = -2
   Insn 1339: point = 427, n_alt = 1
   Insn 1338: point = 429, n_alt = 7
   Insn 1337: point = 431, n_alt = 0
   Insn 1336: point = 433, n_alt = 4
   Insn 1335: point = 434, n_alt = 3
   Insn 1334: point = 436, n_alt = 0
   Insn 1333: point = 438, n_alt = 1
   Insn 1332: point = 440, n_alt = 0
   Insn 1331: point = 441, n_alt = 0
   Insn 1330: point = 443, n_alt = 0
   Insn 1329: point = 445, n_alt = 1
   Insn 1328: point = 447, n_alt = 0
   Insn 1327: point = 449, n_alt = 0
   Insn 1326: point = 450, n_alt = 1
   Insn 1325: point = 452, n_alt = 1
   Insn 1324: point = 454, n_alt = 0
   Insn 1323: point = 456, n_alt = 0
   Insn 1322: point = 457, n_alt = 1
   Insn 1321: point = 459, n_alt = 7
   Insn 1320: point = 461, n_alt = 0
   Insn 1319: point = 463, n_alt = 4
   Insn 1318: point = 464, n_alt = 3
   Insn 1317: point = 466, n_alt = 0
   Insn 1316: point = 468, n_alt = 1
   Insn 1315: point = 470, n_alt = 0
   Insn 1314: point = 471, n_alt = 0
   Insn 1313: point = 473, n_alt = 0
   Insn 1312: point = 475, n_alt = 1
   Insn 1311: point = 477, n_alt = 0
   Insn 1310: point = 479, n_alt = 0
   Insn 1309: point = 480, n_alt = 1
   Insn 1308: point = 482, n_alt = 1
   Insn 1307: point = 484, n_alt = 0
   Insn 1306: point = 486, n_alt = 0
   Insn 1305: point = 487, n_alt = 1
   Insn 1304: point = 489, n_alt = 7
   Insn 1303: point = 491, n_alt = 0
   Insn 1302: point = 493, n_alt = 4
   Insn 1301: point = 494, n_alt = 3
   Insn 1300: point = 496, n_alt = 0
   Insn 1299: point = 498, n_alt = 1
   Insn 1298: point = 500, n_alt = 0
   Insn 1297: point = 501, n_alt = 0
   Insn 1296: point = 503, n_alt = 0
   Insn 1295: point = 505, n_alt = 1
   Insn 1294: point = 507, n_alt = 0
   Insn 1293: point = 508, n_alt = 1
   Insn 1292: point = 510, n_alt = 1
   Insn 1291: point = 512, n_alt = 0
   Insn 1290: point = 514, n_alt = 0
   Insn 1289: point = 515, n_alt = 7
   Insn 1288: point = 517, n_alt = 0
   Insn 1287: point = 519, n_alt = 4
   Insn 1286: point = 520, n_alt = 3
   Insn 1285: point = 522, n_alt = 0
   Insn 1284: point = 524, n_alt = 1
   Insn 1283: point = 526, n_alt = 0
   Insn 1282: point = 527, n_alt = 0
   Insn 1281: point = 529, n_alt = 0
   Insn 1280: point = 531, n_alt = 1
   Insn 1279: point = 533, n_alt = 0
   Insn 1278: point = 534, n_alt = 1
   Insn 1277: point = 536, n_alt = 1
   Insn 1276: point = 538, n_alt = 0
   Insn 1275: point = 540, n_alt = 0
   Insn 1274: point = 541, n_alt = -2
   Insn 1273: point = 543, n_alt = 1
   Insn 1272: point = 545, n_alt = 7
   Insn 1271: point = 547, n_alt = 0
   Insn 1270: point = 549, n_alt = 4
   Insn 1269: point = 550, n_alt = 3
   Insn 1268: point = 552, n_alt = 0
   Insn 1267: point = 554, n_alt = 1
   Insn 1266: point = 556, n_alt = 0
   Insn 1265: point = 557, n_alt = 0
   Insn 1264: point = 559, n_alt = 0
   Insn 1263: point = 561, n_alt = 1
   Insn 1262: point = 563, n_alt = 0
   Insn 1261: point = 565, n_alt = 0
   Insn 1260: point = 566, n_alt = 1
   Insn 1259: point = 568, n_alt = 1
   Insn 1258: point = 570, n_alt = 0
   Insn 1257: point = 571, n_alt = 1
   Insn 1256: point = 573, n_alt = 7
   Insn 1255: point = 575, n_alt = 0
   Insn 1254: point = 577, n_alt = 4
   Insn 1253: point = 578, n_alt = 3
   Insn 1252: point = 580, n_alt = 0
   Insn 1251: point = 582, n_alt = 1
   Insn 1250: point = 584, n_alt = 0
   Insn 1249: point = 585, n_alt = 0
   Insn 1248: point = 587, n_alt = 0
   Insn 1247: point = 589, n_alt = 1
   Insn 1246: point = 591, n_alt = 0
   Insn 1245: point = 593, n_alt = 0
   Insn 1244: point = 594, n_alt = 1
   Insn 1243: point = 596, n_alt = 1
   Insn 1242: point = 598, n_alt = 0
   Insn 1241: point = 599, n_alt = 1
   Insn 1240: point = 601, n_alt = 7
   Insn 1239: point = 603, n_alt = 0
   Insn 1238: point = 605, n_alt = 4
   Insn 1237: point = 606, n_alt = 3
   Insn 1236: point = 608, n_alt = 0
   Insn 1235: point = 610, n_alt = 1
   Insn 1234: point = 612, n_alt = 0
   Insn 1233: point = 613, n_alt = 0
   Insn 1232: point = 615, n_alt = 0
   Insn 1231: point = 617, n_alt = 1
   Insn 1230: point = 619, n_alt = 0
   Insn 1229: point = 620, n_alt = 1
   Insn 1228: point = 622, n_alt = 1
   Insn 1227: point = 624, n_alt = 0
   Insn 1226: point = 625, n_alt = 7
   Insn 1225: point = 627, n_alt = 0
   Insn 1224: point = 629, n_alt = 4
   Insn 1223: point = 630, n_alt = 3
   Insn 1222: point = 632, n_alt = 0
   Insn 1221: point = 634, n_alt = 1
   Insn 1220: point = 636, n_alt = 0
   Insn 1219: point = 637, n_alt = 0
   Insn 1218: point = 639, n_alt = 0
   Insn 1217: point = 641, n_alt = 1
   Insn 1216: point = 643, n_alt = 0
   Insn 1215: point = 644, n_alt = 1
   Insn 1214: point = 646, n_alt = 1
   Insn 1213: point = 648, n_alt = 0
   Insn 1212: point = 649, n_alt = 8
   Insn 1211: point = 650, n_alt = 1
   Insn 1210: point = 652, n_alt = 7
   Insn 1209: point = 653, n_alt = -2
   Insn 1208: point = 655, n_alt = 1
   Insn 1207: point = 657, n_alt = 7
   Insn 1206: point = 659, n_alt = 0
   Insn 1205: point = 661, n_alt = 4
   Insn 1204: point = 662, n_alt = 3
   Insn 1203: point = 664, n_alt = 0
   Insn 1202: point = 666, n_alt = 1
   Insn 1201: point = 668, n_alt = 0
   Insn 1200: point = 669, n_alt = 0
   Insn 1199: point = 671, n_alt = 0
   Insn 1198: point = 673, n_alt = 1
   Insn 1197: point = 675, n_alt = 0
   Insn 1196: point = 677, n_alt = 0
   Insn 1195: point = 678, n_alt = 1
   Insn 1194: point = 680, n_alt = 1
   Insn 1193: point = 682, n_alt = 0
   Insn 1192: point = 683, n_alt = 1
   Insn 1191: point = 685, n_alt = 7
   Insn 1190: point = 687, n_alt = 0
   Insn 1189: point = 689, n_alt = 4
   Insn 1188: point = 690, n_alt = 3
   Insn 1187: point = 692, n_alt = 0
   Insn 1186: point = 694, n_alt = 1
   Insn 1185: point = 696, n_alt = 0
   Insn 1184: point = 697, n_alt = 0
   Insn 1183: point = 699, n_alt = 0
   Insn 1182: point = 701, n_alt = 1
   Insn 1181: point = 703, n_alt = 0
   Insn 1180: point = 705, n_alt = 0
   Insn 1179: point = 706, n_alt = 1
   Insn 1178: point = 708, n_alt = 1
   Insn 1177: point = 710, n_alt = 0
   Insn 1176: point = 712, n_alt = 0
   Insn 1175: point = 713, n_alt = 1
   Insn 1174: point = 715, n_alt = 7
   Insn 1173: point = 717, n_alt = 0
   Insn 1172: point = 719, n_alt = 4
   Insn 1171: point = 720, n_alt = 3
   Insn 1170: point = 722, n_alt = 0
   Insn 1169: point = 724, n_alt = 1
   Insn 1168: point = 726, n_alt = 0
   Insn 1167: point = 727, n_alt = 0
   Insn 1166: point = 729, n_alt = 0
   Insn 1165: point = 731, n_alt = 1
   Insn 1164: point = 733, n_alt = 0
   Insn 1163: point = 735, n_alt = 0
   Insn 1162: point = 736, n_alt = 1
   Insn 1161: point = 738, n_alt = 1
   Insn 1160: point = 740, n_alt = 0
   Insn 1159: point = 741, n_alt = 1
   Insn 1158: point = 743, n_alt = 7
   Insn 1157: point = 745, n_alt = 0
   Insn 1156: point = 747, n_alt = 4
   Insn 1155: point = 748, n_alt = 3
   Insn 1154: point = 750, n_alt = 0
   Insn 1153: point = 752, n_alt = 1
   Insn 1152: point = 754, n_alt = 0
   Insn 1151: point = 755, n_alt = 0
   Insn 1150: point = 757, n_alt = 0
   Insn 1149: point = 759, n_alt = 1
   Insn 1148: point = 761, n_alt = 0
   Insn 1147: point = 763, n_alt = 0
   Insn 1146: point = 764, n_alt = 1
   Insn 1145: point = 766, n_alt = 1
   Insn 1144: point = 768, n_alt = 0
   Insn 1143: point = 770, n_alt = 0
   Insn 1142: point = 771, n_alt = 1
   Insn 1141: point = 773, n_alt = 7
   Insn 1140: point = 775, n_alt = 0
   Insn 1139: point = 777, n_alt = 4
   Insn 1138: point = 778, n_alt = 3
   Insn 1137: point = 780, n_alt = 0
   Insn 1136: point = 782, n_alt = 1
   Insn 1135: point = 784, n_alt = 0
   Insn 1134: point = 785, n_alt = 0
   Insn 1133: point = 787, n_alt = 0
   Insn 1132: point = 789, n_alt = 1
   Insn 1131: point = 791, n_alt = 0
   Insn 1130: point = 792, n_alt = 1
   Insn 1129: point = 794, n_alt = 1
   Insn 1128: point = 796, n_alt = 0
   Insn 1127: point = 797, n_alt = 1
   Insn 1126: point = 799, n_alt = 7
   Insn 1125: point = 801, n_alt = 0
   Insn 1124: point = 803, n_alt = 4
   Insn 1123: point = 804, n_alt = 3
   Insn 1122: point = 806, n_alt = 0
   Insn 1121: point = 808, n_alt = 1
   Insn 1120: point = 810, n_alt = 0
   Insn 1119: point = 811, n_alt = 0
   Insn 1118: point = 813, n_alt = 0
   Insn 1117: point = 815, n_alt = 1
   Insn 1116: point = 817, n_alt = 0
   Insn 1115: point = 818, n_alt = 1
   Insn 1114: point = 820, n_alt = 1
   Insn 1113: point = 822, n_alt = 0
   Insn 1112: point = 824, n_alt = 0
   Insn 1111: point = 825, n_alt = 1
   Insn 1110: point = 827, n_alt = 7
   Insn 1109: point = 829, n_alt = 0
   Insn 1108: point = 831, n_alt = 4
   Insn 1107: point = 832, n_alt = 3
   Insn 1106: point = 834, n_alt = 0
   Insn 1105: point = 836, n_alt = 1
   Insn 1104: point = 838, n_alt = 0
   Insn 1103: point = 839, n_alt = 0
   Insn 1102: point = 841, n_alt = 0
   Insn 1101: point = 843, n_alt = 1
   Insn 1100: point = 845, n_alt = 0
   Insn 1099: point = 846, n_alt = 1
   Insn 1098: point = 848, n_alt = 1
   Insn 1097: point = 850, n_alt = 0
   Insn 1096: point = 851, n_alt = 7
   Insn 1095: point = 853, n_alt = 0
   Insn 1094: point = 855, n_alt = 4
   Insn 1093: point = 856, n_alt = 3
   Insn 1092: point = 858, n_alt = 0
   Insn 1091: point = 860, n_alt = 1
   Insn 1090: point = 862, n_alt = 0
   Insn 1089: point = 863, n_alt = 0
   Insn 1088: point = 865, n_alt = 0
   Insn 1087: point = 867, n_alt = 1
   Insn 1086: point = 869, n_alt = 0
   Insn 1085: point = 870, n_alt = 1
   Insn 1084: point = 872, n_alt = 1
   Insn 1083: point = 874, n_alt = 0
   Insn 1082: point = 876, n_alt = 0
   Insn 1081: point = 877, n_alt = 8
   Insn 1080: point = 878, n_alt = 1
   Insn 1079: point = 880, n_alt = 7
   Insn 1078: point = 881, n_alt = -2
   Insn 1077: point = 883, n_alt = 1
   Insn 1076: point = 885, n_alt = 7
   Insn 1075: point = 887, n_alt = 0
   Insn 1074: point = 889, n_alt = 4
   Insn 1073: point = 890, n_alt = 3
   Insn 1072: point = 892, n_alt = 0
   Insn 1071: point = 894, n_alt = 1
   Insn 1070: point = 896, n_alt = 0
   Insn 1069: point = 897, n_alt = 0
   Insn 1068: point = 899, n_alt = 0
   Insn 1067: point = 901, n_alt = 1
   Insn 1066: point = 903, n_alt = 0
   Insn 1065: point = 905, n_alt = 0
   Insn 1064: point = 906, n_alt = 1
   Insn 1063: point = 908, n_alt = 1
   Insn 1062: point = 910, n_alt = 0
   Insn 1061: point = 912, n_alt = 0
   Insn 1060: point = 913, n_alt = 1
   Insn 1059: point = 915, n_alt = 7
   Insn 1058: point = 917, n_alt = 0
   Insn 1057: point = 919, n_alt = 4
   Insn 1056: point = 920, n_alt = 3
   Insn 1055: point = 922, n_alt = 0
   Insn 1054: point = 924, n_alt = 1
   Insn 1053: point = 926, n_alt = 0
   Insn 1052: point = 927, n_alt = 0
   Insn 1051: point = 929, n_alt = 0
   Insn 1050: point = 931, n_alt = 1
   Insn 1049: point = 933, n_alt = 0
   Insn 1048: point = 935, n_alt = 0
   Insn 1047: point = 936, n_alt = 1
   Insn 1046: point = 938, n_alt = 1
   Insn 1045: point = 940, n_alt = 0
   Insn 1044: point = 942, n_alt = 0
   Insn 1043: point = 943, n_alt = 1
   Insn 1042: point = 945, n_alt = 7
   Insn 1041: point = 947, n_alt = 0
   Insn 1040: point = 949, n_alt = 4
   Insn 1039: point = 950, n_alt = 3
   Insn 1038: point = 952, n_alt = 0
   Insn 1037: point = 954, n_alt = 1
   Insn 1036: point = 956, n_alt = 0
   Insn 1035: point = 957, n_alt = 0
   Insn 1034: point = 959, n_alt = 0
   Insn 1033: point = 961, n_alt = 1
   Insn 1032: point = 963, n_alt = 0
   Insn 1031: point = 965, n_alt = 0
   Insn 1030: point = 966, n_alt = 1
   Insn 1029: point = 968, n_alt = 1
   Insn 1028: point = 970, n_alt = 0
   Insn 1027: point = 972, n_alt = 0
   Insn 1026: point = 973, n_alt = 1
   Insn 1025: point = 975, n_alt = 7
   Insn 1024: point = 977, n_alt = 0
   Insn 1023: point = 979, n_alt = 4
   Insn 1022: point = 980, n_alt = 3
   Insn 1021: point = 982, n_alt = 0
   Insn 1020: point = 984, n_alt = 1
   Insn 1019: point = 986, n_alt = 0
   Insn 1018: point = 987, n_alt = 0
   Insn 1017: point = 989, n_alt = 0
   Insn 1016: point = 991, n_alt = 1
   Insn 1015: point = 993, n_alt = 0
   Insn 1014: point = 995, n_alt = 0
   Insn 1013: point = 996, n_alt = 1
   Insn 1012: point = 998, n_alt = 1
   Insn 1011: point = 1000, n_alt = 0
   Insn 1010: point = 1002, n_alt = 0
   Insn 1009: point = 1003, n_alt = 1
   Insn 1008: point = 1005, n_alt = 7
   Insn 1007: point = 1007, n_alt = 0
   Insn 1006: point = 1009, n_alt = 4
   Insn 1005: point = 1010, n_alt = 3
   Insn 1004: point = 1012, n_alt = 0
   Insn 1003: point = 1014, n_alt = 1
   Insn 1002: point = 1016, n_alt = 0
   Insn 1001: point = 1017, n_alt = 0
   Insn 1000: point = 1019, n_alt = 0
   Insn 999: point = 1021, n_alt = 1
   Insn 998: point = 1023, n_alt = 0
   Insn 997: point = 1024, n_alt = 1
   Insn 996: point = 1026, n_alt = 1
   Insn 995: point = 1028, n_alt = 0
   Insn 994: point = 1030, n_alt = 0
   Insn 993: point = 1031, n_alt = 1
   Insn 992: point = 1033, n_alt = 7
   Insn 991: point = 1035, n_alt = 0
   Insn 990: point = 1037, n_alt = 4
   Insn 989: point = 1038, n_alt = 3
   Insn 988: point = 1040, n_alt = 0
   Insn 987: point = 1042, n_alt = 1
   Insn 986: point = 1044, n_alt = 0
   Insn 985: point = 1045, n_alt = 0
   Insn 984: point = 1047, n_alt = 0
   Insn 983: point = 1049, n_alt = 1
   Insn 982: point = 1051, n_alt = 0
   Insn 981: point = 1052, n_alt = 1
   Insn 980: point = 1054, n_alt = 1
   Insn 979: point = 1056, n_alt = 0
   Insn 978: point = 1058, n_alt = 0
   Insn 977: point = 1059, n_alt = 1
   Insn 976: point = 1061, n_alt = 7
   Insn 975: point = 1063, n_alt = 0
   Insn 974: point = 1065, n_alt = 4
   Insn 973: point = 1066, n_alt = 3
   Insn 972: point = 1068, n_alt = 0
   Insn 971: point = 1070, n_alt = 1
   Insn 970: point = 1072, n_alt = 0
   Insn 969: point = 1073, n_alt = 0
   Insn 968: point = 1075, n_alt = 0
   Insn 967: point = 1077, n_alt = 1
   Insn 966: point = 1079, n_alt = 0
   Insn 965: point = 1080, n_alt = 1
   Insn 964: point = 1082, n_alt = 1
   Insn 963: point = 1084, n_alt = 0
   Insn 962: point = 1086, n_alt = 0
   Insn 961: point = 1087, n_alt = 7
   Insn 960: point = 1089, n_alt = 0
   Insn 959: point = 1091, n_alt = 4
   Insn 958: point = 1092, n_alt = 3
   Insn 957: point = 1094, n_alt = 0
   Insn 956: point = 1096, n_alt = 1
   Insn 955: point = 1098, n_alt = 0
   Insn 954: point = 1099, n_alt = 0
   Insn 953: point = 1101, n_alt = 0
   Insn 952: point = 1103, n_alt = 1
   Insn 951: point = 1105, n_alt = 0
   Insn 950: point = 1106, n_alt = 1
   Insn 949: point = 1108, n_alt = 1
   Insn 948: point = 1110, n_alt = 0
   Insn 947: point = 1112, n_alt = 0
  BB 42
   Insn 945: point = 1114, n_alt = -1
   Insn 944: point = 1114, n_alt = 0
   Insn 943: point = 1115, n_alt = 0
   Insn 942: point = 1117, n_alt = 0
   Insn 941: point = 1119, n_alt = 4
   Insn 940: point = 1120, n_alt = 3
   Insn 939: point = 1122, n_alt = 0
   Insn 938: point = 1124, n_alt = 1
   Insn 937: point = 1126, n_alt = 0
   Insn 936: point = 1127, n_alt = 0
   Insn 935: point = 1129, n_alt = 1
   Insn 934: point = 1131, n_alt = 0
  BB 41
   Insn 929: point = 1133, n_alt = -1
   Insn 928: point = 1133, n_alt = 1
   Insn 927: point = 1134, n_alt = 7
   Insn 926: point = 1135, n_alt = 8
   Insn 925: point = 1136, n_alt = 2
   Insn 924: point = 1138, n_alt = 7
   Insn 923: point = 1139, n_alt = 8
   Insn 922: point = 1140, n_alt = 1
   Insn 921: point = 1142, n_alt = 7
   Insn 920: point = 1143, n_alt = -2
   Insn 919: point = 1145, n_alt = 1
   Insn 918: point = 1147, n_alt = 7
   Insn 917: point = 1149, n_alt = 0
   Insn 916: point = 1151, n_alt = 4
   Insn 915: point = 1152, n_alt = 3
   Insn 914: point = 1154, n_alt = 0
   Insn 913: point = 1156, n_alt = 1
   Insn 912: point = 1158, n_alt = 0
   Insn 911: point = 1159, n_alt = 0
   Insn 910: point = 1161, n_alt = 0
   Insn 909: point = 1163, n_alt = 1
   Insn 908: point = 1165, n_alt = 0
   Insn 907: point = 1167, n_alt = 0
   Insn 906: point = 1168, n_alt = 1
   Insn 905: point = 1170, n_alt = 1
   Insn 904: point = 1172, n_alt = 0
   Insn 903: point = 1174, n_alt = 0
   Insn 902: point = 1176, n_alt = 0
   Insn 901: point = 1178, n_alt = 4
   Insn 900: point = 1179, n_alt = 3
   Insn 899: point = 1181, n_alt = 0
   Insn 898: point = 1183, n_alt = 1
   Insn 897: point = 1185, n_alt = 0
   Insn 896: point = 1186, n_alt = 0
   Insn 895: point = 1188, n_alt = 1
   Insn 894: point = 1190, n_alt = 0
   Insn 893: point = 1191, n_alt = 1
   Insn 892: point = 1193, n_alt = 7
   Insn 891: point = 1195, n_alt = 0
   Insn 890: point = 1197, n_alt = 4
   Insn 889: point = 1198, n_alt = 3
   Insn 888: point = 1200, n_alt = 0
   Insn 887: point = 1202, n_alt = 1
   Insn 886: point = 1204, n_alt = 0
   Insn 885: point = 1205, n_alt = 0
   Insn 884: point = 1207, n_alt = 0
   Insn 883: point = 1209, n_alt = 1
   Insn 882: point = 1211, n_alt = 0
   Insn 881: point = 1213, n_alt = 0
   Insn 880: point = 1214, n_alt = 1
   Insn 879: point = 1216, n_alt = 1
   Insn 878: point = 1218, n_alt = 0
   Insn 877: point = 1220, n_alt = 0
   Insn 876: point = 1222, n_alt = 0
   Insn 875: point = 1224, n_alt = 4
   Insn 874: point = 1225, n_alt = 3
   Insn 873: point = 1227, n_alt = 0
   Insn 872: point = 1229, n_alt = 1
   Insn 871: point = 1231, n_alt = 0
   Insn 870: point = 1232, n_alt = 0
   Insn 869: point = 1234, n_alt = 1
   Insn 868: point = 1236, n_alt = 0
   Insn 867: point = 1237, n_alt = 1
   Insn 866: point = 1239, n_alt = 7
   Insn 865: point = 1241, n_alt = 0
   Insn 864: point = 1243, n_alt = 4
   Insn 863: point = 1244, n_alt = 3
   Insn 862: point = 1246, n_alt = 0
   Insn 861: point = 1248, n_alt = 1
   Insn 860: point = 1250, n_alt = 0
   Insn 859: point = 1251, n_alt = 0
   Insn 858: point = 1253, n_alt = 0
   Insn 857: point = 1255, n_alt = 1
   Insn 856: point = 1257, n_alt = 0
   Insn 855: point = 1258, n_alt = 1
   Insn 854: point = 1260, n_alt = 1
   Insn 853: point = 1262, n_alt = 0
   Insn 852: point = 1264, n_alt = 0
   Insn 851: point = 1266, n_alt = 0
   Insn 850: point = 1268, n_alt = 4
   Insn 849: point = 1269, n_alt = 3
   Insn 848: point = 1271, n_alt = 0
   Insn 847: point = 1273, n_alt = 1
   Insn 846: point = 1275, n_alt = 0
   Insn 845: point = 1276, n_alt = 0
   Insn 844: point = 1278, n_alt = 1
   Insn 843: point = 1280, n_alt = 0
   Insn 842: point = 1281, n_alt = 7
   Insn 841: point = 1283, n_alt = 0
   Insn 840: point = 1285, n_alt = 4
   Insn 839: point = 1286, n_alt = 3
   Insn 838: point = 1288, n_alt = 0
   Insn 837: point = 1290, n_alt = 1
   Insn 836: point = 1292, n_alt = 0
   Insn 835: point = 1293, n_alt = 0
   Insn 834: point = 1295, n_alt = 0
   Insn 833: point = 1297, n_alt = 1
   Insn 832: point = 1299, n_alt = 0
   Insn 831: point = 1300, n_alt = 1
   Insn 830: point = 1302, n_alt = 1
   Insn 829: point = 1304, n_alt = 0
   Insn 828: point = 1306, n_alt = 0
   Insn 827: point = 1308, n_alt = 0
   Insn 826: point = 1310, n_alt = 4
   Insn 825: point = 1311, n_alt = 3
   Insn 824: point = 1313, n_alt = 0
   Insn 823: point = 1315, n_alt = 1
   Insn 822: point = 1317, n_alt = 0
   Insn 821: point = 1318, n_alt = 0
   Insn 820: point = 1320, n_alt = 1
   Insn 819: point = 1322, n_alt = 0
   Insn 818: point = 1323, n_alt = 8
   Insn 817: point = 1324, n_alt = 1
   Insn 816: point = 1326, n_alt = 7
   Insn 815: point = 1327, n_alt = -2
   Insn 814: point = 1329, n_alt = 1
   Insn 813: point = 1331, n_alt = 7
   Insn 812: point = 1333, n_alt = 0
   Insn 811: point = 1335, n_alt = 4
   Insn 810: point = 1336, n_alt = 3
   Insn 809: point = 1338, n_alt = 0
   Insn 808: point = 1340, n_alt = 1
   Insn 807: point = 1342, n_alt = 0
   Insn 806: point = 1343, n_alt = 0
   Insn 805: point = 1345, n_alt = 0
   Insn 804: point = 1347, n_alt = 1
   Insn 803: point = 1349, n_alt = 0
   Insn 802: point = 1351, n_alt = 0
   Insn 801: point = 1352, n_alt = 1
   Insn 800: point = 1354, n_alt = 1
   Insn 799: point = 1356, n_alt = 0
   Insn 798: point = 1358, n_alt = 0
   Insn 797: point = 1359, n_alt = 1
   Insn 796: point = 1361, n_alt = 7
   Insn 795: point = 1363, n_alt = 0
   Insn 794: point = 1365, n_alt = 4
   Insn 793: point = 1366, n_alt = 3
   Insn 792: point = 1368, n_alt = 0
   Insn 791: point = 1370, n_alt = 1
   Insn 790: point = 1372, n_alt = 0
   Insn 789: point = 1373, n_alt = 0
   Insn 788: point = 1375, n_alt = 0
   Insn 787: point = 1377, n_alt = 1
   Insn 786: point = 1379, n_alt = 0
   Insn 785: point = 1381, n_alt = 0
   Insn 784: point = 1382, n_alt = 1
   Insn 783: point = 1384, n_alt = 1
   Insn 782: point = 1386, n_alt = 0
   Insn 781: point = 1387, n_alt = 1
   Insn 780: point = 1389, n_alt = 7
   Insn 779: point = 1391, n_alt = 0
   Insn 778: point = 1393, n_alt = 4
   Insn 777: point = 1394, n_alt = 3
   Insn 776: point = 1396, n_alt = 0
   Insn 775: point = 1398, n_alt = 1
   Insn 774: point = 1400, n_alt = 0
   Insn 773: point = 1401, n_alt = 0
   Insn 772: point = 1403, n_alt = 0
   Insn 771: point = 1405, n_alt = 1
   Insn 770: point = 1407, n_alt = 0
   Insn 769: point = 1409, n_alt = 0
   Insn 768: point = 1410, n_alt = 1
   Insn 767: point = 1412, n_alt = 1
   Insn 766: point = 1414, n_alt = 0
   Insn 765: point = 1416, n_alt = 0
   Insn 764: point = 1417, n_alt = 1
   Insn 763: point = 1419, n_alt = 7
   Insn 762: point = 1421, n_alt = 0
   Insn 761: point = 1423, n_alt = 4
   Insn 760: point = 1424, n_alt = 3
   Insn 759: point = 1426, n_alt = 0
   Insn 758: point = 1428, n_alt = 1
   Insn 757: point = 1430, n_alt = 0
   Insn 756: point = 1431, n_alt = 0
   Insn 755: point = 1433, n_alt = 0
   Insn 754: point = 1435, n_alt = 1
   Insn 753: point = 1437, n_alt = 0
   Insn 752: point = 1439, n_alt = 0
   Insn 751: point = 1440, n_alt = 1
   Insn 750: point = 1442, n_alt = 1
   Insn 749: point = 1444, n_alt = 0
   Insn 748: point = 1445, n_alt = 1
   Insn 747: point = 1447, n_alt = 7
   Insn 746: point = 1449, n_alt = 0
   Insn 745: point = 1451, n_alt = 4
   Insn 744: point = 1452, n_alt = 3
   Insn 743: point = 1454, n_alt = 0
   Insn 742: point = 1456, n_alt = 1
   Insn 741: point = 1458, n_alt = 0
   Insn 740: point = 1459, n_alt = 0
   Insn 739: point = 1461, n_alt = 0
   Insn 738: point = 1463, n_alt = 1
   Insn 737: point = 1465, n_alt = 0
   Insn 736: point = 1466, n_alt = 1
   Insn 735: point = 1468, n_alt = 1
   Insn 734: point = 1470, n_alt = 0
   Insn 733: point = 1472, n_alt = 0
   Insn 732: point = 1473, n_alt = 1
   Insn 731: point = 1475, n_alt = 7
   Insn 730: point = 1477, n_alt = 0
   Insn 729: point = 1479, n_alt = 4
   Insn 728: point = 1480, n_alt = 3
   Insn 727: point = 1482, n_alt = 0
   Insn 726: point = 1484, n_alt = 1
   Insn 725: point = 1486, n_alt = 0
   Insn 724: point = 1487, n_alt = 0
   Insn 723: point = 1489, n_alt = 0
   Insn 722: point = 1491, n_alt = 1
   Insn 721: point = 1493, n_alt = 0
   Insn 720: point = 1494, n_alt = 1
   Insn 719: point = 1496, n_alt = 1
   Insn 718: point = 1498, n_alt = 0
   Insn 717: point = 1499, n_alt = 1
   Insn 716: point = 1501, n_alt = 7
   Insn 715: point = 1503, n_alt = 0
   Insn 714: point = 1505, n_alt = 4
   Insn 713: point = 1506, n_alt = 3
   Insn 712: point = 1508, n_alt = 0
   Insn 711: point = 1510, n_alt = 1
   Insn 710: point = 1512, n_alt = 0
   Insn 709: point = 1513, n_alt = 0
   Insn 708: point = 1515, n_alt = 0
   Insn 707: point = 1517, n_alt = 1
   Insn 706: point = 1519, n_alt = 0
   Insn 705: point = 1520, n_alt = 1
   Insn 704: point = 1522, n_alt = 1
   Insn 703: point = 1524, n_alt = 0
   Insn 702: point = 1526, n_alt = 0
   Insn 701: point = 1527, n_alt = 7
   Insn 700: point = 1529, n_alt = 0
   Insn 699: point = 1531, n_alt = 4
   Insn 698: point = 1532, n_alt = 3
   Insn 697: point = 1534, n_alt = 0
   Insn 696: point = 1536, n_alt = 1
   Insn 695: point = 1538, n_alt = 0
   Insn 694: point = 1539, n_alt = 0
   Insn 693: point = 1541, n_alt = 0
   Insn 692: point = 1543, n_alt = 1
   Insn 691: point = 1545, n_alt = 0
   Insn 690: point = 1546, n_alt = 1
   Insn 689: point = 1548, n_alt = 1
   Insn 688: point = 1550, n_alt = 0
   Insn 687: point = 1551, n_alt = 1
   Insn 686: point = 1552, n_alt = 0
   Insn 685: point = 1554, n_alt = 0
   Insn 681: point = 1555, n_alt = 0
   Insn 680: point = 1557, n_alt = 0
   Insn 679: point = 1559, n_alt = 0
   Insn 678: point = 1561, n_alt = 1
   Insn 677: point = 1563, n_alt = 0
   Insn 676: point = 1564, n_alt = 1
   Insn 675: point = 1565, n_alt = 0
   Insn 674: point = 1567, n_alt = 0
   Insn 670: point = 1568, n_alt = 0
   Insn 669: point = 1570, n_alt = 0
   Insn 668: point = 1572, n_alt = 0
   Insn 667: point = 1574, n_alt = 1
   Insn 666: point = 1576, n_alt = 0
  BB 39
   Insn 658: point = 1578, n_alt = 1
  BB 37
   Insn 650: point = 1579, n_alt = 1
   Insn 649: point = 1580, n_alt = 0
   Insn 648: point = 1581, n_alt = 0
  BB 35
   Insn 640: point = 1582, n_alt = 1
  BB 54
   Insn 1662: point = 1582, n_alt = -1
  BB 24
   Insn 428: point = 1582, n_alt = -1
   Insn 427: point = 1582, n_alt = 0
   Insn 426: point = 1583, n_alt = 0
   Insn 425: point = 1585, n_alt = 0
   Insn 424: point = 1586, n_alt = 0
  BB 34
   Insn 1634: point = 1587, n_alt = -1
   Insn 634: point = 1587, n_alt = 1
  BB 55
   Insn 1665: point = 1588, n_alt = -1
  BB 26
   Insn 436: point = 1589, n_alt = -1
   Insn 435: point = 1589, n_alt = 0
   Insn 434: point = 1590, n_alt = 0
   Insn 433: point = 1592, n_alt = 0
   Insn 432: point = 1593, n_alt = 0
  BB 33
   Insn 1632: point = 1594, n_alt = -1
   Insn 628: point = 1594, n_alt = 1
  BB 31
   Insn 1630: point = 1595, n_alt = -1
   Insn 601: point = 1595, n_alt = 8
   Insn 600: point = 1596, n_alt = 7
   Insn 599: point = 1597, n_alt = 3
   Insn 598: point = 1598, n_alt = 3
   Insn 597: point = 1600, n_alt = 0
   Insn 596: point = 1602, n_alt = 0
   Insn 595: point = 1604, n_alt = 0
   Insn 594: point = 1605, n_alt = 0
   Insn 593: point = 1607, n_alt = 0
   Insn 592: point = 1609, n_alt = 0
   Insn 591: point = 1610, n_alt = 8
   Insn 590: point = 1611, n_alt = 7
   Insn 589: point = 1612, n_alt = 3
   Insn 588: point = 1613, n_alt = 3
   Insn 587: point = 1615, n_alt = 0
   Insn 586: point = 1617, n_alt = 0
   Insn 585: point = 1619, n_alt = 0
   Insn 584: point = 1620, n_alt = 0
   Insn 583: point = 1622, n_alt = 0
   Insn 582: point = 1624, n_alt = 0
  BB 29
   Insn 1628: point = 1626, n_alt = -1
   Insn 541: point = 1626, n_alt = 8
   Insn 540: point = 1627, n_alt = 1
   Insn 539: point = 1629, n_alt = 7
   Insn 538: point = 1630, n_alt = 7
   Insn 537: point = 1631, n_alt = 8
   Insn 536: point = 1632, n_alt = 1
   Insn 535: point = 1634, n_alt = 7
   Insn 534: point = 1635, n_alt = 7
   Insn 533: point = 1636, n_alt = 8
   Insn 1688: point = 1637, n_alt = -2
	Hard reg 21 is preferable by r1425 with profit 1000
   Insn 532: point = 1639, n_alt = 2
   Insn 1687: point = 1640, n_alt = 7
	   Creating copy r1425<-r1434@1000
   Insn 531: point = 1642, n_alt = 1
   Insn 530: point = 1644, n_alt = -2
   Insn 529: point = 1645, n_alt = 0
   Insn 528: point = 1645, n_alt = -2
   Insn 527: point = 1646, n_alt = 7
   Insn 1686: point = 1647, n_alt = 8
	   Creating copy r1424->r1434@1000
   Insn 526: point = 1649, n_alt = 1
   Insn 1685: point = 1649, n_alt = -2
	Hard reg 21 is preferable by r1424 with profit 1000
   Insn 525: point = 1651, n_alt = -2
   Insn 524: point = 1652, n_alt = 0
   Insn 523: point = 1652, n_alt = -2
   Insn 522: point = 1653, n_alt = 7
   Insn 521: point = 1654, n_alt = 8
   Insn 520: point = 1655, n_alt = 1
   Insn 1684: point = 1657, n_alt = 7
	   Creating copy r1423<-r1435@1000
   Insn 519: point = 1659, n_alt = 1
   Insn 518: point = 1661, n_alt = -2
   Insn 517: point = 1662, n_alt = 0
   Insn 516: point = 1662, n_alt = -2
   Insn 515: point = 1663, n_alt = 7
   Insn 1683: point = 1664, n_alt = 8
	   Creating copy r1422->r1435@1000
   Insn 514: point = 1666, n_alt = 1
   Insn 1682: point = 1666, n_alt = -2
	Hard reg 21 is preferable by r1422 with profit 1000
   Insn 513: point = 1668, n_alt = -2
   Insn 512: point = 1669, n_alt = 0
   Insn 511: point = 1669, n_alt = -2
   Insn 510: point = 1670, n_alt = 7
   Insn 509: point = 1671, n_alt = 8
   Insn 508: point = 1672, n_alt = 7
  BB 30
   Insn 579: point = 1674, n_alt = 8
   Insn 578: point = 1675, n_alt = 1
   Insn 577: point = 1677, n_alt = 7
   Insn 576: point = 1678, n_alt = 7
   Insn 575: point = 1679, n_alt = 8
   Insn 574: point = 1680, n_alt = 1
   Insn 573: point = 1682, n_alt = 7
   Insn 572: point = 1683, n_alt = 7
   Insn 571: point = 1684, n_alt = 8
   Insn 1695: point = 1685, n_alt = -2
	Hard reg 21 is preferable by r1429 with profit 1000
   Insn 570: point = 1687, n_alt = 2
   Insn 1694: point = 1688, n_alt = 7
	   Creating copy r1429<-r1436@1000
   Insn 569: point = 1690, n_alt = 1
   Insn 568: point = 1692, n_alt = -2
   Insn 567: point = 1693, n_alt = 0
   Insn 566: point = 1693, n_alt = -2
   Insn 565: point = 1694, n_alt = 7
   Insn 1693: point = 1695, n_alt = 8
	   Creating copy r1428->r1436@1000
   Insn 564: point = 1697, n_alt = 1
   Insn 1692: point = 1697, n_alt = -2
	Hard reg 21 is preferable by r1428 with profit 1000
   Insn 563: point = 1699, n_alt = -2
   Insn 562: point = 1700, n_alt = 0
   Insn 561: point = 1700, n_alt = -2
   Insn 560: point = 1701, n_alt = 7
   Insn 559: point = 1702, n_alt = 8
   Insn 558: point = 1703, n_alt = 1
   Insn 1691: point = 1705, n_alt = 7
	   Creating copy r1427<-r1437@1000
   Insn 557: point = 1707, n_alt = 1
   Insn 556: point = 1709, n_alt = -2
   Insn 555: point = 1710, n_alt = 0
   Insn 554: point = 1710, n_alt = -2
   Insn 553: point = 1711, n_alt = 7
   Insn 1690: point = 1712, n_alt = 8
	   Creating copy r1426->r1437@1000
   Insn 552: point = 1714, n_alt = 1
   Insn 1689: point = 1714, n_alt = -2
	Hard reg 21 is preferable by r1426 with profit 1000
   Insn 551: point = 1716, n_alt = -2
   Insn 550: point = 1717, n_alt = 0
   Insn 549: point = 1717, n_alt = -2
   Insn 548: point = 1718, n_alt = 7
   Insn 547: point = 1719, n_alt = 8
   Insn 546: point = 1720, n_alt = 7
  BB 28
   Insn 503: point = 1722, n_alt = -1
   Insn 502: point = 1722, n_alt = 1
   Insn 501: point = 1723, n_alt = 7
   Insn 500: point = 1724, n_alt = 8
   Insn 499: point = 1725, n_alt = 0
   Insn 498: point = 1727, n_alt = 1
   Insn 497: point = 1729, n_alt = 1
   Insn 496: point = 1731, n_alt = 7
   Insn 1681: point = 1732, n_alt = -2
	Hard reg 22 is preferable by r1421 with profit 1000
   Insn 495: point = 1734, n_alt = 1
   Insn 1680: point = 1734, n_alt = -2
	Hard reg 22 is preferable by r1421 with profit 1000
	Hard reg 21 is preferable by r1421 with profit 1000
   Insn 494: point = 1736, n_alt = 7
   Insn 493: point = 1737, n_alt = 8
   Insn 492: point = 1738, n_alt = 2
   Insn 491: point = 1740, n_alt = 7
   Insn 490: point = 1742, n_alt = 4
   Insn 489: point = 1743, n_alt = 3
   Insn 488: point = 1745, n_alt = 0
   Insn 487: point = 1747, n_alt = 0
   Insn 486: point = 1749, n_alt = 0
   Insn 485: point = 1750, n_alt = 0
   Insn 484: point = 1752, n_alt = 0
   Insn 483: point = 1754, n_alt = 0
   Insn 482: point = 1755, n_alt = 7
   Insn 481: point = 1757, n_alt = 3
   Insn 480: point = 1758, n_alt = 3
   Insn 479: point = 1760, n_alt = 0
   Insn 478: point = 1762, n_alt = 0
   Insn 477: point = 1764, n_alt = 0
   Insn 476: point = 1765, n_alt = 0
   Insn 475: point = 1767, n_alt = 0
   Insn 474: point = 1769, n_alt = 0
   Insn 473: point = 1770, n_alt = 8
   Insn 472: point = 1771, n_alt = 2
   Insn 471: point = 1773, n_alt = 7
   Insn 470: point = 1775, n_alt = 4
   Insn 469: point = 1776, n_alt = 3
   Insn 468: point = 1778, n_alt = 0
   Insn 467: point = 1780, n_alt = 0
   Insn 466: point = 1782, n_alt = 0
   Insn 465: point = 1783, n_alt = 0
   Insn 464: point = 1785, n_alt = 0
   Insn 463: point = 1787, n_alt = 0
   Insn 462: point = 1788, n_alt = 7
   Insn 461: point = 1790, n_alt = 3
   Insn 460: point = 1791, n_alt = 3
   Insn 459: point = 1793, n_alt = 0
   Insn 458: point = 1795, n_alt = 0
   Insn 457: point = 1797, n_alt = 0
   Insn 456: point = 1798, n_alt = 0
   Insn 455: point = 1800, n_alt = 0
   Insn 454: point = 1802, n_alt = 0
  BB 32
   Insn 625: point = 1804, n_alt = 8
   Insn 624: point = 1805, n_alt = 7
   Insn 623: point = 1806, n_alt = 3
   Insn 622: point = 1807, n_alt = 3
   Insn 621: point = 1809, n_alt = 0
   Insn 620: point = 1811, n_alt = 0
   Insn 619: point = 1813, n_alt = 0
   Insn 618: point = 1814, n_alt = 0
   Insn 617: point = 1816, n_alt = 0
   Insn 616: point = 1818, n_alt = 0
   Insn 615: point = 1819, n_alt = 8
   Insn 614: point = 1820, n_alt = 7
   Insn 613: point = 1821, n_alt = 3
   Insn 612: point = 1822, n_alt = 3
   Insn 611: point = 1824, n_alt = 0
   Insn 610: point = 1826, n_alt = 0
   Insn 609: point = 1828, n_alt = 0
   Insn 608: point = 1829, n_alt = 0
   Insn 607: point = 1831, n_alt = 0
   Insn 606: point = 1833, n_alt = 0
  BB 27
   Insn 449: point = 1835, n_alt = -1
   Insn 448: point = 1835, n_alt = 1
   Insn 447: point = 1836, n_alt = 7
   Insn 446: point = 1837, n_alt = 7
   Insn 445: point = 1839, n_alt = 4
   Insn 444: point = 1840, n_alt = 3
   Insn 443: point = 1842, n_alt = 0
   Insn 442: point = 1844, n_alt = 0
   Insn 441: point = 1846, n_alt = 0
   Insn 440: point = 1847, n_alt = 0
   Insn 439: point = 1849, n_alt = 0
   Insn 438: point = 1851, n_alt = 0
  BB 25
   Insn 430: point = 1853, n_alt = 1
  BB 23
   Insn 422: point = 1854, n_alt = 1
   Insn 421: point = 1855, n_alt = 0
   Insn 420: point = 1856, n_alt = 0
  BB 51
   Insn 1653: point = 1857, n_alt = -1
  BB 12
   Insn 115: point = 1857, n_alt = -1
   Insn 114: point = 1857, n_alt = 0
   Insn 113: point = 1858, n_alt = 0
   Insn 112: point = 1860, n_alt = 0
   Insn 111: point = 1861, n_alt = 0
  BB 22
   Insn 1624: point = 1861, n_alt = -1
   Insn 414: point = 1861, n_alt = 1
  BB 52
   Insn 1656: point = 1861, n_alt = -1
  BB 14
   Insn 125: point = 1861, n_alt = -1
   Insn 124: point = 1861, n_alt = 0
   Insn 123: point = 1862, n_alt = 0
   Insn 122: point = 1864, n_alt = 0
   Insn 121: point = 1865, n_alt = 0
  BB 21
   Insn 1622: point = 1866, n_alt = -1
   Insn 408: point = 1866, n_alt = 1
  BB 53
   Insn 1659: point = 1867, n_alt = -1
  BB 16
   Insn 133: point = 1868, n_alt = -1
   Insn 132: point = 1868, n_alt = 0
   Insn 131: point = 1869, n_alt = 0
   Insn 130: point = 1871, n_alt = 0
   Insn 129: point = 1872, n_alt = 0
  BB 20
   Insn 1620: point = 1873, n_alt = -1
   Insn 402: point = 1873, n_alt = 1
  BB 19
   Insn 399: point = 1874, n_alt = 8
   Insn 398: point = 1875, n_alt = 4
   Insn 397: point = 1876, n_alt = 1
   Insn 396: point = 1878, n_alt = 3
   Insn 395: point = 1880, n_alt = 0
   Insn 394: point = 1882, n_alt = 1
   Insn 393: point = 1884, n_alt = 0
   Insn 392: point = 1885, n_alt = 0
   Insn 391: point = 1887, n_alt = 1
   Insn 390: point = 1889, n_alt = 0
   Insn 389: point = 1890, n_alt = 7
   Insn 388: point = 1892, n_alt = 0
   Insn 387: point = 1894, n_alt = 4
   Insn 386: point = 1895, n_alt = 3
   Insn 385: point = 1897, n_alt = 1
   Insn 384: point = 1899, n_alt = 0
   Insn 383: point = 1900, n_alt = 7
   Insn 382: point = 1902, n_alt = 4
   Insn 381: point = 1903, n_alt = 3
   Insn 380: point = 1905, n_alt = 0
   Insn 379: point = 1907, n_alt = 1
   Insn 378: point = 1909, n_alt = 0
   Insn 377: point = 1910, n_alt = 0
   Insn 376: point = 1912, n_alt = 1
   Insn 375: point = 1914, n_alt = 0
   Insn 374: point = 1915, n_alt = 8
   Insn 373: point = 1916, n_alt = 3
   Insn 372: point = 1917, n_alt = 1
   Insn 371: point = 1919, n_alt = 3
   Insn 370: point = 1921, n_alt = 0
   Insn 369: point = 1923, n_alt = 1
   Insn 368: point = 1925, n_alt = 0
   Insn 367: point = 1926, n_alt = 0
   Insn 366: point = 1928, n_alt = 1
   Insn 365: point = 1930, n_alt = 0
   Insn 364: point = 1931, n_alt = 1
   Insn 363: point = 1933, n_alt = 7
   Insn 362: point = 1935, n_alt = 0
   Insn 361: point = 1937, n_alt = 4
   Insn 360: point = 1938, n_alt = 3
   Insn 359: point = 1940, n_alt = 1
   Insn 358: point = 1942, n_alt = 0
   Insn 357: point = 1943, n_alt = 7
   Insn 356: point = 1945, n_alt = 0
   Insn 355: point = 1947, n_alt = 4
   Insn 354: point = 1948, n_alt = 3
   Insn 353: point = 1950, n_alt = 0
   Insn 352: point = 1952, n_alt = 1
   Insn 351: point = 1954, n_alt = 0
   Insn 350: point = 1955, n_alt = 0
   Insn 349: point = 1957, n_alt = 0
   Insn 348: point = 1959, n_alt = 1
   Insn 347: point = 1961, n_alt = 0
   Insn 346: point = 1962, n_alt = 1
   Insn 345: point = 1964, n_alt = 1
   Insn 344: point = 1966, n_alt = 0
   Insn 343: point = 1967, n_alt = 7
   Insn 342: point = 1969, n_alt = 3
   Insn 341: point = 1970, n_alt = 3
   Insn 340: point = 1972, n_alt = 0
   Insn 339: point = 1974, n_alt = 1
   Insn 338: point = 1976, n_alt = 0
   Insn 337: point = 1977, n_alt = 0
   Insn 336: point = 1979, n_alt = 1
   Insn 335: point = 1981, n_alt = 0
   Insn 334: point = 1982, n_alt = 8
   Insn 333: point = 1983, n_alt = 3
   Insn 332: point = 1984, n_alt = 1
   Insn 331: point = 1986, n_alt = 3
   Insn 330: point = 1988, n_alt = 0
   Insn 329: point = 1990, n_alt = 1
   Insn 328: point = 1992, n_alt = 0
   Insn 327: point = 1993, n_alt = 0
   Insn 326: point = 1995, n_alt = 1
   Insn 325: point = 1997, n_alt = 0
   Insn 324: point = 1998, n_alt = 1
   Insn 323: point = 2000, n_alt = 7
   Insn 322: point = 2002, n_alt = 0
   Insn 321: point = 2004, n_alt = 4
   Insn 320: point = 2005, n_alt = 3
   Insn 319: point = 2007, n_alt = 1
   Insn 318: point = 2009, n_alt = 0
   Insn 317: point = 2010, n_alt = 7
   Insn 316: point = 2012, n_alt = 0
   Insn 315: point = 2014, n_alt = 4
   Insn 314: point = 2015, n_alt = 3
   Insn 313: point = 2017, n_alt = 0
   Insn 312: point = 2019, n_alt = 1
   Insn 311: point = 2021, n_alt = 0
   Insn 310: point = 2022, n_alt = 0
   Insn 309: point = 2024, n_alt = 0
   Insn 308: point = 2026, n_alt = 1
   Insn 307: point = 2028, n_alt = 0
   Insn 306: point = 2029, n_alt = 1
   Insn 305: point = 2031, n_alt = 1
   Insn 304: point = 2033, n_alt = 0
   Insn 303: point = 2034, n_alt = 7
   Insn 302: point = 2036, n_alt = 3
   Insn 301: point = 2037, n_alt = 3
   Insn 300: point = 2039, n_alt = 0
   Insn 299: point = 2041, n_alt = 1
   Insn 298: point = 2043, n_alt = 0
   Insn 297: point = 2044, n_alt = 0
   Insn 296: point = 2046, n_alt = 1
   Insn 295: point = 2048, n_alt = 0
  BB 18
   Insn 290: point = 2050, n_alt = -1
   Insn 289: point = 2050, n_alt = 1
   Insn 288: point = 2051, n_alt = 7
  BB 17
   Insn 283: point = 2053, n_alt = -1
   Insn 282: point = 2053, n_alt = 1
   Insn 281: point = 2054, n_alt = 2
   Insn 280: point = 2056, n_alt = 7
   Insn 279: point = 2057, n_alt = 7
   Insn 278: point = 2058, n_alt = 8
   Insn 277: point = 2059, n_alt = 1
   Insn 276: point = 2061, n_alt = 7
   Insn 275: point = 2063, n_alt = 4
   Insn 1679: point = 2064, n_alt = -2
	Hard reg 22 is preferable by r1420 with profit 1000
   Insn 274: point = 2066, n_alt = 1
   Insn 1678: point = 2066, n_alt = -2
	Hard reg 22 is preferable by r1420 with profit 1000
	Hard reg 21 is preferable by r1420 with profit 1000
   Insn 273: point = 2068, n_alt = 7
   Insn 272: point = 2070, n_alt = 0
   Insn 271: point = 2072, n_alt = 4
   Insn 270: point = 2073, n_alt = 3
   Insn 269: point = 2075, n_alt = 1
   Insn 268: point = 2077, n_alt = 0
   Insn 267: point = 2078, n_alt = 8
   Insn 266: point = 2079, n_alt = 1
   Insn 265: point = 2081, n_alt = 7
   Insn 264: point = 2083, n_alt = 4
   Insn 1677: point = 2084, n_alt = -2
	Hard reg 22 is preferable by r1419 with profit 1000
   Insn 263: point = 2086, n_alt = 1
   Insn 1676: point = 2086, n_alt = -2
	Hard reg 22 is preferable by r1419 with profit 1000
	Hard reg 21 is preferable by r1419 with profit 1000
   Insn 262: point = 2088, n_alt = 7
   Insn 261: point = 2090, n_alt = 0
   Insn 260: point = 2092, n_alt = 4
   Insn 259: point = 2093, n_alt = 3
   Insn 258: point = 2095, n_alt = 1
   Insn 257: point = 2097, n_alt = 0
   Insn 256: point = 2099, n_alt = 0
   Insn 255: point = 2101, n_alt = 4
   Insn 254: point = 2102, n_alt = 3
   Insn 253: point = 2104, n_alt = 0
   Insn 252: point = 2106, n_alt = 1
   Insn 251: point = 2108, n_alt = 0
   Insn 250: point = 2109, n_alt = 0
   Insn 249: point = 2111, n_alt = 1
   Insn 248: point = 2113, n_alt = 0
   Insn 247: point = 2114, n_alt = 8
   Insn 246: point = 2115, n_alt = 1
   Insn 245: point = 2117, n_alt = 7
   Insn 244: point = 2118, n_alt = -2
   Insn 243: point = 2120, n_alt = 1
   Insn 242: point = 2122, n_alt = 1
   Insn 241: point = 2124, n_alt = 7
   Insn 240: point = 2126, n_alt = 0
   Insn 239: point = 2128, n_alt = 4
   Insn 238: point = 2129, n_alt = 3
   Insn 237: point = 2131, n_alt = 0
   Insn 236: point = 2133, n_alt = 1
   Insn 235: point = 2135, n_alt = 0
   Insn 234: point = 2136, n_alt = 0
   Insn 233: point = 2138, n_alt = 1
   Insn 232: point = 2140, n_alt = 0
   Insn 231: point = 2142, n_alt = 0
   Insn 230: point = 2143, n_alt = 7
   Insn 229: point = 2145, n_alt = 4
   Insn 228: point = 2146, n_alt = 3
   Insn 227: point = 2148, n_alt = 0
   Insn 226: point = 2150, n_alt = 1
   Insn 225: point = 2152, n_alt = 0
   Insn 224: point = 2153, n_alt = 0
   Insn 223: point = 2155, n_alt = 1
   Insn 222: point = 2157, n_alt = 0
   Insn 221: point = 2159, n_alt = 0
   Insn 220: point = 2160, n_alt = 1
   Insn 219: point = 2162, n_alt = 1
   Insn 218: point = 2164, n_alt = 7
   Insn 217: point = 2166, n_alt = 0
   Insn 216: point = 2168, n_alt = 4
   Insn 215: point = 2169, n_alt = 3
   Insn 214: point = 2171, n_alt = 0
   Insn 213: point = 2173, n_alt = 1
   Insn 212: point = 2175, n_alt = 0
   Insn 211: point = 2176, n_alt = 0
   Insn 210: point = 2178, n_alt = 1
   Insn 209: point = 2180, n_alt = 0
   Insn 208: point = 2182, n_alt = 0
   Insn 207: point = 2183, n_alt = 7
   Insn 206: point = 2185, n_alt = 4
   Insn 205: point = 2186, n_alt = 3
   Insn 204: point = 2188, n_alt = 0
   Insn 203: point = 2190, n_alt = 1
   Insn 202: point = 2192, n_alt = 0
   Insn 201: point = 2193, n_alt = 0
   Insn 200: point = 2195, n_alt = 1
   Insn 199: point = 2197, n_alt = 0
   Insn 198: point = 2199, n_alt = 0
   Insn 197: point = 2200, n_alt = 1
   Insn 196: point = 2202, n_alt = 1
   Insn 195: point = 2204, n_alt = 7
   Insn 194: point = 2206, n_alt = 0
   Insn 193: point = 2208, n_alt = 4
   Insn 192: point = 2209, n_alt = 3
   Insn 191: point = 2211, n_alt = 0
   Insn 190: point = 2213, n_alt = 1
   Insn 189: point = 2215, n_alt = 0
   Insn 188: point = 2216, n_alt = 0
   Insn 187: point = 2218, n_alt = 1
   Insn 186: point = 2220, n_alt = 0
   Insn 185: point = 2221, n_alt = 7
   Insn 184: point = 2223, n_alt = 4
   Insn 183: point = 2224, n_alt = 3
   Insn 182: point = 2226, n_alt = 0
   Insn 181: point = 2228, n_alt = 1
   Insn 180: point = 2230, n_alt = 0
   Insn 179: point = 2231, n_alt = 0
   Insn 178: point = 2233, n_alt = 1
   Insn 177: point = 2235, n_alt = 0
   Insn 176: point = 2236, n_alt = 1
   Insn 175: point = 2238, n_alt = 7
   Insn 174: point = 2240, n_alt = 0
   Insn 173: point = 2242, n_alt = 4
   Insn 172: point = 2243, n_alt = 3
   Insn 171: point = 2245, n_alt = 0
   Insn 170: point = 2247, n_alt = 1
   Insn 169: point = 2249, n_alt = 0
   Insn 168: point = 2250, n_alt = 0
   Insn 167: point = 2252, n_alt = 1
   Insn 166: point = 2254, n_alt = 0
   Insn 165: point = 2255, n_alt = 7
   Insn 164: point = 2257, n_alt = 4
   Insn 163: point = 2258, n_alt = 3
   Insn 162: point = 2260, n_alt = 0
   Insn 161: point = 2262, n_alt = 1
   Insn 160: point = 2264, n_alt = 0
   Insn 159: point = 2265, n_alt = 0
   Insn 158: point = 2267, n_alt = 1
   Insn 157: point = 2269, n_alt = 0
   Insn 156: point = 2270, n_alt = 1
   Insn 155: point = 2271, n_alt = 0
   Insn 154: point = 2273, n_alt = 0
   Insn 150: point = 2274, n_alt = 0
   Insn 149: point = 2276, n_alt = 0
   Insn 148: point = 2278, n_alt = 0
   Insn 147: point = 2280, n_alt = 1
   Insn 146: point = 2282, n_alt = 0
   Insn 145: point = 2283, n_alt = 1
   Insn 144: point = 2284, n_alt = 0
   Insn 143: point = 2286, n_alt = 0
   Insn 139: point = 2287, n_alt = 0
   Insn 138: point = 2289, n_alt = 0
   Insn 137: point = 2291, n_alt = 0
   Insn 136: point = 2293, n_alt = 1
   Insn 135: point = 2295, n_alt = 0
  BB 15
   Insn 127: point = 2297, n_alt = 1
  BB 13
   Insn 119: point = 2298, n_alt = 1
   Insn 118: point = 2299, n_alt = 0
   Insn 117: point = 2300, n_alt = 0
  BB 11
   Insn 109: point = 2301, n_alt = 1
  BB 50
   Insn 1650: point = 2301, n_alt = -1
  BB 9
   Insn 90: point = 2301, n_alt = -1
   Insn 89: point = 2301, n_alt = 0
   Insn 88: point = 2302, n_alt = 0
   Insn 87: point = 2304, n_alt = 0
   Insn 86: point = 2305, n_alt = 0
  BB 10
   Insn 1618: point = 2305, n_alt = -1
   Insn 103: point = 2305, n_alt = 1
   Insn 102: point = 2305, n_alt = 0
   Insn 101: point = 2305, n_alt = 3
   Insn 100: point = 2305, n_alt = -2
   Insn 99: point = 2306, n_alt = 0
   Insn 98: point = 2308, n_alt = 4
   Insn 97: point = 2309, n_alt = 1
   Insn 96: point = 2311, n_alt = 0
   Insn 95: point = 2313, n_alt = 1
   Insn 94: point = 2315, n_alt = 0
   Insn 93: point = 2317, n_alt = 0
   Insn 92: point = 2319, n_alt = 0
  BB 8
   Insn 84: point = 2320, n_alt = 1
   Insn 83: point = 2320, n_alt = 0
   Insn 82: point = 2320, n_alt = 3
   Insn 81: point = 2320, n_alt = 4
   Insn 80: point = 2320, n_alt = 0
   Insn 79: point = 2320, n_alt = 3
   Insn 78: point = 2320, n_alt = 4
  BB 48
   Insn 1644: point = 2320, n_alt = -1
  BB 3
   Insn 16: point = 2320, n_alt = -1
   Insn 15: point = 2320, n_alt = 0
   Insn 14: point = 2321, n_alt = 0
   Insn 13: point = 2323, n_alt = 0
   Insn 12: point = 2324, n_alt = 0
  BB 7
   Insn 1616: point = 2325, n_alt = -1
   Insn 72: point = 2325, n_alt = 1
  BB 49
   Insn 1647: point = 2326, n_alt = -1
  BB 5
   Insn 24: point = 2327, n_alt = -1
   Insn 23: point = 2327, n_alt = 0
   Insn 22: point = 2328, n_alt = 0
   Insn 21: point = 2330, n_alt = 0
   Insn 20: point = 2331, n_alt = 0
  BB 6
   Insn 1614: point = 2332, n_alt = -1
   Insn 66: point = 2332, n_alt = 1
   Insn 65: point = 2332, n_alt = 8
   Insn 64: point = 2333, n_alt = 7
   Insn 63: point = 2334, n_alt = 4
   Insn 62: point = 2335, n_alt = 3
   Insn 61: point = 2337, n_alt = 0
   Insn 60: point = 2339, n_alt = 1
   Insn 59: point = 2341, n_alt = 0
   Insn 58: point = 2342, n_alt = 0
   Insn 57: point = 2344, n_alt = 1
   Insn 56: point = 2346, n_alt = 0
   Insn 55: point = 2347, n_alt = 8
   Insn 54: point = 2348, n_alt = 7
   Insn 53: point = 2349, n_alt = 3
   Insn 52: point = 2350, n_alt = 3
   Insn 51: point = 2352, n_alt = 0
   Insn 50: point = 2354, n_alt = 1
   Insn 49: point = 2356, n_alt = 0
   Insn 48: point = 2357, n_alt = 0
   Insn 47: point = 2359, n_alt = 1
   Insn 46: point = 2361, n_alt = 0
   Insn 45: point = 2362, n_alt = 8
   Insn 44: point = 2363, n_alt = 7
   Insn 43: point = 2364, n_alt = 3
   Insn 42: point = 2365, n_alt = 3
   Insn 41: point = 2367, n_alt = 0
   Insn 40: point = 2369, n_alt = 1
   Insn 39: point = 2371, n_alt = 0
   Insn 38: point = 2372, n_alt = 0
   Insn 37: point = 2374, n_alt = 1
   Insn 36: point = 2376, n_alt = 0
   Insn 35: point = 2377, n_alt = 8
   Insn 34: point = 2378, n_alt = 7
   Insn 33: point = 2379, n_alt = 3
   Insn 32: point = 2380, n_alt = 3
   Insn 31: point = 2382, n_alt = 0
   Insn 30: point = 2384, n_alt = 1
   Insn 29: point = 2386, n_alt = 0
   Insn 28: point = 2387, n_alt = 0
   Insn 27: point = 2389, n_alt = 1
   Insn 26: point = 2391, n_alt = 0
  BB 4
   Insn 18: point = 2393, n_alt = 1
  BB 2
   Insn 10: point = 2394, n_alt = 1
   Insn 9: point = 2395, n_alt = 0
   Insn 8: point = 2396, n_alt = 0
   Insn 4: point = 2397, n_alt = 5
   Insn 3: point = 2397, n_alt = 5
   Insn 2: point = 2397, n_alt = 5
 r87: [2388..2389]
 r88: [2383..2387]
 r89: [2383..2384]
 r90: [2381..2382]
 r91: [2377..2380]
 r92: [2373..2374]
 r93: [2368..2372]
 r94: [2368..2369]
 r95: [2366..2367]
 r96: [2362..2365]
 r97: [2358..2359]
 r98: [2353..2357]
 r99: [2353..2354]
 r100: [2351..2352]
 r101: [2347..2350]
 r102: [2343..2344]
 r103: [2338..2342]
 r104: [2338..2339]
 r105: [2336..2337]
 r106: [2332..2335]
 r107: [2316..2317]
 r108: [2314..2315]
 r109: [2312..2313]
 r110: [2305..2306]
 r111: [2292..2293]
 r112: [2290..2291]
 r113: [2285..2287]
 r114: [2279..2280]
 r115: [2277..2278]
 r116: [2272..2274]
 r117: [2266..2267]
 r118: [2261..2265]
 r119: [2261..2262]
 r120: [2259..2260]
 r121: [2256..2258]
 r122: [2237..2255]
 r123: [2251..2252]
 r124: [2246..2250]
 r125: [2246..2247]
 r126: [2244..2245]
 r127: [2241..2243]
 r128: [2237..2238]
 r129: [2201..2236]
 r130: [2232..2233]
 r131: [2227..2231]
 r132: [2227..2228]
 r133: [2225..2226]
 r134: [2222..2224]
 r135: [2203..2221]
 r136: [2217..2218]
 r137: [2212..2216]
 r138: [2212..2213]
 r139: [2210..2211]
 r140: [2207..2209]
 r141: [2203..2204]
 r142: [2201..2202]
 r143: [2161..2200]
 r144: [2196..2197]
 r145: [2194..2195]
 r146: [2189..2193]
 r147: [2189..2190]
 r148: [2187..2188]
 r149: [2184..2186]
 r150: [2163..2183]
 r151: [2179..2180]
 r152: [2177..2178]
 r153: [2172..2176]
 r154: [2172..2173]
 r155: [2170..2171]
 r156: [2167..2169]
 r157: [2163..2164]
 r158: [2161..2162]
 r159: [2121..2160]
 r160: [2156..2157]
 r161: [2154..2155]
 r162: [2149..2153]
 r163: [2149..2150]
 r164: [2147..2148]
 r165: [2144..2146]
 r166: [2123..2143]
 r167: [2139..2140]
 r168: [2137..2138]
 r169: [2132..2136]
 r170: [2132..2133]
 r171: [2130..2131]
 r172: [2127..2129]
 r173: [2123..2124]
 r174: [2121..2122]
 r175: [2119..2120]
 r176: [2116..2118]
 r177: [2110..2111]
 r178: [2105..2109]
 r179: [2105..2106]
 r180: [2103..2104]
 r181: [2100..2102]
 r182: [2096..2097]
 r183: [2094..2095]
 r184: [2091..2093]
 r185: [2087..2088]
 r186: [2080..2084]
 r187: [2080..2081]
 r188: [2074..2075]
 r189: [2071..2073]
 r190: [2067..2068]
 r191: [2060..2064]
 r192: [2060..2061]
 r193: [2053..2054]
 r194: [2045..2046]
 r195: [2040..2044]
 r196: [2040..2041]
 r197: [2038..2039]
 r198: [2035..2037]
 r199: [1985..2034]
 r200: [2030..2031]
 r201: [2023..2029]
 r202: [2025..2026]
 r203: [2023..2024]
 r204: [2018..2022]
 r205: [2018..2019]
 r206: [2016..2017]
 r207: [2013..2015]
 r208: [1999..2010]
 r209: [2006..2007]
 r210: [2003..2005]
 r211: [1999..2000]
 r212: [1985..1998]
 r213: [1994..1995]
 r214: [1989..1993]
 r215: [1989..1990]
 r216: [1987..1988]
 r217: [1982..1986]
 r218: [1982..1984]
 r219: [1978..1979]
 r220: [1973..1977]
 r221: [1973..1974]
 r222: [1971..1972]
 r223: [1968..1970]
 r224: [1918..1967]
 r225: [1963..1964]
 r226: [1956..1962]
 r227: [1958..1959]
 r228: [1956..1957]
 r229: [1951..1955]
 r230: [1951..1952]
 r231: [1949..1950]
 r232: [1946..1948]
 r233: [1932..1943]
 r234: [1939..1940]
 r235: [1936..1938]
 r236: [1932..1933]
 r237: [1918..1931]
 r238: [1927..1928]
 r239: [1922..1926]
 r240: [1922..1923]
 r241: [1920..1921]
 r242: [1915..1919]
 r243: [1915..1917]
 r244: [1911..1912]
 r245: [1906..1910]
 r246: [1906..1907]
 r247: [1904..1905]
 r248: [1901..1903]
 r249: [1877..1900]
 r250: [1896..1897]
 r251: [1893..1895]
 r252: [1877..1890]
 r253: [1886..1887]
 r254: [1881..1885]
 r255: [1881..1882]
 r256: [1879..1880]
 r257: [1874..1878]
 r258: [1874..1876]
 r259: [1848..1849]
 r260: [1843..1847]
 r261: [1843..1844]
 r262: [1841..1842]
 r263: [1838..1840]
 r264: [1835..1837]
 r265: [1799..1800]
 r266: [1794..1798]
 r267: [1794..1795]
 r268: [1792..1793]
 r269: [1789..1791]
 r270: [1772..1788]
 r271: [1784..1785]
 r272: [1779..1783]
 r273: [1779..1780]
 r274: [1777..1778]
 r275: [1774..1776]
 r276: [1772..1773]
 r277: [1766..1767]
 r278: [1761..1765]
 r279: [1761..1762]
 r280: [1759..1760]
 r281: [1756..1758]
 r282: [1739..1755]
 r283: [1751..1752]
 r284: [1746..1750]
 r285: [1746..1747]
 r286: [1744..1745]
 r287: [1741..1743]
 r288: [1739..1740]
 r289: [1728..1732]
 r290: [1728..1729]
 r291: [1726..1727]
 r292: [1667..1668]
 r294: [1660..1661]
 r295: [1656..1659]
 r296: [1650..1651]
 r298: [1643..1644]
 r299: [1639..1642]
 r300: [1715..1716]
 r302: [1708..1709]
 r303: [1704..1707]
 r304: [1698..1699]
 r306: [1691..1692]
 r307: [1687..1690]
 r308: [1621..1622]
 r309: [1616..1620]
 r310: [1616..1617]
 r311: [1614..1615]
 r312: [1610..1613]
 r313: [1606..1607]
 r314: [1601..1605]
 r315: [1601..1602]
 r316: [1599..1600]
 r317: [1595..1598]
 r318: [1830..1831]
 r319: [1825..1829]
 r320: [1825..1826]
 r321: [1823..1824]
 r322: [1819..1822]
 r323: [1815..1816]
 r324: [1810..1814]
 r325: [1810..1811]
 r326: [1808..1809]
 r327: [1804..1807]
 r328: [1573..1574]
 r329: [1571..1572]
 r330: [1566..1568]
 r331: [1560..1561]
 r332: [1558..1559]
 r333: [1553..1555]
 r334: [1547..1548]
 r335: [1540..1546]
 r336: [1542..1543]
 r337: [1540..1541]
 r338: [1535..1539]
 r339: [1535..1536]
 r340: [1533..1534]
 r341: [1530..1532]
 r342: [1500..1527]
 r343: [1523..1524]
 r344: [1521..1522]
 r345: [1514..1520]
 r346: [1516..1517]
 r347: [1514..1515]
 r348: [1509..1513]
 r349: [1509..1510]
 r350: [1507..1508]
 r351: [1504..1506]
 r352: [1500..1501]
 r353: [1474..1499]
 r354: [1495..1496]
 r355: [1488..1494]
 r356: [1490..1491]
 r357: [1488..1489]
 r358: [1483..1487]
 r359: [1483..1484]
 r360: [1481..1482]
 r361: [1478..1480]
 r362: [1474..1475]
 r363: [1446..1473]
 r364: [1469..1470]
 r365: [1467..1468]
 r366: [1460..1466]
 r367: [1462..1463]
 r368: [1460..1461]
 r369: [1455..1459]
 r370: [1455..1456]
 r371: [1453..1454]
 r372: [1450..1452]
 r373: [1446..1447]
 r374: [1418..1445]
 r375: [1441..1442]
 r376: [1432..1440]
 r377: [1436..1437]
 r378: [1434..1435]
 r379: [1432..1433]
 r380: [1427..1431]
 r381: [1427..1428]
 r382: [1425..1426]
 r383: [1422..1424]
 r384: [1418..1419]
 r385: [1388..1417]
 r386: [1413..1414]
 r387: [1411..1412]
 r388: [1402..1410]
 r389: [1406..1407]
 r390: [1404..1405]
 r391: [1402..1403]
 r392: [1397..1401]
 r393: [1397..1398]
 r394: [1395..1396]
 r395: [1392..1394]
 r396: [1388..1389]
 r397: [1360..1387]
 r398: [1383..1384]
 r399: [1374..1382]
 r400: [1378..1379]
 r401: [1376..1377]
 r402: [1374..1375]
 r403: [1369..1373]
 r404: [1369..1370]
 r405: [1367..1368]
 r406: [1364..1366]
 r407: [1360..1361]
 r408: [1330..1359]
 r409: [1355..1356]
 r410: [1353..1354]
 r411: [1344..1352]
 r412: [1348..1349]
 r413: [1346..1347]
 r414: [1344..1345]
 r415: [1339..1343]
 r416: [1339..1340]
 r417: [1337..1338]
 r418: [1334..1336]
 r419: [1330..1331]
 r420: [1328..1329]
 r421: [1325..1327]
 r422: [1319..1320]
 r423: [1314..1318]
 r424: [1314..1315]
 r425: [1312..1313]
 r426: [1309..1311]
 r427: [1305..1306]
 r428: [1303..1304]
 r429: [1301..1302]
 r430: [1294..1300]
 r431: [1296..1297]
 r432: [1294..1295]
 r433: [1289..1293]
 r434: [1289..1290]
 r435: [1287..1288]
 r436: [1284..1286]
 r437: [1238..1281]
 r438: [1277..1278]
 r439: [1272..1276]
 r440: [1272..1273]
 r441: [1270..1271]
 r442: [1267..1269]
 r443: [1263..1264]
 r444: [1261..1262]
 r445: [1259..1260]
 r446: [1252..1258]
 r447: [1254..1255]
 r448: [1252..1253]
 r449: [1247..1251]
 r450: [1247..1248]
 r451: [1245..1246]
 r452: [1242..1244]
 r453: [1238..1239]
 r454: [1192..1237]
 r455: [1233..1234]
 r456: [1228..1232]
 r457: [1228..1229]
 r458: [1226..1227]
 r459: [1223..1225]
 r460: [1219..1220]
 r461: [1217..1218]
 r462: [1215..1216]
 r463: [1206..1214]
 r464: [1210..1211]
 r465: [1208..1209]
 r466: [1206..1207]
 r467: [1201..1205]
 r468: [1201..1202]
 r469: [1199..1200]
 r470: [1196..1198]
 r471: [1192..1193]
 r472: [1146..1191]
 r473: [1187..1188]
 r474: [1182..1186]
 r475: [1182..1183]
 r476: [1180..1181]
 r477: [1177..1179]
 r478: [1173..1174]
 r479: [1171..1172]
 r480: [1169..1170]
 r481: [1160..1168]
 r482: [1164..1165]
 r483: [1162..1163]
 r484: [1160..1161]
 r485: [1155..1159]
 r486: [1155..1156]
 r487: [1153..1154]
 r488: [1150..1152]
 r489: [1146..1147]
 r490: [1144..1145]
 r491: [1141..1143]
 r492: [1128..1129]
 r493: [1123..1127]
 r494: [1123..1124]
 r495: [1121..1122]
 r496: [1118..1120]
 r497: [1114..1115]
 r498: [1109..1110]
 r499: [1107..1108]
 r500: [1100..1106]
 r501: [1102..1103]
 r502: [1100..1101]
 r503: [1095..1099]
 r504: [1095..1096]
 r505: [1093..1094]
 r506: [1090..1092]
 r507: [1060..1087]
 r508: [1083..1084]
 r509: [1081..1082]
 r510: [1074..1080]
 r511: [1076..1077]
 r512: [1074..1075]
 r513: [1069..1073]
 r514: [1069..1070]
 r515: [1067..1068]
 r516: [1064..1066]
 r517: [1060..1061]
 r518: [1032..1059]
 r519: [1055..1056]
 r520: [1053..1054]
 r521: [1046..1052]
 r522: [1048..1049]
 r523: [1046..1047]
 r524: [1041..1045]
 r525: [1041..1042]
 r526: [1039..1040]
 r527: [1036..1038]
 r528: [1032..1033]
 r529: [1004..1031]
 r530: [1027..1028]
 r531: [1025..1026]
 r532: [1018..1024]
 r533: [1020..1021]
 r534: [1018..1019]
 r535: [1013..1017]
 r536: [1013..1014]
 r537: [1011..1012]
 r538: [1008..1010]
 r539: [1004..1005]
 r540: [974..1003]
 r541: [999..1000]
 r542: [997..998]
 r543: [988..996]
 r544: [992..993]
 r545: [990..991]
 r546: [988..989]
 r547: [983..987]
 r548: [983..984]
 r549: [981..982]
 r550: [978..980]
 r551: [974..975]
 r552: [944..973]
 r553: [969..970]
 r554: [967..968]
 r555: [958..966]
 r556: [962..963]
 r557: [960..961]
 r558: [958..959]
 r559: [953..957]
 r560: [953..954]
 r561: [951..952]
 r562: [948..950]
 r563: [944..945]
 r564: [914..943]
 r565: [939..940]
 r566: [937..938]
 r567: [928..936]
 r568: [932..933]
 r569: [930..931]
 r570: [928..929]
 r571: [923..927]
 r572: [923..924]
 r573: [921..922]
 r574: [918..920]
 r575: [914..915]
 r576: [884..913]
 r577: [909..910]
 r578: [907..908]
 r579: [898..906]
 r580: [902..903]
 r581: [900..901]
 r582: [898..899]
 r583: [893..897]
 r584: [893..894]
 r585: [891..892]
 r586: [888..890]
 r587: [884..885]
 r588: [882..883]
 r589: [879..881]
 r590: [873..874]
 r591: [871..872]
 r592: [864..870]
 r593: [866..867]
 r594: [864..865]
 r595: [859..863]
 r596: [859..860]
 r597: [857..858]
 r598: [854..856]
 r599: [826..851]
 r600: [847..848]
 r601: [840..846]
 r602: [842..843]
 r603: [840..841]
 r604: [835..839]
 r605: [835..836]
 r606: [833..834]
 r607: [830..832]
 r608: [826..827]
 r609: [798..825]
 r610: [821..822]
 r611: [819..820]
 r612: [812..818]
 r613: [814..815]
 r614: [812..813]
 r615: [807..811]
 r616: [807..808]
 r617: [805..806]
 r618: [802..804]
 r619: [798..799]
 r620: [772..797]
 r621: [793..794]
 r622: [786..792]
 r623: [788..789]
 r624: [786..787]
 r625: [781..785]
 r626: [781..782]
 r627: [779..780]
 r628: [776..778]
 r629: [772..773]
 r630: [742..771]
 r631: [767..768]
 r632: [765..766]
 r633: [756..764]
 r634: [760..761]
 r635: [758..759]
 r636: [756..757]
 r637: [751..755]
 r638: [751..752]
 r639: [749..750]
 r640: [746..748]
 r641: [742..743]
 r642: [714..741]
 r643: [737..738]
 r644: [728..736]
 r645: [732..733]
 r646: [730..731]
 r647: [728..729]
 r648: [723..727]
 r649: [723..724]
 r650: [721..722]
 r651: [718..720]
 r652: [714..715]
 r653: [684..713]
 r654: [709..710]
 r655: [707..708]
 r656: [698..706]
 r657: [702..703]
 r658: [700..701]
 r659: [698..699]
 r660: [693..697]
 r661: [693..694]
 r662: [691..692]
 r663: [688..690]
 r664: [684..685]
 r665: [656..683]
 r666: [679..680]
 r667: [670..678]
 r668: [674..675]
 r669: [672..673]
 r670: [670..671]
 r671: [665..669]
 r672: [665..666]
 r673: [663..664]
 r674: [660..662]
 r675: [656..657]
 r676: [654..655]
 r677: [651..653]
 r678: [645..646]
 r679: [638..644]
 r680: [640..641]
 r681: [638..639]
 r682: [633..637]
 r683: [633..634]
 r684: [631..632]
 r685: [628..630]
 r686: [600..625]
 r687: [621..622]
 r688: [614..620]
 r689: [616..617]
 r690: [614..615]
 r691: [609..613]
 r692: [609..610]
 r693: [607..608]
 r694: [604..606]
 r695: [600..601]
 r696: [572..599]
 r697: [595..596]
 r698: [586..594]
 r699: [590..591]
 r700: [588..589]
 r701: [586..587]
 r702: [581..585]
 r703: [581..582]
 r704: [579..580]
 r705: [576..578]
 r706: [572..573]
 r707: [544..571]
 r708: [567..568]
 r709: [558..566]
 r710: [562..563]
 r711: [560..561]
 r712: [558..559]
 r713: [553..557]
 r714: [553..554]
 r715: [551..552]
 r716: [548..550]
 r717: [544..545]
 r718: [542..543]
 r719: [424..541]
 r720: [537..538]
 r721: [535..536]
 r722: [528..534]
 r723: [530..531]
 r724: [528..529]
 r725: [523..527]
 r726: [523..524]
 r727: [521..522]
 r728: [518..520]
 r729: [488..515]
 r730: [511..512]
 r731: [509..510]
 r732: [502..508]
 r733: [504..505]
 r734: [502..503]
 r735: [497..501]
 r736: [497..498]
 r737: [495..496]
 r738: [492..494]
 r739: [488..489]
 r740: [458..487]
 r741: [483..484]
 r742: [481..482]
 r743: [472..480]
 r744: [476..477]
 r745: [474..475]
 r746: [472..473]
 r747: [467..471]
 r748: [467..468]
 r749: [465..466]
 r750: [462..464]
 r751: [458..459]
 r752: [428..457]
 r753: [453..454]
 r754: [451..452]
 r755: [442..450]
 r756: [446..447]
 r757: [444..445]
 r758: [442..443]
 r759: [437..441]
 r760: [437..438]
 r761: [435..436]
 r762: [432..434]
 r763: [428..429]
 r764: [426..427]
 r765: [422..425]
 r766: [419..420]
 r767: [416..418]
 r768: [402..403]
 r769: [400..401]
 r770: [393..399]
 r771: [395..396]
 r772: [393..394]
 r773: [388..392]
 r774: [388..389]
 r775: [386..387]
 r776: [383..385]
 r777: [355..380]
 r778: [376..377]
 r779: [369..375]
 r780: [371..372]
 r781: [369..370]
 r782: [364..368]
 r783: [364..365]
 r784: [362..363]
 r785: [359..361]
 r786: [355..356]
 r787: [349..350]
 r788: [342..348]
 r789: [344..345]
 r790: [342..343]
 r791: [337..341]
 r792: [337..338]
 r793: [335..336]
 r794: [332..334]
 r795: [302..329]
 r796: [325..326]
 r797: [323..324]
 r798: [316..322]
 r799: [318..319]
 r800: [316..317]
 r801: [311..315]
 r802: [311..312]
 r803: [309..310]
 r804: [306..308]
 r805: [302..303]
 r806: [296..297]
 r807: [294..295]
 r808: [287..293]
 r809: [289..290]
 r810: [287..288]
 r811: [282..286]
 r812: [282..283]
 r813: [280..281]
 r814: [277..279]
 r815: [249..274]
 r816: [270..271]
 r817: [263..269]
 r818: [265..266]
 r819: [263..264]
 r820: [258..262]
 r821: [258..259]
 r822: [256..257]
 r823: [253..255]
 r824: [249..250]
 r825: [243..244]
 r826: [236..242]
 r827: [238..239]
 r828: [236..237]
 r829: [231..235]
 r830: [231..232]
 r831: [229..230]
 r832: [226..228]
 r833: [196..223]
 r834: [219..220]
 r835: [217..218]
 r836: [210..216]
 r837: [212..213]
 r838: [210..211]
 r839: [205..209]
 r840: [205..206]
 r841: [203..204]
 r842: [200..202]
 r843: [196..197]
 r844: [190..191]
 r845: [183..189]
 r846: [185..186]
 r847: [183..184]
 r848: [178..182]
 r849: [178..179]
 r850: [176..177]
 r851: [173..175]
 r852: [154..170]
 r853: [166..167]
 r854: [161..165]
 r855: [161..162]
 r856: [159..160]
 r857: [156..158]
 r858: [154..155]
 r859: [152..153]
 r860: [130..151]
 r861: [147..148]
 r862: [145..146]
 r863: [134..142]
 r864: [138..139]
 r865: [136..137]
 r866: [134..135]
 r867: [132..133]
 r868: [130..131]
 r869: [63..129]
 r870: [125..126]
 r871: [118..124]
 r872: [120..121]
 r873: [118..119]
 r874: [113..117]
 r875: [113..114]
 r876: [111..112]
 r877: [108..110]
 r878: [89..105]
 r879: [101..102]
 r880: [96..100]
 r881: [96..97]
 r882: [94..95]
 r883: [91..93]
 r884: [89..90]
 r885: [87..88]
 r886: [65..86]
 r887: [82..83]
 r888: [80..81]
 r889: [69..77]
 r890: [73..74]
 r891: [71..72]
 r892: [69..70]
 r893: [67..68]
 r894: [65..66]
 r895: [63..64]
 r896: [61..62]
 r897: [59..60]
 r898: [52..58]
 r899: [54..55]
 r900: [50..53]
 r901: [20..48]
 r902: [44..45]
 r903: [39..43]
 r904: [39..40]
 r905: [37..38]
 r906: [34..36]
 r907: [20..33]
 r908: [29..30]
 r909: [24..28]
 r910: [24..25]
 r911: [22..23]
 r912: [17..21]
 r913: [17..19]
 r914: [2394..2396]
 r915: [2320..2395]
 r916: [2320..2321]
 r917: [2327..2328]
 r918: [2301..2302]
 r919: [1857..1858]
 r920: [2298..2300]
 r921: [1861..2299]
 r922: [1861..1862]
 r923: [1868..1869]
 r924: [1854..1856]
 r925: [1582..1855]
 r926: [1582..1583]
 r927: [1589..1590]
 r928: [0..1]
 r929: [1579..1581]
 r930: [4..1580]
 r931: [4..5]
 r932: [11..12]
 r933: [2322..2323]
 r934: [2329..2330]
 r935: [2390..2391]
 r936: [2385..2386]
 r937: [2377..2379]
 r938: [2377..2378]
 r939: [2375..2376]
 r940: [2370..2371]
 r941: [2362..2364]
 r942: [2362..2363]
 r943: [2360..2361]
 r944: [2355..2356]
 r945: [2347..2349]
 r946: [2347..2348]
 r947: [2345..2346]
 r948: [2340..2341]
 r949: [2332..2334]
 r950: [2332..2333]
 r951: [2303..2304]
 r952: [2318..2319]
 r953: [2310..2311]
 r954: [2307..2309]
 r955: [2307..2308]
 r956: [1859..1860]
 r957: [1863..1864]
 r958: [1870..1871]
 r959: [2294..2295]
 r960: [2288..2289]
 r963: [2283..2284]
 r964: [2285..2286]
 r965: [2281..2282]
 r966: [2275..2276]
 r969: [2270..2271]
 r970: [2272..2273]
 r971: [2268..2269]
 r972: [2263..2264]
 r973: [2256..2257]
 r974: [2253..2254]
 r975: [2248..2249]
 r976: [2239..2242]
 r977: [2239..2240]
 r978: [2234..2235]
 r979: [2229..2230]
 r980: [2222..2223]
 r981: [2219..2220]
 r982: [2214..2215]
 r983: [2205..2208]
 r984: [2205..2206]
 r985: [2198..2199]
 r986: [2191..2192]
 r987: [2184..2185]
 r988: [2181..2182]
 r989: [2174..2175]
 r990: [2165..2168]
 r991: [2165..2166]
 r992: [2158..2159]
 r993: [2151..2152]
 r994: [2144..2145]
 r995: [2141..2142]
 r996: [2134..2135]
 r997: [2125..2128]
 r998: [2125..2126]
 r999: [2114..2115]
 r1000: [2116..2117]
 r1001: [2112..2113]
 r1002: [2107..2108]
 r1003: [2098..2101]
 r1004: [2098..2099]
 r1005: [2089..2092]
 r1006: [2089..2090]
 r1007: [2082..2083]
 r1008: [2078..2079]
 r1009: [2076..2077]
 r1010: [2069..2072]
 r1011: [2069..2070]
 r1012: [2062..2063]
 r1013: [2058..2059]
 r1014: [2055..2057]
 r1015: [2055..2056]
 r1016: [2050..2051]
 r1017: [2047..2048]
 r1018: [2042..2043]
 r1019: [2035..2036]
 r1020: [2032..2033]
 r1021: [2027..2028]
 r1022: [2020..2021]
 r1023: [2011..2014]
 r1024: [2011..2012]
 r1025: [2008..2009]
 r1026: [2001..2004]
 r1027: [2001..2002]
 r1028: [1996..1997]
 r1029: [1991..1992]
 r1030: [1982..1983]
 r1031: [1980..1981]
 r1032: [1975..1976]
 r1033: [1968..1969]
 r1034: [1965..1966]
 r1035: [1960..1961]
 r1036: [1953..1954]
 r1037: [1944..1947]
 r1038: [1944..1945]
 r1039: [1941..1942]
 r1040: [1934..1937]
 r1041: [1934..1935]
 r1042: [1929..1930]
 r1043: [1924..1925]
 r1044: [1915..1916]
 r1045: [1913..1914]
 r1046: [1908..1909]
 r1047: [1901..1902]
 r1048: [1898..1899]
 r1049: [1891..1894]
 r1050: [1891..1892]
 r1051: [1888..1889]
 r1052: [1883..1884]
 r1053: [1874..1875]
 r1054: [1584..1585]
 r1055: [1591..1592]
 r1056: [1850..1851]
 r1057: [1845..1846]
 r1058: [1838..1839]
 r1059: [1835..1836]
 r1060: [1801..1802]
 r1061: [1796..1797]
 r1062: [1789..1790]
 r1063: [1786..1787]
 r1064: [1781..1782]
 r1065: [1774..1775]
 r1066: [1770..1771]
 r1067: [1768..1769]
 r1068: [1763..1764]
 r1069: [1756..1757]
 r1070: [1753..1754]
 r1071: [1748..1749]
 r1072: [1741..1742]
 r1073: [1737..1738]
 r1074: [1735..1736]
 r1075: [1730..1731]
 r1076: [1724..1725]
 r1077: [1722..1723]
 r1078: [1671..1672]
 r1079: [1669..1670]
 r1080: [1662..1663]
 r1081: [1654..1655]
 r1082: [1652..1653]
 r1083: [1645..1646]
 r1084: [1636..1637]
 r1085: [1631..1632]
 r1086: [1633..1635]
 r1087: [1633..1634]
 r1088: [1626..1627]
 r1089: [1628..1630]
 r1090: [1628..1629]
 r1091: [1719..1720]
 r1092: [1717..1718]
 r1093: [1710..1711]
 r1094: [1702..1703]
 r1095: [1700..1701]
 r1096: [1693..1694]
 r1097: [1684..1685]
 r1098: [1679..1680]
 r1099: [1681..1683]
 r1100: [1681..1682]
 r1101: [1674..1675]
 r1102: [1676..1678]
 r1103: [1676..1677]
 r1104: [1623..1624]
 r1105: [1618..1619]
 r1106: [1610..1612]
 r1107: [1610..1611]
 r1108: [1608..1609]
 r1109: [1603..1604]
 r1110: [1595..1597]
 r1111: [1595..1596]
 r1112: [1832..1833]
 r1113: [1827..1828]
 r1114: [1819..1821]
 r1115: [1819..1820]
 r1116: [1817..1818]
 r1117: [1812..1813]
 r1118: [1804..1806]
 r1119: [1804..1805]
 r1120: [2..3]
 r1121: [6..7]
 r1122: [13..14]
 r1123: [1575..1576]
 r1124: [1569..1570]
 r1127: [1564..1565]
 r1128: [1566..1567]
 r1129: [1562..1563]
 r1130: [1556..1557]
 r1133: [1551..1552]
 r1134: [1553..1554]
 r1135: [1549..1550]
 r1136: [1544..1545]
 r1137: [1537..1538]
 r1138: [1528..1531]
 r1139: [1528..1529]
 r1140: [1525..1526]
 r1141: [1518..1519]
 r1142: [1511..1512]
 r1143: [1502..1505]
 r1144: [1502..1503]
 r1145: [1497..1498]
 r1146: [1492..1493]
 r1147: [1485..1486]
 r1148: [1476..1479]
 r1149: [1476..1477]
 r1150: [1471..1472]
 r1151: [1464..1465]
 r1152: [1457..1458]
 r1153: [1448..1451]
 r1154: [1448..1449]
 r1155: [1443..1444]
 r1156: [1438..1439]
 r1157: [1429..1430]
 r1158: [1420..1423]
 r1159: [1420..1421]
 r1160: [1415..1416]
 r1161: [1408..1409]
 r1162: [1399..1400]
 r1163: [1390..1393]
 r1164: [1390..1391]
 r1165: [1385..1386]
 r1166: [1380..1381]
 r1167: [1371..1372]
 r1168: [1362..1365]
 r1169: [1362..1363]
 r1170: [1357..1358]
 r1171: [1350..1351]
 r1172: [1341..1342]
 r1173: [1332..1335]
 r1174: [1332..1333]
 r1175: [1323..1324]
 r1176: [1325..1326]
 r1177: [1321..1322]
 r1178: [1316..1317]
 r1179: [1307..1310]
 r1180: [1307..1308]
 r1181: [1298..1299]
 r1182: [1291..1292]
 r1183: [1282..1285]
 r1184: [1282..1283]
 r1185: [1279..1280]
 r1186: [1274..1275]
 r1187: [1265..1268]
 r1188: [1265..1266]
 r1189: [1256..1257]
 r1190: [1249..1250]
 r1191: [1240..1243]
 r1192: [1240..1241]
 r1193: [1235..1236]
 r1194: [1230..1231]
 r1195: [1221..1224]
 r1196: [1221..1222]
 r1197: [1212..1213]
 r1198: [1203..1204]
 r1199: [1194..1197]
 r1200: [1194..1195]
 r1201: [1189..1190]
 r1202: [1184..1185]
 r1203: [1175..1178]
 r1204: [1175..1176]
 r1205: [1166..1167]
 r1206: [1157..1158]
 r1207: [1148..1151]
 r1208: [1148..1149]
 r1209: [1139..1140]
 r1210: [1141..1142]
 r1211: [1135..1136]
 r1212: [1137..1138]
 r1213: [1133..1134]
 r1214: [1130..1131]
 r1215: [1125..1126]
 r1216: [1116..1119]
 r1217: [1116..1117]
 r1218: [1111..1112]
 r1219: [1104..1105]
 r1220: [1097..1098]
 r1221: [1088..1091]
 r1222: [1088..1089]
 r1223: [1085..1086]
 r1224: [1078..1079]
 r1225: [1071..1072]
 r1226: [1062..1065]
 r1227: [1062..1063]
 r1228: [1057..1058]
 r1229: [1050..1051]
 r1230: [1043..1044]
 r1231: [1034..1037]
 r1232: [1034..1035]
 r1233: [1029..1030]
 r1234: [1022..1023]
 r1235: [1015..1016]
 r1236: [1006..1009]
 r1237: [1006..1007]
 r1238: [1001..1002]
 r1239: [994..995]
 r1240: [985..986]
 r1241: [976..979]
 r1242: [976..977]
 r1243: [971..972]
 r1244: [964..965]
 r1245: [955..956]
 r1246: [946..949]
 r1247: [946..947]
 r1248: [941..942]
 r1249: [934..935]
 r1250: [925..926]
 r1251: [916..919]
 r1252: [916..917]
 r1253: [911..912]
 r1254: [904..905]
 r1255: [895..896]
 r1256: [886..889]
 r1257: [886..887]
 r1258: [877..878]
 r1259: [879..880]
 r1260: [875..876]
 r1261: [868..869]
 r1262: [861..862]
 r1263: [852..855]
 r1264: [852..853]
 r1265: [849..850]
 r1266: [844..845]
 r1267: [837..838]
 r1268: [828..831]
 r1269: [828..829]
 r1270: [823..824]
 r1271: [816..817]
 r1272: [809..810]
 r1273: [800..803]
 r1274: [800..801]
 r1275: [795..796]
 r1276: [790..791]
 r1277: [783..784]
 r1278: [774..777]
 r1279: [774..775]
 r1280: [769..770]
 r1281: [762..763]
 r1282: [753..754]
 r1283: [744..747]
 r1284: [744..745]
 r1285: [739..740]
 r1286: [734..735]
 r1287: [725..726]
 r1288: [716..719]
 r1289: [716..717]
 r1290: [711..712]
 r1291: [704..705]
 r1292: [695..696]
 r1293: [686..689]
 r1294: [686..687]
 r1295: [681..682]
 r1296: [676..677]
 r1297: [667..668]
 r1298: [658..661]
 r1299: [658..659]
 r1300: [649..650]
 r1301: [651..652]
 r1302: [647..648]
 r1303: [642..643]
 r1304: [635..636]
 r1305: [626..629]
 r1306: [626..627]
 r1307: [623..624]
 r1308: [618..619]
 r1309: [611..612]
 r1310: [602..605]
 r1311: [602..603]
 r1312: [597..598]
 r1313: [592..593]
 r1314: [583..584]
 r1315: [574..577]
 r1316: [574..575]
 r1317: [569..570]
 r1318: [564..565]
 r1319: [555..556]
 r1320: [546..549]
 r1321: [546..547]
 r1322: [539..540]
 r1323: [532..533]
 r1324: [525..526]
 r1325: [516..519]
 r1326: [516..517]
 r1327: [513..514]
 r1328: [506..507]
 r1329: [499..500]
 r1330: [490..493]
 r1331: [490..491]
 r1332: [485..486]
 r1333: [478..479]
 r1334: [469..470]
 r1335: [460..463]
 r1336: [460..461]
 r1337: [455..456]
 r1338: [448..449]
 r1339: [439..440]
 r1340: [430..433]
 r1341: [430..431]
 r1342: [414..415]
 r1343: [416..417]
 r1344: [410..411]
 r1345: [412..413]
 r1346: [406..407]
 r1347: [408..409]
 r1348: [404..405]
 r1349: [397..398]
 r1350: [390..391]
 r1351: [381..384]
 r1352: [381..382]
 r1353: [378..379]
 r1354: [373..374]
 r1355: [366..367]
 r1356: [357..360]
 r1357: [357..358]
 r1358: [353..354]
 r1359: [351..352]
 r1360: [346..347]
 r1361: [339..340]
 r1362: [330..333]
 r1363: [330..331]
 r1364: [327..328]
 r1365: [320..321]
 r1366: [313..314]
 r1367: [304..307]
 r1368: [304..305]
 r1369: [300..301]
 r1370: [298..299]
 r1371: [291..292]
 r1372: [284..285]
 r1373: [275..278]
 r1374: [275..276]
 r1375: [272..273]
 r1376: [267..268]
 r1377: [260..261]
 r1378: [251..254]
 r1379: [251..252]
 r1380: [247..248]
 r1381: [245..246]
 r1382: [240..241]
 r1383: [233..234]
 r1384: [224..227]
 r1385: [224..225]
 r1386: [221..222]
 r1387: [214..215]
 r1388: [207..208]
 r1389: [198..201]
 r1390: [198..199]
 r1391: [194..195]
 r1392: [192..193]
 r1393: [187..188]
 r1394: [180..181]
 r1395: [171..174]
 r1396: [171..172]
 r1397: [168..169]
 r1398: [163..164]
 r1399: [156..157]
 r1400: [149..150]
 r1401: [140..141]
 r1402: [127..128]
 r1403: [122..123]
 r1404: [115..116]
 r1405: [106..109]
 r1406: [106..107]
 r1407: [103..104]
 r1408: [98..99]
 r1409: [91..92]
 r1410: [84..85]
 r1411: [75..76]
 r1412: [56..57]
 r1413: [46..47]
 r1414: [41..42]
 r1415: [34..35]
 r1416: [31..32]
 r1417: [26..27]
 r1418: [17..18]
 r1419: [2085..2086]
 r1420: [2065..2066]
 r1421: [1733..1734]
 r1422: [1665..1666]
 r1423: [1656..1657]
 r1424: [1648..1649]
 r1425: [1638..1640]
 r1426: [1713..1714]
 r1427: [1704..1705]
 r1428: [1696..1697]
 r1429: [1686..1688]
 r1430: [421..423]
 r1431: [143..144]
 r1432: [78..79]
 r1433: [49..51]
 r1434: [1641..1647]
 r1435: [1658..1664]
 r1436: [1689..1695]
 r1437: [1706..1712]
Compressing live ranges: from 2397 to 2036 - 84%
Ranges after the compression:
 r87: [2030..2031]
 r88: [2026..2029]
 r89: [2026..2027]
 r90: [2024..2025]
 r91: [2022..2023]
 r92: [2018..2019]
 r93: [2014..2017]
 r94: [2014..2015]
 r95: [2012..2013]
 r96: [2010..2011]
 r97: [2006..2007]
 r98: [2002..2005]
 r99: [2002..2003]
 r100: [2000..2001]
 r101: [1998..1999]
 r102: [1994..1995]
 r103: [1990..1993]
 r104: [1990..1991]
 r105: [1988..1989]
 r106: [1986..1987]
 r107: [1974..1975]
 r108: [1972..1973]
 r109: [1970..1971]
 r110: [1964..1965]
 r111: [1954..1955]
 r112: [1952..1953]
 r113: [1948..1949]
 r114: [1942..1943]
 r115: [1940..1941]
 r116: [1936..1937]
 r117: [1930..1931]
 r118: [1926..1929]
 r119: [1926..1927]
 r120: [1924..1925]
 r121: [1922..1923]
 r122: [1906..1921]
 r123: [1918..1919]
 r124: [1914..1917]
 r125: [1914..1915]
 r126: [1912..1913]
 r127: [1910..1911]
 r128: [1906..1907]
 r129: [1876..1905]
 r130: [1902..1903]
 r131: [1898..1901]
 r132: [1898..1899]
 r133: [1896..1897]
 r134: [1894..1895]
 r135: [1878..1893]
 r136: [1890..1891]
 r137: [1886..1889]
 r138: [1886..1887]
 r139: [1884..1885]
 r140: [1882..1883]
 r141: [1878..1879]
 r142: [1876..1877]
 r143: [1842..1875]
 r144: [1872..1873]
 r145: [1870..1871]
 r146: [1866..1869]
 r147: [1866..1867]
 r148: [1864..1865]
 r149: [1862..1863]
 r150: [1844..1861]
 r151: [1858..1859]
 r152: [1856..1857]
 r153: [1852..1855]
 r154: [1852..1853]
 r155: [1850..1851]
 r156: [1848..1849]
 r157: [1844..1845]
 r158: [1842..1843]
 r159: [1808..1841]
 r160: [1838..1839]
 r161: [1836..1837]
 r162: [1832..1835]
 r163: [1832..1833]
 r164: [1830..1831]
 r165: [1828..1829]
 r166: [1810..1827]
 r167: [1824..1825]
 r168: [1822..1823]
 r169: [1818..1821]
 r170: [1818..1819]
 r171: [1816..1817]
 r172: [1814..1815]
 r173: [1810..1811]
 r174: [1808..1809]
 r175: [1806..1807]
 r176: [1804..1805]
 r177: [1798..1799]
 r178: [1794..1797]
 r179: [1794..1795]
 r180: [1792..1793]
 r181: [1790..1791]
 r182: [1786..1787]
 r183: [1784..1785]
 r184: [1782..1783]
 r185: [1778..1779]
 r186: [1772..1775]
 r187: [1772..1773]
 r188: [1766..1767]
 r189: [1764..1765]
 r190: [1760..1761]
 r191: [1754..1757]
 r192: [1754..1755]
 r193: [1748..1749]
 r194: [1742..1743]
 r195: [1738..1741]
 r196: [1738..1739]
 r197: [1736..1737]
 r198: [1734..1735]
 r199: [1692..1733]
 r200: [1730..1731]
 r201: [1724..1729]
 r202: [1726..1727]
 r203: [1724..1725]
 r204: [1720..1723]
 r205: [1720..1721]
 r206: [1718..1719]
 r207: [1716..1717]
 r208: [1704..1713]
 r209: [1710..1711]
 r210: [1708..1709]
 r211: [1704..1705]
 r212: [1692..1703]
 r213: [1700..1701]
 r214: [1696..1699]
 r215: [1696..1697]
 r216: [1694..1695]
 r217: [1690..1693]
 r218: [1690..1691]
 r219: [1686..1687]
 r220: [1682..1685]
 r221: [1682..1683]
 r222: [1680..1681]
 r223: [1678..1679]
 r224: [1636..1677]
 r225: [1674..1675]
 r226: [1668..1673]
 r227: [1670..1671]
 r228: [1668..1669]
 r229: [1664..1667]
 r230: [1664..1665]
 r231: [1662..1663]
 r232: [1660..1661]
 r233: [1648..1657]
 r234: [1654..1655]
 r235: [1652..1653]
 r236: [1648..1649]
 r237: [1636..1647]
 r238: [1644..1645]
 r239: [1640..1643]
 r240: [1640..1641]
 r241: [1638..1639]
 r242: [1634..1637]
 r243: [1634..1635]
 r244: [1630..1631]
 r245: [1626..1629]
 r246: [1626..1627]
 r247: [1624..1625]
 r248: [1622..1623]
 r249: [1602..1621]
 r250: [1618..1619]
 r251: [1616..1617]
 r252: [1602..1613]
 r253: [1610..1611]
 r254: [1606..1609]
 r255: [1606..1607]
 r256: [1604..1605]
 r257: [1600..1603]
 r258: [1600..1601]
 r259: [1582..1583]
 r260: [1578..1581]
 r261: [1578..1579]
 r262: [1576..1577]
 r263: [1574..1575]
 r264: [1572..1573]
 r265: [1544..1545]
 r266: [1540..1543]
 r267: [1540..1541]
 r268: [1538..1539]
 r269: [1536..1537]
 r270: [1522..1535]
 r271: [1532..1533]
 r272: [1528..1531]
 r273: [1528..1529]
 r274: [1526..1527]
 r275: [1524..1525]
 r276: [1522..1523]
 r277: [1516..1517]
 r278: [1512..1515]
 r279: [1512..1513]
 r280: [1510..1511]
 r281: [1508..1509]
 r282: [1494..1507]
 r283: [1504..1505]
 r284: [1500..1503]
 r285: [1500..1501]
 r286: [1498..1499]
 r287: [1496..1497]
 r288: [1494..1495]
 r289: [1484..1487]
 r290: [1484..1485]
 r291: [1482..1483]
 r292: [1430..1431]
 r294: [1424..1425]
 r295: [1420..1423]
 r296: [1414..1415]
 r298: [1408..1409]
 r299: [1404..1407]
 r300: [1472..1473]
 r302: [1466..1467]
 r303: [1462..1465]
 r304: [1456..1457]
 r306: [1450..1451]
 r307: [1446..1449]
 r308: [1390..1391]
 r309: [1386..1389]
 r310: [1386..1387]
 r311: [1384..1385]
 r312: [1382..1383]
 r313: [1378..1379]
 r314: [1374..1377]
 r315: [1374..1375]
 r316: [1372..1373]
 r317: [1370..1371]
 r318: [1568..1569]
 r319: [1564..1567]
 r320: [1564..1565]
 r321: [1562..1563]
 r322: [1560..1561]
 r323: [1556..1557]
 r324: [1552..1555]
 r325: [1552..1553]
 r326: [1550..1551]
 r327: [1548..1549]
 r328: [1356..1357]
 r329: [1354..1355]
 r330: [1350..1351]
 r331: [1344..1345]
 r332: [1342..1343]
 r333: [1338..1339]
 r334: [1332..1333]
 r335: [1326..1331]
 r336: [1328..1329]
 r337: [1326..1327]
 r338: [1322..1325]
 r339: [1322..1323]
 r340: [1320..1321]
 r341: [1318..1319]
 r342: [1292..1315]
 r343: [1312..1313]
 r344: [1310..1311]
 r345: [1304..1309]
 r346: [1306..1307]
 r347: [1304..1305]
 r348: [1300..1303]
 r349: [1300..1301]
 r350: [1298..1299]
 r351: [1296..1297]
 r352: [1292..1293]
 r353: [1270..1291]
 r354: [1288..1289]
 r355: [1282..1287]
 r356: [1284..1285]
 r357: [1282..1283]
 r358: [1278..1281]
 r359: [1278..1279]
 r360: [1276..1277]
 r361: [1274..1275]
 r362: [1270..1271]
 r363: [1246..1269]
 r364: [1266..1267]
 r365: [1264..1265]
 r366: [1258..1263]
 r367: [1260..1261]
 r368: [1258..1259]
 r369: [1254..1257]
 r370: [1254..1255]
 r371: [1252..1253]
 r372: [1250..1251]
 r373: [1246..1247]
 r374: [1222..1245]
 r375: [1242..1243]
 r376: [1234..1241]
 r377: [1238..1239]
 r378: [1236..1237]
 r379: [1234..1235]
 r380: [1230..1233]
 r381: [1230..1231]
 r382: [1228..1229]
 r383: [1226..1227]
 r384: [1222..1223]
 r385: [1196..1221]
 r386: [1218..1219]
 r387: [1216..1217]
 r388: [1208..1215]
 r389: [1212..1213]
 r390: [1210..1211]
 r391: [1208..1209]
 r392: [1204..1207]
 r393: [1204..1205]
 r394: [1202..1203]
 r395: [1200..1201]
 r396: [1196..1197]
 r397: [1172..1195]
 r398: [1192..1193]
 r399: [1184..1191]
 r400: [1188..1189]
 r401: [1186..1187]
 r402: [1184..1185]
 r403: [1180..1183]
 r404: [1180..1181]
 r405: [1178..1179]
 r406: [1176..1177]
 r407: [1172..1173]
 r408: [1146..1171]
 r409: [1168..1169]
 r410: [1166..1167]
 r411: [1158..1165]
 r412: [1162..1163]
 r413: [1160..1161]
 r414: [1158..1159]
 r415: [1154..1157]
 r416: [1154..1155]
 r417: [1152..1153]
 r418: [1150..1151]
 r419: [1146..1147]
 r420: [1144..1145]
 r421: [1142..1143]
 r422: [1136..1137]
 r423: [1132..1135]
 r424: [1132..1133]
 r425: [1130..1131]
 r426: [1128..1129]
 r427: [1124..1125]
 r428: [1122..1123]
 r429: [1120..1121]
 r430: [1114..1119]
 r431: [1116..1117]
 r432: [1114..1115]
 r433: [1110..1113]
 r434: [1110..1111]
 r435: [1108..1109]
 r436: [1106..1107]
 r437: [1066..1103]
 r438: [1100..1101]
 r439: [1096..1099]
 r440: [1096..1097]
 r441: [1094..1095]
 r442: [1092..1093]
 r443: [1088..1089]
 r444: [1086..1087]
 r445: [1084..1085]
 r446: [1078..1083]
 r447: [1080..1081]
 r448: [1078..1079]
 r449: [1074..1077]
 r450: [1074..1075]
 r451: [1072..1073]
 r452: [1070..1071]
 r453: [1066..1067]
 r454: [1026..1065]
 r455: [1062..1063]
 r456: [1058..1061]
 r457: [1058..1059]
 r458: [1056..1057]
 r459: [1054..1055]
 r460: [1050..1051]
 r461: [1048..1049]
 r462: [1046..1047]
 r463: [1038..1045]
 r464: [1042..1043]
 r465: [1040..1041]
 r466: [1038..1039]
 r467: [1034..1037]
 r468: [1034..1035]
 r469: [1032..1033]
 r470: [1030..1031]
 r471: [1026..1027]
 r472: [986..1025]
 r473: [1022..1023]
 r474: [1018..1021]
 r475: [1018..1019]
 r476: [1016..1017]
 r477: [1014..1015]
 r478: [1010..1011]
 r479: [1008..1009]
 r480: [1006..1007]
 r481: [998..1005]
 r482: [1002..1003]
 r483: [1000..1001]
 r484: [998..999]
 r485: [994..997]
 r486: [994..995]
 r487: [992..993]
 r488: [990..991]
 r489: [986..987]
 r490: [984..985]
 r491: [982..983]
 r492: [970..971]
 r493: [966..969]
 r494: [966..967]
 r495: [964..965]
 r496: [962..963]
 r497: [958..959]
 r498: [954..955]
 r499: [952..953]
 r500: [946..951]
 r501: [948..949]
 r502: [946..947]
 r503: [942..945]
 r504: [942..943]
 r505: [940..941]
 r506: [938..939]
 r507: [912..935]
 r508: [932..933]
 r509: [930..931]
 r510: [924..929]
 r511: [926..927]
 r512: [924..925]
 r513: [920..923]
 r514: [920..921]
 r515: [918..919]
 r516: [916..917]
 r517: [912..913]
 r518: [888..911]
 r519: [908..909]
 r520: [906..907]
 r521: [900..905]
 r522: [902..903]
 r523: [900..901]
 r524: [896..899]
 r525: [896..897]
 r526: [894..895]
 r527: [892..893]
 r528: [888..889]
 r529: [864..887]
 r530: [884..885]
 r531: [882..883]
 r532: [876..881]
 r533: [878..879]
 r534: [876..877]
 r535: [872..875]
 r536: [872..873]
 r537: [870..871]
 r538: [868..869]
 r539: [864..865]
 r540: [838..863]
 r541: [860..861]
 r542: [858..859]
 r543: [850..857]
 r544: [854..855]
 r545: [852..853]
 r546: [850..851]
 r547: [846..849]
 r548: [846..847]
 r549: [844..845]
 r550: [842..843]
 r551: [838..839]
 r552: [812..837]
 r553: [834..835]
 r554: [832..833]
 r555: [824..831]
 r556: [828..829]
 r557: [826..827]
 r558: [824..825]
 r559: [820..823]
 r560: [820..821]
 r561: [818..819]
 r562: [816..817]
 r563: [812..813]
 r564: [786..811]
 r565: [808..809]
 r566: [806..807]
 r567: [798..805]
 r568: [802..803]
 r569: [800..801]
 r570: [798..799]
 r571: [794..797]
 r572: [794..795]
 r573: [792..793]
 r574: [790..791]
 r575: [786..787]
 r576: [760..785]
 r577: [782..783]
 r578: [780..781]
 r579: [772..779]
 r580: [776..777]
 r581: [774..775]
 r582: [772..773]
 r583: [768..771]
 r584: [768..769]
 r585: [766..767]
 r586: [764..765]
 r587: [760..761]
 r588: [758..759]
 r589: [756..757]
 r590: [750..751]
 r591: [748..749]
 r592: [742..747]
 r593: [744..745]
 r594: [742..743]
 r595: [738..741]
 r596: [738..739]
 r597: [736..737]
 r598: [734..735]
 r599: [710..731]
 r600: [728..729]
 r601: [722..727]
 r602: [724..725]
 r603: [722..723]
 r604: [718..721]
 r605: [718..719]
 r606: [716..717]
 r607: [714..715]
 r608: [710..711]
 r609: [686..709]
 r610: [706..707]
 r611: [704..705]
 r612: [698..703]
 r613: [700..701]
 r614: [698..699]
 r615: [694..697]
 r616: [694..695]
 r617: [692..693]
 r618: [690..691]
 r619: [686..687]
 r620: [664..685]
 r621: [682..683]
 r622: [676..681]
 r623: [678..679]
 r624: [676..677]
 r625: [672..675]
 r626: [672..673]
 r627: [670..671]
 r628: [668..669]
 r629: [664..665]
 r630: [638..663]
 r631: [660..661]
 r632: [658..659]
 r633: [650..657]
 r634: [654..655]
 r635: [652..653]
 r636: [650..651]
 r637: [646..649]
 r638: [646..647]
 r639: [644..645]
 r640: [642..643]
 r641: [638..639]
 r642: [614..637]
 r643: [634..635]
 r644: [626..633]
 r645: [630..631]
 r646: [628..629]
 r647: [626..627]
 r648: [622..625]
 r649: [622..623]
 r650: [620..621]
 r651: [618..619]
 r652: [614..615]
 r653: [588..613]
 r654: [610..611]
 r655: [608..609]
 r656: [600..607]
 r657: [604..605]
 r658: [602..603]
 r659: [600..601]
 r660: [596..599]
 r661: [596..597]
 r662: [594..595]
 r663: [592..593]
 r664: [588..589]
 r665: [564..587]
 r666: [584..585]
 r667: [576..583]
 r668: [580..581]
 r669: [578..579]
 r670: [576..577]
 r671: [572..575]
 r672: [572..573]
 r673: [570..571]
 r674: [568..569]
 r675: [564..565]
 r676: [562..563]
 r677: [560..561]
 r678: [554..555]
 r679: [548..553]
 r680: [550..551]
 r681: [548..549]
 r682: [544..547]
 r683: [544..545]
 r684: [542..543]
 r685: [540..541]
 r686: [516..537]
 r687: [534..535]
 r688: [528..533]
 r689: [530..531]
 r690: [528..529]
 r691: [524..527]
 r692: [524..525]
 r693: [522..523]
 r694: [520..521]
 r695: [516..517]
 r696: [492..515]
 r697: [512..513]
 r698: [504..511]
 r699: [508..509]
 r700: [506..507]
 r701: [504..505]
 r702: [500..503]
 r703: [500..501]
 r704: [498..499]
 r705: [496..497]
 r706: [492..493]
 r707: [468..491]
 r708: [488..489]
 r709: [480..487]
 r710: [484..485]
 r711: [482..483]
 r712: [480..481]
 r713: [476..479]
 r714: [476..477]
 r715: [474..475]
 r716: [472..473]
 r717: [468..469]
 r718: [466..467]
 r719: [364..465]
 r720: [462..463]
 r721: [460..461]
 r722: [454..459]
 r723: [456..457]
 r724: [454..455]
 r725: [450..453]
 r726: [450..451]
 r727: [448..449]
 r728: [446..447]
 r729: [420..443]
 r730: [440..441]
 r731: [438..439]
 r732: [432..437]
 r733: [434..435]
 r734: [432..433]
 r735: [428..431]
 r736: [428..429]
 r737: [426..427]
 r738: [424..425]
 r739: [420..421]
 r740: [394..419]
 r741: [416..417]
 r742: [414..415]
 r743: [406..413]
 r744: [410..411]
 r745: [408..409]
 r746: [406..407]
 r747: [402..405]
 r748: [402..403]
 r749: [400..401]
 r750: [398..399]
 r751: [394..395]
 r752: [368..393]
 r753: [390..391]
 r754: [388..389]
 r755: [380..387]
 r756: [384..385]
 r757: [382..383]
 r758: [380..381]
 r759: [376..379]
 r760: [376..377]
 r761: [374..375]
 r762: [372..373]
 r763: [368..369]
 r764: [366..367]
 r765: [362..365]
 r766: [360..361]
 r767: [358..359]
 r768: [344..345]
 r769: [342..343]
 r770: [336..341]
 r771: [338..339]
 r772: [336..337]
 r773: [332..335]
 r774: [332..333]
 r775: [330..331]
 r776: [328..329]
 r777: [304..325]
 r778: [322..323]
 r779: [316..321]
 r780: [318..319]
 r781: [316..317]
 r782: [312..315]
 r783: [312..313]
 r784: [310..311]
 r785: [308..309]
 r786: [304..305]
 r787: [298..299]
 r788: [292..297]
 r789: [294..295]
 r790: [292..293]
 r791: [288..291]
 r792: [288..289]
 r793: [286..287]
 r794: [284..285]
 r795: [258..281]
 r796: [278..279]
 r797: [276..277]
 r798: [270..275]
 r799: [272..273]
 r800: [270..271]
 r801: [266..269]
 r802: [266..267]
 r803: [264..265]
 r804: [262..263]
 r805: [258..259]
 r806: [252..253]
 r807: [250..251]
 r808: [244..249]
 r809: [246..247]
 r810: [244..245]
 r811: [240..243]
 r812: [240..241]
 r813: [238..239]
 r814: [236..237]
 r815: [212..233]
 r816: [230..231]
 r817: [224..229]
 r818: [226..227]
 r819: [224..225]
 r820: [220..223]
 r821: [220..221]
 r822: [218..219]
 r823: [216..217]
 r824: [212..213]
 r825: [206..207]
 r826: [200..205]
 r827: [202..203]
 r828: [200..201]
 r829: [196..199]
 r830: [196..197]
 r831: [194..195]
 r832: [192..193]
 r833: [166..189]
 r834: [186..187]
 r835: [184..185]
 r836: [178..183]
 r837: [180..181]
 r838: [178..179]
 r839: [174..177]
 r840: [174..175]
 r841: [172..173]
 r842: [170..171]
 r843: [166..167]
 r844: [160..161]
 r845: [154..159]
 r846: [156..157]
 r847: [154..155]
 r848: [150..153]
 r849: [150..151]
 r850: [148..149]
 r851: [146..147]
 r852: [130..143]
 r853: [140..141]
 r854: [136..139]
 r855: [136..137]
 r856: [134..135]
 r857: [132..133]
 r858: [130..131]
 r859: [128..129]
 r860: [108..127]
 r861: [124..125]
 r862: [122..123]
 r863: [112..119]
 r864: [116..117]
 r865: [114..115]
 r866: [112..113]
 r867: [110..111]
 r868: [108..109]
 r869: [50..107]
 r870: [104..105]
 r871: [98..103]
 r872: [100..101]
 r873: [98..99]
 r874: [94..97]
 r875: [94..95]
 r876: [92..93]
 r877: [90..91]
 r878: [74..87]
 r879: [84..85]
 r880: [80..83]
 r881: [80..81]
 r882: [78..79]
 r883: [76..77]
 r884: [74..75]
 r885: [72..73]
 r886: [52..71]
 r887: [68..69]
 r888: [66..67]
 r889: [56..63]
 r890: [60..61]
 r891: [58..59]
 r892: [56..57]
 r893: [54..55]
 r894: [52..53]
 r895: [50..51]
 r896: [48..49]
 r897: [46..47]
 r898: [40..45]
 r899: [42..43]
 r900: [38..41]
 r901: [14..37]
 r902: [34..35]
 r903: [30..33]
 r904: [30..31]
 r905: [28..29]
 r906: [26..27]
 r907: [14..25]
 r908: [22..23]
 r909: [18..21]
 r910: [18..19]
 r911: [16..17]
 r912: [12..15]
 r913: [12..13]
 r914: [2034..2035]
 r915: [1978..2035]
 r916: [1978..1979]
 r917: [1982..1983]
 r918: [1960..1961]
 r919: [1588..1589]
 r920: [1958..1959]
 r921: [1592..1959]
 r922: [1592..1593]
 r923: [1596..1597]
 r924: [1586..1587]
 r925: [1362..1587]
 r926: [1362..1363]
 r927: [1366..1367]
 r928: [0..1]
 r929: [1360..1361]
 r930: [4..1361]
 r931: [4..5]
 r932: [8..9]
 r933: [1980..1981]
 r934: [1984..1985]
 r935: [2032..2033]
 r936: [2028..2029]
 r937: [2022..2023]
 r938: [2022..2023]
 r939: [2020..2021]
 r940: [2016..2017]
 r941: [2010..2011]
 r942: [2010..2011]
 r943: [2008..2009]
 r944: [2004..2005]
 r945: [1998..1999]
 r946: [1998..1999]
 r947: [1996..1997]
 r948: [1992..1993]
 r949: [1986..1987]
 r950: [1986..1987]
 r951: [1962..1963]
 r952: [1976..1977]
 r953: [1968..1969]
 r954: [1966..1967]
 r955: [1966..1967]
 r956: [1590..1591]
 r957: [1594..1595]
 r958: [1598..1599]
 r959: [1956..1957]
 r960: [1950..1951]
 r963: [1946..1947]
 r964: [1948..1949]
 r965: [1944..1945]
 r966: [1938..1939]
 r969: [1934..1935]
 r970: [1936..1937]
 r971: [1932..1933]
 r972: [1928..1929]
 r973: [1922..1923]
 r974: [1920..1921]
 r975: [1916..1917]
 r976: [1908..1911]
 r977: [1908..1909]
 r978: [1904..1905]
 r979: [1900..1901]
 r980: [1894..1895]
 r981: [1892..1893]
 r982: [1888..1889]
 r983: [1880..1883]
 r984: [1880..1881]
 r985: [1874..1875]
 r986: [1868..1869]
 r987: [1862..1863]
 r988: [1860..1861]
 r989: [1854..1855]
 r990: [1846..1849]
 r991: [1846..1847]
 r992: [1840..1841]
 r993: [1834..1835]
 r994: [1828..1829]
 r995: [1826..1827]
 r996: [1820..1821]
 r997: [1812..1815]
 r998: [1812..1813]
 r999: [1802..1803]
 r1000: [1804..1805]
 r1001: [1800..1801]
 r1002: [1796..1797]
 r1003: [1788..1791]
 r1004: [1788..1789]
 r1005: [1780..1783]
 r1006: [1780..1781]
 r1007: [1774..1775]
 r1008: [1770..1771]
 r1009: [1768..1769]
 r1010: [1762..1765]
 r1011: [1762..1763]
 r1012: [1756..1757]
 r1013: [1752..1753]
 r1014: [1750..1751]
 r1015: [1750..1751]
 r1016: [1746..1747]
 r1017: [1744..1745]
 r1018: [1740..1741]
 r1019: [1734..1735]
 r1020: [1732..1733]
 r1021: [1728..1729]
 r1022: [1722..1723]
 r1023: [1714..1717]
 r1024: [1714..1715]
 r1025: [1712..1713]
 r1026: [1706..1709]
 r1027: [1706..1707]
 r1028: [1702..1703]
 r1029: [1698..1699]
 r1030: [1690..1691]
 r1031: [1688..1689]
 r1032: [1684..1685]
 r1033: [1678..1679]
 r1034: [1676..1677]
 r1035: [1672..1673]
 r1036: [1666..1667]
 r1037: [1658..1661]
 r1038: [1658..1659]
 r1039: [1656..1657]
 r1040: [1650..1653]
 r1041: [1650..1651]
 r1042: [1646..1647]
 r1043: [1642..1643]
 r1044: [1634..1635]
 r1045: [1632..1633]
 r1046: [1628..1629]
 r1047: [1622..1623]
 r1048: [1620..1621]
 r1049: [1614..1617]
 r1050: [1614..1615]
 r1051: [1612..1613]
 r1052: [1608..1609]
 r1053: [1600..1601]
 r1054: [1364..1365]
 r1055: [1368..1369]
 r1056: [1584..1585]
 r1057: [1580..1581]
 r1058: [1574..1575]
 r1059: [1572..1573]
 r1060: [1546..1547]
 r1061: [1542..1543]
 r1062: [1536..1537]
 r1063: [1534..1535]
 r1064: [1530..1531]
 r1065: [1524..1525]
 r1066: [1520..1521]
 r1067: [1518..1519]
 r1068: [1514..1515]
 r1069: [1508..1509]
 r1070: [1506..1507]
 r1071: [1502..1503]
 r1072: [1496..1497]
 r1073: [1492..1493]
 r1074: [1490..1491]
 r1075: [1486..1487]
 r1076: [1480..1481]
 r1077: [1478..1479]
 r1078: [1434..1435]
 r1079: [1432..1433]
 r1080: [1426..1427]
 r1081: [1418..1419]
 r1082: [1416..1417]
 r1083: [1410..1411]
 r1084: [1402..1403]
 r1085: [1398..1399]
 r1086: [1400..1401]
 r1087: [1400..1401]
 r1088: [1394..1395]
 r1089: [1396..1397]
 r1090: [1396..1397]
 r1091: [1476..1477]
 r1092: [1474..1475]
 r1093: [1468..1469]
 r1094: [1460..1461]
 r1095: [1458..1459]
 r1096: [1452..1453]
 r1097: [1444..1445]
 r1098: [1440..1441]
 r1099: [1442..1443]
 r1100: [1442..1443]
 r1101: [1436..1437]
 r1102: [1438..1439]
 r1103: [1438..1439]
 r1104: [1392..1393]
 r1105: [1388..1389]
 r1106: [1382..1383]
 r1107: [1382..1383]
 r1108: [1380..1381]
 r1109: [1376..1377]
 r1110: [1370..1371]
 r1111: [1370..1371]
 r1112: [1570..1571]
 r1113: [1566..1567]
 r1114: [1560..1561]
 r1115: [1560..1561]
 r1116: [1558..1559]
 r1117: [1554..1555]
 r1118: [1548..1549]
 r1119: [1548..1549]
 r1120: [2..3]
 r1121: [6..7]
 r1122: [10..11]
 r1123: [1358..1359]
 r1124: [1352..1353]
 r1127: [1348..1349]
 r1128: [1350..1351]
 r1129: [1346..1347]
 r1130: [1340..1341]
 r1133: [1336..1337]
 r1134: [1338..1339]
 r1135: [1334..1335]
 r1136: [1330..1331]
 r1137: [1324..1325]
 r1138: [1316..1319]
 r1139: [1316..1317]
 r1140: [1314..1315]
 r1141: [1308..1309]
 r1142: [1302..1303]
 r1143: [1294..1297]
 r1144: [1294..1295]
 r1145: [1290..1291]
 r1146: [1286..1287]
 r1147: [1280..1281]
 r1148: [1272..1275]
 r1149: [1272..1273]
 r1150: [1268..1269]
 r1151: [1262..1263]
 r1152: [1256..1257]
 r1153: [1248..1251]
 r1154: [1248..1249]
 r1155: [1244..1245]
 r1156: [1240..1241]
 r1157: [1232..1233]
 r1158: [1224..1227]
 r1159: [1224..1225]
 r1160: [1220..1221]
 r1161: [1214..1215]
 r1162: [1206..1207]
 r1163: [1198..1201]
 r1164: [1198..1199]
 r1165: [1194..1195]
 r1166: [1190..1191]
 r1167: [1182..1183]
 r1168: [1174..1177]
 r1169: [1174..1175]
 r1170: [1170..1171]
 r1171: [1164..1165]
 r1172: [1156..1157]
 r1173: [1148..1151]
 r1174: [1148..1149]
 r1175: [1140..1141]
 r1176: [1142..1143]
 r1177: [1138..1139]
 r1178: [1134..1135]
 r1179: [1126..1129]
 r1180: [1126..1127]
 r1181: [1118..1119]
 r1182: [1112..1113]
 r1183: [1104..1107]
 r1184: [1104..1105]
 r1185: [1102..1103]
 r1186: [1098..1099]
 r1187: [1090..1093]
 r1188: [1090..1091]
 r1189: [1082..1083]
 r1190: [1076..1077]
 r1191: [1068..1071]
 r1192: [1068..1069]
 r1193: [1064..1065]
 r1194: [1060..1061]
 r1195: [1052..1055]
 r1196: [1052..1053]
 r1197: [1044..1045]
 r1198: [1036..1037]
 r1199: [1028..1031]
 r1200: [1028..1029]
 r1201: [1024..1025]
 r1202: [1020..1021]
 r1203: [1012..1015]
 r1204: [1012..1013]
 r1205: [1004..1005]
 r1206: [996..997]
 r1207: [988..991]
 r1208: [988..989]
 r1209: [980..981]
 r1210: [982..983]
 r1211: [976..977]
 r1212: [978..979]
 r1213: [974..975]
 r1214: [972..973]
 r1215: [968..969]
 r1216: [960..963]
 r1217: [960..961]
 r1218: [956..957]
 r1219: [950..951]
 r1220: [944..945]
 r1221: [936..939]
 r1222: [936..937]
 r1223: [934..935]
 r1224: [928..929]
 r1225: [922..923]
 r1226: [914..917]
 r1227: [914..915]
 r1228: [910..911]
 r1229: [904..905]
 r1230: [898..899]
 r1231: [890..893]
 r1232: [890..891]
 r1233: [886..887]
 r1234: [880..881]
 r1235: [874..875]
 r1236: [866..869]
 r1237: [866..867]
 r1238: [862..863]
 r1239: [856..857]
 r1240: [848..849]
 r1241: [840..843]
 r1242: [840..841]
 r1243: [836..837]
 r1244: [830..831]
 r1245: [822..823]
 r1246: [814..817]
 r1247: [814..815]
 r1248: [810..811]
 r1249: [804..805]
 r1250: [796..797]
 r1251: [788..791]
 r1252: [788..789]
 r1253: [784..785]
 r1254: [778..779]
 r1255: [770..771]
 r1256: [762..765]
 r1257: [762..763]
 r1258: [754..755]
 r1259: [756..757]
 r1260: [752..753]
 r1261: [746..747]
 r1262: [740..741]
 r1263: [732..735]
 r1264: [732..733]
 r1265: [730..731]
 r1266: [726..727]
 r1267: [720..721]
 r1268: [712..715]
 r1269: [712..713]
 r1270: [708..709]
 r1271: [702..703]
 r1272: [696..697]
 r1273: [688..691]
 r1274: [688..689]
 r1275: [684..685]
 r1276: [680..681]
 r1277: [674..675]
 r1278: [666..669]
 r1279: [666..667]
 r1280: [662..663]
 r1281: [656..657]
 r1282: [648..649]
 r1283: [640..643]
 r1284: [640..641]
 r1285: [636..637]
 r1286: [632..633]
 r1287: [624..625]
 r1288: [616..619]
 r1289: [616..617]
 r1290: [612..613]
 r1291: [606..607]
 r1292: [598..599]
 r1293: [590..593]
 r1294: [590..591]
 r1295: [586..587]
 r1296: [582..583]
 r1297: [574..575]
 r1298: [566..569]
 r1299: [566..567]
 r1300: [558..559]
 r1301: [560..561]
 r1302: [556..557]
 r1303: [552..553]
 r1304: [546..547]
 r1305: [538..541]
 r1306: [538..539]
 r1307: [536..537]
 r1308: [532..533]
 r1309: [526..527]
 r1310: [518..521]
 r1311: [518..519]
 r1312: [514..515]
 r1313: [510..511]
 r1314: [502..503]
 r1315: [494..497]
 r1316: [494..495]
 r1317: [490..491]
 r1318: [486..487]
 r1319: [478..479]
 r1320: [470..473]
 r1321: [470..471]
 r1322: [464..465]
 r1323: [458..459]
 r1324: [452..453]
 r1325: [444..447]
 r1326: [444..445]
 r1327: [442..443]
 r1328: [436..437]
 r1329: [430..431]
 r1330: [422..425]
 r1331: [422..423]
 r1332: [418..419]
 r1333: [412..413]
 r1334: [404..405]
 r1335: [396..399]
 r1336: [396..397]
 r1337: [392..393]
 r1338: [386..387]
 r1339: [378..379]
 r1340: [370..373]
 r1341: [370..371]
 r1342: [356..357]
 r1343: [358..359]
 r1344: [352..353]
 r1345: [354..355]
 r1346: [348..349]
 r1347: [350..351]
 r1348: [346..347]
 r1349: [340..341]
 r1350: [334..335]
 r1351: [326..329]
 r1352: [326..327]
 r1353: [324..325]
 r1354: [320..321]
 r1355: [314..315]
 r1356: [306..309]
 r1357: [306..307]
 r1358: [302..303]
 r1359: [300..301]
 r1360: [296..297]
 r1361: [290..291]
 r1362: [282..285]
 r1363: [282..283]
 r1364: [280..281]
 r1365: [274..275]
 r1366: [268..269]
 r1367: [260..263]
 r1368: [260..261]
 r1369: [256..257]
 r1370: [254..255]
 r1371: [248..249]
 r1372: [242..243]
 r1373: [234..237]
 r1374: [234..235]
 r1375: [232..233]
 r1376: [228..229]
 r1377: [222..223]
 r1378: [214..217]
 r1379: [214..215]
 r1380: [210..211]
 r1381: [208..209]
 r1382: [204..205]
 r1383: [198..199]
 r1384: [190..193]
 r1385: [190..191]
 r1386: [188..189]
 r1387: [182..183]
 r1388: [176..177]
 r1389: [168..171]
 r1390: [168..169]
 r1391: [164..165]
 r1392: [162..163]
 r1393: [158..159]
 r1394: [152..153]
 r1395: [144..147]
 r1396: [144..145]
 r1397: [142..143]
 r1398: [138..139]
 r1399: [132..133]
 r1400: [126..127]
 r1401: [118..119]
 r1402: [106..107]
 r1403: [102..103]
 r1404: [96..97]
 r1405: [88..91]
 r1406: [88..89]
 r1407: [86..87]
 r1408: [82..83]
 r1409: [76..77]
 r1410: [70..71]
 r1411: [62..63]
 r1412: [44..45]
 r1413: [36..37]
 r1414: [32..33]
 r1415: [26..27]
 r1416: [24..25]
 r1417: [20..21]
 r1418: [12..13]
 r1419: [1776..1777]
 r1420: [1758..1759]
 r1421: [1488..1489]
 r1422: [1428..1429]
 r1423: [1420..1421]
 r1424: [1412..1413]
 r1425: [1404..1405]
 r1426: [1470..1471]
 r1427: [1462..1463]
 r1428: [1454..1455]
 r1429: [1446..1447]
 r1430: [362..363]
 r1431: [120..121]
 r1432: [64..65]
 r1433: [38..39]
 r1434: [1406..1411]
 r1435: [1422..1427]
 r1436: [1448..1453]
 r1437: [1464..1469]

********** Assignment #1: **********

	 Assigning to 1434 (cl=SSE_REGS, orig=297, freq=2000, tfirst=1424, tfreq=4000)...
	 Assigning to 1424 (cl=SSE_REGS, orig=296, freq=3000, tfirst=1424, tfreq=4000)...
	   Assign 21 to reload r1424 (freq=3000)
	Hard reg 21 is preferable by r1434 with profit 1000
	Hard reg 21 is preferable by r1425 with profit 1500
	 Assigning to 1425 (cl=SSE_REGS, orig=297, freq=3000, tfirst=1424, tfreq=4000)...
	   Assign 25 to reload r1425 (freq=3000)
	Hard reg 21 is preferable by r1434 with profit 1000
	Hard reg 25 is preferable by r1434 with profit 1000
	 Assigning to 1436 (cl=SSE_REGS, orig=305, freq=2000, tfirst=1428, tfreq=4000)...
	 Assigning to 1428 (cl=SSE_REGS, orig=304, freq=3000, tfirst=1428, tfreq=4000)...
	   Assign 21 to reload r1428 (freq=3000)
	Hard reg 21 is preferable by r1436 with profit 1000
	Hard reg 21 is preferable by r1429 with profit 1500
	 Assigning to 1429 (cl=SSE_REGS, orig=305, freq=3000, tfirst=1428, tfreq=4000)...
	   Assign 26 to reload r1429 (freq=3000)
	Hard reg 21 is preferable by r1436 with profit 1000
	Hard reg 26 is preferable by r1436 with profit 1000
	 Assigning to 1419 (cl=SSE_REGS, orig=185, freq=3000, tfirst=1419, tfreq=3000)...
	   Assign 22 to reload r1419 (freq=3000)
	 Assigning to 1420 (cl=SSE_REGS, orig=190, freq=3000, tfirst=1420, tfreq=3000)...
	   Assign 22 to reload r1420 (freq=3000)
	 Assigning to 1421 (cl=SSE_REGS, orig=1074, freq=3000, tfirst=1421, tfreq=3000)...
	   Assign 22 to reload r1421 (freq=3000)
	 Assigning to 1435 (cl=SSE_REGS, orig=293, freq=2000, tfirst=1422, tfreq=3000)...
	 Assigning to 1422 (cl=SSE_REGS, orig=292, freq=3000, tfirst=1422, tfreq=3000)...
	   Assign 21 to reload r1422 (freq=3000)
	Hard reg 21 is preferable by r1435 with profit 1000
	Hard reg 21 is preferable by r1423 with profit 500
	 Assigning to 1423 (cl=SSE_REGS, orig=293, freq=2000, tfirst=1422, tfreq=3000)...
	   Assign 27 to optional reload r1423 (freq=2000)
	Hard reg 21 is preferable by r1435 with profit 1000
	Hard reg 27 is preferable by r1435 with profit 1000
	 Assigning to 1437 (cl=SSE_REGS, orig=301, freq=2000, tfirst=1426, tfreq=3000)...
	 Assigning to 1426 (cl=SSE_REGS, orig=300, freq=3000, tfirst=1426, tfreq=3000)...
	   Assign 21 to reload r1426 (freq=3000)
	Hard reg 21 is preferable by r1437 with profit 1000
	Hard reg 21 is preferable by r1427 with profit 500
	 Assigning to 1427 (cl=SSE_REGS, orig=301, freq=2000, tfirst=1426, tfreq=3000)...
	   Assign 28 to optional reload r1427 (freq=2000)
	Hard reg 21 is preferable by r1437 with profit 1000
	Hard reg 28 is preferable by r1437 with profit 1000
	 Assigning to 1430 (cl=SSE_REGS, orig=719, freq=3000, tfirst=1430, tfreq=3000)...
	   Assign 23 to reload r1430 (freq=3000)
	 Assigning to 1431 (cl=SSE_REGS, orig=862, freq=3000, tfirst=1431, tfreq=3000)...
	   Assign 22 to reload r1431 (freq=3000)
	 Assigning to 1432 (cl=SSE_REGS, orig=888, freq=3000, tfirst=1432, tfreq=3000)...
	   Assign 23 to reload r1432 (freq=3000)
	 Assigning to 1433 (cl=SSE_REGS, orig=898, freq=3000, tfirst=1433, tfreq=3000)...
	   Assign 21 to reload r1433 (freq=3000)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 4 (0.00%)
   Insn after restoring regs:
 1687: r1425:SF=r297:SF
      REG_DEAD r297:SF
   Insn after restoring regs:
 1686: r297:SF=r1424:SF
      REG_DEAD r1424:SF
   Insn after restoring regs:
 1684: r1423:SF=r293:SF
      REG_DEAD r293:SF
   Insn after restoring regs:
 1683: r293:SF=r1422:SF
      REG_DEAD r1422:SF
   Insn after restoring regs:
 1694: r1429:SF=r305:SF
      REG_DEAD r305:SF
   Insn after restoring regs:
 1693: r305:SF=r1428:SF
      REG_DEAD r1428:SF
   Insn after restoring regs:
 1691: r1427:SF=r301:SF
      REG_DEAD r301:SF
   Insn after restoring regs:
 1690: r301:SF=r1426:SF
      REG_DEAD r1426:SF
Remove optional reload reg 1423
  Restoring original insn:
  520: r1081:SF=r295:SF+r293:SF
      REG_DEAD r293:SF
      REG_DEAD r295:SF
  Deleting move 1684
 1684: r1423:SF=r293:SF
      REG_DEAD r293:SF
deleting insn with uid = 1684.
Remove optional reload reg 1427
  Restoring original insn:
  558: r1094:SF=r303:SF+r301:SF
      REG_DEAD r301:SF
      REG_DEAD r303:SF
  Deleting move 1691
 1691: r1427:SF=r301:SF
      REG_DEAD r301:SF
deleting insn with uid = 1691.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 558:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1438 from oldreg=301, assigning class SSE_REGS to r1438
      Making reload reg 1438 for reg 301 optional
  558: r1094:SF=r303:SF+r1438:SF
      REG_DEAD r301:SF
      REG_DEAD r303:SF
    Inserting insn reload before:
 1708: r1438:SF=r301:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1708:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 520:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1439 from oldreg=293, assigning class SSE_REGS to r1439
      Making reload reg 1439 for reg 293 optional
  520: r1081:SF=r295:SF+r1439:SF
      REG_DEAD r293:SF
      REG_DEAD r295:SF
    Inserting insn reload before:
 1709: r1439:SF=r293:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1709:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 49
EBB 7
EBB 48
EBB 8
EBB 9 10
EBB 50
EBB 11
EBB 12 13
EBB 14 15
EBB 16 17 18 19
EBB 20
EBB 53
EBB 21
EBB 52
EBB 22
EBB 51
EBB 23
EBB 24 25
EBB 26 27 28 29
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1440 from oldreg=297, assigning class SSE_REGS to inheritance r1440
    Original reg change 297->1440 (bb29):
 1686: r1440:SF=r1424:SF
      REG_DEAD r1424:SF
    Add original<-inheritance after:
 1710: r297:SF=r1440:SF

    Inheritance reuse change 297->1440 (bb29):
 1687: r1425:SF=r1440:SF
      REG_DEAD r1440:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1441 from oldreg=293, assigning class SSE_REGS to inheritance r1441
    Original reg change 293->1441 (bb29):
 1683: r1441:SF=r1422:SF
      REG_DEAD r1422:SF
    Add original<-inheritance after:
 1711: r293:SF=r1441:SF

    Inheritance reuse change 293->1441 (bb29):
 1709: r1439:SF=r1441:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1710: r297:SF=r1440:SF
deleting insn with uid = 1710.
	    Removing dead insn:
  1711: r293:SF=r1441:SF
deleting insn with uid = 1711.
EBB 30
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1442 from oldreg=305, assigning class SSE_REGS to inheritance r1442
    Original reg change 305->1442 (bb30):
 1693: r1442:SF=r1428:SF
      REG_DEAD r1428:SF
    Add original<-inheritance after:
 1712: r305:SF=r1442:SF

    Inheritance reuse change 305->1442 (bb30):
 1694: r1429:SF=r1442:SF
      REG_DEAD r1442:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1443 from oldreg=301, assigning class SSE_REGS to inheritance r1443
    Original reg change 301->1443 (bb30):
 1690: r1443:SF=r1426:SF
      REG_DEAD r1426:SF
    Add original<-inheritance after:
 1713: r301:SF=r1443:SF

    Inheritance reuse change 301->1443 (bb30):
 1708: r1438:SF=r1443:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1712: r305:SF=r1442:SF
deleting insn with uid = 1712.
	    Removing dead insn:
  1713: r301:SF=r1443:SF
deleting insn with uid = 1713.
EBB 31
EBB 32
EBB 33
EBB 55
EBB 34
EBB 54
EBB 35
EBB 36 37
EBB 38 39
EBB 40 41 42 43
EBB 44
EBB 58
EBB 45
EBB 57
EBB 46
EBB 56
EBB 47

********** Pseudo live ranges #2: **********

  BB 47
   Insn 1613: point = 0, n_alt = -1
  BB 56
   Insn 1668: point = 0, n_alt = -1
  BB 36
   Insn 646: point = 0, n_alt = -1
   Insn 645: point = 0, n_alt = 0
   Insn 644: point = 1, n_alt = 0
   Insn 643: point = 3, n_alt = 0
   Insn 642: point = 4, n_alt = 0
  BB 46
   Insn 1640: point = 4, n_alt = -1
   Insn 1588: point = 4, n_alt = 1
  BB 57
   Insn 1671: point = 4, n_alt = -1
  BB 38
   Insn 656: point = 4, n_alt = -1
   Insn 655: point = 4, n_alt = 0
   Insn 654: point = 5, n_alt = 0
   Insn 653: point = 7, n_alt = 0
   Insn 652: point = 8, n_alt = 0
  BB 45
   Insn 1638: point = 9, n_alt = -1
   Insn 1582: point = 9, n_alt = 1
  BB 58
   Insn 1674: point = 10, n_alt = -1
  BB 40
   Insn 664: point = 11, n_alt = -1
   Insn 663: point = 11, n_alt = 0
   Insn 662: point = 12, n_alt = 0
   Insn 661: point = 14, n_alt = 0
   Insn 660: point = 15, n_alt = 0
  BB 44
   Insn 1636: point = 16, n_alt = -1
   Insn 1576: point = 16, n_alt = 1
  BB 43
   Insn 1573: point = 17, n_alt = 8
   Insn 1572: point = 18, n_alt = 3
   Insn 1571: point = 19, n_alt = 1
   Insn 1570: point = 21, n_alt = 3
   Insn 1569: point = 23, n_alt = 0
   Insn 1568: point = 25, n_alt = 1
   Insn 1567: point = 27, n_alt = 0
   Insn 1566: point = 28, n_alt = 0
   Insn 1565: point = 30, n_alt = 1
   Insn 1564: point = 32, n_alt = 0
   Insn 1563: point = 33, n_alt = 7
   Insn 1562: point = 35, n_alt = 3
   Insn 1561: point = 36, n_alt = 3
   Insn 1560: point = 38, n_alt = 0
   Insn 1559: point = 40, n_alt = 1
   Insn 1558: point = 42, n_alt = 0
   Insn 1557: point = 43, n_alt = 0
   Insn 1556: point = 45, n_alt = 1
   Insn 1555: point = 47, n_alt = 0
   Insn 1703: point = 48, n_alt = -2
	Hard reg 22 is preferable by r1433 with profit 1000
   Insn 1554: point = 50, n_alt = 2
   Insn 1702: point = 51, n_alt = -2
	Hard reg 22 is preferable by r1433 with profit 1000
	Hard reg 21 is preferable by r1433 with profit 1000
   Insn 1553: point = 53, n_alt = -2
   Insn 1552: point = 55, n_alt = 1
   Insn 1551: point = 57, n_alt = 7
   Insn 1550: point = 58, n_alt = 1
   Insn 1549: point = 60, n_alt = -2
   Insn 1548: point = 62, n_alt = 2
   Insn 1547: point = 64, n_alt = 1
   Insn 1546: point = 66, n_alt = -2
   Insn 1545: point = 68, n_alt = 1
   Insn 1544: point = 70, n_alt = 1
   Insn 1543: point = 72, n_alt = -2
   Insn 1542: point = 74, n_alt = 2
   Insn 1541: point = 76, n_alt = 7
   Insn 1701: point = 77, n_alt = -2
	Hard reg 23 is preferable by r1432 with profit 1000
   Insn 1540: point = 79, n_alt = 1
   Insn 1700: point = 79, n_alt = -2
	Hard reg 23 is preferable by r1432 with profit 1000
	Hard reg 22 is preferable by r1432 with profit 1000
   Insn 1539: point = 81, n_alt = -2
   Insn 1538: point = 83, n_alt = 2
   Insn 1537: point = 85, n_alt = 7
   Insn 1536: point = 86, n_alt = -2
   Insn 1535: point = 88, n_alt = 2
   Insn 1534: point = 90, n_alt = 7
   Insn 1533: point = 92, n_alt = 3
   Insn 1532: point = 93, n_alt = 3
   Insn 1531: point = 95, n_alt = 0
   Insn 1530: point = 97, n_alt = 1
   Insn 1529: point = 99, n_alt = 0
   Insn 1528: point = 100, n_alt = 0
   Insn 1527: point = 102, n_alt = 1
   Insn 1526: point = 104, n_alt = 0
   Insn 1525: point = 105, n_alt = 7
   Insn 1524: point = 107, n_alt = 0
   Insn 1523: point = 109, n_alt = 4
   Insn 1522: point = 110, n_alt = 3
   Insn 1521: point = 112, n_alt = 0
   Insn 1520: point = 114, n_alt = 1
   Insn 1519: point = 116, n_alt = 0
   Insn 1518: point = 117, n_alt = 0
   Insn 1517: point = 119, n_alt = 0
   Insn 1516: point = 121, n_alt = 1
   Insn 1515: point = 123, n_alt = 0
   Insn 1514: point = 124, n_alt = 1
   Insn 1513: point = 126, n_alt = 1
   Insn 1512: point = 128, n_alt = 0
   Insn 1511: point = 129, n_alt = 1
   Insn 1510: point = 131, n_alt = -2
   Insn 1509: point = 133, n_alt = 1
   Insn 1508: point = 135, n_alt = 1
   Insn 1507: point = 137, n_alt = -2
   Insn 1506: point = 139, n_alt = 2
   Insn 1505: point = 141, n_alt = 7
   Insn 1699: point = 142, n_alt = -2
	Hard reg 22 is preferable by r1431 with profit 1000
   Insn 1504: point = 144, n_alt = 1
   Insn 1698: point = 144, n_alt = -2
	Hard reg 22 is preferable by r1431 with profit 1000
	Hard reg 21 is preferable by r1431 with profit 1000
   Insn 1503: point = 146, n_alt = -2
   Insn 1502: point = 148, n_alt = 2
   Insn 1501: point = 150, n_alt = 7
   Insn 1500: point = 151, n_alt = -2
   Insn 1499: point = 153, n_alt = 2
   Insn 1498: point = 155, n_alt = 7
   Insn 1497: point = 157, n_alt = 3
   Insn 1496: point = 158, n_alt = 3
   Insn 1495: point = 160, n_alt = 0
   Insn 1494: point = 162, n_alt = 1
   Insn 1493: point = 164, n_alt = 0
   Insn 1492: point = 165, n_alt = 0
   Insn 1491: point = 167, n_alt = 1
   Insn 1490: point = 169, n_alt = 0
   Insn 1489: point = 170, n_alt = 7
   Insn 1488: point = 172, n_alt = 0
   Insn 1487: point = 174, n_alt = 4
   Insn 1486: point = 175, n_alt = 3
   Insn 1485: point = 177, n_alt = 0
   Insn 1484: point = 179, n_alt = 1
   Insn 1483: point = 181, n_alt = 0
   Insn 1482: point = 182, n_alt = 0
   Insn 1481: point = 184, n_alt = 0
   Insn 1480: point = 186, n_alt = 1
   Insn 1479: point = 188, n_alt = 0
   Insn 1478: point = 189, n_alt = 1
   Insn 1477: point = 191, n_alt = 1
   Insn 1476: point = 193, n_alt = 0
   Insn 1475: point = 194, n_alt = 8
   Insn 1474: point = 195, n_alt = 2
   Insn 1473: point = 197, n_alt = 7
   Insn 1472: point = 199, n_alt = 0
   Insn 1471: point = 201, n_alt = 4
   Insn 1470: point = 202, n_alt = 3
   Insn 1469: point = 204, n_alt = 0
   Insn 1468: point = 206, n_alt = 1
   Insn 1467: point = 208, n_alt = 0
   Insn 1466: point = 209, n_alt = 0
   Insn 1465: point = 211, n_alt = 0
   Insn 1464: point = 213, n_alt = 1
   Insn 1463: point = 215, n_alt = 0
   Insn 1462: point = 216, n_alt = 1
   Insn 1461: point = 218, n_alt = 1
   Insn 1460: point = 220, n_alt = 0
   Insn 1459: point = 222, n_alt = 0
   Insn 1458: point = 223, n_alt = 7
   Insn 1457: point = 225, n_alt = 0
   Insn 1456: point = 227, n_alt = 4
   Insn 1455: point = 228, n_alt = 3
   Insn 1454: point = 230, n_alt = 0
   Insn 1453: point = 232, n_alt = 1
   Insn 1452: point = 234, n_alt = 0
   Insn 1451: point = 235, n_alt = 0
   Insn 1450: point = 237, n_alt = 0
   Insn 1449: point = 239, n_alt = 1
   Insn 1448: point = 241, n_alt = 0
   Insn 1447: point = 242, n_alt = 1
   Insn 1446: point = 244, n_alt = 1
   Insn 1445: point = 246, n_alt = 0
   Insn 1444: point = 247, n_alt = 8
   Insn 1443: point = 248, n_alt = 2
   Insn 1442: point = 250, n_alt = 7
   Insn 1441: point = 252, n_alt = 0
   Insn 1440: point = 254, n_alt = 4
   Insn 1439: point = 255, n_alt = 3
   Insn 1438: point = 257, n_alt = 0
   Insn 1437: point = 259, n_alt = 1
   Insn 1436: point = 261, n_alt = 0
   Insn 1435: point = 262, n_alt = 0
   Insn 1434: point = 264, n_alt = 0
   Insn 1433: point = 266, n_alt = 1
   Insn 1432: point = 268, n_alt = 0
   Insn 1431: point = 269, n_alt = 1
   Insn 1430: point = 271, n_alt = 1
   Insn 1429: point = 273, n_alt = 0
   Insn 1428: point = 274, n_alt = 7
   Insn 1427: point = 276, n_alt = 0
   Insn 1426: point = 278, n_alt = 4
   Insn 1425: point = 279, n_alt = 3
   Insn 1424: point = 281, n_alt = 0
   Insn 1423: point = 283, n_alt = 1
   Insn 1422: point = 285, n_alt = 0
   Insn 1421: point = 286, n_alt = 0
   Insn 1420: point = 288, n_alt = 0
   Insn 1419: point = 290, n_alt = 1
   Insn 1418: point = 292, n_alt = 0
   Insn 1417: point = 293, n_alt = 1
   Insn 1416: point = 295, n_alt = 1
   Insn 1415: point = 297, n_alt = 0
   Insn 1414: point = 299, n_alt = 0
   Insn 1413: point = 300, n_alt = 8
   Insn 1412: point = 301, n_alt = 2
   Insn 1411: point = 303, n_alt = 7
   Insn 1410: point = 305, n_alt = 0
   Insn 1409: point = 307, n_alt = 4
   Insn 1408: point = 308, n_alt = 3
   Insn 1407: point = 310, n_alt = 0
   Insn 1406: point = 312, n_alt = 1
   Insn 1405: point = 314, n_alt = 0
   Insn 1404: point = 315, n_alt = 0
   Insn 1403: point = 317, n_alt = 0
   Insn 1402: point = 319, n_alt = 1
   Insn 1401: point = 321, n_alt = 0
   Insn 1400: point = 322, n_alt = 1
   Insn 1399: point = 324, n_alt = 1
   Insn 1398: point = 326, n_alt = 0
   Insn 1397: point = 328, n_alt = 0
   Insn 1396: point = 329, n_alt = 7
   Insn 1395: point = 331, n_alt = 0
   Insn 1394: point = 333, n_alt = 4
   Insn 1393: point = 334, n_alt = 3
   Insn 1392: point = 336, n_alt = 0
   Insn 1391: point = 338, n_alt = 1
   Insn 1390: point = 340, n_alt = 0
   Insn 1389: point = 341, n_alt = 0
   Insn 1388: point = 343, n_alt = 0
   Insn 1387: point = 345, n_alt = 1
   Insn 1386: point = 347, n_alt = 0
   Insn 1385: point = 348, n_alt = 1
   Insn 1384: point = 350, n_alt = 1
   Insn 1383: point = 352, n_alt = 0
   Insn 1382: point = 353, n_alt = 8
   Insn 1381: point = 354, n_alt = 2
   Insn 1380: point = 356, n_alt = 7
   Insn 1379: point = 358, n_alt = 0
   Insn 1378: point = 360, n_alt = 4
   Insn 1377: point = 361, n_alt = 3
   Insn 1376: point = 363, n_alt = 0
   Insn 1375: point = 365, n_alt = 1
   Insn 1374: point = 367, n_alt = 0
   Insn 1373: point = 368, n_alt = 0
   Insn 1372: point = 370, n_alt = 0
   Insn 1371: point = 372, n_alt = 1
   Insn 1370: point = 374, n_alt = 0
   Insn 1369: point = 375, n_alt = 1
   Insn 1368: point = 377, n_alt = 1
   Insn 1367: point = 379, n_alt = 0
   Insn 1366: point = 380, n_alt = 7
   Insn 1365: point = 382, n_alt = 0
   Insn 1364: point = 384, n_alt = 4
   Insn 1363: point = 385, n_alt = 3
   Insn 1362: point = 387, n_alt = 0
   Insn 1361: point = 389, n_alt = 1
   Insn 1360: point = 391, n_alt = 0
   Insn 1359: point = 392, n_alt = 0
   Insn 1358: point = 394, n_alt = 0
   Insn 1357: point = 396, n_alt = 1
   Insn 1356: point = 398, n_alt = 0
   Insn 1355: point = 399, n_alt = 1
   Insn 1354: point = 401, n_alt = 1
   Insn 1353: point = 403, n_alt = 0
   Insn 1352: point = 405, n_alt = 0
   Insn 1351: point = 406, n_alt = 8
   Insn 1350: point = 407, n_alt = 2
   Insn 1349: point = 409, n_alt = 7
   Insn 1348: point = 410, n_alt = 8
   Insn 1347: point = 411, n_alt = 2
   Insn 1346: point = 413, n_alt = 7
   Insn 1345: point = 414, n_alt = 8
   Insn 1344: point = 415, n_alt = 1
   Insn 1343: point = 417, n_alt = 7
   Insn 1342: point = 418, n_alt = -2
   Insn 1697: point = 420, n_alt = -2
	Hard reg 21 is preferable by r1430 with profit 1000
   Insn 1341: point = 422, n_alt = 2
   Insn 1696: point = 423, n_alt = -2
	Hard reg 21 is preferable by r1430 with profit 1000
	Hard reg 23 is preferable by r1430 with profit 1000
   Insn 1340: point = 425, n_alt = -2
   Insn 1339: point = 427, n_alt = 1
   Insn 1338: point = 429, n_alt = 7
   Insn 1337: point = 431, n_alt = 0
   Insn 1336: point = 433, n_alt = 4
   Insn 1335: point = 434, n_alt = 3
   Insn 1334: point = 436, n_alt = 0
   Insn 1333: point = 438, n_alt = 1
   Insn 1332: point = 440, n_alt = 0
   Insn 1331: point = 441, n_alt = 0
   Insn 1330: point = 443, n_alt = 0
   Insn 1329: point = 445, n_alt = 1
   Insn 1328: point = 447, n_alt = 0
   Insn 1327: point = 449, n_alt = 0
   Insn 1326: point = 450, n_alt = 1
   Insn 1325: point = 452, n_alt = 1
   Insn 1324: point = 454, n_alt = 0
   Insn 1323: point = 456, n_alt = 0
   Insn 1322: point = 457, n_alt = 1
   Insn 1321: point = 459, n_alt = 7
   Insn 1320: point = 461, n_alt = 0
   Insn 1319: point = 463, n_alt = 4
   Insn 1318: point = 464, n_alt = 3
   Insn 1317: point = 466, n_alt = 0
   Insn 1316: point = 468, n_alt = 1
   Insn 1315: point = 470, n_alt = 0
   Insn 1314: point = 471, n_alt = 0
   Insn 1313: point = 473, n_alt = 0
   Insn 1312: point = 475, n_alt = 1
   Insn 1311: point = 477, n_alt = 0
   Insn 1310: point = 479, n_alt = 0
   Insn 1309: point = 480, n_alt = 1
   Insn 1308: point = 482, n_alt = 1
   Insn 1307: point = 484, n_alt = 0
   Insn 1306: point = 486, n_alt = 0
   Insn 1305: point = 487, n_alt = 1
   Insn 1304: point = 489, n_alt = 7
   Insn 1303: point = 491, n_alt = 0
   Insn 1302: point = 493, n_alt = 4
   Insn 1301: point = 494, n_alt = 3
   Insn 1300: point = 496, n_alt = 0
   Insn 1299: point = 498, n_alt = 1
   Insn 1298: point = 500, n_alt = 0
   Insn 1297: point = 501, n_alt = 0
   Insn 1296: point = 503, n_alt = 0
   Insn 1295: point = 505, n_alt = 1
   Insn 1294: point = 507, n_alt = 0
   Insn 1293: point = 508, n_alt = 1
   Insn 1292: point = 510, n_alt = 1
   Insn 1291: point = 512, n_alt = 0
   Insn 1290: point = 514, n_alt = 0
   Insn 1289: point = 515, n_alt = 7
   Insn 1288: point = 517, n_alt = 0
   Insn 1287: point = 519, n_alt = 4
   Insn 1286: point = 520, n_alt = 3
   Insn 1285: point = 522, n_alt = 0
   Insn 1284: point = 524, n_alt = 1
   Insn 1283: point = 526, n_alt = 0
   Insn 1282: point = 527, n_alt = 0
   Insn 1281: point = 529, n_alt = 0
   Insn 1280: point = 531, n_alt = 1
   Insn 1279: point = 533, n_alt = 0
   Insn 1278: point = 534, n_alt = 1
   Insn 1277: point = 536, n_alt = 1
   Insn 1276: point = 538, n_alt = 0
   Insn 1275: point = 540, n_alt = 0
   Insn 1274: point = 541, n_alt = -2
   Insn 1273: point = 543, n_alt = 1
   Insn 1272: point = 545, n_alt = 7
   Insn 1271: point = 547, n_alt = 0
   Insn 1270: point = 549, n_alt = 4
   Insn 1269: point = 550, n_alt = 3
   Insn 1268: point = 552, n_alt = 0
   Insn 1267: point = 554, n_alt = 1
   Insn 1266: point = 556, n_alt = 0
   Insn 1265: point = 557, n_alt = 0
   Insn 1264: point = 559, n_alt = 0
   Insn 1263: point = 561, n_alt = 1
   Insn 1262: point = 563, n_alt = 0
   Insn 1261: point = 565, n_alt = 0
   Insn 1260: point = 566, n_alt = 1
   Insn 1259: point = 568, n_alt = 1
   Insn 1258: point = 570, n_alt = 0
   Insn 1257: point = 571, n_alt = 1
   Insn 1256: point = 573, n_alt = 7
   Insn 1255: point = 575, n_alt = 0
   Insn 1254: point = 577, n_alt = 4
   Insn 1253: point = 578, n_alt = 3
   Insn 1252: point = 580, n_alt = 0
   Insn 1251: point = 582, n_alt = 1
   Insn 1250: point = 584, n_alt = 0
   Insn 1249: point = 585, n_alt = 0
   Insn 1248: point = 587, n_alt = 0
   Insn 1247: point = 589, n_alt = 1
   Insn 1246: point = 591, n_alt = 0
   Insn 1245: point = 593, n_alt = 0
   Insn 1244: point = 594, n_alt = 1
   Insn 1243: point = 596, n_alt = 1
   Insn 1242: point = 598, n_alt = 0
   Insn 1241: point = 599, n_alt = 1
   Insn 1240: point = 601, n_alt = 7
   Insn 1239: point = 603, n_alt = 0
   Insn 1238: point = 605, n_alt = 4
   Insn 1237: point = 606, n_alt = 3
   Insn 1236: point = 608, n_alt = 0
   Insn 1235: point = 610, n_alt = 1
   Insn 1234: point = 612, n_alt = 0
   Insn 1233: point = 613, n_alt = 0
   Insn 1232: point = 615, n_alt = 0
   Insn 1231: point = 617, n_alt = 1
   Insn 1230: point = 619, n_alt = 0
   Insn 1229: point = 620, n_alt = 1
   Insn 1228: point = 622, n_alt = 1
   Insn 1227: point = 624, n_alt = 0
   Insn 1226: point = 625, n_alt = 7
   Insn 1225: point = 627, n_alt = 0
   Insn 1224: point = 629, n_alt = 4
   Insn 1223: point = 630, n_alt = 3
   Insn 1222: point = 632, n_alt = 0
   Insn 1221: point = 634, n_alt = 1
   Insn 1220: point = 636, n_alt = 0
   Insn 1219: point = 637, n_alt = 0
   Insn 1218: point = 639, n_alt = 0
   Insn 1217: point = 641, n_alt = 1
   Insn 1216: point = 643, n_alt = 0
   Insn 1215: point = 644, n_alt = 1
   Insn 1214: point = 646, n_alt = 1
   Insn 1213: point = 648, n_alt = 0
   Insn 1212: point = 649, n_alt = 8
   Insn 1211: point = 650, n_alt = 1
   Insn 1210: point = 652, n_alt = 7
   Insn 1209: point = 653, n_alt = -2
   Insn 1208: point = 655, n_alt = 1
   Insn 1207: point = 657, n_alt = 7
   Insn 1206: point = 659, n_alt = 0
   Insn 1205: point = 661, n_alt = 4
   Insn 1204: point = 662, n_alt = 3
   Insn 1203: point = 664, n_alt = 0
   Insn 1202: point = 666, n_alt = 1
   Insn 1201: point = 668, n_alt = 0
   Insn 1200: point = 669, n_alt = 0
   Insn 1199: point = 671, n_alt = 0
   Insn 1198: point = 673, n_alt = 1
   Insn 1197: point = 675, n_alt = 0
   Insn 1196: point = 677, n_alt = 0
   Insn 1195: point = 678, n_alt = 1
   Insn 1194: point = 680, n_alt = 1
   Insn 1193: point = 682, n_alt = 0
   Insn 1192: point = 683, n_alt = 1
   Insn 1191: point = 685, n_alt = 7
   Insn 1190: point = 687, n_alt = 0
   Insn 1189: point = 689, n_alt = 4
   Insn 1188: point = 690, n_alt = 3
   Insn 1187: point = 692, n_alt = 0
   Insn 1186: point = 694, n_alt = 1
   Insn 1185: point = 696, n_alt = 0
   Insn 1184: point = 697, n_alt = 0
   Insn 1183: point = 699, n_alt = 0
   Insn 1182: point = 701, n_alt = 1
   Insn 1181: point = 703, n_alt = 0
   Insn 1180: point = 705, n_alt = 0
   Insn 1179: point = 706, n_alt = 1
   Insn 1178: point = 708, n_alt = 1
   Insn 1177: point = 710, n_alt = 0
   Insn 1176: point = 712, n_alt = 0
   Insn 1175: point = 713, n_alt = 1
   Insn 1174: point = 715, n_alt = 7
   Insn 1173: point = 717, n_alt = 0
   Insn 1172: point = 719, n_alt = 4
   Insn 1171: point = 720, n_alt = 3
   Insn 1170: point = 722, n_alt = 0
   Insn 1169: point = 724, n_alt = 1
   Insn 1168: point = 726, n_alt = 0
   Insn 1167: point = 727, n_alt = 0
   Insn 1166: point = 729, n_alt = 0
   Insn 1165: point = 731, n_alt = 1
   Insn 1164: point = 733, n_alt = 0
   Insn 1163: point = 735, n_alt = 0
   Insn 1162: point = 736, n_alt = 1
   Insn 1161: point = 738, n_alt = 1
   Insn 1160: point = 740, n_alt = 0
   Insn 1159: point = 741, n_alt = 1
   Insn 1158: point = 743, n_alt = 7
   Insn 1157: point = 745, n_alt = 0
   Insn 1156: point = 747, n_alt = 4
   Insn 1155: point = 748, n_alt = 3
   Insn 1154: point = 750, n_alt = 0
   Insn 1153: point = 752, n_alt = 1
   Insn 1152: point = 754, n_alt = 0
   Insn 1151: point = 755, n_alt = 0
   Insn 1150: point = 757, n_alt = 0
   Insn 1149: point = 759, n_alt = 1
   Insn 1148: point = 761, n_alt = 0
   Insn 1147: point = 763, n_alt = 0
   Insn 1146: point = 764, n_alt = 1
   Insn 1145: point = 766, n_alt = 1
   Insn 1144: point = 768, n_alt = 0
   Insn 1143: point = 770, n_alt = 0
   Insn 1142: point = 771, n_alt = 1
   Insn 1141: point = 773, n_alt = 7
   Insn 1140: point = 775, n_alt = 0
   Insn 1139: point = 777, n_alt = 4
   Insn 1138: point = 778, n_alt = 3
   Insn 1137: point = 780, n_alt = 0
   Insn 1136: point = 782, n_alt = 1
   Insn 1135: point = 784, n_alt = 0
   Insn 1134: point = 785, n_alt = 0
   Insn 1133: point = 787, n_alt = 0
   Insn 1132: point = 789, n_alt = 1
   Insn 1131: point = 791, n_alt = 0
   Insn 1130: point = 792, n_alt = 1
   Insn 1129: point = 794, n_alt = 1
   Insn 1128: point = 796, n_alt = 0
   Insn 1127: point = 797, n_alt = 1
   Insn 1126: point = 799, n_alt = 7
   Insn 1125: point = 801, n_alt = 0
   Insn 1124: point = 803, n_alt = 4
   Insn 1123: point = 804, n_alt = 3
   Insn 1122: point = 806, n_alt = 0
   Insn 1121: point = 808, n_alt = 1
   Insn 1120: point = 810, n_alt = 0
   Insn 1119: point = 811, n_alt = 0
   Insn 1118: point = 813, n_alt = 0
   Insn 1117: point = 815, n_alt = 1
   Insn 1116: point = 817, n_alt = 0
   Insn 1115: point = 818, n_alt = 1
   Insn 1114: point = 820, n_alt = 1
   Insn 1113: point = 822, n_alt = 0
   Insn 1112: point = 824, n_alt = 0
   Insn 1111: point = 825, n_alt = 1
   Insn 1110: point = 827, n_alt = 7
   Insn 1109: point = 829, n_alt = 0
   Insn 1108: point = 831, n_alt = 4
   Insn 1107: point = 832, n_alt = 3
   Insn 1106: point = 834, n_alt = 0
   Insn 1105: point = 836, n_alt = 1
   Insn 1104: point = 838, n_alt = 0
   Insn 1103: point = 839, n_alt = 0
   Insn 1102: point = 841, n_alt = 0
   Insn 1101: point = 843, n_alt = 1
   Insn 1100: point = 845, n_alt = 0
   Insn 1099: point = 846, n_alt = 1
   Insn 1098: point = 848, n_alt = 1
   Insn 1097: point = 850, n_alt = 0
   Insn 1096: point = 851, n_alt = 7
   Insn 1095: point = 853, n_alt = 0
   Insn 1094: point = 855, n_alt = 4
   Insn 1093: point = 856, n_alt = 3
   Insn 1092: point = 858, n_alt = 0
   Insn 1091: point = 860, n_alt = 1
   Insn 1090: point = 862, n_alt = 0
   Insn 1089: point = 863, n_alt = 0
   Insn 1088: point = 865, n_alt = 0
   Insn 1087: point = 867, n_alt = 1
   Insn 1086: point = 869, n_alt = 0
   Insn 1085: point = 870, n_alt = 1
   Insn 1084: point = 872, n_alt = 1
   Insn 1083: point = 874, n_alt = 0
   Insn 1082: point = 876, n_alt = 0
   Insn 1081: point = 877, n_alt = 8
   Insn 1080: point = 878, n_alt = 1
   Insn 1079: point = 880, n_alt = 7
   Insn 1078: point = 881, n_alt = -2
   Insn 1077: point = 883, n_alt = 1
   Insn 1076: point = 885, n_alt = 7
   Insn 1075: point = 887, n_alt = 0
   Insn 1074: point = 889, n_alt = 4
   Insn 1073: point = 890, n_alt = 3
   Insn 1072: point = 892, n_alt = 0
   Insn 1071: point = 894, n_alt = 1
   Insn 1070: point = 896, n_alt = 0
   Insn 1069: point = 897, n_alt = 0
   Insn 1068: point = 899, n_alt = 0
   Insn 1067: point = 901, n_alt = 1
   Insn 1066: point = 903, n_alt = 0
   Insn 1065: point = 905, n_alt = 0
   Insn 1064: point = 906, n_alt = 1
   Insn 1063: point = 908, n_alt = 1
   Insn 1062: point = 910, n_alt = 0
   Insn 1061: point = 912, n_alt = 0
   Insn 1060: point = 913, n_alt = 1
   Insn 1059: point = 915, n_alt = 7
   Insn 1058: point = 917, n_alt = 0
   Insn 1057: point = 919, n_alt = 4
   Insn 1056: point = 920, n_alt = 3
   Insn 1055: point = 922, n_alt = 0
   Insn 1054: point = 924, n_alt = 1
   Insn 1053: point = 926, n_alt = 0
   Insn 1052: point = 927, n_alt = 0
   Insn 1051: point = 929, n_alt = 0
   Insn 1050: point = 931, n_alt = 1
   Insn 1049: point = 933, n_alt = 0
   Insn 1048: point = 935, n_alt = 0
   Insn 1047: point = 936, n_alt = 1
   Insn 1046: point = 938, n_alt = 1
   Insn 1045: point = 940, n_alt = 0
   Insn 1044: point = 942, n_alt = 0
   Insn 1043: point = 943, n_alt = 1
   Insn 1042: point = 945, n_alt = 7
   Insn 1041: point = 947, n_alt = 0
   Insn 1040: point = 949, n_alt = 4
   Insn 1039: point = 950, n_alt = 3
   Insn 1038: point = 952, n_alt = 0
   Insn 1037: point = 954, n_alt = 1
   Insn 1036: point = 956, n_alt = 0
   Insn 1035: point = 957, n_alt = 0
   Insn 1034: point = 959, n_alt = 0
   Insn 1033: point = 961, n_alt = 1
   Insn 1032: point = 963, n_alt = 0
   Insn 1031: point = 965, n_alt = 0
   Insn 1030: point = 966, n_alt = 1
   Insn 1029: point = 968, n_alt = 1
   Insn 1028: point = 970, n_alt = 0
   Insn 1027: point = 972, n_alt = 0
   Insn 1026: point = 973, n_alt = 1
   Insn 1025: point = 975, n_alt = 7
   Insn 1024: point = 977, n_alt = 0
   Insn 1023: point = 979, n_alt = 4
   Insn 1022: point = 980, n_alt = 3
   Insn 1021: point = 982, n_alt = 0
   Insn 1020: point = 984, n_alt = 1
   Insn 1019: point = 986, n_alt = 0
   Insn 1018: point = 987, n_alt = 0
   Insn 1017: point = 989, n_alt = 0
   Insn 1016: point = 991, n_alt = 1
   Insn 1015: point = 993, n_alt = 0
   Insn 1014: point = 995, n_alt = 0
   Insn 1013: point = 996, n_alt = 1
   Insn 1012: point = 998, n_alt = 1
   Insn 1011: point = 1000, n_alt = 0
   Insn 1010: point = 1002, n_alt = 0
   Insn 1009: point = 1003, n_alt = 1
   Insn 1008: point = 1005, n_alt = 7
   Insn 1007: point = 1007, n_alt = 0
   Insn 1006: point = 1009, n_alt = 4
   Insn 1005: point = 1010, n_alt = 3
   Insn 1004: point = 1012, n_alt = 0
   Insn 1003: point = 1014, n_alt = 1
   Insn 1002: point = 1016, n_alt = 0
   Insn 1001: point = 1017, n_alt = 0
   Insn 1000: point = 1019, n_alt = 0
   Insn 999: point = 1021, n_alt = 1
   Insn 998: point = 1023, n_alt = 0
   Insn 997: point = 1024, n_alt = 1
   Insn 996: point = 1026, n_alt = 1
   Insn 995: point = 1028, n_alt = 0
   Insn 994: point = 1030, n_alt = 0
   Insn 993: point = 1031, n_alt = 1
   Insn 992: point = 1033, n_alt = 7
   Insn 991: point = 1035, n_alt = 0
   Insn 990: point = 1037, n_alt = 4
   Insn 989: point = 1038, n_alt = 3
   Insn 988: point = 1040, n_alt = 0
   Insn 987: point = 1042, n_alt = 1
   Insn 986: point = 1044, n_alt = 0
   Insn 985: point = 1045, n_alt = 0
   Insn 984: point = 1047, n_alt = 0
   Insn 983: point = 1049, n_alt = 1
   Insn 982: point = 1051, n_alt = 0
   Insn 981: point = 1052, n_alt = 1
   Insn 980: point = 1054, n_alt = 1
   Insn 979: point = 1056, n_alt = 0
   Insn 978: point = 1058, n_alt = 0
   Insn 977: point = 1059, n_alt = 1
   Insn 976: point = 1061, n_alt = 7
   Insn 975: point = 1063, n_alt = 0
   Insn 974: point = 1065, n_alt = 4
   Insn 973: point = 1066, n_alt = 3
   Insn 972: point = 1068, n_alt = 0
   Insn 971: point = 1070, n_alt = 1
   Insn 970: point = 1072, n_alt = 0
   Insn 969: point = 1073, n_alt = 0
   Insn 968: point = 1075, n_alt = 0
   Insn 967: point = 1077, n_alt = 1
   Insn 966: point = 1079, n_alt = 0
   Insn 965: point = 1080, n_alt = 1
   Insn 964: point = 1082, n_alt = 1
   Insn 963: point = 1084, n_alt = 0
   Insn 962: point = 1086, n_alt = 0
   Insn 961: point = 1087, n_alt = 7
   Insn 960: point = 1089, n_alt = 0
   Insn 959: point = 1091, n_alt = 4
   Insn 958: point = 1092, n_alt = 3
   Insn 957: point = 1094, n_alt = 0
   Insn 956: point = 1096, n_alt = 1
   Insn 955: point = 1098, n_alt = 0
   Insn 954: point = 1099, n_alt = 0
   Insn 953: point = 1101, n_alt = 0
   Insn 952: point = 1103, n_alt = 1
   Insn 951: point = 1105, n_alt = 0
   Insn 950: point = 1106, n_alt = 1
   Insn 949: point = 1108, n_alt = 1
   Insn 948: point = 1110, n_alt = 0
   Insn 947: point = 1112, n_alt = 0
  BB 42
   Insn 945: point = 1114, n_alt = -1
   Insn 944: point = 1114, n_alt = 0
   Insn 943: point = 1115, n_alt = 0
   Insn 942: point = 1117, n_alt = 0
   Insn 941: point = 1119, n_alt = 4
   Insn 940: point = 1120, n_alt = 3
   Insn 939: point = 1122, n_alt = 0
   Insn 938: point = 1124, n_alt = 1
   Insn 937: point = 1126, n_alt = 0
   Insn 936: point = 1127, n_alt = 0
   Insn 935: point = 1129, n_alt = 1
   Insn 934: point = 1131, n_alt = 0
  BB 41
   Insn 929: point = 1133, n_alt = -1
   Insn 928: point = 1133, n_alt = 1
   Insn 927: point = 1134, n_alt = 7
   Insn 926: point = 1135, n_alt = 8
   Insn 925: point = 1136, n_alt = 2
   Insn 924: point = 1138, n_alt = 7
   Insn 923: point = 1139, n_alt = 8
   Insn 922: point = 1140, n_alt = 1
   Insn 921: point = 1142, n_alt = 7
   Insn 920: point = 1143, n_alt = -2
   Insn 919: point = 1145, n_alt = 1
   Insn 918: point = 1147, n_alt = 7
   Insn 917: point = 1149, n_alt = 0
   Insn 916: point = 1151, n_alt = 4
   Insn 915: point = 1152, n_alt = 3
   Insn 914: point = 1154, n_alt = 0
   Insn 913: point = 1156, n_alt = 1
   Insn 912: point = 1158, n_alt = 0
   Insn 911: point = 1159, n_alt = 0
   Insn 910: point = 1161, n_alt = 0
   Insn 909: point = 1163, n_alt = 1
   Insn 908: point = 1165, n_alt = 0
   Insn 907: point = 1167, n_alt = 0
   Insn 906: point = 1168, n_alt = 1
   Insn 905: point = 1170, n_alt = 1
   Insn 904: point = 1172, n_alt = 0
   Insn 903: point = 1174, n_alt = 0
   Insn 902: point = 1176, n_alt = 0
   Insn 901: point = 1178, n_alt = 4
   Insn 900: point = 1179, n_alt = 3
   Insn 899: point = 1181, n_alt = 0
   Insn 898: point = 1183, n_alt = 1
   Insn 897: point = 1185, n_alt = 0
   Insn 896: point = 1186, n_alt = 0
   Insn 895: point = 1188, n_alt = 1
   Insn 894: point = 1190, n_alt = 0
   Insn 893: point = 1191, n_alt = 1
   Insn 892: point = 1193, n_alt = 7
   Insn 891: point = 1195, n_alt = 0
   Insn 890: point = 1197, n_alt = 4
   Insn 889: point = 1198, n_alt = 3
   Insn 888: point = 1200, n_alt = 0
   Insn 887: point = 1202, n_alt = 1
   Insn 886: point = 1204, n_alt = 0
   Insn 885: point = 1205, n_alt = 0
   Insn 884: point = 1207, n_alt = 0
   Insn 883: point = 1209, n_alt = 1
   Insn 882: point = 1211, n_alt = 0
   Insn 881: point = 1213, n_alt = 0
   Insn 880: point = 1214, n_alt = 1
   Insn 879: point = 1216, n_alt = 1
   Insn 878: point = 1218, n_alt = 0
   Insn 877: point = 1220, n_alt = 0
   Insn 876: point = 1222, n_alt = 0
   Insn 875: point = 1224, n_alt = 4
   Insn 874: point = 1225, n_alt = 3
   Insn 873: point = 1227, n_alt = 0
   Insn 872: point = 1229, n_alt = 1
   Insn 871: point = 1231, n_alt = 0
   Insn 870: point = 1232, n_alt = 0
   Insn 869: point = 1234, n_alt = 1
   Insn 868: point = 1236, n_alt = 0
   Insn 867: point = 1237, n_alt = 1
   Insn 866: point = 1239, n_alt = 7
   Insn 865: point = 1241, n_alt = 0
   Insn 864: point = 1243, n_alt = 4
   Insn 863: point = 1244, n_alt = 3
   Insn 862: point = 1246, n_alt = 0
   Insn 861: point = 1248, n_alt = 1
   Insn 860: point = 1250, n_alt = 0
   Insn 859: point = 1251, n_alt = 0
   Insn 858: point = 1253, n_alt = 0
   Insn 857: point = 1255, n_alt = 1
   Insn 856: point = 1257, n_alt = 0
   Insn 855: point = 1258, n_alt = 1
   Insn 854: point = 1260, n_alt = 1
   Insn 853: point = 1262, n_alt = 0
   Insn 852: point = 1264, n_alt = 0
   Insn 851: point = 1266, n_alt = 0
   Insn 850: point = 1268, n_alt = 4
   Insn 849: point = 1269, n_alt = 3
   Insn 848: point = 1271, n_alt = 0
   Insn 847: point = 1273, n_alt = 1
   Insn 846: point = 1275, n_alt = 0
   Insn 845: point = 1276, n_alt = 0
   Insn 844: point = 1278, n_alt = 1
   Insn 843: point = 1280, n_alt = 0
   Insn 842: point = 1281, n_alt = 7
   Insn 841: point = 1283, n_alt = 0
   Insn 840: point = 1285, n_alt = 4
   Insn 839: point = 1286, n_alt = 3
   Insn 838: point = 1288, n_alt = 0
   Insn 837: point = 1290, n_alt = 1
   Insn 836: point = 1292, n_alt = 0
   Insn 835: point = 1293, n_alt = 0
   Insn 834: point = 1295, n_alt = 0
   Insn 833: point = 1297, n_alt = 1
   Insn 832: point = 1299, n_alt = 0
   Insn 831: point = 1300, n_alt = 1
   Insn 830: point = 1302, n_alt = 1
   Insn 829: point = 1304, n_alt = 0
   Insn 828: point = 1306, n_alt = 0
   Insn 827: point = 1308, n_alt = 0
   Insn 826: point = 1310, n_alt = 4
   Insn 825: point = 1311, n_alt = 3
   Insn 824: point = 1313, n_alt = 0
   Insn 823: point = 1315, n_alt = 1
   Insn 822: point = 1317, n_alt = 0
   Insn 821: point = 1318, n_alt = 0
   Insn 820: point = 1320, n_alt = 1
   Insn 819: point = 1322, n_alt = 0
   Insn 818: point = 1323, n_alt = 8
   Insn 817: point = 1324, n_alt = 1
   Insn 816: point = 1326, n_alt = 7
   Insn 815: point = 1327, n_alt = -2
   Insn 814: point = 1329, n_alt = 1
   Insn 813: point = 1331, n_alt = 7
   Insn 812: point = 1333, n_alt = 0
   Insn 811: point = 1335, n_alt = 4
   Insn 810: point = 1336, n_alt = 3
   Insn 809: point = 1338, n_alt = 0
   Insn 808: point = 1340, n_alt = 1
   Insn 807: point = 1342, n_alt = 0
   Insn 806: point = 1343, n_alt = 0
   Insn 805: point = 1345, n_alt = 0
   Insn 804: point = 1347, n_alt = 1
   Insn 803: point = 1349, n_alt = 0
   Insn 802: point = 1351, n_alt = 0
   Insn 801: point = 1352, n_alt = 1
   Insn 800: point = 1354, n_alt = 1
   Insn 799: point = 1356, n_alt = 0
   Insn 798: point = 1358, n_alt = 0
   Insn 797: point = 1359, n_alt = 1
   Insn 796: point = 1361, n_alt = 7
   Insn 795: point = 1363, n_alt = 0
   Insn 794: point = 1365, n_alt = 4
   Insn 793: point = 1366, n_alt = 3
   Insn 792: point = 1368, n_alt = 0
   Insn 791: point = 1370, n_alt = 1
   Insn 790: point = 1372, n_alt = 0
   Insn 789: point = 1373, n_alt = 0
   Insn 788: point = 1375, n_alt = 0
   Insn 787: point = 1377, n_alt = 1
   Insn 786: point = 1379, n_alt = 0
   Insn 785: point = 1381, n_alt = 0
   Insn 784: point = 1382, n_alt = 1
   Insn 783: point = 1384, n_alt = 1
   Insn 782: point = 1386, n_alt = 0
   Insn 781: point = 1387, n_alt = 1
   Insn 780: point = 1389, n_alt = 7
   Insn 779: point = 1391, n_alt = 0
   Insn 778: point = 1393, n_alt = 4
   Insn 777: point = 1394, n_alt = 3
   Insn 776: point = 1396, n_alt = 0
   Insn 775: point = 1398, n_alt = 1
   Insn 774: point = 1400, n_alt = 0
   Insn 773: point = 1401, n_alt = 0
   Insn 772: point = 1403, n_alt = 0
   Insn 771: point = 1405, n_alt = 1
   Insn 770: point = 1407, n_alt = 0
   Insn 769: point = 1409, n_alt = 0
   Insn 768: point = 1410, n_alt = 1
   Insn 767: point = 1412, n_alt = 1
   Insn 766: point = 1414, n_alt = 0
   Insn 765: point = 1416, n_alt = 0
   Insn 764: point = 1417, n_alt = 1
   Insn 763: point = 1419, n_alt = 7
   Insn 762: point = 1421, n_alt = 0
   Insn 761: point = 1423, n_alt = 4
   Insn 760: point = 1424, n_alt = 3
   Insn 759: point = 1426, n_alt = 0
   Insn 758: point = 1428, n_alt = 1
   Insn 757: point = 1430, n_alt = 0
   Insn 756: point = 1431, n_alt = 0
   Insn 755: point = 1433, n_alt = 0
   Insn 754: point = 1435, n_alt = 1
   Insn 753: point = 1437, n_alt = 0
   Insn 752: point = 1439, n_alt = 0
   Insn 751: point = 1440, n_alt = 1
   Insn 750: point = 1442, n_alt = 1
   Insn 749: point = 1444, n_alt = 0
   Insn 748: point = 1445, n_alt = 1
   Insn 747: point = 1447, n_alt = 7
   Insn 746: point = 1449, n_alt = 0
   Insn 745: point = 1451, n_alt = 4
   Insn 744: point = 1452, n_alt = 3
   Insn 743: point = 1454, n_alt = 0
   Insn 742: point = 1456, n_alt = 1
   Insn 741: point = 1458, n_alt = 0
   Insn 740: point = 1459, n_alt = 0
   Insn 739: point = 1461, n_alt = 0
   Insn 738: point = 1463, n_alt = 1
   Insn 737: point = 1465, n_alt = 0
   Insn 736: point = 1466, n_alt = 1
   Insn 735: point = 1468, n_alt = 1
   Insn 734: point = 1470, n_alt = 0
   Insn 733: point = 1472, n_alt = 0
   Insn 732: point = 1473, n_alt = 1
   Insn 731: point = 1475, n_alt = 7
   Insn 730: point = 1477, n_alt = 0
   Insn 729: point = 1479, n_alt = 4
   Insn 728: point = 1480, n_alt = 3
   Insn 727: point = 1482, n_alt = 0
   Insn 726: point = 1484, n_alt = 1
   Insn 725: point = 1486, n_alt = 0
   Insn 724: point = 1487, n_alt = 0
   Insn 723: point = 1489, n_alt = 0
   Insn 722: point = 1491, n_alt = 1
   Insn 721: point = 1493, n_alt = 0
   Insn 720: point = 1494, n_alt = 1
   Insn 719: point = 1496, n_alt = 1
   Insn 718: point = 1498, n_alt = 0
   Insn 717: point = 1499, n_alt = 1
   Insn 716: point = 1501, n_alt = 7
   Insn 715: point = 1503, n_alt = 0
   Insn 714: point = 1505, n_alt = 4
   Insn 713: point = 1506, n_alt = 3
   Insn 712: point = 1508, n_alt = 0
   Insn 711: point = 1510, n_alt = 1
   Insn 710: point = 1512, n_alt = 0
   Insn 709: point = 1513, n_alt = 0
   Insn 708: point = 1515, n_alt = 0
   Insn 707: point = 1517, n_alt = 1
   Insn 706: point = 1519, n_alt = 0
   Insn 705: point = 1520, n_alt = 1
   Insn 704: point = 1522, n_alt = 1
   Insn 703: point = 1524, n_alt = 0
   Insn 702: point = 1526, n_alt = 0
   Insn 701: point = 1527, n_alt = 7
   Insn 700: point = 1529, n_alt = 0
   Insn 699: point = 1531, n_alt = 4
   Insn 698: point = 1532, n_alt = 3
   Insn 697: point = 1534, n_alt = 0
   Insn 696: point = 1536, n_alt = 1
   Insn 695: point = 1538, n_alt = 0
   Insn 694: point = 1539, n_alt = 0
   Insn 693: point = 1541, n_alt = 0
   Insn 692: point = 1543, n_alt = 1
   Insn 691: point = 1545, n_alt = 0
   Insn 690: point = 1546, n_alt = 1
   Insn 689: point = 1548, n_alt = 1
   Insn 688: point = 1550, n_alt = 0
   Insn 687: point = 1551, n_alt = 1
   Insn 686: point = 1552, n_alt = 0
   Insn 685: point = 1554, n_alt = 0
   Insn 681: point = 1555, n_alt = 0
   Insn 680: point = 1557, n_alt = 0
   Insn 679: point = 1559, n_alt = 0
   Insn 678: point = 1561, n_alt = 1
   Insn 677: point = 1563, n_alt = 0
   Insn 676: point = 1564, n_alt = 1
   Insn 675: point = 1565, n_alt = 0
   Insn 674: point = 1567, n_alt = 0
   Insn 670: point = 1568, n_alt = 0
   Insn 669: point = 1570, n_alt = 0
   Insn 668: point = 1572, n_alt = 0
   Insn 667: point = 1574, n_alt = 1
   Insn 666: point = 1576, n_alt = 0
  BB 39
   Insn 658: point = 1578, n_alt = 1
  BB 37
   Insn 650: point = 1579, n_alt = 1
   Insn 649: point = 1580, n_alt = 0
   Insn 648: point = 1581, n_alt = 0
  BB 35
   Insn 640: point = 1582, n_alt = 1
  BB 54
   Insn 1662: point = 1582, n_alt = -1
  BB 24
   Insn 428: point = 1582, n_alt = -1
   Insn 427: point = 1582, n_alt = 0
   Insn 426: point = 1583, n_alt = 0
   Insn 425: point = 1585, n_alt = 0
   Insn 424: point = 1586, n_alt = 0
  BB 34
   Insn 1634: point = 1587, n_alt = -1
   Insn 634: point = 1587, n_alt = 1
  BB 55
   Insn 1665: point = 1588, n_alt = -1
  BB 26
   Insn 436: point = 1589, n_alt = -1
   Insn 435: point = 1589, n_alt = 0
   Insn 434: point = 1590, n_alt = 0
   Insn 433: point = 1592, n_alt = 0
   Insn 432: point = 1593, n_alt = 0
  BB 33
   Insn 1632: point = 1594, n_alt = -1
   Insn 628: point = 1594, n_alt = 1
  BB 31
   Insn 1630: point = 1595, n_alt = -1
   Insn 601: point = 1595, n_alt = 8
   Insn 600: point = 1596, n_alt = 7
   Insn 599: point = 1597, n_alt = 3
   Insn 598: point = 1598, n_alt = 3
   Insn 597: point = 1600, n_alt = 0
   Insn 596: point = 1602, n_alt = 0
   Insn 595: point = 1604, n_alt = 0
   Insn 594: point = 1605, n_alt = 0
   Insn 593: point = 1607, n_alt = 0
   Insn 592: point = 1609, n_alt = 0
   Insn 591: point = 1610, n_alt = 8
   Insn 590: point = 1611, n_alt = 7
   Insn 589: point = 1612, n_alt = 3
   Insn 588: point = 1613, n_alt = 3
   Insn 587: point = 1615, n_alt = 0
   Insn 586: point = 1617, n_alt = 0
   Insn 585: point = 1619, n_alt = 0
   Insn 584: point = 1620, n_alt = 0
   Insn 583: point = 1622, n_alt = 0
   Insn 582: point = 1624, n_alt = 0
  BB 29
   Insn 1628: point = 1626, n_alt = -1
   Insn 541: point = 1626, n_alt = 8
   Insn 540: point = 1627, n_alt = 1
   Insn 539: point = 1629, n_alt = 7
   Insn 538: point = 1630, n_alt = 7
   Insn 537: point = 1631, n_alt = 8
   Insn 536: point = 1632, n_alt = 1
   Insn 535: point = 1634, n_alt = 7
   Insn 534: point = 1635, n_alt = 7
   Insn 533: point = 1636, n_alt = 8
   Insn 1688: point = 1637, n_alt = -2
	Hard reg 21 is preferable by r1425 with profit 1000
   Insn 532: point = 1639, n_alt = 2
   Insn 1687: point = 1640, n_alt = 7
	   Creating copy r1425<-r1440@1000
   Insn 531: point = 1642, n_alt = 1
   Insn 530: point = 1644, n_alt = -2
   Insn 529: point = 1645, n_alt = 0
   Insn 528: point = 1645, n_alt = -2
   Insn 527: point = 1646, n_alt = 7
   Insn 1686: point = 1647, n_alt = 8
	   Creating copy r1424->r1440@1000
   Insn 526: point = 1649, n_alt = 1
   Insn 1685: point = 1649, n_alt = -2
	Hard reg 21 is preferable by r1424 with profit 1000
   Insn 525: point = 1651, n_alt = -2
   Insn 524: point = 1652, n_alt = 0
   Insn 523: point = 1652, n_alt = -2
   Insn 522: point = 1653, n_alt = 7
   Insn 521: point = 1654, n_alt = 8
   Insn 520: point = 1655, n_alt = 1
   Insn 1709: point = 1657, n_alt = 7
	   Creating copy r1439<-r1441@1000
   Insn 519: point = 1659, n_alt = 1
   Insn 518: point = 1661, n_alt = -2
   Insn 517: point = 1662, n_alt = 0
   Insn 516: point = 1662, n_alt = -2
   Insn 515: point = 1663, n_alt = 7
   Insn 1683: point = 1664, n_alt = 8
	   Creating copy r1422->r1441@1000
   Insn 514: point = 1666, n_alt = 1
   Insn 1682: point = 1666, n_alt = -2
	Hard reg 21 is preferable by r1422 with profit 1000
   Insn 513: point = 1668, n_alt = -2
   Insn 512: point = 1669, n_alt = 0
   Insn 511: point = 1669, n_alt = -2
   Insn 510: point = 1670, n_alt = 7
   Insn 509: point = 1671, n_alt = 8
   Insn 508: point = 1672, n_alt = 7
  BB 30
   Insn 579: point = 1674, n_alt = 8
   Insn 578: point = 1675, n_alt = 1
   Insn 577: point = 1677, n_alt = 7
   Insn 576: point = 1678, n_alt = 7
   Insn 575: point = 1679, n_alt = 8
   Insn 574: point = 1680, n_alt = 1
   Insn 573: point = 1682, n_alt = 7
   Insn 572: point = 1683, n_alt = 7
   Insn 571: point = 1684, n_alt = 8
   Insn 1695: point = 1685, n_alt = -2
	Hard reg 21 is preferable by r1429 with profit 1000
   Insn 570: point = 1687, n_alt = 2
   Insn 1694: point = 1688, n_alt = 7
	   Creating copy r1429<-r1442@1000
   Insn 569: point = 1690, n_alt = 1
   Insn 568: point = 1692, n_alt = -2
   Insn 567: point = 1693, n_alt = 0
   Insn 566: point = 1693, n_alt = -2
   Insn 565: point = 1694, n_alt = 7
   Insn 1693: point = 1695, n_alt = 8
	   Creating copy r1428->r1442@1000
   Insn 564: point = 1697, n_alt = 1
   Insn 1692: point = 1697, n_alt = -2
	Hard reg 21 is preferable by r1428 with profit 1000
   Insn 563: point = 1699, n_alt = -2
   Insn 562: point = 1700, n_alt = 0
   Insn 561: point = 1700, n_alt = -2
   Insn 560: point = 1701, n_alt = 7
   Insn 559: point = 1702, n_alt = 8
   Insn 558: point = 1703, n_alt = 1
   Insn 1708: point = 1705, n_alt = 7
	   Creating copy r1438<-r1443@1000
   Insn 557: point = 1707, n_alt = 1
   Insn 556: point = 1709, n_alt = -2
   Insn 555: point = 1710, n_alt = 0
   Insn 554: point = 1710, n_alt = -2
   Insn 553: point = 1711, n_alt = 7
   Insn 1690: point = 1712, n_alt = 8
	   Creating copy r1426->r1443@1000
   Insn 552: point = 1714, n_alt = 1
   Insn 1689: point = 1714, n_alt = -2
	Hard reg 21 is preferable by r1426 with profit 1000
   Insn 551: point = 1716, n_alt = -2
   Insn 550: point = 1717, n_alt = 0
   Insn 549: point = 1717, n_alt = -2
   Insn 548: point = 1718, n_alt = 7
   Insn 547: point = 1719, n_alt = 8
   Insn 546: point = 1720, n_alt = 7
  BB 28
   Insn 503: point = 1722, n_alt = -1
   Insn 502: point = 1722, n_alt = 1
   Insn 501: point = 1723, n_alt = 7
   Insn 500: point = 1724, n_alt = 8
   Insn 499: point = 1725, n_alt = 0
   Insn 498: point = 1727, n_alt = 1
   Insn 497: point = 1729, n_alt = 1
   Insn 496: point = 1731, n_alt = 7
   Insn 1681: point = 1732, n_alt = -2
	Hard reg 22 is preferable by r1421 with profit 1000
   Insn 495: point = 1734, n_alt = 1
   Insn 1680: point = 1734, n_alt = -2
	Hard reg 22 is preferable by r1421 with profit 1000
	Hard reg 21 is preferable by r1421 with profit 1000
   Insn 494: point = 1736, n_alt = 7
   Insn 493: point = 1737, n_alt = 8
   Insn 492: point = 1738, n_alt = 2
   Insn 491: point = 1740, n_alt = 7
   Insn 490: point = 1742, n_alt = 4
   Insn 489: point = 1743, n_alt = 3
   Insn 488: point = 1745, n_alt = 0
   Insn 487: point = 1747, n_alt = 0
   Insn 486: point = 1749, n_alt = 0
   Insn 485: point = 1750, n_alt = 0
   Insn 484: point = 1752, n_alt = 0
   Insn 483: point = 1754, n_alt = 0
   Insn 482: point = 1755, n_alt = 7
   Insn 481: point = 1757, n_alt = 3
   Insn 480: point = 1758, n_alt = 3
   Insn 479: point = 1760, n_alt = 0
   Insn 478: point = 1762, n_alt = 0
   Insn 477: point = 1764, n_alt = 0
   Insn 476: point = 1765, n_alt = 0
   Insn 475: point = 1767, n_alt = 0
   Insn 474: point = 1769, n_alt = 0
   Insn 473: point = 1770, n_alt = 8
   Insn 472: point = 1771, n_alt = 2
   Insn 471: point = 1773, n_alt = 7
   Insn 470: point = 1775, n_alt = 4
   Insn 469: point = 1776, n_alt = 3
   Insn 468: point = 1778, n_alt = 0
   Insn 467: point = 1780, n_alt = 0
   Insn 466: point = 1782, n_alt = 0
   Insn 465: point = 1783, n_alt = 0
   Insn 464: point = 1785, n_alt = 0
   Insn 463: point = 1787, n_alt = 0
   Insn 462: point = 1788, n_alt = 7
   Insn 461: point = 1790, n_alt = 3
   Insn 460: point = 1791, n_alt = 3
   Insn 459: point = 1793, n_alt = 0
   Insn 458: point = 1795, n_alt = 0
   Insn 457: point = 1797, n_alt = 0
   Insn 456: point = 1798, n_alt = 0
   Insn 455: point = 1800, n_alt = 0
   Insn 454: point = 1802, n_alt = 0
  BB 32
   Insn 625: point = 1804, n_alt = 8
   Insn 624: point = 1805, n_alt = 7
   Insn 623: point = 1806, n_alt = 3
   Insn 622: point = 1807, n_alt = 3
   Insn 621: point = 1809, n_alt = 0
   Insn 620: point = 1811, n_alt = 0
   Insn 619: point = 1813, n_alt = 0
   Insn 618: point = 1814, n_alt = 0
   Insn 617: point = 1816, n_alt = 0
   Insn 616: point = 1818, n_alt = 0
   Insn 615: point = 1819, n_alt = 8
   Insn 614: point = 1820, n_alt = 7
   Insn 613: point = 1821, n_alt = 3
   Insn 612: point = 1822, n_alt = 3
   Insn 611: point = 1824, n_alt = 0
   Insn 610: point = 1826, n_alt = 0
   Insn 609: point = 1828, n_alt = 0
   Insn 608: point = 1829, n_alt = 0
   Insn 607: point = 1831, n_alt = 0
   Insn 606: point = 1833, n_alt = 0
  BB 27
   Insn 449: point = 1835, n_alt = -1
   Insn 448: point = 1835, n_alt = 1
   Insn 447: point = 1836, n_alt = 7
   Insn 446: point = 1837, n_alt = 7
   Insn 445: point = 1839, n_alt = 4
   Insn 444: point = 1840, n_alt = 3
   Insn 443: point = 1842, n_alt = 0
   Insn 442: point = 1844, n_alt = 0
   Insn 441: point = 1846, n_alt = 0
   Insn 440: point = 1847, n_alt = 0
   Insn 439: point = 1849, n_alt = 0
   Insn 438: point = 1851, n_alt = 0
  BB 25
   Insn 430: point = 1853, n_alt = 1
  BB 23
   Insn 422: point = 1854, n_alt = 1
   Insn 421: point = 1855, n_alt = 0
   Insn 420: point = 1856, n_alt = 0
  BB 51
   Insn 1653: point = 1857, n_alt = -1
  BB 12
   Insn 115: point = 1857, n_alt = -1
   Insn 114: point = 1857, n_alt = 0
   Insn 113: point = 1858, n_alt = 0
   Insn 112: point = 1860, n_alt = 0
   Insn 111: point = 1861, n_alt = 0
  BB 22
   Insn 1624: point = 1861, n_alt = -1
   Insn 414: point = 1861, n_alt = 1
  BB 52
   Insn 1656: point = 1861, n_alt = -1
  BB 14
   Insn 125: point = 1861, n_alt = -1
   Insn 124: point = 1861, n_alt = 0
   Insn 123: point = 1862, n_alt = 0
   Insn 122: point = 1864, n_alt = 0
   Insn 121: point = 1865, n_alt = 0
  BB 21
   Insn 1622: point = 1866, n_alt = -1
   Insn 408: point = 1866, n_alt = 1
  BB 53
   Insn 1659: point = 1867, n_alt = -1
  BB 16
   Insn 133: point = 1868, n_alt = -1
   Insn 132: point = 1868, n_alt = 0
   Insn 131: point = 1869, n_alt = 0
   Insn 130: point = 1871, n_alt = 0
   Insn 129: point = 1872, n_alt = 0
  BB 20
   Insn 1620: point = 1873, n_alt = -1
   Insn 402: point = 1873, n_alt = 1
  BB 19
   Insn 399: point = 1874, n_alt = 8
   Insn 398: point = 1875, n_alt = 4
   Insn 397: point = 1876, n_alt = 1
   Insn 396: point = 1878, n_alt = 3
   Insn 395: point = 1880, n_alt = 0
   Insn 394: point = 1882, n_alt = 1
   Insn 393: point = 1884, n_alt = 0
   Insn 392: point = 1885, n_alt = 0
   Insn 391: point = 1887, n_alt = 1
   Insn 390: point = 1889, n_alt = 0
   Insn 389: point = 1890, n_alt = 7
   Insn 388: point = 1892, n_alt = 0
   Insn 387: point = 1894, n_alt = 4
   Insn 386: point = 1895, n_alt = 3
   Insn 385: point = 1897, n_alt = 1
   Insn 384: point = 1899, n_alt = 0
   Insn 383: point = 1900, n_alt = 7
   Insn 382: point = 1902, n_alt = 4
   Insn 381: point = 1903, n_alt = 3
   Insn 380: point = 1905, n_alt = 0
   Insn 379: point = 1907, n_alt = 1
   Insn 378: point = 1909, n_alt = 0
   Insn 377: point = 1910, n_alt = 0
   Insn 376: point = 1912, n_alt = 1
   Insn 375: point = 1914, n_alt = 0
   Insn 374: point = 1915, n_alt = 8
   Insn 373: point = 1916, n_alt = 3
   Insn 372: point = 1917, n_alt = 1
   Insn 371: point = 1919, n_alt = 3
   Insn 370: point = 1921, n_alt = 0
   Insn 369: point = 1923, n_alt = 1
   Insn 368: point = 1925, n_alt = 0
   Insn 367: point = 1926, n_alt = 0
   Insn 366: point = 1928, n_alt = 1
   Insn 365: point = 1930, n_alt = 0
   Insn 364: point = 1931, n_alt = 1
   Insn 363: point = 1933, n_alt = 7
   Insn 362: point = 1935, n_alt = 0
   Insn 361: point = 1937, n_alt = 4
   Insn 360: point = 1938, n_alt = 3
   Insn 359: point = 1940, n_alt = 1
   Insn 358: point = 1942, n_alt = 0
   Insn 357: point = 1943, n_alt = 7
   Insn 356: point = 1945, n_alt = 0
   Insn 355: point = 1947, n_alt = 4
   Insn 354: point = 1948, n_alt = 3
   Insn 353: point = 1950, n_alt = 0
   Insn 352: point = 1952, n_alt = 1
   Insn 351: point = 1954, n_alt = 0
   Insn 350: point = 1955, n_alt = 0
   Insn 349: point = 1957, n_alt = 0
   Insn 348: point = 1959, n_alt = 1
   Insn 347: point = 1961, n_alt = 0
   Insn 346: point = 1962, n_alt = 1
   Insn 345: point = 1964, n_alt = 1
   Insn 344: point = 1966, n_alt = 0
   Insn 343: point = 1967, n_alt = 7
   Insn 342: point = 1969, n_alt = 3
   Insn 341: point = 1970, n_alt = 3
   Insn 340: point = 1972, n_alt = 0
   Insn 339: point = 1974, n_alt = 1
   Insn 338: point = 1976, n_alt = 0
   Insn 337: point = 1977, n_alt = 0
   Insn 336: point = 1979, n_alt = 1
   Insn 335: point = 1981, n_alt = 0
   Insn 334: point = 1982, n_alt = 8
   Insn 333: point = 1983, n_alt = 3
   Insn 332: point = 1984, n_alt = 1
   Insn 331: point = 1986, n_alt = 3
   Insn 330: point = 1988, n_alt = 0
   Insn 329: point = 1990, n_alt = 1
   Insn 328: point = 1992, n_alt = 0
   Insn 327: point = 1993, n_alt = 0
   Insn 326: point = 1995, n_alt = 1
   Insn 325: point = 1997, n_alt = 0
   Insn 324: point = 1998, n_alt = 1
   Insn 323: point = 2000, n_alt = 7
   Insn 322: point = 2002, n_alt = 0
   Insn 321: point = 2004, n_alt = 4
   Insn 320: point = 2005, n_alt = 3
   Insn 319: point = 2007, n_alt = 1
   Insn 318: point = 2009, n_alt = 0
   Insn 317: point = 2010, n_alt = 7
   Insn 316: point = 2012, n_alt = 0
   Insn 315: point = 2014, n_alt = 4
   Insn 314: point = 2015, n_alt = 3
   Insn 313: point = 2017, n_alt = 0
   Insn 312: point = 2019, n_alt = 1
   Insn 311: point = 2021, n_alt = 0
   Insn 310: point = 2022, n_alt = 0
   Insn 309: point = 2024, n_alt = 0
   Insn 308: point = 2026, n_alt = 1
   Insn 307: point = 2028, n_alt = 0
   Insn 306: point = 2029, n_alt = 1
   Insn 305: point = 2031, n_alt = 1
   Insn 304: point = 2033, n_alt = 0
   Insn 303: point = 2034, n_alt = 7
   Insn 302: point = 2036, n_alt = 3
   Insn 301: point = 2037, n_alt = 3
   Insn 300: point = 2039, n_alt = 0
   Insn 299: point = 2041, n_alt = 1
   Insn 298: point = 2043, n_alt = 0
   Insn 297: point = 2044, n_alt = 0
   Insn 296: point = 2046, n_alt = 1
   Insn 295: point = 2048, n_alt = 0
  BB 18
   Insn 290: point = 2050, n_alt = -1
   Insn 289: point = 2050, n_alt = 1
   Insn 288: point = 2051, n_alt = 7
  BB 17
   Insn 283: point = 2053, n_alt = -1
   Insn 282: point = 2053, n_alt = 1
   Insn 281: point = 2054, n_alt = 2
   Insn 280: point = 2056, n_alt = 7
   Insn 279: point = 2057, n_alt = 7
   Insn 278: point = 2058, n_alt = 8
   Insn 277: point = 2059, n_alt = 1
   Insn 276: point = 2061, n_alt = 7
   Insn 275: point = 2063, n_alt = 4
   Insn 1679: point = 2064, n_alt = -2
	Hard reg 22 is preferable by r1420 with profit 1000
   Insn 274: point = 2066, n_alt = 1
   Insn 1678: point = 2066, n_alt = -2
	Hard reg 22 is preferable by r1420 with profit 1000
	Hard reg 21 is preferable by r1420 with profit 1000
   Insn 273: point = 2068, n_alt = 7
   Insn 272: point = 2070, n_alt = 0
   Insn 271: point = 2072, n_alt = 4
   Insn 270: point = 2073, n_alt = 3
   Insn 269: point = 2075, n_alt = 1
   Insn 268: point = 2077, n_alt = 0
   Insn 267: point = 2078, n_alt = 8
   Insn 266: point = 2079, n_alt = 1
   Insn 265: point = 2081, n_alt = 7
   Insn 264: point = 2083, n_alt = 4
   Insn 1677: point = 2084, n_alt = -2
	Hard reg 22 is preferable by r1419 with profit 1000
   Insn 263: point = 2086, n_alt = 1
   Insn 1676: point = 2086, n_alt = -2
	Hard reg 22 is preferable by r1419 with profit 1000
	Hard reg 21 is preferable by r1419 with profit 1000
   Insn 262: point = 2088, n_alt = 7
   Insn 261: point = 2090, n_alt = 0
   Insn 260: point = 2092, n_alt = 4
   Insn 259: point = 2093, n_alt = 3
   Insn 258: point = 2095, n_alt = 1
   Insn 257: point = 2097, n_alt = 0
   Insn 256: point = 2099, n_alt = 0
   Insn 255: point = 2101, n_alt = 4
   Insn 254: point = 2102, n_alt = 3
   Insn 253: point = 2104, n_alt = 0
   Insn 252: point = 2106, n_alt = 1
   Insn 251: point = 2108, n_alt = 0
   Insn 250: point = 2109, n_alt = 0
   Insn 249: point = 2111, n_alt = 1
   Insn 248: point = 2113, n_alt = 0
   Insn 247: point = 2114, n_alt = 8
   Insn 246: point = 2115, n_alt = 1
   Insn 245: point = 2117, n_alt = 7
   Insn 244: point = 2118, n_alt = -2
   Insn 243: point = 2120, n_alt = 1
   Insn 242: point = 2122, n_alt = 1
   Insn 241: point = 2124, n_alt = 7
   Insn 240: point = 2126, n_alt = 0
   Insn 239: point = 2128, n_alt = 4
   Insn 238: point = 2129, n_alt = 3
   Insn 237: point = 2131, n_alt = 0
   Insn 236: point = 2133, n_alt = 1
   Insn 235: point = 2135, n_alt = 0
   Insn 234: point = 2136, n_alt = 0
   Insn 233: point = 2138, n_alt = 1
   Insn 232: point = 2140, n_alt = 0
   Insn 231: point = 2142, n_alt = 0
   Insn 230: point = 2143, n_alt = 7
   Insn 229: point = 2145, n_alt = 4
   Insn 228: point = 2146, n_alt = 3
   Insn 227: point = 2148, n_alt = 0
   Insn 226: point = 2150, n_alt = 1
   Insn 225: point = 2152, n_alt = 0
   Insn 224: point = 2153, n_alt = 0
   Insn 223: point = 2155, n_alt = 1
   Insn 222: point = 2157, n_alt = 0
   Insn 221: point = 2159, n_alt = 0
   Insn 220: point = 2160, n_alt = 1
   Insn 219: point = 2162, n_alt = 1
   Insn 218: point = 2164, n_alt = 7
   Insn 217: point = 2166, n_alt = 0
   Insn 216: point = 2168, n_alt = 4
   Insn 215: point = 2169, n_alt = 3
   Insn 214: point = 2171, n_alt = 0
   Insn 213: point = 2173, n_alt = 1
   Insn 212: point = 2175, n_alt = 0
   Insn 211: point = 2176, n_alt = 0
   Insn 210: point = 2178, n_alt = 1
   Insn 209: point = 2180, n_alt = 0
   Insn 208: point = 2182, n_alt = 0
   Insn 207: point = 2183, n_alt = 7
   Insn 206: point = 2185, n_alt = 4
   Insn 205: point = 2186, n_alt = 3
   Insn 204: point = 2188, n_alt = 0
   Insn 203: point = 2190, n_alt = 1
   Insn 202: point = 2192, n_alt = 0
   Insn 201: point = 2193, n_alt = 0
   Insn 200: point = 2195, n_alt = 1
   Insn 199: point = 2197, n_alt = 0
   Insn 198: point = 2199, n_alt = 0
   Insn 197: point = 2200, n_alt = 1
   Insn 196: point = 2202, n_alt = 1
   Insn 195: point = 2204, n_alt = 7
   Insn 194: point = 2206, n_alt = 0
   Insn 193: point = 2208, n_alt = 4
   Insn 192: point = 2209, n_alt = 3
   Insn 191: point = 2211, n_alt = 0
   Insn 190: point = 2213, n_alt = 1
   Insn 189: point = 2215, n_alt = 0
   Insn 188: point = 2216, n_alt = 0
   Insn 187: point = 2218, n_alt = 1
   Insn 186: point = 2220, n_alt = 0
   Insn 185: point = 2221, n_alt = 7
   Insn 184: point = 2223, n_alt = 4
   Insn 183: point = 2224, n_alt = 3
   Insn 182: point = 2226, n_alt = 0
   Insn 181: point = 2228, n_alt = 1
   Insn 180: point = 2230, n_alt = 0
   Insn 179: point = 2231, n_alt = 0
   Insn 178: point = 2233, n_alt = 1
   Insn 177: point = 2235, n_alt = 0
   Insn 176: point = 2236, n_alt = 1
   Insn 175: point = 2238, n_alt = 7
   Insn 174: point = 2240, n_alt = 0
   Insn 173: point = 2242, n_alt = 4
   Insn 172: point = 2243, n_alt = 3
   Insn 171: point = 2245, n_alt = 0
   Insn 170: point = 2247, n_alt = 1
   Insn 169: point = 2249, n_alt = 0
   Insn 168: point = 2250, n_alt = 0
   Insn 167: point = 2252, n_alt = 1
   Insn 166: point = 2254, n_alt = 0
   Insn 165: point = 2255, n_alt = 7
   Insn 164: point = 2257, n_alt = 4
   Insn 163: point = 2258, n_alt = 3
   Insn 162: point = 2260, n_alt = 0
   Insn 161: point = 2262, n_alt = 1
   Insn 160: point = 2264, n_alt = 0
   Insn 159: point = 2265, n_alt = 0
   Insn 158: point = 2267, n_alt = 1
   Insn 157: point = 2269, n_alt = 0
   Insn 156: point = 2270, n_alt = 1
   Insn 155: point = 2271, n_alt = 0
   Insn 154: point = 2273, n_alt = 0
   Insn 150: point = 2274, n_alt = 0
   Insn 149: point = 2276, n_alt = 0
   Insn 148: point = 2278, n_alt = 0
   Insn 147: point = 2280, n_alt = 1
   Insn 146: point = 2282, n_alt = 0
   Insn 145: point = 2283, n_alt = 1
   Insn 144: point = 2284, n_alt = 0
   Insn 143: point = 2286, n_alt = 0
   Insn 139: point = 2287, n_alt = 0
   Insn 138: point = 2289, n_alt = 0
   Insn 137: point = 2291, n_alt = 0
   Insn 136: point = 2293, n_alt = 1
   Insn 135: point = 2295, n_alt = 0
  BB 15
   Insn 127: point = 2297, n_alt = 1
  BB 13
   Insn 119: point = 2298, n_alt = 1
   Insn 118: point = 2299, n_alt = 0
   Insn 117: point = 2300, n_alt = 0
  BB 11
   Insn 109: point = 2301, n_alt = 1
  BB 50
   Insn 1650: point = 2301, n_alt = -1
  BB 9
   Insn 90: point = 2301, n_alt = -1
   Insn 89: point = 2301, n_alt = 0
   Insn 88: point = 2302, n_alt = 0
   Insn 87: point = 2304, n_alt = 0
   Insn 86: point = 2305, n_alt = 0
  BB 10
   Insn 1618: point = 2305, n_alt = -1
   Insn 103: point = 2305, n_alt = 1
   Insn 102: point = 2305, n_alt = 0
   Insn 101: point = 2305, n_alt = 3
   Insn 100: point = 2305, n_alt = -2
   Insn 99: point = 2306, n_alt = 0
   Insn 98: point = 2308, n_alt = 4
   Insn 97: point = 2309, n_alt = 1
   Insn 96: point = 2311, n_alt = 0
   Insn 95: point = 2313, n_alt = 1
   Insn 94: point = 2315, n_alt = 0
   Insn 93: point = 2317, n_alt = 0
   Insn 92: point = 2319, n_alt = 0
  BB 8
   Insn 84: point = 2320, n_alt = 1
   Insn 83: point = 2320, n_alt = 0
   Insn 82: point = 2320, n_alt = 3
   Insn 81: point = 2320, n_alt = 4
   Insn 80: point = 2320, n_alt = 0
   Insn 79: point = 2320, n_alt = 3
   Insn 78: point = 2320, n_alt = 4
  BB 48
   Insn 1644: point = 2320, n_alt = -1
  BB 3
   Insn 16: point = 2320, n_alt = -1
   Insn 15: point = 2320, n_alt = 0
   Insn 14: point = 2321, n_alt = 0
   Insn 13: point = 2323, n_alt = 0
   Insn 12: point = 2324, n_alt = 0
  BB 7
   Insn 1616: point = 2325, n_alt = -1
   Insn 72: point = 2325, n_alt = 1
  BB 49
   Insn 1647: point = 2326, n_alt = -1
  BB 5
   Insn 24: point = 2327, n_alt = -1
   Insn 23: point = 2327, n_alt = 0
   Insn 22: point = 2328, n_alt = 0
   Insn 21: point = 2330, n_alt = 0
   Insn 20: point = 2331, n_alt = 0
  BB 6
   Insn 1614: point = 2332, n_alt = -1
   Insn 66: point = 2332, n_alt = 1
   Insn 65: point = 2332, n_alt = 8
   Insn 64: point = 2333, n_alt = 7
   Insn 63: point = 2334, n_alt = 4
   Insn 62: point = 2335, n_alt = 3
   Insn 61: point = 2337, n_alt = 0
   Insn 60: point = 2339, n_alt = 1
   Insn 59: point = 2341, n_alt = 0
   Insn 58: point = 2342, n_alt = 0
   Insn 57: point = 2344, n_alt = 1
   Insn 56: point = 2346, n_alt = 0
   Insn 55: point = 2347, n_alt = 8
   Insn 54: point = 2348, n_alt = 7
   Insn 53: point = 2349, n_alt = 3
   Insn 52: point = 2350, n_alt = 3
   Insn 51: point = 2352, n_alt = 0
   Insn 50: point = 2354, n_alt = 1
   Insn 49: point = 2356, n_alt = 0
   Insn 48: point = 2357, n_alt = 0
   Insn 47: point = 2359, n_alt = 1
   Insn 46: point = 2361, n_alt = 0
   Insn 45: point = 2362, n_alt = 8
   Insn 44: point = 2363, n_alt = 7
   Insn 43: point = 2364, n_alt = 3
   Insn 42: point = 2365, n_alt = 3
   Insn 41: point = 2367, n_alt = 0
   Insn 40: point = 2369, n_alt = 1
   Insn 39: point = 2371, n_alt = 0
   Insn 38: point = 2372, n_alt = 0
   Insn 37: point = 2374, n_alt = 1
   Insn 36: point = 2376, n_alt = 0
   Insn 35: point = 2377, n_alt = 8
   Insn 34: point = 2378, n_alt = 7
   Insn 33: point = 2379, n_alt = 3
   Insn 32: point = 2380, n_alt = 3
   Insn 31: point = 2382, n_alt = 0
   Insn 30: point = 2384, n_alt = 1
   Insn 29: point = 2386, n_alt = 0
   Insn 28: point = 2387, n_alt = 0
   Insn 27: point = 2389, n_alt = 1
   Insn 26: point = 2391, n_alt = 0
  BB 4
   Insn 18: point = 2393, n_alt = 1
  BB 2
   Insn 10: point = 2394, n_alt = 1
   Insn 9: point = 2395, n_alt = 0
   Insn 8: point = 2396, n_alt = 0
   Insn 4: point = 2397, n_alt = 5
   Insn 3: point = 2397, n_alt = 5
   Insn 2: point = 2397, n_alt = 5
 r87: [2388..2389]
 r88: [2383..2387]
 r89: [2383..2384]
 r90: [2381..2382]
 r91: [2377..2380]
 r92: [2373..2374]
 r93: [2368..2372]
 r94: [2368..2369]
 r95: [2366..2367]
 r96: [2362..2365]
 r97: [2358..2359]
 r98: [2353..2357]
 r99: [2353..2354]
 r100: [2351..2352]
 r101: [2347..2350]
 r102: [2343..2344]
 r103: [2338..2342]
 r104: [2338..2339]
 r105: [2336..2337]
 r106: [2332..2335]
 r107: [2316..2317]
 r108: [2314..2315]
 r109: [2312..2313]
 r110: [2305..2306]
 r111: [2292..2293]
 r112: [2290..2291]
 r113: [2285..2287]
 r114: [2279..2280]
 r115: [2277..2278]
 r116: [2272..2274]
 r117: [2266..2267]
 r118: [2261..2265]
 r119: [2261..2262]
 r120: [2259..2260]
 r121: [2256..2258]
 r122: [2237..2255]
 r123: [2251..2252]
 r124: [2246..2250]
 r125: [2246..2247]
 r126: [2244..2245]
 r127: [2241..2243]
 r128: [2237..2238]
 r129: [2201..2236]
 r130: [2232..2233]
 r131: [2227..2231]
 r132: [2227..2228]
 r133: [2225..2226]
 r134: [2222..2224]
 r135: [2203..2221]
 r136: [2217..2218]
 r137: [2212..2216]
 r138: [2212..2213]
 r139: [2210..2211]
 r140: [2207..2209]
 r141: [2203..2204]
 r142: [2201..2202]
 r143: [2161..2200]
 r144: [2196..2197]
 r145: [2194..2195]
 r146: [2189..2193]
 r147: [2189..2190]
 r148: [2187..2188]
 r149: [2184..2186]
 r150: [2163..2183]
 r151: [2179..2180]
 r152: [2177..2178]
 r153: [2172..2176]
 r154: [2172..2173]
 r155: [2170..2171]
 r156: [2167..2169]
 r157: [2163..2164]
 r158: [2161..2162]
 r159: [2121..2160]
 r160: [2156..2157]
 r161: [2154..2155]
 r162: [2149..2153]
 r163: [2149..2150]
 r164: [2147..2148]
 r165: [2144..2146]
 r166: [2123..2143]
 r167: [2139..2140]
 r168: [2137..2138]
 r169: [2132..2136]
 r170: [2132..2133]
 r171: [2130..2131]
 r172: [2127..2129]
 r173: [2123..2124]
 r174: [2121..2122]
 r175: [2119..2120]
 r176: [2116..2118]
 r177: [2110..2111]
 r178: [2105..2109]
 r179: [2105..2106]
 r180: [2103..2104]
 r181: [2100..2102]
 r182: [2096..2097]
 r183: [2094..2095]
 r184: [2091..2093]
 r185: [2087..2088]
 r186: [2080..2084]
 r187: [2080..2081]
 r188: [2074..2075]
 r189: [2071..2073]
 r190: [2067..2068]
 r191: [2060..2064]
 r192: [2060..2061]
 r193: [2053..2054]
 r194: [2045..2046]
 r195: [2040..2044]
 r196: [2040..2041]
 r197: [2038..2039]
 r198: [2035..2037]
 r199: [1985..2034]
 r200: [2030..2031]
 r201: [2023..2029]
 r202: [2025..2026]
 r203: [2023..2024]
 r204: [2018..2022]
 r205: [2018..2019]
 r206: [2016..2017]
 r207: [2013..2015]
 r208: [1999..2010]
 r209: [2006..2007]
 r210: [2003..2005]
 r211: [1999..2000]
 r212: [1985..1998]
 r213: [1994..1995]
 r214: [1989..1993]
 r215: [1989..1990]
 r216: [1987..1988]
 r217: [1982..1986]
 r218: [1982..1984]
 r219: [1978..1979]
 r220: [1973..1977]
 r221: [1973..1974]
 r222: [1971..1972]
 r223: [1968..1970]
 r224: [1918..1967]
 r225: [1963..1964]
 r226: [1956..1962]
 r227: [1958..1959]
 r228: [1956..1957]
 r229: [1951..1955]
 r230: [1951..1952]
 r231: [1949..1950]
 r232: [1946..1948]
 r233: [1932..1943]
 r234: [1939..1940]
 r235: [1936..1938]
 r236: [1932..1933]
 r237: [1918..1931]
 r238: [1927..1928]
 r239: [1922..1926]
 r240: [1922..1923]
 r241: [1920..1921]
 r242: [1915..1919]
 r243: [1915..1917]
 r244: [1911..1912]
 r245: [1906..1910]
 r246: [1906..1907]
 r247: [1904..1905]
 r248: [1901..1903]
 r249: [1877..1900]
 r250: [1896..1897]
 r251: [1893..1895]
 r252: [1877..1890]
 r253: [1886..1887]
 r254: [1881..1885]
 r255: [1881..1882]
 r256: [1879..1880]
 r257: [1874..1878]
 r258: [1874..1876]
 r259: [1848..1849]
 r260: [1843..1847]
 r261: [1843..1844]
 r262: [1841..1842]
 r263: [1838..1840]
 r264: [1835..1837]
 r265: [1799..1800]
 r266: [1794..1798]
 r267: [1794..1795]
 r268: [1792..1793]
 r269: [1789..1791]
 r270: [1772..1788]
 r271: [1784..1785]
 r272: [1779..1783]
 r273: [1779..1780]
 r274: [1777..1778]
 r275: [1774..1776]
 r276: [1772..1773]
 r277: [1766..1767]
 r278: [1761..1765]
 r279: [1761..1762]
 r280: [1759..1760]
 r281: [1756..1758]
 r282: [1739..1755]
 r283: [1751..1752]
 r284: [1746..1750]
 r285: [1746..1747]
 r286: [1744..1745]
 r287: [1741..1743]
 r288: [1739..1740]
 r289: [1728..1732]
 r290: [1728..1729]
 r291: [1726..1727]
 r292: [1667..1668]
 r294: [1660..1661]
 r295: [1656..1659]
 r296: [1650..1651]
 r298: [1643..1644]
 r299: [1639..1642]
 r300: [1715..1716]
 r302: [1708..1709]
 r303: [1704..1707]
 r304: [1698..1699]
 r306: [1691..1692]
 r307: [1687..1690]
 r308: [1621..1622]
 r309: [1616..1620]
 r310: [1616..1617]
 r311: [1614..1615]
 r312: [1610..1613]
 r313: [1606..1607]
 r314: [1601..1605]
 r315: [1601..1602]
 r316: [1599..1600]
 r317: [1595..1598]
 r318: [1830..1831]
 r319: [1825..1829]
 r320: [1825..1826]
 r321: [1823..1824]
 r322: [1819..1822]
 r323: [1815..1816]
 r324: [1810..1814]
 r325: [1810..1811]
 r326: [1808..1809]
 r327: [1804..1807]
 r328: [1573..1574]
 r329: [1571..1572]
 r330: [1566..1568]
 r331: [1560..1561]
 r332: [1558..1559]
 r333: [1553..1555]
 r334: [1547..1548]
 r335: [1540..1546]
 r336: [1542..1543]
 r337: [1540..1541]
 r338: [1535..1539]
 r339: [1535..1536]
 r340: [1533..1534]
 r341: [1530..1532]
 r342: [1500..1527]
 r343: [1523..1524]
 r344: [1521..1522]
 r345: [1514..1520]
 r346: [1516..1517]
 r347: [1514..1515]
 r348: [1509..1513]
 r349: [1509..1510]
 r350: [1507..1508]
 r351: [1504..1506]
 r352: [1500..1501]
 r353: [1474..1499]
 r354: [1495..1496]
 r355: [1488..1494]
 r356: [1490..1491]
 r357: [1488..1489]
 r358: [1483..1487]
 r359: [1483..1484]
 r360: [1481..1482]
 r361: [1478..1480]
 r362: [1474..1475]
 r363: [1446..1473]
 r364: [1469..1470]
 r365: [1467..1468]
 r366: [1460..1466]
 r367: [1462..1463]
 r368: [1460..1461]
 r369: [1455..1459]
 r370: [1455..1456]
 r371: [1453..1454]
 r372: [1450..1452]
 r373: [1446..1447]
 r374: [1418..1445]
 r375: [1441..1442]
 r376: [1432..1440]
 r377: [1436..1437]
 r378: [1434..1435]
 r379: [1432..1433]
 r380: [1427..1431]
 r381: [1427..1428]
 r382: [1425..1426]
 r383: [1422..1424]
 r384: [1418..1419]
 r385: [1388..1417]
 r386: [1413..1414]
 r387: [1411..1412]
 r388: [1402..1410]
 r389: [1406..1407]
 r390: [1404..1405]
 r391: [1402..1403]
 r392: [1397..1401]
 r393: [1397..1398]
 r394: [1395..1396]
 r395: [1392..1394]
 r396: [1388..1389]
 r397: [1360..1387]
 r398: [1383..1384]
 r399: [1374..1382]
 r400: [1378..1379]
 r401: [1376..1377]
 r402: [1374..1375]
 r403: [1369..1373]
 r404: [1369..1370]
 r405: [1367..1368]
 r406: [1364..1366]
 r407: [1360..1361]
 r408: [1330..1359]
 r409: [1355..1356]
 r410: [1353..1354]
 r411: [1344..1352]
 r412: [1348..1349]
 r413: [1346..1347]
 r414: [1344..1345]
 r415: [1339..1343]
 r416: [1339..1340]
 r417: [1337..1338]
 r418: [1334..1336]
 r419: [1330..1331]
 r420: [1328..1329]
 r421: [1325..1327]
 r422: [1319..1320]
 r423: [1314..1318]
 r424: [1314..1315]
 r425: [1312..1313]
 r426: [1309..1311]
 r427: [1305..1306]
 r428: [1303..1304]
 r429: [1301..1302]
 r430: [1294..1300]
 r431: [1296..1297]
 r432: [1294..1295]
 r433: [1289..1293]
 r434: [1289..1290]
 r435: [1287..1288]
 r436: [1284..1286]
 r437: [1238..1281]
 r438: [1277..1278]
 r439: [1272..1276]
 r440: [1272..1273]
 r441: [1270..1271]
 r442: [1267..1269]
 r443: [1263..1264]
 r444: [1261..1262]
 r445: [1259..1260]
 r446: [1252..1258]
 r447: [1254..1255]
 r448: [1252..1253]
 r449: [1247..1251]
 r450: [1247..1248]
 r451: [1245..1246]
 r452: [1242..1244]
 r453: [1238..1239]
 r454: [1192..1237]
 r455: [1233..1234]
 r456: [1228..1232]
 r457: [1228..1229]
 r458: [1226..1227]
 r459: [1223..1225]
 r460: [1219..1220]
 r461: [1217..1218]
 r462: [1215..1216]
 r463: [1206..1214]
 r464: [1210..1211]
 r465: [1208..1209]
 r466: [1206..1207]
 r467: [1201..1205]
 r468: [1201..1202]
 r469: [1199..1200]
 r470: [1196..1198]
 r471: [1192..1193]
 r472: [1146..1191]
 r473: [1187..1188]
 r474: [1182..1186]
 r475: [1182..1183]
 r476: [1180..1181]
 r477: [1177..1179]
 r478: [1173..1174]
 r479: [1171..1172]
 r480: [1169..1170]
 r481: [1160..1168]
 r482: [1164..1165]
 r483: [1162..1163]
 r484: [1160..1161]
 r485: [1155..1159]
 r486: [1155..1156]
 r487: [1153..1154]
 r488: [1150..1152]
 r489: [1146..1147]
 r490: [1144..1145]
 r491: [1141..1143]
 r492: [1128..1129]
 r493: [1123..1127]
 r494: [1123..1124]
 r495: [1121..1122]
 r496: [1118..1120]
 r497: [1114..1115]
 r498: [1109..1110]
 r499: [1107..1108]
 r500: [1100..1106]
 r501: [1102..1103]
 r502: [1100..1101]
 r503: [1095..1099]
 r504: [1095..1096]
 r505: [1093..1094]
 r506: [1090..1092]
 r507: [1060..1087]
 r508: [1083..1084]
 r509: [1081..1082]
 r510: [1074..1080]
 r511: [1076..1077]
 r512: [1074..1075]
 r513: [1069..1073]
 r514: [1069..1070]
 r515: [1067..1068]
 r516: [1064..1066]
 r517: [1060..1061]
 r518: [1032..1059]
 r519: [1055..1056]
 r520: [1053..1054]
 r521: [1046..1052]
 r522: [1048..1049]
 r523: [1046..1047]
 r524: [1041..1045]
 r525: [1041..1042]
 r526: [1039..1040]
 r527: [1036..1038]
 r528: [1032..1033]
 r529: [1004..1031]
 r530: [1027..1028]
 r531: [1025..1026]
 r532: [1018..1024]
 r533: [1020..1021]
 r534: [1018..1019]
 r535: [1013..1017]
 r536: [1013..1014]
 r537: [1011..1012]
 r538: [1008..1010]
 r539: [1004..1005]
 r540: [974..1003]
 r541: [999..1000]
 r542: [997..998]
 r543: [988..996]
 r544: [992..993]
 r545: [990..991]
 r546: [988..989]
 r547: [983..987]
 r548: [983..984]
 r549: [981..982]
 r550: [978..980]
 r551: [974..975]
 r552: [944..973]
 r553: [969..970]
 r554: [967..968]
 r555: [958..966]
 r556: [962..963]
 r557: [960..961]
 r558: [958..959]
 r559: [953..957]
 r560: [953..954]
 r561: [951..952]
 r562: [948..950]
 r563: [944..945]
 r564: [914..943]
 r565: [939..940]
 r566: [937..938]
 r567: [928..936]
 r568: [932..933]
 r569: [930..931]
 r570: [928..929]
 r571: [923..927]
 r572: [923..924]
 r573: [921..922]
 r574: [918..920]
 r575: [914..915]
 r576: [884..913]
 r577: [909..910]
 r578: [907..908]
 r579: [898..906]
 r580: [902..903]
 r581: [900..901]
 r582: [898..899]
 r583: [893..897]
 r584: [893..894]
 r585: [891..892]
 r586: [888..890]
 r587: [884..885]
 r588: [882..883]
 r589: [879..881]
 r590: [873..874]
 r591: [871..872]
 r592: [864..870]
 r593: [866..867]
 r594: [864..865]
 r595: [859..863]
 r596: [859..860]
 r597: [857..858]
 r598: [854..856]
 r599: [826..851]
 r600: [847..848]
 r601: [840..846]
 r602: [842..843]
 r603: [840..841]
 r604: [835..839]
 r605: [835..836]
 r606: [833..834]
 r607: [830..832]
 r608: [826..827]
 r609: [798..825]
 r610: [821..822]
 r611: [819..820]
 r612: [812..818]
 r613: [814..815]
 r614: [812..813]
 r615: [807..811]
 r616: [807..808]
 r617: [805..806]
 r618: [802..804]
 r619: [798..799]
 r620: [772..797]
 r621: [793..794]
 r622: [786..792]
 r623: [788..789]
 r624: [786..787]
 r625: [781..785]
 r626: [781..782]
 r627: [779..780]
 r628: [776..778]
 r629: [772..773]
 r630: [742..771]
 r631: [767..768]
 r632: [765..766]
 r633: [756..764]
 r634: [760..761]
 r635: [758..759]
 r636: [756..757]
 r637: [751..755]
 r638: [751..752]
 r639: [749..750]
 r640: [746..748]
 r641: [742..743]
 r642: [714..741]
 r643: [737..738]
 r644: [728..736]
 r645: [732..733]
 r646: [730..731]
 r647: [728..729]
 r648: [723..727]
 r649: [723..724]
 r650: [721..722]
 r651: [718..720]
 r652: [714..715]
 r653: [684..713]
 r654: [709..710]
 r655: [707..708]
 r656: [698..706]
 r657: [702..703]
 r658: [700..701]
 r659: [698..699]
 r660: [693..697]
 r661: [693..694]
 r662: [691..692]
 r663: [688..690]
 r664: [684..685]
 r665: [656..683]
 r666: [679..680]
 r667: [670..678]
 r668: [674..675]
 r669: [672..673]
 r670: [670..671]
 r671: [665..669]
 r672: [665..666]
 r673: [663..664]
 r674: [660..662]
 r675: [656..657]
 r676: [654..655]
 r677: [651..653]
 r678: [645..646]
 r679: [638..644]
 r680: [640..641]
 r681: [638..639]
 r682: [633..637]
 r683: [633..634]
 r684: [631..632]
 r685: [628..630]
 r686: [600..625]
 r687: [621..622]
 r688: [614..620]
 r689: [616..617]
 r690: [614..615]
 r691: [609..613]
 r692: [609..610]
 r693: [607..608]
 r694: [604..606]
 r695: [600..601]
 r696: [572..599]
 r697: [595..596]
 r698: [586..594]
 r699: [590..591]
 r700: [588..589]
 r701: [586..587]
 r702: [581..585]
 r703: [581..582]
 r704: [579..580]
 r705: [576..578]
 r706: [572..573]
 r707: [544..571]
 r708: [567..568]
 r709: [558..566]
 r710: [562..563]
 r711: [560..561]
 r712: [558..559]
 r713: [553..557]
 r714: [553..554]
 r715: [551..552]
 r716: [548..550]
 r717: [544..545]
 r718: [542..543]
 r719: [424..541]
 r720: [537..538]
 r721: [535..536]
 r722: [528..534]
 r723: [530..531]
 r724: [528..529]
 r725: [523..527]
 r726: [523..524]
 r727: [521..522]
 r728: [518..520]
 r729: [488..515]
 r730: [511..512]
 r731: [509..510]
 r732: [502..508]
 r733: [504..505]
 r734: [502..503]
 r735: [497..501]
 r736: [497..498]
 r737: [495..496]
 r738: [492..494]
 r739: [488..489]
 r740: [458..487]
 r741: [483..484]
 r742: [481..482]
 r743: [472..480]
 r744: [476..477]
 r745: [474..475]
 r746: [472..473]
 r747: [467..471]
 r748: [467..468]
 r749: [465..466]
 r750: [462..464]
 r751: [458..459]
 r752: [428..457]
 r753: [453..454]
 r754: [451..452]
 r755: [442..450]
 r756: [446..447]
 r757: [444..445]
 r758: [442..443]
 r759: [437..441]
 r760: [437..438]
 r761: [435..436]
 r762: [432..434]
 r763: [428..429]
 r764: [426..427]
 r765: [422..425]
 r766: [419..420]
 r767: [416..418]
 r768: [402..403]
 r769: [400..401]
 r770: [393..399]
 r771: [395..396]
 r772: [393..394]
 r773: [388..392]
 r774: [388..389]
 r775: [386..387]
 r776: [383..385]
 r777: [355..380]
 r778: [376..377]
 r779: [369..375]
 r780: [371..372]
 r781: [369..370]
 r782: [364..368]
 r783: [364..365]
 r784: [362..363]
 r785: [359..361]
 r786: [355..356]
 r787: [349..350]
 r788: [342..348]
 r789: [344..345]
 r790: [342..343]
 r791: [337..341]
 r792: [337..338]
 r793: [335..336]
 r794: [332..334]
 r795: [302..329]
 r796: [325..326]
 r797: [323..324]
 r798: [316..322]
 r799: [318..319]
 r800: [316..317]
 r801: [311..315]
 r802: [311..312]
 r803: [309..310]
 r804: [306..308]
 r805: [302..303]
 r806: [296..297]
 r807: [294..295]
 r808: [287..293]
 r809: [289..290]
 r810: [287..288]
 r811: [282..286]
 r812: [282..283]
 r813: [280..281]
 r814: [277..279]
 r815: [249..274]
 r816: [270..271]
 r817: [263..269]
 r818: [265..266]
 r819: [263..264]
 r820: [258..262]
 r821: [258..259]
 r822: [256..257]
 r823: [253..255]
 r824: [249..250]
 r825: [243..244]
 r826: [236..242]
 r827: [238..239]
 r828: [236..237]
 r829: [231..235]
 r830: [231..232]
 r831: [229..230]
 r832: [226..228]
 r833: [196..223]
 r834: [219..220]
 r835: [217..218]
 r836: [210..216]
 r837: [212..213]
 r838: [210..211]
 r839: [205..209]
 r840: [205..206]
 r841: [203..204]
 r842: [200..202]
 r843: [196..197]
 r844: [190..191]
 r845: [183..189]
 r846: [185..186]
 r847: [183..184]
 r848: [178..182]
 r849: [178..179]
 r850: [176..177]
 r851: [173..175]
 r852: [154..170]
 r853: [166..167]
 r854: [161..165]
 r855: [161..162]
 r856: [159..160]
 r857: [156..158]
 r858: [154..155]
 r859: [152..153]
 r860: [130..151]
 r861: [147..148]
 r862: [145..146]
 r863: [134..142]
 r864: [138..139]
 r865: [136..137]
 r866: [134..135]
 r867: [132..133]
 r868: [130..131]
 r869: [63..129]
 r870: [125..126]
 r871: [118..124]
 r872: [120..121]
 r873: [118..119]
 r874: [113..117]
 r875: [113..114]
 r876: [111..112]
 r877: [108..110]
 r878: [89..105]
 r879: [101..102]
 r880: [96..100]
 r881: [96..97]
 r882: [94..95]
 r883: [91..93]
 r884: [89..90]
 r885: [87..88]
 r886: [65..86]
 r887: [82..83]
 r888: [80..81]
 r889: [69..77]
 r890: [73..74]
 r891: [71..72]
 r892: [69..70]
 r893: [67..68]
 r894: [65..66]
 r895: [63..64]
 r896: [61..62]
 r897: [59..60]
 r898: [52..58]
 r899: [54..55]
 r900: [50..53]
 r901: [20..48]
 r902: [44..45]
 r903: [39..43]
 r904: [39..40]
 r905: [37..38]
 r906: [34..36]
 r907: [20..33]
 r908: [29..30]
 r909: [24..28]
 r910: [24..25]
 r911: [22..23]
 r912: [17..21]
 r913: [17..19]
 r914: [2394..2396]
 r915: [2320..2395]
 r916: [2320..2321]
 r917: [2327..2328]
 r918: [2301..2302]
 r919: [1857..1858]
 r920: [2298..2300]
 r921: [1861..2299]
 r922: [1861..1862]
 r923: [1868..1869]
 r924: [1854..1856]
 r925: [1582..1855]
 r926: [1582..1583]
 r927: [1589..1590]
 r928: [0..1]
 r929: [1579..1581]
 r930: [4..1580]
 r931: [4..5]
 r932: [11..12]
 r933: [2322..2323]
 r934: [2329..2330]
 r935: [2390..2391]
 r936: [2385..2386]
 r937: [2377..2379]
 r938: [2377..2378]
 r939: [2375..2376]
 r940: [2370..2371]
 r941: [2362..2364]
 r942: [2362..2363]
 r943: [2360..2361]
 r944: [2355..2356]
 r945: [2347..2349]
 r946: [2347..2348]
 r947: [2345..2346]
 r948: [2340..2341]
 r949: [2332..2334]
 r950: [2332..2333]
 r951: [2303..2304]
 r952: [2318..2319]
 r953: [2310..2311]
 r954: [2307..2309]
 r955: [2307..2308]
 r956: [1859..1860]
 r957: [1863..1864]
 r958: [1870..1871]
 r959: [2294..2295]
 r960: [2288..2289]
 r963: [2283..2284]
 r964: [2285..2286]
 r965: [2281..2282]
 r966: [2275..2276]
 r969: [2270..2271]
 r970: [2272..2273]
 r971: [2268..2269]
 r972: [2263..2264]
 r973: [2256..2257]
 r974: [2253..2254]
 r975: [2248..2249]
 r976: [2239..2242]
 r977: [2239..2240]
 r978: [2234..2235]
 r979: [2229..2230]
 r980: [2222..2223]
 r981: [2219..2220]
 r982: [2214..2215]
 r983: [2205..2208]
 r984: [2205..2206]
 r985: [2198..2199]
 r986: [2191..2192]
 r987: [2184..2185]
 r988: [2181..2182]
 r989: [2174..2175]
 r990: [2165..2168]
 r991: [2165..2166]
 r992: [2158..2159]
 r993: [2151..2152]
 r994: [2144..2145]
 r995: [2141..2142]
 r996: [2134..2135]
 r997: [2125..2128]
 r998: [2125..2126]
 r999: [2114..2115]
 r1000: [2116..2117]
 r1001: [2112..2113]
 r1002: [2107..2108]
 r1003: [2098..2101]
 r1004: [2098..2099]
 r1005: [2089..2092]
 r1006: [2089..2090]
 r1007: [2082..2083]
 r1008: [2078..2079]
 r1009: [2076..2077]
 r1010: [2069..2072]
 r1011: [2069..2070]
 r1012: [2062..2063]
 r1013: [2058..2059]
 r1014: [2055..2057]
 r1015: [2055..2056]
 r1016: [2050..2051]
 r1017: [2047..2048]
 r1018: [2042..2043]
 r1019: [2035..2036]
 r1020: [2032..2033]
 r1021: [2027..2028]
 r1022: [2020..2021]
 r1023: [2011..2014]
 r1024: [2011..2012]
 r1025: [2008..2009]
 r1026: [2001..2004]
 r1027: [2001..2002]
 r1028: [1996..1997]
 r1029: [1991..1992]
 r1030: [1982..1983]
 r1031: [1980..1981]
 r1032: [1975..1976]
 r1033: [1968..1969]
 r1034: [1965..1966]
 r1035: [1960..1961]
 r1036: [1953..1954]
 r1037: [1944..1947]
 r1038: [1944..1945]
 r1039: [1941..1942]
 r1040: [1934..1937]
 r1041: [1934..1935]
 r1042: [1929..1930]
 r1043: [1924..1925]
 r1044: [1915..1916]
 r1045: [1913..1914]
 r1046: [1908..1909]
 r1047: [1901..1902]
 r1048: [1898..1899]
 r1049: [1891..1894]
 r1050: [1891..1892]
 r1051: [1888..1889]
 r1052: [1883..1884]
 r1053: [1874..1875]
 r1054: [1584..1585]
 r1055: [1591..1592]
 r1056: [1850..1851]
 r1057: [1845..1846]
 r1058: [1838..1839]
 r1059: [1835..1836]
 r1060: [1801..1802]
 r1061: [1796..1797]
 r1062: [1789..1790]
 r1063: [1786..1787]
 r1064: [1781..1782]
 r1065: [1774..1775]
 r1066: [1770..1771]
 r1067: [1768..1769]
 r1068: [1763..1764]
 r1069: [1756..1757]
 r1070: [1753..1754]
 r1071: [1748..1749]
 r1072: [1741..1742]
 r1073: [1737..1738]
 r1074: [1735..1736]
 r1075: [1730..1731]
 r1076: [1724..1725]
 r1077: [1722..1723]
 r1078: [1671..1672]
 r1079: [1669..1670]
 r1080: [1662..1663]
 r1081: [1654..1655]
 r1082: [1652..1653]
 r1083: [1645..1646]
 r1084: [1636..1637]
 r1085: [1631..1632]
 r1086: [1633..1635]
 r1087: [1633..1634]
 r1088: [1626..1627]
 r1089: [1628..1630]
 r1090: [1628..1629]
 r1091: [1719..1720]
 r1092: [1717..1718]
 r1093: [1710..1711]
 r1094: [1702..1703]
 r1095: [1700..1701]
 r1096: [1693..1694]
 r1097: [1684..1685]
 r1098: [1679..1680]
 r1099: [1681..1683]
 r1100: [1681..1682]
 r1101: [1674..1675]
 r1102: [1676..1678]
 r1103: [1676..1677]
 r1104: [1623..1624]
 r1105: [1618..1619]
 r1106: [1610..1612]
 r1107: [1610..1611]
 r1108: [1608..1609]
 r1109: [1603..1604]
 r1110: [1595..1597]
 r1111: [1595..1596]
 r1112: [1832..1833]
 r1113: [1827..1828]
 r1114: [1819..1821]
 r1115: [1819..1820]
 r1116: [1817..1818]
 r1117: [1812..1813]
 r1118: [1804..1806]
 r1119: [1804..1805]
 r1120: [2..3]
 r1121: [6..7]
 r1122: [13..14]
 r1123: [1575..1576]
 r1124: [1569..1570]
 r1127: [1564..1565]
 r1128: [1566..1567]
 r1129: [1562..1563]
 r1130: [1556..1557]
 r1133: [1551..1552]
 r1134: [1553..1554]
 r1135: [1549..1550]
 r1136: [1544..1545]
 r1137: [1537..1538]
 r1138: [1528..1531]
 r1139: [1528..1529]
 r1140: [1525..1526]
 r1141: [1518..1519]
 r1142: [1511..1512]
 r1143: [1502..1505]
 r1144: [1502..1503]
 r1145: [1497..1498]
 r1146: [1492..1493]
 r1147: [1485..1486]
 r1148: [1476..1479]
 r1149: [1476..1477]
 r1150: [1471..1472]
 r1151: [1464..1465]
 r1152: [1457..1458]
 r1153: [1448..1451]
 r1154: [1448..1449]
 r1155: [1443..1444]
 r1156: [1438..1439]
 r1157: [1429..1430]
 r1158: [1420..1423]
 r1159: [1420..1421]
 r1160: [1415..1416]
 r1161: [1408..1409]
 r1162: [1399..1400]
 r1163: [1390..1393]
 r1164: [1390..1391]
 r1165: [1385..1386]
 r1166: [1380..1381]
 r1167: [1371..1372]
 r1168: [1362..1365]
 r1169: [1362..1363]
 r1170: [1357..1358]
 r1171: [1350..1351]
 r1172: [1341..1342]
 r1173: [1332..1335]
 r1174: [1332..1333]
 r1175: [1323..1324]
 r1176: [1325..1326]
 r1177: [1321..1322]
 r1178: [1316..1317]
 r1179: [1307..1310]
 r1180: [1307..1308]
 r1181: [1298..1299]
 r1182: [1291..1292]
 r1183: [1282..1285]
 r1184: [1282..1283]
 r1185: [1279..1280]
 r1186: [1274..1275]
 r1187: [1265..1268]
 r1188: [1265..1266]
 r1189: [1256..1257]
 r1190: [1249..1250]
 r1191: [1240..1243]
 r1192: [1240..1241]
 r1193: [1235..1236]
 r1194: [1230..1231]
 r1195: [1221..1224]
 r1196: [1221..1222]
 r1197: [1212..1213]
 r1198: [1203..1204]
 r1199: [1194..1197]
 r1200: [1194..1195]
 r1201: [1189..1190]
 r1202: [1184..1185]
 r1203: [1175..1178]
 r1204: [1175..1176]
 r1205: [1166..1167]
 r1206: [1157..1158]
 r1207: [1148..1151]
 r1208: [1148..1149]
 r1209: [1139..1140]
 r1210: [1141..1142]
 r1211: [1135..1136]
 r1212: [1137..1138]
 r1213: [1133..1134]
 r1214: [1130..1131]
 r1215: [1125..1126]
 r1216: [1116..1119]
 r1217: [1116..1117]
 r1218: [1111..1112]
 r1219: [1104..1105]
 r1220: [1097..1098]
 r1221: [1088..1091]
 r1222: [1088..1089]
 r1223: [1085..1086]
 r1224: [1078..1079]
 r1225: [1071..1072]
 r1226: [1062..1065]
 r1227: [1062..1063]
 r1228: [1057..1058]
 r1229: [1050..1051]
 r1230: [1043..1044]
 r1231: [1034..1037]
 r1232: [1034..1035]
 r1233: [1029..1030]
 r1234: [1022..1023]
 r1235: [1015..1016]
 r1236: [1006..1009]
 r1237: [1006..1007]
 r1238: [1001..1002]
 r1239: [994..995]
 r1240: [985..986]
 r1241: [976..979]
 r1242: [976..977]
 r1243: [971..972]
 r1244: [964..965]
 r1245: [955..956]
 r1246: [946..949]
 r1247: [946..947]
 r1248: [941..942]
 r1249: [934..935]
 r1250: [925..926]
 r1251: [916..919]
 r1252: [916..917]
 r1253: [911..912]
 r1254: [904..905]
 r1255: [895..896]
 r1256: [886..889]
 r1257: [886..887]
 r1258: [877..878]
 r1259: [879..880]
 r1260: [875..876]
 r1261: [868..869]
 r1262: [861..862]
 r1263: [852..855]
 r1264: [852..853]
 r1265: [849..850]
 r1266: [844..845]
 r1267: [837..838]
 r1268: [828..831]
 r1269: [828..829]
 r1270: [823..824]
 r1271: [816..817]
 r1272: [809..810]
 r1273: [800..803]
 r1274: [800..801]
 r1275: [795..796]
 r1276: [790..791]
 r1277: [783..784]
 r1278: [774..777]
 r1279: [774..775]
 r1280: [769..770]
 r1281: [762..763]
 r1282: [753..754]
 r1283: [744..747]
 r1284: [744..745]
 r1285: [739..740]
 r1286: [734..735]
 r1287: [725..726]
 r1288: [716..719]
 r1289: [716..717]
 r1290: [711..712]
 r1291: [704..705]
 r1292: [695..696]
 r1293: [686..689]
 r1294: [686..687]
 r1295: [681..682]
 r1296: [676..677]
 r1297: [667..668]
 r1298: [658..661]
 r1299: [658..659]
 r1300: [649..650]
 r1301: [651..652]
 r1302: [647..648]
 r1303: [642..643]
 r1304: [635..636]
 r1305: [626..629]
 r1306: [626..627]
 r1307: [623..624]
 r1308: [618..619]
 r1309: [611..612]
 r1310: [602..605]
 r1311: [602..603]
 r1312: [597..598]
 r1313: [592..593]
 r1314: [583..584]
 r1315: [574..577]
 r1316: [574..575]
 r1317: [569..570]
 r1318: [564..565]
 r1319: [555..556]
 r1320: [546..549]
 r1321: [546..547]
 r1322: [539..540]
 r1323: [532..533]
 r1324: [525..526]
 r1325: [516..519]
 r1326: [516..517]
 r1327: [513..514]
 r1328: [506..507]
 r1329: [499..500]
 r1330: [490..493]
 r1331: [490..491]
 r1332: [485..486]
 r1333: [478..479]
 r1334: [469..470]
 r1335: [460..463]
 r1336: [460..461]
 r1337: [455..456]
 r1338: [448..449]
 r1339: [439..440]
 r1340: [430..433]
 r1341: [430..431]
 r1342: [414..415]
 r1343: [416..417]
 r1344: [410..411]
 r1345: [412..413]
 r1346: [406..407]
 r1347: [408..409]
 r1348: [404..405]
 r1349: [397..398]
 r1350: [390..391]
 r1351: [381..384]
 r1352: [381..382]
 r1353: [378..379]
 r1354: [373..374]
 r1355: [366..367]
 r1356: [357..360]
 r1357: [357..358]
 r1358: [353..354]
 r1359: [351..352]
 r1360: [346..347]
 r1361: [339..340]
 r1362: [330..333]
 r1363: [330..331]
 r1364: [327..328]
 r1365: [320..321]
 r1366: [313..314]
 r1367: [304..307]
 r1368: [304..305]
 r1369: [300..301]
 r1370: [298..299]
 r1371: [291..292]
 r1372: [284..285]
 r1373: [275..278]
 r1374: [275..276]
 r1375: [272..273]
 r1376: [267..268]
 r1377: [260..261]
 r1378: [251..254]
 r1379: [251..252]
 r1380: [247..248]
 r1381: [245..246]
 r1382: [240..241]
 r1383: [233..234]
 r1384: [224..227]
 r1385: [224..225]
 r1386: [221..222]
 r1387: [214..215]
 r1388: [207..208]
 r1389: [198..201]
 r1390: [198..199]
 r1391: [194..195]
 r1392: [192..193]
 r1393: [187..188]
 r1394: [180..181]
 r1395: [171..174]
 r1396: [171..172]
 r1397: [168..169]
 r1398: [163..164]
 r1399: [156..157]
 r1400: [149..150]
 r1401: [140..141]
 r1402: [127..128]
 r1403: [122..123]
 r1404: [115..116]
 r1405: [106..109]
 r1406: [106..107]
 r1407: [103..104]
 r1408: [98..99]
 r1409: [91..92]
 r1410: [84..85]
 r1411: [75..76]
 r1412: [56..57]
 r1413: [46..47]
 r1414: [41..42]
 r1415: [34..35]
 r1416: [31..32]
 r1417: [26..27]
 r1418: [17..18]
 r1419: [2085..2086]
 r1420: [2065..2066]
 r1421: [1733..1734]
 r1422: [1665..1666]
 r1424: [1648..1649]
 r1425: [1638..1640]
 r1426: [1713..1714]
 r1428: [1696..1697]
 r1429: [1686..1688]
 r1430: [421..423]
 r1431: [143..144]
 r1432: [78..79]
 r1433: [49..51]
 r1438: [1704..1705]
 r1439: [1656..1657]
 r1440: [1641..1647]
 r1441: [1658..1664]
 r1442: [1689..1695]
 r1443: [1706..1712]
Compressing live ranges: from 2397 to 2036 - 84%
Ranges after the compression:
 r87: [2030..2031]
 r88: [2026..2029]
 r89: [2026..2027]
 r90: [2024..2025]
 r91: [2022..2023]
 r92: [2018..2019]
 r93: [2014..2017]
 r94: [2014..2015]
 r95: [2012..2013]
 r96: [2010..2011]
 r97: [2006..2007]
 r98: [2002..2005]
 r99: [2002..2003]
 r100: [2000..2001]
 r101: [1998..1999]
 r102: [1994..1995]
 r103: [1990..1993]
 r104: [1990..1991]
 r105: [1988..1989]
 r106: [1986..1987]
 r107: [1974..1975]
 r108: [1972..1973]
 r109: [1970..1971]
 r110: [1964..1965]
 r111: [1954..1955]
 r112: [1952..1953]
 r113: [1948..1949]
 r114: [1942..1943]
 r115: [1940..1941]
 r116: [1936..1937]
 r117: [1930..1931]
 r118: [1926..1929]
 r119: [1926..1927]
 r120: [1924..1925]
 r121: [1922..1923]
 r122: [1906..1921]
 r123: [1918..1919]
 r124: [1914..1917]
 r125: [1914..1915]
 r126: [1912..1913]
 r127: [1910..1911]
 r128: [1906..1907]
 r129: [1876..1905]
 r130: [1902..1903]
 r131: [1898..1901]
 r132: [1898..1899]
 r133: [1896..1897]
 r134: [1894..1895]
 r135: [1878..1893]
 r136: [1890..1891]
 r137: [1886..1889]
 r138: [1886..1887]
 r139: [1884..1885]
 r140: [1882..1883]
 r141: [1878..1879]
 r142: [1876..1877]
 r143: [1842..1875]
 r144: [1872..1873]
 r145: [1870..1871]
 r146: [1866..1869]
 r147: [1866..1867]
 r148: [1864..1865]
 r149: [1862..1863]
 r150: [1844..1861]
 r151: [1858..1859]
 r152: [1856..1857]
 r153: [1852..1855]
 r154: [1852..1853]
 r155: [1850..1851]
 r156: [1848..1849]
 r157: [1844..1845]
 r158: [1842..1843]
 r159: [1808..1841]
 r160: [1838..1839]
 r161: [1836..1837]
 r162: [1832..1835]
 r163: [1832..1833]
 r164: [1830..1831]
 r165: [1828..1829]
 r166: [1810..1827]
 r167: [1824..1825]
 r168: [1822..1823]
 r169: [1818..1821]
 r170: [1818..1819]
 r171: [1816..1817]
 r172: [1814..1815]
 r173: [1810..1811]
 r174: [1808..1809]
 r175: [1806..1807]
 r176: [1804..1805]
 r177: [1798..1799]
 r178: [1794..1797]
 r179: [1794..1795]
 r180: [1792..1793]
 r181: [1790..1791]
 r182: [1786..1787]
 r183: [1784..1785]
 r184: [1782..1783]
 r185: [1778..1779]
 r186: [1772..1775]
 r187: [1772..1773]
 r188: [1766..1767]
 r189: [1764..1765]
 r190: [1760..1761]
 r191: [1754..1757]
 r192: [1754..1755]
 r193: [1748..1749]
 r194: [1742..1743]
 r195: [1738..1741]
 r196: [1738..1739]
 r197: [1736..1737]
 r198: [1734..1735]
 r199: [1692..1733]
 r200: [1730..1731]
 r201: [1724..1729]
 r202: [1726..1727]
 r203: [1724..1725]
 r204: [1720..1723]
 r205: [1720..1721]
 r206: [1718..1719]
 r207: [1716..1717]
 r208: [1704..1713]
 r209: [1710..1711]
 r210: [1708..1709]
 r211: [1704..1705]
 r212: [1692..1703]
 r213: [1700..1701]
 r214: [1696..1699]
 r215: [1696..1697]
 r216: [1694..1695]
 r217: [1690..1693]
 r218: [1690..1691]
 r219: [1686..1687]
 r220: [1682..1685]
 r221: [1682..1683]
 r222: [1680..1681]
 r223: [1678..1679]
 r224: [1636..1677]
 r225: [1674..1675]
 r226: [1668..1673]
 r227: [1670..1671]
 r228: [1668..1669]
 r229: [1664..1667]
 r230: [1664..1665]
 r231: [1662..1663]
 r232: [1660..1661]
 r233: [1648..1657]
 r234: [1654..1655]
 r235: [1652..1653]
 r236: [1648..1649]
 r237: [1636..1647]
 r238: [1644..1645]
 r239: [1640..1643]
 r240: [1640..1641]
 r241: [1638..1639]
 r242: [1634..1637]
 r243: [1634..1635]
 r244: [1630..1631]
 r245: [1626..1629]
 r246: [1626..1627]
 r247: [1624..1625]
 r248: [1622..1623]
 r249: [1602..1621]
 r250: [1618..1619]
 r251: [1616..1617]
 r252: [1602..1613]
 r253: [1610..1611]
 r254: [1606..1609]
 r255: [1606..1607]
 r256: [1604..1605]
 r257: [1600..1603]
 r258: [1600..1601]
 r259: [1582..1583]
 r260: [1578..1581]
 r261: [1578..1579]
 r262: [1576..1577]
 r263: [1574..1575]
 r264: [1572..1573]
 r265: [1544..1545]
 r266: [1540..1543]
 r267: [1540..1541]
 r268: [1538..1539]
 r269: [1536..1537]
 r270: [1522..1535]
 r271: [1532..1533]
 r272: [1528..1531]
 r273: [1528..1529]
 r274: [1526..1527]
 r275: [1524..1525]
 r276: [1522..1523]
 r277: [1516..1517]
 r278: [1512..1515]
 r279: [1512..1513]
 r280: [1510..1511]
 r281: [1508..1509]
 r282: [1494..1507]
 r283: [1504..1505]
 r284: [1500..1503]
 r285: [1500..1501]
 r286: [1498..1499]
 r287: [1496..1497]
 r288: [1494..1495]
 r289: [1484..1487]
 r290: [1484..1485]
 r291: [1482..1483]
 r292: [1430..1431]
 r294: [1424..1425]
 r295: [1420..1423]
 r296: [1414..1415]
 r298: [1408..1409]
 r299: [1404..1407]
 r300: [1472..1473]
 r302: [1466..1467]
 r303: [1462..1465]
 r304: [1456..1457]
 r306: [1450..1451]
 r307: [1446..1449]
 r308: [1390..1391]
 r309: [1386..1389]
 r310: [1386..1387]
 r311: [1384..1385]
 r312: [1382..1383]
 r313: [1378..1379]
 r314: [1374..1377]
 r315: [1374..1375]
 r316: [1372..1373]
 r317: [1370..1371]
 r318: [1568..1569]
 r319: [1564..1567]
 r320: [1564..1565]
 r321: [1562..1563]
 r322: [1560..1561]
 r323: [1556..1557]
 r324: [1552..1555]
 r325: [1552..1553]
 r326: [1550..1551]
 r327: [1548..1549]
 r328: [1356..1357]
 r329: [1354..1355]
 r330: [1350..1351]
 r331: [1344..1345]
 r332: [1342..1343]
 r333: [1338..1339]
 r334: [1332..1333]
 r335: [1326..1331]
 r336: [1328..1329]
 r337: [1326..1327]
 r338: [1322..1325]
 r339: [1322..1323]
 r340: [1320..1321]
 r341: [1318..1319]
 r342: [1292..1315]
 r343: [1312..1313]
 r344: [1310..1311]
 r345: [1304..1309]
 r346: [1306..1307]
 r347: [1304..1305]
 r348: [1300..1303]
 r349: [1300..1301]
 r350: [1298..1299]
 r351: [1296..1297]
 r352: [1292..1293]
 r353: [1270..1291]
 r354: [1288..1289]
 r355: [1282..1287]
 r356: [1284..1285]
 r357: [1282..1283]
 r358: [1278..1281]
 r359: [1278..1279]
 r360: [1276..1277]
 r361: [1274..1275]
 r362: [1270..1271]
 r363: [1246..1269]
 r364: [1266..1267]
 r365: [1264..1265]
 r366: [1258..1263]
 r367: [1260..1261]
 r368: [1258..1259]
 r369: [1254..1257]
 r370: [1254..1255]
 r371: [1252..1253]
 r372: [1250..1251]
 r373: [1246..1247]
 r374: [1222..1245]
 r375: [1242..1243]
 r376: [1234..1241]
 r377: [1238..1239]
 r378: [1236..1237]
 r379: [1234..1235]
 r380: [1230..1233]
 r381: [1230..1231]
 r382: [1228..1229]
 r383: [1226..1227]
 r384: [1222..1223]
 r385: [1196..1221]
 r386: [1218..1219]
 r387: [1216..1217]
 r388: [1208..1215]
 r389: [1212..1213]
 r390: [1210..1211]
 r391: [1208..1209]
 r392: [1204..1207]
 r393: [1204..1205]
 r394: [1202..1203]
 r395: [1200..1201]
 r396: [1196..1197]
 r397: [1172..1195]
 r398: [1192..1193]
 r399: [1184..1191]
 r400: [1188..1189]
 r401: [1186..1187]
 r402: [1184..1185]
 r403: [1180..1183]
 r404: [1180..1181]
 r405: [1178..1179]
 r406: [1176..1177]
 r407: [1172..1173]
 r408: [1146..1171]
 r409: [1168..1169]
 r410: [1166..1167]
 r411: [1158..1165]
 r412: [1162..1163]
 r413: [1160..1161]
 r414: [1158..1159]
 r415: [1154..1157]
 r416: [1154..1155]
 r417: [1152..1153]
 r418: [1150..1151]
 r419: [1146..1147]
 r420: [1144..1145]
 r421: [1142..1143]
 r422: [1136..1137]
 r423: [1132..1135]
 r424: [1132..1133]
 r425: [1130..1131]
 r426: [1128..1129]
 r427: [1124..1125]
 r428: [1122..1123]
 r429: [1120..1121]
 r430: [1114..1119]
 r431: [1116..1117]
 r432: [1114..1115]
 r433: [1110..1113]
 r434: [1110..1111]
 r435: [1108..1109]
 r436: [1106..1107]
 r437: [1066..1103]
 r438: [1100..1101]
 r439: [1096..1099]
 r440: [1096..1097]
 r441: [1094..1095]
 r442: [1092..1093]
 r443: [1088..1089]
 r444: [1086..1087]
 r445: [1084..1085]
 r446: [1078..1083]
 r447: [1080..1081]
 r448: [1078..1079]
 r449: [1074..1077]
 r450: [1074..1075]
 r451: [1072..1073]
 r452: [1070..1071]
 r453: [1066..1067]
 r454: [1026..1065]
 r455: [1062..1063]
 r456: [1058..1061]
 r457: [1058..1059]
 r458: [1056..1057]
 r459: [1054..1055]
 r460: [1050..1051]
 r461: [1048..1049]
 r462: [1046..1047]
 r463: [1038..1045]
 r464: [1042..1043]
 r465: [1040..1041]
 r466: [1038..1039]
 r467: [1034..1037]
 r468: [1034..1035]
 r469: [1032..1033]
 r470: [1030..1031]
 r471: [1026..1027]
 r472: [986..1025]
 r473: [1022..1023]
 r474: [1018..1021]
 r475: [1018..1019]
 r476: [1016..1017]
 r477: [1014..1015]
 r478: [1010..1011]
 r479: [1008..1009]
 r480: [1006..1007]
 r481: [998..1005]
 r482: [1002..1003]
 r483: [1000..1001]
 r484: [998..999]
 r485: [994..997]
 r486: [994..995]
 r487: [992..993]
 r488: [990..991]
 r489: [986..987]
 r490: [984..985]
 r491: [982..983]
 r492: [970..971]
 r493: [966..969]
 r494: [966..967]
 r495: [964..965]
 r496: [962..963]
 r497: [958..959]
 r498: [954..955]
 r499: [952..953]
 r500: [946..951]
 r501: [948..949]
 r502: [946..947]
 r503: [942..945]
 r504: [942..943]
 r505: [940..941]
 r506: [938..939]
 r507: [912..935]
 r508: [932..933]
 r509: [930..931]
 r510: [924..929]
 r511: [926..927]
 r512: [924..925]
 r513: [920..923]
 r514: [920..921]
 r515: [918..919]
 r516: [916..917]
 r517: [912..913]
 r518: [888..911]
 r519: [908..909]
 r520: [906..907]
 r521: [900..905]
 r522: [902..903]
 r523: [900..901]
 r524: [896..899]
 r525: [896..897]
 r526: [894..895]
 r527: [892..893]
 r528: [888..889]
 r529: [864..887]
 r530: [884..885]
 r531: [882..883]
 r532: [876..881]
 r533: [878..879]
 r534: [876..877]
 r535: [872..875]
 r536: [872..873]
 r537: [870..871]
 r538: [868..869]
 r539: [864..865]
 r540: [838..863]
 r541: [860..861]
 r542: [858..859]
 r543: [850..857]
 r544: [854..855]
 r545: [852..853]
 r546: [850..851]
 r547: [846..849]
 r548: [846..847]
 r549: [844..845]
 r550: [842..843]
 r551: [838..839]
 r552: [812..837]
 r553: [834..835]
 r554: [832..833]
 r555: [824..831]
 r556: [828..829]
 r557: [826..827]
 r558: [824..825]
 r559: [820..823]
 r560: [820..821]
 r561: [818..819]
 r562: [816..817]
 r563: [812..813]
 r564: [786..811]
 r565: [808..809]
 r566: [806..807]
 r567: [798..805]
 r568: [802..803]
 r569: [800..801]
 r570: [798..799]
 r571: [794..797]
 r572: [794..795]
 r573: [792..793]
 r574: [790..791]
 r575: [786..787]
 r576: [760..785]
 r577: [782..783]
 r578: [780..781]
 r579: [772..779]
 r580: [776..777]
 r581: [774..775]
 r582: [772..773]
 r583: [768..771]
 r584: [768..769]
 r585: [766..767]
 r586: [764..765]
 r587: [760..761]
 r588: [758..759]
 r589: [756..757]
 r590: [750..751]
 r591: [748..749]
 r592: [742..747]
 r593: [744..745]
 r594: [742..743]
 r595: [738..741]
 r596: [738..739]
 r597: [736..737]
 r598: [734..735]
 r599: [710..731]
 r600: [728..729]
 r601: [722..727]
 r602: [724..725]
 r603: [722..723]
 r604: [718..721]
 r605: [718..719]
 r606: [716..717]
 r607: [714..715]
 r608: [710..711]
 r609: [686..709]
 r610: [706..707]
 r611: [704..705]
 r612: [698..703]
 r613: [700..701]
 r614: [698..699]
 r615: [694..697]
 r616: [694..695]
 r617: [692..693]
 r618: [690..691]
 r619: [686..687]
 r620: [664..685]
 r621: [682..683]
 r622: [676..681]
 r623: [678..679]
 r624: [676..677]
 r625: [672..675]
 r626: [672..673]
 r627: [670..671]
 r628: [668..669]
 r629: [664..665]
 r630: [638..663]
 r631: [660..661]
 r632: [658..659]
 r633: [650..657]
 r634: [654..655]
 r635: [652..653]
 r636: [650..651]
 r637: [646..649]
 r638: [646..647]
 r639: [644..645]
 r640: [642..643]
 r641: [638..639]
 r642: [614..637]
 r643: [634..635]
 r644: [626..633]
 r645: [630..631]
 r646: [628..629]
 r647: [626..627]
 r648: [622..625]
 r649: [622..623]
 r650: [620..621]
 r651: [618..619]
 r652: [614..615]
 r653: [588..613]
 r654: [610..611]
 r655: [608..609]
 r656: [600..607]
 r657: [604..605]
 r658: [602..603]
 r659: [600..601]
 r660: [596..599]
 r661: [596..597]
 r662: [594..595]
 r663: [592..593]
 r664: [588..589]
 r665: [564..587]
 r666: [584..585]
 r667: [576..583]
 r668: [580..581]
 r669: [578..579]
 r670: [576..577]
 r671: [572..575]
 r672: [572..573]
 r673: [570..571]
 r674: [568..569]
 r675: [564..565]
 r676: [562..563]
 r677: [560..561]
 r678: [554..555]
 r679: [548..553]
 r680: [550..551]
 r681: [548..549]
 r682: [544..547]
 r683: [544..545]
 r684: [542..543]
 r685: [540..541]
 r686: [516..537]
 r687: [534..535]
 r688: [528..533]
 r689: [530..531]
 r690: [528..529]
 r691: [524..527]
 r692: [524..525]
 r693: [522..523]
 r694: [520..521]
 r695: [516..517]
 r696: [492..515]
 r697: [512..513]
 r698: [504..511]
 r699: [508..509]
 r700: [506..507]
 r701: [504..505]
 r702: [500..503]
 r703: [500..501]
 r704: [498..499]
 r705: [496..497]
 r706: [492..493]
 r707: [468..491]
 r708: [488..489]
 r709: [480..487]
 r710: [484..485]
 r711: [482..483]
 r712: [480..481]
 r713: [476..479]
 r714: [476..477]
 r715: [474..475]
 r716: [472..473]
 r717: [468..469]
 r718: [466..467]
 r719: [364..465]
 r720: [462..463]
 r721: [460..461]
 r722: [454..459]
 r723: [456..457]
 r724: [454..455]
 r725: [450..453]
 r726: [450..451]
 r727: [448..449]
 r728: [446..447]
 r729: [420..443]
 r730: [440..441]
 r731: [438..439]
 r732: [432..437]
 r733: [434..435]
 r734: [432..433]
 r735: [428..431]
 r736: [428..429]
 r737: [426..427]
 r738: [424..425]
 r739: [420..421]
 r740: [394..419]
 r741: [416..417]
 r742: [414..415]
 r743: [406..413]
 r744: [410..411]
 r745: [408..409]
 r746: [406..407]
 r747: [402..405]
 r748: [402..403]
 r749: [400..401]
 r750: [398..399]
 r751: [394..395]
 r752: [368..393]
 r753: [390..391]
 r754: [388..389]
 r755: [380..387]
 r756: [384..385]
 r757: [382..383]
 r758: [380..381]
 r759: [376..379]
 r760: [376..377]
 r761: [374..375]
 r762: [372..373]
 r763: [368..369]
 r764: [366..367]
 r765: [362..365]
 r766: [360..361]
 r767: [358..359]
 r768: [344..345]
 r769: [342..343]
 r770: [336..341]
 r771: [338..339]
 r772: [336..337]
 r773: [332..335]
 r774: [332..333]
 r775: [330..331]
 r776: [328..329]
 r777: [304..325]
 r778: [322..323]
 r779: [316..321]
 r780: [318..319]
 r781: [316..317]
 r782: [312..315]
 r783: [312..313]
 r784: [310..311]
 r785: [308..309]
 r786: [304..305]
 r787: [298..299]
 r788: [292..297]
 r789: [294..295]
 r790: [292..293]
 r791: [288..291]
 r792: [288..289]
 r793: [286..287]
 r794: [284..285]
 r795: [258..281]
 r796: [278..279]
 r797: [276..277]
 r798: [270..275]
 r799: [272..273]
 r800: [270..271]
 r801: [266..269]
 r802: [266..267]
 r803: [264..265]
 r804: [262..263]
 r805: [258..259]
 r806: [252..253]
 r807: [250..251]
 r808: [244..249]
 r809: [246..247]
 r810: [244..245]
 r811: [240..243]
 r812: [240..241]
 r813: [238..239]
 r814: [236..237]
 r815: [212..233]
 r816: [230..231]
 r817: [224..229]
 r818: [226..227]
 r819: [224..225]
 r820: [220..223]
 r821: [220..221]
 r822: [218..219]
 r823: [216..217]
 r824: [212..213]
 r825: [206..207]
 r826: [200..205]
 r827: [202..203]
 r828: [200..201]
 r829: [196..199]
 r830: [196..197]
 r831: [194..195]
 r832: [192..193]
 r833: [166..189]
 r834: [186..187]
 r835: [184..185]
 r836: [178..183]
 r837: [180..181]
 r838: [178..179]
 r839: [174..177]
 r840: [174..175]
 r841: [172..173]
 r842: [170..171]
 r843: [166..167]
 r844: [160..161]
 r845: [154..159]
 r846: [156..157]
 r847: [154..155]
 r848: [150..153]
 r849: [150..151]
 r850: [148..149]
 r851: [146..147]
 r852: [130..143]
 r853: [140..141]
 r854: [136..139]
 r855: [136..137]
 r856: [134..135]
 r857: [132..133]
 r858: [130..131]
 r859: [128..129]
 r860: [108..127]
 r861: [124..125]
 r862: [122..123]
 r863: [112..119]
 r864: [116..117]
 r865: [114..115]
 r866: [112..113]
 r867: [110..111]
 r868: [108..109]
 r869: [50..107]
 r870: [104..105]
 r871: [98..103]
 r872: [100..101]
 r873: [98..99]
 r874: [94..97]
 r875: [94..95]
 r876: [92..93]
 r877: [90..91]
 r878: [74..87]
 r879: [84..85]
 r880: [80..83]
 r881: [80..81]
 r882: [78..79]
 r883: [76..77]
 r884: [74..75]
 r885: [72..73]
 r886: [52..71]
 r887: [68..69]
 r888: [66..67]
 r889: [56..63]
 r890: [60..61]
 r891: [58..59]
 r892: [56..57]
 r893: [54..55]
 r894: [52..53]
 r895: [50..51]
 r896: [48..49]
 r897: [46..47]
 r898: [40..45]
 r899: [42..43]
 r900: [38..41]
 r901: [14..37]
 r902: [34..35]
 r903: [30..33]
 r904: [30..31]
 r905: [28..29]
 r906: [26..27]
 r907: [14..25]
 r908: [22..23]
 r909: [18..21]
 r910: [18..19]
 r911: [16..17]
 r912: [12..15]
 r913: [12..13]
 r914: [2034..2035]
 r915: [1978..2035]
 r916: [1978..1979]
 r917: [1982..1983]
 r918: [1960..1961]
 r919: [1588..1589]
 r920: [1958..1959]
 r921: [1592..1959]
 r922: [1592..1593]
 r923: [1596..1597]
 r924: [1586..1587]
 r925: [1362..1587]
 r926: [1362..1363]
 r927: [1366..1367]
 r928: [0..1]
 r929: [1360..1361]
 r930: [4..1361]
 r931: [4..5]
 r932: [8..9]
 r933: [1980..1981]
 r934: [1984..1985]
 r935: [2032..2033]
 r936: [2028..2029]
 r937: [2022..2023]
 r938: [2022..2023]
 r939: [2020..2021]
 r940: [2016..2017]
 r941: [2010..2011]
 r942: [2010..2011]
 r943: [2008..2009]
 r944: [2004..2005]
 r945: [1998..1999]
 r946: [1998..1999]
 r947: [1996..1997]
 r948: [1992..1993]
 r949: [1986..1987]
 r950: [1986..1987]
 r951: [1962..1963]
 r952: [1976..1977]
 r953: [1968..1969]
 r954: [1966..1967]
 r955: [1966..1967]
 r956: [1590..1591]
 r957: [1594..1595]
 r958: [1598..1599]
 r959: [1956..1957]
 r960: [1950..1951]
 r963: [1946..1947]
 r964: [1948..1949]
 r965: [1944..1945]
 r966: [1938..1939]
 r969: [1934..1935]
 r970: [1936..1937]
 r971: [1932..1933]
 r972: [1928..1929]
 r973: [1922..1923]
 r974: [1920..1921]
 r975: [1916..1917]
 r976: [1908..1911]
 r977: [1908..1909]
 r978: [1904..1905]
 r979: [1900..1901]
 r980: [1894..1895]
 r981: [1892..1893]
 r982: [1888..1889]
 r983: [1880..1883]
 r984: [1880..1881]
 r985: [1874..1875]
 r986: [1868..1869]
 r987: [1862..1863]
 r988: [1860..1861]
 r989: [1854..1855]
 r990: [1846..1849]
 r991: [1846..1847]
 r992: [1840..1841]
 r993: [1834..1835]
 r994: [1828..1829]
 r995: [1826..1827]
 r996: [1820..1821]
 r997: [1812..1815]
 r998: [1812..1813]
 r999: [1802..1803]
 r1000: [1804..1805]
 r1001: [1800..1801]
 r1002: [1796..1797]
 r1003: [1788..1791]
 r1004: [1788..1789]
 r1005: [1780..1783]
 r1006: [1780..1781]
 r1007: [1774..1775]
 r1008: [1770..1771]
 r1009: [1768..1769]
 r1010: [1762..1765]
 r1011: [1762..1763]
 r1012: [1756..1757]
 r1013: [1752..1753]
 r1014: [1750..1751]
 r1015: [1750..1751]
 r1016: [1746..1747]
 r1017: [1744..1745]
 r1018: [1740..1741]
 r1019: [1734..1735]
 r1020: [1732..1733]
 r1021: [1728..1729]
 r1022: [1722..1723]
 r1023: [1714..1717]
 r1024: [1714..1715]
 r1025: [1712..1713]
 r1026: [1706..1709]
 r1027: [1706..1707]
 r1028: [1702..1703]
 r1029: [1698..1699]
 r1030: [1690..1691]
 r1031: [1688..1689]
 r1032: [1684..1685]
 r1033: [1678..1679]
 r1034: [1676..1677]
 r1035: [1672..1673]
 r1036: [1666..1667]
 r1037: [1658..1661]
 r1038: [1658..1659]
 r1039: [1656..1657]
 r1040: [1650..1653]
 r1041: [1650..1651]
 r1042: [1646..1647]
 r1043: [1642..1643]
 r1044: [1634..1635]
 r1045: [1632..1633]
 r1046: [1628..1629]
 r1047: [1622..1623]
 r1048: [1620..1621]
 r1049: [1614..1617]
 r1050: [1614..1615]
 r1051: [1612..1613]
 r1052: [1608..1609]
 r1053: [1600..1601]
 r1054: [1364..1365]
 r1055: [1368..1369]
 r1056: [1584..1585]
 r1057: [1580..1581]
 r1058: [1574..1575]
 r1059: [1572..1573]
 r1060: [1546..1547]
 r1061: [1542..1543]
 r1062: [1536..1537]
 r1063: [1534..1535]
 r1064: [1530..1531]
 r1065: [1524..1525]
 r1066: [1520..1521]
 r1067: [1518..1519]
 r1068: [1514..1515]
 r1069: [1508..1509]
 r1070: [1506..1507]
 r1071: [1502..1503]
 r1072: [1496..1497]
 r1073: [1492..1493]
 r1074: [1490..1491]
 r1075: [1486..1487]
 r1076: [1480..1481]
 r1077: [1478..1479]
 r1078: [1434..1435]
 r1079: [1432..1433]
 r1080: [1426..1427]
 r1081: [1418..1419]
 r1082: [1416..1417]
 r1083: [1410..1411]
 r1084: [1402..1403]
 r1085: [1398..1399]
 r1086: [1400..1401]
 r1087: [1400..1401]
 r1088: [1394..1395]
 r1089: [1396..1397]
 r1090: [1396..1397]
 r1091: [1476..1477]
 r1092: [1474..1475]
 r1093: [1468..1469]
 r1094: [1460..1461]
 r1095: [1458..1459]
 r1096: [1452..1453]
 r1097: [1444..1445]
 r1098: [1440..1441]
 r1099: [1442..1443]
 r1100: [1442..1443]
 r1101: [1436..1437]
 r1102: [1438..1439]
 r1103: [1438..1439]
 r1104: [1392..1393]
 r1105: [1388..1389]
 r1106: [1382..1383]
 r1107: [1382..1383]
 r1108: [1380..1381]
 r1109: [1376..1377]
 r1110: [1370..1371]
 r1111: [1370..1371]
 r1112: [1570..1571]
 r1113: [1566..1567]
 r1114: [1560..1561]
 r1115: [1560..1561]
 r1116: [1558..1559]
 r1117: [1554..1555]
 r1118: [1548..1549]
 r1119: [1548..1549]
 r1120: [2..3]
 r1121: [6..7]
 r1122: [10..11]
 r1123: [1358..1359]
 r1124: [1352..1353]
 r1127: [1348..1349]
 r1128: [1350..1351]
 r1129: [1346..1347]
 r1130: [1340..1341]
 r1133: [1336..1337]
 r1134: [1338..1339]
 r1135: [1334..1335]
 r1136: [1330..1331]
 r1137: [1324..1325]
 r1138: [1316..1319]
 r1139: [1316..1317]
 r1140: [1314..1315]
 r1141: [1308..1309]
 r1142: [1302..1303]
 r1143: [1294..1297]
 r1144: [1294..1295]
 r1145: [1290..1291]
 r1146: [1286..1287]
 r1147: [1280..1281]
 r1148: [1272..1275]
 r1149: [1272..1273]
 r1150: [1268..1269]
 r1151: [1262..1263]
 r1152: [1256..1257]
 r1153: [1248..1251]
 r1154: [1248..1249]
 r1155: [1244..1245]
 r1156: [1240..1241]
 r1157: [1232..1233]
 r1158: [1224..1227]
 r1159: [1224..1225]
 r1160: [1220..1221]
 r1161: [1214..1215]
 r1162: [1206..1207]
 r1163: [1198..1201]
 r1164: [1198..1199]
 r1165: [1194..1195]
 r1166: [1190..1191]
 r1167: [1182..1183]
 r1168: [1174..1177]
 r1169: [1174..1175]
 r1170: [1170..1171]
 r1171: [1164..1165]
 r1172: [1156..1157]
 r1173: [1148..1151]
 r1174: [1148..1149]
 r1175: [1140..1141]
 r1176: [1142..1143]
 r1177: [1138..1139]
 r1178: [1134..1135]
 r1179: [1126..1129]
 r1180: [1126..1127]
 r1181: [1118..1119]
 r1182: [1112..1113]
 r1183: [1104..1107]
 r1184: [1104..1105]
 r1185: [1102..1103]
 r1186: [1098..1099]
 r1187: [1090..1093]
 r1188: [1090..1091]
 r1189: [1082..1083]
 r1190: [1076..1077]
 r1191: [1068..1071]
 r1192: [1068..1069]
 r1193: [1064..1065]
 r1194: [1060..1061]
 r1195: [1052..1055]
 r1196: [1052..1053]
 r1197: [1044..1045]
 r1198: [1036..1037]
 r1199: [1028..1031]
 r1200: [1028..1029]
 r1201: [1024..1025]
 r1202: [1020..1021]
 r1203: [1012..1015]
 r1204: [1012..1013]
 r1205: [1004..1005]
 r1206: [996..997]
 r1207: [988..991]
 r1208: [988..989]
 r1209: [980..981]
 r1210: [982..983]
 r1211: [976..977]
 r1212: [978..979]
 r1213: [974..975]
 r1214: [972..973]
 r1215: [968..969]
 r1216: [960..963]
 r1217: [960..961]
 r1218: [956..957]
 r1219: [950..951]
 r1220: [944..945]
 r1221: [936..939]
 r1222: [936..937]
 r1223: [934..935]
 r1224: [928..929]
 r1225: [922..923]
 r1226: [914..917]
 r1227: [914..915]
 r1228: [910..911]
 r1229: [904..905]
 r1230: [898..899]
 r1231: [890..893]
 r1232: [890..891]
 r1233: [886..887]
 r1234: [880..881]
 r1235: [874..875]
 r1236: [866..869]
 r1237: [866..867]
 r1238: [862..863]
 r1239: [856..857]
 r1240: [848..849]
 r1241: [840..843]
 r1242: [840..841]
 r1243: [836..837]
 r1244: [830..831]
 r1245: [822..823]
 r1246: [814..817]
 r1247: [814..815]
 r1248: [810..811]
 r1249: [804..805]
 r1250: [796..797]
 r1251: [788..791]
 r1252: [788..789]
 r1253: [784..785]
 r1254: [778..779]
 r1255: [770..771]
 r1256: [762..765]
 r1257: [762..763]
 r1258: [754..755]
 r1259: [756..757]
 r1260: [752..753]
 r1261: [746..747]
 r1262: [740..741]
 r1263: [732..735]
 r1264: [732..733]
 r1265: [730..731]
 r1266: [726..727]
 r1267: [720..721]
 r1268: [712..715]
 r1269: [712..713]
 r1270: [708..709]
 r1271: [702..703]
 r1272: [696..697]
 r1273: [688..691]
 r1274: [688..689]
 r1275: [684..685]
 r1276: [680..681]
 r1277: [674..675]
 r1278: [666..669]
 r1279: [666..667]
 r1280: [662..663]
 r1281: [656..657]
 r1282: [648..649]
 r1283: [640..643]
 r1284: [640..641]
 r1285: [636..637]
 r1286: [632..633]
 r1287: [624..625]
 r1288: [616..619]
 r1289: [616..617]
 r1290: [612..613]
 r1291: [606..607]
 r1292: [598..599]
 r1293: [590..593]
 r1294: [590..591]
 r1295: [586..587]
 r1296: [582..583]
 r1297: [574..575]
 r1298: [566..569]
 r1299: [566..567]
 r1300: [558..559]
 r1301: [560..561]
 r1302: [556..557]
 r1303: [552..553]
 r1304: [546..547]
 r1305: [538..541]
 r1306: [538..539]
 r1307: [536..537]
 r1308: [532..533]
 r1309: [526..527]
 r1310: [518..521]
 r1311: [518..519]
 r1312: [514..515]
 r1313: [510..511]
 r1314: [502..503]
 r1315: [494..497]
 r1316: [494..495]
 r1317: [490..491]
 r1318: [486..487]
 r1319: [478..479]
 r1320: [470..473]
 r1321: [470..471]
 r1322: [464..465]
 r1323: [458..459]
 r1324: [452..453]
 r1325: [444..447]
 r1326: [444..445]
 r1327: [442..443]
 r1328: [436..437]
 r1329: [430..431]
 r1330: [422..425]
 r1331: [422..423]
 r1332: [418..419]
 r1333: [412..413]
 r1334: [404..405]
 r1335: [396..399]
 r1336: [396..397]
 r1337: [392..393]
 r1338: [386..387]
 r1339: [378..379]
 r1340: [370..373]
 r1341: [370..371]
 r1342: [356..357]
 r1343: [358..359]
 r1344: [352..353]
 r1345: [354..355]
 r1346: [348..349]
 r1347: [350..351]
 r1348: [346..347]
 r1349: [340..341]
 r1350: [334..335]
 r1351: [326..329]
 r1352: [326..327]
 r1353: [324..325]
 r1354: [320..321]
 r1355: [314..315]
 r1356: [306..309]
 r1357: [306..307]
 r1358: [302..303]
 r1359: [300..301]
 r1360: [296..297]
 r1361: [290..291]
 r1362: [282..285]
 r1363: [282..283]
 r1364: [280..281]
 r1365: [274..275]
 r1366: [268..269]
 r1367: [260..263]
 r1368: [260..261]
 r1369: [256..257]
 r1370: [254..255]
 r1371: [248..249]
 r1372: [242..243]
 r1373: [234..237]
 r1374: [234..235]
 r1375: [232..233]
 r1376: [228..229]
 r1377: [222..223]
 r1378: [214..217]
 r1379: [214..215]
 r1380: [210..211]
 r1381: [208..209]
 r1382: [204..205]
 r1383: [198..199]
 r1384: [190..193]
 r1385: [190..191]
 r1386: [188..189]
 r1387: [182..183]
 r1388: [176..177]
 r1389: [168..171]
 r1390: [168..169]
 r1391: [164..165]
 r1392: [162..163]
 r1393: [158..159]
 r1394: [152..153]
 r1395: [144..147]
 r1396: [144..145]
 r1397: [142..143]
 r1398: [138..139]
 r1399: [132..133]
 r1400: [126..127]
 r1401: [118..119]
 r1402: [106..107]
 r1403: [102..103]
 r1404: [96..97]
 r1405: [88..91]
 r1406: [88..89]
 r1407: [86..87]
 r1408: [82..83]
 r1409: [76..77]
 r1410: [70..71]
 r1411: [62..63]
 r1412: [44..45]
 r1413: [36..37]
 r1414: [32..33]
 r1415: [26..27]
 r1416: [24..25]
 r1417: [20..21]
 r1418: [12..13]
 r1419: [1776..1777]
 r1420: [1758..1759]
 r1421: [1488..1489]
 r1422: [1428..1429]
 r1424: [1412..1413]
 r1425: [1404..1405]
 r1426: [1470..1471]
 r1428: [1454..1455]
 r1429: [1446..1447]
 r1430: [362..363]
 r1431: [120..121]
 r1432: [64..65]
 r1433: [38..39]
 r1438: [1462..1463]
 r1439: [1420..1421]
 r1440: [1406..1411]
 r1441: [1422..1427]
 r1442: [1448..1453]
 r1443: [1464..1469]

********** Assignment #2: **********

	 Assigning to 1443 (cl=SSE_REGS, orig=301, freq=2000, tfirst=1438, tfreq=2000)...
	 Assigning to 1438 (cl=SSE_REGS, orig=301, freq=2000, tfirst=1438, tfreq=2000)...
	   Assign 27 to optional reload r1438 (freq=2000)
	Hard reg 27 is preferable by r1443 with profit 1000
	 Assigning to 1441 (cl=SSE_REGS, orig=293, freq=2000, tfirst=1439, tfreq=2000)...
	 Assigning to 1439 (cl=SSE_REGS, orig=293, freq=2000, tfirst=1439, tfreq=2000)...
	   Assign 28 to optional reload r1439 (freq=2000)
	Hard reg 28 is preferable by r1441 with profit 1000
	 Assigning to 1440 (cl=SSE_REGS, orig=297, freq=2000, tfirst=1440, tfreq=2000)...
	 Assigning to 1442 (cl=SSE_REGS, orig=305, freq=2000, tfirst=1442, tfreq=2000)...
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 4 (0.00%)
   Insn after restoring regs:
 1687: r1425:SF=r297:SF
      REG_DEAD r297:SF
   Insn after restoring regs:
 1686: r297:SF=r1424:SF
      REG_DEAD r1424:SF
   Insn after restoring regs:
 1709: r1439:SF=r293:SF
      REG_DEAD r293:SF
   Insn after restoring regs:
 1683: r293:SF=r1422:SF
      REG_DEAD r1422:SF
   Insn after restoring regs:
 1694: r1429:SF=r305:SF
      REG_DEAD r305:SF
   Insn after restoring regs:
 1693: r305:SF=r1428:SF
      REG_DEAD r1428:SF
   Insn after restoring regs:
 1708: r1438:SF=r301:SF
      REG_DEAD r301:SF
   Insn after restoring regs:
 1690: r301:SF=r1426:SF
      REG_DEAD r1426:SF
Keep optional reload reg 1423
Keep optional reload reg 1427
Remove optional reload reg 1438
  Restoring original insn:
  558: r1094:SF=r303:SF+r301:SF
      REG_DEAD r301:SF
      REG_DEAD r303:SF
  Deleting move 1708
 1708: r1438:SF=r301:SF
      REG_DEAD r301:SF
deleting insn with uid = 1708.
Remove optional reload reg 1439
  Restoring original insn:
  520: r1081:SF=r295:SF+r293:SF
      REG_DEAD r293:SF
      REG_DEAD r295:SF
  Deleting move 1709
 1709: r1439:SF=r293:SF
      REG_DEAD r293:SF
deleting insn with uid = 1709.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 558:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 520:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 47
   Insn 1613: point = 0, n_alt = -1
  BB 56
   Insn 1668: point = 0, n_alt = -1
  BB 36
   Insn 646: point = 0, n_alt = -1
   Insn 645: point = 0, n_alt = 0
   Insn 644: point = 1, n_alt = 0
   Insn 643: point = 3, n_alt = 0
   Insn 642: point = 4, n_alt = 0
  BB 46
   Insn 1640: point = 4, n_alt = -1
   Insn 1588: point = 4, n_alt = 1
  BB 57
   Insn 1671: point = 4, n_alt = -1
  BB 38
   Insn 656: point = 4, n_alt = -1
   Insn 655: point = 4, n_alt = 0
   Insn 654: point = 5, n_alt = 0
   Insn 653: point = 7, n_alt = 0
   Insn 652: point = 8, n_alt = 0
  BB 45
   Insn 1638: point = 9, n_alt = -1
   Insn 1582: point = 9, n_alt = 1
  BB 58
   Insn 1674: point = 10, n_alt = -1
  BB 40
   Insn 664: point = 11, n_alt = -1
   Insn 663: point = 11, n_alt = 0
   Insn 662: point = 12, n_alt = 0
   Insn 661: point = 14, n_alt = 0
   Insn 660: point = 15, n_alt = 0
  BB 44
   Insn 1636: point = 16, n_alt = -1
   Insn 1576: point = 16, n_alt = 1
  BB 43
   Insn 1573: point = 17, n_alt = 8
   Insn 1572: point = 18, n_alt = 3
   Insn 1571: point = 19, n_alt = 1
   Insn 1570: point = 21, n_alt = 3
   Insn 1569: point = 23, n_alt = 0
   Insn 1568: point = 25, n_alt = 1
   Insn 1567: point = 27, n_alt = 0
   Insn 1566: point = 28, n_alt = 0
   Insn 1565: point = 30, n_alt = 1
   Insn 1564: point = 32, n_alt = 0
   Insn 1563: point = 33, n_alt = 7
   Insn 1562: point = 35, n_alt = 3
   Insn 1561: point = 36, n_alt = 3
   Insn 1560: point = 38, n_alt = 0
   Insn 1559: point = 40, n_alt = 1
   Insn 1558: point = 42, n_alt = 0
   Insn 1557: point = 43, n_alt = 0
   Insn 1556: point = 45, n_alt = 1
   Insn 1555: point = 47, n_alt = 0
   Insn 1703: point = 48, n_alt = -2
   Insn 1554: point = 50, n_alt = 2
   Insn 1702: point = 51, n_alt = -2
   Insn 1553: point = 53, n_alt = -2
   Insn 1552: point = 55, n_alt = 1
   Insn 1551: point = 57, n_alt = 7
   Insn 1550: point = 58, n_alt = 1
   Insn 1549: point = 60, n_alt = -2
   Insn 1548: point = 62, n_alt = 2
   Insn 1547: point = 64, n_alt = 1
   Insn 1546: point = 66, n_alt = -2
   Insn 1545: point = 68, n_alt = 1
   Insn 1544: point = 70, n_alt = 1
   Insn 1543: point = 72, n_alt = -2
   Insn 1542: point = 74, n_alt = 2
   Insn 1541: point = 76, n_alt = 7
   Insn 1701: point = 77, n_alt = -2
   Insn 1540: point = 79, n_alt = 1
   Insn 1700: point = 79, n_alt = -2
   Insn 1539: point = 81, n_alt = -2
   Insn 1538: point = 83, n_alt = 2
   Insn 1537: point = 85, n_alt = 7
   Insn 1536: point = 86, n_alt = -2
   Insn 1535: point = 88, n_alt = 2
   Insn 1534: point = 90, n_alt = 7
   Insn 1533: point = 92, n_alt = 3
   Insn 1532: point = 93, n_alt = 3
   Insn 1531: point = 95, n_alt = 0
   Insn 1530: point = 97, n_alt = 1
   Insn 1529: point = 99, n_alt = 0
   Insn 1528: point = 100, n_alt = 0
   Insn 1527: point = 102, n_alt = 1
   Insn 1526: point = 104, n_alt = 0
   Insn 1525: point = 105, n_alt = 7
   Insn 1524: point = 107, n_alt = 0
   Insn 1523: point = 109, n_alt = 4
   Insn 1522: point = 110, n_alt = 3
   Insn 1521: point = 112, n_alt = 0
   Insn 1520: point = 114, n_alt = 1
   Insn 1519: point = 116, n_alt = 0
   Insn 1518: point = 117, n_alt = 0
   Insn 1517: point = 119, n_alt = 0
   Insn 1516: point = 121, n_alt = 1
   Insn 1515: point = 123, n_alt = 0
   Insn 1514: point = 124, n_alt = 1
   Insn 1513: point = 126, n_alt = 1
   Insn 1512: point = 128, n_alt = 0
   Insn 1511: point = 129, n_alt = 1
   Insn 1510: point = 131, n_alt = -2
   Insn 1509: point = 133, n_alt = 1
   Insn 1508: point = 135, n_alt = 1
   Insn 1507: point = 137, n_alt = -2
   Insn 1506: point = 139, n_alt = 2
   Insn 1505: point = 141, n_alt = 7
   Insn 1699: point = 142, n_alt = -2
   Insn 1504: point = 144, n_alt = 1
   Insn 1698: point = 144, n_alt = -2
   Insn 1503: point = 146, n_alt = -2
   Insn 1502: point = 148, n_alt = 2
   Insn 1501: point = 150, n_alt = 7
   Insn 1500: point = 151, n_alt = -2
   Insn 1499: point = 153, n_alt = 2
   Insn 1498: point = 155, n_alt = 7
   Insn 1497: point = 157, n_alt = 3
   Insn 1496: point = 158, n_alt = 3
   Insn 1495: point = 160, n_alt = 0
   Insn 1494: point = 162, n_alt = 1
   Insn 1493: point = 164, n_alt = 0
   Insn 1492: point = 165, n_alt = 0
   Insn 1491: point = 167, n_alt = 1
   Insn 1490: point = 169, n_alt = 0
   Insn 1489: point = 170, n_alt = 7
   Insn 1488: point = 172, n_alt = 0
   Insn 1487: point = 174, n_alt = 4
   Insn 1486: point = 175, n_alt = 3
   Insn 1485: point = 177, n_alt = 0
   Insn 1484: point = 179, n_alt = 1
   Insn 1483: point = 181, n_alt = 0
   Insn 1482: point = 182, n_alt = 0
   Insn 1481: point = 184, n_alt = 0
   Insn 1480: point = 186, n_alt = 1
   Insn 1479: point = 188, n_alt = 0
   Insn 1478: point = 189, n_alt = 1
   Insn 1477: point = 191, n_alt = 1
   Insn 1476: point = 193, n_alt = 0
   Insn 1475: point = 194, n_alt = 8
   Insn 1474: point = 195, n_alt = 2
   Insn 1473: point = 197, n_alt = 7
   Insn 1472: point = 199, n_alt = 0
   Insn 1471: point = 201, n_alt = 4
   Insn 1470: point = 202, n_alt = 3
   Insn 1469: point = 204, n_alt = 0
   Insn 1468: point = 206, n_alt = 1
   Insn 1467: point = 208, n_alt = 0
   Insn 1466: point = 209, n_alt = 0
   Insn 1465: point = 211, n_alt = 0
   Insn 1464: point = 213, n_alt = 1
   Insn 1463: point = 215, n_alt = 0
   Insn 1462: point = 216, n_alt = 1
   Insn 1461: point = 218, n_alt = 1
   Insn 1460: point = 220, n_alt = 0
   Insn 1459: point = 222, n_alt = 0
   Insn 1458: point = 223, n_alt = 7
   Insn 1457: point = 225, n_alt = 0
   Insn 1456: point = 227, n_alt = 4
   Insn 1455: point = 228, n_alt = 3
   Insn 1454: point = 230, n_alt = 0
   Insn 1453: point = 232, n_alt = 1
   Insn 1452: point = 234, n_alt = 0
   Insn 1451: point = 235, n_alt = 0
   Insn 1450: point = 237, n_alt = 0
   Insn 1449: point = 239, n_alt = 1
   Insn 1448: point = 241, n_alt = 0
   Insn 1447: point = 242, n_alt = 1
   Insn 1446: point = 244, n_alt = 1
   Insn 1445: point = 246, n_alt = 0
   Insn 1444: point = 247, n_alt = 8
   Insn 1443: point = 248, n_alt = 2
   Insn 1442: point = 250, n_alt = 7
   Insn 1441: point = 252, n_alt = 0
   Insn 1440: point = 254, n_alt = 4
   Insn 1439: point = 255, n_alt = 3
   Insn 1438: point = 257, n_alt = 0
   Insn 1437: point = 259, n_alt = 1
   Insn 1436: point = 261, n_alt = 0
   Insn 1435: point = 262, n_alt = 0
   Insn 1434: point = 264, n_alt = 0
   Insn 1433: point = 266, n_alt = 1
   Insn 1432: point = 268, n_alt = 0
   Insn 1431: point = 269, n_alt = 1
   Insn 1430: point = 271, n_alt = 1
   Insn 1429: point = 273, n_alt = 0
   Insn 1428: point = 274, n_alt = 7
   Insn 1427: point = 276, n_alt = 0
   Insn 1426: point = 278, n_alt = 4
   Insn 1425: point = 279, n_alt = 3
   Insn 1424: point = 281, n_alt = 0
   Insn 1423: point = 283, n_alt = 1
   Insn 1422: point = 285, n_alt = 0
   Insn 1421: point = 286, n_alt = 0
   Insn 1420: point = 288, n_alt = 0
   Insn 1419: point = 290, n_alt = 1
   Insn 1418: point = 292, n_alt = 0
   Insn 1417: point = 293, n_alt = 1
   Insn 1416: point = 295, n_alt = 1
   Insn 1415: point = 297, n_alt = 0
   Insn 1414: point = 299, n_alt = 0
   Insn 1413: point = 300, n_alt = 8
   Insn 1412: point = 301, n_alt = 2
   Insn 1411: point = 303, n_alt = 7
   Insn 1410: point = 305, n_alt = 0
   Insn 1409: point = 307, n_alt = 4
   Insn 1408: point = 308, n_alt = 3
   Insn 1407: point = 310, n_alt = 0
   Insn 1406: point = 312, n_alt = 1
   Insn 1405: point = 314, n_alt = 0
   Insn 1404: point = 315, n_alt = 0
   Insn 1403: point = 317, n_alt = 0
   Insn 1402: point = 319, n_alt = 1
   Insn 1401: point = 321, n_alt = 0
   Insn 1400: point = 322, n_alt = 1
   Insn 1399: point = 324, n_alt = 1
   Insn 1398: point = 326, n_alt = 0
   Insn 1397: point = 328, n_alt = 0
   Insn 1396: point = 329, n_alt = 7
   Insn 1395: point = 331, n_alt = 0
   Insn 1394: point = 333, n_alt = 4
   Insn 1393: point = 334, n_alt = 3
   Insn 1392: point = 336, n_alt = 0
   Insn 1391: point = 338, n_alt = 1
   Insn 1390: point = 340, n_alt = 0
   Insn 1389: point = 341, n_alt = 0
   Insn 1388: point = 343, n_alt = 0
   Insn 1387: point = 345, n_alt = 1
   Insn 1386: point = 347, n_alt = 0
   Insn 1385: point = 348, n_alt = 1
   Insn 1384: point = 350, n_alt = 1
   Insn 1383: point = 352, n_alt = 0
   Insn 1382: point = 353, n_alt = 8
   Insn 1381: point = 354, n_alt = 2
   Insn 1380: point = 356, n_alt = 7
   Insn 1379: point = 358, n_alt = 0
   Insn 1378: point = 360, n_alt = 4
   Insn 1377: point = 361, n_alt = 3
   Insn 1376: point = 363, n_alt = 0
   Insn 1375: point = 365, n_alt = 1
   Insn 1374: point = 367, n_alt = 0
   Insn 1373: point = 368, n_alt = 0
   Insn 1372: point = 370, n_alt = 0
   Insn 1371: point = 372, n_alt = 1
   Insn 1370: point = 374, n_alt = 0
   Insn 1369: point = 375, n_alt = 1
   Insn 1368: point = 377, n_alt = 1
   Insn 1367: point = 379, n_alt = 0
   Insn 1366: point = 380, n_alt = 7
   Insn 1365: point = 382, n_alt = 0
   Insn 1364: point = 384, n_alt = 4
   Insn 1363: point = 385, n_alt = 3
   Insn 1362: point = 387, n_alt = 0
   Insn 1361: point = 389, n_alt = 1
   Insn 1360: point = 391, n_alt = 0
   Insn 1359: point = 392, n_alt = 0
   Insn 1358: point = 394, n_alt = 0
   Insn 1357: point = 396, n_alt = 1
   Insn 1356: point = 398, n_alt = 0
   Insn 1355: point = 399, n_alt = 1
   Insn 1354: point = 401, n_alt = 1
   Insn 1353: point = 403, n_alt = 0
   Insn 1352: point = 405, n_alt = 0
   Insn 1351: point = 406, n_alt = 8
   Insn 1350: point = 407, n_alt = 2
   Insn 1349: point = 409, n_alt = 7
   Insn 1348: point = 410, n_alt = 8
   Insn 1347: point = 411, n_alt = 2
   Insn 1346: point = 413, n_alt = 7
   Insn 1345: point = 414, n_alt = 8
   Insn 1344: point = 415, n_alt = 1
   Insn 1343: point = 417, n_alt = 7
   Insn 1342: point = 418, n_alt = -2
   Insn 1697: point = 420, n_alt = -2
   Insn 1341: point = 422, n_alt = 2
   Insn 1696: point = 423, n_alt = -2
   Insn 1340: point = 425, n_alt = -2
   Insn 1339: point = 427, n_alt = 1
   Insn 1338: point = 429, n_alt = 7
   Insn 1337: point = 431, n_alt = 0
   Insn 1336: point = 433, n_alt = 4
   Insn 1335: point = 434, n_alt = 3
   Insn 1334: point = 436, n_alt = 0
   Insn 1333: point = 438, n_alt = 1
   Insn 1332: point = 440, n_alt = 0
   Insn 1331: point = 441, n_alt = 0
   Insn 1330: point = 443, n_alt = 0
   Insn 1329: point = 445, n_alt = 1
   Insn 1328: point = 447, n_alt = 0
   Insn 1327: point = 449, n_alt = 0
   Insn 1326: point = 450, n_alt = 1
   Insn 1325: point = 452, n_alt = 1
   Insn 1324: point = 454, n_alt = 0
   Insn 1323: point = 456, n_alt = 0
   Insn 1322: point = 457, n_alt = 1
   Insn 1321: point = 459, n_alt = 7
   Insn 1320: point = 461, n_alt = 0
   Insn 1319: point = 463, n_alt = 4
   Insn 1318: point = 464, n_alt = 3
   Insn 1317: point = 466, n_alt = 0
   Insn 1316: point = 468, n_alt = 1
   Insn 1315: point = 470, n_alt = 0
   Insn 1314: point = 471, n_alt = 0
   Insn 1313: point = 473, n_alt = 0
   Insn 1312: point = 475, n_alt = 1
   Insn 1311: point = 477, n_alt = 0
   Insn 1310: point = 479, n_alt = 0
   Insn 1309: point = 480, n_alt = 1
   Insn 1308: point = 482, n_alt = 1
   Insn 1307: point = 484, n_alt = 0
   Insn 1306: point = 486, n_alt = 0
   Insn 1305: point = 487, n_alt = 1
   Insn 1304: point = 489, n_alt = 7
   Insn 1303: point = 491, n_alt = 0
   Insn 1302: point = 493, n_alt = 4
   Insn 1301: point = 494, n_alt = 3
   Insn 1300: point = 496, n_alt = 0
   Insn 1299: point = 498, n_alt = 1
   Insn 1298: point = 500, n_alt = 0
   Insn 1297: point = 501, n_alt = 0
   Insn 1296: point = 503, n_alt = 0
   Insn 1295: point = 505, n_alt = 1
   Insn 1294: point = 507, n_alt = 0
   Insn 1293: point = 508, n_alt = 1
   Insn 1292: point = 510, n_alt = 1
   Insn 1291: point = 512, n_alt = 0
   Insn 1290: point = 514, n_alt = 0
   Insn 1289: point = 515, n_alt = 7
   Insn 1288: point = 517, n_alt = 0
   Insn 1287: point = 519, n_alt = 4
   Insn 1286: point = 520, n_alt = 3
   Insn 1285: point = 522, n_alt = 0
   Insn 1284: point = 524, n_alt = 1
   Insn 1283: point = 526, n_alt = 0
   Insn 1282: point = 527, n_alt = 0
   Insn 1281: point = 529, n_alt = 0
   Insn 1280: point = 531, n_alt = 1
   Insn 1279: point = 533, n_alt = 0
   Insn 1278: point = 534, n_alt = 1
   Insn 1277: point = 536, n_alt = 1
   Insn 1276: point = 538, n_alt = 0
   Insn 1275: point = 540, n_alt = 0
   Insn 1274: point = 541, n_alt = -2
   Insn 1273: point = 543, n_alt = 1
   Insn 1272: point = 545, n_alt = 7
   Insn 1271: point = 547, n_alt = 0
   Insn 1270: point = 549, n_alt = 4
   Insn 1269: point = 550, n_alt = 3
   Insn 1268: point = 552, n_alt = 0
   Insn 1267: point = 554, n_alt = 1
   Insn 1266: point = 556, n_alt = 0
   Insn 1265: point = 557, n_alt = 0
   Insn 1264: point = 559, n_alt = 0
   Insn 1263: point = 561, n_alt = 1
   Insn 1262: point = 563, n_alt = 0
   Insn 1261: point = 565, n_alt = 0
   Insn 1260: point = 566, n_alt = 1
   Insn 1259: point = 568, n_alt = 1
   Insn 1258: point = 570, n_alt = 0
   Insn 1257: point = 571, n_alt = 1
   Insn 1256: point = 573, n_alt = 7
   Insn 1255: point = 575, n_alt = 0
   Insn 1254: point = 577, n_alt = 4
   Insn 1253: point = 578, n_alt = 3
   Insn 1252: point = 580, n_alt = 0
   Insn 1251: point = 582, n_alt = 1
   Insn 1250: point = 584, n_alt = 0
   Insn 1249: point = 585, n_alt = 0
   Insn 1248: point = 587, n_alt = 0
   Insn 1247: point = 589, n_alt = 1
   Insn 1246: point = 591, n_alt = 0
   Insn 1245: point = 593, n_alt = 0
   Insn 1244: point = 594, n_alt = 1
   Insn 1243: point = 596, n_alt = 1
   Insn 1242: point = 598, n_alt = 0
   Insn 1241: point = 599, n_alt = 1
   Insn 1240: point = 601, n_alt = 7
   Insn 1239: point = 603, n_alt = 0
   Insn 1238: point = 605, n_alt = 4
   Insn 1237: point = 606, n_alt = 3
   Insn 1236: point = 608, n_alt = 0
   Insn 1235: point = 610, n_alt = 1
   Insn 1234: point = 612, n_alt = 0
   Insn 1233: point = 613, n_alt = 0
   Insn 1232: point = 615, n_alt = 0
   Insn 1231: point = 617, n_alt = 1
   Insn 1230: point = 619, n_alt = 0
   Insn 1229: point = 620, n_alt = 1
   Insn 1228: point = 622, n_alt = 1
   Insn 1227: point = 624, n_alt = 0
   Insn 1226: point = 625, n_alt = 7
   Insn 1225: point = 627, n_alt = 0
   Insn 1224: point = 629, n_alt = 4
   Insn 1223: point = 630, n_alt = 3
   Insn 1222: point = 632, n_alt = 0
   Insn 1221: point = 634, n_alt = 1
   Insn 1220: point = 636, n_alt = 0
   Insn 1219: point = 637, n_alt = 0
   Insn 1218: point = 639, n_alt = 0
   Insn 1217: point = 641, n_alt = 1
   Insn 1216: point = 643, n_alt = 0
   Insn 1215: point = 644, n_alt = 1
   Insn 1214: point = 646, n_alt = 1
   Insn 1213: point = 648, n_alt = 0
   Insn 1212: point = 649, n_alt = 8
   Insn 1211: point = 650, n_alt = 1
   Insn 1210: point = 652, n_alt = 7
   Insn 1209: point = 653, n_alt = -2
   Insn 1208: point = 655, n_alt = 1
   Insn 1207: point = 657, n_alt = 7
   Insn 1206: point = 659, n_alt = 0
   Insn 1205: point = 661, n_alt = 4
   Insn 1204: point = 662, n_alt = 3
   Insn 1203: point = 664, n_alt = 0
   Insn 1202: point = 666, n_alt = 1
   Insn 1201: point = 668, n_alt = 0
   Insn 1200: point = 669, n_alt = 0
   Insn 1199: point = 671, n_alt = 0
   Insn 1198: point = 673, n_alt = 1
   Insn 1197: point = 675, n_alt = 0
   Insn 1196: point = 677, n_alt = 0
   Insn 1195: point = 678, n_alt = 1
   Insn 1194: point = 680, n_alt = 1
   Insn 1193: point = 682, n_alt = 0
   Insn 1192: point = 683, n_alt = 1
   Insn 1191: point = 685, n_alt = 7
   Insn 1190: point = 687, n_alt = 0
   Insn 1189: point = 689, n_alt = 4
   Insn 1188: point = 690, n_alt = 3
   Insn 1187: point = 692, n_alt = 0
   Insn 1186: point = 694, n_alt = 1
   Insn 1185: point = 696, n_alt = 0
   Insn 1184: point = 697, n_alt = 0
   Insn 1183: point = 699, n_alt = 0
   Insn 1182: point = 701, n_alt = 1
   Insn 1181: point = 703, n_alt = 0
   Insn 1180: point = 705, n_alt = 0
   Insn 1179: point = 706, n_alt = 1
   Insn 1178: point = 708, n_alt = 1
   Insn 1177: point = 710, n_alt = 0
   Insn 1176: point = 712, n_alt = 0
   Insn 1175: point = 713, n_alt = 1
   Insn 1174: point = 715, n_alt = 7
   Insn 1173: point = 717, n_alt = 0
   Insn 1172: point = 719, n_alt = 4
   Insn 1171: point = 720, n_alt = 3
   Insn 1170: point = 722, n_alt = 0
   Insn 1169: point = 724, n_alt = 1
   Insn 1168: point = 726, n_alt = 0
   Insn 1167: point = 727, n_alt = 0
   Insn 1166: point = 729, n_alt = 0
   Insn 1165: point = 731, n_alt = 1
   Insn 1164: point = 733, n_alt = 0
   Insn 1163: point = 735, n_alt = 0
   Insn 1162: point = 736, n_alt = 1
   Insn 1161: point = 738, n_alt = 1
   Insn 1160: point = 740, n_alt = 0
   Insn 1159: point = 741, n_alt = 1
   Insn 1158: point = 743, n_alt = 7
   Insn 1157: point = 745, n_alt = 0
   Insn 1156: point = 747, n_alt = 4
   Insn 1155: point = 748, n_alt = 3
   Insn 1154: point = 750, n_alt = 0
   Insn 1153: point = 752, n_alt = 1
   Insn 1152: point = 754, n_alt = 0
   Insn 1151: point = 755, n_alt = 0
   Insn 1150: point = 757, n_alt = 0
   Insn 1149: point = 759, n_alt = 1
   Insn 1148: point = 761, n_alt = 0
   Insn 1147: point = 763, n_alt = 0
   Insn 1146: point = 764, n_alt = 1
   Insn 1145: point = 766, n_alt = 1
   Insn 1144: point = 768, n_alt = 0
   Insn 1143: point = 770, n_alt = 0
   Insn 1142: point = 771, n_alt = 1
   Insn 1141: point = 773, n_alt = 7
   Insn 1140: point = 775, n_alt = 0
   Insn 1139: point = 777, n_alt = 4
   Insn 1138: point = 778, n_alt = 3
   Insn 1137: point = 780, n_alt = 0
   Insn 1136: point = 782, n_alt = 1
   Insn 1135: point = 784, n_alt = 0
   Insn 1134: point = 785, n_alt = 0
   Insn 1133: point = 787, n_alt = 0
   Insn 1132: point = 789, n_alt = 1
   Insn 1131: point = 791, n_alt = 0
   Insn 1130: point = 792, n_alt = 1
   Insn 1129: point = 794, n_alt = 1
   Insn 1128: point = 796, n_alt = 0
   Insn 1127: point = 797, n_alt = 1
   Insn 1126: point = 799, n_alt = 7
   Insn 1125: point = 801, n_alt = 0
   Insn 1124: point = 803, n_alt = 4
   Insn 1123: point = 804, n_alt = 3
   Insn 1122: point = 806, n_alt = 0
   Insn 1121: point = 808, n_alt = 1
   Insn 1120: point = 810, n_alt = 0
   Insn 1119: point = 811, n_alt = 0
   Insn 1118: point = 813, n_alt = 0
   Insn 1117: point = 815, n_alt = 1
   Insn 1116: point = 817, n_alt = 0
   Insn 1115: point = 818, n_alt = 1
   Insn 1114: point = 820, n_alt = 1
   Insn 1113: point = 822, n_alt = 0
   Insn 1112: point = 824, n_alt = 0
   Insn 1111: point = 825, n_alt = 1
   Insn 1110: point = 827, n_alt = 7
   Insn 1109: point = 829, n_alt = 0
   Insn 1108: point = 831, n_alt = 4
   Insn 1107: point = 832, n_alt = 3
   Insn 1106: point = 834, n_alt = 0
   Insn 1105: point = 836, n_alt = 1
   Insn 1104: point = 838, n_alt = 0
   Insn 1103: point = 839, n_alt = 0
   Insn 1102: point = 841, n_alt = 0
   Insn 1101: point = 843, n_alt = 1
   Insn 1100: point = 845, n_alt = 0
   Insn 1099: point = 846, n_alt = 1
   Insn 1098: point = 848, n_alt = 1
   Insn 1097: point = 850, n_alt = 0
   Insn 1096: point = 851, n_alt = 7
   Insn 1095: point = 853, n_alt = 0
   Insn 1094: point = 855, n_alt = 4
   Insn 1093: point = 856, n_alt = 3
   Insn 1092: point = 858, n_alt = 0
   Insn 1091: point = 860, n_alt = 1
   Insn 1090: point = 862, n_alt = 0
   Insn 1089: point = 863, n_alt = 0
   Insn 1088: point = 865, n_alt = 0
   Insn 1087: point = 867, n_alt = 1
   Insn 1086: point = 869, n_alt = 0
   Insn 1085: point = 870, n_alt = 1
   Insn 1084: point = 872, n_alt = 1
   Insn 1083: point = 874, n_alt = 0
   Insn 1082: point = 876, n_alt = 0
   Insn 1081: point = 877, n_alt = 8
   Insn 1080: point = 878, n_alt = 1
   Insn 1079: point = 880, n_alt = 7
   Insn 1078: point = 881, n_alt = -2
   Insn 1077: point = 883, n_alt = 1
   Insn 1076: point = 885, n_alt = 7
   Insn 1075: point = 887, n_alt = 0
   Insn 1074: point = 889, n_alt = 4
   Insn 1073: point = 890, n_alt = 3
   Insn 1072: point = 892, n_alt = 0
   Insn 1071: point = 894, n_alt = 1
   Insn 1070: point = 896, n_alt = 0
   Insn 1069: point = 897, n_alt = 0
   Insn 1068: point = 899, n_alt = 0
   Insn 1067: point = 901, n_alt = 1
   Insn 1066: point = 903, n_alt = 0
   Insn 1065: point = 905, n_alt = 0
   Insn 1064: point = 906, n_alt = 1
   Insn 1063: point = 908, n_alt = 1
   Insn 1062: point = 910, n_alt = 0
   Insn 1061: point = 912, n_alt = 0
   Insn 1060: point = 913, n_alt = 1
   Insn 1059: point = 915, n_alt = 7
   Insn 1058: point = 917, n_alt = 0
   Insn 1057: point = 919, n_alt = 4
   Insn 1056: point = 920, n_alt = 3
   Insn 1055: point = 922, n_alt = 0
   Insn 1054: point = 924, n_alt = 1
   Insn 1053: point = 926, n_alt = 0
   Insn 1052: point = 927, n_alt = 0
   Insn 1051: point = 929, n_alt = 0
   Insn 1050: point = 931, n_alt = 1
   Insn 1049: point = 933, n_alt = 0
   Insn 1048: point = 935, n_alt = 0
   Insn 1047: point = 936, n_alt = 1
   Insn 1046: point = 938, n_alt = 1
   Insn 1045: point = 940, n_alt = 0
   Insn 1044: point = 942, n_alt = 0
   Insn 1043: point = 943, n_alt = 1
   Insn 1042: point = 945, n_alt = 7
   Insn 1041: point = 947, n_alt = 0
   Insn 1040: point = 949, n_alt = 4
   Insn 1039: point = 950, n_alt = 3
   Insn 1038: point = 952, n_alt = 0
   Insn 1037: point = 954, n_alt = 1
   Insn 1036: point = 956, n_alt = 0
   Insn 1035: point = 957, n_alt = 0
   Insn 1034: point = 959, n_alt = 0
   Insn 1033: point = 961, n_alt = 1
   Insn 1032: point = 963, n_alt = 0
   Insn 1031: point = 965, n_alt = 0
   Insn 1030: point = 966, n_alt = 1
   Insn 1029: point = 968, n_alt = 1
   Insn 1028: point = 970, n_alt = 0
   Insn 1027: point = 972, n_alt = 0
   Insn 1026: point = 973, n_alt = 1
   Insn 1025: point = 975, n_alt = 7
   Insn 1024: point = 977, n_alt = 0
   Insn 1023: point = 979, n_alt = 4
   Insn 1022: point = 980, n_alt = 3
   Insn 1021: point = 982, n_alt = 0
   Insn 1020: point = 984, n_alt = 1
   Insn 1019: point = 986, n_alt = 0
   Insn 1018: point = 987, n_alt = 0
   Insn 1017: point = 989, n_alt = 0
   Insn 1016: point = 991, n_alt = 1
   Insn 1015: point = 993, n_alt = 0
   Insn 1014: point = 995, n_alt = 0
   Insn 1013: point = 996, n_alt = 1
   Insn 1012: point = 998, n_alt = 1
   Insn 1011: point = 1000, n_alt = 0
   Insn 1010: point = 1002, n_alt = 0
   Insn 1009: point = 1003, n_alt = 1
   Insn 1008: point = 1005, n_alt = 7
   Insn 1007: point = 1007, n_alt = 0
   Insn 1006: point = 1009, n_alt = 4
   Insn 1005: point = 1010, n_alt = 3
   Insn 1004: point = 1012, n_alt = 0
   Insn 1003: point = 1014, n_alt = 1
   Insn 1002: point = 1016, n_alt = 0
   Insn 1001: point = 1017, n_alt = 0
   Insn 1000: point = 1019, n_alt = 0
   Insn 999: point = 1021, n_alt = 1
   Insn 998: point = 1023, n_alt = 0
   Insn 997: point = 1024, n_alt = 1
   Insn 996: point = 1026, n_alt = 1
   Insn 995: point = 1028, n_alt = 0
   Insn 994: point = 1030, n_alt = 0
   Insn 993: point = 1031, n_alt = 1
   Insn 992: point = 1033, n_alt = 7
   Insn 991: point = 1035, n_alt = 0
   Insn 990: point = 1037, n_alt = 4
   Insn 989: point = 1038, n_alt = 3
   Insn 988: point = 1040, n_alt = 0
   Insn 987: point = 1042, n_alt = 1
   Insn 986: point = 1044, n_alt = 0
   Insn 985: point = 1045, n_alt = 0
   Insn 984: point = 1047, n_alt = 0
   Insn 983: point = 1049, n_alt = 1
   Insn 982: point = 1051, n_alt = 0
   Insn 981: point = 1052, n_alt = 1
   Insn 980: point = 1054, n_alt = 1
   Insn 979: point = 1056, n_alt = 0
   Insn 978: point = 1058, n_alt = 0
   Insn 977: point = 1059, n_alt = 1
   Insn 976: point = 1061, n_alt = 7
   Insn 975: point = 1063, n_alt = 0
   Insn 974: point = 1065, n_alt = 4
   Insn 973: point = 1066, n_alt = 3
   Insn 972: point = 1068, n_alt = 0
   Insn 971: point = 1070, n_alt = 1
   Insn 970: point = 1072, n_alt = 0
   Insn 969: point = 1073, n_alt = 0
   Insn 968: point = 1075, n_alt = 0
   Insn 967: point = 1077, n_alt = 1
   Insn 966: point = 1079, n_alt = 0
   Insn 965: point = 1080, n_alt = 1
   Insn 964: point = 1082, n_alt = 1
   Insn 963: point = 1084, n_alt = 0
   Insn 962: point = 1086, n_alt = 0
   Insn 961: point = 1087, n_alt = 7
   Insn 960: point = 1089, n_alt = 0
   Insn 959: point = 1091, n_alt = 4
   Insn 958: point = 1092, n_alt = 3
   Insn 957: point = 1094, n_alt = 0
   Insn 956: point = 1096, n_alt = 1
   Insn 955: point = 1098, n_alt = 0
   Insn 954: point = 1099, n_alt = 0
   Insn 953: point = 1101, n_alt = 0
   Insn 952: point = 1103, n_alt = 1
   Insn 951: point = 1105, n_alt = 0
   Insn 950: point = 1106, n_alt = 1
   Insn 949: point = 1108, n_alt = 1
   Insn 948: point = 1110, n_alt = 0
   Insn 947: point = 1112, n_alt = 0
  BB 42
   Insn 945: point = 1114, n_alt = -1
   Insn 944: point = 1114, n_alt = 0
   Insn 943: point = 1115, n_alt = 0
   Insn 942: point = 1117, n_alt = 0
   Insn 941: point = 1119, n_alt = 4
   Insn 940: point = 1120, n_alt = 3
   Insn 939: point = 1122, n_alt = 0
   Insn 938: point = 1124, n_alt = 1
   Insn 937: point = 1126, n_alt = 0
   Insn 936: point = 1127, n_alt = 0
   Insn 935: point = 1129, n_alt = 1
   Insn 934: point = 1131, n_alt = 0
  BB 41
   Insn 929: point = 1133, n_alt = -1
   Insn 928: point = 1133, n_alt = 1
   Insn 927: point = 1134, n_alt = 7
   Insn 926: point = 1135, n_alt = 8
   Insn 925: point = 1136, n_alt = 2
   Insn 924: point = 1138, n_alt = 7
   Insn 923: point = 1139, n_alt = 8
   Insn 922: point = 1140, n_alt = 1
   Insn 921: point = 1142, n_alt = 7
   Insn 920: point = 1143, n_alt = -2
   Insn 919: point = 1145, n_alt = 1
   Insn 918: point = 1147, n_alt = 7
   Insn 917: point = 1149, n_alt = 0
   Insn 916: point = 1151, n_alt = 4
   Insn 915: point = 1152, n_alt = 3
   Insn 914: point = 1154, n_alt = 0
   Insn 913: point = 1156, n_alt = 1
   Insn 912: point = 1158, n_alt = 0
   Insn 911: point = 1159, n_alt = 0
   Insn 910: point = 1161, n_alt = 0
   Insn 909: point = 1163, n_alt = 1
   Insn 908: point = 1165, n_alt = 0
   Insn 907: point = 1167, n_alt = 0
   Insn 906: point = 1168, n_alt = 1
   Insn 905: point = 1170, n_alt = 1
   Insn 904: point = 1172, n_alt = 0
   Insn 903: point = 1174, n_alt = 0
   Insn 902: point = 1176, n_alt = 0
   Insn 901: point = 1178, n_alt = 4
   Insn 900: point = 1179, n_alt = 3
   Insn 899: point = 1181, n_alt = 0
   Insn 898: point = 1183, n_alt = 1
   Insn 897: point = 1185, n_alt = 0
   Insn 896: point = 1186, n_alt = 0
   Insn 895: point = 1188, n_alt = 1
   Insn 894: point = 1190, n_alt = 0
   Insn 893: point = 1191, n_alt = 1
   Insn 892: point = 1193, n_alt = 7
   Insn 891: point = 1195, n_alt = 0
   Insn 890: point = 1197, n_alt = 4
   Insn 889: point = 1198, n_alt = 3
   Insn 888: point = 1200, n_alt = 0
   Insn 887: point = 1202, n_alt = 1
   Insn 886: point = 1204, n_alt = 0
   Insn 885: point = 1205, n_alt = 0
   Insn 884: point = 1207, n_alt = 0
   Insn 883: point = 1209, n_alt = 1
   Insn 882: point = 1211, n_alt = 0
   Insn 881: point = 1213, n_alt = 0
   Insn 880: point = 1214, n_alt = 1
   Insn 879: point = 1216, n_alt = 1
   Insn 878: point = 1218, n_alt = 0
   Insn 877: point = 1220, n_alt = 0
   Insn 876: point = 1222, n_alt = 0
   Insn 875: point = 1224, n_alt = 4
   Insn 874: point = 1225, n_alt = 3
   Insn 873: point = 1227, n_alt = 0
   Insn 872: point = 1229, n_alt = 1
   Insn 871: point = 1231, n_alt = 0
   Insn 870: point = 1232, n_alt = 0
   Insn 869: point = 1234, n_alt = 1
   Insn 868: point = 1236, n_alt = 0
   Insn 867: point = 1237, n_alt = 1
   Insn 866: point = 1239, n_alt = 7
   Insn 865: point = 1241, n_alt = 0
   Insn 864: point = 1243, n_alt = 4
   Insn 863: point = 1244, n_alt = 3
   Insn 862: point = 1246, n_alt = 0
   Insn 861: point = 1248, n_alt = 1
   Insn 860: point = 1250, n_alt = 0
   Insn 859: point = 1251, n_alt = 0
   Insn 858: point = 1253, n_alt = 0
   Insn 857: point = 1255, n_alt = 1
   Insn 856: point = 1257, n_alt = 0
   Insn 855: point = 1258, n_alt = 1
   Insn 854: point = 1260, n_alt = 1
   Insn 853: point = 1262, n_alt = 0
   Insn 852: point = 1264, n_alt = 0
   Insn 851: point = 1266, n_alt = 0
   Insn 850: point = 1268, n_alt = 4
   Insn 849: point = 1269, n_alt = 3
   Insn 848: point = 1271, n_alt = 0
   Insn 847: point = 1273, n_alt = 1
   Insn 846: point = 1275, n_alt = 0
   Insn 845: point = 1276, n_alt = 0
   Insn 844: point = 1278, n_alt = 1
   Insn 843: point = 1280, n_alt = 0
   Insn 842: point = 1281, n_alt = 7
   Insn 841: point = 1283, n_alt = 0
   Insn 840: point = 1285, n_alt = 4
   Insn 839: point = 1286, n_alt = 3
   Insn 838: point = 1288, n_alt = 0
   Insn 837: point = 1290, n_alt = 1
   Insn 836: point = 1292, n_alt = 0
   Insn 835: point = 1293, n_alt = 0
   Insn 834: point = 1295, n_alt = 0
   Insn 833: point = 1297, n_alt = 1
   Insn 832: point = 1299, n_alt = 0
   Insn 831: point = 1300, n_alt = 1
   Insn 830: point = 1302, n_alt = 1
   Insn 829: point = 1304, n_alt = 0
   Insn 828: point = 1306, n_alt = 0
   Insn 827: point = 1308, n_alt = 0
   Insn 826: point = 1310, n_alt = 4
   Insn 825: point = 1311, n_alt = 3
   Insn 824: point = 1313, n_alt = 0
   Insn 823: point = 1315, n_alt = 1
   Insn 822: point = 1317, n_alt = 0
   Insn 821: point = 1318, n_alt = 0
   Insn 820: point = 1320, n_alt = 1
   Insn 819: point = 1322, n_alt = 0
   Insn 818: point = 1323, n_alt = 8
   Insn 817: point = 1324, n_alt = 1
   Insn 816: point = 1326, n_alt = 7
   Insn 815: point = 1327, n_alt = -2
   Insn 814: point = 1329, n_alt = 1
   Insn 813: point = 1331, n_alt = 7
   Insn 812: point = 1333, n_alt = 0
   Insn 811: point = 1335, n_alt = 4
   Insn 810: point = 1336, n_alt = 3
   Insn 809: point = 1338, n_alt = 0
   Insn 808: point = 1340, n_alt = 1
   Insn 807: point = 1342, n_alt = 0
   Insn 806: point = 1343, n_alt = 0
   Insn 805: point = 1345, n_alt = 0
   Insn 804: point = 1347, n_alt = 1
   Insn 803: point = 1349, n_alt = 0
   Insn 802: point = 1351, n_alt = 0
   Insn 801: point = 1352, n_alt = 1
   Insn 800: point = 1354, n_alt = 1
   Insn 799: point = 1356, n_alt = 0
   Insn 798: point = 1358, n_alt = 0
   Insn 797: point = 1359, n_alt = 1
   Insn 796: point = 1361, n_alt = 7
   Insn 795: point = 1363, n_alt = 0
   Insn 794: point = 1365, n_alt = 4
   Insn 793: point = 1366, n_alt = 3
   Insn 792: point = 1368, n_alt = 0
   Insn 791: point = 1370, n_alt = 1
   Insn 790: point = 1372, n_alt = 0
   Insn 789: point = 1373, n_alt = 0
   Insn 788: point = 1375, n_alt = 0
   Insn 787: point = 1377, n_alt = 1
   Insn 786: point = 1379, n_alt = 0
   Insn 785: point = 1381, n_alt = 0
   Insn 784: point = 1382, n_alt = 1
   Insn 783: point = 1384, n_alt = 1
   Insn 782: point = 1386, n_alt = 0
   Insn 781: point = 1387, n_alt = 1
   Insn 780: point = 1389, n_alt = 7
   Insn 779: point = 1391, n_alt = 0
   Insn 778: point = 1393, n_alt = 4
   Insn 777: point = 1394, n_alt = 3
   Insn 776: point = 1396, n_alt = 0
   Insn 775: point = 1398, n_alt = 1
   Insn 774: point = 1400, n_alt = 0
   Insn 773: point = 1401, n_alt = 0
   Insn 772: point = 1403, n_alt = 0
   Insn 771: point = 1405, n_alt = 1
   Insn 770: point = 1407, n_alt = 0
   Insn 769: point = 1409, n_alt = 0
   Insn 768: point = 1410, n_alt = 1
   Insn 767: point = 1412, n_alt = 1
   Insn 766: point = 1414, n_alt = 0
   Insn 765: point = 1416, n_alt = 0
   Insn 764: point = 1417, n_alt = 1
   Insn 763: point = 1419, n_alt = 7
   Insn 762: point = 1421, n_alt = 0
   Insn 761: point = 1423, n_alt = 4
   Insn 760: point = 1424, n_alt = 3
   Insn 759: point = 1426, n_alt = 0
   Insn 758: point = 1428, n_alt = 1
   Insn 757: point = 1430, n_alt = 0
   Insn 756: point = 1431, n_alt = 0
   Insn 755: point = 1433, n_alt = 0
   Insn 754: point = 1435, n_alt = 1
   Insn 753: point = 1437, n_alt = 0
   Insn 752: point = 1439, n_alt = 0
   Insn 751: point = 1440, n_alt = 1
   Insn 750: point = 1442, n_alt = 1
   Insn 749: point = 1444, n_alt = 0
   Insn 748: point = 1445, n_alt = 1
   Insn 747: point = 1447, n_alt = 7
   Insn 746: point = 1449, n_alt = 0
   Insn 745: point = 1451, n_alt = 4
   Insn 744: point = 1452, n_alt = 3
   Insn 743: point = 1454, n_alt = 0
   Insn 742: point = 1456, n_alt = 1
   Insn 741: point = 1458, n_alt = 0
   Insn 740: point = 1459, n_alt = 0
   Insn 739: point = 1461, n_alt = 0
   Insn 738: point = 1463, n_alt = 1
   Insn 737: point = 1465, n_alt = 0
   Insn 736: point = 1466, n_alt = 1
   Insn 735: point = 1468, n_alt = 1
   Insn 734: point = 1470, n_alt = 0
   Insn 733: point = 1472, n_alt = 0
   Insn 732: point = 1473, n_alt = 1
   Insn 731: point = 1475, n_alt = 7
   Insn 730: point = 1477, n_alt = 0
   Insn 729: point = 1479, n_alt = 4
   Insn 728: point = 1480, n_alt = 3
   Insn 727: point = 1482, n_alt = 0
   Insn 726: point = 1484, n_alt = 1
   Insn 725: point = 1486, n_alt = 0
   Insn 724: point = 1487, n_alt = 0
   Insn 723: point = 1489, n_alt = 0
   Insn 722: point = 1491, n_alt = 1
   Insn 721: point = 1493, n_alt = 0
   Insn 720: point = 1494, n_alt = 1
   Insn 719: point = 1496, n_alt = 1
   Insn 718: point = 1498, n_alt = 0
   Insn 717: point = 1499, n_alt = 1
   Insn 716: point = 1501, n_alt = 7
   Insn 715: point = 1503, n_alt = 0
   Insn 714: point = 1505, n_alt = 4
   Insn 713: point = 1506, n_alt = 3
   Insn 712: point = 1508, n_alt = 0
   Insn 711: point = 1510, n_alt = 1
   Insn 710: point = 1512, n_alt = 0
   Insn 709: point = 1513, n_alt = 0
   Insn 708: point = 1515, n_alt = 0
   Insn 707: point = 1517, n_alt = 1
   Insn 706: point = 1519, n_alt = 0
   Insn 705: point = 1520, n_alt = 1
   Insn 704: point = 1522, n_alt = 1
   Insn 703: point = 1524, n_alt = 0
   Insn 702: point = 1526, n_alt = 0
   Insn 701: point = 1527, n_alt = 7
   Insn 700: point = 1529, n_alt = 0
   Insn 699: point = 1531, n_alt = 4
   Insn 698: point = 1532, n_alt = 3
   Insn 697: point = 1534, n_alt = 0
   Insn 696: point = 1536, n_alt = 1
   Insn 695: point = 1538, n_alt = 0
   Insn 694: point = 1539, n_alt = 0
   Insn 693: point = 1541, n_alt = 0
   Insn 692: point = 1543, n_alt = 1
   Insn 691: point = 1545, n_alt = 0
   Insn 690: point = 1546, n_alt = 1
   Insn 689: point = 1548, n_alt = 1
   Insn 688: point = 1550, n_alt = 0
   Insn 687: point = 1551, n_alt = 1
   Insn 686: point = 1552, n_alt = 0
   Insn 685: point = 1554, n_alt = 0
   Insn 681: point = 1555, n_alt = 0
   Insn 680: point = 1557, n_alt = 0
   Insn 679: point = 1559, n_alt = 0
   Insn 678: point = 1561, n_alt = 1
   Insn 677: point = 1563, n_alt = 0
   Insn 676: point = 1564, n_alt = 1
   Insn 675: point = 1565, n_alt = 0
   Insn 674: point = 1567, n_alt = 0
   Insn 670: point = 1568, n_alt = 0
   Insn 669: point = 1570, n_alt = 0
   Insn 668: point = 1572, n_alt = 0
   Insn 667: point = 1574, n_alt = 1
   Insn 666: point = 1576, n_alt = 0
  BB 39
   Insn 658: point = 1578, n_alt = 1
  BB 37
   Insn 650: point = 1579, n_alt = 1
   Insn 649: point = 1580, n_alt = 0
   Insn 648: point = 1581, n_alt = 0
  BB 35
   Insn 640: point = 1582, n_alt = 1
  BB 54
   Insn 1662: point = 1582, n_alt = -1
  BB 24
   Insn 428: point = 1582, n_alt = -1
   Insn 427: point = 1582, n_alt = 0
   Insn 426: point = 1583, n_alt = 0
   Insn 425: point = 1585, n_alt = 0
   Insn 424: point = 1586, n_alt = 0
  BB 34
   Insn 1634: point = 1587, n_alt = -1
   Insn 634: point = 1587, n_alt = 1
  BB 55
   Insn 1665: point = 1588, n_alt = -1
  BB 26
   Insn 436: point = 1589, n_alt = -1
   Insn 435: point = 1589, n_alt = 0
   Insn 434: point = 1590, n_alt = 0
   Insn 433: point = 1592, n_alt = 0
   Insn 432: point = 1593, n_alt = 0
  BB 33
   Insn 1632: point = 1594, n_alt = -1
   Insn 628: point = 1594, n_alt = 1
  BB 31
   Insn 1630: point = 1595, n_alt = -1
   Insn 601: point = 1595, n_alt = 8
   Insn 600: point = 1596, n_alt = 7
   Insn 599: point = 1597, n_alt = 3
   Insn 598: point = 1598, n_alt = 3
   Insn 597: point = 1600, n_alt = 0
   Insn 596: point = 1602, n_alt = 0
   Insn 595: point = 1604, n_alt = 0
   Insn 594: point = 1605, n_alt = 0
   Insn 593: point = 1607, n_alt = 0
   Insn 592: point = 1609, n_alt = 0
   Insn 591: point = 1610, n_alt = 8
   Insn 590: point = 1611, n_alt = 7
   Insn 589: point = 1612, n_alt = 3
   Insn 588: point = 1613, n_alt = 3
   Insn 587: point = 1615, n_alt = 0
   Insn 586: point = 1617, n_alt = 0
   Insn 585: point = 1619, n_alt = 0
   Insn 584: point = 1620, n_alt = 0
   Insn 583: point = 1622, n_alt = 0
   Insn 582: point = 1624, n_alt = 0
  BB 29
   Insn 1628: point = 1626, n_alt = -1
   Insn 541: point = 1626, n_alt = 8
   Insn 540: point = 1627, n_alt = 1
   Insn 539: point = 1629, n_alt = 7
   Insn 538: point = 1630, n_alt = 7
   Insn 537: point = 1631, n_alt = 8
   Insn 536: point = 1632, n_alt = 1
   Insn 535: point = 1634, n_alt = 7
   Insn 534: point = 1635, n_alt = 7
   Insn 533: point = 1636, n_alt = 8
   Insn 1688: point = 1637, n_alt = -2
   Insn 532: point = 1639, n_alt = 2
   Insn 1687: point = 1640, n_alt = 7
   Insn 531: point = 1642, n_alt = 1
   Insn 530: point = 1644, n_alt = -2
   Insn 529: point = 1645, n_alt = 0
   Insn 528: point = 1645, n_alt = -2
   Insn 527: point = 1646, n_alt = 7
   Insn 1686: point = 1647, n_alt = 8
   Insn 526: point = 1649, n_alt = 1
   Insn 1685: point = 1649, n_alt = -2
   Insn 525: point = 1651, n_alt = -2
   Insn 524: point = 1652, n_alt = 0
   Insn 523: point = 1652, n_alt = -2
   Insn 522: point = 1653, n_alt = 7
   Insn 521: point = 1654, n_alt = 8
   Insn 520: point = 1655, n_alt = 1
   Insn 519: point = 1657, n_alt = 1
   Insn 518: point = 1659, n_alt = -2
   Insn 517: point = 1660, n_alt = 0
   Insn 516: point = 1660, n_alt = -2
   Insn 515: point = 1661, n_alt = 7
   Insn 1683: point = 1662, n_alt = 8
   Insn 514: point = 1664, n_alt = 1
   Insn 1682: point = 1664, n_alt = -2
   Insn 513: point = 1666, n_alt = -2
   Insn 512: point = 1667, n_alt = 0
   Insn 511: point = 1667, n_alt = -2
   Insn 510: point = 1668, n_alt = 7
   Insn 509: point = 1669, n_alt = 8
   Insn 508: point = 1670, n_alt = 7
  BB 30
   Insn 579: point = 1672, n_alt = 8
   Insn 578: point = 1673, n_alt = 1
   Insn 577: point = 1675, n_alt = 7
   Insn 576: point = 1676, n_alt = 7
   Insn 575: point = 1677, n_alt = 8
   Insn 574: point = 1678, n_alt = 1
   Insn 573: point = 1680, n_alt = 7
   Insn 572: point = 1681, n_alt = 7
   Insn 571: point = 1682, n_alt = 8
   Insn 1695: point = 1683, n_alt = -2
   Insn 570: point = 1685, n_alt = 2
   Insn 1694: point = 1686, n_alt = 7
   Insn 569: point = 1688, n_alt = 1
   Insn 568: point = 1690, n_alt = -2
   Insn 567: point = 1691, n_alt = 0
   Insn 566: point = 1691, n_alt = -2
   Insn 565: point = 1692, n_alt = 7
   Insn 1693: point = 1693, n_alt = 8
   Insn 564: point = 1695, n_alt = 1
   Insn 1692: point = 1695, n_alt = -2
   Insn 563: point = 1697, n_alt = -2
   Insn 562: point = 1698, n_alt = 0
   Insn 561: point = 1698, n_alt = -2
   Insn 560: point = 1699, n_alt = 7
   Insn 559: point = 1700, n_alt = 8
   Insn 558: point = 1701, n_alt = 1
   Insn 557: point = 1703, n_alt = 1
   Insn 556: point = 1705, n_alt = -2
   Insn 555: point = 1706, n_alt = 0
   Insn 554: point = 1706, n_alt = -2
   Insn 553: point = 1707, n_alt = 7
   Insn 1690: point = 1708, n_alt = 8
   Insn 552: point = 1710, n_alt = 1
   Insn 1689: point = 1710, n_alt = -2
   Insn 551: point = 1712, n_alt = -2
   Insn 550: point = 1713, n_alt = 0
   Insn 549: point = 1713, n_alt = -2
   Insn 548: point = 1714, n_alt = 7
   Insn 547: point = 1715, n_alt = 8
   Insn 546: point = 1716, n_alt = 7
  BB 28
   Insn 503: point = 1718, n_alt = -1
   Insn 502: point = 1718, n_alt = 1
   Insn 501: point = 1719, n_alt = 7
   Insn 500: point = 1720, n_alt = 8
   Insn 499: point = 1721, n_alt = 0
   Insn 498: point = 1723, n_alt = 1
   Insn 497: point = 1725, n_alt = 1
   Insn 496: point = 1727, n_alt = 7
   Insn 1681: point = 1728, n_alt = -2
   Insn 495: point = 1730, n_alt = 1
   Insn 1680: point = 1730, n_alt = -2
   Insn 494: point = 1732, n_alt = 7
   Insn 493: point = 1733, n_alt = 8
   Insn 492: point = 1734, n_alt = 2
   Insn 491: point = 1736, n_alt = 7
   Insn 490: point = 1738, n_alt = 4
   Insn 489: point = 1739, n_alt = 3
   Insn 488: point = 1741, n_alt = 0
   Insn 487: point = 1743, n_alt = 0
   Insn 486: point = 1745, n_alt = 0
   Insn 485: point = 1746, n_alt = 0
   Insn 484: point = 1748, n_alt = 0
   Insn 483: point = 1750, n_alt = 0
   Insn 482: point = 1751, n_alt = 7
   Insn 481: point = 1753, n_alt = 3
   Insn 480: point = 1754, n_alt = 3
   Insn 479: point = 1756, n_alt = 0
   Insn 478: point = 1758, n_alt = 0
   Insn 477: point = 1760, n_alt = 0
   Insn 476: point = 1761, n_alt = 0
   Insn 475: point = 1763, n_alt = 0
   Insn 474: point = 1765, n_alt = 0
   Insn 473: point = 1766, n_alt = 8
   Insn 472: point = 1767, n_alt = 2
   Insn 471: point = 1769, n_alt = 7
   Insn 470: point = 1771, n_alt = 4
   Insn 469: point = 1772, n_alt = 3
   Insn 468: point = 1774, n_alt = 0
   Insn 467: point = 1776, n_alt = 0
   Insn 466: point = 1778, n_alt = 0
   Insn 465: point = 1779, n_alt = 0
   Insn 464: point = 1781, n_alt = 0
   Insn 463: point = 1783, n_alt = 0
   Insn 462: point = 1784, n_alt = 7
   Insn 461: point = 1786, n_alt = 3
   Insn 460: point = 1787, n_alt = 3
   Insn 459: point = 1789, n_alt = 0
   Insn 458: point = 1791, n_alt = 0
   Insn 457: point = 1793, n_alt = 0
   Insn 456: point = 1794, n_alt = 0
   Insn 455: point = 1796, n_alt = 0
   Insn 454: point = 1798, n_alt = 0
  BB 32
   Insn 625: point = 1800, n_alt = 8
   Insn 624: point = 1801, n_alt = 7
   Insn 623: point = 1802, n_alt = 3
   Insn 622: point = 1803, n_alt = 3
   Insn 621: point = 1805, n_alt = 0
   Insn 620: point = 1807, n_alt = 0
   Insn 619: point = 1809, n_alt = 0
   Insn 618: point = 1810, n_alt = 0
   Insn 617: point = 1812, n_alt = 0
   Insn 616: point = 1814, n_alt = 0
   Insn 615: point = 1815, n_alt = 8
   Insn 614: point = 1816, n_alt = 7
   Insn 613: point = 1817, n_alt = 3
   Insn 612: point = 1818, n_alt = 3
   Insn 611: point = 1820, n_alt = 0
   Insn 610: point = 1822, n_alt = 0
   Insn 609: point = 1824, n_alt = 0
   Insn 608: point = 1825, n_alt = 0
   Insn 607: point = 1827, n_alt = 0
   Insn 606: point = 1829, n_alt = 0
  BB 27
   Insn 449: point = 1831, n_alt = -1
   Insn 448: point = 1831, n_alt = 1
   Insn 447: point = 1832, n_alt = 7
   Insn 446: point = 1833, n_alt = 7
   Insn 445: point = 1835, n_alt = 4
   Insn 444: point = 1836, n_alt = 3
   Insn 443: point = 1838, n_alt = 0
   Insn 442: point = 1840, n_alt = 0
   Insn 441: point = 1842, n_alt = 0
   Insn 440: point = 1843, n_alt = 0
   Insn 439: point = 1845, n_alt = 0
   Insn 438: point = 1847, n_alt = 0
  BB 25
   Insn 430: point = 1849, n_alt = 1
  BB 23
   Insn 422: point = 1850, n_alt = 1
   Insn 421: point = 1851, n_alt = 0
   Insn 420: point = 1852, n_alt = 0
  BB 51
   Insn 1653: point = 1853, n_alt = -1
  BB 12
   Insn 115: point = 1853, n_alt = -1
   Insn 114: point = 1853, n_alt = 0
   Insn 113: point = 1854, n_alt = 0
   Insn 112: point = 1856, n_alt = 0
   Insn 111: point = 1857, n_alt = 0
  BB 22
   Insn 1624: point = 1857, n_alt = -1
   Insn 414: point = 1857, n_alt = 1
  BB 52
   Insn 1656: point = 1857, n_alt = -1
  BB 14
   Insn 125: point = 1857, n_alt = -1
   Insn 124: point = 1857, n_alt = 0
   Insn 123: point = 1858, n_alt = 0
   Insn 122: point = 1860, n_alt = 0
   Insn 121: point = 1861, n_alt = 0
  BB 21
   Insn 1622: point = 1862, n_alt = -1
   Insn 408: point = 1862, n_alt = 1
  BB 53
   Insn 1659: point = 1863, n_alt = -1
  BB 16
   Insn 133: point = 1864, n_alt = -1
   Insn 132: point = 1864, n_alt = 0
   Insn 131: point = 1865, n_alt = 0
   Insn 130: point = 1867, n_alt = 0
   Insn 129: point = 1868, n_alt = 0
  BB 20
   Insn 1620: point = 1869, n_alt = -1
   Insn 402: point = 1869, n_alt = 1
  BB 19
   Insn 399: point = 1870, n_alt = 8
   Insn 398: point = 1871, n_alt = 4
   Insn 397: point = 1872, n_alt = 1
   Insn 396: point = 1874, n_alt = 3
   Insn 395: point = 1876, n_alt = 0
   Insn 394: point = 1878, n_alt = 1
   Insn 393: point = 1880, n_alt = 0
   Insn 392: point = 1881, n_alt = 0
   Insn 391: point = 1883, n_alt = 1
   Insn 390: point = 1885, n_alt = 0
   Insn 389: point = 1886, n_alt = 7
   Insn 388: point = 1888, n_alt = 0
   Insn 387: point = 1890, n_alt = 4
   Insn 386: point = 1891, n_alt = 3
   Insn 385: point = 1893, n_alt = 1
   Insn 384: point = 1895, n_alt = 0
   Insn 383: point = 1896, n_alt = 7
   Insn 382: point = 1898, n_alt = 4
   Insn 381: point = 1899, n_alt = 3
   Insn 380: point = 1901, n_alt = 0
   Insn 379: point = 1903, n_alt = 1
   Insn 378: point = 1905, n_alt = 0
   Insn 377: point = 1906, n_alt = 0
   Insn 376: point = 1908, n_alt = 1
   Insn 375: point = 1910, n_alt = 0
   Insn 374: point = 1911, n_alt = 8
   Insn 373: point = 1912, n_alt = 3
   Insn 372: point = 1913, n_alt = 1
   Insn 371: point = 1915, n_alt = 3
   Insn 370: point = 1917, n_alt = 0
   Insn 369: point = 1919, n_alt = 1
   Insn 368: point = 1921, n_alt = 0
   Insn 367: point = 1922, n_alt = 0
   Insn 366: point = 1924, n_alt = 1
   Insn 365: point = 1926, n_alt = 0
   Insn 364: point = 1927, n_alt = 1
   Insn 363: point = 1929, n_alt = 7
   Insn 362: point = 1931, n_alt = 0
   Insn 361: point = 1933, n_alt = 4
   Insn 360: point = 1934, n_alt = 3
   Insn 359: point = 1936, n_alt = 1
   Insn 358: point = 1938, n_alt = 0
   Insn 357: point = 1939, n_alt = 7
   Insn 356: point = 1941, n_alt = 0
   Insn 355: point = 1943, n_alt = 4
   Insn 354: point = 1944, n_alt = 3
   Insn 353: point = 1946, n_alt = 0
   Insn 352: point = 1948, n_alt = 1
   Insn 351: point = 1950, n_alt = 0
   Insn 350: point = 1951, n_alt = 0
   Insn 349: point = 1953, n_alt = 0
   Insn 348: point = 1955, n_alt = 1
   Insn 347: point = 1957, n_alt = 0
   Insn 346: point = 1958, n_alt = 1
   Insn 345: point = 1960, n_alt = 1
   Insn 344: point = 1962, n_alt = 0
   Insn 343: point = 1963, n_alt = 7
   Insn 342: point = 1965, n_alt = 3
   Insn 341: point = 1966, n_alt = 3
   Insn 340: point = 1968, n_alt = 0
   Insn 339: point = 1970, n_alt = 1
   Insn 338: point = 1972, n_alt = 0
   Insn 337: point = 1973, n_alt = 0
   Insn 336: point = 1975, n_alt = 1
   Insn 335: point = 1977, n_alt = 0
   Insn 334: point = 1978, n_alt = 8
   Insn 333: point = 1979, n_alt = 3
   Insn 332: point = 1980, n_alt = 1
   Insn 331: point = 1982, n_alt = 3
   Insn 330: point = 1984, n_alt = 0
   Insn 329: point = 1986, n_alt = 1
   Insn 328: point = 1988, n_alt = 0
   Insn 327: point = 1989, n_alt = 0
   Insn 326: point = 1991, n_alt = 1
   Insn 325: point = 1993, n_alt = 0
   Insn 324: point = 1994, n_alt = 1
   Insn 323: point = 1996, n_alt = 7
   Insn 322: point = 1998, n_alt = 0
   Insn 321: point = 2000, n_alt = 4
   Insn 320: point = 2001, n_alt = 3
   Insn 319: point = 2003, n_alt = 1
   Insn 318: point = 2005, n_alt = 0
   Insn 317: point = 2006, n_alt = 7
   Insn 316: point = 2008, n_alt = 0
   Insn 315: point = 2010, n_alt = 4
   Insn 314: point = 2011, n_alt = 3
   Insn 313: point = 2013, n_alt = 0
   Insn 312: point = 2015, n_alt = 1
   Insn 311: point = 2017, n_alt = 0
   Insn 310: point = 2018, n_alt = 0
   Insn 309: point = 2020, n_alt = 0
   Insn 308: point = 2022, n_alt = 1
   Insn 307: point = 2024, n_alt = 0
   Insn 306: point = 2025, n_alt = 1
   Insn 305: point = 2027, n_alt = 1
   Insn 304: point = 2029, n_alt = 0
   Insn 303: point = 2030, n_alt = 7
   Insn 302: point = 2032, n_alt = 3
   Insn 301: point = 2033, n_alt = 3
   Insn 300: point = 2035, n_alt = 0
   Insn 299: point = 2037, n_alt = 1
   Insn 298: point = 2039, n_alt = 0
   Insn 297: point = 2040, n_alt = 0
   Insn 296: point = 2042, n_alt = 1
   Insn 295: point = 2044, n_alt = 0
  BB 18
   Insn 290: point = 2046, n_alt = -1
   Insn 289: point = 2046, n_alt = 1
   Insn 288: point = 2047, n_alt = 7
  BB 17
   Insn 283: point = 2049, n_alt = -1
   Insn 282: point = 2049, n_alt = 1
   Insn 281: point = 2050, n_alt = 2
   Insn 280: point = 2052, n_alt = 7
   Insn 279: point = 2053, n_alt = 7
   Insn 278: point = 2054, n_alt = 8
   Insn 277: point = 2055, n_alt = 1
   Insn 276: point = 2057, n_alt = 7
   Insn 275: point = 2059, n_alt = 4
   Insn 1679: point = 2060, n_alt = -2
   Insn 274: point = 2062, n_alt = 1
   Insn 1678: point = 2062, n_alt = -2
   Insn 273: point = 2064, n_alt = 7
   Insn 272: point = 2066, n_alt = 0
   Insn 271: point = 2068, n_alt = 4
   Insn 270: point = 2069, n_alt = 3
   Insn 269: point = 2071, n_alt = 1
   Insn 268: point = 2073, n_alt = 0
   Insn 267: point = 2074, n_alt = 8
   Insn 266: point = 2075, n_alt = 1
   Insn 265: point = 2077, n_alt = 7
   Insn 264: point = 2079, n_alt = 4
   Insn 1677: point = 2080, n_alt = -2
   Insn 263: point = 2082, n_alt = 1
   Insn 1676: point = 2082, n_alt = -2
   Insn 262: point = 2084, n_alt = 7
   Insn 261: point = 2086, n_alt = 0
   Insn 260: point = 2088, n_alt = 4
   Insn 259: point = 2089, n_alt = 3
   Insn 258: point = 2091, n_alt = 1
   Insn 257: point = 2093, n_alt = 0
   Insn 256: point = 2095, n_alt = 0
   Insn 255: point = 2097, n_alt = 4
   Insn 254: point = 2098, n_alt = 3
   Insn 253: point = 2100, n_alt = 0
   Insn 252: point = 2102, n_alt = 1
   Insn 251: point = 2104, n_alt = 0
   Insn 250: point = 2105, n_alt = 0
   Insn 249: point = 2107, n_alt = 1
   Insn 248: point = 2109, n_alt = 0
   Insn 247: point = 2110, n_alt = 8
   Insn 246: point = 2111, n_alt = 1
   Insn 245: point = 2113, n_alt = 7
   Insn 244: point = 2114, n_alt = -2
   Insn 243: point = 2116, n_alt = 1
   Insn 242: point = 2118, n_alt = 1
   Insn 241: point = 2120, n_alt = 7
   Insn 240: point = 2122, n_alt = 0
   Insn 239: point = 2124, n_alt = 4
   Insn 238: point = 2125, n_alt = 3
   Insn 237: point = 2127, n_alt = 0
   Insn 236: point = 2129, n_alt = 1
   Insn 235: point = 2131, n_alt = 0
   Insn 234: point = 2132, n_alt = 0
   Insn 233: point = 2134, n_alt = 1
   Insn 232: point = 2136, n_alt = 0
   Insn 231: point = 2138, n_alt = 0
   Insn 230: point = 2139, n_alt = 7
   Insn 229: point = 2141, n_alt = 4
   Insn 228: point = 2142, n_alt = 3
   Insn 227: point = 2144, n_alt = 0
   Insn 226: point = 2146, n_alt = 1
   Insn 225: point = 2148, n_alt = 0
   Insn 224: point = 2149, n_alt = 0
   Insn 223: point = 2151, n_alt = 1
   Insn 222: point = 2153, n_alt = 0
   Insn 221: point = 2155, n_alt = 0
   Insn 220: point = 2156, n_alt = 1
   Insn 219: point = 2158, n_alt = 1
   Insn 218: point = 2160, n_alt = 7
   Insn 217: point = 2162, n_alt = 0
   Insn 216: point = 2164, n_alt = 4
   Insn 215: point = 2165, n_alt = 3
   Insn 214: point = 2167, n_alt = 0
   Insn 213: point = 2169, n_alt = 1
   Insn 212: point = 2171, n_alt = 0
   Insn 211: point = 2172, n_alt = 0
   Insn 210: point = 2174, n_alt = 1
   Insn 209: point = 2176, n_alt = 0
   Insn 208: point = 2178, n_alt = 0
   Insn 207: point = 2179, n_alt = 7
   Insn 206: point = 2181, n_alt = 4
   Insn 205: point = 2182, n_alt = 3
   Insn 204: point = 2184, n_alt = 0
   Insn 203: point = 2186, n_alt = 1
   Insn 202: point = 2188, n_alt = 0
   Insn 201: point = 2189, n_alt = 0
   Insn 200: point = 2191, n_alt = 1
   Insn 199: point = 2193, n_alt = 0
   Insn 198: point = 2195, n_alt = 0
   Insn 197: point = 2196, n_alt = 1
   Insn 196: point = 2198, n_alt = 1
   Insn 195: point = 2200, n_alt = 7
   Insn 194: point = 2202, n_alt = 0
   Insn 193: point = 2204, n_alt = 4
   Insn 192: point = 2205, n_alt = 3
   Insn 191: point = 2207, n_alt = 0
   Insn 190: point = 2209, n_alt = 1
   Insn 189: point = 2211, n_alt = 0
   Insn 188: point = 2212, n_alt = 0
   Insn 187: point = 2214, n_alt = 1
   Insn 186: point = 2216, n_alt = 0
   Insn 185: point = 2217, n_alt = 7
   Insn 184: point = 2219, n_alt = 4
   Insn 183: point = 2220, n_alt = 3
   Insn 182: point = 2222, n_alt = 0
   Insn 181: point = 2224, n_alt = 1
   Insn 180: point = 2226, n_alt = 0
   Insn 179: point = 2227, n_alt = 0
   Insn 178: point = 2229, n_alt = 1
   Insn 177: point = 2231, n_alt = 0
   Insn 176: point = 2232, n_alt = 1
   Insn 175: point = 2234, n_alt = 7
   Insn 174: point = 2236, n_alt = 0
   Insn 173: point = 2238, n_alt = 4
   Insn 172: point = 2239, n_alt = 3
   Insn 171: point = 2241, n_alt = 0
   Insn 170: point = 2243, n_alt = 1
   Insn 169: point = 2245, n_alt = 0
   Insn 168: point = 2246, n_alt = 0
   Insn 167: point = 2248, n_alt = 1
   Insn 166: point = 2250, n_alt = 0
   Insn 165: point = 2251, n_alt = 7
   Insn 164: point = 2253, n_alt = 4
   Insn 163: point = 2254, n_alt = 3
   Insn 162: point = 2256, n_alt = 0
   Insn 161: point = 2258, n_alt = 1
   Insn 160: point = 2260, n_alt = 0
   Insn 159: point = 2261, n_alt = 0
   Insn 158: point = 2263, n_alt = 1
   Insn 157: point = 2265, n_alt = 0
   Insn 156: point = 2266, n_alt = 1
   Insn 155: point = 2267, n_alt = 0
   Insn 154: point = 2269, n_alt = 0
   Insn 150: point = 2270, n_alt = 0
   Insn 149: point = 2272, n_alt = 0
   Insn 148: point = 2274, n_alt = 0
   Insn 147: point = 2276, n_alt = 1
   Insn 146: point = 2278, n_alt = 0
   Insn 145: point = 2279, n_alt = 1
   Insn 144: point = 2280, n_alt = 0
   Insn 143: point = 2282, n_alt = 0
   Insn 139: point = 2283, n_alt = 0
   Insn 138: point = 2285, n_alt = 0
   Insn 137: point = 2287, n_alt = 0
   Insn 136: point = 2289, n_alt = 1
   Insn 135: point = 2291, n_alt = 0
  BB 15
   Insn 127: point = 2293, n_alt = 1
  BB 13
   Insn 119: point = 2294, n_alt = 1
   Insn 118: point = 2295, n_alt = 0
   Insn 117: point = 2296, n_alt = 0
  BB 11
   Insn 109: point = 2297, n_alt = 1
  BB 50
   Insn 1650: point = 2297, n_alt = -1
  BB 9
   Insn 90: point = 2297, n_alt = -1
   Insn 89: point = 2297, n_alt = 0
   Insn 88: point = 2298, n_alt = 0
   Insn 87: point = 2300, n_alt = 0
   Insn 86: point = 2301, n_alt = 0
  BB 10
   Insn 1618: point = 2301, n_alt = -1
   Insn 103: point = 2301, n_alt = 1
   Insn 102: point = 2301, n_alt = 0
   Insn 101: point = 2301, n_alt = 3
   Insn 100: point = 2301, n_alt = -2
   Insn 99: point = 2302, n_alt = 0
   Insn 98: point = 2304, n_alt = 4
   Insn 97: point = 2305, n_alt = 1
   Insn 96: point = 2307, n_alt = 0
   Insn 95: point = 2309, n_alt = 1
   Insn 94: point = 2311, n_alt = 0
   Insn 93: point = 2313, n_alt = 0
   Insn 92: point = 2315, n_alt = 0
  BB 8
   Insn 84: point = 2316, n_alt = 1
   Insn 83: point = 2316, n_alt = 0
   Insn 82: point = 2316, n_alt = 3
   Insn 81: point = 2316, n_alt = 4
   Insn 80: point = 2316, n_alt = 0
   Insn 79: point = 2316, n_alt = 3
   Insn 78: point = 2316, n_alt = 4
  BB 48
   Insn 1644: point = 2316, n_alt = -1
  BB 3
   Insn 16: point = 2316, n_alt = -1
   Insn 15: point = 2316, n_alt = 0
   Insn 14: point = 2317, n_alt = 0
   Insn 13: point = 2319, n_alt = 0
   Insn 12: point = 2320, n_alt = 0
  BB 7
   Insn 1616: point = 2321, n_alt = -1
   Insn 72: point = 2321, n_alt = 1
  BB 49
   Insn 1647: point = 2322, n_alt = -1
  BB 5
   Insn 24: point = 2323, n_alt = -1
   Insn 23: point = 2323, n_alt = 0
   Insn 22: point = 2324, n_alt = 0
   Insn 21: point = 2326, n_alt = 0
   Insn 20: point = 2327, n_alt = 0
  BB 6
   Insn 1614: point = 2328, n_alt = -1
   Insn 66: point = 2328, n_alt = 1
   Insn 65: point = 2328, n_alt = 8
   Insn 64: point = 2329, n_alt = 7
   Insn 63: point = 2330, n_alt = 4
   Insn 62: point = 2331, n_alt = 3
   Insn 61: point = 2333, n_alt = 0
   Insn 60: point = 2335, n_alt = 1
   Insn 59: point = 2337, n_alt = 0
   Insn 58: point = 2338, n_alt = 0
   Insn 57: point = 2340, n_alt = 1
   Insn 56: point = 2342, n_alt = 0
   Insn 55: point = 2343, n_alt = 8
   Insn 54: point = 2344, n_alt = 7
   Insn 53: point = 2345, n_alt = 3
   Insn 52: point = 2346, n_alt = 3
   Insn 51: point = 2348, n_alt = 0
   Insn 50: point = 2350, n_alt = 1
   Insn 49: point = 2352, n_alt = 0
   Insn 48: point = 2353, n_alt = 0
   Insn 47: point = 2355, n_alt = 1
   Insn 46: point = 2357, n_alt = 0
   Insn 45: point = 2358, n_alt = 8
   Insn 44: point = 2359, n_alt = 7
   Insn 43: point = 2360, n_alt = 3
   Insn 42: point = 2361, n_alt = 3
   Insn 41: point = 2363, n_alt = 0
   Insn 40: point = 2365, n_alt = 1
   Insn 39: point = 2367, n_alt = 0
   Insn 38: point = 2368, n_alt = 0
   Insn 37: point = 2370, n_alt = 1
   Insn 36: point = 2372, n_alt = 0
   Insn 35: point = 2373, n_alt = 8
   Insn 34: point = 2374, n_alt = 7
   Insn 33: point = 2375, n_alt = 3
   Insn 32: point = 2376, n_alt = 3
   Insn 31: point = 2378, n_alt = 0
   Insn 30: point = 2380, n_alt = 1
   Insn 29: point = 2382, n_alt = 0
   Insn 28: point = 2383, n_alt = 0
   Insn 27: point = 2385, n_alt = 1
   Insn 26: point = 2387, n_alt = 0
  BB 4
   Insn 18: point = 2389, n_alt = 1
  BB 2
   Insn 10: point = 2390, n_alt = 1
   Insn 9: point = 2391, n_alt = 0
   Insn 8: point = 2392, n_alt = 0
   Insn 4: point = 2393, n_alt = 5
   Insn 3: point = 2393, n_alt = 5
   Insn 2: point = 2393, n_alt = 5
 r293: [1656..1662]
 r297: [1641..1647]
 r301: [1702..1708]
 r305: [1687..1693]
Compressing live ranges: from 2393 to 8 - 0%
Ranges after the compression:
 r293: [2..3]
 r297: [0..1]
 r301: [6..7]
 r305: [4..5]
  Slot 0 regnos (width = 0):	 293	 305	 301	 297
Changing spilled pseudos to memory in insn #1683
Changing spilled pseudos to memory in insn #520
Changing spilled pseudos to memory in insn #1686
Changing spilled pseudos to memory in insn #1687
Changing spilled pseudos to memory in insn #1690
Changing spilled pseudos to memory in insn #558
Changing spilled pseudos to memory in insn #1693
Changing spilled pseudos to memory in insn #1694
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 7 for insn #1694
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1694:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #1693
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1693:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #558
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 558:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1690
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1690:  (0) m  (1) v {*movsf_internal}
Reusing alternative 7 for insn #1687
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1687:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #1686
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1686:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #520
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 520:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1683
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1683:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=176, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=144, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 35
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 45
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 55
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 65
changing reg in insn 93
changing reg in insn 94
changing reg in insn 94
changing reg in insn 95
changing reg in insn 95
changing reg in insn 96
changing reg in insn 99
changing reg in insn 100
changing reg in insn 136
changing reg in insn 137
changing reg in insn 137
changing reg in insn 138
changing reg in insn 139
changing reg in insn 144
changing reg in insn 147
changing reg in insn 148
changing reg in insn 148
changing reg in insn 149
changing reg in insn 150
changing reg in insn 155
changing reg in insn 158
changing reg in insn 159
changing reg in insn 159
changing reg in insn 161
changing reg in insn 162
changing reg in insn 163
changing reg in insn 163
changing reg in insn 165
changing reg in insn 165
changing reg in insn 176
changing reg in insn 167
changing reg in insn 168
changing reg in insn 168
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 172
changing reg in insn 174
changing reg in insn 175
changing reg in insn 176
changing reg in insn 176
changing reg in insn 197
changing reg in insn 178
changing reg in insn 179
changing reg in insn 179
changing reg in insn 181
changing reg in insn 182
changing reg in insn 183
changing reg in insn 183
changing reg in insn 185
changing reg in insn 185
changing reg in insn 187
changing reg in insn 188
changing reg in insn 188
changing reg in insn 190
changing reg in insn 191
changing reg in insn 192
changing reg in insn 192
changing reg in insn 194
changing reg in insn 195
changing reg in insn 196
changing reg in insn 197
changing reg in insn 197
changing reg in insn 220
changing reg in insn 199
changing reg in insn 200
changing reg in insn 200
changing reg in insn 201
changing reg in insn 201
changing reg in insn 203
changing reg in insn 204
changing reg in insn 205
changing reg in insn 205
changing reg in insn 207
changing reg in insn 207
changing reg in insn 209
changing reg in insn 210
changing reg in insn 210
changing reg in insn 211
changing reg in insn 211
changing reg in insn 213
changing reg in insn 214
changing reg in insn 215
changing reg in insn 215
changing reg in insn 217
changing reg in insn 218
changing reg in insn 219
changing reg in insn 220
changing reg in insn 220
changing reg in insn 222
changing reg in insn 223
changing reg in insn 223
changing reg in insn 224
changing reg in insn 224
changing reg in insn 226
changing reg in insn 227
changing reg in insn 228
changing reg in insn 228
changing reg in insn 230
changing reg in insn 230
changing reg in insn 232
changing reg in insn 233
changing reg in insn 233
changing reg in insn 234
changing reg in insn 234
changing reg in insn 236
changing reg in insn 237
changing reg in insn 238
changing reg in insn 238
changing reg in insn 240
changing reg in insn 241
changing reg in insn 242
changing reg in insn 243
changing reg in insn 244
changing reg in insn 244
changing reg in insn 249
changing reg in insn 250
changing reg in insn 250
changing reg in insn 252
changing reg in insn 253
changing reg in insn 254
changing reg in insn 254
changing reg in insn 256
changing reg in insn 257
changing reg in insn 258
changing reg in insn 258
changing reg in insn 259
changing reg in insn 259
changing reg in insn 261
changing reg in insn 262
changing reg in insn 265
changing reg in insn 269
changing reg in insn 270
changing reg in insn 270
changing reg in insn 272
changing reg in insn 273
changing reg in insn 276
changing reg in insn 281
changing reg in insn 282
changing reg in insn 296
changing reg in insn 297
changing reg in insn 297
changing reg in insn 299
changing reg in insn 300
changing reg in insn 301
changing reg in insn 301
changing reg in insn 303
changing reg in insn 303
changing reg in insn 305
changing reg in insn 306
changing reg in insn 306
changing reg in insn 310
changing reg in insn 308
changing reg in insn 309
changing reg in insn 309
changing reg in insn 310
changing reg in insn 310
changing reg in insn 312
changing reg in insn 313
changing reg in insn 314
changing reg in insn 314
changing reg in insn 316
changing reg in insn 317
changing reg in insn 319
changing reg in insn 320
changing reg in insn 320
changing reg in insn 322
changing reg in insn 323
changing reg in insn 324
changing reg in insn 326
changing reg in insn 327
changing reg in insn 327
changing reg in insn 329
changing reg in insn 330
changing reg in insn 331
changing reg in insn 331
changing reg in insn 334
changing reg in insn 332
changing reg in insn 334
changing reg in insn 336
changing reg in insn 337
changing reg in insn 337
changing reg in insn 339
changing reg in insn 340
changing reg in insn 341
changing reg in insn 341
changing reg in insn 343
changing reg in insn 343
changing reg in insn 345
changing reg in insn 346
changing reg in insn 346
changing reg in insn 350
changing reg in insn 348
changing reg in insn 349
changing reg in insn 349
changing reg in insn 350
changing reg in insn 350
changing reg in insn 352
changing reg in insn 353
changing reg in insn 354
changing reg in insn 354
changing reg in insn 356
changing reg in insn 357
changing reg in insn 359
changing reg in insn 360
changing reg in insn 360
changing reg in insn 362
changing reg in insn 363
changing reg in insn 364
changing reg in insn 366
changing reg in insn 367
changing reg in insn 367
changing reg in insn 369
changing reg in insn 370
changing reg in insn 371
changing reg in insn 371
changing reg in insn 374
changing reg in insn 372
changing reg in insn 374
changing reg in insn 376
changing reg in insn 377
changing reg in insn 377
changing reg in insn 379
changing reg in insn 380
changing reg in insn 381
changing reg in insn 381
changing reg in insn 383
changing reg in insn 383
changing reg in insn 385
changing reg in insn 386
changing reg in insn 386
changing reg in insn 388
changing reg in insn 389
changing reg in insn 391
changing reg in insn 392
changing reg in insn 392
changing reg in insn 394
changing reg in insn 395
changing reg in insn 396
changing reg in insn 396
changing reg in insn 399
changing reg in insn 397
changing reg in insn 399
changing reg in insn 439
changing reg in insn 440
changing reg in insn 440
changing reg in insn 442
changing reg in insn 443
changing reg in insn 444
changing reg in insn 444
changing reg in insn 446
changing reg in insn 446
changing reg in insn 448
changing reg in insn 455
changing reg in insn 456
changing reg in insn 456
changing reg in insn 458
changing reg in insn 459
changing reg in insn 460
changing reg in insn 460
changing reg in insn 462
changing reg in insn 462
changing reg in insn 472
changing reg in insn 464
changing reg in insn 465
changing reg in insn 465
changing reg in insn 467
changing reg in insn 468
changing reg in insn 469
changing reg in insn 469
changing reg in insn 471
changing reg in insn 471
changing reg in insn 472
changing reg in insn 475
changing reg in insn 476
changing reg in insn 476
changing reg in insn 478
changing reg in insn 479
changing reg in insn 480
changing reg in insn 480
changing reg in insn 482
changing reg in insn 482
changing reg in insn 492
changing reg in insn 484
changing reg in insn 485
changing reg in insn 485
changing reg in insn 487
changing reg in insn 488
changing reg in insn 489
changing reg in insn 489
changing reg in insn 491
changing reg in insn 491
changing reg in insn 492
changing reg in insn 497
changing reg in insn 498
changing reg in insn 499
changing reg in insn 513
changing reg in insn 518
changing reg in insn 519
changing reg in insn 519
changing reg in insn 525
changing reg in insn 530
changing reg in insn 531
changing reg in insn 531
changing reg in insn 532
changing reg in insn 551
changing reg in insn 556
changing reg in insn 557
changing reg in insn 557
changing reg in insn 563
changing reg in insn 568
changing reg in insn 569
changing reg in insn 569
changing reg in insn 570
changing reg in insn 583
changing reg in insn 584
changing reg in insn 584
changing reg in insn 586
changing reg in insn 587
changing reg in insn 588
changing reg in insn 588
changing reg in insn 591
changing reg in insn 593
changing reg in insn 594
changing reg in insn 594
changing reg in insn 596
changing reg in insn 597
changing reg in insn 598
changing reg in insn 598
changing reg in insn 601
changing reg in insn 607
changing reg in insn 608
changing reg in insn 608
changing reg in insn 610
changing reg in insn 611
changing reg in insn 612
changing reg in insn 612
changing reg in insn 615
changing reg in insn 617
changing reg in insn 618
changing reg in insn 618
changing reg in insn 620
changing reg in insn 621
changing reg in insn 622
changing reg in insn 622
changing reg in insn 625
changing reg in insn 667
changing reg in insn 668
changing reg in insn 668
changing reg in insn 669
changing reg in insn 670
changing reg in insn 675
changing reg in insn 678
changing reg in insn 679
changing reg in insn 679
changing reg in insn 680
changing reg in insn 681
changing reg in insn 686
changing reg in insn 689
changing reg in insn 690
changing reg in insn 690
changing reg in insn 694
changing reg in insn 692
changing reg in insn 693
changing reg in insn 693
changing reg in insn 694
changing reg in insn 694
changing reg in insn 696
changing reg in insn 697
changing reg in insn 698
changing reg in insn 698
changing reg in insn 700
changing reg in insn 701
changing reg in insn 717
changing reg in insn 703
changing reg in insn 704
changing reg in insn 704
changing reg in insn 705
changing reg in insn 705
changing reg in insn 709
changing reg in insn 707
changing reg in insn 708
changing reg in insn 708
changing reg in insn 709
changing reg in insn 709
changing reg in insn 711
changing reg in insn 712
changing reg in insn 713
changing reg in insn 713
changing reg in insn 715
changing reg in insn 716
changing reg in insn 717
changing reg in insn 717
changing reg in insn 732
changing reg in insn 719
changing reg in insn 720
changing reg in insn 720
changing reg in insn 724
changing reg in insn 722
changing reg in insn 723
changing reg in insn 723
changing reg in insn 724
changing reg in insn 724
changing reg in insn 726
changing reg in insn 727
changing reg in insn 728
changing reg in insn 728
changing reg in insn 730
changing reg in insn 731
changing reg in insn 732
changing reg in insn 732
changing reg in insn 748
changing reg in insn 734
changing reg in insn 735
changing reg in insn 735
changing reg in insn 736
changing reg in insn 736
changing reg in insn 740
changing reg in insn 738
changing reg in insn 739
changing reg in insn 739
changing reg in insn 740
changing reg in insn 740
changing reg in insn 742
changing reg in insn 743
changing reg in insn 744
changing reg in insn 744
changing reg in insn 746
changing reg in insn 747
changing reg in insn 748
changing reg in insn 748
changing reg in insn 764
changing reg in insn 750
changing reg in insn 751
changing reg in insn 751
changing reg in insn 756
changing reg in insn 753
changing reg in insn 754
changing reg in insn 754
changing reg in insn 755
changing reg in insn 755
changing reg in insn 756
changing reg in insn 756
changing reg in insn 758
changing reg in insn 759
changing reg in insn 760
changing reg in insn 760
changing reg in insn 762
changing reg in insn 763
changing reg in insn 764
changing reg in insn 764
changing reg in insn 781
changing reg in insn 766
changing reg in insn 767
changing reg in insn 767
changing reg in insn 768
changing reg in insn 768
changing reg in insn 773
changing reg in insn 770
changing reg in insn 771
changing reg in insn 771
changing reg in insn 772
changing reg in insn 772
changing reg in insn 773
changing reg in insn 773
changing reg in insn 775
changing reg in insn 776
changing reg in insn 777
changing reg in insn 777
changing reg in insn 779
changing reg in insn 780
changing reg in insn 781
changing reg in insn 781
changing reg in insn 797
changing reg in insn 783
changing reg in insn 784
changing reg in insn 784
changing reg in insn 789
changing reg in insn 786
changing reg in insn 787
changing reg in insn 787
changing reg in insn 788
changing reg in insn 788
changing reg in insn 789
changing reg in insn 789
changing reg in insn 791
changing reg in insn 792
changing reg in insn 793
changing reg in insn 793
changing reg in insn 795
changing reg in insn 796
changing reg in insn 797
changing reg in insn 797
changing reg in insn 799
changing reg in insn 800
changing reg in insn 800
changing reg in insn 801
changing reg in insn 801
changing reg in insn 806
changing reg in insn 803
changing reg in insn 804
changing reg in insn 804
changing reg in insn 805
changing reg in insn 805
changing reg in insn 806
changing reg in insn 806
changing reg in insn 808
changing reg in insn 809
changing reg in insn 810
changing reg in insn 810
changing reg in insn 812
changing reg in insn 813
changing reg in insn 814
changing reg in insn 815
changing reg in insn 815
changing reg in insn 820
changing reg in insn 821
changing reg in insn 821
changing reg in insn 823
changing reg in insn 824
changing reg in insn 825
changing reg in insn 825
changing reg in insn 827
changing reg in insn 828
changing reg in insn 829
changing reg in insn 829
changing reg in insn 830
changing reg in insn 830
changing reg in insn 831
changing reg in insn 831
changing reg in insn 835
changing reg in insn 833
changing reg in insn 834
changing reg in insn 834
changing reg in insn 835
changing reg in insn 835
changing reg in insn 837
changing reg in insn 838
changing reg in insn 839
changing reg in insn 839
changing reg in insn 841
changing reg in insn 842
changing reg in insn 867
changing reg in insn 844
changing reg in insn 845
changing reg in insn 845
changing reg in insn 847
changing reg in insn 848
changing reg in insn 849
changing reg in insn 849
changing reg in insn 851
changing reg in insn 852
changing reg in insn 853
changing reg in insn 853
changing reg in insn 854
changing reg in insn 854
changing reg in insn 855
changing reg in insn 855
changing reg in insn 859
changing reg in insn 857
changing reg in insn 858
changing reg in insn 858
changing reg in insn 859
changing reg in insn 859
changing reg in insn 861
changing reg in insn 862
changing reg in insn 863
changing reg in insn 863
changing reg in insn 865
changing reg in insn 866
changing reg in insn 867
changing reg in insn 867
changing reg in insn 893
changing reg in insn 869
changing reg in insn 870
changing reg in insn 870
changing reg in insn 872
changing reg in insn 873
changing reg in insn 874
changing reg in insn 874
changing reg in insn 876
changing reg in insn 877
changing reg in insn 878
changing reg in insn 878
changing reg in insn 879
changing reg in insn 879
changing reg in insn 880
changing reg in insn 880
changing reg in insn 885
changing reg in insn 882
changing reg in insn 883
changing reg in insn 883
changing reg in insn 884
changing reg in insn 884
changing reg in insn 885
changing reg in insn 885
changing reg in insn 887
changing reg in insn 888
changing reg in insn 889
changing reg in insn 889
changing reg in insn 891
changing reg in insn 892
changing reg in insn 893
changing reg in insn 893
changing reg in insn 895
changing reg in insn 896
changing reg in insn 896
changing reg in insn 898
changing reg in insn 899
changing reg in insn 900
changing reg in insn 900
changing reg in insn 902
changing reg in insn 903
changing reg in insn 904
changing reg in insn 904
changing reg in insn 905
changing reg in insn 905
changing reg in insn 906
changing reg in insn 906
changing reg in insn 911
changing reg in insn 908
changing reg in insn 909
changing reg in insn 909
changing reg in insn 910
changing reg in insn 910
changing reg in insn 911
changing reg in insn 911
changing reg in insn 913
changing reg in insn 914
changing reg in insn 915
changing reg in insn 915
changing reg in insn 917
changing reg in insn 918
changing reg in insn 919
changing reg in insn 920
changing reg in insn 920
changing reg in insn 935
changing reg in insn 936
changing reg in insn 936
changing reg in insn 938
changing reg in insn 939
changing reg in insn 940
changing reg in insn 940
changing reg in insn 942
changing reg in insn 943
changing reg in insn 944
changing reg in insn 948
changing reg in insn 949
changing reg in insn 949
changing reg in insn 950
changing reg in insn 950
changing reg in insn 954
changing reg in insn 952
changing reg in insn 953
changing reg in insn 953
changing reg in insn 954
changing reg in insn 954
changing reg in insn 956
changing reg in insn 957
changing reg in insn 958
changing reg in insn 958
changing reg in insn 960
changing reg in insn 961
changing reg in insn 977
changing reg in insn 963
changing reg in insn 964
changing reg in insn 964
changing reg in insn 965
changing reg in insn 965
changing reg in insn 969
changing reg in insn 967
changing reg in insn 968
changing reg in insn 968
changing reg in insn 969
changing reg in insn 969
changing reg in insn 971
changing reg in insn 972
changing reg in insn 973
changing reg in insn 973
changing reg in insn 975
changing reg in insn 976
changing reg in insn 977
changing reg in insn 977
changing reg in insn 993
changing reg in insn 979
changing reg in insn 980
changing reg in insn 980
changing reg in insn 981
changing reg in insn 981
changing reg in insn 985
changing reg in insn 983
changing reg in insn 984
changing reg in insn 984
changing reg in insn 985
changing reg in insn 985
changing reg in insn 987
changing reg in insn 988
changing reg in insn 989
changing reg in insn 989
changing reg in insn 991
changing reg in insn 992
changing reg in insn 993
changing reg in insn 993
changing reg in insn 1009
changing reg in insn 995
changing reg in insn 996
changing reg in insn 996
changing reg in insn 997
changing reg in insn 997
changing reg in insn 1001
changing reg in insn 999
changing reg in insn 1000
changing reg in insn 1000
changing reg in insn 1001
changing reg in insn 1001
changing reg in insn 1003
changing reg in insn 1004
changing reg in insn 1005
changing reg in insn 1005
changing reg in insn 1007
changing reg in insn 1008
changing reg in insn 1009
changing reg in insn 1009
changing reg in insn 1026
changing reg in insn 1011
changing reg in insn 1012
changing reg in insn 1012
changing reg in insn 1013
changing reg in insn 1013
changing reg in insn 1018
changing reg in insn 1015
changing reg in insn 1016
changing reg in insn 1016
changing reg in insn 1017
changing reg in insn 1017
changing reg in insn 1018
changing reg in insn 1018
changing reg in insn 1020
changing reg in insn 1021
changing reg in insn 1022
changing reg in insn 1022
changing reg in insn 1024
changing reg in insn 1025
changing reg in insn 1026
changing reg in insn 1026
changing reg in insn 1043
changing reg in insn 1028
changing reg in insn 1029
changing reg in insn 1029
changing reg in insn 1030
changing reg in insn 1030
changing reg in insn 1035
changing reg in insn 1032
changing reg in insn 1033
changing reg in insn 1033
changing reg in insn 1034
changing reg in insn 1034
changing reg in insn 1035
changing reg in insn 1035
changing reg in insn 1037
changing reg in insn 1038
changing reg in insn 1039
changing reg in insn 1039
changing reg in insn 1041
changing reg in insn 1042
changing reg in insn 1043
changing reg in insn 1043
changing reg in insn 1060
changing reg in insn 1045
changing reg in insn 1046
changing reg in insn 1046
changing reg in insn 1047
changing reg in insn 1047
changing reg in insn 1052
changing reg in insn 1049
changing reg in insn 1050
changing reg in insn 1050
changing reg in insn 1051
changing reg in insn 1051
changing reg in insn 1052
changing reg in insn 1052
changing reg in insn 1054
changing reg in insn 1055
changing reg in insn 1056
changing reg in insn 1056
changing reg in insn 1058
changing reg in insn 1059
changing reg in insn 1060
changing reg in insn 1060
changing reg in insn 1062
changing reg in insn 1063
changing reg in insn 1063
changing reg in insn 1064
changing reg in insn 1064
changing reg in insn 1069
changing reg in insn 1066
changing reg in insn 1067
changing reg in insn 1067
changing reg in insn 1068
changing reg in insn 1068
changing reg in insn 1069
changing reg in insn 1069
changing reg in insn 1071
changing reg in insn 1072
changing reg in insn 1073
changing reg in insn 1073
changing reg in insn 1075
changing reg in insn 1076
changing reg in insn 1077
changing reg in insn 1078
changing reg in insn 1078
changing reg in insn 1083
changing reg in insn 1084
changing reg in insn 1084
changing reg in insn 1085
changing reg in insn 1085
changing reg in insn 1089
changing reg in insn 1087
changing reg in insn 1088
changing reg in insn 1088
changing reg in insn 1089
changing reg in insn 1089
changing reg in insn 1091
changing reg in insn 1092
changing reg in insn 1093
changing reg in insn 1093
changing reg in insn 1095
changing reg in insn 1096
changing reg in insn 1111
changing reg in insn 1098
changing reg in insn 1099
changing reg in insn 1099
changing reg in insn 1103
changing reg in insn 1101
changing reg in insn 1102
changing reg in insn 1102
changing reg in insn 1103
changing reg in insn 1103
changing reg in insn 1105
changing reg in insn 1106
changing reg in insn 1107
changing reg in insn 1107
changing reg in insn 1109
changing reg in insn 1110
changing reg in insn 1111
changing reg in insn 1111
changing reg in insn 1127
changing reg in insn 1113
changing reg in insn 1114
changing reg in insn 1114
changing reg in insn 1115
changing reg in insn 1115
changing reg in insn 1119
changing reg in insn 1117
changing reg in insn 1118
changing reg in insn 1118
changing reg in insn 1119
changing reg in insn 1119
changing reg in insn 1121
changing reg in insn 1122
changing reg in insn 1123
changing reg in insn 1123
changing reg in insn 1125
changing reg in insn 1126
changing reg in insn 1127
changing reg in insn 1127
changing reg in insn 1142
changing reg in insn 1129
changing reg in insn 1130
changing reg in insn 1130
changing reg in insn 1134
changing reg in insn 1132
changing reg in insn 1133
changing reg in insn 1133
changing reg in insn 1134
changing reg in insn 1134
changing reg in insn 1136
changing reg in insn 1137
changing reg in insn 1138
changing reg in insn 1138
changing reg in insn 1140
changing reg in insn 1141
changing reg in insn 1142
changing reg in insn 1142
changing reg in insn 1159
changing reg in insn 1144
changing reg in insn 1145
changing reg in insn 1145
changing reg in insn 1146
changing reg in insn 1146
changing reg in insn 1151
changing reg in insn 1148
changing reg in insn 1149
changing reg in insn 1149
changing reg in insn 1150
changing reg in insn 1150
changing reg in insn 1151
changing reg in insn 1151
changing reg in insn 1153
changing reg in insn 1154
changing reg in insn 1155
changing reg in insn 1155
changing reg in insn 1157
changing reg in insn 1158
changing reg in insn 1159
changing reg in insn 1159
changing reg in insn 1175
changing reg in insn 1161
changing reg in insn 1162
changing reg in insn 1162
changing reg in insn 1167
changing reg in insn 1164
changing reg in insn 1165
changing reg in insn 1165
changing reg in insn 1166
changing reg in insn 1166
changing reg in insn 1167
changing reg in insn 1167
changing reg in insn 1169
changing reg in insn 1170
changing reg in insn 1171
changing reg in insn 1171
changing reg in insn 1173
changing reg in insn 1174
changing reg in insn 1175
changing reg in insn 1175
changing reg in insn 1192
changing reg in insn 1177
changing reg in insn 1178
changing reg in insn 1178
changing reg in insn 1179
changing reg in insn 1179
changing reg in insn 1184
changing reg in insn 1181
changing reg in insn 1182
changing reg in insn 1182
changing reg in insn 1183
changing reg in insn 1183
changing reg in insn 1184
changing reg in insn 1184
changing reg in insn 1186
changing reg in insn 1187
changing reg in insn 1188
changing reg in insn 1188
changing reg in insn 1190
changing reg in insn 1191
changing reg in insn 1192
changing reg in insn 1192
changing reg in insn 1194
changing reg in insn 1195
changing reg in insn 1195
changing reg in insn 1200
changing reg in insn 1197
changing reg in insn 1198
changing reg in insn 1198
changing reg in insn 1199
changing reg in insn 1199
changing reg in insn 1200
changing reg in insn 1200
changing reg in insn 1202
changing reg in insn 1203
changing reg in insn 1204
changing reg in insn 1204
changing reg in insn 1206
changing reg in insn 1207
changing reg in insn 1208
changing reg in insn 1209
changing reg in insn 1209
changing reg in insn 1214
changing reg in insn 1215
changing reg in insn 1215
changing reg in insn 1219
changing reg in insn 1217
changing reg in insn 1218
changing reg in insn 1218
changing reg in insn 1219
changing reg in insn 1219
changing reg in insn 1221
changing reg in insn 1222
changing reg in insn 1223
changing reg in insn 1223
changing reg in insn 1225
changing reg in insn 1226
changing reg in insn 1241
changing reg in insn 1228
changing reg in insn 1229
changing reg in insn 1229
changing reg in insn 1233
changing reg in insn 1231
changing reg in insn 1232
changing reg in insn 1232
changing reg in insn 1233
changing reg in insn 1233
changing reg in insn 1235
changing reg in insn 1236
changing reg in insn 1237
changing reg in insn 1237
changing reg in insn 1239
changing reg in insn 1240
changing reg in insn 1241
changing reg in insn 1241
changing reg in insn 1257
changing reg in insn 1243
changing reg in insn 1244
changing reg in insn 1244
changing reg in insn 1249
changing reg in insn 1246
changing reg in insn 1247
changing reg in insn 1247
changing reg in insn 1248
changing reg in insn 1248
changing reg in insn 1249
changing reg in insn 1249
changing reg in insn 1251
changing reg in insn 1252
changing reg in insn 1253
changing reg in insn 1253
changing reg in insn 1255
changing reg in insn 1256
changing reg in insn 1257
changing reg in insn 1257
changing reg in insn 1259
changing reg in insn 1260
changing reg in insn 1260
changing reg in insn 1265
changing reg in insn 1262
changing reg in insn 1263
changing reg in insn 1263
changing reg in insn 1264
changing reg in insn 1264
changing reg in insn 1265
changing reg in insn 1265
changing reg in insn 1267
changing reg in insn 1268
changing reg in insn 1269
changing reg in insn 1269
changing reg in insn 1271
changing reg in insn 1272
changing reg in insn 1273
changing reg in insn 1274
changing reg in insn 1274
changing reg in insn 1276
changing reg in insn 1277
changing reg in insn 1277
changing reg in insn 1278
changing reg in insn 1278
changing reg in insn 1282
changing reg in insn 1280
changing reg in insn 1281
changing reg in insn 1281
changing reg in insn 1282
changing reg in insn 1282
changing reg in insn 1284
changing reg in insn 1285
changing reg in insn 1286
changing reg in insn 1286
changing reg in insn 1288
changing reg in insn 1289
changing reg in insn 1305
changing reg in insn 1291
changing reg in insn 1292
changing reg in insn 1292
changing reg in insn 1293
changing reg in insn 1293
changing reg in insn 1297
changing reg in insn 1295
changing reg in insn 1296
changing reg in insn 1296
changing reg in insn 1297
changing reg in insn 1297
changing reg in insn 1299
changing reg in insn 1300
changing reg in insn 1301
changing reg in insn 1301
changing reg in insn 1303
changing reg in insn 1304
changing reg in insn 1305
changing reg in insn 1305
changing reg in insn 1322
changing reg in insn 1307
changing reg in insn 1308
changing reg in insn 1308
changing reg in insn 1309
changing reg in insn 1309
changing reg in insn 1314
changing reg in insn 1311
changing reg in insn 1312
changing reg in insn 1312
changing reg in insn 1313
changing reg in insn 1313
changing reg in insn 1314
changing reg in insn 1314
changing reg in insn 1316
changing reg in insn 1317
changing reg in insn 1318
changing reg in insn 1318
changing reg in insn 1320
changing reg in insn 1321
changing reg in insn 1322
changing reg in insn 1322
changing reg in insn 1324
changing reg in insn 1325
changing reg in insn 1325
changing reg in insn 1326
changing reg in insn 1326
changing reg in insn 1331
changing reg in insn 1328
changing reg in insn 1329
changing reg in insn 1329
changing reg in insn 1330
changing reg in insn 1330
changing reg in insn 1331
changing reg in insn 1331
changing reg in insn 1333
changing reg in insn 1334
changing reg in insn 1335
changing reg in insn 1335
changing reg in insn 1337
changing reg in insn 1338
changing reg in insn 1339
changing reg in insn 1340
changing reg in insn 1340
changing reg in insn 1341
changing reg in insn 1342
changing reg in insn 1342
changing reg in insn 1353
changing reg in insn 1354
changing reg in insn 1354
changing reg in insn 1355
changing reg in insn 1355
changing reg in insn 1359
changing reg in insn 1357
changing reg in insn 1358
changing reg in insn 1358
changing reg in insn 1359
changing reg in insn 1359
changing reg in insn 1361
changing reg in insn 1362
changing reg in insn 1363
changing reg in insn 1363
changing reg in insn 1365
changing reg in insn 1366
changing reg in insn 1381
changing reg in insn 1368
changing reg in insn 1369
changing reg in insn 1369
changing reg in insn 1373
changing reg in insn 1371
changing reg in insn 1372
changing reg in insn 1372
changing reg in insn 1373
changing reg in insn 1373
changing reg in insn 1375
changing reg in insn 1376
changing reg in insn 1377
changing reg in insn 1377
changing reg in insn 1379
changing reg in insn 1380
changing reg in insn 1381
changing reg in insn 1384
changing reg in insn 1385
changing reg in insn 1385
changing reg in insn 1389
changing reg in insn 1387
changing reg in insn 1388
changing reg in insn 1388
changing reg in insn 1389
changing reg in insn 1389
changing reg in insn 1391
changing reg in insn 1392
changing reg in insn 1393
changing reg in insn 1393
changing reg in insn 1395
changing reg in insn 1396
changing reg in insn 1412
changing reg in insn 1398
changing reg in insn 1399
changing reg in insn 1399
changing reg in insn 1400
changing reg in insn 1400
changing reg in insn 1404
changing reg in insn 1402
changing reg in insn 1403
changing reg in insn 1403
changing reg in insn 1404
changing reg in insn 1404
changing reg in insn 1406
changing reg in insn 1407
changing reg in insn 1408
changing reg in insn 1408
changing reg in insn 1410
changing reg in insn 1411
changing reg in insn 1412
changing reg in insn 1415
changing reg in insn 1416
changing reg in insn 1416
changing reg in insn 1417
changing reg in insn 1417
changing reg in insn 1421
changing reg in insn 1419
changing reg in insn 1420
changing reg in insn 1420
changing reg in insn 1421
changing reg in insn 1421
changing reg in insn 1423
changing reg in insn 1424
changing reg in insn 1425
changing reg in insn 1425
changing reg in insn 1427
changing reg in insn 1428
changing reg in insn 1443
changing reg in insn 1430
changing reg in insn 1431
changing reg in insn 1431
changing reg in insn 1435
changing reg in insn 1433
changing reg in insn 1434
changing reg in insn 1434
changing reg in insn 1435
changing reg in insn 1435
changing reg in insn 1437
changing reg in insn 1438
changing reg in insn 1439
changing reg in insn 1439
changing reg in insn 1441
changing reg in insn 1442
changing reg in insn 1443
changing reg in insn 1446
changing reg in insn 1447
changing reg in insn 1447
changing reg in insn 1451
changing reg in insn 1449
changing reg in insn 1450
changing reg in insn 1450
changing reg in insn 1451
changing reg in insn 1451
changing reg in insn 1453
changing reg in insn 1454
changing reg in insn 1455
changing reg in insn 1455
changing reg in insn 1457
changing reg in insn 1458
changing reg in insn 1474
changing reg in insn 1460
changing reg in insn 1461
changing reg in insn 1461
changing reg in insn 1462
changing reg in insn 1462
changing reg in insn 1466
changing reg in insn 1464
changing reg in insn 1465
changing reg in insn 1465
changing reg in insn 1466
changing reg in insn 1466
changing reg in insn 1468
changing reg in insn 1469
changing reg in insn 1470
changing reg in insn 1470
changing reg in insn 1472
changing reg in insn 1473
changing reg in insn 1474
changing reg in insn 1477
changing reg in insn 1478
changing reg in insn 1478
changing reg in insn 1482
changing reg in insn 1480
changing reg in insn 1481
changing reg in insn 1481
changing reg in insn 1482
changing reg in insn 1482
changing reg in insn 1484
changing reg in insn 1485
changing reg in insn 1486
changing reg in insn 1486
changing reg in insn 1488
changing reg in insn 1489
changing reg in insn 1499
changing reg in insn 1491
changing reg in insn 1492
changing reg in insn 1492
changing reg in insn 1494
changing reg in insn 1495
changing reg in insn 1496
changing reg in insn 1496
changing reg in insn 1498
changing reg in insn 1498
changing reg in insn 1499
changing reg in insn 1499
changing reg in insn 1500
changing reg in insn 1500
changing reg in insn 1502
changing reg in insn 1503
changing reg in insn 1503
changing reg in insn 1506
changing reg in insn 1507
changing reg in insn 1507
changing reg in insn 1508
changing reg in insn 1508
changing reg in insn 1509
changing reg in insn 1510
changing reg in insn 1510
changing reg in insn 1511
changing reg in insn 1548
changing reg in insn 1513
changing reg in insn 1514
changing reg in insn 1514
changing reg in insn 1518
changing reg in insn 1516
changing reg in insn 1517
changing reg in insn 1517
changing reg in insn 1518
changing reg in insn 1518
changing reg in insn 1520
changing reg in insn 1521
changing reg in insn 1522
changing reg in insn 1522
changing reg in insn 1524
changing reg in insn 1525
changing reg in insn 1535
changing reg in insn 1527
changing reg in insn 1528
changing reg in insn 1528
changing reg in insn 1530
changing reg in insn 1531
changing reg in insn 1532
changing reg in insn 1532
changing reg in insn 1534
changing reg in insn 1534
changing reg in insn 1535
changing reg in insn 1535
changing reg in insn 1536
changing reg in insn 1536
changing reg in insn 1538
changing reg in insn 1539
changing reg in insn 1539
changing reg in insn 1542
changing reg in insn 1543
changing reg in insn 1543
changing reg in insn 1544
changing reg in insn 1544
changing reg in insn 1545
changing reg in insn 1546
changing reg in insn 1546
changing reg in insn 1547
changing reg in insn 1548
changing reg in insn 1548
changing reg in insn 1549
changing reg in insn 1549
changing reg in insn 1550
changing reg in insn 1550
changing reg in insn 1552
changing reg in insn 1553
changing reg in insn 1553
changing reg in insn 1554
changing reg in insn 1556
changing reg in insn 1557
changing reg in insn 1557
changing reg in insn 1559
changing reg in insn 1560
changing reg in insn 1561
changing reg in insn 1561
changing reg in insn 1563
changing reg in insn 1563
changing reg in insn 1565
changing reg in insn 1566
changing reg in insn 1566
changing reg in insn 1568
changing reg in insn 1569
changing reg in insn 1570
changing reg in insn 1570
changing reg in insn 1573
changing reg in insn 1571
changing reg in insn 1573
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 22
changing reg in insn 23
changing reg in insn 88
changing reg in insn 89
changing reg in insn 113
changing reg in insn 114
changing reg in insn 117
changing reg in insn 119
changing reg in insn 118
changing reg in insn 121
changing reg in insn 123
changing reg in insn 124
changing reg in insn 131
changing reg in insn 132
changing reg in insn 420
changing reg in insn 422
changing reg in insn 421
changing reg in insn 424
changing reg in insn 426
changing reg in insn 427
changing reg in insn 434
changing reg in insn 435
changing reg in insn 644
changing reg in insn 645
changing reg in insn 648
changing reg in insn 650
changing reg in insn 649
changing reg in insn 652
changing reg in insn 654
changing reg in insn 655
changing reg in insn 662
changing reg in insn 663
changing reg in insn 13
changing reg in insn 14
changing reg in insn 21
changing reg in insn 22
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 30
changing reg in insn 33
changing reg in insn 35
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 40
changing reg in insn 43
changing reg in insn 45
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 49
changing reg in insn 50
changing reg in insn 53
changing reg in insn 55
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 59
changing reg in insn 60
changing reg in insn 63
changing reg in insn 65
changing reg in insn 64
changing reg in insn 65
changing reg in insn 87
changing reg in insn 88
changing reg in insn 92
changing reg in insn 93
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 98
changing reg in insn 112
changing reg in insn 113
changing reg in insn 122
changing reg in insn 123
changing reg in insn 130
changing reg in insn 131
changing reg in insn 135
changing reg in insn 136
changing reg in insn 138
changing reg in insn 139
changing reg in insn 144
changing reg in insn 145
changing reg in insn 143
changing reg in insn 146
changing reg in insn 147
changing reg in insn 149
changing reg in insn 150
changing reg in insn 155
changing reg in insn 156
changing reg in insn 154
changing reg in insn 157
changing reg in insn 158
changing reg in insn 160
changing reg in insn 161
changing reg in insn 164
changing reg in insn 165
changing reg in insn 166
changing reg in insn 167
changing reg in insn 169
changing reg in insn 170
changing reg in insn 173
changing reg in insn 175
changing reg in insn 174
changing reg in insn 175
changing reg in insn 177
changing reg in insn 178
changing reg in insn 180
changing reg in insn 181
changing reg in insn 184
changing reg in insn 185
changing reg in insn 186
changing reg in insn 187
changing reg in insn 189
changing reg in insn 190
changing reg in insn 193
changing reg in insn 195
changing reg in insn 194
changing reg in insn 195
changing reg in insn 198
changing reg in insn 199
changing reg in insn 202
changing reg in insn 203
changing reg in insn 206
changing reg in insn 207
changing reg in insn 208
changing reg in insn 209
changing reg in insn 212
changing reg in insn 213
changing reg in insn 216
changing reg in insn 218
changing reg in insn 217
changing reg in insn 218
changing reg in insn 221
changing reg in insn 222
changing reg in insn 225
changing reg in insn 226
changing reg in insn 229
changing reg in insn 230
changing reg in insn 231
changing reg in insn 232
changing reg in insn 235
changing reg in insn 236
changing reg in insn 239
changing reg in insn 241
changing reg in insn 240
changing reg in insn 241
changing reg in insn 246
changing reg in insn 247
changing reg in insn 245
changing reg in insn 248
changing reg in insn 249
changing reg in insn 251
changing reg in insn 252
changing reg in insn 255
changing reg in insn 257
changing reg in insn 256
changing reg in insn 257
changing reg in insn 260
changing reg in insn 262
changing reg in insn 261
changing reg in insn 262
changing reg in insn 264
changing reg in insn 265
changing reg in insn 266
changing reg in insn 267
changing reg in insn 268
changing reg in insn 269
changing reg in insn 271
changing reg in insn 273
changing reg in insn 272
changing reg in insn 273
changing reg in insn 275
changing reg in insn 276
changing reg in insn 277
changing reg in insn 278
changing reg in insn 279
changing reg in insn 281
changing reg in insn 280
changing reg in insn 281
changing reg in insn 288
changing reg in insn 289
changing reg in insn 295
changing reg in insn 296
changing reg in insn 298
changing reg in insn 299
changing reg in insn 302
changing reg in insn 303
changing reg in insn 304
changing reg in insn 305
changing reg in insn 307
changing reg in insn 308
changing reg in insn 311
changing reg in insn 312
changing reg in insn 315
changing reg in insn 317
changing reg in insn 316
changing reg in insn 317
changing reg in insn 318
changing reg in insn 319
changing reg in insn 321
changing reg in insn 323
changing reg in insn 322
changing reg in insn 323
changing reg in insn 325
changing reg in insn 326
changing reg in insn 328
changing reg in insn 329
changing reg in insn 333
changing reg in insn 334
changing reg in insn 335
changing reg in insn 336
changing reg in insn 338
changing reg in insn 339
changing reg in insn 342
changing reg in insn 343
changing reg in insn 344
changing reg in insn 345
changing reg in insn 347
changing reg in insn 348
changing reg in insn 351
changing reg in insn 352
changing reg in insn 355
changing reg in insn 357
changing reg in insn 356
changing reg in insn 357
changing reg in insn 358
changing reg in insn 359
changing reg in insn 361
changing reg in insn 363
changing reg in insn 362
changing reg in insn 363
changing reg in insn 365
changing reg in insn 366
changing reg in insn 368
changing reg in insn 369
changing reg in insn 373
changing reg in insn 374
changing reg in insn 375
changing reg in insn 376
changing reg in insn 378
changing reg in insn 379
changing reg in insn 382
changing reg in insn 383
changing reg in insn 384
changing reg in insn 385
changing reg in insn 387
changing reg in insn 389
changing reg in insn 388
changing reg in insn 389
changing reg in insn 390
changing reg in insn 391
changing reg in insn 393
changing reg in insn 394
changing reg in insn 398
changing reg in insn 399
changing reg in insn 425
changing reg in insn 426
changing reg in insn 433
changing reg in insn 434
changing reg in insn 438
changing reg in insn 439
changing reg in insn 441
changing reg in insn 442
changing reg in insn 445
changing reg in insn 446
changing reg in insn 447
changing reg in insn 448
changing reg in insn 454
changing reg in insn 455
changing reg in insn 457
changing reg in insn 458
changing reg in insn 461
changing reg in insn 462
changing reg in insn 463
changing reg in insn 464
changing reg in insn 466
changing reg in insn 467
changing reg in insn 470
changing reg in insn 471
changing reg in insn 472
changing reg in insn 473
changing reg in insn 474
changing reg in insn 475
changing reg in insn 477
changing reg in insn 478
changing reg in insn 481
changing reg in insn 482
changing reg in insn 483
changing reg in insn 484
changing reg in insn 486
changing reg in insn 487
changing reg in insn 490
changing reg in insn 491
changing reg in insn 492
changing reg in insn 493
changing reg in insn 494
changing reg in insn 496
changing reg in insn 497
changing reg in insn 499
changing reg in insn 500
changing reg in insn 501
changing reg in insn 502
changing reg in insn 508
changing reg in insn 509
changing reg in insn 510
changing reg in insn 511
changing reg in insn 515
changing reg in insn 516
changing reg in insn 520
changing reg in insn 521
changing reg in insn 522
changing reg in insn 523
changing reg in insn 527
changing reg in insn 528
changing reg in insn 533
changing reg in insn 536
changing reg in insn 537
changing reg in insn 534
changing reg in insn 535
changing reg in insn 540
changing reg in insn 541
changing reg in insn 538
changing reg in insn 539
changing reg in insn 546
changing reg in insn 547
changing reg in insn 548
changing reg in insn 549
changing reg in insn 553
changing reg in insn 554
changing reg in insn 558
changing reg in insn 559
changing reg in insn 560
changing reg in insn 561
changing reg in insn 565
changing reg in insn 566
changing reg in insn 571
changing reg in insn 574
changing reg in insn 575
changing reg in insn 572
changing reg in insn 573
changing reg in insn 578
changing reg in insn 579
changing reg in insn 576
changing reg in insn 577
changing reg in insn 582
changing reg in insn 583
changing reg in insn 585
changing reg in insn 586
changing reg in insn 589
changing reg in insn 591
changing reg in insn 590
changing reg in insn 591
changing reg in insn 592
changing reg in insn 593
changing reg in insn 595
changing reg in insn 596
changing reg in insn 599
changing reg in insn 601
changing reg in insn 600
changing reg in insn 601
changing reg in insn 606
changing reg in insn 607
changing reg in insn 609
changing reg in insn 610
changing reg in insn 613
changing reg in insn 615
changing reg in insn 614
changing reg in insn 615
changing reg in insn 616
changing reg in insn 617
changing reg in insn 619
changing reg in insn 620
changing reg in insn 623
changing reg in insn 625
changing reg in insn 624
changing reg in insn 625
changing reg in insn 643
changing reg in insn 644
changing reg in insn 653
changing reg in insn 654
changing reg in insn 661
changing reg in insn 662
changing reg in insn 666
changing reg in insn 667
changing reg in insn 669
changing reg in insn 670
changing reg in insn 675
changing reg in insn 676
changing reg in insn 674
changing reg in insn 677
changing reg in insn 678
changing reg in insn 680
changing reg in insn 681
changing reg in insn 686
changing reg in insn 687
changing reg in insn 685
changing reg in insn 688
changing reg in insn 689
changing reg in insn 691
changing reg in insn 692
changing reg in insn 695
changing reg in insn 696
changing reg in insn 699
changing reg in insn 701
changing reg in insn 700
changing reg in insn 701
changing reg in insn 702
changing reg in insn 703
changing reg in insn 706
changing reg in insn 707
changing reg in insn 710
changing reg in insn 711
changing reg in insn 714
changing reg in insn 716
changing reg in insn 715
changing reg in insn 716
changing reg in insn 718
changing reg in insn 719
changing reg in insn 721
changing reg in insn 722
changing reg in insn 725
changing reg in insn 726
changing reg in insn 729
changing reg in insn 731
changing reg in insn 730
changing reg in insn 731
changing reg in insn 733
changing reg in insn 734
changing reg in insn 737
changing reg in insn 738
changing reg in insn 741
changing reg in insn 742
changing reg in insn 745
changing reg in insn 747
changing reg in insn 746
changing reg in insn 747
changing reg in insn 749
changing reg in insn 750
changing reg in insn 752
changing reg in insn 753
changing reg in insn 757
changing reg in insn 758
changing reg in insn 761
changing reg in insn 763
changing reg in insn 762
changing reg in insn 763
changing reg in insn 765
changing reg in insn 766
changing reg in insn 769
changing reg in insn 770
changing reg in insn 774
changing reg in insn 775
changing reg in insn 778
changing reg in insn 780
changing reg in insn 779
changing reg in insn 780
changing reg in insn 782
changing reg in insn 783
changing reg in insn 785
changing reg in insn 786
changing reg in insn 790
changing reg in insn 791
changing reg in insn 794
changing reg in insn 796
changing reg in insn 795
changing reg in insn 796
changing reg in insn 798
changing reg in insn 799
changing reg in insn 802
changing reg in insn 803
changing reg in insn 807
changing reg in insn 808
changing reg in insn 811
changing reg in insn 813
changing reg in insn 812
changing reg in insn 813
changing reg in insn 817
changing reg in insn 818
changing reg in insn 816
changing reg in insn 819
changing reg in insn 820
changing reg in insn 822
changing reg in insn 823
changing reg in insn 826
changing reg in insn 828
changing reg in insn 827
changing reg in insn 828
changing reg in insn 832
changing reg in insn 833
changing reg in insn 836
changing reg in insn 837
changing reg in insn 840
changing reg in insn 842
changing reg in insn 841
changing reg in insn 842
changing reg in insn 843
changing reg in insn 844
changing reg in insn 846
changing reg in insn 847
changing reg in insn 850
changing reg in insn 852
changing reg in insn 851
changing reg in insn 852
changing reg in insn 856
changing reg in insn 857
changing reg in insn 860
changing reg in insn 861
changing reg in insn 864
changing reg in insn 866
changing reg in insn 865
changing reg in insn 866
changing reg in insn 868
changing reg in insn 869
changing reg in insn 871
changing reg in insn 872
changing reg in insn 875
changing reg in insn 877
changing reg in insn 876
changing reg in insn 877
changing reg in insn 881
changing reg in insn 882
changing reg in insn 886
changing reg in insn 887
changing reg in insn 890
changing reg in insn 892
changing reg in insn 891
changing reg in insn 892
changing reg in insn 894
changing reg in insn 895
changing reg in insn 897
changing reg in insn 898
changing reg in insn 901
changing reg in insn 903
changing reg in insn 902
changing reg in insn 903
changing reg in insn 907
changing reg in insn 908
changing reg in insn 912
changing reg in insn 913
changing reg in insn 916
changing reg in insn 918
changing reg in insn 917
changing reg in insn 918
changing reg in insn 922
changing reg in insn 923
changing reg in insn 921
changing reg in insn 925
changing reg in insn 926
changing reg in insn 924
changing reg in insn 925
changing reg in insn 927
changing reg in insn 928
changing reg in insn 934
changing reg in insn 935
changing reg in insn 937
changing reg in insn 938
changing reg in insn 941
changing reg in insn 943
changing reg in insn 942
changing reg in insn 943
changing reg in insn 947
changing reg in insn 948
changing reg in insn 951
changing reg in insn 952
changing reg in insn 955
changing reg in insn 956
changing reg in insn 959
changing reg in insn 961
changing reg in insn 960
changing reg in insn 961
changing reg in insn 962
changing reg in insn 963
changing reg in insn 966
changing reg in insn 967
changing reg in insn 970
changing reg in insn 971
changing reg in insn 974
changing reg in insn 976
changing reg in insn 975
changing reg in insn 976
changing reg in insn 978
changing reg in insn 979
changing reg in insn 982
changing reg in insn 983
changing reg in insn 986
changing reg in insn 987
changing reg in insn 990
changing reg in insn 992
changing reg in insn 991
changing reg in insn 992
changing reg in insn 994
changing reg in insn 995
changing reg in insn 998
changing reg in insn 999
changing reg in insn 1002
changing reg in insn 1003
changing reg in insn 1006
changing reg in insn 1008
changing reg in insn 1007
changing reg in insn 1008
changing reg in insn 1010
changing reg in insn 1011
changing reg in insn 1014
changing reg in insn 1015
changing reg in insn 1019
changing reg in insn 1020
changing reg in insn 1023
changing reg in insn 1025
changing reg in insn 1024
changing reg in insn 1025
changing reg in insn 1027
changing reg in insn 1028
changing reg in insn 1031
changing reg in insn 1032
changing reg in insn 1036
changing reg in insn 1037
changing reg in insn 1040
changing reg in insn 1042
changing reg in insn 1041
changing reg in insn 1042
changing reg in insn 1044
changing reg in insn 1045
changing reg in insn 1048
changing reg in insn 1049
changing reg in insn 1053
changing reg in insn 1054
changing reg in insn 1057
changing reg in insn 1059
changing reg in insn 1058
changing reg in insn 1059
changing reg in insn 1061
changing reg in insn 1062
changing reg in insn 1065
changing reg in insn 1066
changing reg in insn 1070
changing reg in insn 1071
changing reg in insn 1074
changing reg in insn 1076
changing reg in insn 1075
changing reg in insn 1076
changing reg in insn 1080
changing reg in insn 1081
changing reg in insn 1079
changing reg in insn 1082
changing reg in insn 1083
changing reg in insn 1086
changing reg in insn 1087
changing reg in insn 1090
changing reg in insn 1091
changing reg in insn 1094
changing reg in insn 1096
changing reg in insn 1095
changing reg in insn 1096
changing reg in insn 1097
changing reg in insn 1098
changing reg in insn 1100
changing reg in insn 1101
changing reg in insn 1104
changing reg in insn 1105
changing reg in insn 1108
changing reg in insn 1110
changing reg in insn 1109
changing reg in insn 1110
changing reg in insn 1112
changing reg in insn 1113
changing reg in insn 1116
changing reg in insn 1117
changing reg in insn 1120
changing reg in insn 1121
changing reg in insn 1124
changing reg in insn 1126
changing reg in insn 1125
changing reg in insn 1126
changing reg in insn 1128
changing reg in insn 1129
changing reg in insn 1131
changing reg in insn 1132
changing reg in insn 1135
changing reg in insn 1136
changing reg in insn 1139
changing reg in insn 1141
changing reg in insn 1140
changing reg in insn 1141
changing reg in insn 1143
changing reg in insn 1144
changing reg in insn 1147
changing reg in insn 1148
changing reg in insn 1152
changing reg in insn 1153
changing reg in insn 1156
changing reg in insn 1158
changing reg in insn 1157
changing reg in insn 1158
changing reg in insn 1160
changing reg in insn 1161
changing reg in insn 1163
changing reg in insn 1164
changing reg in insn 1168
changing reg in insn 1169
changing reg in insn 1172
changing reg in insn 1174
changing reg in insn 1173
changing reg in insn 1174
changing reg in insn 1176
changing reg in insn 1177
changing reg in insn 1180
changing reg in insn 1181
changing reg in insn 1185
changing reg in insn 1186
changing reg in insn 1189
changing reg in insn 1191
changing reg in insn 1190
changing reg in insn 1191
changing reg in insn 1193
changing reg in insn 1194
changing reg in insn 1196
changing reg in insn 1197
changing reg in insn 1201
changing reg in insn 1202
changing reg in insn 1205
changing reg in insn 1207
changing reg in insn 1206
changing reg in insn 1207
changing reg in insn 1211
changing reg in insn 1212
changing reg in insn 1210
changing reg in insn 1213
changing reg in insn 1214
changing reg in insn 1216
changing reg in insn 1217
changing reg in insn 1220
changing reg in insn 1221
changing reg in insn 1224
changing reg in insn 1226
changing reg in insn 1225
changing reg in insn 1226
changing reg in insn 1227
changing reg in insn 1228
changing reg in insn 1230
changing reg in insn 1231
changing reg in insn 1234
changing reg in insn 1235
changing reg in insn 1238
changing reg in insn 1240
changing reg in insn 1239
changing reg in insn 1240
changing reg in insn 1242
changing reg in insn 1243
changing reg in insn 1245
changing reg in insn 1246
changing reg in insn 1250
changing reg in insn 1251
changing reg in insn 1254
changing reg in insn 1256
changing reg in insn 1255
changing reg in insn 1256
changing reg in insn 1258
changing reg in insn 1259
changing reg in insn 1261
changing reg in insn 1262
changing reg in insn 1266
changing reg in insn 1267
changing reg in insn 1270
changing reg in insn 1272
changing reg in insn 1271
changing reg in insn 1272
changing reg in insn 1275
changing reg in insn 1276
changing reg in insn 1279
changing reg in insn 1280
changing reg in insn 1283
changing reg in insn 1284
changing reg in insn 1287
changing reg in insn 1289
changing reg in insn 1288
changing reg in insn 1289
changing reg in insn 1290
changing reg in insn 1291
changing reg in insn 1294
changing reg in insn 1295
changing reg in insn 1298
changing reg in insn 1299
changing reg in insn 1302
changing reg in insn 1304
changing reg in insn 1303
changing reg in insn 1304
changing reg in insn 1306
changing reg in insn 1307
changing reg in insn 1310
changing reg in insn 1311
changing reg in insn 1315
changing reg in insn 1316
changing reg in insn 1319
changing reg in insn 1321
changing reg in insn 1320
changing reg in insn 1321
changing reg in insn 1323
changing reg in insn 1324
changing reg in insn 1327
changing reg in insn 1328
changing reg in insn 1332
changing reg in insn 1333
changing reg in insn 1336
changing reg in insn 1338
changing reg in insn 1337
changing reg in insn 1338
changing reg in insn 1344
changing reg in insn 1345
changing reg in insn 1343
changing reg in insn 1347
changing reg in insn 1348
changing reg in insn 1346
changing reg in insn 1347
changing reg in insn 1350
changing reg in insn 1351
changing reg in insn 1349
changing reg in insn 1350
changing reg in insn 1352
changing reg in insn 1353
changing reg in insn 1356
changing reg in insn 1357
changing reg in insn 1360
changing reg in insn 1361
changing reg in insn 1364
changing reg in insn 1366
changing reg in insn 1365
changing reg in insn 1366
changing reg in insn 1367
changing reg in insn 1368
changing reg in insn 1370
changing reg in insn 1371
changing reg in insn 1374
changing reg in insn 1375
changing reg in insn 1378
changing reg in insn 1380
changing reg in insn 1379
changing reg in insn 1380
changing reg in insn 1381
changing reg in insn 1382
changing reg in insn 1383
changing reg in insn 1384
changing reg in insn 1386
changing reg in insn 1387
changing reg in insn 1390
changing reg in insn 1391
changing reg in insn 1394
changing reg in insn 1396
changing reg in insn 1395
changing reg in insn 1396
changing reg in insn 1397
changing reg in insn 1398
changing reg in insn 1401
changing reg in insn 1402
changing reg in insn 1405
changing reg in insn 1406
changing reg in insn 1409
changing reg in insn 1411
changing reg in insn 1410
changing reg in insn 1411
changing reg in insn 1412
changing reg in insn 1413
changing reg in insn 1414
changing reg in insn 1415
changing reg in insn 1418
changing reg in insn 1419
changing reg in insn 1422
changing reg in insn 1423
changing reg in insn 1426
changing reg in insn 1428
changing reg in insn 1427
changing reg in insn 1428
changing reg in insn 1429
changing reg in insn 1430
changing reg in insn 1432
changing reg in insn 1433
changing reg in insn 1436
changing reg in insn 1437
changing reg in insn 1440
changing reg in insn 1442
changing reg in insn 1441
changing reg in insn 1442
changing reg in insn 1443
changing reg in insn 1444
changing reg in insn 1445
changing reg in insn 1446
changing reg in insn 1448
changing reg in insn 1449
changing reg in insn 1452
changing reg in insn 1453
changing reg in insn 1456
changing reg in insn 1458
changing reg in insn 1457
changing reg in insn 1458
changing reg in insn 1459
changing reg in insn 1460
changing reg in insn 1463
changing reg in insn 1464
changing reg in insn 1467
changing reg in insn 1468
changing reg in insn 1471
changing reg in insn 1473
changing reg in insn 1472
changing reg in insn 1473
changing reg in insn 1474
changing reg in insn 1475
changing reg in insn 1476
changing reg in insn 1477
changing reg in insn 1479
changing reg in insn 1480
changing reg in insn 1483
changing reg in insn 1484
changing reg in insn 1487
changing reg in insn 1489
changing reg in insn 1488
changing reg in insn 1489
changing reg in insn 1490
changing reg in insn 1491
changing reg in insn 1493
changing reg in insn 1494
changing reg in insn 1497
changing reg in insn 1498
changing reg in insn 1501
changing reg in insn 1502
changing reg in insn 1505
changing reg in insn 1506
changing reg in insn 1512
changing reg in insn 1513
changing reg in insn 1515
changing reg in insn 1516
changing reg in insn 1519
changing reg in insn 1520
changing reg in insn 1523
changing reg in insn 1525
changing reg in insn 1524
changing reg in insn 1525
changing reg in insn 1526
changing reg in insn 1527
changing reg in insn 1529
changing reg in insn 1530
changing reg in insn 1533
changing reg in insn 1534
changing reg in insn 1537
changing reg in insn 1538
changing reg in insn 1541
changing reg in insn 1542
changing reg in insn 1551
changing reg in insn 1552
changing reg in insn 1555
changing reg in insn 1556
changing reg in insn 1558
changing reg in insn 1559
changing reg in insn 1562
changing reg in insn 1563
changing reg in insn 1564
changing reg in insn 1565
changing reg in insn 1567
changing reg in insn 1568
changing reg in insn 1572
changing reg in insn 1573
deleting insn with uid = 1677.
deleting insn with uid = 1679.
deleting insn with uid = 1681.
deleting insn with uid = 511.
deleting insn with uid = 513.
deleting insn with uid = 1682.
deleting insn with uid = 516.
deleting insn with uid = 518.
deleting insn with uid = 523.
deleting insn with uid = 525.
deleting insn with uid = 1685.
deleting insn with uid = 528.
deleting insn with uid = 530.
deleting insn with uid = 549.
deleting insn with uid = 551.
deleting insn with uid = 1689.
deleting insn with uid = 554.
deleting insn with uid = 556.
deleting insn with uid = 561.
deleting insn with uid = 563.
deleting insn with uid = 1692.
deleting insn with uid = 566.
deleting insn with uid = 568.
deleting insn with uid = 1340.
deleting insn with uid = 1696.
deleting insn with uid = 1503.
deleting insn with uid = 1699.
deleting insn with uid = 1507.
deleting insn with uid = 1510.
deleting insn with uid = 1539.
deleting insn with uid = 1701.
deleting insn with uid = 1543.
deleting insn with uid = 1546.
deleting insn with uid = 1549.
deleting insn with uid = 1553.
deleting insn with uid = 1702.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 512.
verify found no changes in insn with uid = 517.
verify found no changes in insn with uid = 524.
verify found no changes in insn with uid = 529.
verify found no changes in insn with uid = 550.
verify found no changes in insn with uid = 555.
verify found no changes in insn with uid = 562.
verify found no changes in insn with uid = 567.


calhel

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7]
;;  ref usage 	r0={90d,78u} r1={738d,727u} r2={284d,272u,4e} r3={1d,1u} r4={12d,1u} r5={15d,4u} r6={1d,444u} r7={1d,69u} r8={11d} r9={11d} r10={11d} r11={11d} r12={11d} r13={11d} r14={11d} r15={11d} r17={536d,28u} r18={11d} r19={11d} r20={1d,1u,50e} r21={164d,160u} r22={88d,76u} r23={23d,11u} r24={13d,1u} r25={14d,2u} r26={14d,2u} r27={12d} r28={12d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={12d} r38={12d} r39={11d} r40={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} 
;;    total ref usage 4590{2659d,1877u,54e} in 1478{1467 regular + 11 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 914 915
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 ust+0 S8 A64])
        (reg:DI 5 di [ ust ])) "CALHEL.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 vst+0 S8 A64])
        (reg:DI 4 si [ vst ])) "CALHEL.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 heli+0 S8 A64])
        (reg:DI 1 dx [ heli ])) "CALHEL.f":1 85 {*movdi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 1 dx [orig:914 _856 ] [914])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0e17527630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALHEL.f":93 86 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:915 _857 ] [915])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0e17527630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALHEL.f":93 86 {*movsi_internal}
     (nil))
(insn 10 9 73 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:914 _856 ] [914])) "CALHEL.f":93 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915
;; lr  def 	 17 [flags] 916 933
(code_label 73 10 11 3 5 (nil) [1 uses])
(note 11 73 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:915 _857 ] [915]))) "CALHEL.f":93 11 {*cmpsi_1}
     (nil))
(insn 13 12 14 3 (set (reg:QI 1 dx [933])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHEL.f":93 678 {*setcc_qi}
     (nil))
(insn 14 13 15 3 (set (reg:SI 1 dx [orig:916 _859 ] [916])
        (zero_extend:SI (reg:QI 1 dx [933]))) "CALHEL.f":93 140 {*zero_extendqisi2}
     (nil))
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:916 _859 ] [916])
            (const_int 0 [0]))) "CALHEL.f":93 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1643)
            (pc))) "CALHEL.f":93 682 {*jcc}
     (nil)
 -> 1643)
;;  succ:       48
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 67 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALHEL.f":94 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 917 934
(code_label 67 18 19 5 4 (nil) [1 uses])
(note 19 67 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALHEL.f":94 11 {*cmpsi_1}
     (nil))
(insn 21 20 22 5 (set (reg:QI 1 dx [934])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHEL.f":94 678 {*setcc_qi}
     (nil))
(insn 22 21 23 5 (set (reg:SI 1 dx [orig:917 _861 ] [917])
        (zero_extend:SI (reg:QI 1 dx [934]))) "CALHEL.f":94 140 {*zero_extendqisi2}
     (nil))
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:917 _861 ] [917])
            (const_int 0 [0]))) "CALHEL.f":94 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1646)
            (pc))) "CALHEL.f":94 682 {*jcc}
     (nil)
 -> 1646)
;;  succ:       49
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 49, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg:SI 1 dx [935])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":95 86 {*movsi_internal}
     (nil))
(insn 27 26 28 6 (set (reg:DI 1 dx [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 1 dx [935]))) "CALHEL.f":95 149 {*extendsidi2_rex64}
     (nil))
(insn 28 27 29 6 (parallel [
            (set (reg:DI 2 cx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 1 dx [orig:87 _1 ] [87])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":95 349 {*muldi3_1}
     (nil))
(insn 29 28 30 6 (set (reg:SI 1 dx [936])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":95 86 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 1 dx [936]))) "CALHEL.f":95 149 {*extendsidi2_rex64}
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg:DI 1 dx [orig:90 _4 ] [90])
                (plus:DI (reg:DI 1 dx [orig:89 _3 ] [89])
                    (reg:DI 2 cx [orig:88 _2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":95 222 {*adddi_1}
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg:DI 2 cx [orig:91 _5 ] [91])
                (plus:DI (reg:DI 1 dx [orig:90 _4 ] [90])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":95 222 {*adddi_1}
     (nil))
(insn 33 32 34 6 (set (reg/f:DI 1 dx [937])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 ust+0 S8 A64])) "CALHEL.f":95 85 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:SF 21 xmm0 [938])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALHEL.f":95 131 {*movsf_internal}
     (nil))
(insn 35 34 36 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:91 _5 ] [91])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [937])) [2 *ust_862(D) S4 A32])
        (reg:SF 21 xmm0 [938])) "CALHEL.f":95 131 {*movsf_internal}
     (nil))
(insn 36 35 37 6 (set (reg:SI 1 dx [939])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":96 86 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:DI 1 dx [orig:92 _6 ] [92])
        (sign_extend:DI (reg:SI 1 dx [939]))) "CALHEL.f":96 149 {*extendsidi2_rex64}
     (nil))
(insn 38 37 39 6 (parallel [
            (set (reg:DI 2 cx [orig:93 _7 ] [93])
                (mult:DI (reg:DI 1 dx [orig:92 _6 ] [92])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":96 349 {*muldi3_1}
     (nil))
(insn 39 38 40 6 (set (reg:SI 1 dx [940])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":96 86 {*movsi_internal}
     (nil))
(insn 40 39 41 6 (set (reg:DI 1 dx [orig:94 _8 ] [94])
        (sign_extend:DI (reg:SI 1 dx [940]))) "CALHEL.f":96 149 {*extendsidi2_rex64}
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg:DI 1 dx [orig:95 _9 ] [95])
                (plus:DI (reg:DI 1 dx [orig:94 _8 ] [94])
                    (reg:DI 2 cx [orig:93 _7 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":96 222 {*adddi_1}
     (nil))
(insn 42 41 43 6 (parallel [
            (set (reg:DI 2 cx [orig:96 _10 ] [96])
                (plus:DI (reg:DI 1 dx [orig:95 _9 ] [95])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":96 222 {*adddi_1}
     (nil))
(insn 43 42 44 6 (set (reg/f:DI 1 dx [941])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 vst+0 S8 A64])) "CALHEL.f":96 85 {*movdi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:SF 21 xmm0 [942])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALHEL.f":96 131 {*movsf_internal}
     (nil))
(insn 45 44 46 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:96 _10 ] [96])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [941])) [2 *vst_864(D) S4 A32])
        (reg:SF 21 xmm0 [942])) "CALHEL.f":96 131 {*movsf_internal}
     (nil))
(insn 46 45 47 6 (set (reg:SI 1 dx [943])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":97 86 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg:DI 1 dx [orig:97 _11 ] [97])
        (sign_extend:DI (reg:SI 1 dx [943]))) "CALHEL.f":97 149 {*extendsidi2_rex64}
     (nil))
(insn 48 47 49 6 (parallel [
            (set (reg:DI 2 cx [orig:98 _12 ] [98])
                (mult:DI (reg:DI 1 dx [orig:97 _11 ] [97])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":97 349 {*muldi3_1}
     (nil))
(insn 49 48 50 6 (set (reg:SI 1 dx [944])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":97 86 {*movsi_internal}
     (nil))
(insn 50 49 51 6 (set (reg:DI 1 dx [orig:99 _13 ] [99])
        (sign_extend:DI (reg:SI 1 dx [944]))) "CALHEL.f":97 149 {*extendsidi2_rex64}
     (nil))
(insn 51 50 52 6 (parallel [
            (set (reg:DI 1 dx [orig:100 _14 ] [100])
                (plus:DI (reg:DI 1 dx [orig:99 _13 ] [99])
                    (reg:DI 2 cx [orig:98 _12 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":97 222 {*adddi_1}
     (nil))
(insn 52 51 53 6 (parallel [
            (set (reg:DI 2 cx [orig:101 _15 ] [101])
                (plus:DI (reg:DI 1 dx [orig:100 _14 ] [100])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":97 222 {*adddi_1}
     (nil))
(insn 53 52 54 6 (set (reg/f:DI 1 dx [945])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 heli+0 S8 A64])) "CALHEL.f":97 85 {*movdi_internal}
     (nil))
(insn 54 53 55 6 (set (reg:SF 21 xmm0 [946])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALHEL.f":97 131 {*movsf_internal}
     (nil))
(insn 55 54 56 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:101 _15 ] [101])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [945])) [2 *heli_866(D) S4 A32])
        (reg:SF 21 xmm0 [946])) "CALHEL.f":97 131 {*movsf_internal}
     (nil))
(insn 56 55 57 6 (set (reg:SI 1 dx [947])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":98 86 {*movsi_internal}
     (nil))
(insn 57 56 58 6 (set (reg:DI 1 dx [orig:102 _16 ] [102])
        (sign_extend:DI (reg:SI 1 dx [947]))) "CALHEL.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 58 57 59 6 (parallel [
            (set (reg:DI 2 cx [orig:103 _17 ] [103])
                (mult:DI (reg:DI 1 dx [orig:102 _16 ] [102])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":98 349 {*muldi3_1}
     (nil))
(insn 59 58 60 6 (set (reg:SI 1 dx [948])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":98 86 {*movsi_internal}
     (nil))
(insn 60 59 61 6 (set (reg:DI 1 dx [orig:104 _18 ] [104])
        (sign_extend:DI (reg:SI 1 dx [948]))) "CALHEL.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 61 60 62 6 (parallel [
            (set (reg:DI 1 dx [orig:105 _19 ] [105])
                (plus:DI (reg:DI 1 dx [orig:104 _18 ] [104])
                    (reg:DI 2 cx [orig:103 _17 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":98 222 {*adddi_1}
     (nil))
(insn 62 61 63 6 (parallel [
            (set (reg:DI 2 cx [orig:106 _20 ] [106])
                (plus:DI (reg:DI 1 dx [orig:105 _19 ] [105])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":98 222 {*adddi_1}
     (nil))
(insn 63 62 64 6 (set (reg/f:DI 1 dx [949])
        (symbol_ref:DI ("etot.4160") [flags 0x202]  <var_decl 0x7f0e17538630 etot>)) "CALHEL.f":98 85 {*movdi_internal}
     (nil))
(insn 64 63 65 6 (set (reg:SF 21 xmm0 [950])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALHEL.f":98 131 {*movsf_internal}
     (nil))
(insn 65 64 66 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:106 _20 ] [106])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [949])) [2 etot S4 A32])
        (reg:SF 21 xmm0 [950])) "CALHEL.f":98 131 {*movsf_internal}
     (nil))
(insn 66 65 1614 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":94 221 {*addsi_1}
     (nil))
(jump_insn 1614 66 1615 6 (set (pc)
        (label_ref 67)) "CALHEL.f":94 683 {jump}
     (nil)
 -> 67)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915

(barrier 1615 1614 1646)
;; basic block 49, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1646 1615 1645 49 44 (nil) [1 uses])
(note 1645 1646 1647 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 1647 1645 70 49 (const_int 0 [0]) "CALHEL.f":98 718 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915

;; basic block 7, loop depth 0, maybe hot
;;  prev block 49, next block 48, flags: (RTL, MODIFIED)
;;  pred:       49 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 70 1647 71 7 3 (nil) [0 uses])
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 1616 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":93 221 {*addsi_1}
     (nil))
(jump_insn 1616 72 1617 7 (set (pc)
        (label_ref 73)) "CALHEL.f":93 683 {jump}
     (nil)
 -> 73)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 915

(barrier 1617 1616 1643)
;; basic block 48, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1643 1617 1642 48 43 (nil) [1 uses])
(note 1642 1643 1644 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 1644 1642 76 48 (const_int 0 [0]) "CALHEL.f":94 718 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 48, next block 9, flags: (RTL, MODIFIED)
;;  pred:       48 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 76 1644 77 8 2 (nil) [0 uses])
(note 77 76 78 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 8 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)
                (const_int 118524 [0x1cefc])))) "CALHEL.f":104 85 {*movdi_internal}
     (nil))
(insn 79 78 80 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALHEL.f":104 88 {*movqi_internal}
     (nil))
(call_insn 80 79 81 8 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f0e1750f600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALHEL.f":104 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 81 80 82 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":105 85 {*movdi_internal}
     (nil))
(insn 82 81 83 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALHEL.f":105 88 {*movqi_internal}
     (nil))
(call_insn 83 82 84 8 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f0e1750f600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALHEL.f":105 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 84 83 104 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "CALHEL.f":106 86 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              10 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 918 951
(code_label 104 84 85 9 7 (nil) [1 uses])
(note 85 104 86 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
            (const_int 39 [0x27]))) "CALHEL.f":106 11 {*cmpsi_1}
     (nil))
(insn 87 86 88 9 (set (reg:QI 0 ax [951])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHEL.f":106 678 {*setcc_qi}
     (nil))
(insn 88 87 89 9 (set (reg:SI 0 ax [orig:918 _874 ] [918])
        (zero_extend:SI (reg:QI 0 ax [951]))) "CALHEL.f":106 140 {*zero_extendqisi2}
     (nil))
(insn 89 88 90 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:918 _874 ] [918])
            (const_int 0 [0]))) "CALHEL.f":106 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 90 89 91 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1649)
            (pc))) "CALHEL.f":106 682 {*jcc}
     (nil)
 -> 1649)
;;  succ:       50
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 50, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 107 108 109 110 952 953 954 955
(note 91 90 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 10 (set (reg:SI 0 ax [952])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":107 86 {*movsi_internal}
     (nil))
(insn 93 92 94 10 (set (reg:DI 0 ax [orig:107 _21 ] [107])
        (sign_extend:DI (reg:SI 0 ax [952]))) "CALHEL.f":107 149 {*extendsidi2_rex64}
     (nil))
(insn 94 93 95 10 (parallel [
            (set (reg:DI 0 ax [orig:108 _22 ] [108])
                (plus:DI (reg:DI 0 ax [orig:107 _21 ] [107])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":107 222 {*adddi_1}
     (nil))
(insn 95 94 96 10 (parallel [
            (set (reg:DI 0 ax [orig:109 _23 ] [109])
                (mult:DI (reg:DI 0 ax [orig:108 _22 ] [108])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":107 349 {*muldi3_1}
     (nil))
(insn 96 95 97 10 (parallel [
            (set (reg:DI 0 ax [953])
                (plus:DI (reg:DI 0 ax [orig:109 _23 ] [109])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":107 222 {*adddi_1}
     (nil))
(insn 97 96 98 10 (parallel [
            (set (reg:DI 1 dx [954])
                (ashift:DI (reg:DI 0 ax [953])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":107 551 {*ashldi3_1}
     (nil))
(insn 98 97 99 10 (set (reg:DI 0 ax [955])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":107 85 {*movdi_internal}
     (nil))
(insn 99 98 100 10 (parallel [
            (set (reg/f:DI 0 ax [orig:110 _24 ] [110])
                (plus:DI (reg:DI 0 ax [955])
                    (reg:DI 1 dx [954])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":107 222 {*adddi_1}
     (nil))
(insn 100 99 101 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:110 _24 ] [110])) "CALHEL.f":107 85 {*movdi_internal}
     (nil))
(insn 101 100 102 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALHEL.f":107 88 {*movqi_internal}
     (nil))
(call_insn 102 101 103 10 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f0e1750f600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALHEL.f":107 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 103 102 1618 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":106 221 {*addsi_1}
     (nil))
(jump_insn 1618 103 1619 10 (set (pc)
        (label_ref 104)) "CALHEL.f":106 683 {jump}
     (nil)
 -> 104)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1619 1618 1649)
;; basic block 50, loop depth 0, maybe hot
;;  prev block 10, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1649 1619 1648 50 45 (nil) [1 uses])
(note 1648 1649 1650 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 1650 1648 107 50 (const_int 0 [0]) "CALHEL.f":107 718 {nop}
     (nil))
;;  succ:       11 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 50, next block 12, flags: (RTL, MODIFIED)
;;  pred:       50 [always]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 107 1650 108 11 6 (nil) [0 uses])
(note 108 107 109 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 415 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "CALHEL.f":112 86 {*movsi_internal}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              22 [always] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 919 956
(code_label 415 109 110 12 16 (nil) [1 uses])
(note 110 415 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
            (const_int 38 [0x26]))) "CALHEL.f":112 11 {*cmpsi_1}
     (nil))
(insn 112 111 113 12 (set (reg:QI 0 ax [956])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHEL.f":112 678 {*setcc_qi}
     (nil))
(insn 113 112 114 12 (set (reg:SI 0 ax [orig:919 _878 ] [919])
        (zero_extend:SI (reg:QI 0 ax [956]))) "CALHEL.f":112 140 {*zero_extendqisi2}
     (nil))
(insn 114 113 115 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:919 _878 ] [919])
            (const_int 0 [0]))) "CALHEL.f":112 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 115 114 116 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1652)
            (pc))) "CALHEL.f":112 682 {*jcc}
     (nil)
 -> 1652)
;;  succ:       51
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 920 921
(note 116 115 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 13 (set (reg:SI 1 dx [orig:920 _879 ] [920])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0e17527630 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALHEL.f":113 86 {*movsi_internal}
     (nil))
(insn 118 117 119 13 (set (reg:SI 0 ax [orig:921 _880 ] [921])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0e17527630 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALHEL.f":113 86 {*movsi_internal}
     (nil))
(insn 119 118 409 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:920 _879 ] [920])) "CALHEL.f":113 86 {*movsi_internal}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              21 [always] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921
;; lr  def 	 17 [flags] 922 957
(code_label 409 119 120 14 15 (nil) [1 uses])
(note 120 409 121 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:921 _880 ] [921]))) "CALHEL.f":113 11 {*cmpsi_1}
     (nil))
(insn 122 121 123 14 (set (reg:QI 1 dx [957])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHEL.f":113 678 {*setcc_qi}
     (nil))
(insn 123 122 124 14 (set (reg:SI 1 dx [orig:922 _882 ] [922])
        (zero_extend:SI (reg:QI 1 dx [957]))) "CALHEL.f":113 140 {*zero_extendqisi2}
     (nil))
(insn 124 123 125 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:922 _882 ] [922])
            (const_int 0 [0]))) "CALHEL.f":113 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 125 124 126 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1655)
            (pc))) "CALHEL.f":113 682 {*jcc}
     (nil)
 -> 1655)
;;  succ:       52
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 126 125 127 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 403 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALHEL.f":114 86 {*movsi_internal}
     (nil))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;;              20 [always] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 923 958
(code_label 403 127 128 16 14 (nil) [1 uses])
(note 128 403 129 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALHEL.f":114 11 {*cmpsi_1}
     (nil))
(insn 130 129 131 16 (set (reg:QI 1 dx [958])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHEL.f":114 678 {*setcc_qi}
     (nil))
(insn 131 130 132 16 (set (reg:SI 1 dx [orig:923 _884 ] [923])
        (zero_extend:SI (reg:QI 1 dx [958]))) "CALHEL.f":114 140 {*zero_extendqisi2}
     (nil))
(insn 132 131 133 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:923 _884 ] [923])
            (const_int 0 [0]))) "CALHEL.f":114 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 133 132 134 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1658)
            (pc))) "CALHEL.f":114 682 {*jcc}
     (nil)
 -> 1658)
;;  succ:       53
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 959 960 963 964 965 966 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015
(note 134 133 135 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 17 (set (reg:SI 1 dx [959])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":115 86 {*movsi_internal}
     (nil))
(insn 136 135 137 17 (set (reg:DI 1 dx [orig:111 _25 ] [111])
        (sign_extend:DI (reg:SI 1 dx [959]))) "CALHEL.f":115 149 {*extendsidi2_rex64}
     (nil))
(insn 137 136 138 17 (parallel [
            (set (reg:DI 1 dx [orig:112 _26 ] [112])
                (plus:DI (reg:DI 1 dx [orig:111 _25 ] [111])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":115 222 {*adddi_1}
     (nil))
(insn 138 137 139 17 (parallel [
            (set (reg:DI 1 dx [960])
                (plus:DI (reg:DI 1 dx [orig:112 _26 ] [112])
                    (const_int 498 [0x1f2])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":115 222 {*adddi_1}
     (nil))
(insn 139 138 143 17 (set (reg:SI 2 cx [orig:113 _27 ] [113])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [960])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f0e17520630 indx>)) [1 indx.ive S4 A32])) "CALHEL.f":115 86 {*movsi_internal}
     (nil))
(insn 143 139 144 17 (set (reg:SI 1 dx [964])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":115 86 {*movsi_internal}
     (nil))
(insn 144 143 145 17 (parallel [
            (set (reg:SI 1 dx [963])
                (plus:SI (reg:SI 1 dx [964])
                    (reg:SI 2 cx [orig:113 _27 ] [113])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":115 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:113 _27 ] [113])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 145 144 146 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])
        (reg:SI 1 dx [963])) "CALHEL.f":115 86 {*movsi_internal}
     (nil))
(insn 146 145 147 17 (set (reg:SI 1 dx [965])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":116 86 {*movsi_internal}
     (nil))
(insn 147 146 148 17 (set (reg:DI 1 dx [orig:114 _28 ] [114])
        (sign_extend:DI (reg:SI 1 dx [965]))) "CALHEL.f":116 149 {*extendsidi2_rex64}
     (nil))
(insn 148 147 149 17 (parallel [
            (set (reg:DI 1 dx [orig:115 _29 ] [115])
                (plus:DI (reg:DI 1 dx [orig:114 _28 ] [114])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":116 222 {*adddi_1}
     (nil))
(insn 149 148 150 17 (parallel [
            (set (reg:DI 1 dx [966])
                (plus:DI (reg:DI 1 dx [orig:115 _29 ] [115])
                    (const_int 747 [0x2eb])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":116 222 {*adddi_1}
     (nil))
(insn 150 149 154 17 (set (reg:SI 2 cx [orig:116 _30 ] [116])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [966])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f0e17520630 indx>)) [1 indx.ivw S4 A32])) "CALHEL.f":116 86 {*movsi_internal}
     (nil))
(insn 154 150 155 17 (set (reg:SI 1 dx [970])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":116 86 {*movsi_internal}
     (nil))
(insn 155 154 156 17 (parallel [
            (set (reg:SI 1 dx [969])
                (plus:SI (reg:SI 1 dx [970])
                    (reg:SI 2 cx [orig:116 _30 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":116 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:116 _30 ] [116])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 156 155 157 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])
        (reg:SI 1 dx [969])) "CALHEL.f":116 86 {*movsi_internal}
     (nil))
(insn 157 156 158 17 (set (reg:SI 1 dx [971])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 158 157 159 17 (set (reg:DI 1 dx [orig:117 _31 ] [117])
        (sign_extend:DI (reg:SI 1 dx [971]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 159 158 160 17 (parallel [
            (set (reg:DI 2 cx [orig:118 _32 ] [118])
                (mult:DI (reg:DI 1 dx [orig:117 _31 ] [117])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 349 {*muldi3_1}
     (nil))
(insn 160 159 161 17 (set (reg:SI 1 dx [972])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 161 160 162 17 (set (reg:DI 1 dx [orig:119 _33 ] [119])
        (sign_extend:DI (reg:SI 1 dx [972]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 162 161 163 17 (parallel [
            (set (reg:DI 1 dx [orig:120 _34 ] [120])
                (plus:DI (reg:DI 1 dx [orig:119 _33 ] [119])
                    (reg:DI 2 cx [orig:118 _32 ] [118])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 163 162 164 17 (parallel [
            (set (reg:DI 2 cx [orig:121 _35 ] [121])
                (plus:DI (reg:DI 1 dx [orig:120 _34 ] [120])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 164 163 165 17 (set (reg/f:DI 1 dx [973])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":118 85 {*movdi_internal}
     (nil))
(insn 165 164 166 17 (set (reg:SF 22 xmm1 [orig:122 _36 ] [122])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:121 _35 ] [121])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [973])) [2 vrbls.pd S4 A32])) "CALHEL.f":118 131 {*movsf_internal}
     (nil))
(insn 166 165 167 17 (set (reg:SI 1 dx [974])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 167 166 168 17 (set (reg:DI 1 dx [orig:123 _37 ] [123])
        (sign_extend:DI (reg:SI 1 dx [974]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 168 167 169 17 (parallel [
            (set (reg:DI 2 cx [orig:124 _38 ] [124])
                (mult:DI (reg:DI 1 dx [orig:123 _37 ] [123])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 349 {*muldi3_1}
     (nil))
(insn 169 168 170 17 (set (reg:SI 1 dx [975])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 170 169 171 17 (set (reg:DI 1 dx [orig:125 _39 ] [125])
        (sign_extend:DI (reg:SI 1 dx [975]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 171 170 172 17 (parallel [
            (set (reg:DI 1 dx [orig:126 _40 ] [126])
                (plus:DI (reg:DI 1 dx [orig:125 _39 ] [125])
                    (reg:DI 2 cx [orig:124 _38 ] [124])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 172 171 173 17 (parallel [
            (set (reg:DI 2 cx [orig:127 _41 ] [127])
                (plus:DI (reg:DI 1 dx [orig:126 _40 ] [126])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 173 172 174 17 (set (reg/f:DI 1 dx [976])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":118 85 {*movdi_internal}
     (nil))
(insn 174 173 175 17 (parallel [
            (set (reg:DI 2 cx [977])
                (plus:DI (reg:DI 2 cx [orig:127 _41 ] [127])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 175 174 176 17 (set (reg:SF 21 xmm0 [orig:128 _42 ] [128])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [977])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [976])) [2 vrbls.res S4 A32])) "CALHEL.f":118 131 {*movsf_internal}
     (nil))
(insn 176 175 177 17 (set (reg:SF 22 xmm1 [orig:129 _43 ] [129])
        (mult:SF (reg:SF 22 xmm1 [orig:122 _36 ] [122])
            (reg:SF 21 xmm0 [orig:128 _42 ] [128]))) "CALHEL.f":118 838 {*fop_sf_comm}
     (nil))
(insn 177 176 178 17 (set (reg:SI 1 dx [978])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 178 177 179 17 (set (reg:DI 1 dx [orig:130 _44 ] [130])
        (sign_extend:DI (reg:SI 1 dx [978]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 179 178 180 17 (parallel [
            (set (reg:DI 2 cx [orig:131 _45 ] [131])
                (mult:DI (reg:DI 1 dx [orig:130 _44 ] [130])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 349 {*muldi3_1}
     (nil))
(insn 180 179 181 17 (set (reg:SI 1 dx [979])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 181 180 182 17 (set (reg:DI 1 dx [orig:132 _46 ] [132])
        (sign_extend:DI (reg:SI 1 dx [979]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 182 181 183 17 (parallel [
            (set (reg:DI 1 dx [orig:133 _47 ] [133])
                (plus:DI (reg:DI 1 dx [orig:132 _46 ] [132])
                    (reg:DI 2 cx [orig:131 _45 ] [131])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 183 182 184 17 (parallel [
            (set (reg:DI 2 cx [orig:134 _48 ] [134])
                (plus:DI (reg:DI 1 dx [orig:133 _47 ] [133])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 184 183 185 17 (set (reg/f:DI 1 dx [980])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":118 85 {*movdi_internal}
     (nil))
(insn 185 184 186 17 (set (reg:SF 23 xmm2 [orig:135 _49 ] [135])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:134 _48 ] [134])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [980])) [2 vrbls.pd S4 A32])) "CALHEL.f":118 131 {*movsf_internal}
     (nil))
(insn 186 185 187 17 (set (reg:SI 1 dx [981])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 187 186 188 17 (set (reg:DI 1 dx [orig:136 _50 ] [136])
        (sign_extend:DI (reg:SI 1 dx [981]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 188 187 189 17 (parallel [
            (set (reg:DI 2 cx [orig:137 _51 ] [137])
                (mult:DI (reg:DI 1 dx [orig:136 _50 ] [136])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 349 {*muldi3_1}
     (nil))
(insn 189 188 190 17 (set (reg:SI 1 dx [982])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 190 189 191 17 (set (reg:DI 1 dx [orig:138 _52 ] [138])
        (sign_extend:DI (reg:SI 1 dx [982]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 191 190 192 17 (parallel [
            (set (reg:DI 1 dx [orig:139 _53 ] [139])
                (plus:DI (reg:DI 1 dx [orig:138 _52 ] [138])
                    (reg:DI 2 cx [orig:137 _51 ] [137])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 192 191 193 17 (parallel [
            (set (reg:DI 2 cx [orig:140 _54 ] [140])
                (plus:DI (reg:DI 1 dx [orig:139 _53 ] [139])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 193 192 194 17 (set (reg/f:DI 1 dx [983])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":118 85 {*movdi_internal}
     (nil))
(insn 194 193 195 17 (parallel [
            (set (reg:DI 2 cx [984])
                (plus:DI (reg:DI 2 cx [orig:140 _54 ] [140])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 195 194 196 17 (set (reg:SF 21 xmm0 [orig:141 _55 ] [141])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [984])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [983])) [2 vrbls.res S4 A32])) "CALHEL.f":118 131 {*movsf_internal}
     (nil))
(insn 196 195 197 17 (set (reg:SF 21 xmm0 [orig:142 _56 ] [142])
        (mult:SF (reg:SF 21 xmm0 [orig:141 _55 ] [141])
            (reg:SF 23 xmm2 [orig:135 _49 ] [135]))) "CALHEL.f":118 838 {*fop_sf_comm}
     (nil))
(insn 197 196 198 17 (set (reg:SF 22 xmm1 [orig:143 _57 ] [143])
        (plus:SF (reg:SF 22 xmm1 [orig:129 _43 ] [129])
            (reg:SF 21 xmm0 [orig:142 _56 ] [142]))) "CALHEL.f":118 838 {*fop_sf_comm}
     (nil))
(insn 198 197 199 17 (set (reg:SI 1 dx [985])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 199 198 200 17 (parallel [
            (set (reg:SI 1 dx [orig:144 _58 ] [144])
                (plus:SI (reg:SI 1 dx [985])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 200 199 201 17 (set (reg:DI 1 dx [orig:145 _59 ] [145])
        (sign_extend:DI (reg:SI 1 dx [orig:144 _58 ] [144]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 201 200 202 17 (parallel [
            (set (reg:DI 2 cx [orig:146 _60 ] [146])
                (mult:DI (reg:DI 1 dx [orig:145 _59 ] [145])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 349 {*muldi3_1}
     (nil))
(insn 202 201 203 17 (set (reg:SI 1 dx [986])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 203 202 204 17 (set (reg:DI 1 dx [orig:147 _61 ] [147])
        (sign_extend:DI (reg:SI 1 dx [986]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 204 203 205 17 (parallel [
            (set (reg:DI 1 dx [orig:148 _62 ] [148])
                (plus:DI (reg:DI 1 dx [orig:147 _61 ] [147])
                    (reg:DI 2 cx [orig:146 _60 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 205 204 206 17 (parallel [
            (set (reg:DI 2 cx [orig:149 _63 ] [149])
                (plus:DI (reg:DI 1 dx [orig:148 _62 ] [148])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 206 205 207 17 (set (reg/f:DI 1 dx [987])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":118 85 {*movdi_internal}
     (nil))
(insn 207 206 208 17 (set (reg:SF 23 xmm2 [orig:150 _64 ] [150])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:149 _63 ] [149])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [987])) [2 vrbls.pd S4 A32])) "CALHEL.f":118 131 {*movsf_internal}
     (nil))
(insn 208 207 209 17 (set (reg:SI 1 dx [988])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 209 208 210 17 (parallel [
            (set (reg:SI 1 dx [orig:151 _65 ] [151])
                (plus:SI (reg:SI 1 dx [988])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 210 209 211 17 (set (reg:DI 1 dx [orig:152 _66 ] [152])
        (sign_extend:DI (reg:SI 1 dx [orig:151 _65 ] [151]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 211 210 212 17 (parallel [
            (set (reg:DI 2 cx [orig:153 _67 ] [153])
                (mult:DI (reg:DI 1 dx [orig:152 _66 ] [152])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 349 {*muldi3_1}
     (nil))
(insn 212 211 213 17 (set (reg:SI 1 dx [989])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 213 212 214 17 (set (reg:DI 1 dx [orig:154 _68 ] [154])
        (sign_extend:DI (reg:SI 1 dx [989]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 214 213 215 17 (parallel [
            (set (reg:DI 1 dx [orig:155 _69 ] [155])
                (plus:DI (reg:DI 1 dx [orig:154 _68 ] [154])
                    (reg:DI 2 cx [orig:153 _67 ] [153])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 215 214 216 17 (parallel [
            (set (reg:DI 2 cx [orig:156 _70 ] [156])
                (plus:DI (reg:DI 1 dx [orig:155 _69 ] [155])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 216 215 217 17 (set (reg/f:DI 1 dx [990])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":118 85 {*movdi_internal}
     (nil))
(insn 217 216 218 17 (parallel [
            (set (reg:DI 2 cx [991])
                (plus:DI (reg:DI 2 cx [orig:156 _70 ] [156])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 218 217 219 17 (set (reg:SF 21 xmm0 [orig:157 _71 ] [157])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [991])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [990])) [2 vrbls.res S4 A32])) "CALHEL.f":118 131 {*movsf_internal}
     (nil))
(insn 219 218 220 17 (set (reg:SF 21 xmm0 [orig:158 _72 ] [158])
        (mult:SF (reg:SF 21 xmm0 [orig:157 _71 ] [157])
            (reg:SF 23 xmm2 [orig:150 _64 ] [150]))) "CALHEL.f":118 838 {*fop_sf_comm}
     (nil))
(insn 220 219 221 17 (set (reg:SF 22 xmm1 [orig:159 _73 ] [159])
        (plus:SF (reg:SF 22 xmm1 [orig:143 _57 ] [143])
            (reg:SF 21 xmm0 [orig:158 _72 ] [158]))) "CALHEL.f":118 838 {*fop_sf_comm}
     (nil))
(insn 221 220 222 17 (set (reg:SI 1 dx [992])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 222 221 223 17 (parallel [
            (set (reg:SI 1 dx [orig:160 _74 ] [160])
                (plus:SI (reg:SI 1 dx [992])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 223 222 224 17 (set (reg:DI 1 dx [orig:161 _75 ] [161])
        (sign_extend:DI (reg:SI 1 dx [orig:160 _74 ] [160]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 224 223 225 17 (parallel [
            (set (reg:DI 2 cx [orig:162 _76 ] [162])
                (mult:DI (reg:DI 1 dx [orig:161 _75 ] [161])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 349 {*muldi3_1}
     (nil))
(insn 225 224 226 17 (set (reg:SI 1 dx [993])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 226 225 227 17 (set (reg:DI 1 dx [orig:163 _77 ] [163])
        (sign_extend:DI (reg:SI 1 dx [993]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 227 226 228 17 (parallel [
            (set (reg:DI 1 dx [orig:164 _78 ] [164])
                (plus:DI (reg:DI 1 dx [orig:163 _77 ] [163])
                    (reg:DI 2 cx [orig:162 _76 ] [162])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 228 227 229 17 (parallel [
            (set (reg:DI 2 cx [orig:165 _79 ] [165])
                (plus:DI (reg:DI 1 dx [orig:164 _78 ] [164])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 229 228 230 17 (set (reg/f:DI 1 dx [994])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":118 85 {*movdi_internal}
     (nil))
(insn 230 229 231 17 (set (reg:SF 23 xmm2 [orig:166 _80 ] [166])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:165 _79 ] [165])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [994])) [2 vrbls.pd S4 A32])) "CALHEL.f":118 131 {*movsf_internal}
     (nil))
(insn 231 230 232 17 (set (reg:SI 1 dx [995])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 232 231 233 17 (parallel [
            (set (reg:SI 1 dx [orig:167 _81 ] [167])
                (plus:SI (reg:SI 1 dx [995])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 233 232 234 17 (set (reg:DI 1 dx [orig:168 _82 ] [168])
        (sign_extend:DI (reg:SI 1 dx [orig:167 _81 ] [167]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 234 233 235 17 (parallel [
            (set (reg:DI 2 cx [orig:169 _83 ] [169])
                (mult:DI (reg:DI 1 dx [orig:168 _82 ] [168])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 349 {*muldi3_1}
     (nil))
(insn 235 234 236 17 (set (reg:SI 1 dx [996])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":118 86 {*movsi_internal}
     (nil))
(insn 236 235 237 17 (set (reg:DI 1 dx [orig:170 _84 ] [170])
        (sign_extend:DI (reg:SI 1 dx [996]))) "CALHEL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 237 236 238 17 (parallel [
            (set (reg:DI 1 dx [orig:171 _85 ] [171])
                (plus:DI (reg:DI 1 dx [orig:170 _84 ] [170])
                    (reg:DI 2 cx [orig:169 _83 ] [169])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 238 237 239 17 (parallel [
            (set (reg:DI 2 cx [orig:172 _86 ] [172])
                (plus:DI (reg:DI 1 dx [orig:171 _85 ] [171])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 239 238 240 17 (set (reg/f:DI 1 dx [997])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":118 85 {*movdi_internal}
     (nil))
(insn 240 239 241 17 (parallel [
            (set (reg:DI 2 cx [998])
                (plus:DI (reg:DI 2 cx [orig:172 _86 ] [172])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":118 222 {*adddi_1}
     (nil))
(insn 241 240 242 17 (set (reg:SF 21 xmm0 [orig:173 _87 ] [173])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [998])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [997])) [2 vrbls.res S4 A32])) "CALHEL.f":118 131 {*movsf_internal}
     (nil))
(insn 242 241 243 17 (set (reg:SF 21 xmm0 [orig:174 _88 ] [174])
        (mult:SF (reg:SF 21 xmm0 [orig:173 _87 ] [173])
            (reg:SF 23 xmm2 [orig:166 _80 ] [166]))) "CALHEL.f":118 838 {*fop_sf_comm}
     (nil))
(insn 243 242 244 17 (set (reg:SF 21 xmm0 [orig:175 _89 ] [175])
        (plus:SF (reg:SF 21 xmm0 [orig:174 _88 ] [174])
            (reg:SF 22 xmm1 [orig:159 _73 ] [159]))) "CALHEL.f":118 838 {*fop_sf_comm}
     (nil))
(insn 244 243 245 17 (set (reg:SF 22 xmm1 [orig:176 _90 ] [176])
        (reg:SF 21 xmm0 [orig:175 _89 ] [175])) "CALHEL.f":118 131 {*movsf_internal}
     (nil))
(insn 245 244 246 17 (set (reg:SF 21 xmm0 [1000])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALHEL.f":118 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 246 245 247 17 (set (reg:SF 21 xmm0 [999])
        (mult:SF (reg:SF 21 xmm0 [1000])
            (reg:SF 22 xmm1 [orig:176 _90 ] [176]))) "CALHEL.f":118 838 {*fop_sf_comm}
     (nil))
(insn 247 246 248 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 pdslvk+0 S4 A32])
        (reg:SF 21 xmm0 [999])) "CALHEL.f":118 131 {*movsf_internal}
     (nil))
(insn 248 247 249 17 (set (reg:SI 1 dx [1001])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":119 86 {*movsi_internal}
     (nil))
(insn 249 248 250 17 (set (reg:DI 1 dx [orig:177 _91 ] [177])
        (sign_extend:DI (reg:SI 1 dx [1001]))) "CALHEL.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 250 249 251 17 (parallel [
            (set (reg:DI 2 cx [orig:178 _92 ] [178])
                (mult:DI (reg:DI 1 dx [orig:177 _91 ] [177])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":119 349 {*muldi3_1}
     (nil))
(insn 251 250 252 17 (set (reg:SI 1 dx [1002])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":119 86 {*movsi_internal}
     (nil))
(insn 252 251 253 17 (set (reg:DI 1 dx [orig:179 _93 ] [179])
        (sign_extend:DI (reg:SI 1 dx [1002]))) "CALHEL.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 253 252 254 17 (parallel [
            (set (reg:DI 1 dx [orig:180 _94 ] [180])
                (plus:DI (reg:DI 1 dx [orig:179 _93 ] [179])
                    (reg:DI 2 cx [orig:178 _92 ] [178])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":119 222 {*adddi_1}
     (nil))
(insn 254 253 255 17 (parallel [
            (set (reg:DI 2 cx [orig:181 _95 ] [181])
                (plus:DI (reg:DI 1 dx [orig:180 _94 ] [180])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":119 222 {*adddi_1}
     (nil))
(insn 255 254 256 17 (set (reg/f:DI 1 dx [1003])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0e17520900 loops>)) "CALHEL.f":119 85 {*movdi_internal}
     (nil))
(insn 256 255 257 17 (parallel [
            (set (reg:DI 2 cx [1004])
                (plus:DI (reg:DI 2 cx [orig:181 _95 ] [181])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":119 222 {*adddi_1}
     (nil))
(insn 257 256 258 17 (set (reg:SI 1 dx [orig:182 _96 ] [182])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1004])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1003])) [1 loops.lmv S4 A32])) "CALHEL.f":119 86 {*movsi_internal}
     (nil))
(insn 258 257 259 17 (set (reg:DI 1 dx [orig:183 _97 ] [183])
        (sign_extend:DI (reg:SI 1 dx [orig:182 _96 ] [182]))) "CALHEL.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 259 258 260 17 (parallel [
            (set (reg:DI 2 cx [orig:184 _98 ] [184])
                (plus:DI (reg:DI 1 dx [orig:183 _97 ] [183])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":119 222 {*adddi_1}
     (nil))
(insn 260 259 261 17 (set (reg/f:DI 1 dx [1005])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0e17527ea0 phys>)) "CALHEL.f":119 85 {*movdi_internal}
     (nil))
(insn 261 260 262 17 (parallel [
            (set (reg:DI 2 cx [1006])
                (plus:DI (reg:DI 2 cx [orig:184 _98 ] [184])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":119 222 {*adddi_1}
     (nil))
(insn 262 261 1676 17 (set (reg:SF 21 xmm0 [orig:185 _99 ] [185])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1006])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1005])) [2 phys.aeta S4 A32])) "CALHEL.f":119 131 {*movsf_internal}
     (nil))
(insn 1676 262 263 17 (set (reg:SF 22 xmm1 [orig:185 _99 ] [185])
        (reg:SF 21 xmm0 [orig:185 _99 ] [185])) "CALHEL.f":119 131 {*movsf_internal}
     (nil))
(insn 263 1676 264 17 (set (reg:SF 22 xmm1 [orig:185 _99 ] [185])
        (mult:SF (reg:SF 22 xmm1 [orig:185 _99 ] [185])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 pdslvk+0 S4 A32]))) "CALHEL.f":119 838 {*fop_sf_comm}
     (nil))
(insn 264 263 265 17 (set (reg/f:DI 1 dx [1007])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0e17527ea0 phys>)) "CALHEL.f":1 85 {*movdi_internal}
     (nil))
(insn 265 264 266 17 (set (reg:SF 21 xmm0 [orig:187 _101 ] [187])
        (mem/c:SF (plus:DI (reg/f:DI 1 dx [1007])
                (const_int 4 [0x4])) [2 phys.pt+0 S4 A32])) "CALHEL.f":1 131 {*movsf_internal}
     (nil))
(insn 266 265 267 17 (set (reg:SF 21 xmm0 [1008])
        (plus:SF (reg:SF 21 xmm0 [orig:187 _101 ] [187])
            (reg:SF 22 xmm1 [orig:186 _100 ] [186]))) "CALHEL.f":119 838 {*fop_sf_comm}
     (nil))
(insn 267 266 268 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 psfck+0 S4 A32])
        (reg:SF 21 xmm0 [1008])) "CALHEL.f":119 131 {*movsf_internal}
     (nil))
(insn 268 267 269 17 (set (reg:SI 1 dx [1009])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":126 86 {*movsi_internal}
     (nil))
(insn 269 268 270 17 (set (reg:DI 1 dx [orig:188 _102 ] [188])
        (sign_extend:DI (reg:SI 1 dx [1009]))) "CALHEL.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 270 269 271 17 (parallel [
            (set (reg:DI 2 cx [orig:189 _103 ] [189])
                (plus:DI (reg:DI 1 dx [orig:188 _102 ] [188])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":126 222 {*adddi_1}
     (nil))
(insn 271 270 272 17 (set (reg/f:DI 1 dx [1010])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0e17527ea0 phys>)) "CALHEL.f":126 85 {*movdi_internal}
     (nil))
(insn 272 271 273 17 (parallel [
            (set (reg:DI 2 cx [1011])
                (plus:DI (reg:DI 2 cx [orig:189 _103 ] [189])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":126 222 {*adddi_1}
     (nil))
(insn 273 272 1678 17 (set (reg:SF 21 xmm0 [orig:190 _104 ] [190])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1011])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1010])) [2 phys.aeta S4 A32])) "CALHEL.f":126 131 {*movsf_internal}
     (nil))
(insn 1678 273 274 17 (set (reg:SF 22 xmm1 [orig:190 _104 ] [190])
        (reg:SF 21 xmm0 [orig:190 _104 ] [190])) "CALHEL.f":126 131 {*movsf_internal}
     (nil))
(insn 274 1678 275 17 (set (reg:SF 22 xmm1 [orig:190 _104 ] [190])
        (mult:SF (reg:SF 22 xmm1 [orig:190 _104 ] [190])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 pdslvk+0 S4 A32]))) "CALHEL.f":126 838 {*fop_sf_comm}
     (nil))
(insn 275 274 276 17 (set (reg/f:DI 1 dx [1012])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0e17527ea0 phys>)) "CALHEL.f":1 85 {*movdi_internal}
     (nil))
(insn 276 275 277 17 (set (reg:SF 21 xmm0 [orig:192 _106 ] [192])
        (mem/c:SF (plus:DI (reg/f:DI 1 dx [1012])
                (const_int 4 [0x4])) [2 phys.pt+0 S4 A32])) "CALHEL.f":1 131 {*movsf_internal}
     (nil))
(insn 277 276 278 17 (set (reg:SF 21 xmm0 [1013])
        (plus:SF (reg:SF 21 xmm0 [orig:192 _106 ] [192])
            (reg:SF 22 xmm1 [orig:191 _105 ] [191]))) "CALHEL.f":126 838 {*fop_sf_comm}
     (nil))
(insn 278 277 279 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 pkl+0 S4 A32])
        (reg:SF 21 xmm0 [1013])) "CALHEL.f":126 131 {*movsf_internal}
     (nil))
(insn 279 278 280 17 (set (reg:SF 21 xmm0 [1014])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 psfck+0 S4 A32])) "CALHEL.f":127 131 {*movsf_internal}
     (nil))
(insn 280 279 281 17 (set (reg:SF 22 xmm1 [1015])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALHEL.f":127 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.5e+4 [0x0.ea6p+14])
        (nil)))
(insn 281 280 282 17 (set (reg:SF 21 xmm0 [orig:193 _107 ] [193])
        (minus:SF (reg:SF 21 xmm0 [1014])
            (reg:SF 22 xmm1 [1015]))) "CALHEL.f":127 841 {*fop_sf_1}
     (nil))
(insn 282 281 283 17 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:193 _107 ] [193])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 pkl+0 S4 A32]))) "CALHEL.f":127 53 {*cmpisf}
     (nil))
(jump_insn 283 282 287 17 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 400)
            (pc))) "CALHEL.f":127 682 {*jcc}
     (nil)
 -> 400)
;;  succ:       18 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1016
(note 287 283 288 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 289 18 (set (reg:SF 21 xmm0 [1016])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 pkl+0 S4 A32])) "CALHEL.f":127 131 {*movsf_internal}
     (nil))
(insn 289 288 290 18 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1016])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32]))) "CALHEL.f":127 53 {*cmpisf}
     (nil))
(jump_insn 290 289 294 18 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 400)
            (pc))) "CALHEL.f":127 682 {*jcc}
     (nil)
 -> 400)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053
(note 294 290 295 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 19 (set (reg:SI 1 dx [1017])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":128 86 {*movsi_internal}
     (nil))
(insn 296 295 297 19 (set (reg:DI 1 dx [orig:194 _108 ] [194])
        (sign_extend:DI (reg:SI 1 dx [1017]))) "CALHEL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 297 296 298 19 (parallel [
            (set (reg:DI 2 cx [orig:195 _109 ] [195])
                (mult:DI (reg:DI 1 dx [orig:194 _108 ] [194])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 349 {*muldi3_1}
     (nil))
(insn 298 297 299 19 (set (reg:SI 1 dx [1018])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":128 86 {*movsi_internal}
     (nil))
(insn 299 298 300 19 (set (reg:DI 1 dx [orig:196 _110 ] [196])
        (sign_extend:DI (reg:SI 1 dx [1018]))) "CALHEL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 300 299 301 19 (parallel [
            (set (reg:DI 1 dx [orig:197 _111 ] [197])
                (plus:DI (reg:DI 1 dx [orig:196 _110 ] [196])
                    (reg:DI 2 cx [orig:195 _109 ] [195])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 222 {*adddi_1}
     (nil))
(insn 301 300 302 19 (parallel [
            (set (reg:DI 2 cx [orig:198 _112 ] [198])
                (plus:DI (reg:DI 1 dx [orig:197 _111 ] [197])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 222 {*adddi_1}
     (nil))
(insn 302 301 303 19 (set (reg/f:DI 1 dx [1019])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 ust+0 S8 A64])) "CALHEL.f":128 85 {*movdi_internal}
     (nil))
(insn 303 302 304 19 (set (reg:SF 22 xmm1 [orig:199 _113 ] [199])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:198 _112 ] [198])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1019])) [2 *ust_862(D) S4 A32])) "CALHEL.f":128 131 {*movsf_internal}
     (nil))
(insn 304 303 305 19 (set (reg:SI 1 dx [1020])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":128 86 {*movsi_internal}
     (nil))
(insn 305 304 306 19 (set (reg:DI 1 dx [orig:200 _114 ] [200])
        (sign_extend:DI (reg:SI 1 dx [1020]))) "CALHEL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 306 305 307 19 (parallel [
            (set (reg:DI 2 cx [orig:201 _115 ] [201])
                (mult:DI (reg:DI 1 dx [orig:200 _114 ] [200])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 349 {*muldi3_1}
     (nil))
(insn 307 306 308 19 (set (reg:SI 1 dx [1021])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":128 86 {*movsi_internal}
     (nil))
(insn 308 307 309 19 (set (reg:DI 1 dx [orig:202 _116 ] [202])
        (sign_extend:DI (reg:SI 1 dx [1021]))) "CALHEL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 309 308 310 19 (parallel [
            (set (reg:DI 1 dx [orig:203 _117 ] [203])
                (mult:DI (reg:DI 1 dx [orig:202 _116 ] [202])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 349 {*muldi3_1}
     (nil))
(insn 310 309 311 19 (parallel [
            (set (reg:DI 2 cx [orig:204 _118 ] [204])
                (plus:DI (reg:DI 2 cx [orig:201 _115 ] [201])
                    (reg:DI 1 dx [orig:203 _117 ] [203])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 222 {*adddi_1}
     (nil))
(insn 311 310 312 19 (set (reg:SI 1 dx [1022])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":128 86 {*movsi_internal}
     (nil))
(insn 312 311 313 19 (set (reg:DI 1 dx [orig:205 _119 ] [205])
        (sign_extend:DI (reg:SI 1 dx [1022]))) "CALHEL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 313 312 314 19 (parallel [
            (set (reg:DI 1 dx [orig:206 _120 ] [206])
                (plus:DI (reg:DI 1 dx [orig:205 _119 ] [205])
                    (reg:DI 2 cx [orig:204 _118 ] [204])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 222 {*adddi_1}
     (nil))
(insn 314 313 315 19 (parallel [
            (set (reg:DI 2 cx [orig:207 _121 ] [207])
                (plus:DI (reg:DI 1 dx [orig:206 _120 ] [206])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 222 {*adddi_1}
     (nil))
(insn 315 314 316 19 (set (reg/f:DI 1 dx [1023])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":128 85 {*movdi_internal}
     (nil))
(insn 316 315 317 19 (parallel [
            (set (reg:DI 2 cx [1024])
                (plus:DI (reg:DI 2 cx [orig:207 _121 ] [207])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 222 {*adddi_1}
     (nil))
(insn 317 316 318 19 (set (reg:SF 23 xmm2 [orig:208 _122 ] [208])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1024])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1023])) [2 vrbls.u S4 A32])) "CALHEL.f":128 131 {*movsf_internal}
     (nil))
(insn 318 317 319 19 (set (reg:SI 1 dx [1025])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":128 86 {*movsi_internal}
     (nil))
(insn 319 318 320 19 (set (reg:DI 1 dx [orig:209 _123 ] [209])
        (sign_extend:DI (reg:SI 1 dx [1025]))) "CALHEL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 320 319 321 19 (parallel [
            (set (reg:DI 2 cx [orig:210 _124 ] [210])
                (plus:DI (reg:DI 1 dx [orig:209 _123 ] [209])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 222 {*adddi_1}
     (nil))
(insn 321 320 322 19 (set (reg/f:DI 1 dx [1026])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0e17527ea0 phys>)) "CALHEL.f":128 85 {*movdi_internal}
     (nil))
(insn 322 321 323 19 (parallel [
            (set (reg:DI 2 cx [1027])
                (plus:DI (reg:DI 2 cx [orig:210 _124 ] [210])
                    (const_int 21 [0x15])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 222 {*adddi_1}
     (nil))
(insn 323 322 324 19 (set (reg:SF 21 xmm0 [orig:211 _125 ] [211])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1027])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1026])) [2 phys.deta S4 A32])) "CALHEL.f":128 131 {*movsf_internal}
     (nil))
(insn 324 323 325 19 (set (reg:SF 21 xmm0 [orig:212 _126 ] [212])
        (mult:SF (reg:SF 21 xmm0 [orig:211 _125 ] [211])
            (reg:SF 23 xmm2 [orig:208 _122 ] [208]))) "CALHEL.f":128 838 {*fop_sf_comm}
     (nil))
(insn 325 324 326 19 (set (reg:SI 1 dx [1028])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":128 86 {*movsi_internal}
     (nil))
(insn 326 325 327 19 (set (reg:DI 1 dx [orig:213 _127 ] [213])
        (sign_extend:DI (reg:SI 1 dx [1028]))) "CALHEL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 327 326 328 19 (parallel [
            (set (reg:DI 2 cx [orig:214 _128 ] [214])
                (mult:DI (reg:DI 1 dx [orig:213 _127 ] [213])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 349 {*muldi3_1}
     (nil))
(insn 328 327 329 19 (set (reg:SI 1 dx [1029])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":128 86 {*movsi_internal}
     (nil))
(insn 329 328 330 19 (set (reg:DI 1 dx [orig:215 _129 ] [215])
        (sign_extend:DI (reg:SI 1 dx [1029]))) "CALHEL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 330 329 331 19 (parallel [
            (set (reg:DI 1 dx [orig:216 _130 ] [216])
                (plus:DI (reg:DI 1 dx [orig:215 _129 ] [215])
                    (reg:DI 2 cx [orig:214 _128 ] [214])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 222 {*adddi_1}
     (nil))
(insn 331 330 332 19 (parallel [
            (set (reg:DI 2 cx [orig:217 _131 ] [217])
                (plus:DI (reg:DI 1 dx [orig:216 _130 ] [216])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":128 222 {*adddi_1}
     (nil))
(insn 332 331 333 19 (set (reg:SF 21 xmm0 [orig:218 _132 ] [218])
        (plus:SF (reg:SF 21 xmm0 [orig:212 _126 ] [212])
            (reg:SF 22 xmm1 [orig:199 _113 ] [199]))) "CALHEL.f":128 838 {*fop_sf_comm}
     (nil))
(insn 333 332 334 19 (set (reg/f:DI 1 dx [1030])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 ust+0 S8 A64])) "CALHEL.f":128 85 {*movdi_internal}
     (nil))
(insn 334 333 335 19 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:217 _131 ] [217])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1030])) [2 *ust_862(D) S4 A32])
        (reg:SF 21 xmm0 [orig:218 _132 ] [218])) "CALHEL.f":128 131 {*movsf_internal}
     (nil))
(insn 335 334 336 19 (set (reg:SI 1 dx [1031])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":129 86 {*movsi_internal}
     (nil))
(insn 336 335 337 19 (set (reg:DI 1 dx [orig:219 _133 ] [219])
        (sign_extend:DI (reg:SI 1 dx [1031]))) "CALHEL.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 337 336 338 19 (parallel [
            (set (reg:DI 2 cx [orig:220 _134 ] [220])
                (mult:DI (reg:DI 1 dx [orig:219 _133 ] [219])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 349 {*muldi3_1}
     (nil))
(insn 338 337 339 19 (set (reg:SI 1 dx [1032])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":129 86 {*movsi_internal}
     (nil))
(insn 339 338 340 19 (set (reg:DI 1 dx [orig:221 _135 ] [221])
        (sign_extend:DI (reg:SI 1 dx [1032]))) "CALHEL.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 340 339 341 19 (parallel [
            (set (reg:DI 1 dx [orig:222 _136 ] [222])
                (plus:DI (reg:DI 1 dx [orig:221 _135 ] [221])
                    (reg:DI 2 cx [orig:220 _134 ] [220])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 222 {*adddi_1}
     (nil))
(insn 341 340 342 19 (parallel [
            (set (reg:DI 2 cx [orig:223 _137 ] [223])
                (plus:DI (reg:DI 1 dx [orig:222 _136 ] [222])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 222 {*adddi_1}
     (nil))
(insn 342 341 343 19 (set (reg/f:DI 1 dx [1033])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 vst+0 S8 A64])) "CALHEL.f":129 85 {*movdi_internal}
     (nil))
(insn 343 342 344 19 (set (reg:SF 22 xmm1 [orig:224 _138 ] [224])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:223 _137 ] [223])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1033])) [2 *vst_864(D) S4 A32])) "CALHEL.f":129 131 {*movsf_internal}
     (nil))
(insn 344 343 345 19 (set (reg:SI 1 dx [1034])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":129 86 {*movsi_internal}
     (nil))
(insn 345 344 346 19 (set (reg:DI 1 dx [orig:225 _139 ] [225])
        (sign_extend:DI (reg:SI 1 dx [1034]))) "CALHEL.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 346 345 347 19 (parallel [
            (set (reg:DI 2 cx [orig:226 _140 ] [226])
                (mult:DI (reg:DI 1 dx [orig:225 _139 ] [225])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 349 {*muldi3_1}
     (nil))
(insn 347 346 348 19 (set (reg:SI 1 dx [1035])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":129 86 {*movsi_internal}
     (nil))
(insn 348 347 349 19 (set (reg:DI 1 dx [orig:227 _141 ] [227])
        (sign_extend:DI (reg:SI 1 dx [1035]))) "CALHEL.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 349 348 350 19 (parallel [
            (set (reg:DI 1 dx [orig:228 _142 ] [228])
                (mult:DI (reg:DI 1 dx [orig:227 _141 ] [227])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 349 {*muldi3_1}
     (nil))
(insn 350 349 351 19 (parallel [
            (set (reg:DI 2 cx [orig:229 _143 ] [229])
                (plus:DI (reg:DI 2 cx [orig:226 _140 ] [226])
                    (reg:DI 1 dx [orig:228 _142 ] [228])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 222 {*adddi_1}
     (nil))
(insn 351 350 352 19 (set (reg:SI 1 dx [1036])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":129 86 {*movsi_internal}
     (nil))
(insn 352 351 353 19 (set (reg:DI 1 dx [orig:230 _144 ] [230])
        (sign_extend:DI (reg:SI 1 dx [1036]))) "CALHEL.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 353 352 354 19 (parallel [
            (set (reg:DI 1 dx [orig:231 _145 ] [231])
                (plus:DI (reg:DI 1 dx [orig:230 _144 ] [230])
                    (reg:DI 2 cx [orig:229 _143 ] [229])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 222 {*adddi_1}
     (nil))
(insn 354 353 355 19 (parallel [
            (set (reg:DI 2 cx [orig:232 _146 ] [232])
                (plus:DI (reg:DI 1 dx [orig:231 _145 ] [231])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 222 {*adddi_1}
     (nil))
(insn 355 354 356 19 (set (reg/f:DI 1 dx [1037])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":129 85 {*movdi_internal}
     (nil))
(insn 356 355 357 19 (parallel [
            (set (reg:DI 2 cx [1038])
                (plus:DI (reg:DI 2 cx [orig:232 _146 ] [232])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 222 {*adddi_1}
     (nil))
(insn 357 356 358 19 (set (reg:SF 23 xmm2 [orig:233 _147 ] [233])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1038])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1037])) [2 vrbls.v S4 A32])) "CALHEL.f":129 131 {*movsf_internal}
     (nil))
(insn 358 357 359 19 (set (reg:SI 1 dx [1039])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":129 86 {*movsi_internal}
     (nil))
(insn 359 358 360 19 (set (reg:DI 1 dx [orig:234 _148 ] [234])
        (sign_extend:DI (reg:SI 1 dx [1039]))) "CALHEL.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 360 359 361 19 (parallel [
            (set (reg:DI 2 cx [orig:235 _149 ] [235])
                (plus:DI (reg:DI 1 dx [orig:234 _148 ] [234])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 222 {*adddi_1}
     (nil))
(insn 361 360 362 19 (set (reg/f:DI 1 dx [1040])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0e17527ea0 phys>)) "CALHEL.f":129 85 {*movdi_internal}
     (nil))
(insn 362 361 363 19 (parallel [
            (set (reg:DI 2 cx [1041])
                (plus:DI (reg:DI 2 cx [orig:235 _149 ] [235])
                    (const_int 21 [0x15])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 222 {*adddi_1}
     (nil))
(insn 363 362 364 19 (set (reg:SF 21 xmm0 [orig:236 _150 ] [236])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1041])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1040])) [2 phys.deta S4 A32])) "CALHEL.f":129 131 {*movsf_internal}
     (nil))
(insn 364 363 365 19 (set (reg:SF 21 xmm0 [orig:237 _151 ] [237])
        (mult:SF (reg:SF 21 xmm0 [orig:236 _150 ] [236])
            (reg:SF 23 xmm2 [orig:233 _147 ] [233]))) "CALHEL.f":129 838 {*fop_sf_comm}
     (nil))
(insn 365 364 366 19 (set (reg:SI 1 dx [1042])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":129 86 {*movsi_internal}
     (nil))
(insn 366 365 367 19 (set (reg:DI 1 dx [orig:238 _152 ] [238])
        (sign_extend:DI (reg:SI 1 dx [1042]))) "CALHEL.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 367 366 368 19 (parallel [
            (set (reg:DI 2 cx [orig:239 _153 ] [239])
                (mult:DI (reg:DI 1 dx [orig:238 _152 ] [238])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 349 {*muldi3_1}
     (nil))
(insn 368 367 369 19 (set (reg:SI 1 dx [1043])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":129 86 {*movsi_internal}
     (nil))
(insn 369 368 370 19 (set (reg:DI 1 dx [orig:240 _154 ] [240])
        (sign_extend:DI (reg:SI 1 dx [1043]))) "CALHEL.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 370 369 371 19 (parallel [
            (set (reg:DI 1 dx [orig:241 _155 ] [241])
                (plus:DI (reg:DI 1 dx [orig:240 _154 ] [240])
                    (reg:DI 2 cx [orig:239 _153 ] [239])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 222 {*adddi_1}
     (nil))
(insn 371 370 372 19 (parallel [
            (set (reg:DI 2 cx [orig:242 _156 ] [242])
                (plus:DI (reg:DI 1 dx [orig:241 _155 ] [241])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":129 222 {*adddi_1}
     (nil))
(insn 372 371 373 19 (set (reg:SF 21 xmm0 [orig:243 _157 ] [243])
        (plus:SF (reg:SF 21 xmm0 [orig:237 _151 ] [237])
            (reg:SF 22 xmm1 [orig:224 _138 ] [224]))) "CALHEL.f":129 838 {*fop_sf_comm}
     (nil))
(insn 373 372 374 19 (set (reg/f:DI 1 dx [1044])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 vst+0 S8 A64])) "CALHEL.f":129 85 {*movdi_internal}
     (nil))
(insn 374 373 375 19 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:242 _156 ] [242])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1044])) [2 *vst_864(D) S4 A32])
        (reg:SF 21 xmm0 [orig:243 _157 ] [243])) "CALHEL.f":129 131 {*movsf_internal}
     (nil))
(insn 375 374 376 19 (set (reg:SI 1 dx [1045])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":130 86 {*movsi_internal}
     (nil))
(insn 376 375 377 19 (set (reg:DI 1 dx [orig:244 _158 ] [244])
        (sign_extend:DI (reg:SI 1 dx [1045]))) "CALHEL.f":130 149 {*extendsidi2_rex64}
     (nil))
(insn 377 376 378 19 (parallel [
            (set (reg:DI 2 cx [orig:245 _159 ] [245])
                (mult:DI (reg:DI 1 dx [orig:244 _158 ] [244])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":130 349 {*muldi3_1}
     (nil))
(insn 378 377 379 19 (set (reg:SI 1 dx [1046])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":130 86 {*movsi_internal}
     (nil))
(insn 379 378 380 19 (set (reg:DI 1 dx [orig:246 _160 ] [246])
        (sign_extend:DI (reg:SI 1 dx [1046]))) "CALHEL.f":130 149 {*extendsidi2_rex64}
     (nil))
(insn 380 379 381 19 (parallel [
            (set (reg:DI 1 dx [orig:247 _161 ] [247])
                (plus:DI (reg:DI 1 dx [orig:246 _160 ] [246])
                    (reg:DI 2 cx [orig:245 _159 ] [245])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":130 222 {*adddi_1}
     (nil))
(insn 381 380 382 19 (parallel [
            (set (reg:DI 2 cx [orig:248 _162 ] [248])
                (plus:DI (reg:DI 1 dx [orig:247 _161 ] [247])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":130 222 {*adddi_1}
     (nil))
(insn 382 381 383 19 (set (reg/f:DI 1 dx [1047])
        (symbol_ref:DI ("etot.4160") [flags 0x202]  <var_decl 0x7f0e17538630 etot>)) "CALHEL.f":130 85 {*movdi_internal}
     (nil))
(insn 383 382 384 19 (set (reg:SF 22 xmm1 [orig:249 _163 ] [249])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:248 _162 ] [248])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1047])) [2 etot S4 A32])) "CALHEL.f":130 131 {*movsf_internal}
     (nil))
(insn 384 383 385 19 (set (reg:SI 1 dx [1048])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":130 86 {*movsi_internal}
     (nil))
(insn 385 384 386 19 (set (reg:DI 1 dx [orig:250 _164 ] [250])
        (sign_extend:DI (reg:SI 1 dx [1048]))) "CALHEL.f":130 149 {*extendsidi2_rex64}
     (nil))
(insn 386 385 387 19 (parallel [
            (set (reg:DI 2 cx [orig:251 _165 ] [251])
                (plus:DI (reg:DI 1 dx [orig:250 _164 ] [250])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":130 222 {*adddi_1}
     (nil))
(insn 387 386 388 19 (set (reg/f:DI 1 dx [1049])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0e17527ea0 phys>)) "CALHEL.f":130 85 {*movdi_internal}
     (nil))
(insn 388 387 389 19 (parallel [
            (set (reg:DI 2 cx [1050])
                (plus:DI (reg:DI 2 cx [orig:251 _165 ] [251])
                    (const_int 21 [0x15])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":130 222 {*adddi_1}
     (nil))
(insn 389 388 390 19 (set (reg:SF 21 xmm0 [orig:252 _166 ] [252])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1050])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1049])) [2 phys.deta S4 A32])) "CALHEL.f":130 131 {*movsf_internal}
     (nil))
(insn 390 389 391 19 (set (reg:SI 1 dx [1051])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":130 86 {*movsi_internal}
     (nil))
(insn 391 390 392 19 (set (reg:DI 1 dx [orig:253 _167 ] [253])
        (sign_extend:DI (reg:SI 1 dx [1051]))) "CALHEL.f":130 149 {*extendsidi2_rex64}
     (nil))
(insn 392 391 393 19 (parallel [
            (set (reg:DI 2 cx [orig:254 _168 ] [254])
                (mult:DI (reg:DI 1 dx [orig:253 _167 ] [253])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":130 349 {*muldi3_1}
     (nil))
(insn 393 392 394 19 (set (reg:SI 1 dx [1052])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":130 86 {*movsi_internal}
     (nil))
(insn 394 393 395 19 (set (reg:DI 1 dx [orig:255 _169 ] [255])
        (sign_extend:DI (reg:SI 1 dx [1052]))) "CALHEL.f":130 149 {*extendsidi2_rex64}
     (nil))
(insn 395 394 396 19 (parallel [
            (set (reg:DI 1 dx [orig:256 _170 ] [256])
                (plus:DI (reg:DI 1 dx [orig:255 _169 ] [255])
                    (reg:DI 2 cx [orig:254 _168 ] [254])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":130 222 {*adddi_1}
     (nil))
(insn 396 395 397 19 (parallel [
            (set (reg:DI 2 cx [orig:257 _171 ] [257])
                (plus:DI (reg:DI 1 dx [orig:256 _170 ] [256])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":130 222 {*adddi_1}
     (nil))
(insn 397 396 398 19 (set (reg:SF 21 xmm0 [orig:258 _172 ] [258])
        (plus:SF (reg:SF 21 xmm0 [orig:252 _166 ] [252])
            (reg:SF 22 xmm1 [orig:249 _163 ] [249]))) "CALHEL.f":130 838 {*fop_sf_comm}
     (nil))
(insn 398 397 399 19 (set (reg/f:DI 1 dx [1053])
        (symbol_ref:DI ("etot.4160") [flags 0x202]  <var_decl 0x7f0e17538630 etot>)) "CALHEL.f":130 85 {*movdi_internal}
     (nil))
(insn 399 398 400 19 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:257 _171 ] [257])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1053])) [2 etot S4 A32])
        (reg:SF 21 xmm0 [orig:258 _172 ] [258])) "CALHEL.f":130 131 {*movsf_internal}
     (nil))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 53, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              17
;;              18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 400 399 401 20 11 (nil) [2 uses])
(note 401 400 402 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 402 401 1620 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":114 221 {*addsi_1}
     (nil))
(jump_insn 1620 402 1621 20 (set (pc)
        (label_ref 403)) "CALHEL.f":114 683 {jump}
     (nil)
 -> 403)
;;  succ:       16 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921

(barrier 1621 1620 1658)
;; basic block 53, loop depth 0, maybe hot
;;  prev block 20, next block 21, flags: (RTL, MODIFIED)
;;  pred:       16
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1658 1621 1657 53 48 (nil) [1 uses])
(note 1657 1658 1659 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 1659 1657 406 53 (const_int 0 [0]) "CALHEL.f":127 718 {nop}
     (nil))
;;  succ:       21 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921

;; basic block 21, loop depth 0, maybe hot
;;  prev block 53, next block 52, flags: (RTL, MODIFIED)
;;  pred:       53 [always]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 406 1659 407 21 10 (nil) [0 uses])
(note 407 406 408 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 1622 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":113 221 {*addsi_1}
     (nil))
(jump_insn 1622 408 1623 21 (set (pc)
        (label_ref 409)) "CALHEL.f":113 683 {jump}
     (nil)
 -> 409)
;;  succ:       14 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 921

(barrier 1623 1622 1655)
;; basic block 52, loop depth 0, maybe hot
;;  prev block 21, next block 22, flags: (RTL, MODIFIED)
;;  pred:       14
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1655 1623 1654 52 47 (nil) [1 uses])
(note 1654 1655 1656 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 1656 1654 412 52 (const_int 0 [0]) "CALHEL.f":114 718 {nop}
     (nil))
;;  succ:       22 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 52, next block 51, flags: (RTL, MODIFIED)
;;  pred:       52 [always]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 412 1656 413 22 9 (nil) [0 uses])
(note 413 412 414 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 1624 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":112 221 {*addsi_1}
     (nil))
(jump_insn 1624 414 1625 22 (set (pc)
        (label_ref 415)) "CALHEL.f":112 683 {jump}
     (nil)
 -> 415)
;;  succ:       12 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1625 1624 1652)
;; basic block 51, loop depth 0, maybe hot
;;  prev block 22, next block 23, flags: (RTL, MODIFIED)
;;  pred:       12
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1652 1625 1651 51 46 (nil) [1 uses])
(note 1651 1652 1653 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 1653 1651 418 51 (const_int 0 [0]) "CALHEL.f":113 718 {nop}
     (nil))
;;  succ:       23 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 51, next block 24, flags: (RTL, MODIFIED)
;;  pred:       51 [always]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 924 925
(code_label 418 1653 419 23 8 (nil) [0 uses])
(note 419 418 420 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 420 419 421 23 (set (reg:SI 0 ax [orig:924 _896 ] [924])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0e17527630 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALHEL.f":139 86 {*movsi_internal}
     (nil))
(insn 421 420 422 23 (set (reg:SI 3 bx [orig:925 _897 ] [925])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0e17527630 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALHEL.f":139 86 {*movsi_internal}
     (nil))
(insn 422 421 635 23 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:924 _896 ] [924])) "CALHEL.f":139 86 {*movsi_internal}
     (nil))
;;  succ:       24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;;              34 [always] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  def 	 17 [flags] 926 1054
(code_label 635 422 423 24 26 (nil) [1 uses])
(note 423 635 424 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 3 bx [orig:925 _897 ] [925]))) "CALHEL.f":139 11 {*cmpsi_1}
     (nil))
(insn 425 424 426 24 (set (reg:QI 0 ax [1054])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHEL.f":139 678 {*setcc_qi}
     (nil))
(insn 426 425 427 24 (set (reg:SI 0 ax [orig:926 _899 ] [926])
        (zero_extend:SI (reg:QI 0 ax [1054]))) "CALHEL.f":139 140 {*zero_extendqisi2}
     (nil))
(insn 427 426 428 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:926 _899 ] [926])
            (const_int 0 [0]))) "CALHEL.f":139 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 428 427 429 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1661)
            (pc))) "CALHEL.f":139 682 {*jcc}
     (nil)
 -> 1661)
;;  succ:       54
;;              25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 429 428 430 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 629 25 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALHEL.f":140 86 {*movsi_internal}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;;              33 [always] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 927 1055
(code_label 629 430 431 26 25 (nil) [1 uses])
(note 431 629 432 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 432 431 433 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALHEL.f":140 11 {*cmpsi_1}
     (nil))
(insn 433 432 434 26 (set (reg:QI 0 ax [1055])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHEL.f":140 678 {*setcc_qi}
     (nil))
(insn 434 433 435 26 (set (reg:SI 0 ax [orig:927 _901 ] [927])
        (zero_extend:SI (reg:QI 0 ax [1055]))) "CALHEL.f":140 140 {*zero_extendqisi2}
     (nil))
(insn 435 434 436 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:927 _901 ] [927])
            (const_int 0 [0]))) "CALHEL.f":140 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 436 435 437 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1664)
            (pc))) "CALHEL.f":140 682 {*jcc}
     (nil)
 -> 1664)
;;  succ:       55
;;              27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 259 260 261 262 263 264 1056 1057 1058 1059
(note 437 436 438 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 438 437 439 27 (set (reg:SI 0 ax [1056])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":141 86 {*movsi_internal}
     (nil))
(insn 439 438 440 27 (set (reg:DI 0 ax [orig:259 _173 ] [259])
        (sign_extend:DI (reg:SI 0 ax [1056]))) "CALHEL.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 440 439 441 27 (parallel [
            (set (reg:DI 1 dx [orig:260 _174 ] [260])
                (mult:DI (reg:DI 0 ax [orig:259 _173 ] [259])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":141 349 {*muldi3_1}
     (nil))
(insn 441 440 442 27 (set (reg:SI 0 ax [1057])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":141 86 {*movsi_internal}
     (nil))
(insn 442 441 443 27 (set (reg:DI 0 ax [orig:261 _175 ] [261])
        (sign_extend:DI (reg:SI 0 ax [1057]))) "CALHEL.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 443 442 444 27 (parallel [
            (set (reg:DI 0 ax [orig:262 _176 ] [262])
                (plus:DI (reg:DI 0 ax [orig:261 _175 ] [261])
                    (reg:DI 1 dx [orig:260 _174 ] [260])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":141 222 {*adddi_1}
     (nil))
(insn 444 443 445 27 (parallel [
            (set (reg:DI 1 dx [orig:263 _177 ] [263])
                (plus:DI (reg:DI 0 ax [orig:262 _176 ] [262])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":141 222 {*adddi_1}
     (nil))
(insn 445 444 446 27 (set (reg/f:DI 0 ax [1058])
        (symbol_ref:DI ("etot.4160") [flags 0x202]  <var_decl 0x7f0e17538630 etot>)) "CALHEL.f":141 85 {*movdi_internal}
     (nil))
(insn 446 445 447 27 (set (reg:SF 21 xmm0 [orig:264 _178 ] [264])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:263 _177 ] [263])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1058])) [2 etot S4 A32])) "CALHEL.f":141 131 {*movsf_internal}
     (nil))
(insn 447 446 448 27 (set (reg:SF 22 xmm1 [1059])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALHEL.f":141 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 448 447 449 27 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:264 _178 ] [264])
            (reg:SF 22 xmm1 [1059]))) "CALHEL.f":141 53 {*cmpisf}
     (nil))
(jump_insn 449 448 453 27 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1626)
            (pc))) "CALHEL.f":141 682 {*jcc}
     (nil)
 -> 1626)
;;  succ:       28 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077
(note 453 449 454 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 28 (set (reg:SI 0 ax [1060])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":142 86 {*movsi_internal}
     (nil))
(insn 455 454 456 28 (set (reg:DI 0 ax [orig:265 _179 ] [265])
        (sign_extend:DI (reg:SI 0 ax [1060]))) "CALHEL.f":142 149 {*extendsidi2_rex64}
     (nil))
(insn 456 455 457 28 (parallel [
            (set (reg:DI 1 dx [orig:266 _180 ] [266])
                (mult:DI (reg:DI 0 ax [orig:265 _179 ] [265])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":142 349 {*muldi3_1}
     (nil))
(insn 457 456 458 28 (set (reg:SI 0 ax [1061])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":142 86 {*movsi_internal}
     (nil))
(insn 458 457 459 28 (set (reg:DI 0 ax [orig:267 _181 ] [267])
        (sign_extend:DI (reg:SI 0 ax [1061]))) "CALHEL.f":142 149 {*extendsidi2_rex64}
     (nil))
(insn 459 458 460 28 (parallel [
            (set (reg:DI 0 ax [orig:268 _182 ] [268])
                (plus:DI (reg:DI 0 ax [orig:267 _181 ] [267])
                    (reg:DI 1 dx [orig:266 _180 ] [266])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":142 222 {*adddi_1}
     (nil))
(insn 460 459 461 28 (parallel [
            (set (reg:DI 1 dx [orig:269 _183 ] [269])
                (plus:DI (reg:DI 0 ax [orig:268 _182 ] [268])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":142 222 {*adddi_1}
     (nil))
(insn 461 460 462 28 (set (reg/f:DI 0 ax [1062])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 ust+0 S8 A64])) "CALHEL.f":142 85 {*movdi_internal}
     (nil))
(insn 462 461 463 28 (set (reg:SF 21 xmm0 [orig:270 _184 ] [270])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:269 _183 ] [269])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1062])) [2 *ust_862(D) S4 A32])) "CALHEL.f":142 131 {*movsf_internal}
     (nil))
(insn 463 462 464 28 (set (reg:SI 0 ax [1063])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":142 86 {*movsi_internal}
     (nil))
(insn 464 463 465 28 (set (reg:DI 0 ax [orig:271 _185 ] [271])
        (sign_extend:DI (reg:SI 0 ax [1063]))) "CALHEL.f":142 149 {*extendsidi2_rex64}
     (nil))
(insn 465 464 466 28 (parallel [
            (set (reg:DI 1 dx [orig:272 _186 ] [272])
                (mult:DI (reg:DI 0 ax [orig:271 _185 ] [271])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":142 349 {*muldi3_1}
     (nil))
(insn 466 465 467 28 (set (reg:SI 0 ax [1064])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":142 86 {*movsi_internal}
     (nil))
(insn 467 466 468 28 (set (reg:DI 0 ax [orig:273 _187 ] [273])
        (sign_extend:DI (reg:SI 0 ax [1064]))) "CALHEL.f":142 149 {*extendsidi2_rex64}
     (nil))
(insn 468 467 469 28 (parallel [
            (set (reg:DI 0 ax [orig:274 _188 ] [274])
                (plus:DI (reg:DI 0 ax [orig:273 _187 ] [273])
                    (reg:DI 1 dx [orig:272 _186 ] [272])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":142 222 {*adddi_1}
     (nil))
(insn 469 468 470 28 (parallel [
            (set (reg:DI 1 dx [orig:275 _189 ] [275])
                (plus:DI (reg:DI 0 ax [orig:274 _188 ] [274])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":142 222 {*adddi_1}
     (nil))
(insn 470 469 471 28 (set (reg/f:DI 0 ax [1065])
        (symbol_ref:DI ("etot.4160") [flags 0x202]  <var_decl 0x7f0e17538630 etot>)) "CALHEL.f":142 85 {*movdi_internal}
     (nil))
(insn 471 470 472 28 (set (reg:SF 22 xmm1 [orig:276 _190 ] [276])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:275 _189 ] [275])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1065])) [2 etot S4 A32])) "CALHEL.f":142 131 {*movsf_internal}
     (nil))
(insn 472 471 473 28 (set (reg:SF 21 xmm0 [1066])
        (div:SF (reg:SF 21 xmm0 [orig:270 _184 ] [270])
            (reg:SF 22 xmm1 [orig:276 _190 ] [276]))) "CALHEL.f":142 841 {*fop_sf_1}
     (nil))
(insn 473 472 474 28 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 umean+0 S4 A32])
        (reg:SF 21 xmm0 [1066])) "CALHEL.f":142 131 {*movsf_internal}
     (nil))
(insn 474 473 475 28 (set (reg:SI 0 ax [1067])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":143 86 {*movsi_internal}
     (nil))
(insn 475 474 476 28 (set (reg:DI 0 ax [orig:277 _191 ] [277])
        (sign_extend:DI (reg:SI 0 ax [1067]))) "CALHEL.f":143 149 {*extendsidi2_rex64}
     (nil))
(insn 476 475 477 28 (parallel [
            (set (reg:DI 1 dx [orig:278 _192 ] [278])
                (mult:DI (reg:DI 0 ax [orig:277 _191 ] [277])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":143 349 {*muldi3_1}
     (nil))
(insn 477 476 478 28 (set (reg:SI 0 ax [1068])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":143 86 {*movsi_internal}
     (nil))
(insn 478 477 479 28 (set (reg:DI 0 ax [orig:279 _193 ] [279])
        (sign_extend:DI (reg:SI 0 ax [1068]))) "CALHEL.f":143 149 {*extendsidi2_rex64}
     (nil))
(insn 479 478 480 28 (parallel [
            (set (reg:DI 0 ax [orig:280 _194 ] [280])
                (plus:DI (reg:DI 0 ax [orig:279 _193 ] [279])
                    (reg:DI 1 dx [orig:278 _192 ] [278])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":143 222 {*adddi_1}
     (nil))
(insn 480 479 481 28 (parallel [
            (set (reg:DI 1 dx [orig:281 _195 ] [281])
                (plus:DI (reg:DI 0 ax [orig:280 _194 ] [280])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":143 222 {*adddi_1}
     (nil))
(insn 481 480 482 28 (set (reg/f:DI 0 ax [1069])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 vst+0 S8 A64])) "CALHEL.f":143 85 {*movdi_internal}
     (nil))
(insn 482 481 483 28 (set (reg:SF 21 xmm0 [orig:282 _196 ] [282])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:281 _195 ] [281])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1069])) [2 *vst_864(D) S4 A32])) "CALHEL.f":143 131 {*movsf_internal}
     (nil))
(insn 483 482 484 28 (set (reg:SI 0 ax [1070])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":143 86 {*movsi_internal}
     (nil))
(insn 484 483 485 28 (set (reg:DI 0 ax [orig:283 _197 ] [283])
        (sign_extend:DI (reg:SI 0 ax [1070]))) "CALHEL.f":143 149 {*extendsidi2_rex64}
     (nil))
(insn 485 484 486 28 (parallel [
            (set (reg:DI 1 dx [orig:284 _198 ] [284])
                (mult:DI (reg:DI 0 ax [orig:283 _197 ] [283])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":143 349 {*muldi3_1}
     (nil))
(insn 486 485 487 28 (set (reg:SI 0 ax [1071])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":143 86 {*movsi_internal}
     (nil))
(insn 487 486 488 28 (set (reg:DI 0 ax [orig:285 _199 ] [285])
        (sign_extend:DI (reg:SI 0 ax [1071]))) "CALHEL.f":143 149 {*extendsidi2_rex64}
     (nil))
(insn 488 487 489 28 (parallel [
            (set (reg:DI 0 ax [orig:286 _200 ] [286])
                (plus:DI (reg:DI 0 ax [orig:285 _199 ] [285])
                    (reg:DI 1 dx [orig:284 _198 ] [284])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":143 222 {*adddi_1}
     (nil))
(insn 489 488 490 28 (parallel [
            (set (reg:DI 1 dx [orig:287 _201 ] [287])
                (plus:DI (reg:DI 0 ax [orig:286 _200 ] [286])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":143 222 {*adddi_1}
     (nil))
(insn 490 489 491 28 (set (reg/f:DI 0 ax [1072])
        (symbol_ref:DI ("etot.4160") [flags 0x202]  <var_decl 0x7f0e17538630 etot>)) "CALHEL.f":143 85 {*movdi_internal}
     (nil))
(insn 491 490 492 28 (set (reg:SF 22 xmm1 [orig:288 _202 ] [288])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:287 _201 ] [287])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1072])) [2 etot S4 A32])) "CALHEL.f":143 131 {*movsf_internal}
     (nil))
(insn 492 491 493 28 (set (reg:SF 21 xmm0 [1073])
        (div:SF (reg:SF 21 xmm0 [orig:282 _196 ] [282])
            (reg:SF 22 xmm1 [orig:288 _202 ] [288]))) "CALHEL.f":143 841 {*fop_sf_1}
     (nil))
(insn 493 492 494 28 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 vmean+0 S4 A32])
        (reg:SF 21 xmm0 [1073])) "CALHEL.f":143 131 {*movsf_internal}
     (nil))
(insn 494 493 1680 28 (set (reg:SF 21 xmm0 [1074])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 umean+0 S4 A32])) "CALHEL.f":144 131 {*movsf_internal}
     (nil))
(insn 1680 494 495 28 (set (reg:SF 22 xmm1 [1074])
        (reg:SF 21 xmm0 [1074])) "CALHEL.f":144 131 {*movsf_internal}
     (nil))
(insn 495 1680 496 28 (set (reg:SF 22 xmm1 [1074])
        (mult:SF (reg:SF 22 xmm1 [1074])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 umean+0 S4 A32]))) "CALHEL.f":144 838 {*fop_sf_comm}
     (nil))
(insn 496 495 497 28 (set (reg:SF 21 xmm0 [1075])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 vmean+0 S4 A32])) "CALHEL.f":144 131 {*movsf_internal}
     (nil))
(insn 497 496 498 28 (set (reg:SF 21 xmm0 [orig:290 _204 ] [290])
        (mult:SF (reg:SF 21 xmm0 [1075])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 vmean+0 S4 A32]))) "CALHEL.f":144 838 {*fop_sf_comm}
     (nil))
(insn 498 497 499 28 (set (reg:SF 21 xmm0 [orig:291 _205 ] [291])
        (plus:SF (reg:SF 21 xmm0 [orig:290 _204 ] [290])
            (reg:SF 22 xmm1 [orig:289 _203 ] [289]))) "CALHEL.f":144 838 {*fop_sf_comm}
     (nil))
(insn 499 498 500 28 (set (reg:SF 21 xmm0 [1076])
        (sqrt:SF (reg:SF 21 xmm0 [orig:291 _205 ] [291]))) "CALHEL.f":144 872 {*sqrtsf2_sse}
     (nil))
(insn 500 499 501 28 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 stspd+0 S4 A32])
        (reg:SF 21 xmm0 [1076])) "CALHEL.f":144 131 {*movsf_internal}
     (nil))
(insn 501 500 502 28 (set (reg:SF 21 xmm0 [1077])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALHEL.f":148 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.5e+1 [0x0.fp+4])
        (nil)))
(insn 502 501 503 28 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1077])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 stspd+0 S4 A32]))) "CALHEL.f":148 53 {*cmpisf}
     (nil))
(jump_insn 503 502 507 28 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1627)
            (pc))) "CALHEL.f":148 682 {*jcc}
     (nil)
 -> 1627)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 292 293 294 295 296 297 298 299 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090
(note 507 503 508 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 508 507 509 29 (set (reg:SF 21 xmm0 [1078])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALHEL.f":149 131 {*movsf_internal}
     (nil))
(insn 509 508 510 29 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 rot+0 S4 A32])
        (reg:SF 21 xmm0 [1078])) "CALHEL.f":149 131 {*movsf_internal}
     (nil))
(insn 510 509 512 29 (set (reg:SF 21 xmm0 [1079])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 rot+0 S4 A32])) "CALHEL.f":150 131 {*movsf_internal}
     (nil))
(call_insn/u 512 510 514 29 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cosf") [flags 0x41]  <function_decl 0x7f0e17386700 __builtin_cosf>) [0 __builtin_cosf S1 A8])
            (const_int 0 [0]))) "CALHEL.f":150 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 514 512 1683 29 (set (reg:SF 21 xmm0 [orig:292 _206 ] [292])
        (mult:SF (reg:SF 21 xmm0 [orig:292 _206 ] [292])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 umean+0 S4 A32]))) "CALHEL.f":150 838 {*fop_sf_comm}
     (nil))
(insn 1683 514 1711 29 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [10 %sfp+-140 S4 A32])
        (reg:SF 21 xmm0 [orig:292 _206 ] [292])) "CALHEL.f":150 131 {*movsf_internal}
     (nil))
(note 1711 1683 1705 29 NOTE_INSN_DELETED)
(note 1705 1711 515 29 NOTE_INSN_DELETED)
(insn 515 1705 517 29 (set (reg:SF 21 xmm0 [1080])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 rot+0 S4 A32])) "CALHEL.f":150 131 {*movsf_internal}
     (nil))
(call_insn/u 517 515 519 29 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x7f0e17388500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "CALHEL.f":150 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 519 517 1684 29 (set (reg:SF 21 xmm0 [orig:295 _209 ] [295])
        (mult:SF (reg:SF 21 xmm0 [orig:294 _208 ] [294])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 vmean+0 S4 A32]))) "CALHEL.f":150 838 {*fop_sf_comm}
     (nil))
(note 1684 519 1709 29 NOTE_INSN_DELETED)
(note 1709 1684 520 29 NOTE_INSN_DELETED)
(insn 520 1709 521 29 (set (reg:SF 21 xmm0 [1081])
        (plus:SF (reg:SF 21 xmm0 [orig:295 _209 ] [295])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [10 %sfp+-140 S4 A32]))) "CALHEL.f":150 838 {*fop_sf_comm}
     (nil))
(insn 521 520 522 29 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 unew+0 S4 A32])
        (reg:SF 21 xmm0 [1081])) "CALHEL.f":150 131 {*movsf_internal}
     (nil))
(insn 522 521 524 29 (set (reg:SF 21 xmm0 [1082])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 rot+0 S4 A32])) "CALHEL.f":151 131 {*movsf_internal}
     (nil))
(call_insn/u 524 522 526 29 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cosf") [flags 0x41]  <function_decl 0x7f0e17386700 __builtin_cosf>) [0 __builtin_cosf S1 A8])
            (const_int 0 [0]))) "CALHEL.f":151 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 526 524 1686 29 (set (reg:SF 21 xmm0 [orig:296 _210 ] [296])
        (mult:SF (reg:SF 21 xmm0 [orig:296 _210 ] [296])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 vmean+0 S4 A32]))) "CALHEL.f":151 838 {*fop_sf_comm}
     (nil))
(insn 1686 526 1710 29 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [10 %sfp+-140 S4 A32])
        (reg:SF 21 xmm0 [orig:296 _210 ] [296])) "CALHEL.f":151 131 {*movsf_internal}
     (nil))
(note 1710 1686 1704 29 NOTE_INSN_DELETED)
(note 1704 1710 527 29 NOTE_INSN_DELETED)
(insn 527 1704 529 29 (set (reg:SF 21 xmm0 [1083])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 rot+0 S4 A32])) "CALHEL.f":151 131 {*movsf_internal}
     (nil))
(call_insn/u 529 527 531 29 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x7f0e17388500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "CALHEL.f":151 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 531 529 1687 29 (set (reg:SF 21 xmm0 [orig:299 _213 ] [299])
        (mult:SF (reg:SF 21 xmm0 [orig:298 _212 ] [298])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 umean+0 S4 A32]))) "CALHEL.f":151 838 {*fop_sf_comm}
     (nil))
(insn 1687 531 532 29 (set (reg:SF 25 xmm4 [orig:297 _211 ] [297])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [10 %sfp+-140 S4 A32])) "CALHEL.f":151 131 {*movsf_internal}
     (nil))
(insn 532 1687 1688 29 (set (reg:SF 25 xmm4 [orig:297 _211 ] [297])
        (minus:SF (reg:SF 25 xmm4 [orig:297 _211 ] [297])
            (reg:SF 21 xmm0 [orig:299 _213 ] [299]))) "CALHEL.f":151 841 {*fop_sf_1}
     (nil))
(insn 1688 532 533 29 (set (reg:SF 21 xmm0 [1084])
        (reg:SF 25 xmm4 [orig:297 _211 ] [297])) "CALHEL.f":151 131 {*movsf_internal}
     (nil))
(insn 533 1688 534 29 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 vnew+0 S4 A32])
        (reg:SF 21 xmm0 [1084])) "CALHEL.f":151 131 {*movsf_internal}
     (nil))
(insn 534 533 535 29 (set (reg:SF 22 xmm1 [1086])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 unew+0 S4 A32])) "CALHEL.f":152 131 {*movsf_internal}
     (nil))
(insn 535 534 536 29 (set (reg:SF 21 xmm0 [1087])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALHEL.f":152 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 7.5e-1 [0x0.cp+0])
        (nil)))
(insn 536 535 537 29 (set (reg:SF 21 xmm0 [1085])
        (mult:SF (reg:SF 21 xmm0 [1087])
            (reg:SF 22 xmm1 [1086]))) "CALHEL.f":152 838 {*fop_sf_comm}
     (nil))
(insn 537 536 538 29 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 umean+0 S4 A32])
        (reg:SF 21 xmm0 [1085])) "CALHEL.f":152 131 {*movsf_internal}
     (nil))
(insn 538 537 539 29 (set (reg:SF 22 xmm1 [1089])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 vnew+0 S4 A32])) "CALHEL.f":153 131 {*movsf_internal}
     (nil))
(insn 539 538 540 29 (set (reg:SF 21 xmm0 [1090])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALHEL.f":153 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 7.5e-1 [0x0.cp+0])
        (nil)))
(insn 540 539 541 29 (set (reg:SF 21 xmm0 [1088])
        (mult:SF (reg:SF 21 xmm0 [1090])
            (reg:SF 22 xmm1 [1089]))) "CALHEL.f":153 838 {*fop_sf_comm}
     (nil))
(insn 541 540 1628 29 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 vmean+0 S4 A32])
        (reg:SF 21 xmm0 [1088])) "CALHEL.f":153 131 {*movsf_internal}
     (nil))
(jump_insn 1628 541 1629 29 (set (pc)
        (label_ref 580)) 683 {jump}
     (nil)
 -> 580)
;;  succ:       31 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

(barrier 1629 1628 1627)
;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 300 301 302 303 304 305 306 307 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103
(code_label 1627 1629 545 30 42 (nil) [1 uses])
(note 545 1627 546 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 546 545 547 30 (set (reg:SF 21 xmm0 [1091])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALHEL.f":155 131 {*movsf_internal}
     (nil))
(insn 547 546 548 30 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 rot+0 S4 A32])
        (reg:SF 21 xmm0 [1091])) "CALHEL.f":155 131 {*movsf_internal}
     (nil))
(insn 548 547 550 30 (set (reg:SF 21 xmm0 [1092])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 rot+0 S4 A32])) "CALHEL.f":156 131 {*movsf_internal}
     (nil))
(call_insn/u 550 548 552 30 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cosf") [flags 0x41]  <function_decl 0x7f0e17386700 __builtin_cosf>) [0 __builtin_cosf S1 A8])
            (const_int 0 [0]))) "CALHEL.f":156 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 552 550 1690 30 (set (reg:SF 21 xmm0 [orig:300 _214 ] [300])
        (mult:SF (reg:SF 21 xmm0 [orig:300 _214 ] [300])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 umean+0 S4 A32]))) "CALHEL.f":156 838 {*fop_sf_comm}
     (nil))
(insn 1690 552 1713 30 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [10 %sfp+-140 S4 A32])
        (reg:SF 21 xmm0 [orig:300 _214 ] [300])) "CALHEL.f":156 131 {*movsf_internal}
     (nil))
(note 1713 1690 1707 30 NOTE_INSN_DELETED)
(note 1707 1713 553 30 NOTE_INSN_DELETED)
(insn 553 1707 555 30 (set (reg:SF 21 xmm0 [1093])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 rot+0 S4 A32])) "CALHEL.f":156 131 {*movsf_internal}
     (nil))
(call_insn/u 555 553 557 30 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x7f0e17388500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "CALHEL.f":156 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 557 555 1691 30 (set (reg:SF 21 xmm0 [orig:303 _217 ] [303])
        (mult:SF (reg:SF 21 xmm0 [orig:302 _216 ] [302])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 vmean+0 S4 A32]))) "CALHEL.f":156 838 {*fop_sf_comm}
     (nil))
(note 1691 557 1708 30 NOTE_INSN_DELETED)
(note 1708 1691 558 30 NOTE_INSN_DELETED)
(insn 558 1708 559 30 (set (reg:SF 21 xmm0 [1094])
        (plus:SF (reg:SF 21 xmm0 [orig:303 _217 ] [303])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [10 %sfp+-140 S4 A32]))) "CALHEL.f":156 838 {*fop_sf_comm}
     (nil))
(insn 559 558 560 30 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 unew+0 S4 A32])
        (reg:SF 21 xmm0 [1094])) "CALHEL.f":156 131 {*movsf_internal}
     (nil))
(insn 560 559 562 30 (set (reg:SF 21 xmm0 [1095])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 rot+0 S4 A32])) "CALHEL.f":157 131 {*movsf_internal}
     (nil))
(call_insn/u 562 560 564 30 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cosf") [flags 0x41]  <function_decl 0x7f0e17386700 __builtin_cosf>) [0 __builtin_cosf S1 A8])
            (const_int 0 [0]))) "CALHEL.f":157 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 564 562 1693 30 (set (reg:SF 21 xmm0 [orig:304 _218 ] [304])
        (mult:SF (reg:SF 21 xmm0 [orig:304 _218 ] [304])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 vmean+0 S4 A32]))) "CALHEL.f":157 838 {*fop_sf_comm}
     (nil))
(insn 1693 564 1712 30 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [10 %sfp+-140 S4 A32])
        (reg:SF 21 xmm0 [orig:304 _218 ] [304])) "CALHEL.f":157 131 {*movsf_internal}
     (nil))
(note 1712 1693 1706 30 NOTE_INSN_DELETED)
(note 1706 1712 565 30 NOTE_INSN_DELETED)
(insn 565 1706 567 30 (set (reg:SF 21 xmm0 [1096])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 rot+0 S4 A32])) "CALHEL.f":157 131 {*movsf_internal}
     (nil))
(call_insn/u 567 565 569 30 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x7f0e17388500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "CALHEL.f":157 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 569 567 1694 30 (set (reg:SF 21 xmm0 [orig:307 _221 ] [307])
        (mult:SF (reg:SF 21 xmm0 [orig:306 _220 ] [306])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 umean+0 S4 A32]))) "CALHEL.f":157 838 {*fop_sf_comm}
     (nil))
(insn 1694 569 570 30 (set (reg:SF 26 xmm5 [orig:305 _219 ] [305])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [10 %sfp+-140 S4 A32])) "CALHEL.f":157 131 {*movsf_internal}
     (nil))
(insn 570 1694 1695 30 (set (reg:SF 26 xmm5 [orig:305 _219 ] [305])
        (minus:SF (reg:SF 26 xmm5 [orig:305 _219 ] [305])
            (reg:SF 21 xmm0 [orig:307 _221 ] [307]))) "CALHEL.f":157 841 {*fop_sf_1}
     (nil))
(insn 1695 570 571 30 (set (reg:SF 21 xmm0 [1097])
        (reg:SF 26 xmm5 [orig:305 _219 ] [305])) "CALHEL.f":157 131 {*movsf_internal}
     (nil))
(insn 571 1695 572 30 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 vnew+0 S4 A32])
        (reg:SF 21 xmm0 [1097])) "CALHEL.f":157 131 {*movsf_internal}
     (nil))
(insn 572 571 573 30 (set (reg:SF 22 xmm1 [1099])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 unew+0 S4 A32])) "CALHEL.f":158 131 {*movsf_internal}
     (nil))
(insn 573 572 574 30 (set (reg:SF 21 xmm0 [1100])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALHEL.f":158 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 8.00000011920928955078125e-1 [0x0.cccccdp+0])
        (nil)))
(insn 574 573 575 30 (set (reg:SF 21 xmm0 [1098])
        (mult:SF (reg:SF 21 xmm0 [1100])
            (reg:SF 22 xmm1 [1099]))) "CALHEL.f":158 838 {*fop_sf_comm}
     (nil))
(insn 575 574 576 30 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 umean+0 S4 A32])
        (reg:SF 21 xmm0 [1098])) "CALHEL.f":158 131 {*movsf_internal}
     (nil))
(insn 576 575 577 30 (set (reg:SF 22 xmm1 [1102])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 vnew+0 S4 A32])) "CALHEL.f":159 131 {*movsf_internal}
     (nil))
(insn 577 576 578 30 (set (reg:SF 21 xmm0 [1103])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALHEL.f":159 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 8.00000011920928955078125e-1 [0x0.cccccdp+0])
        (nil)))
(insn 578 577 579 30 (set (reg:SF 21 xmm0 [1101])
        (mult:SF (reg:SF 21 xmm0 [1103])
            (reg:SF 22 xmm1 [1102]))) "CALHEL.f":159 838 {*fop_sf_comm}
     (nil))
(insn 579 578 580 30 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 vmean+0 S4 A32])
        (reg:SF 21 xmm0 [1101])) "CALHEL.f":159 131 {*movsf_internal}
     (nil))
;;  succ:       31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;;              29 [always] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 308 309 310 311 312 313 314 315 316 317 1104 1105 1106 1107 1108 1109 1110 1111
(code_label 580 579 581 31 23 (nil) [1 uses])
(note 581 580 582 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 582 581 583 31 (set (reg:SI 0 ax [1104])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":161 86 {*movsi_internal}
     (nil))
(insn 583 582 584 31 (set (reg:DI 0 ax [orig:308 _222 ] [308])
        (sign_extend:DI (reg:SI 0 ax [1104]))) "CALHEL.f":161 149 {*extendsidi2_rex64}
     (nil))
(insn 584 583 585 31 (parallel [
            (set (reg:DI 1 dx [orig:309 _223 ] [309])
                (mult:DI (reg:DI 0 ax [orig:308 _222 ] [308])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":161 349 {*muldi3_1}
     (nil))
(insn 585 584 586 31 (set (reg:SI 0 ax [1105])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":161 86 {*movsi_internal}
     (nil))
(insn 586 585 587 31 (set (reg:DI 0 ax [orig:310 _224 ] [310])
        (sign_extend:DI (reg:SI 0 ax [1105]))) "CALHEL.f":161 149 {*extendsidi2_rex64}
     (nil))
(insn 587 586 588 31 (parallel [
            (set (reg:DI 0 ax [orig:311 _225 ] [311])
                (plus:DI (reg:DI 0 ax [orig:310 _224 ] [310])
                    (reg:DI 1 dx [orig:309 _223 ] [309])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":161 222 {*adddi_1}
     (nil))
(insn 588 587 589 31 (parallel [
            (set (reg:DI 1 dx [orig:312 _226 ] [312])
                (plus:DI (reg:DI 0 ax [orig:311 _225 ] [311])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":161 222 {*adddi_1}
     (nil))
(insn 589 588 590 31 (set (reg/f:DI 0 ax [1106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 ust+0 S8 A64])) "CALHEL.f":161 85 {*movdi_internal}
     (nil))
(insn 590 589 591 31 (set (reg:SF 21 xmm0 [1107])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 umean+0 S4 A32])) "CALHEL.f":161 131 {*movsf_internal}
     (nil))
(insn 591 590 592 31 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:312 _226 ] [312])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1106])) [2 *ust_862(D) S4 A32])
        (reg:SF 21 xmm0 [1107])) "CALHEL.f":161 131 {*movsf_internal}
     (nil))
(insn 592 591 593 31 (set (reg:SI 0 ax [1108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":162 86 {*movsi_internal}
     (nil))
(insn 593 592 594 31 (set (reg:DI 0 ax [orig:313 _227 ] [313])
        (sign_extend:DI (reg:SI 0 ax [1108]))) "CALHEL.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 594 593 595 31 (parallel [
            (set (reg:DI 1 dx [orig:314 _228 ] [314])
                (mult:DI (reg:DI 0 ax [orig:313 _227 ] [313])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":162 349 {*muldi3_1}
     (nil))
(insn 595 594 596 31 (set (reg:SI 0 ax [1109])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":162 86 {*movsi_internal}
     (nil))
(insn 596 595 597 31 (set (reg:DI 0 ax [orig:315 _229 ] [315])
        (sign_extend:DI (reg:SI 0 ax [1109]))) "CALHEL.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 597 596 598 31 (parallel [
            (set (reg:DI 0 ax [orig:316 _230 ] [316])
                (plus:DI (reg:DI 0 ax [orig:315 _229 ] [315])
                    (reg:DI 1 dx [orig:314 _228 ] [314])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":162 222 {*adddi_1}
     (nil))
(insn 598 597 599 31 (parallel [
            (set (reg:DI 1 dx [orig:317 _231 ] [317])
                (plus:DI (reg:DI 0 ax [orig:316 _230 ] [316])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":162 222 {*adddi_1}
     (nil))
(insn 599 598 600 31 (set (reg/f:DI 0 ax [1110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 vst+0 S8 A64])) "CALHEL.f":162 85 {*movdi_internal}
     (nil))
(insn 600 599 601 31 (set (reg:SF 21 xmm0 [1111])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 vmean+0 S4 A32])) "CALHEL.f":162 131 {*movsf_internal}
     (nil))
(insn 601 600 1630 31 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:317 _231 ] [317])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1110])) [2 *vst_864(D) S4 A32])
        (reg:SF 21 xmm0 [1111])) "CALHEL.f":162 131 {*movsf_internal}
     (nil))
(jump_insn 1630 601 1631 31 (set (pc)
        (label_ref 626)) 683 {jump}
     (nil)
 -> 626)
;;  succ:       33 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

(barrier 1631 1630 1626)
;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       27
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 318 319 320 321 322 323 324 325 326 327 1112 1113 1114 1115 1116 1117 1118 1119
(code_label 1626 1631 605 32 41 (nil) [1 uses])
(note 605 1626 606 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 606 605 607 32 (set (reg:SI 0 ax [1112])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":164 86 {*movsi_internal}
     (nil))
(insn 607 606 608 32 (set (reg:DI 0 ax [orig:318 _232 ] [318])
        (sign_extend:DI (reg:SI 0 ax [1112]))) "CALHEL.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 608 607 609 32 (parallel [
            (set (reg:DI 1 dx [orig:319 _233 ] [319])
                (mult:DI (reg:DI 0 ax [orig:318 _232 ] [318])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":164 349 {*muldi3_1}
     (nil))
(insn 609 608 610 32 (set (reg:SI 0 ax [1113])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":164 86 {*movsi_internal}
     (nil))
(insn 610 609 611 32 (set (reg:DI 0 ax [orig:320 _234 ] [320])
        (sign_extend:DI (reg:SI 0 ax [1113]))) "CALHEL.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 611 610 612 32 (parallel [
            (set (reg:DI 0 ax [orig:321 _235 ] [321])
                (plus:DI (reg:DI 0 ax [orig:320 _234 ] [320])
                    (reg:DI 1 dx [orig:319 _233 ] [319])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":164 222 {*adddi_1}
     (nil))
(insn 612 611 613 32 (parallel [
            (set (reg:DI 1 dx [orig:322 _236 ] [322])
                (plus:DI (reg:DI 0 ax [orig:321 _235 ] [321])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":164 222 {*adddi_1}
     (nil))
(insn 613 612 614 32 (set (reg/f:DI 0 ax [1114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 ust+0 S8 A64])) "CALHEL.f":164 85 {*movdi_internal}
     (nil))
(insn 614 613 615 32 (set (reg:SF 21 xmm0 [1115])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALHEL.f":164 131 {*movsf_internal}
     (nil))
(insn 615 614 616 32 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:322 _236 ] [322])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1114])) [2 *ust_862(D) S4 A32])
        (reg:SF 21 xmm0 [1115])) "CALHEL.f":164 131 {*movsf_internal}
     (nil))
(insn 616 615 617 32 (set (reg:SI 0 ax [1116])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":165 86 {*movsi_internal}
     (nil))
(insn 617 616 618 32 (set (reg:DI 0 ax [orig:323 _237 ] [323])
        (sign_extend:DI (reg:SI 0 ax [1116]))) "CALHEL.f":165 149 {*extendsidi2_rex64}
     (nil))
(insn 618 617 619 32 (parallel [
            (set (reg:DI 1 dx [orig:324 _238 ] [324])
                (mult:DI (reg:DI 0 ax [orig:323 _237 ] [323])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":165 349 {*muldi3_1}
     (nil))
(insn 619 618 620 32 (set (reg:SI 0 ax [1117])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":165 86 {*movsi_internal}
     (nil))
(insn 620 619 621 32 (set (reg:DI 0 ax [orig:325 _239 ] [325])
        (sign_extend:DI (reg:SI 0 ax [1117]))) "CALHEL.f":165 149 {*extendsidi2_rex64}
     (nil))
(insn 621 620 622 32 (parallel [
            (set (reg:DI 0 ax [orig:326 _240 ] [326])
                (plus:DI (reg:DI 0 ax [orig:325 _239 ] [325])
                    (reg:DI 1 dx [orig:324 _238 ] [324])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":165 222 {*adddi_1}
     (nil))
(insn 622 621 623 32 (parallel [
            (set (reg:DI 1 dx [orig:327 _241 ] [327])
                (plus:DI (reg:DI 0 ax [orig:326 _240 ] [326])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":165 222 {*adddi_1}
     (nil))
(insn 623 622 624 32 (set (reg/f:DI 0 ax [1118])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 vst+0 S8 A64])) "CALHEL.f":165 85 {*movdi_internal}
     (nil))
(insn 624 623 625 32 (set (reg:SF 21 xmm0 [1119])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALHEL.f":165 131 {*movsf_internal}
     (nil))
(insn 625 624 626 32 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:327 _241 ] [327])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1118])) [2 *vst_864(D) S4 A32])
        (reg:SF 21 xmm0 [1119])) "CALHEL.f":165 131 {*movsf_internal}
     (nil))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 55, flags: (RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;;              31 [always] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 626 625 627 33 24 (nil) [1 uses])
(note 627 626 628 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 628 627 1632 33 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":140 221 {*addsi_1}
     (nil))
(jump_insn 1632 628 1633 33 (set (pc)
        (label_ref 629)) "CALHEL.f":140 683 {jump}
     (nil)
 -> 629)
;;  succ:       26 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

(barrier 1633 1632 1664)
;; basic block 55, loop depth 0, maybe hot
;;  prev block 33, next block 34, flags: (RTL, MODIFIED)
;;  pred:       26
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1664 1633 1663 55 50 (nil) [1 uses])
(note 1663 1664 1665 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 1665 1663 632 55 (const_int 0 [0]) "CALHEL.f":141 718 {nop}
     (nil))
;;  succ:       34 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

;; basic block 34, loop depth 0, maybe hot
;;  prev block 55, next block 54, flags: (RTL, MODIFIED)
;;  pred:       55 [always]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 632 1665 633 34 18 (nil) [0 uses])
(note 633 632 634 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 634 633 1634 34 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":139 221 {*addsi_1}
     (nil))
(jump_insn 1634 634 1635 34 (set (pc)
        (label_ref 635)) "CALHEL.f":139 683 {jump}
     (nil)
 -> 635)
;;  succ:       24 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 925

(barrier 1635 1634 1661)
;; basic block 54, loop depth 0, maybe hot
;;  prev block 34, next block 35, flags: (RTL, MODIFIED)
;;  pred:       24
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1661 1635 1660 54 49 (nil) [1 uses])
(note 1660 1661 1662 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 1662 1660 638 54 (const_int 0 [0]) "CALHEL.f":140 718 {nop}
     (nil))
;;  succ:       35 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, maybe hot
;;  prev block 54, next block 36, flags: (RTL, MODIFIED)
;;  pred:       54 [always]  (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 638 1662 639 35 17 (nil) [0 uses])
(note 639 638 640 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 640 639 1589 35 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
        (const_int 2 [0x2])) "CALHEL.f":175 86 {*movsi_internal}
     (nil))
;;  succ:       36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;;              46 [always] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 928 1120
(code_label 1589 640 641 36 34 (nil) [1 uses])
(note 641 1589 642 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 643 36 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
            (const_int 37 [0x25]))) "CALHEL.f":175 11 {*cmpsi_1}
     (nil))
(insn 643 642 644 36 (set (reg:QI 0 ax [1120])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHEL.f":175 678 {*setcc_qi}
     (nil))
(insn 644 643 645 36 (set (reg:SI 0 ax [orig:928 _922 ] [928])
        (zero_extend:SI (reg:QI 0 ax [1120]))) "CALHEL.f":175 140 {*zero_extendqisi2}
     (nil))
(insn 645 644 646 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:928 _922 ] [928])
            (const_int 0 [0]))) "CALHEL.f":175 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 646 645 647 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1667)
            (pc))) "CALHEL.f":175 682 {*jcc}
     (nil)
 -> 1667)
;;  succ:       56
;;              37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 929 930
(note 647 646 648 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 648 647 649 37 (set (reg:SI 1 dx [orig:929 _923 ] [929])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0e17527630 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALHEL.f":176 86 {*movsi_internal}
     (nil))
(insn 649 648 650 37 (set (reg:SI 0 ax [orig:930 _924 ] [930])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0e17527630 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALHEL.f":176 86 {*movsi_internal}
     (nil))
(insn 650 649 1583 37 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:929 _923 ] [929])) "CALHEL.f":176 86 {*movsi_internal}
     (nil))
;;  succ:       38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;;              45 [always] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930
;; lr  def 	 17 [flags] 931 1121
(code_label 1583 650 651 38 33 (nil) [1 uses])
(note 651 1583 652 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 652 651 653 38 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:930 _924 ] [930]))) "CALHEL.f":176 11 {*cmpsi_1}
     (nil))
(insn 653 652 654 38 (set (reg:QI 1 dx [1121])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHEL.f":176 678 {*setcc_qi}
     (nil))
(insn 654 653 655 38 (set (reg:SI 1 dx [orig:931 _926 ] [931])
        (zero_extend:SI (reg:QI 1 dx [1121]))) "CALHEL.f":176 140 {*zero_extendqisi2}
     (nil))
(insn 655 654 656 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:931 _926 ] [931])
            (const_int 0 [0]))) "CALHEL.f":176 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 656 655 657 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1670)
            (pc))) "CALHEL.f":176 682 {*jcc}
     (nil)
 -> 1670)
;;  succ:       57
;;              39 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930

;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 657 656 658 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 658 657 1577 39 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALHEL.f":177 86 {*movsi_internal}
     (nil))
;;  succ:       40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;;              44 [always] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 932 1122
(code_label 1577 658 659 40 32 (nil) [1 uses])
(note 659 1577 660 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 660 659 661 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALHEL.f":177 11 {*cmpsi_1}
     (nil))
(insn 661 660 662 40 (set (reg:QI 1 dx [1122])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHEL.f":177 678 {*setcc_qi}
     (nil))
(insn 662 661 663 40 (set (reg:SI 1 dx [orig:932 _928 ] [932])
        (zero_extend:SI (reg:QI 1 dx [1122]))) "CALHEL.f":177 140 {*zero_extendqisi2}
     (nil))
(insn 663 662 664 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:932 _928 ] [932])
            (const_int 0 [0]))) "CALHEL.f":177 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 664 663 665 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1673)
            (pc))) "CALHEL.f":177 682 {*jcc}
     (nil)
 -> 1673)
;;  succ:       58
;;              41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 1123 1124 1127 1128 1129 1130 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213
(note 665 664 666 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 666 665 667 41 (set (reg:SI 1 dx [1123])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":178 86 {*movsi_internal}
     (nil))
(insn 667 666 668 41 (set (reg:DI 1 dx [orig:328 _242 ] [328])
        (sign_extend:DI (reg:SI 1 dx [1123]))) "CALHEL.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 668 667 669 41 (parallel [
            (set (reg:DI 1 dx [orig:329 _243 ] [329])
                (plus:DI (reg:DI 1 dx [orig:328 _242 ] [328])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":178 222 {*adddi_1}
     (nil))
(insn 669 668 670 41 (parallel [
            (set (reg:DI 1 dx [1124])
                (plus:DI (reg:DI 1 dx [orig:329 _243 ] [329])
                    (const_int 747 [0x2eb])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":178 222 {*adddi_1}
     (nil))
(insn 670 669 674 41 (set (reg:SI 2 cx [orig:330 _244 ] [330])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1124])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f0e17520630 indx>)) [1 indx.ivw S4 A32])) "CALHEL.f":178 86 {*movsi_internal}
     (nil))
(insn 674 670 675 41 (set (reg:SI 1 dx [1128])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":178 86 {*movsi_internal}
     (nil))
(insn 675 674 676 41 (parallel [
            (set (reg:SI 1 dx [1127])
                (plus:SI (reg:SI 1 dx [1128])
                    (reg:SI 2 cx [orig:330 _244 ] [330])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":178 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:330 _244 ] [330])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 676 675 677 41 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])
        (reg:SI 1 dx [1127])) "CALHEL.f":178 86 {*movsi_internal}
     (nil))
(insn 677 676 678 41 (set (reg:SI 1 dx [1129])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":179 86 {*movsi_internal}
     (nil))
(insn 678 677 679 41 (set (reg:DI 1 dx [orig:331 _245 ] [331])
        (sign_extend:DI (reg:SI 1 dx [1129]))) "CALHEL.f":179 149 {*extendsidi2_rex64}
     (nil))
(insn 679 678 680 41 (parallel [
            (set (reg:DI 1 dx [orig:332 _246 ] [332])
                (plus:DI (reg:DI 1 dx [orig:331 _245 ] [331])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":179 222 {*adddi_1}
     (nil))
(insn 680 679 681 41 (parallel [
            (set (reg:DI 1 dx [1130])
                (plus:DI (reg:DI 1 dx [orig:332 _246 ] [332])
                    (const_int 498 [0x1f2])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":179 222 {*adddi_1}
     (nil))
(insn 681 680 685 41 (set (reg:SI 2 cx [orig:333 _247 ] [333])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1130])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f0e17520630 indx>)) [1 indx.ive S4 A32])) "CALHEL.f":179 86 {*movsi_internal}
     (nil))
(insn 685 681 686 41 (set (reg:SI 1 dx [1134])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":179 86 {*movsi_internal}
     (nil))
(insn 686 685 687 41 (parallel [
            (set (reg:SI 1 dx [1133])
                (plus:SI (reg:SI 1 dx [1134])
                    (reg:SI 2 cx [orig:333 _247 ] [333])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":179 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:333 _247 ] [333])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 687 686 688 41 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])
        (reg:SI 1 dx [1133])) "CALHEL.f":179 86 {*movsi_internal}
     (nil))
(insn 688 687 689 41 (set (reg:SI 1 dx [1135])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 689 688 690 41 (set (reg:DI 1 dx [orig:334 _248 ] [334])
        (sign_extend:DI (reg:SI 1 dx [1135]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 690 689 691 41 (parallel [
            (set (reg:DI 2 cx [orig:335 _249 ] [335])
                (mult:DI (reg:DI 1 dx [orig:334 _248 ] [334])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 691 690 692 41 (set (reg:SI 1 dx [1136])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 692 691 693 41 (set (reg:DI 1 dx [orig:336 _250 ] [336])
        (sign_extend:DI (reg:SI 1 dx [1136]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 693 692 694 41 (parallel [
            (set (reg:DI 1 dx [orig:337 _251 ] [337])
                (mult:DI (reg:DI 1 dx [orig:336 _250 ] [336])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 694 693 695 41 (parallel [
            (set (reg:DI 2 cx [orig:338 _252 ] [338])
                (plus:DI (reg:DI 2 cx [orig:335 _249 ] [335])
                    (reg:DI 1 dx [orig:337 _251 ] [337])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 695 694 696 41 (set (reg:SI 1 dx [1137])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 696 695 697 41 (set (reg:DI 1 dx [orig:339 _253 ] [339])
        (sign_extend:DI (reg:SI 1 dx [1137]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 697 696 698 41 (parallel [
            (set (reg:DI 1 dx [orig:340 _254 ] [340])
                (plus:DI (reg:DI 1 dx [orig:339 _253 ] [339])
                    (reg:DI 2 cx [orig:338 _252 ] [338])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 698 697 699 41 (parallel [
            (set (reg:DI 2 cx [orig:341 _255 ] [341])
                (plus:DI (reg:DI 1 dx [orig:340 _254 ] [340])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 699 698 700 41 (set (reg/f:DI 1 dx [1138])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":183 85 {*movdi_internal}
     (nil))
(insn 700 699 701 41 (parallel [
            (set (reg:DI 2 cx [1139])
                (plus:DI (reg:DI 2 cx [orig:341 _255 ] [341])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 701 700 702 41 (set (reg:SF 22 xmm1 [orig:342 _256 ] [342])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1139])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1138])) [2 extra.zint S4 A32])) "CALHEL.f":183 131 {*movsf_internal}
     (nil))
(insn 702 701 703 41 (set (reg:SI 1 dx [1140])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 703 702 704 41 (parallel [
            (set (reg:SI 1 dx [orig:343 _257 ] [343])
                (plus:SI (reg:SI 1 dx [1140])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 704 703 705 41 (set (reg:DI 1 dx [orig:344 _258 ] [344])
        (sign_extend:DI (reg:SI 1 dx [orig:343 _257 ] [343]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 705 704 706 41 (parallel [
            (set (reg:DI 2 cx [orig:345 _259 ] [345])
                (mult:DI (reg:DI 1 dx [orig:344 _258 ] [344])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 706 705 707 41 (set (reg:SI 1 dx [1141])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 707 706 708 41 (set (reg:DI 1 dx [orig:346 _260 ] [346])
        (sign_extend:DI (reg:SI 1 dx [1141]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 708 707 709 41 (parallel [
            (set (reg:DI 1 dx [orig:347 _261 ] [347])
                (mult:DI (reg:DI 1 dx [orig:346 _260 ] [346])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 709 708 710 41 (parallel [
            (set (reg:DI 2 cx [orig:348 _262 ] [348])
                (plus:DI (reg:DI 2 cx [orig:345 _259 ] [345])
                    (reg:DI 1 dx [orig:347 _261 ] [347])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 710 709 711 41 (set (reg:SI 1 dx [1142])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 711 710 712 41 (set (reg:DI 1 dx [orig:349 _263 ] [349])
        (sign_extend:DI (reg:SI 1 dx [1142]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 712 711 713 41 (parallel [
            (set (reg:DI 1 dx [orig:350 _264 ] [350])
                (plus:DI (reg:DI 1 dx [orig:349 _263 ] [349])
                    (reg:DI 2 cx [orig:348 _262 ] [348])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 713 712 714 41 (parallel [
            (set (reg:DI 2 cx [orig:351 _265 ] [351])
                (plus:DI (reg:DI 1 dx [orig:350 _264 ] [350])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 714 713 715 41 (set (reg/f:DI 1 dx [1143])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":183 85 {*movdi_internal}
     (nil))
(insn 715 714 716 41 (parallel [
            (set (reg:DI 2 cx [1144])
                (plus:DI (reg:DI 2 cx [orig:351 _265 ] [351])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 716 715 717 41 (set (reg:SF 21 xmm0 [orig:352 _266 ] [352])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1144])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1143])) [2 extra.zint S4 A32])) "CALHEL.f":183 131 {*movsf_internal}
     (nil))
(insn 717 716 718 41 (set (reg:SF 22 xmm1 [orig:353 _267 ] [353])
        (plus:SF (reg:SF 22 xmm1 [orig:342 _256 ] [342])
            (reg:SF 21 xmm0 [orig:352 _266 ] [352]))) "CALHEL.f":183 838 {*fop_sf_comm}
     (nil))
(insn 718 717 719 41 (set (reg:SI 1 dx [1145])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 719 718 720 41 (set (reg:DI 1 dx [orig:354 _268 ] [354])
        (sign_extend:DI (reg:SI 1 dx [1145]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 720 719 721 41 (parallel [
            (set (reg:DI 2 cx [orig:355 _269 ] [355])
                (mult:DI (reg:DI 1 dx [orig:354 _268 ] [354])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 721 720 722 41 (set (reg:SI 1 dx [1146])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 722 721 723 41 (set (reg:DI 1 dx [orig:356 _270 ] [356])
        (sign_extend:DI (reg:SI 1 dx [1146]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 723 722 724 41 (parallel [
            (set (reg:DI 1 dx [orig:357 _271 ] [357])
                (mult:DI (reg:DI 1 dx [orig:356 _270 ] [356])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 724 723 725 41 (parallel [
            (set (reg:DI 2 cx [orig:358 _272 ] [358])
                (plus:DI (reg:DI 2 cx [orig:355 _269 ] [355])
                    (reg:DI 1 dx [orig:357 _271 ] [357])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 725 724 726 41 (set (reg:SI 1 dx [1147])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 726 725 727 41 (set (reg:DI 1 dx [orig:359 _273 ] [359])
        (sign_extend:DI (reg:SI 1 dx [1147]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 727 726 728 41 (parallel [
            (set (reg:DI 1 dx [orig:360 _274 ] [360])
                (plus:DI (reg:DI 1 dx [orig:359 _273 ] [359])
                    (reg:DI 2 cx [orig:358 _272 ] [358])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 728 727 729 41 (parallel [
            (set (reg:DI 2 cx [orig:361 _275 ] [361])
                (plus:DI (reg:DI 1 dx [orig:360 _274 ] [360])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 729 728 730 41 (set (reg/f:DI 1 dx [1148])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":183 85 {*movdi_internal}
     (nil))
(insn 730 729 731 41 (parallel [
            (set (reg:DI 2 cx [1149])
                (plus:DI (reg:DI 2 cx [orig:361 _275 ] [361])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 731 730 732 41 (set (reg:SF 21 xmm0 [orig:362 _276 ] [362])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1149])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1148])) [2 extra.zint S4 A32])) "CALHEL.f":183 131 {*movsf_internal}
     (nil))
(insn 732 731 733 41 (set (reg:SF 22 xmm1 [orig:363 _277 ] [363])
        (plus:SF (reg:SF 22 xmm1 [orig:353 _267 ] [353])
            (reg:SF 21 xmm0 [orig:362 _276 ] [362]))) "CALHEL.f":183 838 {*fop_sf_comm}
     (nil))
(insn 733 732 734 41 (set (reg:SI 1 dx [1150])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 734 733 735 41 (parallel [
            (set (reg:SI 1 dx [orig:364 _278 ] [364])
                (plus:SI (reg:SI 1 dx [1150])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 735 734 736 41 (set (reg:DI 1 dx [orig:365 _279 ] [365])
        (sign_extend:DI (reg:SI 1 dx [orig:364 _278 ] [364]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 736 735 737 41 (parallel [
            (set (reg:DI 2 cx [orig:366 _280 ] [366])
                (mult:DI (reg:DI 1 dx [orig:365 _279 ] [365])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 737 736 738 41 (set (reg:SI 1 dx [1151])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 738 737 739 41 (set (reg:DI 1 dx [orig:367 _281 ] [367])
        (sign_extend:DI (reg:SI 1 dx [1151]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 739 738 740 41 (parallel [
            (set (reg:DI 1 dx [orig:368 _282 ] [368])
                (mult:DI (reg:DI 1 dx [orig:367 _281 ] [367])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 740 739 741 41 (parallel [
            (set (reg:DI 2 cx [orig:369 _283 ] [369])
                (plus:DI (reg:DI 2 cx [orig:366 _280 ] [366])
                    (reg:DI 1 dx [orig:368 _282 ] [368])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 741 740 742 41 (set (reg:SI 1 dx [1152])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 742 741 743 41 (set (reg:DI 1 dx [orig:370 _284 ] [370])
        (sign_extend:DI (reg:SI 1 dx [1152]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 743 742 744 41 (parallel [
            (set (reg:DI 1 dx [orig:371 _285 ] [371])
                (plus:DI (reg:DI 1 dx [orig:370 _284 ] [370])
                    (reg:DI 2 cx [orig:369 _283 ] [369])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 744 743 745 41 (parallel [
            (set (reg:DI 2 cx [orig:372 _286 ] [372])
                (plus:DI (reg:DI 1 dx [orig:371 _285 ] [371])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 745 744 746 41 (set (reg/f:DI 1 dx [1153])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":183 85 {*movdi_internal}
     (nil))
(insn 746 745 747 41 (parallel [
            (set (reg:DI 2 cx [1154])
                (plus:DI (reg:DI 2 cx [orig:372 _286 ] [372])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 747 746 748 41 (set (reg:SF 21 xmm0 [orig:373 _287 ] [373])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1154])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1153])) [2 extra.zint S4 A32])) "CALHEL.f":183 131 {*movsf_internal}
     (nil))
(insn 748 747 749 41 (set (reg:SF 22 xmm1 [orig:374 _288 ] [374])
        (plus:SF (reg:SF 22 xmm1 [orig:363 _277 ] [363])
            (reg:SF 21 xmm0 [orig:373 _287 ] [373]))) "CALHEL.f":183 838 {*fop_sf_comm}
     (nil))
(insn 749 748 750 41 (set (reg:SI 1 dx [1155])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 750 749 751 41 (set (reg:DI 1 dx [orig:375 _289 ] [375])
        (sign_extend:DI (reg:SI 1 dx [1155]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 751 750 752 41 (parallel [
            (set (reg:DI 2 cx [orig:376 _290 ] [376])
                (mult:DI (reg:DI 1 dx [orig:375 _289 ] [375])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 752 751 753 41 (set (reg:SI 1 dx [1156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 753 752 754 41 (parallel [
            (set (reg:SI 1 dx [orig:377 _291 ] [377])
                (plus:SI (reg:SI 1 dx [1156])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 754 753 755 41 (set (reg:DI 1 dx [orig:378 _292 ] [378])
        (sign_extend:DI (reg:SI 1 dx [orig:377 _291 ] [377]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 755 754 756 41 (parallel [
            (set (reg:DI 1 dx [orig:379 _293 ] [379])
                (mult:DI (reg:DI 1 dx [orig:378 _292 ] [378])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 756 755 757 41 (parallel [
            (set (reg:DI 2 cx [orig:380 _294 ] [380])
                (plus:DI (reg:DI 2 cx [orig:376 _290 ] [376])
                    (reg:DI 1 dx [orig:379 _293 ] [379])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 757 756 758 41 (set (reg:SI 1 dx [1157])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 758 757 759 41 (set (reg:DI 1 dx [orig:381 _295 ] [381])
        (sign_extend:DI (reg:SI 1 dx [1157]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 759 758 760 41 (parallel [
            (set (reg:DI 1 dx [orig:382 _296 ] [382])
                (plus:DI (reg:DI 1 dx [orig:381 _295 ] [381])
                    (reg:DI 2 cx [orig:380 _294 ] [380])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 760 759 761 41 (parallel [
            (set (reg:DI 2 cx [orig:383 _297 ] [383])
                (plus:DI (reg:DI 1 dx [orig:382 _296 ] [382])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 761 760 762 41 (set (reg/f:DI 1 dx [1158])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":183 85 {*movdi_internal}
     (nil))
(insn 762 761 763 41 (parallel [
            (set (reg:DI 2 cx [1159])
                (plus:DI (reg:DI 2 cx [orig:383 _297 ] [383])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 763 762 764 41 (set (reg:SF 21 xmm0 [orig:384 _298 ] [384])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1159])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1158])) [2 extra.zint S4 A32])) "CALHEL.f":183 131 {*movsf_internal}
     (nil))
(insn 764 763 765 41 (set (reg:SF 22 xmm1 [orig:385 _299 ] [385])
        (plus:SF (reg:SF 22 xmm1 [orig:374 _288 ] [374])
            (reg:SF 21 xmm0 [orig:384 _298 ] [384]))) "CALHEL.f":183 838 {*fop_sf_comm}
     (nil))
(insn 765 764 766 41 (set (reg:SI 1 dx [1160])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 766 765 767 41 (parallel [
            (set (reg:SI 1 dx [orig:386 _300 ] [386])
                (plus:SI (reg:SI 1 dx [1160])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 767 766 768 41 (set (reg:DI 1 dx [orig:387 _301 ] [387])
        (sign_extend:DI (reg:SI 1 dx [orig:386 _300 ] [386]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 768 767 769 41 (parallel [
            (set (reg:DI 2 cx [orig:388 _302 ] [388])
                (mult:DI (reg:DI 1 dx [orig:387 _301 ] [387])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 769 768 770 41 (set (reg:SI 1 dx [1161])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 770 769 771 41 (parallel [
            (set (reg:SI 1 dx [orig:389 _303 ] [389])
                (plus:SI (reg:SI 1 dx [1161])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 771 770 772 41 (set (reg:DI 1 dx [orig:390 _304 ] [390])
        (sign_extend:DI (reg:SI 1 dx [orig:389 _303 ] [389]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 772 771 773 41 (parallel [
            (set (reg:DI 1 dx [orig:391 _305 ] [391])
                (mult:DI (reg:DI 1 dx [orig:390 _304 ] [390])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 773 772 774 41 (parallel [
            (set (reg:DI 2 cx [orig:392 _306 ] [392])
                (plus:DI (reg:DI 2 cx [orig:388 _302 ] [388])
                    (reg:DI 1 dx [orig:391 _305 ] [391])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 774 773 775 41 (set (reg:SI 1 dx [1162])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 775 774 776 41 (set (reg:DI 1 dx [orig:393 _307 ] [393])
        (sign_extend:DI (reg:SI 1 dx [1162]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 776 775 777 41 (parallel [
            (set (reg:DI 1 dx [orig:394 _308 ] [394])
                (plus:DI (reg:DI 1 dx [orig:393 _307 ] [393])
                    (reg:DI 2 cx [orig:392 _306 ] [392])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 777 776 778 41 (parallel [
            (set (reg:DI 2 cx [orig:395 _309 ] [395])
                (plus:DI (reg:DI 1 dx [orig:394 _308 ] [394])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 778 777 779 41 (set (reg/f:DI 1 dx [1163])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":183 85 {*movdi_internal}
     (nil))
(insn 779 778 780 41 (parallel [
            (set (reg:DI 2 cx [1164])
                (plus:DI (reg:DI 2 cx [orig:395 _309 ] [395])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 780 779 781 41 (set (reg:SF 21 xmm0 [orig:396 _310 ] [396])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1164])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1163])) [2 extra.zint S4 A32])) "CALHEL.f":183 131 {*movsf_internal}
     (nil))
(insn 781 780 782 41 (set (reg:SF 22 xmm1 [orig:397 _311 ] [397])
        (plus:SF (reg:SF 22 xmm1 [orig:385 _299 ] [385])
            (reg:SF 21 xmm0 [orig:396 _310 ] [396]))) "CALHEL.f":183 838 {*fop_sf_comm}
     (nil))
(insn 782 781 783 41 (set (reg:SI 1 dx [1165])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 783 782 784 41 (set (reg:DI 1 dx [orig:398 _312 ] [398])
        (sign_extend:DI (reg:SI 1 dx [1165]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 784 783 785 41 (parallel [
            (set (reg:DI 2 cx [orig:399 _313 ] [399])
                (mult:DI (reg:DI 1 dx [orig:398 _312 ] [398])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 785 784 786 41 (set (reg:SI 1 dx [1166])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 786 785 787 41 (parallel [
            (set (reg:SI 1 dx [orig:400 _314 ] [400])
                (plus:SI (reg:SI 1 dx [1166])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 787 786 788 41 (set (reg:DI 1 dx [orig:401 _315 ] [401])
        (sign_extend:DI (reg:SI 1 dx [orig:400 _314 ] [400]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 788 787 789 41 (parallel [
            (set (reg:DI 1 dx [orig:402 _316 ] [402])
                (mult:DI (reg:DI 1 dx [orig:401 _315 ] [401])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 789 788 790 41 (parallel [
            (set (reg:DI 2 cx [orig:403 _317 ] [403])
                (plus:DI (reg:DI 2 cx [orig:399 _313 ] [399])
                    (reg:DI 1 dx [orig:402 _316 ] [402])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 790 789 791 41 (set (reg:SI 1 dx [1167])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 791 790 792 41 (set (reg:DI 1 dx [orig:404 _318 ] [404])
        (sign_extend:DI (reg:SI 1 dx [1167]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 792 791 793 41 (parallel [
            (set (reg:DI 1 dx [orig:405 _319 ] [405])
                (plus:DI (reg:DI 1 dx [orig:404 _318 ] [404])
                    (reg:DI 2 cx [orig:403 _317 ] [403])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 793 792 794 41 (parallel [
            (set (reg:DI 2 cx [orig:406 _320 ] [406])
                (plus:DI (reg:DI 1 dx [orig:405 _319 ] [405])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 794 793 795 41 (set (reg/f:DI 1 dx [1168])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":183 85 {*movdi_internal}
     (nil))
(insn 795 794 796 41 (parallel [
            (set (reg:DI 2 cx [1169])
                (plus:DI (reg:DI 2 cx [orig:406 _320 ] [406])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 796 795 797 41 (set (reg:SF 21 xmm0 [orig:407 _321 ] [407])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1169])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1168])) [2 extra.zint S4 A32])) "CALHEL.f":183 131 {*movsf_internal}
     (nil))
(insn 797 796 798 41 (set (reg:SF 22 xmm1 [orig:408 _322 ] [408])
        (plus:SF (reg:SF 22 xmm1 [orig:397 _311 ] [397])
            (reg:SF 21 xmm0 [orig:407 _321 ] [407]))) "CALHEL.f":183 838 {*fop_sf_comm}
     (nil))
(insn 798 797 799 41 (set (reg:SI 1 dx [1170])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 799 798 800 41 (parallel [
            (set (reg:SI 1 dx [orig:409 _323 ] [409])
                (plus:SI (reg:SI 1 dx [1170])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 800 799 801 41 (set (reg:DI 1 dx [orig:410 _324 ] [410])
        (sign_extend:DI (reg:SI 1 dx [orig:409 _323 ] [409]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 801 800 802 41 (parallel [
            (set (reg:DI 2 cx [orig:411 _325 ] [411])
                (mult:DI (reg:DI 1 dx [orig:410 _324 ] [410])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 802 801 803 41 (set (reg:SI 1 dx [1171])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 803 802 804 41 (parallel [
            (set (reg:SI 1 dx [orig:412 _326 ] [412])
                (plus:SI (reg:SI 1 dx [1171])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 804 803 805 41 (set (reg:DI 1 dx [orig:413 _327 ] [413])
        (sign_extend:DI (reg:SI 1 dx [orig:412 _326 ] [412]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 805 804 806 41 (parallel [
            (set (reg:DI 1 dx [orig:414 _328 ] [414])
                (mult:DI (reg:DI 1 dx [orig:413 _327 ] [413])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 349 {*muldi3_1}
     (nil))
(insn 806 805 807 41 (parallel [
            (set (reg:DI 2 cx [orig:415 _329 ] [415])
                (plus:DI (reg:DI 2 cx [orig:411 _325 ] [411])
                    (reg:DI 1 dx [orig:414 _328 ] [414])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 807 806 808 41 (set (reg:SI 1 dx [1172])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":183 86 {*movsi_internal}
     (nil))
(insn 808 807 809 41 (set (reg:DI 1 dx [orig:416 _330 ] [416])
        (sign_extend:DI (reg:SI 1 dx [1172]))) "CALHEL.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 809 808 810 41 (parallel [
            (set (reg:DI 1 dx [orig:417 _331 ] [417])
                (plus:DI (reg:DI 1 dx [orig:416 _330 ] [416])
                    (reg:DI 2 cx [orig:415 _329 ] [415])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 810 809 811 41 (parallel [
            (set (reg:DI 2 cx [orig:418 _332 ] [418])
                (plus:DI (reg:DI 1 dx [orig:417 _331 ] [417])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 811 810 812 41 (set (reg/f:DI 1 dx [1173])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":183 85 {*movdi_internal}
     (nil))
(insn 812 811 813 41 (parallel [
            (set (reg:DI 2 cx [1174])
                (plus:DI (reg:DI 2 cx [orig:418 _332 ] [418])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":183 222 {*adddi_1}
     (nil))
(insn 813 812 814 41 (set (reg:SF 21 xmm0 [orig:419 _333 ] [419])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1174])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1173])) [2 extra.zint S4 A32])) "CALHEL.f":183 131 {*movsf_internal}
     (nil))
(insn 814 813 815 41 (set (reg:SF 21 xmm0 [orig:420 _334 ] [420])
        (plus:SF (reg:SF 21 xmm0 [orig:419 _333 ] [419])
            (reg:SF 22 xmm1 [orig:408 _322 ] [408]))) "CALHEL.f":183 838 {*fop_sf_comm}
     (nil))
(insn 815 814 816 41 (set (reg:SF 22 xmm1 [orig:421 _335 ] [421])
        (reg:SF 21 xmm0 [orig:420 _334 ] [420])) "CALHEL.f":183 131 {*movsf_internal}
     (nil))
(insn 816 815 817 41 (set (reg:SF 21 xmm0 [1176])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALHEL.f":183 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.25e-1 [0x0.8p-2])
        (nil)))
(insn 817 816 818 41 (set (reg:SF 21 xmm0 [1175])
        (mult:SF (reg:SF 21 xmm0 [1176])
            (reg:SF 22 xmm1 [orig:421 _335 ] [421]))) "CALHEL.f":183 838 {*fop_sf_comm}
     (nil))
(insn 818 817 819 41 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [2 z2+0 S4 A32])
        (reg:SF 21 xmm0 [1175])) "CALHEL.f":183 131 {*movsf_internal}
     (nil))
(insn 819 818 820 41 (set (reg:SI 1 dx [1177])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 820 819 821 41 (set (reg:DI 1 dx [orig:422 _336 ] [422])
        (sign_extend:DI (reg:SI 1 dx [1177]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 821 820 822 41 (parallel [
            (set (reg:DI 2 cx [orig:423 _337 ] [423])
                (mult:DI (reg:DI 1 dx [orig:422 _336 ] [422])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 349 {*muldi3_1}
     (nil))
(insn 822 821 823 41 (set (reg:SI 1 dx [1178])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 823 822 824 41 (set (reg:DI 1 dx [orig:424 _338 ] [424])
        (sign_extend:DI (reg:SI 1 dx [1178]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 824 823 825 41 (parallel [
            (set (reg:DI 1 dx [orig:425 _339 ] [425])
                (plus:DI (reg:DI 1 dx [orig:424 _338 ] [424])
                    (reg:DI 2 cx [orig:423 _337 ] [423])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 825 824 826 41 (parallel [
            (set (reg:DI 2 cx [orig:426 _340 ] [426])
                (plus:DI (reg:DI 1 dx [orig:425 _339 ] [425])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 826 825 827 41 (set (reg/f:DI 1 dx [1179])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0e17520900 loops>)) "CALHEL.f":185 85 {*movdi_internal}
     (nil))
(insn 827 826 828 41 (parallel [
            (set (reg:DI 2 cx [1180])
                (plus:DI (reg:DI 2 cx [orig:426 _340 ] [426])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 828 827 829 41 (set (reg:SI 1 dx [orig:427 _341 ] [427])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1180])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1179])) [1 loops.lmv S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 829 828 830 41 (parallel [
            (set (reg:SI 1 dx [orig:428 _342 ] [428])
                (plus:SI (reg:SI 1 dx [orig:427 _341 ] [427])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 221 {*addsi_1}
     (nil))
(insn 830 829 831 41 (set (reg:DI 1 dx [orig:429 _343 ] [429])
        (sign_extend:DI (reg:SI 1 dx [orig:428 _342 ] [428]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 831 830 832 41 (parallel [
            (set (reg:DI 2 cx [orig:430 _344 ] [430])
                (mult:DI (reg:DI 1 dx [orig:429 _343 ] [429])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 349 {*muldi3_1}
     (nil))
(insn 832 831 833 41 (set (reg:SI 1 dx [1181])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 833 832 834 41 (set (reg:DI 1 dx [orig:431 _345 ] [431])
        (sign_extend:DI (reg:SI 1 dx [1181]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 834 833 835 41 (parallel [
            (set (reg:DI 1 dx [orig:432 _346 ] [432])
                (mult:DI (reg:DI 1 dx [orig:431 _345 ] [431])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 349 {*muldi3_1}
     (nil))
(insn 835 834 836 41 (parallel [
            (set (reg:DI 2 cx [orig:433 _347 ] [433])
                (plus:DI (reg:DI 2 cx [orig:430 _344 ] [430])
                    (reg:DI 1 dx [orig:432 _346 ] [432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 836 835 837 41 (set (reg:SI 1 dx [1182])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 837 836 838 41 (set (reg:DI 1 dx [orig:434 _348 ] [434])
        (sign_extend:DI (reg:SI 1 dx [1182]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 838 837 839 41 (parallel [
            (set (reg:DI 1 dx [orig:435 _349 ] [435])
                (plus:DI (reg:DI 1 dx [orig:434 _348 ] [434])
                    (reg:DI 2 cx [orig:433 _347 ] [433])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 839 838 840 41 (parallel [
            (set (reg:DI 2 cx [orig:436 _350 ] [436])
                (plus:DI (reg:DI 1 dx [orig:435 _349 ] [435])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 840 839 841 41 (set (reg/f:DI 1 dx [1183])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":185 85 {*movdi_internal}
     (nil))
(insn 841 840 842 41 (parallel [
            (set (reg:DI 2 cx [1184])
                (plus:DI (reg:DI 2 cx [orig:436 _350 ] [436])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 842 841 843 41 (set (reg:SF 22 xmm1 [orig:437 _351 ] [437])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1184])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1183])) [2 extra.zint S4 A32])) "CALHEL.f":185 131 {*movsf_internal}
     (nil))
(insn 843 842 844 41 (set (reg:SI 1 dx [1185])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 844 843 845 41 (set (reg:DI 1 dx [orig:438 _352 ] [438])
        (sign_extend:DI (reg:SI 1 dx [1185]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 845 844 846 41 (parallel [
            (set (reg:DI 2 cx [orig:439 _353 ] [439])
                (mult:DI (reg:DI 1 dx [orig:438 _352 ] [438])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 349 {*muldi3_1}
     (nil))
(insn 846 845 847 41 (set (reg:SI 1 dx [1186])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 847 846 848 41 (set (reg:DI 1 dx [orig:440 _354 ] [440])
        (sign_extend:DI (reg:SI 1 dx [1186]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 848 847 849 41 (parallel [
            (set (reg:DI 1 dx [orig:441 _355 ] [441])
                (plus:DI (reg:DI 1 dx [orig:440 _354 ] [440])
                    (reg:DI 2 cx [orig:439 _353 ] [439])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 849 848 850 41 (parallel [
            (set (reg:DI 2 cx [orig:442 _356 ] [442])
                (plus:DI (reg:DI 1 dx [orig:441 _355 ] [441])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 850 849 851 41 (set (reg/f:DI 1 dx [1187])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0e17520900 loops>)) "CALHEL.f":185 85 {*movdi_internal}
     (nil))
(insn 851 850 852 41 (parallel [
            (set (reg:DI 2 cx [1188])
                (plus:DI (reg:DI 2 cx [orig:442 _356 ] [442])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 852 851 853 41 (set (reg:SI 1 dx [orig:443 _357 ] [443])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1188])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1187])) [1 loops.lmv S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 853 852 854 41 (parallel [
            (set (reg:SI 1 dx [orig:444 _358 ] [444])
                (plus:SI (reg:SI 1 dx [orig:443 _357 ] [443])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 221 {*addsi_1}
     (nil))
(insn 854 853 855 41 (set (reg:DI 1 dx [orig:445 _359 ] [445])
        (sign_extend:DI (reg:SI 1 dx [orig:444 _358 ] [444]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 855 854 856 41 (parallel [
            (set (reg:DI 2 cx [orig:446 _360 ] [446])
                (mult:DI (reg:DI 1 dx [orig:445 _359 ] [445])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 349 {*muldi3_1}
     (nil))
(insn 856 855 857 41 (set (reg:SI 1 dx [1189])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 857 856 858 41 (set (reg:DI 1 dx [orig:447 _361 ] [447])
        (sign_extend:DI (reg:SI 1 dx [1189]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 858 857 859 41 (parallel [
            (set (reg:DI 1 dx [orig:448 _362 ] [448])
                (mult:DI (reg:DI 1 dx [orig:447 _361 ] [447])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 349 {*muldi3_1}
     (nil))
(insn 859 858 860 41 (parallel [
            (set (reg:DI 2 cx [orig:449 _363 ] [449])
                (plus:DI (reg:DI 2 cx [orig:446 _360 ] [446])
                    (reg:DI 1 dx [orig:448 _362 ] [448])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 860 859 861 41 (set (reg:SI 1 dx [1190])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 861 860 862 41 (set (reg:DI 1 dx [orig:450 _364 ] [450])
        (sign_extend:DI (reg:SI 1 dx [1190]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 862 861 863 41 (parallel [
            (set (reg:DI 1 dx [orig:451 _365 ] [451])
                (plus:DI (reg:DI 1 dx [orig:450 _364 ] [450])
                    (reg:DI 2 cx [orig:449 _363 ] [449])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 863 862 864 41 (parallel [
            (set (reg:DI 2 cx [orig:452 _366 ] [452])
                (plus:DI (reg:DI 1 dx [orig:451 _365 ] [451])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 864 863 865 41 (set (reg/f:DI 1 dx [1191])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":185 85 {*movdi_internal}
     (nil))
(insn 865 864 866 41 (parallel [
            (set (reg:DI 2 cx [1192])
                (plus:DI (reg:DI 2 cx [orig:452 _366 ] [452])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 866 865 867 41 (set (reg:SF 21 xmm0 [orig:453 _367 ] [453])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1192])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1191])) [2 extra.zint S4 A32])) "CALHEL.f":185 131 {*movsf_internal}
     (nil))
(insn 867 866 868 41 (set (reg:SF 22 xmm1 [orig:454 _368 ] [454])
        (plus:SF (reg:SF 22 xmm1 [orig:437 _351 ] [437])
            (reg:SF 21 xmm0 [orig:453 _367 ] [453]))) "CALHEL.f":185 838 {*fop_sf_comm}
     (nil))
(insn 868 867 869 41 (set (reg:SI 1 dx [1193])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 869 868 870 41 (set (reg:DI 1 dx [orig:455 _369 ] [455])
        (sign_extend:DI (reg:SI 1 dx [1193]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 870 869 871 41 (parallel [
            (set (reg:DI 2 cx [orig:456 _370 ] [456])
                (mult:DI (reg:DI 1 dx [orig:455 _369 ] [455])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 349 {*muldi3_1}
     (nil))
(insn 871 870 872 41 (set (reg:SI 1 dx [1194])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 872 871 873 41 (set (reg:DI 1 dx [orig:457 _371 ] [457])
        (sign_extend:DI (reg:SI 1 dx [1194]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 873 872 874 41 (parallel [
            (set (reg:DI 1 dx [orig:458 _372 ] [458])
                (plus:DI (reg:DI 1 dx [orig:457 _371 ] [457])
                    (reg:DI 2 cx [orig:456 _370 ] [456])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 874 873 875 41 (parallel [
            (set (reg:DI 2 cx [orig:459 _373 ] [459])
                (plus:DI (reg:DI 1 dx [orig:458 _372 ] [458])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 875 874 876 41 (set (reg/f:DI 1 dx [1195])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0e17520900 loops>)) "CALHEL.f":185 85 {*movdi_internal}
     (nil))
(insn 876 875 877 41 (parallel [
            (set (reg:DI 2 cx [1196])
                (plus:DI (reg:DI 2 cx [orig:459 _373 ] [459])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 877 876 878 41 (set (reg:SI 1 dx [orig:460 _374 ] [460])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1196])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1195])) [1 loops.lmv S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 878 877 879 41 (parallel [
            (set (reg:SI 1 dx [orig:461 _375 ] [461])
                (plus:SI (reg:SI 1 dx [orig:460 _374 ] [460])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 221 {*addsi_1}
     (nil))
(insn 879 878 880 41 (set (reg:DI 1 dx [orig:462 _376 ] [462])
        (sign_extend:DI (reg:SI 1 dx [orig:461 _375 ] [461]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 880 879 881 41 (parallel [
            (set (reg:DI 2 cx [orig:463 _377 ] [463])
                (mult:DI (reg:DI 1 dx [orig:462 _376 ] [462])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 349 {*muldi3_1}
     (nil))
(insn 881 880 882 41 (set (reg:SI 1 dx [1197])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 882 881 883 41 (parallel [
            (set (reg:SI 1 dx [orig:464 _378 ] [464])
                (plus:SI (reg:SI 1 dx [1197])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 883 882 884 41 (set (reg:DI 1 dx [orig:465 _379 ] [465])
        (sign_extend:DI (reg:SI 1 dx [orig:464 _378 ] [464]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 884 883 885 41 (parallel [
            (set (reg:DI 1 dx [orig:466 _380 ] [466])
                (mult:DI (reg:DI 1 dx [orig:465 _379 ] [465])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 349 {*muldi3_1}
     (nil))
(insn 885 884 886 41 (parallel [
            (set (reg:DI 2 cx [orig:467 _381 ] [467])
                (plus:DI (reg:DI 2 cx [orig:463 _377 ] [463])
                    (reg:DI 1 dx [orig:466 _380 ] [466])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 886 885 887 41 (set (reg:SI 1 dx [1198])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 887 886 888 41 (set (reg:DI 1 dx [orig:468 _382 ] [468])
        (sign_extend:DI (reg:SI 1 dx [1198]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 888 887 889 41 (parallel [
            (set (reg:DI 1 dx [orig:469 _383 ] [469])
                (plus:DI (reg:DI 1 dx [orig:468 _382 ] [468])
                    (reg:DI 2 cx [orig:467 _381 ] [467])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 889 888 890 41 (parallel [
            (set (reg:DI 2 cx [orig:470 _384 ] [470])
                (plus:DI (reg:DI 1 dx [orig:469 _383 ] [469])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 890 889 891 41 (set (reg/f:DI 1 dx [1199])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":185 85 {*movdi_internal}
     (nil))
(insn 891 890 892 41 (parallel [
            (set (reg:DI 2 cx [1200])
                (plus:DI (reg:DI 2 cx [orig:470 _384 ] [470])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 892 891 893 41 (set (reg:SF 21 xmm0 [orig:471 _385 ] [471])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1200])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1199])) [2 extra.zint S4 A32])) "CALHEL.f":185 131 {*movsf_internal}
     (nil))
(insn 893 892 894 41 (set (reg:SF 22 xmm1 [orig:472 _386 ] [472])
        (plus:SF (reg:SF 22 xmm1 [orig:454 _368 ] [454])
            (reg:SF 21 xmm0 [orig:471 _385 ] [471]))) "CALHEL.f":185 838 {*fop_sf_comm}
     (nil))
(insn 894 893 895 41 (set (reg:SI 1 dx [1201])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 895 894 896 41 (set (reg:DI 1 dx [orig:473 _387 ] [473])
        (sign_extend:DI (reg:SI 1 dx [1201]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 896 895 897 41 (parallel [
            (set (reg:DI 2 cx [orig:474 _388 ] [474])
                (mult:DI (reg:DI 1 dx [orig:473 _387 ] [473])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 349 {*muldi3_1}
     (nil))
(insn 897 896 898 41 (set (reg:SI 1 dx [1202])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 898 897 899 41 (set (reg:DI 1 dx [orig:475 _389 ] [475])
        (sign_extend:DI (reg:SI 1 dx [1202]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 899 898 900 41 (parallel [
            (set (reg:DI 1 dx [orig:476 _390 ] [476])
                (plus:DI (reg:DI 1 dx [orig:475 _389 ] [475])
                    (reg:DI 2 cx [orig:474 _388 ] [474])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 900 899 901 41 (parallel [
            (set (reg:DI 2 cx [orig:477 _391 ] [477])
                (plus:DI (reg:DI 1 dx [orig:476 _390 ] [476])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 901 900 902 41 (set (reg/f:DI 1 dx [1203])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0e17520900 loops>)) "CALHEL.f":185 85 {*movdi_internal}
     (nil))
(insn 902 901 903 41 (parallel [
            (set (reg:DI 2 cx [1204])
                (plus:DI (reg:DI 2 cx [orig:477 _391 ] [477])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 903 902 904 41 (set (reg:SI 1 dx [orig:478 _392 ] [478])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1204])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1203])) [1 loops.lmv S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 904 903 905 41 (parallel [
            (set (reg:SI 1 dx [orig:479 _393 ] [479])
                (plus:SI (reg:SI 1 dx [orig:478 _392 ] [478])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 221 {*addsi_1}
     (nil))
(insn 905 904 906 41 (set (reg:DI 1 dx [orig:480 _394 ] [480])
        (sign_extend:DI (reg:SI 1 dx [orig:479 _393 ] [479]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 906 905 907 41 (parallel [
            (set (reg:DI 2 cx [orig:481 _395 ] [481])
                (mult:DI (reg:DI 1 dx [orig:480 _394 ] [480])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 349 {*muldi3_1}
     (nil))
(insn 907 906 908 41 (set (reg:SI 1 dx [1205])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 908 907 909 41 (parallel [
            (set (reg:SI 1 dx [orig:482 _396 ] [482])
                (plus:SI (reg:SI 1 dx [1205])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 909 908 910 41 (set (reg:DI 1 dx [orig:483 _397 ] [483])
        (sign_extend:DI (reg:SI 1 dx [orig:482 _396 ] [482]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 910 909 911 41 (parallel [
            (set (reg:DI 1 dx [orig:484 _398 ] [484])
                (mult:DI (reg:DI 1 dx [orig:483 _397 ] [483])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 349 {*muldi3_1}
     (nil))
(insn 911 910 912 41 (parallel [
            (set (reg:DI 2 cx [orig:485 _399 ] [485])
                (plus:DI (reg:DI 2 cx [orig:481 _395 ] [481])
                    (reg:DI 1 dx [orig:484 _398 ] [484])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 912 911 913 41 (set (reg:SI 1 dx [1206])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":185 86 {*movsi_internal}
     (nil))
(insn 913 912 914 41 (set (reg:DI 1 dx [orig:486 _400 ] [486])
        (sign_extend:DI (reg:SI 1 dx [1206]))) "CALHEL.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 914 913 915 41 (parallel [
            (set (reg:DI 1 dx [orig:487 _401 ] [487])
                (plus:DI (reg:DI 1 dx [orig:486 _400 ] [486])
                    (reg:DI 2 cx [orig:485 _399 ] [485])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 915 914 916 41 (parallel [
            (set (reg:DI 2 cx [orig:488 _402 ] [488])
                (plus:DI (reg:DI 1 dx [orig:487 _401 ] [487])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 916 915 917 41 (set (reg/f:DI 1 dx [1207])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":185 85 {*movdi_internal}
     (nil))
(insn 917 916 918 41 (parallel [
            (set (reg:DI 2 cx [1208])
                (plus:DI (reg:DI 2 cx [orig:488 _402 ] [488])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":185 222 {*adddi_1}
     (nil))
(insn 918 917 919 41 (set (reg:SF 21 xmm0 [orig:489 _403 ] [489])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1208])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1207])) [2 extra.zint S4 A32])) "CALHEL.f":185 131 {*movsf_internal}
     (nil))
(insn 919 918 920 41 (set (reg:SF 21 xmm0 [orig:490 _404 ] [490])
        (plus:SF (reg:SF 21 xmm0 [orig:489 _403 ] [489])
            (reg:SF 22 xmm1 [orig:472 _386 ] [472]))) "CALHEL.f":185 838 {*fop_sf_comm}
     (nil))
(insn 920 919 921 41 (set (reg:SF 22 xmm1 [orig:491 _405 ] [491])
        (reg:SF 21 xmm0 [orig:490 _404 ] [490])) "CALHEL.f":185 131 {*movsf_internal}
     (nil))
(insn 921 920 922 41 (set (reg:SF 21 xmm0 [1210])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALHEL.f":185 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 922 921 923 41 (set (reg:SF 21 xmm0 [1209])
        (mult:SF (reg:SF 21 xmm0 [1210])
            (reg:SF 22 xmm1 [orig:491 _405 ] [491]))) "CALHEL.f":185 838 {*fop_sf_comm}
     (nil))
(insn 923 922 924 41 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 htsfc+0 S4 A32])
        (reg:SF 21 xmm0 [1209])) "CALHEL.f":185 131 {*movsf_internal}
     (nil))
(insn 924 923 925 41 (set (reg:SF 21 xmm0 [1212])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [2 z2+0 S4 A32])) "CALHEL.f":187 131 {*movsf_internal}
     (nil))
(insn 925 924 926 41 (set (reg:SF 21 xmm0 [1211])
        (minus:SF (reg:SF 21 xmm0 [1212])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [2 htsfc+0 S4 A32]))) "CALHEL.f":187 841 {*fop_sf_1}
     (nil))
(insn 926 925 927 41 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 dzabv+0 S4 A32])
        (reg:SF 21 xmm0 [1211])) "CALHEL.f":187 131 {*movsf_internal}
     (nil))
(insn 927 926 928 41 (set (reg:SF 21 xmm0 [1213])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALHEL.f":189 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+3 [0x0.bb8p+12])
        (nil)))
(insn 928 927 929 41 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1213])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [2 dzabv+0 S4 A32]))) "CALHEL.f":189 53 {*cmpisf}
     (nil))
(jump_insn 929 928 933 41 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1574)
            (pc))) "CALHEL.f":189 682 {*jcc}
     (nil)
 -> 1574)
;;  succ:       42 (FALLTHRU)
;;              44
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 492 493 494 495 496 497 1214 1215 1216 1217
(note 933 929 934 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 934 933 935 42 (set (reg:SI 1 dx [1214])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":189 86 {*movsi_internal}
     (nil))
(insn 935 934 936 42 (set (reg:DI 1 dx [orig:492 _406 ] [492])
        (sign_extend:DI (reg:SI 1 dx [1214]))) "CALHEL.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 936 935 937 42 (parallel [
            (set (reg:DI 2 cx [orig:493 _407 ] [493])
                (mult:DI (reg:DI 1 dx [orig:492 _406 ] [492])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":189 349 {*muldi3_1}
     (nil))
(insn 937 936 938 42 (set (reg:SI 1 dx [1215])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":189 86 {*movsi_internal}
     (nil))
(insn 938 937 939 42 (set (reg:DI 1 dx [orig:494 _408 ] [494])
        (sign_extend:DI (reg:SI 1 dx [1215]))) "CALHEL.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 939 938 940 42 (parallel [
            (set (reg:DI 1 dx [orig:495 _409 ] [495])
                (plus:DI (reg:DI 1 dx [orig:494 _408 ] [494])
                    (reg:DI 2 cx [orig:493 _407 ] [493])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":189 222 {*adddi_1}
     (nil))
(insn 940 939 941 42 (parallel [
            (set (reg:DI 2 cx [orig:496 _410 ] [496])
                (plus:DI (reg:DI 1 dx [orig:495 _409 ] [495])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":189 222 {*adddi_1}
     (nil))
(insn 941 940 942 42 (set (reg/f:DI 1 dx [1216])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0e17520900 loops>)) "CALHEL.f":189 85 {*movdi_internal}
     (nil))
(insn 942 941 943 42 (parallel [
            (set (reg:DI 2 cx [1217])
                (plus:DI (reg:DI 2 cx [orig:496 _410 ] [496])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":189 222 {*adddi_1}
     (nil))
(insn 943 942 944 42 (set (reg:SI 1 dx [orig:497 _411 ] [497])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1217])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1216])) [1 loops.lmv S4 A32])) "CALHEL.f":189 86 {*movsi_internal}
     (nil))
(insn 944 943 945 42 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
            (reg:SI 1 dx [orig:497 _411 ] [497]))) "CALHEL.f":189 11 {*cmpsi_1}
     (nil))
(jump_insn 945 944 946 42 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1574)
            (pc))) "CALHEL.f":189 682 {*jcc}
     (nil)
 -> 1574)
;;  succ:       43 (FALLTHRU)
;;              44
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418
(note 946 945 947 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 947 946 948 43 (set (reg:SI 1 dx [1218])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 948 947 949 43 (parallel [
            (set (reg:SI 1 dx [orig:498 _412 ] [498])
                (plus:SI (reg:SI 1 dx [1218])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 949 948 950 43 (set (reg:DI 1 dx [orig:499 _413 ] [499])
        (sign_extend:DI (reg:SI 1 dx [orig:498 _412 ] [498]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 950 949 951 43 (parallel [
            (set (reg:DI 2 cx [orig:500 _414 ] [500])
                (mult:DI (reg:DI 1 dx [orig:499 _413 ] [499])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 951 950 952 43 (set (reg:SI 1 dx [1219])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 952 951 953 43 (set (reg:DI 1 dx [orig:501 _415 ] [501])
        (sign_extend:DI (reg:SI 1 dx [1219]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 953 952 954 43 (parallel [
            (set (reg:DI 1 dx [orig:502 _416 ] [502])
                (mult:DI (reg:DI 1 dx [orig:501 _415 ] [501])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 954 953 955 43 (parallel [
            (set (reg:DI 2 cx [orig:503 _417 ] [503])
                (plus:DI (reg:DI 2 cx [orig:500 _414 ] [500])
                    (reg:DI 1 dx [orig:502 _416 ] [502])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 955 954 956 43 (set (reg:SI 1 dx [1220])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 956 955 957 43 (set (reg:DI 1 dx [orig:504 _418 ] [504])
        (sign_extend:DI (reg:SI 1 dx [1220]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 957 956 958 43 (parallel [
            (set (reg:DI 1 dx [orig:505 _419 ] [505])
                (plus:DI (reg:DI 1 dx [orig:504 _418 ] [504])
                    (reg:DI 2 cx [orig:503 _417 ] [503])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 958 957 959 43 (parallel [
            (set (reg:DI 2 cx [orig:506 _420 ] [506])
                (plus:DI (reg:DI 1 dx [orig:505 _419 ] [505])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 959 958 960 43 (set (reg/f:DI 1 dx [1221])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":193 85 {*movdi_internal}
     (nil))
(insn 960 959 961 43 (parallel [
            (set (reg:DI 2 cx [1222])
                (plus:DI (reg:DI 2 cx [orig:506 _420 ] [506])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 961 960 962 43 (set (reg:SF 22 xmm1 [orig:507 _421 ] [507])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1222])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1221])) [2 extra.zint S4 A32])) "CALHEL.f":193 131 {*movsf_internal}
     (nil))
(insn 962 961 963 43 (set (reg:SI 1 dx [1223])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 963 962 964 43 (parallel [
            (set (reg:SI 1 dx [orig:508 _422 ] [508])
                (plus:SI (reg:SI 1 dx [1223])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 964 963 965 43 (set (reg:DI 1 dx [orig:509 _423 ] [509])
        (sign_extend:DI (reg:SI 1 dx [orig:508 _422 ] [508]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 965 964 966 43 (parallel [
            (set (reg:DI 2 cx [orig:510 _424 ] [510])
                (mult:DI (reg:DI 1 dx [orig:509 _423 ] [509])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 966 965 967 43 (set (reg:SI 1 dx [1224])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 967 966 968 43 (set (reg:DI 1 dx [orig:511 _425 ] [511])
        (sign_extend:DI (reg:SI 1 dx [1224]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 968 967 969 43 (parallel [
            (set (reg:DI 1 dx [orig:512 _426 ] [512])
                (mult:DI (reg:DI 1 dx [orig:511 _425 ] [511])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 969 968 970 43 (parallel [
            (set (reg:DI 2 cx [orig:513 _427 ] [513])
                (plus:DI (reg:DI 2 cx [orig:510 _424 ] [510])
                    (reg:DI 1 dx [orig:512 _426 ] [512])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 970 969 971 43 (set (reg:SI 1 dx [1225])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 971 970 972 43 (set (reg:DI 1 dx [orig:514 _428 ] [514])
        (sign_extend:DI (reg:SI 1 dx [1225]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 972 971 973 43 (parallel [
            (set (reg:DI 1 dx [orig:515 _429 ] [515])
                (plus:DI (reg:DI 1 dx [orig:514 _428 ] [514])
                    (reg:DI 2 cx [orig:513 _427 ] [513])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 973 972 974 43 (parallel [
            (set (reg:DI 2 cx [orig:516 _430 ] [516])
                (plus:DI (reg:DI 1 dx [orig:515 _429 ] [515])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 974 973 975 43 (set (reg/f:DI 1 dx [1226])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":193 85 {*movdi_internal}
     (nil))
(insn 975 974 976 43 (parallel [
            (set (reg:DI 2 cx [1227])
                (plus:DI (reg:DI 2 cx [orig:516 _430 ] [516])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 976 975 977 43 (set (reg:SF 21 xmm0 [orig:517 _431 ] [517])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1227])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1226])) [2 extra.zint S4 A32])) "CALHEL.f":193 131 {*movsf_internal}
     (nil))
(insn 977 976 978 43 (set (reg:SF 22 xmm1 [orig:518 _432 ] [518])
        (plus:SF (reg:SF 22 xmm1 [orig:507 _421 ] [507])
            (reg:SF 21 xmm0 [orig:517 _431 ] [517]))) "CALHEL.f":193 838 {*fop_sf_comm}
     (nil))
(insn 978 977 979 43 (set (reg:SI 1 dx [1228])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 979 978 980 43 (parallel [
            (set (reg:SI 1 dx [orig:519 _433 ] [519])
                (plus:SI (reg:SI 1 dx [1228])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 980 979 981 43 (set (reg:DI 1 dx [orig:520 _434 ] [520])
        (sign_extend:DI (reg:SI 1 dx [orig:519 _433 ] [519]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 981 980 982 43 (parallel [
            (set (reg:DI 2 cx [orig:521 _435 ] [521])
                (mult:DI (reg:DI 1 dx [orig:520 _434 ] [520])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 982 981 983 43 (set (reg:SI 1 dx [1229])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 983 982 984 43 (set (reg:DI 1 dx [orig:522 _436 ] [522])
        (sign_extend:DI (reg:SI 1 dx [1229]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 984 983 985 43 (parallel [
            (set (reg:DI 1 dx [orig:523 _437 ] [523])
                (mult:DI (reg:DI 1 dx [orig:522 _436 ] [522])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 985 984 986 43 (parallel [
            (set (reg:DI 2 cx [orig:524 _438 ] [524])
                (plus:DI (reg:DI 2 cx [orig:521 _435 ] [521])
                    (reg:DI 1 dx [orig:523 _437 ] [523])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 986 985 987 43 (set (reg:SI 1 dx [1230])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 987 986 988 43 (set (reg:DI 1 dx [orig:525 _439 ] [525])
        (sign_extend:DI (reg:SI 1 dx [1230]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 988 987 989 43 (parallel [
            (set (reg:DI 1 dx [orig:526 _440 ] [526])
                (plus:DI (reg:DI 1 dx [orig:525 _439 ] [525])
                    (reg:DI 2 cx [orig:524 _438 ] [524])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 989 988 990 43 (parallel [
            (set (reg:DI 2 cx [orig:527 _441 ] [527])
                (plus:DI (reg:DI 1 dx [orig:526 _440 ] [526])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 990 989 991 43 (set (reg/f:DI 1 dx [1231])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":193 85 {*movdi_internal}
     (nil))
(insn 991 990 992 43 (parallel [
            (set (reg:DI 2 cx [1232])
                (plus:DI (reg:DI 2 cx [orig:527 _441 ] [527])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 992 991 993 43 (set (reg:SF 21 xmm0 [orig:528 _442 ] [528])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1232])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1231])) [2 extra.zint S4 A32])) "CALHEL.f":193 131 {*movsf_internal}
     (nil))
(insn 993 992 994 43 (set (reg:SF 22 xmm1 [orig:529 _443 ] [529])
        (plus:SF (reg:SF 22 xmm1 [orig:518 _432 ] [518])
            (reg:SF 21 xmm0 [orig:528 _442 ] [528]))) "CALHEL.f":193 838 {*fop_sf_comm}
     (nil))
(insn 994 993 995 43 (set (reg:SI 1 dx [1233])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 995 994 996 43 (parallel [
            (set (reg:SI 1 dx [orig:530 _444 ] [530])
                (plus:SI (reg:SI 1 dx [1233])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 996 995 997 43 (set (reg:DI 1 dx [orig:531 _445 ] [531])
        (sign_extend:DI (reg:SI 1 dx [orig:530 _444 ] [530]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 997 996 998 43 (parallel [
            (set (reg:DI 2 cx [orig:532 _446 ] [532])
                (mult:DI (reg:DI 1 dx [orig:531 _445 ] [531])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 998 997 999 43 (set (reg:SI 1 dx [1234])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 999 998 1000 43 (set (reg:DI 1 dx [orig:533 _447 ] [533])
        (sign_extend:DI (reg:SI 1 dx [1234]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1000 999 1001 43 (parallel [
            (set (reg:DI 1 dx [orig:534 _448 ] [534])
                (mult:DI (reg:DI 1 dx [orig:533 _447 ] [533])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 1001 1000 1002 43 (parallel [
            (set (reg:DI 2 cx [orig:535 _449 ] [535])
                (plus:DI (reg:DI 2 cx [orig:532 _446 ] [532])
                    (reg:DI 1 dx [orig:534 _448 ] [534])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1002 1001 1003 43 (set (reg:SI 1 dx [1235])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1003 1002 1004 43 (set (reg:DI 1 dx [orig:536 _450 ] [536])
        (sign_extend:DI (reg:SI 1 dx [1235]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1004 1003 1005 43 (parallel [
            (set (reg:DI 1 dx [orig:537 _451 ] [537])
                (plus:DI (reg:DI 1 dx [orig:536 _450 ] [536])
                    (reg:DI 2 cx [orig:535 _449 ] [535])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1005 1004 1006 43 (parallel [
            (set (reg:DI 2 cx [orig:538 _452 ] [538])
                (plus:DI (reg:DI 1 dx [orig:537 _451 ] [537])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1006 1005 1007 43 (set (reg/f:DI 1 dx [1236])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":193 85 {*movdi_internal}
     (nil))
(insn 1007 1006 1008 43 (parallel [
            (set (reg:DI 2 cx [1237])
                (plus:DI (reg:DI 2 cx [orig:538 _452 ] [538])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1008 1007 1009 43 (set (reg:SF 21 xmm0 [orig:539 _453 ] [539])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1237])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1236])) [2 extra.zint S4 A32])) "CALHEL.f":193 131 {*movsf_internal}
     (nil))
(insn 1009 1008 1010 43 (set (reg:SF 22 xmm1 [orig:540 _454 ] [540])
        (plus:SF (reg:SF 22 xmm1 [orig:529 _443 ] [529])
            (reg:SF 21 xmm0 [orig:539 _453 ] [539]))) "CALHEL.f":193 838 {*fop_sf_comm}
     (nil))
(insn 1010 1009 1011 43 (set (reg:SI 1 dx [1238])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1011 1010 1012 43 (parallel [
            (set (reg:SI 1 dx [orig:541 _455 ] [541])
                (plus:SI (reg:SI 1 dx [1238])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1012 1011 1013 43 (set (reg:DI 1 dx [orig:542 _456 ] [542])
        (sign_extend:DI (reg:SI 1 dx [orig:541 _455 ] [541]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1013 1012 1014 43 (parallel [
            (set (reg:DI 2 cx [orig:543 _457 ] [543])
                (mult:DI (reg:DI 1 dx [orig:542 _456 ] [542])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 1014 1013 1015 43 (set (reg:SI 1 dx [1239])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1015 1014 1016 43 (parallel [
            (set (reg:SI 1 dx [orig:544 _458 ] [544])
                (plus:SI (reg:SI 1 dx [1239])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1016 1015 1017 43 (set (reg:DI 1 dx [orig:545 _459 ] [545])
        (sign_extend:DI (reg:SI 1 dx [orig:544 _458 ] [544]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1017 1016 1018 43 (parallel [
            (set (reg:DI 1 dx [orig:546 _460 ] [546])
                (mult:DI (reg:DI 1 dx [orig:545 _459 ] [545])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 1018 1017 1019 43 (parallel [
            (set (reg:DI 2 cx [orig:547 _461 ] [547])
                (plus:DI (reg:DI 2 cx [orig:543 _457 ] [543])
                    (reg:DI 1 dx [orig:546 _460 ] [546])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1019 1018 1020 43 (set (reg:SI 1 dx [1240])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1020 1019 1021 43 (set (reg:DI 1 dx [orig:548 _462 ] [548])
        (sign_extend:DI (reg:SI 1 dx [1240]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1021 1020 1022 43 (parallel [
            (set (reg:DI 1 dx [orig:549 _463 ] [549])
                (plus:DI (reg:DI 1 dx [orig:548 _462 ] [548])
                    (reg:DI 2 cx [orig:547 _461 ] [547])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1022 1021 1023 43 (parallel [
            (set (reg:DI 2 cx [orig:550 _464 ] [550])
                (plus:DI (reg:DI 1 dx [orig:549 _463 ] [549])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1023 1022 1024 43 (set (reg/f:DI 1 dx [1241])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":193 85 {*movdi_internal}
     (nil))
(insn 1024 1023 1025 43 (parallel [
            (set (reg:DI 2 cx [1242])
                (plus:DI (reg:DI 2 cx [orig:550 _464 ] [550])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1025 1024 1026 43 (set (reg:SF 21 xmm0 [orig:551 _465 ] [551])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1242])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1241])) [2 extra.zint S4 A32])) "CALHEL.f":193 131 {*movsf_internal}
     (nil))
(insn 1026 1025 1027 43 (set (reg:SF 22 xmm1 [orig:552 _466 ] [552])
        (plus:SF (reg:SF 22 xmm1 [orig:540 _454 ] [540])
            (reg:SF 21 xmm0 [orig:551 _465 ] [551]))) "CALHEL.f":193 838 {*fop_sf_comm}
     (nil))
(insn 1027 1026 1028 43 (set (reg:SI 1 dx [1243])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1028 1027 1029 43 (parallel [
            (set (reg:SI 1 dx [orig:553 _467 ] [553])
                (plus:SI (reg:SI 1 dx [1243])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 1029 1028 1030 43 (set (reg:DI 1 dx [orig:554 _468 ] [554])
        (sign_extend:DI (reg:SI 1 dx [orig:553 _467 ] [553]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1030 1029 1031 43 (parallel [
            (set (reg:DI 2 cx [orig:555 _469 ] [555])
                (mult:DI (reg:DI 1 dx [orig:554 _468 ] [554])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 1031 1030 1032 43 (set (reg:SI 1 dx [1244])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1032 1031 1033 43 (parallel [
            (set (reg:SI 1 dx [orig:556 _470 ] [556])
                (plus:SI (reg:SI 1 dx [1244])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1033 1032 1034 43 (set (reg:DI 1 dx [orig:557 _471 ] [557])
        (sign_extend:DI (reg:SI 1 dx [orig:556 _470 ] [556]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1034 1033 1035 43 (parallel [
            (set (reg:DI 1 dx [orig:558 _472 ] [558])
                (mult:DI (reg:DI 1 dx [orig:557 _471 ] [557])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 1035 1034 1036 43 (parallel [
            (set (reg:DI 2 cx [orig:559 _473 ] [559])
                (plus:DI (reg:DI 2 cx [orig:555 _469 ] [555])
                    (reg:DI 1 dx [orig:558 _472 ] [558])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1036 1035 1037 43 (set (reg:SI 1 dx [1245])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1037 1036 1038 43 (set (reg:DI 1 dx [orig:560 _474 ] [560])
        (sign_extend:DI (reg:SI 1 dx [1245]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1038 1037 1039 43 (parallel [
            (set (reg:DI 1 dx [orig:561 _475 ] [561])
                (plus:DI (reg:DI 1 dx [orig:560 _474 ] [560])
                    (reg:DI 2 cx [orig:559 _473 ] [559])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1039 1038 1040 43 (parallel [
            (set (reg:DI 2 cx [orig:562 _476 ] [562])
                (plus:DI (reg:DI 1 dx [orig:561 _475 ] [561])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1040 1039 1041 43 (set (reg/f:DI 1 dx [1246])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":193 85 {*movdi_internal}
     (nil))
(insn 1041 1040 1042 43 (parallel [
            (set (reg:DI 2 cx [1247])
                (plus:DI (reg:DI 2 cx [orig:562 _476 ] [562])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1042 1041 1043 43 (set (reg:SF 21 xmm0 [orig:563 _477 ] [563])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1247])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1246])) [2 extra.zint S4 A32])) "CALHEL.f":193 131 {*movsf_internal}
     (nil))
(insn 1043 1042 1044 43 (set (reg:SF 22 xmm1 [orig:564 _478 ] [564])
        (plus:SF (reg:SF 22 xmm1 [orig:552 _466 ] [552])
            (reg:SF 21 xmm0 [orig:563 _477 ] [563]))) "CALHEL.f":193 838 {*fop_sf_comm}
     (nil))
(insn 1044 1043 1045 43 (set (reg:SI 1 dx [1248])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1045 1044 1046 43 (parallel [
            (set (reg:SI 1 dx [orig:565 _479 ] [565])
                (plus:SI (reg:SI 1 dx [1248])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1046 1045 1047 43 (set (reg:DI 1 dx [orig:566 _480 ] [566])
        (sign_extend:DI (reg:SI 1 dx [orig:565 _479 ] [565]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1047 1046 1048 43 (parallel [
            (set (reg:DI 2 cx [orig:567 _481 ] [567])
                (mult:DI (reg:DI 1 dx [orig:566 _480 ] [566])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 1048 1047 1049 43 (set (reg:SI 1 dx [1249])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1049 1048 1050 43 (parallel [
            (set (reg:SI 1 dx [orig:568 _482 ] [568])
                (plus:SI (reg:SI 1 dx [1249])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1050 1049 1051 43 (set (reg:DI 1 dx [orig:569 _483 ] [569])
        (sign_extend:DI (reg:SI 1 dx [orig:568 _482 ] [568]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1051 1050 1052 43 (parallel [
            (set (reg:DI 1 dx [orig:570 _484 ] [570])
                (mult:DI (reg:DI 1 dx [orig:569 _483 ] [569])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 1052 1051 1053 43 (parallel [
            (set (reg:DI 2 cx [orig:571 _485 ] [571])
                (plus:DI (reg:DI 2 cx [orig:567 _481 ] [567])
                    (reg:DI 1 dx [orig:570 _484 ] [570])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1053 1052 1054 43 (set (reg:SI 1 dx [1250])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1054 1053 1055 43 (set (reg:DI 1 dx [orig:572 _486 ] [572])
        (sign_extend:DI (reg:SI 1 dx [1250]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1055 1054 1056 43 (parallel [
            (set (reg:DI 1 dx [orig:573 _487 ] [573])
                (plus:DI (reg:DI 1 dx [orig:572 _486 ] [572])
                    (reg:DI 2 cx [orig:571 _485 ] [571])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1056 1055 1057 43 (parallel [
            (set (reg:DI 2 cx [orig:574 _488 ] [574])
                (plus:DI (reg:DI 1 dx [orig:573 _487 ] [573])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1057 1056 1058 43 (set (reg/f:DI 1 dx [1251])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":193 85 {*movdi_internal}
     (nil))
(insn 1058 1057 1059 43 (parallel [
            (set (reg:DI 2 cx [1252])
                (plus:DI (reg:DI 2 cx [orig:574 _488 ] [574])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1059 1058 1060 43 (set (reg:SF 21 xmm0 [orig:575 _489 ] [575])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1252])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1251])) [2 extra.zint S4 A32])) "CALHEL.f":193 131 {*movsf_internal}
     (nil))
(insn 1060 1059 1061 43 (set (reg:SF 22 xmm1 [orig:576 _490 ] [576])
        (plus:SF (reg:SF 22 xmm1 [orig:564 _478 ] [564])
            (reg:SF 21 xmm0 [orig:575 _489 ] [575]))) "CALHEL.f":193 838 {*fop_sf_comm}
     (nil))
(insn 1061 1060 1062 43 (set (reg:SI 1 dx [1253])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1062 1061 1063 43 (parallel [
            (set (reg:SI 1 dx [orig:577 _491 ] [577])
                (plus:SI (reg:SI 1 dx [1253])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 1063 1062 1064 43 (set (reg:DI 1 dx [orig:578 _492 ] [578])
        (sign_extend:DI (reg:SI 1 dx [orig:577 _491 ] [577]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1064 1063 1065 43 (parallel [
            (set (reg:DI 2 cx [orig:579 _493 ] [579])
                (mult:DI (reg:DI 1 dx [orig:578 _492 ] [578])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 1065 1064 1066 43 (set (reg:SI 1 dx [1254])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1066 1065 1067 43 (parallel [
            (set (reg:SI 1 dx [orig:580 _494 ] [580])
                (plus:SI (reg:SI 1 dx [1254])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1067 1066 1068 43 (set (reg:DI 1 dx [orig:581 _495 ] [581])
        (sign_extend:DI (reg:SI 1 dx [orig:580 _494 ] [580]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1068 1067 1069 43 (parallel [
            (set (reg:DI 1 dx [orig:582 _496 ] [582])
                (mult:DI (reg:DI 1 dx [orig:581 _495 ] [581])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 349 {*muldi3_1}
     (nil))
(insn 1069 1068 1070 43 (parallel [
            (set (reg:DI 2 cx [orig:583 _497 ] [583])
                (plus:DI (reg:DI 2 cx [orig:579 _493 ] [579])
                    (reg:DI 1 dx [orig:582 _496 ] [582])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1070 1069 1071 43 (set (reg:SI 1 dx [1255])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":193 86 {*movsi_internal}
     (nil))
(insn 1071 1070 1072 43 (set (reg:DI 1 dx [orig:584 _498 ] [584])
        (sign_extend:DI (reg:SI 1 dx [1255]))) "CALHEL.f":193 149 {*extendsidi2_rex64}
     (nil))
(insn 1072 1071 1073 43 (parallel [
            (set (reg:DI 1 dx [orig:585 _499 ] [585])
                (plus:DI (reg:DI 1 dx [orig:584 _498 ] [584])
                    (reg:DI 2 cx [orig:583 _497 ] [583])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1073 1072 1074 43 (parallel [
            (set (reg:DI 2 cx [orig:586 _500 ] [586])
                (plus:DI (reg:DI 1 dx [orig:585 _499 ] [585])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1074 1073 1075 43 (set (reg/f:DI 1 dx [1256])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":193 85 {*movdi_internal}
     (nil))
(insn 1075 1074 1076 43 (parallel [
            (set (reg:DI 2 cx [1257])
                (plus:DI (reg:DI 2 cx [orig:586 _500 ] [586])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":193 222 {*adddi_1}
     (nil))
(insn 1076 1075 1077 43 (set (reg:SF 21 xmm0 [orig:587 _501 ] [587])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1257])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1256])) [2 extra.zint S4 A32])) "CALHEL.f":193 131 {*movsf_internal}
     (nil))
(insn 1077 1076 1078 43 (set (reg:SF 21 xmm0 [orig:588 _502 ] [588])
        (plus:SF (reg:SF 21 xmm0 [orig:587 _501 ] [587])
            (reg:SF 22 xmm1 [orig:576 _490 ] [576]))) "CALHEL.f":193 838 {*fop_sf_comm}
     (nil))
(insn 1078 1077 1079 43 (set (reg:SF 22 xmm1 [orig:589 _503 ] [589])
        (reg:SF 21 xmm0 [orig:588 _502 ] [588])) "CALHEL.f":193 131 {*movsf_internal}
     (nil))
(insn 1079 1078 1080 43 (set (reg:SF 21 xmm0 [1259])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALHEL.f":193 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.25e-1 [0x0.8p-2])
        (nil)))
(insn 1080 1079 1081 43 (set (reg:SF 21 xmm0 [1258])
        (mult:SF (reg:SF 21 xmm0 [1259])
            (reg:SF 22 xmm1 [orig:589 _503 ] [589]))) "CALHEL.f":193 838 {*fop_sf_comm}
     (nil))
(insn 1081 1080 1082 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [2 z1+0 S4 A32])
        (reg:SF 21 xmm0 [1258])) "CALHEL.f":193 131 {*movsf_internal}
     (nil))
(insn 1082 1081 1083 43 (set (reg:SI 1 dx [1260])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1083 1082 1084 43 (parallel [
            (set (reg:SI 1 dx [orig:590 _504 ] [590])
                (plus:SI (reg:SI 1 dx [1260])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1084 1083 1085 43 (set (reg:DI 1 dx [orig:591 _505 ] [591])
        (sign_extend:DI (reg:SI 1 dx [orig:590 _504 ] [590]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1085 1084 1086 43 (parallel [
            (set (reg:DI 2 cx [orig:592 _506 ] [592])
                (mult:DI (reg:DI 1 dx [orig:591 _505 ] [591])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1086 1085 1087 43 (set (reg:SI 1 dx [1261])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1087 1086 1088 43 (set (reg:DI 1 dx [orig:593 _507 ] [593])
        (sign_extend:DI (reg:SI 1 dx [1261]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1088 1087 1089 43 (parallel [
            (set (reg:DI 1 dx [orig:594 _508 ] [594])
                (mult:DI (reg:DI 1 dx [orig:593 _507 ] [593])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1089 1088 1090 43 (parallel [
            (set (reg:DI 2 cx [orig:595 _509 ] [595])
                (plus:DI (reg:DI 2 cx [orig:592 _506 ] [592])
                    (reg:DI 1 dx [orig:594 _508 ] [594])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1090 1089 1091 43 (set (reg:SI 1 dx [1262])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1091 1090 1092 43 (set (reg:DI 1 dx [orig:596 _510 ] [596])
        (sign_extend:DI (reg:SI 1 dx [1262]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1092 1091 1093 43 (parallel [
            (set (reg:DI 1 dx [orig:597 _511 ] [597])
                (plus:DI (reg:DI 1 dx [orig:596 _510 ] [596])
                    (reg:DI 2 cx [orig:595 _509 ] [595])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1093 1092 1094 43 (parallel [
            (set (reg:DI 2 cx [orig:598 _512 ] [598])
                (plus:DI (reg:DI 1 dx [orig:597 _511 ] [597])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1094 1093 1095 43 (set (reg/f:DI 1 dx [1263])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":197 85 {*movdi_internal}
     (nil))
(insn 1095 1094 1096 43 (parallel [
            (set (reg:DI 2 cx [1264])
                (plus:DI (reg:DI 2 cx [orig:598 _512 ] [598])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1096 1095 1097 43 (set (reg:SF 22 xmm1 [orig:599 _513 ] [599])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1264])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1263])) [2 extra.zint S4 A32])) "CALHEL.f":197 131 {*movsf_internal}
     (nil))
(insn 1097 1096 1098 43 (set (reg:SI 1 dx [1265])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1098 1097 1099 43 (set (reg:DI 1 dx [orig:600 _514 ] [600])
        (sign_extend:DI (reg:SI 1 dx [1265]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1099 1098 1100 43 (parallel [
            (set (reg:DI 2 cx [orig:601 _515 ] [601])
                (mult:DI (reg:DI 1 dx [orig:600 _514 ] [600])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1100 1099 1101 43 (set (reg:SI 1 dx [1266])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1101 1100 1102 43 (set (reg:DI 1 dx [orig:602 _516 ] [602])
        (sign_extend:DI (reg:SI 1 dx [1266]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1102 1101 1103 43 (parallel [
            (set (reg:DI 1 dx [orig:603 _517 ] [603])
                (mult:DI (reg:DI 1 dx [orig:602 _516 ] [602])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1103 1102 1104 43 (parallel [
            (set (reg:DI 2 cx [orig:604 _518 ] [604])
                (plus:DI (reg:DI 2 cx [orig:601 _515 ] [601])
                    (reg:DI 1 dx [orig:603 _517 ] [603])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1104 1103 1105 43 (set (reg:SI 1 dx [1267])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1105 1104 1106 43 (set (reg:DI 1 dx [orig:605 _519 ] [605])
        (sign_extend:DI (reg:SI 1 dx [1267]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1106 1105 1107 43 (parallel [
            (set (reg:DI 1 dx [orig:606 _520 ] [606])
                (plus:DI (reg:DI 1 dx [orig:605 _519 ] [605])
                    (reg:DI 2 cx [orig:604 _518 ] [604])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1107 1106 1108 43 (parallel [
            (set (reg:DI 2 cx [orig:607 _521 ] [607])
                (plus:DI (reg:DI 1 dx [orig:606 _520 ] [606])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1108 1107 1109 43 (set (reg/f:DI 1 dx [1268])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":197 85 {*movdi_internal}
     (nil))
(insn 1109 1108 1110 43 (parallel [
            (set (reg:DI 2 cx [1269])
                (plus:DI (reg:DI 2 cx [orig:607 _521 ] [607])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1110 1109 1111 43 (set (reg:SF 21 xmm0 [orig:608 _522 ] [608])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1269])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1268])) [2 extra.zint S4 A32])) "CALHEL.f":197 131 {*movsf_internal}
     (nil))
(insn 1111 1110 1112 43 (set (reg:SF 22 xmm1 [orig:609 _523 ] [609])
        (plus:SF (reg:SF 22 xmm1 [orig:599 _513 ] [599])
            (reg:SF 21 xmm0 [orig:608 _522 ] [608]))) "CALHEL.f":197 838 {*fop_sf_comm}
     (nil))
(insn 1112 1111 1113 43 (set (reg:SI 1 dx [1270])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1113 1112 1114 43 (parallel [
            (set (reg:SI 1 dx [orig:610 _524 ] [610])
                (plus:SI (reg:SI 1 dx [1270])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1114 1113 1115 43 (set (reg:DI 1 dx [orig:611 _525 ] [611])
        (sign_extend:DI (reg:SI 1 dx [orig:610 _524 ] [610]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1115 1114 1116 43 (parallel [
            (set (reg:DI 2 cx [orig:612 _526 ] [612])
                (mult:DI (reg:DI 1 dx [orig:611 _525 ] [611])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1116 1115 1117 43 (set (reg:SI 1 dx [1271])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1117 1116 1118 43 (set (reg:DI 1 dx [orig:613 _527 ] [613])
        (sign_extend:DI (reg:SI 1 dx [1271]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1118 1117 1119 43 (parallel [
            (set (reg:DI 1 dx [orig:614 _528 ] [614])
                (mult:DI (reg:DI 1 dx [orig:613 _527 ] [613])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1119 1118 1120 43 (parallel [
            (set (reg:DI 2 cx [orig:615 _529 ] [615])
                (plus:DI (reg:DI 2 cx [orig:612 _526 ] [612])
                    (reg:DI 1 dx [orig:614 _528 ] [614])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1120 1119 1121 43 (set (reg:SI 1 dx [1272])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1121 1120 1122 43 (set (reg:DI 1 dx [orig:616 _530 ] [616])
        (sign_extend:DI (reg:SI 1 dx [1272]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1122 1121 1123 43 (parallel [
            (set (reg:DI 1 dx [orig:617 _531 ] [617])
                (plus:DI (reg:DI 1 dx [orig:616 _530 ] [616])
                    (reg:DI 2 cx [orig:615 _529 ] [615])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1123 1122 1124 43 (parallel [
            (set (reg:DI 2 cx [orig:618 _532 ] [618])
                (plus:DI (reg:DI 1 dx [orig:617 _531 ] [617])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1124 1123 1125 43 (set (reg/f:DI 1 dx [1273])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":197 85 {*movdi_internal}
     (nil))
(insn 1125 1124 1126 43 (parallel [
            (set (reg:DI 2 cx [1274])
                (plus:DI (reg:DI 2 cx [orig:618 _532 ] [618])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1126 1125 1127 43 (set (reg:SF 21 xmm0 [orig:619 _533 ] [619])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1274])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1273])) [2 extra.zint S4 A32])) "CALHEL.f":197 131 {*movsf_internal}
     (nil))
(insn 1127 1126 1128 43 (set (reg:SF 22 xmm1 [orig:620 _534 ] [620])
        (plus:SF (reg:SF 22 xmm1 [orig:609 _523 ] [609])
            (reg:SF 21 xmm0 [orig:619 _533 ] [619]))) "CALHEL.f":197 838 {*fop_sf_comm}
     (nil))
(insn 1128 1127 1129 43 (set (reg:SI 1 dx [1275])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1129 1128 1130 43 (set (reg:DI 1 dx [orig:621 _535 ] [621])
        (sign_extend:DI (reg:SI 1 dx [1275]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1130 1129 1131 43 (parallel [
            (set (reg:DI 2 cx [orig:622 _536 ] [622])
                (mult:DI (reg:DI 1 dx [orig:621 _535 ] [621])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1131 1130 1132 43 (set (reg:SI 1 dx [1276])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1132 1131 1133 43 (set (reg:DI 1 dx [orig:623 _537 ] [623])
        (sign_extend:DI (reg:SI 1 dx [1276]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1133 1132 1134 43 (parallel [
            (set (reg:DI 1 dx [orig:624 _538 ] [624])
                (mult:DI (reg:DI 1 dx [orig:623 _537 ] [623])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1134 1133 1135 43 (parallel [
            (set (reg:DI 2 cx [orig:625 _539 ] [625])
                (plus:DI (reg:DI 2 cx [orig:622 _536 ] [622])
                    (reg:DI 1 dx [orig:624 _538 ] [624])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1135 1134 1136 43 (set (reg:SI 1 dx [1277])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1136 1135 1137 43 (set (reg:DI 1 dx [orig:626 _540 ] [626])
        (sign_extend:DI (reg:SI 1 dx [1277]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1137 1136 1138 43 (parallel [
            (set (reg:DI 1 dx [orig:627 _541 ] [627])
                (plus:DI (reg:DI 1 dx [orig:626 _540 ] [626])
                    (reg:DI 2 cx [orig:625 _539 ] [625])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1138 1137 1139 43 (parallel [
            (set (reg:DI 2 cx [orig:628 _542 ] [628])
                (plus:DI (reg:DI 1 dx [orig:627 _541 ] [627])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1139 1138 1140 43 (set (reg/f:DI 1 dx [1278])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":197 85 {*movdi_internal}
     (nil))
(insn 1140 1139 1141 43 (parallel [
            (set (reg:DI 2 cx [1279])
                (plus:DI (reg:DI 2 cx [orig:628 _542 ] [628])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1141 1140 1142 43 (set (reg:SF 21 xmm0 [orig:629 _543 ] [629])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1279])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1278])) [2 extra.zint S4 A32])) "CALHEL.f":197 131 {*movsf_internal}
     (nil))
(insn 1142 1141 1143 43 (set (reg:SF 22 xmm1 [orig:630 _544 ] [630])
        (plus:SF (reg:SF 22 xmm1 [orig:620 _534 ] [620])
            (reg:SF 21 xmm0 [orig:629 _543 ] [629]))) "CALHEL.f":197 838 {*fop_sf_comm}
     (nil))
(insn 1143 1142 1144 43 (set (reg:SI 1 dx [1280])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1144 1143 1145 43 (parallel [
            (set (reg:SI 1 dx [orig:631 _545 ] [631])
                (plus:SI (reg:SI 1 dx [1280])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1145 1144 1146 43 (set (reg:DI 1 dx [orig:632 _546 ] [632])
        (sign_extend:DI (reg:SI 1 dx [orig:631 _545 ] [631]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1146 1145 1147 43 (parallel [
            (set (reg:DI 2 cx [orig:633 _547 ] [633])
                (mult:DI (reg:DI 1 dx [orig:632 _546 ] [632])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1147 1146 1148 43 (set (reg:SI 1 dx [1281])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1148 1147 1149 43 (parallel [
            (set (reg:SI 1 dx [orig:634 _548 ] [634])
                (plus:SI (reg:SI 1 dx [1281])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1149 1148 1150 43 (set (reg:DI 1 dx [orig:635 _549 ] [635])
        (sign_extend:DI (reg:SI 1 dx [orig:634 _548 ] [634]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1150 1149 1151 43 (parallel [
            (set (reg:DI 1 dx [orig:636 _550 ] [636])
                (mult:DI (reg:DI 1 dx [orig:635 _549 ] [635])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1151 1150 1152 43 (parallel [
            (set (reg:DI 2 cx [orig:637 _551 ] [637])
                (plus:DI (reg:DI 2 cx [orig:633 _547 ] [633])
                    (reg:DI 1 dx [orig:636 _550 ] [636])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1152 1151 1153 43 (set (reg:SI 1 dx [1282])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1153 1152 1154 43 (set (reg:DI 1 dx [orig:638 _552 ] [638])
        (sign_extend:DI (reg:SI 1 dx [1282]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1154 1153 1155 43 (parallel [
            (set (reg:DI 1 dx [orig:639 _553 ] [639])
                (plus:DI (reg:DI 1 dx [orig:638 _552 ] [638])
                    (reg:DI 2 cx [orig:637 _551 ] [637])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1155 1154 1156 43 (parallel [
            (set (reg:DI 2 cx [orig:640 _554 ] [640])
                (plus:DI (reg:DI 1 dx [orig:639 _553 ] [639])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1156 1155 1157 43 (set (reg/f:DI 1 dx [1283])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":197 85 {*movdi_internal}
     (nil))
(insn 1157 1156 1158 43 (parallel [
            (set (reg:DI 2 cx [1284])
                (plus:DI (reg:DI 2 cx [orig:640 _554 ] [640])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1158 1157 1159 43 (set (reg:SF 21 xmm0 [orig:641 _555 ] [641])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1284])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1283])) [2 extra.zint S4 A32])) "CALHEL.f":197 131 {*movsf_internal}
     (nil))
(insn 1159 1158 1160 43 (set (reg:SF 22 xmm1 [orig:642 _556 ] [642])
        (plus:SF (reg:SF 22 xmm1 [orig:630 _544 ] [630])
            (reg:SF 21 xmm0 [orig:641 _555 ] [641]))) "CALHEL.f":197 838 {*fop_sf_comm}
     (nil))
(insn 1160 1159 1161 43 (set (reg:SI 1 dx [1285])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1161 1160 1162 43 (set (reg:DI 1 dx [orig:643 _557 ] [643])
        (sign_extend:DI (reg:SI 1 dx [1285]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1162 1161 1163 43 (parallel [
            (set (reg:DI 2 cx [orig:644 _558 ] [644])
                (mult:DI (reg:DI 1 dx [orig:643 _557 ] [643])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1163 1162 1164 43 (set (reg:SI 1 dx [1286])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1164 1163 1165 43 (parallel [
            (set (reg:SI 1 dx [orig:645 _559 ] [645])
                (plus:SI (reg:SI 1 dx [1286])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1165 1164 1166 43 (set (reg:DI 1 dx [orig:646 _560 ] [646])
        (sign_extend:DI (reg:SI 1 dx [orig:645 _559 ] [645]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1166 1165 1167 43 (parallel [
            (set (reg:DI 1 dx [orig:647 _561 ] [647])
                (mult:DI (reg:DI 1 dx [orig:646 _560 ] [646])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1167 1166 1168 43 (parallel [
            (set (reg:DI 2 cx [orig:648 _562 ] [648])
                (plus:DI (reg:DI 2 cx [orig:644 _558 ] [644])
                    (reg:DI 1 dx [orig:647 _561 ] [647])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1168 1167 1169 43 (set (reg:SI 1 dx [1287])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1169 1168 1170 43 (set (reg:DI 1 dx [orig:649 _563 ] [649])
        (sign_extend:DI (reg:SI 1 dx [1287]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1170 1169 1171 43 (parallel [
            (set (reg:DI 1 dx [orig:650 _564 ] [650])
                (plus:DI (reg:DI 1 dx [orig:649 _563 ] [649])
                    (reg:DI 2 cx [orig:648 _562 ] [648])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1171 1170 1172 43 (parallel [
            (set (reg:DI 2 cx [orig:651 _565 ] [651])
                (plus:DI (reg:DI 1 dx [orig:650 _564 ] [650])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1172 1171 1173 43 (set (reg/f:DI 1 dx [1288])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":197 85 {*movdi_internal}
     (nil))
(insn 1173 1172 1174 43 (parallel [
            (set (reg:DI 2 cx [1289])
                (plus:DI (reg:DI 2 cx [orig:651 _565 ] [651])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1174 1173 1175 43 (set (reg:SF 21 xmm0 [orig:652 _566 ] [652])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1289])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1288])) [2 extra.zint S4 A32])) "CALHEL.f":197 131 {*movsf_internal}
     (nil))
(insn 1175 1174 1176 43 (set (reg:SF 22 xmm1 [orig:653 _567 ] [653])
        (plus:SF (reg:SF 22 xmm1 [orig:642 _556 ] [642])
            (reg:SF 21 xmm0 [orig:652 _566 ] [652]))) "CALHEL.f":197 838 {*fop_sf_comm}
     (nil))
(insn 1176 1175 1177 43 (set (reg:SI 1 dx [1290])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1177 1176 1178 43 (parallel [
            (set (reg:SI 1 dx [orig:654 _568 ] [654])
                (plus:SI (reg:SI 1 dx [1290])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1178 1177 1179 43 (set (reg:DI 1 dx [orig:655 _569 ] [655])
        (sign_extend:DI (reg:SI 1 dx [orig:654 _568 ] [654]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1179 1178 1180 43 (parallel [
            (set (reg:DI 2 cx [orig:656 _570 ] [656])
                (mult:DI (reg:DI 1 dx [orig:655 _569 ] [655])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1180 1179 1181 43 (set (reg:SI 1 dx [1291])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1181 1180 1182 43 (parallel [
            (set (reg:SI 1 dx [orig:657 _571 ] [657])
                (plus:SI (reg:SI 1 dx [1291])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1182 1181 1183 43 (set (reg:DI 1 dx [orig:658 _572 ] [658])
        (sign_extend:DI (reg:SI 1 dx [orig:657 _571 ] [657]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1183 1182 1184 43 (parallel [
            (set (reg:DI 1 dx [orig:659 _573 ] [659])
                (mult:DI (reg:DI 1 dx [orig:658 _572 ] [658])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1184 1183 1185 43 (parallel [
            (set (reg:DI 2 cx [orig:660 _574 ] [660])
                (plus:DI (reg:DI 2 cx [orig:656 _570 ] [656])
                    (reg:DI 1 dx [orig:659 _573 ] [659])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1185 1184 1186 43 (set (reg:SI 1 dx [1292])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1186 1185 1187 43 (set (reg:DI 1 dx [orig:661 _575 ] [661])
        (sign_extend:DI (reg:SI 1 dx [1292]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1187 1186 1188 43 (parallel [
            (set (reg:DI 1 dx [orig:662 _576 ] [662])
                (plus:DI (reg:DI 1 dx [orig:661 _575 ] [661])
                    (reg:DI 2 cx [orig:660 _574 ] [660])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1188 1187 1189 43 (parallel [
            (set (reg:DI 2 cx [orig:663 _577 ] [663])
                (plus:DI (reg:DI 1 dx [orig:662 _576 ] [662])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1189 1188 1190 43 (set (reg/f:DI 1 dx [1293])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":197 85 {*movdi_internal}
     (nil))
(insn 1190 1189 1191 43 (parallel [
            (set (reg:DI 2 cx [1294])
                (plus:DI (reg:DI 2 cx [orig:663 _577 ] [663])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1191 1190 1192 43 (set (reg:SF 21 xmm0 [orig:664 _578 ] [664])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1294])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1293])) [2 extra.zint S4 A32])) "CALHEL.f":197 131 {*movsf_internal}
     (nil))
(insn 1192 1191 1193 43 (set (reg:SF 22 xmm1 [orig:665 _579 ] [665])
        (plus:SF (reg:SF 22 xmm1 [orig:653 _567 ] [653])
            (reg:SF 21 xmm0 [orig:664 _578 ] [664]))) "CALHEL.f":197 838 {*fop_sf_comm}
     (nil))
(insn 1193 1192 1194 43 (set (reg:SI 1 dx [1295])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1194 1193 1195 43 (set (reg:DI 1 dx [orig:666 _580 ] [666])
        (sign_extend:DI (reg:SI 1 dx [1295]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1195 1194 1196 43 (parallel [
            (set (reg:DI 2 cx [orig:667 _581 ] [667])
                (mult:DI (reg:DI 1 dx [orig:666 _580 ] [666])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1196 1195 1197 43 (set (reg:SI 1 dx [1296])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1197 1196 1198 43 (parallel [
            (set (reg:SI 1 dx [orig:668 _582 ] [668])
                (plus:SI (reg:SI 1 dx [1296])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1198 1197 1199 43 (set (reg:DI 1 dx [orig:669 _583 ] [669])
        (sign_extend:DI (reg:SI 1 dx [orig:668 _582 ] [668]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1199 1198 1200 43 (parallel [
            (set (reg:DI 1 dx [orig:670 _584 ] [670])
                (mult:DI (reg:DI 1 dx [orig:669 _583 ] [669])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 349 {*muldi3_1}
     (nil))
(insn 1200 1199 1201 43 (parallel [
            (set (reg:DI 2 cx [orig:671 _585 ] [671])
                (plus:DI (reg:DI 2 cx [orig:667 _581 ] [667])
                    (reg:DI 1 dx [orig:670 _584 ] [670])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1201 1200 1202 43 (set (reg:SI 1 dx [1297])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":197 86 {*movsi_internal}
     (nil))
(insn 1202 1201 1203 43 (set (reg:DI 1 dx [orig:672 _586 ] [672])
        (sign_extend:DI (reg:SI 1 dx [1297]))) "CALHEL.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1203 1202 1204 43 (parallel [
            (set (reg:DI 1 dx [orig:673 _587 ] [673])
                (plus:DI (reg:DI 1 dx [orig:672 _586 ] [672])
                    (reg:DI 2 cx [orig:671 _585 ] [671])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1204 1203 1205 43 (parallel [
            (set (reg:DI 2 cx [orig:674 _588 ] [674])
                (plus:DI (reg:DI 1 dx [orig:673 _587 ] [673])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1205 1204 1206 43 (set (reg/f:DI 1 dx [1298])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":197 85 {*movdi_internal}
     (nil))
(insn 1206 1205 1207 43 (parallel [
            (set (reg:DI 2 cx [1299])
                (plus:DI (reg:DI 2 cx [orig:674 _588 ] [674])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":197 222 {*adddi_1}
     (nil))
(insn 1207 1206 1208 43 (set (reg:SF 21 xmm0 [orig:675 _589 ] [675])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1299])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1298])) [2 extra.zint S4 A32])) "CALHEL.f":197 131 {*movsf_internal}
     (nil))
(insn 1208 1207 1209 43 (set (reg:SF 21 xmm0 [orig:676 _590 ] [676])
        (plus:SF (reg:SF 21 xmm0 [orig:675 _589 ] [675])
            (reg:SF 22 xmm1 [orig:665 _579 ] [665]))) "CALHEL.f":197 838 {*fop_sf_comm}
     (nil))
(insn 1209 1208 1210 43 (set (reg:SF 22 xmm1 [orig:677 _591 ] [677])
        (reg:SF 21 xmm0 [orig:676 _590 ] [676])) "CALHEL.f":197 131 {*movsf_internal}
     (nil))
(insn 1210 1209 1211 43 (set (reg:SF 21 xmm0 [1301])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALHEL.f":197 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.25e-1 [0x0.8p-2])
        (nil)))
(insn 1211 1210 1212 43 (set (reg:SF 21 xmm0 [1300])
        (mult:SF (reg:SF 21 xmm0 [1301])
            (reg:SF 22 xmm1 [orig:677 _591 ] [677]))) "CALHEL.f":197 838 {*fop_sf_comm}
     (nil))
(insn 1212 1211 1213 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [2 z3+0 S4 A32])
        (reg:SF 21 xmm0 [1300])) "CALHEL.f":197 131 {*movsf_internal}
     (nil))
(insn 1213 1212 1214 43 (set (reg:SI 1 dx [1302])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1214 1213 1215 43 (set (reg:DI 1 dx [orig:678 _592 ] [678])
        (sign_extend:DI (reg:SI 1 dx [1302]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1215 1214 1216 43 (parallel [
            (set (reg:DI 2 cx [orig:679 _593 ] [679])
                (mult:DI (reg:DI 1 dx [orig:678 _592 ] [678])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1216 1215 1217 43 (set (reg:SI 1 dx [1303])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1217 1216 1218 43 (set (reg:DI 1 dx [orig:680 _594 ] [680])
        (sign_extend:DI (reg:SI 1 dx [1303]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1218 1217 1219 43 (parallel [
            (set (reg:DI 1 dx [orig:681 _595 ] [681])
                (mult:DI (reg:DI 1 dx [orig:680 _594 ] [680])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1219 1218 1220 43 (parallel [
            (set (reg:DI 2 cx [orig:682 _596 ] [682])
                (plus:DI (reg:DI 2 cx [orig:679 _593 ] [679])
                    (reg:DI 1 dx [orig:681 _595 ] [681])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1220 1219 1221 43 (set (reg:SI 1 dx [1304])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1221 1220 1222 43 (set (reg:DI 1 dx [orig:683 _597 ] [683])
        (sign_extend:DI (reg:SI 1 dx [1304]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1222 1221 1223 43 (parallel [
            (set (reg:DI 1 dx [orig:684 _598 ] [684])
                (plus:DI (reg:DI 1 dx [orig:683 _597 ] [683])
                    (reg:DI 2 cx [orig:682 _596 ] [682])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1223 1222 1224 43 (parallel [
            (set (reg:DI 2 cx [orig:685 _599 ] [685])
                (plus:DI (reg:DI 1 dx [orig:684 _598 ] [684])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1224 1223 1225 43 (set (reg/f:DI 1 dx [1305])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":201 85 {*movdi_internal}
     (nil))
(insn 1225 1224 1226 43 (parallel [
            (set (reg:DI 2 cx [1306])
                (plus:DI (reg:DI 2 cx [orig:685 _599 ] [685])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1226 1225 1227 43 (set (reg:SF 22 xmm1 [orig:686 _600 ] [686])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1306])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1305])) [2 extra.zint S4 A32])) "CALHEL.f":201 131 {*movsf_internal}
     (nil))
(insn 1227 1226 1228 43 (set (reg:SI 1 dx [1307])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1228 1227 1229 43 (set (reg:DI 1 dx [orig:687 _601 ] [687])
        (sign_extend:DI (reg:SI 1 dx [1307]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1229 1228 1230 43 (parallel [
            (set (reg:DI 2 cx [orig:688 _602 ] [688])
                (mult:DI (reg:DI 1 dx [orig:687 _601 ] [687])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1230 1229 1231 43 (set (reg:SI 1 dx [1308])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1231 1230 1232 43 (set (reg:DI 1 dx [orig:689 _603 ] [689])
        (sign_extend:DI (reg:SI 1 dx [1308]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1232 1231 1233 43 (parallel [
            (set (reg:DI 1 dx [orig:690 _604 ] [690])
                (mult:DI (reg:DI 1 dx [orig:689 _603 ] [689])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1233 1232 1234 43 (parallel [
            (set (reg:DI 2 cx [orig:691 _605 ] [691])
                (plus:DI (reg:DI 2 cx [orig:688 _602 ] [688])
                    (reg:DI 1 dx [orig:690 _604 ] [690])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1234 1233 1235 43 (set (reg:SI 1 dx [1309])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1235 1234 1236 43 (set (reg:DI 1 dx [orig:692 _606 ] [692])
        (sign_extend:DI (reg:SI 1 dx [1309]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1236 1235 1237 43 (parallel [
            (set (reg:DI 1 dx [orig:693 _607 ] [693])
                (plus:DI (reg:DI 1 dx [orig:692 _606 ] [692])
                    (reg:DI 2 cx [orig:691 _605 ] [691])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1237 1236 1238 43 (parallel [
            (set (reg:DI 2 cx [orig:694 _608 ] [694])
                (plus:DI (reg:DI 1 dx [orig:693 _607 ] [693])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1238 1237 1239 43 (set (reg/f:DI 1 dx [1310])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":201 85 {*movdi_internal}
     (nil))
(insn 1239 1238 1240 43 (parallel [
            (set (reg:DI 2 cx [1311])
                (plus:DI (reg:DI 2 cx [orig:694 _608 ] [694])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1240 1239 1241 43 (set (reg:SF 21 xmm0 [orig:695 _609 ] [695])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1311])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1310])) [2 extra.zint S4 A32])) "CALHEL.f":201 131 {*movsf_internal}
     (nil))
(insn 1241 1240 1242 43 (set (reg:SF 22 xmm1 [orig:696 _610 ] [696])
        (plus:SF (reg:SF 22 xmm1 [orig:686 _600 ] [686])
            (reg:SF 21 xmm0 [orig:695 _609 ] [695]))) "CALHEL.f":201 838 {*fop_sf_comm}
     (nil))
(insn 1242 1241 1243 43 (set (reg:SI 1 dx [1312])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1243 1242 1244 43 (set (reg:DI 1 dx [orig:697 _611 ] [697])
        (sign_extend:DI (reg:SI 1 dx [1312]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1244 1243 1245 43 (parallel [
            (set (reg:DI 2 cx [orig:698 _612 ] [698])
                (mult:DI (reg:DI 1 dx [orig:697 _611 ] [697])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1245 1244 1246 43 (set (reg:SI 1 dx [1313])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1246 1245 1247 43 (parallel [
            (set (reg:SI 1 dx [orig:699 _613 ] [699])
                (plus:SI (reg:SI 1 dx [1313])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1247 1246 1248 43 (set (reg:DI 1 dx [orig:700 _614 ] [700])
        (sign_extend:DI (reg:SI 1 dx [orig:699 _613 ] [699]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1248 1247 1249 43 (parallel [
            (set (reg:DI 1 dx [orig:701 _615 ] [701])
                (mult:DI (reg:DI 1 dx [orig:700 _614 ] [700])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1249 1248 1250 43 (parallel [
            (set (reg:DI 2 cx [orig:702 _616 ] [702])
                (plus:DI (reg:DI 2 cx [orig:698 _612 ] [698])
                    (reg:DI 1 dx [orig:701 _615 ] [701])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1250 1249 1251 43 (set (reg:SI 1 dx [1314])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1251 1250 1252 43 (set (reg:DI 1 dx [orig:703 _617 ] [703])
        (sign_extend:DI (reg:SI 1 dx [1314]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1252 1251 1253 43 (parallel [
            (set (reg:DI 1 dx [orig:704 _618 ] [704])
                (plus:DI (reg:DI 1 dx [orig:703 _617 ] [703])
                    (reg:DI 2 cx [orig:702 _616 ] [702])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1253 1252 1254 43 (parallel [
            (set (reg:DI 2 cx [orig:705 _619 ] [705])
                (plus:DI (reg:DI 1 dx [orig:704 _618 ] [704])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1254 1253 1255 43 (set (reg/f:DI 1 dx [1315])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":201 85 {*movdi_internal}
     (nil))
(insn 1255 1254 1256 43 (parallel [
            (set (reg:DI 2 cx [1316])
                (plus:DI (reg:DI 2 cx [orig:705 _619 ] [705])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1256 1255 1257 43 (set (reg:SF 21 xmm0 [orig:706 _620 ] [706])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1316])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1315])) [2 extra.zint S4 A32])) "CALHEL.f":201 131 {*movsf_internal}
     (nil))
(insn 1257 1256 1258 43 (set (reg:SF 22 xmm1 [orig:707 _621 ] [707])
        (plus:SF (reg:SF 22 xmm1 [orig:696 _610 ] [696])
            (reg:SF 21 xmm0 [orig:706 _620 ] [706]))) "CALHEL.f":201 838 {*fop_sf_comm}
     (nil))
(insn 1258 1257 1259 43 (set (reg:SI 1 dx [1317])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1259 1258 1260 43 (set (reg:DI 1 dx [orig:708 _622 ] [708])
        (sign_extend:DI (reg:SI 1 dx [1317]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1260 1259 1261 43 (parallel [
            (set (reg:DI 2 cx [orig:709 _623 ] [709])
                (mult:DI (reg:DI 1 dx [orig:708 _622 ] [708])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1261 1260 1262 43 (set (reg:SI 1 dx [1318])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1262 1261 1263 43 (parallel [
            (set (reg:SI 1 dx [orig:710 _624 ] [710])
                (plus:SI (reg:SI 1 dx [1318])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1263 1262 1264 43 (set (reg:DI 1 dx [orig:711 _625 ] [711])
        (sign_extend:DI (reg:SI 1 dx [orig:710 _624 ] [710]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1264 1263 1265 43 (parallel [
            (set (reg:DI 1 dx [orig:712 _626 ] [712])
                (mult:DI (reg:DI 1 dx [orig:711 _625 ] [711])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1265 1264 1266 43 (parallel [
            (set (reg:DI 2 cx [orig:713 _627 ] [713])
                (plus:DI (reg:DI 2 cx [orig:709 _623 ] [709])
                    (reg:DI 1 dx [orig:712 _626 ] [712])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1266 1265 1267 43 (set (reg:SI 1 dx [1319])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1267 1266 1268 43 (set (reg:DI 1 dx [orig:714 _628 ] [714])
        (sign_extend:DI (reg:SI 1 dx [1319]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1268 1267 1269 43 (parallel [
            (set (reg:DI 1 dx [orig:715 _629 ] [715])
                (plus:DI (reg:DI 1 dx [orig:714 _628 ] [714])
                    (reg:DI 2 cx [orig:713 _627 ] [713])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1269 1268 1270 43 (parallel [
            (set (reg:DI 2 cx [orig:716 _630 ] [716])
                (plus:DI (reg:DI 1 dx [orig:715 _629 ] [715])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1270 1269 1271 43 (set (reg/f:DI 1 dx [1320])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":201 85 {*movdi_internal}
     (nil))
(insn 1271 1270 1272 43 (parallel [
            (set (reg:DI 2 cx [1321])
                (plus:DI (reg:DI 2 cx [orig:716 _630 ] [716])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1272 1271 1273 43 (set (reg:SF 21 xmm0 [orig:717 _631 ] [717])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1321])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1320])) [2 extra.zint S4 A32])) "CALHEL.f":201 131 {*movsf_internal}
     (nil))
(insn 1273 1272 1274 43 (set (reg:SF 21 xmm0 [orig:718 _632 ] [718])
        (plus:SF (reg:SF 21 xmm0 [orig:717 _631 ] [717])
            (reg:SF 22 xmm1 [orig:707 _621 ] [707]))) "CALHEL.f":201 838 {*fop_sf_comm}
     (nil))
(insn 1274 1273 1275 43 (set (reg:SF 23 xmm2 [orig:719 _633 ] [719])
        (reg:SF 21 xmm0 [orig:718 _632 ] [718])) "CALHEL.f":201 131 {*movsf_internal}
     (nil))
(insn 1275 1274 1276 43 (set (reg:SI 1 dx [1322])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1276 1275 1277 43 (parallel [
            (set (reg:SI 1 dx [orig:720 _634 ] [720])
                (plus:SI (reg:SI 1 dx [1322])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1277 1276 1278 43 (set (reg:DI 1 dx [orig:721 _635 ] [721])
        (sign_extend:DI (reg:SI 1 dx [orig:720 _634 ] [720]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1278 1277 1279 43 (parallel [
            (set (reg:DI 2 cx [orig:722 _636 ] [722])
                (mult:DI (reg:DI 1 dx [orig:721 _635 ] [721])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1279 1278 1280 43 (set (reg:SI 1 dx [1323])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1280 1279 1281 43 (set (reg:DI 1 dx [orig:723 _637 ] [723])
        (sign_extend:DI (reg:SI 1 dx [1323]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1281 1280 1282 43 (parallel [
            (set (reg:DI 1 dx [orig:724 _638 ] [724])
                (mult:DI (reg:DI 1 dx [orig:723 _637 ] [723])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1282 1281 1283 43 (parallel [
            (set (reg:DI 2 cx [orig:725 _639 ] [725])
                (plus:DI (reg:DI 2 cx [orig:722 _636 ] [722])
                    (reg:DI 1 dx [orig:724 _638 ] [724])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1283 1282 1284 43 (set (reg:SI 1 dx [1324])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 iw+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1284 1283 1285 43 (set (reg:DI 1 dx [orig:726 _640 ] [726])
        (sign_extend:DI (reg:SI 1 dx [1324]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1285 1284 1286 43 (parallel [
            (set (reg:DI 1 dx [orig:727 _641 ] [727])
                (plus:DI (reg:DI 1 dx [orig:726 _640 ] [726])
                    (reg:DI 2 cx [orig:725 _639 ] [725])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1286 1285 1287 43 (parallel [
            (set (reg:DI 2 cx [orig:728 _642 ] [728])
                (plus:DI (reg:DI 1 dx [orig:727 _641 ] [727])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1287 1286 1288 43 (set (reg/f:DI 1 dx [1325])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":201 85 {*movdi_internal}
     (nil))
(insn 1288 1287 1289 43 (parallel [
            (set (reg:DI 2 cx [1326])
                (plus:DI (reg:DI 2 cx [orig:728 _642 ] [728])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1289 1288 1290 43 (set (reg:SF 22 xmm1 [orig:729 _643 ] [729])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1326])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1325])) [2 extra.zint S4 A32])) "CALHEL.f":201 131 {*movsf_internal}
     (nil))
(insn 1290 1289 1291 43 (set (reg:SI 1 dx [1327])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1291 1290 1292 43 (parallel [
            (set (reg:SI 1 dx [orig:730 _644 ] [730])
                (plus:SI (reg:SI 1 dx [1327])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1292 1291 1293 43 (set (reg:DI 1 dx [orig:731 _645 ] [731])
        (sign_extend:DI (reg:SI 1 dx [orig:730 _644 ] [730]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1293 1292 1294 43 (parallel [
            (set (reg:DI 2 cx [orig:732 _646 ] [732])
                (mult:DI (reg:DI 1 dx [orig:731 _645 ] [731])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1294 1293 1295 43 (set (reg:SI 1 dx [1328])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1295 1294 1296 43 (set (reg:DI 1 dx [orig:733 _647 ] [733])
        (sign_extend:DI (reg:SI 1 dx [1328]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1296 1295 1297 43 (parallel [
            (set (reg:DI 1 dx [orig:734 _648 ] [734])
                (mult:DI (reg:DI 1 dx [orig:733 _647 ] [733])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1297 1296 1298 43 (parallel [
            (set (reg:DI 2 cx [orig:735 _649 ] [735])
                (plus:DI (reg:DI 2 cx [orig:732 _646 ] [732])
                    (reg:DI 1 dx [orig:734 _648 ] [734])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1298 1297 1299 43 (set (reg:SI 1 dx [1329])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ie+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1299 1298 1300 43 (set (reg:DI 1 dx [orig:736 _650 ] [736])
        (sign_extend:DI (reg:SI 1 dx [1329]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1300 1299 1301 43 (parallel [
            (set (reg:DI 1 dx [orig:737 _651 ] [737])
                (plus:DI (reg:DI 1 dx [orig:736 _650 ] [736])
                    (reg:DI 2 cx [orig:735 _649 ] [735])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1301 1300 1302 43 (parallel [
            (set (reg:DI 2 cx [orig:738 _652 ] [738])
                (plus:DI (reg:DI 1 dx [orig:737 _651 ] [737])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1302 1301 1303 43 (set (reg/f:DI 1 dx [1330])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":201 85 {*movdi_internal}
     (nil))
(insn 1303 1302 1304 43 (parallel [
            (set (reg:DI 2 cx [1331])
                (plus:DI (reg:DI 2 cx [orig:738 _652 ] [738])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1304 1303 1305 43 (set (reg:SF 21 xmm0 [orig:739 _653 ] [739])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1331])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1330])) [2 extra.zint S4 A32])) "CALHEL.f":201 131 {*movsf_internal}
     (nil))
(insn 1305 1304 1306 43 (set (reg:SF 22 xmm1 [orig:740 _654 ] [740])
        (plus:SF (reg:SF 22 xmm1 [orig:729 _643 ] [729])
            (reg:SF 21 xmm0 [orig:739 _653 ] [739]))) "CALHEL.f":201 838 {*fop_sf_comm}
     (nil))
(insn 1306 1305 1307 43 (set (reg:SI 1 dx [1332])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1307 1306 1308 43 (parallel [
            (set (reg:SI 1 dx [orig:741 _655 ] [741])
                (plus:SI (reg:SI 1 dx [1332])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1308 1307 1309 43 (set (reg:DI 1 dx [orig:742 _656 ] [742])
        (sign_extend:DI (reg:SI 1 dx [orig:741 _655 ] [741]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1309 1308 1310 43 (parallel [
            (set (reg:DI 2 cx [orig:743 _657 ] [743])
                (mult:DI (reg:DI 1 dx [orig:742 _656 ] [742])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1310 1309 1311 43 (set (reg:SI 1 dx [1333])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1311 1310 1312 43 (parallel [
            (set (reg:SI 1 dx [orig:744 _658 ] [744])
                (plus:SI (reg:SI 1 dx [1333])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1312 1311 1313 43 (set (reg:DI 1 dx [orig:745 _659 ] [745])
        (sign_extend:DI (reg:SI 1 dx [orig:744 _658 ] [744]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1313 1312 1314 43 (parallel [
            (set (reg:DI 1 dx [orig:746 _660 ] [746])
                (mult:DI (reg:DI 1 dx [orig:745 _659 ] [745])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1314 1313 1315 43 (parallel [
            (set (reg:DI 2 cx [orig:747 _661 ] [747])
                (plus:DI (reg:DI 2 cx [orig:743 _657 ] [743])
                    (reg:DI 1 dx [orig:746 _660 ] [746])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1315 1314 1316 43 (set (reg:SI 1 dx [1334])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1316 1315 1317 43 (set (reg:DI 1 dx [orig:748 _662 ] [748])
        (sign_extend:DI (reg:SI 1 dx [1334]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1317 1316 1318 43 (parallel [
            (set (reg:DI 1 dx [orig:749 _663 ] [749])
                (plus:DI (reg:DI 1 dx [orig:748 _662 ] [748])
                    (reg:DI 2 cx [orig:747 _661 ] [747])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1318 1317 1319 43 (parallel [
            (set (reg:DI 2 cx [orig:750 _664 ] [750])
                (plus:DI (reg:DI 1 dx [orig:749 _663 ] [749])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1319 1318 1320 43 (set (reg/f:DI 1 dx [1335])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":201 85 {*movdi_internal}
     (nil))
(insn 1320 1319 1321 43 (parallel [
            (set (reg:DI 2 cx [1336])
                (plus:DI (reg:DI 2 cx [orig:750 _664 ] [750])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1321 1320 1322 43 (set (reg:SF 21 xmm0 [orig:751 _665 ] [751])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1336])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1335])) [2 extra.zint S4 A32])) "CALHEL.f":201 131 {*movsf_internal}
     (nil))
(insn 1322 1321 1323 43 (set (reg:SF 22 xmm1 [orig:752 _666 ] [752])
        (plus:SF (reg:SF 22 xmm1 [orig:740 _654 ] [740])
            (reg:SF 21 xmm0 [orig:751 _665 ] [751]))) "CALHEL.f":201 838 {*fop_sf_comm}
     (nil))
(insn 1323 1322 1324 43 (set (reg:SI 1 dx [1337])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1324 1323 1325 43 (parallel [
            (set (reg:SI 1 dx [orig:753 _667 ] [753])
                (plus:SI (reg:SI 1 dx [1337])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1325 1324 1326 43 (set (reg:DI 1 dx [orig:754 _668 ] [754])
        (sign_extend:DI (reg:SI 1 dx [orig:753 _667 ] [753]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1326 1325 1327 43 (parallel [
            (set (reg:DI 2 cx [orig:755 _669 ] [755])
                (mult:DI (reg:DI 1 dx [orig:754 _668 ] [754])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1327 1326 1328 43 (set (reg:SI 1 dx [1338])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1328 1327 1329 43 (parallel [
            (set (reg:SI 1 dx [orig:756 _670 ] [756])
                (plus:SI (reg:SI 1 dx [1338])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1329 1328 1330 43 (set (reg:DI 1 dx [orig:757 _671 ] [757])
        (sign_extend:DI (reg:SI 1 dx [orig:756 _670 ] [756]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1330 1329 1331 43 (parallel [
            (set (reg:DI 1 dx [orig:758 _672 ] [758])
                (mult:DI (reg:DI 1 dx [orig:757 _671 ] [757])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 349 {*muldi3_1}
     (nil))
(insn 1331 1330 1332 43 (parallel [
            (set (reg:DI 2 cx [orig:759 _673 ] [759])
                (plus:DI (reg:DI 2 cx [orig:755 _669 ] [755])
                    (reg:DI 1 dx [orig:758 _672 ] [758])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1332 1331 1333 43 (set (reg:SI 1 dx [1339])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":201 86 {*movsi_internal}
     (nil))
(insn 1333 1332 1334 43 (set (reg:DI 1 dx [orig:760 _674 ] [760])
        (sign_extend:DI (reg:SI 1 dx [1339]))) "CALHEL.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1334 1333 1335 43 (parallel [
            (set (reg:DI 1 dx [orig:761 _675 ] [761])
                (plus:DI (reg:DI 1 dx [orig:760 _674 ] [760])
                    (reg:DI 2 cx [orig:759 _673 ] [759])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1335 1334 1336 43 (parallel [
            (set (reg:DI 2 cx [orig:762 _676 ] [762])
                (plus:DI (reg:DI 1 dx [orig:761 _675 ] [761])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1336 1335 1337 43 (set (reg/f:DI 1 dx [1340])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0e17518870 extra>)) "CALHEL.f":201 85 {*movdi_internal}
     (nil))
(insn 1337 1336 1338 43 (parallel [
            (set (reg:DI 2 cx [1341])
                (plus:DI (reg:DI 2 cx [orig:762 _676 ] [762])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":201 222 {*adddi_1}
     (nil))
(insn 1338 1337 1339 43 (set (reg:SF 21 xmm0 [orig:763 _677 ] [763])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1341])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1340])) [2 extra.zint S4 A32])) "CALHEL.f":201 131 {*movsf_internal}
     (nil))
(insn 1339 1338 1341 43 (set (reg:SF 21 xmm0 [orig:764 _678 ] [764])
        (plus:SF (reg:SF 21 xmm0 [orig:763 _677 ] [763])
            (reg:SF 22 xmm1 [orig:752 _666 ] [752]))) "CALHEL.f":201 838 {*fop_sf_comm}
     (nil))
(insn 1341 1339 1697 43 (set (reg:SF 23 xmm2 [orig:719 _633 ] [719])
        (minus:SF (reg:SF 23 xmm2 [orig:719 _633 ] [719])
            (reg:SF 21 xmm0 [orig:765 _679 ] [765]))) "CALHEL.f":201 841 {*fop_sf_1}
     (nil))
(insn 1697 1341 1342 43 (set (reg:SF 21 xmm0 [orig:766 _680 ] [766])
        (reg:SF 23 xmm2 [orig:719 _633 ] [719])) "CALHEL.f":201 131 {*movsf_internal}
     (nil))
(insn 1342 1697 1343 43 (set (reg:SF 22 xmm1 [orig:767 _681 ] [767])
        (reg:SF 21 xmm0 [orig:766 _680 ] [766])) "CALHEL.f":201 131 {*movsf_internal}
     (nil))
(insn 1343 1342 1344 43 (set (reg:SF 21 xmm0 [1343])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALHEL.f":201 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 1344 1343 1345 43 (set (reg:SF 21 xmm0 [1342])
        (mult:SF (reg:SF 21 xmm0 [1343])
            (reg:SF 22 xmm1 [orig:767 _681 ] [767]))) "CALHEL.f":201 838 {*fop_sf_comm}
     (nil))
(insn 1345 1344 1346 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [2 dz+0 S4 A32])
        (reg:SF 21 xmm0 [1342])) "CALHEL.f":201 131 {*movsf_internal}
     (nil))
(insn 1346 1345 1347 43 (set (reg:SF 21 xmm0 [1345])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [2 z1+0 S4 A32])) "CALHEL.f":202 131 {*movsf_internal}
     (nil))
(insn 1347 1346 1348 43 (set (reg:SF 21 xmm0 [1344])
        (minus:SF (reg:SF 21 xmm0 [1345])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [2 z2+0 S4 A32]))) "CALHEL.f":202 841 {*fop_sf_1}
     (nil))
(insn 1348 1347 1349 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 dz1+0 S4 A32])
        (reg:SF 21 xmm0 [1344])) "CALHEL.f":202 131 {*movsf_internal}
     (nil))
(insn 1349 1348 1350 43 (set (reg:SF 21 xmm0 [1347])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [2 z2+0 S4 A32])) "CALHEL.f":203 131 {*movsf_internal}
     (nil))
(insn 1350 1349 1351 43 (set (reg:SF 21 xmm0 [1346])
        (minus:SF (reg:SF 21 xmm0 [1347])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [2 z3+0 S4 A32]))) "CALHEL.f":203 841 {*fop_sf_1}
     (nil))
(insn 1351 1350 1352 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 dz2+0 S4 A32])
        (reg:SF 21 xmm0 [1346])) "CALHEL.f":203 131 {*movsf_internal}
     (nil))
(insn 1352 1351 1353 43 (set (reg:SI 1 dx [1348])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":204 86 {*movsi_internal}
     (nil))
(insn 1353 1352 1354 43 (parallel [
            (set (reg:SI 1 dx [orig:768 _682 ] [768])
                (plus:SI (reg:SI 1 dx [1348])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1354 1353 1355 43 (set (reg:DI 1 dx [orig:769 _683 ] [769])
        (sign_extend:DI (reg:SI 1 dx [orig:768 _682 ] [768]))) "CALHEL.f":204 149 {*extendsidi2_rex64}
     (nil))
(insn 1355 1354 1356 43 (parallel [
            (set (reg:DI 2 cx [orig:770 _684 ] [770])
                (mult:DI (reg:DI 1 dx [orig:769 _683 ] [769])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 349 {*muldi3_1}
     (nil))
(insn 1356 1355 1357 43 (set (reg:SI 1 dx [1349])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":204 86 {*movsi_internal}
     (nil))
(insn 1357 1356 1358 43 (set (reg:DI 1 dx [orig:771 _685 ] [771])
        (sign_extend:DI (reg:SI 1 dx [1349]))) "CALHEL.f":204 149 {*extendsidi2_rex64}
     (nil))
(insn 1358 1357 1359 43 (parallel [
            (set (reg:DI 1 dx [orig:772 _686 ] [772])
                (mult:DI (reg:DI 1 dx [orig:771 _685 ] [771])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 349 {*muldi3_1}
     (nil))
(insn 1359 1358 1360 43 (parallel [
            (set (reg:DI 2 cx [orig:773 _687 ] [773])
                (plus:DI (reg:DI 2 cx [orig:770 _684 ] [770])
                    (reg:DI 1 dx [orig:772 _686 ] [772])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 222 {*adddi_1}
     (nil))
(insn 1360 1359 1361 43 (set (reg:SI 1 dx [1350])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":204 86 {*movsi_internal}
     (nil))
(insn 1361 1360 1362 43 (set (reg:DI 1 dx [orig:774 _688 ] [774])
        (sign_extend:DI (reg:SI 1 dx [1350]))) "CALHEL.f":204 149 {*extendsidi2_rex64}
     (nil))
(insn 1362 1361 1363 43 (parallel [
            (set (reg:DI 1 dx [orig:775 _689 ] [775])
                (plus:DI (reg:DI 1 dx [orig:774 _688 ] [774])
                    (reg:DI 2 cx [orig:773 _687 ] [773])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 222 {*adddi_1}
     (nil))
(insn 1363 1362 1364 43 (parallel [
            (set (reg:DI 2 cx [orig:776 _690 ] [776])
                (plus:DI (reg:DI 1 dx [orig:775 _689 ] [775])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 222 {*adddi_1}
     (nil))
(insn 1364 1363 1365 43 (set (reg/f:DI 1 dx [1351])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":204 85 {*movdi_internal}
     (nil))
(insn 1365 1364 1366 43 (parallel [
            (set (reg:DI 2 cx [1352])
                (plus:DI (reg:DI 2 cx [orig:776 _690 ] [776])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 222 {*adddi_1}
     (nil))
(insn 1366 1365 1367 43 (set (reg:SF 21 xmm0 [orig:777 _691 ] [777])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1352])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1351])) [2 vrbls.u S4 A32])) "CALHEL.f":204 131 {*movsf_internal}
     (nil))
(insn 1367 1366 1368 43 (set (reg:SI 1 dx [1353])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":204 86 {*movsi_internal}
     (nil))
(insn 1368 1367 1369 43 (set (reg:DI 1 dx [orig:778 _692 ] [778])
        (sign_extend:DI (reg:SI 1 dx [1353]))) "CALHEL.f":204 149 {*extendsidi2_rex64}
     (nil))
(insn 1369 1368 1370 43 (parallel [
            (set (reg:DI 2 cx [orig:779 _693 ] [779])
                (mult:DI (reg:DI 1 dx [orig:778 _692 ] [778])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 349 {*muldi3_1}
     (nil))
(insn 1370 1369 1371 43 (set (reg:SI 1 dx [1354])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":204 86 {*movsi_internal}
     (nil))
(insn 1371 1370 1372 43 (set (reg:DI 1 dx [orig:780 _694 ] [780])
        (sign_extend:DI (reg:SI 1 dx [1354]))) "CALHEL.f":204 149 {*extendsidi2_rex64}
     (nil))
(insn 1372 1371 1373 43 (parallel [
            (set (reg:DI 1 dx [orig:781 _695 ] [781])
                (mult:DI (reg:DI 1 dx [orig:780 _694 ] [780])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 349 {*muldi3_1}
     (nil))
(insn 1373 1372 1374 43 (parallel [
            (set (reg:DI 2 cx [orig:782 _696 ] [782])
                (plus:DI (reg:DI 2 cx [orig:779 _693 ] [779])
                    (reg:DI 1 dx [orig:781 _695 ] [781])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 222 {*adddi_1}
     (nil))
(insn 1374 1373 1375 43 (set (reg:SI 1 dx [1355])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":204 86 {*movsi_internal}
     (nil))
(insn 1375 1374 1376 43 (set (reg:DI 1 dx [orig:783 _697 ] [783])
        (sign_extend:DI (reg:SI 1 dx [1355]))) "CALHEL.f":204 149 {*extendsidi2_rex64}
     (nil))
(insn 1376 1375 1377 43 (parallel [
            (set (reg:DI 1 dx [orig:784 _698 ] [784])
                (plus:DI (reg:DI 1 dx [orig:783 _697 ] [783])
                    (reg:DI 2 cx [orig:782 _696 ] [782])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 222 {*adddi_1}
     (nil))
(insn 1377 1376 1378 43 (parallel [
            (set (reg:DI 2 cx [orig:785 _699 ] [785])
                (plus:DI (reg:DI 1 dx [orig:784 _698 ] [784])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 222 {*adddi_1}
     (nil))
(insn 1378 1377 1379 43 (set (reg/f:DI 1 dx [1356])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":204 85 {*movdi_internal}
     (nil))
(insn 1379 1378 1380 43 (parallel [
            (set (reg:DI 2 cx [1357])
                (plus:DI (reg:DI 2 cx [orig:785 _699 ] [785])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":204 222 {*adddi_1}
     (nil))
(insn 1380 1379 1381 43 (set (reg:SF 22 xmm1 [orig:786 _700 ] [786])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1357])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1356])) [2 vrbls.u S4 A32])) "CALHEL.f":204 131 {*movsf_internal}
     (nil))
(insn 1381 1380 1382 43 (set (reg:SF 21 xmm0 [1358])
        (minus:SF (reg:SF 21 xmm0 [orig:777 _691 ] [777])
            (reg:SF 22 xmm1 [orig:786 _700 ] [786]))) "CALHEL.f":204 841 {*fop_sf_1}
     (nil))
(insn 1382 1381 1383 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [2 du1+0 S4 A32])
        (reg:SF 21 xmm0 [1358])) "CALHEL.f":204 131 {*movsf_internal}
     (nil))
(insn 1383 1382 1384 43 (set (reg:SI 1 dx [1359])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":205 86 {*movsi_internal}
     (nil))
(insn 1384 1383 1385 43 (set (reg:DI 1 dx [orig:787 _701 ] [787])
        (sign_extend:DI (reg:SI 1 dx [1359]))) "CALHEL.f":205 149 {*extendsidi2_rex64}
     (nil))
(insn 1385 1384 1386 43 (parallel [
            (set (reg:DI 2 cx [orig:788 _702 ] [788])
                (mult:DI (reg:DI 1 dx [orig:787 _701 ] [787])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 349 {*muldi3_1}
     (nil))
(insn 1386 1385 1387 43 (set (reg:SI 1 dx [1360])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":205 86 {*movsi_internal}
     (nil))
(insn 1387 1386 1388 43 (set (reg:DI 1 dx [orig:789 _703 ] [789])
        (sign_extend:DI (reg:SI 1 dx [1360]))) "CALHEL.f":205 149 {*extendsidi2_rex64}
     (nil))
(insn 1388 1387 1389 43 (parallel [
            (set (reg:DI 1 dx [orig:790 _704 ] [790])
                (mult:DI (reg:DI 1 dx [orig:789 _703 ] [789])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 349 {*muldi3_1}
     (nil))
(insn 1389 1388 1390 43 (parallel [
            (set (reg:DI 2 cx [orig:791 _705 ] [791])
                (plus:DI (reg:DI 2 cx [orig:788 _702 ] [788])
                    (reg:DI 1 dx [orig:790 _704 ] [790])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 222 {*adddi_1}
     (nil))
(insn 1390 1389 1391 43 (set (reg:SI 1 dx [1361])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":205 86 {*movsi_internal}
     (nil))
(insn 1391 1390 1392 43 (set (reg:DI 1 dx [orig:792 _706 ] [792])
        (sign_extend:DI (reg:SI 1 dx [1361]))) "CALHEL.f":205 149 {*extendsidi2_rex64}
     (nil))
(insn 1392 1391 1393 43 (parallel [
            (set (reg:DI 1 dx [orig:793 _707 ] [793])
                (plus:DI (reg:DI 1 dx [orig:792 _706 ] [792])
                    (reg:DI 2 cx [orig:791 _705 ] [791])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 222 {*adddi_1}
     (nil))
(insn 1393 1392 1394 43 (parallel [
            (set (reg:DI 2 cx [orig:794 _708 ] [794])
                (plus:DI (reg:DI 1 dx [orig:793 _707 ] [793])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 222 {*adddi_1}
     (nil))
(insn 1394 1393 1395 43 (set (reg/f:DI 1 dx [1362])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":205 85 {*movdi_internal}
     (nil))
(insn 1395 1394 1396 43 (parallel [
            (set (reg:DI 2 cx [1363])
                (plus:DI (reg:DI 2 cx [orig:794 _708 ] [794])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 222 {*adddi_1}
     (nil))
(insn 1396 1395 1397 43 (set (reg:SF 21 xmm0 [orig:795 _709 ] [795])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1363])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1362])) [2 vrbls.u S4 A32])) "CALHEL.f":205 131 {*movsf_internal}
     (nil))
(insn 1397 1396 1398 43 (set (reg:SI 1 dx [1364])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":205 86 {*movsi_internal}
     (nil))
(insn 1398 1397 1399 43 (parallel [
            (set (reg:SI 1 dx [orig:796 _710 ] [796])
                (plus:SI (reg:SI 1 dx [1364])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1399 1398 1400 43 (set (reg:DI 1 dx [orig:797 _711 ] [797])
        (sign_extend:DI (reg:SI 1 dx [orig:796 _710 ] [796]))) "CALHEL.f":205 149 {*extendsidi2_rex64}
     (nil))
(insn 1400 1399 1401 43 (parallel [
            (set (reg:DI 2 cx [orig:798 _712 ] [798])
                (mult:DI (reg:DI 1 dx [orig:797 _711 ] [797])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 349 {*muldi3_1}
     (nil))
(insn 1401 1400 1402 43 (set (reg:SI 1 dx [1365])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":205 86 {*movsi_internal}
     (nil))
(insn 1402 1401 1403 43 (set (reg:DI 1 dx [orig:799 _713 ] [799])
        (sign_extend:DI (reg:SI 1 dx [1365]))) "CALHEL.f":205 149 {*extendsidi2_rex64}
     (nil))
(insn 1403 1402 1404 43 (parallel [
            (set (reg:DI 1 dx [orig:800 _714 ] [800])
                (mult:DI (reg:DI 1 dx [orig:799 _713 ] [799])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 349 {*muldi3_1}
     (nil))
(insn 1404 1403 1405 43 (parallel [
            (set (reg:DI 2 cx [orig:801 _715 ] [801])
                (plus:DI (reg:DI 2 cx [orig:798 _712 ] [798])
                    (reg:DI 1 dx [orig:800 _714 ] [800])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 222 {*adddi_1}
     (nil))
(insn 1405 1404 1406 43 (set (reg:SI 1 dx [1366])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":205 86 {*movsi_internal}
     (nil))
(insn 1406 1405 1407 43 (set (reg:DI 1 dx [orig:802 _716 ] [802])
        (sign_extend:DI (reg:SI 1 dx [1366]))) "CALHEL.f":205 149 {*extendsidi2_rex64}
     (nil))
(insn 1407 1406 1408 43 (parallel [
            (set (reg:DI 1 dx [orig:803 _717 ] [803])
                (plus:DI (reg:DI 1 dx [orig:802 _716 ] [802])
                    (reg:DI 2 cx [orig:801 _715 ] [801])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 222 {*adddi_1}
     (nil))
(insn 1408 1407 1409 43 (parallel [
            (set (reg:DI 2 cx [orig:804 _718 ] [804])
                (plus:DI (reg:DI 1 dx [orig:803 _717 ] [803])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 222 {*adddi_1}
     (nil))
(insn 1409 1408 1410 43 (set (reg/f:DI 1 dx [1367])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":205 85 {*movdi_internal}
     (nil))
(insn 1410 1409 1411 43 (parallel [
            (set (reg:DI 2 cx [1368])
                (plus:DI (reg:DI 2 cx [orig:804 _718 ] [804])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":205 222 {*adddi_1}
     (nil))
(insn 1411 1410 1412 43 (set (reg:SF 22 xmm1 [orig:805 _719 ] [805])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1368])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1367])) [2 vrbls.u S4 A32])) "CALHEL.f":205 131 {*movsf_internal}
     (nil))
(insn 1412 1411 1413 43 (set (reg:SF 21 xmm0 [1369])
        (minus:SF (reg:SF 21 xmm0 [orig:795 _709 ] [795])
            (reg:SF 22 xmm1 [orig:805 _719 ] [805]))) "CALHEL.f":205 841 {*fop_sf_1}
     (nil))
(insn 1413 1412 1414 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [2 du2+0 S4 A32])
        (reg:SF 21 xmm0 [1369])) "CALHEL.f":205 131 {*movsf_internal}
     (nil))
(insn 1414 1413 1415 43 (set (reg:SI 1 dx [1370])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":206 86 {*movsi_internal}
     (nil))
(insn 1415 1414 1416 43 (parallel [
            (set (reg:SI 1 dx [orig:806 _720 ] [806])
                (plus:SI (reg:SI 1 dx [1370])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1416 1415 1417 43 (set (reg:DI 1 dx [orig:807 _721 ] [807])
        (sign_extend:DI (reg:SI 1 dx [orig:806 _720 ] [806]))) "CALHEL.f":206 149 {*extendsidi2_rex64}
     (nil))
(insn 1417 1416 1418 43 (parallel [
            (set (reg:DI 2 cx [orig:808 _722 ] [808])
                (mult:DI (reg:DI 1 dx [orig:807 _721 ] [807])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 349 {*muldi3_1}
     (nil))
(insn 1418 1417 1419 43 (set (reg:SI 1 dx [1371])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":206 86 {*movsi_internal}
     (nil))
(insn 1419 1418 1420 43 (set (reg:DI 1 dx [orig:809 _723 ] [809])
        (sign_extend:DI (reg:SI 1 dx [1371]))) "CALHEL.f":206 149 {*extendsidi2_rex64}
     (nil))
(insn 1420 1419 1421 43 (parallel [
            (set (reg:DI 1 dx [orig:810 _724 ] [810])
                (mult:DI (reg:DI 1 dx [orig:809 _723 ] [809])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 349 {*muldi3_1}
     (nil))
(insn 1421 1420 1422 43 (parallel [
            (set (reg:DI 2 cx [orig:811 _725 ] [811])
                (plus:DI (reg:DI 2 cx [orig:808 _722 ] [808])
                    (reg:DI 1 dx [orig:810 _724 ] [810])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 222 {*adddi_1}
     (nil))
(insn 1422 1421 1423 43 (set (reg:SI 1 dx [1372])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":206 86 {*movsi_internal}
     (nil))
(insn 1423 1422 1424 43 (set (reg:DI 1 dx [orig:812 _726 ] [812])
        (sign_extend:DI (reg:SI 1 dx [1372]))) "CALHEL.f":206 149 {*extendsidi2_rex64}
     (nil))
(insn 1424 1423 1425 43 (parallel [
            (set (reg:DI 1 dx [orig:813 _727 ] [813])
                (plus:DI (reg:DI 1 dx [orig:812 _726 ] [812])
                    (reg:DI 2 cx [orig:811 _725 ] [811])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 222 {*adddi_1}
     (nil))
(insn 1425 1424 1426 43 (parallel [
            (set (reg:DI 2 cx [orig:814 _728 ] [814])
                (plus:DI (reg:DI 1 dx [orig:813 _727 ] [813])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 222 {*adddi_1}
     (nil))
(insn 1426 1425 1427 43 (set (reg/f:DI 1 dx [1373])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":206 85 {*movdi_internal}
     (nil))
(insn 1427 1426 1428 43 (parallel [
            (set (reg:DI 2 cx [1374])
                (plus:DI (reg:DI 2 cx [orig:814 _728 ] [814])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 222 {*adddi_1}
     (nil))
(insn 1428 1427 1429 43 (set (reg:SF 21 xmm0 [orig:815 _729 ] [815])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1374])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1373])) [2 vrbls.v S4 A32])) "CALHEL.f":206 131 {*movsf_internal}
     (nil))
(insn 1429 1428 1430 43 (set (reg:SI 1 dx [1375])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":206 86 {*movsi_internal}
     (nil))
(insn 1430 1429 1431 43 (set (reg:DI 1 dx [orig:816 _730 ] [816])
        (sign_extend:DI (reg:SI 1 dx [1375]))) "CALHEL.f":206 149 {*extendsidi2_rex64}
     (nil))
(insn 1431 1430 1432 43 (parallel [
            (set (reg:DI 2 cx [orig:817 _731 ] [817])
                (mult:DI (reg:DI 1 dx [orig:816 _730 ] [816])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 349 {*muldi3_1}
     (nil))
(insn 1432 1431 1433 43 (set (reg:SI 1 dx [1376])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":206 86 {*movsi_internal}
     (nil))
(insn 1433 1432 1434 43 (set (reg:DI 1 dx [orig:818 _732 ] [818])
        (sign_extend:DI (reg:SI 1 dx [1376]))) "CALHEL.f":206 149 {*extendsidi2_rex64}
     (nil))
(insn 1434 1433 1435 43 (parallel [
            (set (reg:DI 1 dx [orig:819 _733 ] [819])
                (mult:DI (reg:DI 1 dx [orig:818 _732 ] [818])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 349 {*muldi3_1}
     (nil))
(insn 1435 1434 1436 43 (parallel [
            (set (reg:DI 2 cx [orig:820 _734 ] [820])
                (plus:DI (reg:DI 2 cx [orig:817 _731 ] [817])
                    (reg:DI 1 dx [orig:819 _733 ] [819])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 222 {*adddi_1}
     (nil))
(insn 1436 1435 1437 43 (set (reg:SI 1 dx [1377])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":206 86 {*movsi_internal}
     (nil))
(insn 1437 1436 1438 43 (set (reg:DI 1 dx [orig:821 _735 ] [821])
        (sign_extend:DI (reg:SI 1 dx [1377]))) "CALHEL.f":206 149 {*extendsidi2_rex64}
     (nil))
(insn 1438 1437 1439 43 (parallel [
            (set (reg:DI 1 dx [orig:822 _736 ] [822])
                (plus:DI (reg:DI 1 dx [orig:821 _735 ] [821])
                    (reg:DI 2 cx [orig:820 _734 ] [820])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 222 {*adddi_1}
     (nil))
(insn 1439 1438 1440 43 (parallel [
            (set (reg:DI 2 cx [orig:823 _737 ] [823])
                (plus:DI (reg:DI 1 dx [orig:822 _736 ] [822])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 222 {*adddi_1}
     (nil))
(insn 1440 1439 1441 43 (set (reg/f:DI 1 dx [1378])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":206 85 {*movdi_internal}
     (nil))
(insn 1441 1440 1442 43 (parallel [
            (set (reg:DI 2 cx [1379])
                (plus:DI (reg:DI 2 cx [orig:823 _737 ] [823])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":206 222 {*adddi_1}
     (nil))
(insn 1442 1441 1443 43 (set (reg:SF 22 xmm1 [orig:824 _738 ] [824])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1379])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1378])) [2 vrbls.v S4 A32])) "CALHEL.f":206 131 {*movsf_internal}
     (nil))
(insn 1443 1442 1444 43 (set (reg:SF 21 xmm0 [1380])
        (minus:SF (reg:SF 21 xmm0 [orig:815 _729 ] [815])
            (reg:SF 22 xmm1 [orig:824 _738 ] [824]))) "CALHEL.f":206 841 {*fop_sf_1}
     (nil))
(insn 1444 1443 1445 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 dv1+0 S4 A32])
        (reg:SF 21 xmm0 [1380])) "CALHEL.f":206 131 {*movsf_internal}
     (nil))
(insn 1445 1444 1446 43 (set (reg:SI 1 dx [1381])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":207 86 {*movsi_internal}
     (nil))
(insn 1446 1445 1447 43 (set (reg:DI 1 dx [orig:825 _739 ] [825])
        (sign_extend:DI (reg:SI 1 dx [1381]))) "CALHEL.f":207 149 {*extendsidi2_rex64}
     (nil))
(insn 1447 1446 1448 43 (parallel [
            (set (reg:DI 2 cx [orig:826 _740 ] [826])
                (mult:DI (reg:DI 1 dx [orig:825 _739 ] [825])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 349 {*muldi3_1}
     (nil))
(insn 1448 1447 1449 43 (set (reg:SI 1 dx [1382])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":207 86 {*movsi_internal}
     (nil))
(insn 1449 1448 1450 43 (set (reg:DI 1 dx [orig:827 _741 ] [827])
        (sign_extend:DI (reg:SI 1 dx [1382]))) "CALHEL.f":207 149 {*extendsidi2_rex64}
     (nil))
(insn 1450 1449 1451 43 (parallel [
            (set (reg:DI 1 dx [orig:828 _742 ] [828])
                (mult:DI (reg:DI 1 dx [orig:827 _741 ] [827])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 349 {*muldi3_1}
     (nil))
(insn 1451 1450 1452 43 (parallel [
            (set (reg:DI 2 cx [orig:829 _743 ] [829])
                (plus:DI (reg:DI 2 cx [orig:826 _740 ] [826])
                    (reg:DI 1 dx [orig:828 _742 ] [828])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 222 {*adddi_1}
     (nil))
(insn 1452 1451 1453 43 (set (reg:SI 1 dx [1383])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":207 86 {*movsi_internal}
     (nil))
(insn 1453 1452 1454 43 (set (reg:DI 1 dx [orig:830 _744 ] [830])
        (sign_extend:DI (reg:SI 1 dx [1383]))) "CALHEL.f":207 149 {*extendsidi2_rex64}
     (nil))
(insn 1454 1453 1455 43 (parallel [
            (set (reg:DI 1 dx [orig:831 _745 ] [831])
                (plus:DI (reg:DI 1 dx [orig:830 _744 ] [830])
                    (reg:DI 2 cx [orig:829 _743 ] [829])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 222 {*adddi_1}
     (nil))
(insn 1455 1454 1456 43 (parallel [
            (set (reg:DI 2 cx [orig:832 _746 ] [832])
                (plus:DI (reg:DI 1 dx [orig:831 _745 ] [831])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 222 {*adddi_1}
     (nil))
(insn 1456 1455 1457 43 (set (reg/f:DI 1 dx [1384])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":207 85 {*movdi_internal}
     (nil))
(insn 1457 1456 1458 43 (parallel [
            (set (reg:DI 2 cx [1385])
                (plus:DI (reg:DI 2 cx [orig:832 _746 ] [832])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 222 {*adddi_1}
     (nil))
(insn 1458 1457 1459 43 (set (reg:SF 21 xmm0 [orig:833 _747 ] [833])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1385])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1384])) [2 vrbls.v S4 A32])) "CALHEL.f":207 131 {*movsf_internal}
     (nil))
(insn 1459 1458 1460 43 (set (reg:SI 1 dx [1386])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":207 86 {*movsi_internal}
     (nil))
(insn 1460 1459 1461 43 (parallel [
            (set (reg:SI 1 dx [orig:834 _748 ] [834])
                (plus:SI (reg:SI 1 dx [1386])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1461 1460 1462 43 (set (reg:DI 1 dx [orig:835 _749 ] [835])
        (sign_extend:DI (reg:SI 1 dx [orig:834 _748 ] [834]))) "CALHEL.f":207 149 {*extendsidi2_rex64}
     (nil))
(insn 1462 1461 1463 43 (parallel [
            (set (reg:DI 2 cx [orig:836 _750 ] [836])
                (mult:DI (reg:DI 1 dx [orig:835 _749 ] [835])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 349 {*muldi3_1}
     (nil))
(insn 1463 1462 1464 43 (set (reg:SI 1 dx [1387])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":207 86 {*movsi_internal}
     (nil))
(insn 1464 1463 1465 43 (set (reg:DI 1 dx [orig:837 _751 ] [837])
        (sign_extend:DI (reg:SI 1 dx [1387]))) "CALHEL.f":207 149 {*extendsidi2_rex64}
     (nil))
(insn 1465 1464 1466 43 (parallel [
            (set (reg:DI 1 dx [orig:838 _752 ] [838])
                (mult:DI (reg:DI 1 dx [orig:837 _751 ] [837])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 349 {*muldi3_1}
     (nil))
(insn 1466 1465 1467 43 (parallel [
            (set (reg:DI 2 cx [orig:839 _753 ] [839])
                (plus:DI (reg:DI 2 cx [orig:836 _750 ] [836])
                    (reg:DI 1 dx [orig:838 _752 ] [838])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 222 {*adddi_1}
     (nil))
(insn 1467 1466 1468 43 (set (reg:SI 1 dx [1388])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":207 86 {*movsi_internal}
     (nil))
(insn 1468 1467 1469 43 (set (reg:DI 1 dx [orig:840 _754 ] [840])
        (sign_extend:DI (reg:SI 1 dx [1388]))) "CALHEL.f":207 149 {*extendsidi2_rex64}
     (nil))
(insn 1469 1468 1470 43 (parallel [
            (set (reg:DI 1 dx [orig:841 _755 ] [841])
                (plus:DI (reg:DI 1 dx [orig:840 _754 ] [840])
                    (reg:DI 2 cx [orig:839 _753 ] [839])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 222 {*adddi_1}
     (nil))
(insn 1470 1469 1471 43 (parallel [
            (set (reg:DI 2 cx [orig:842 _756 ] [842])
                (plus:DI (reg:DI 1 dx [orig:841 _755 ] [841])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 222 {*adddi_1}
     (nil))
(insn 1471 1470 1472 43 (set (reg/f:DI 1 dx [1389])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":207 85 {*movdi_internal}
     (nil))
(insn 1472 1471 1473 43 (parallel [
            (set (reg:DI 2 cx [1390])
                (plus:DI (reg:DI 2 cx [orig:842 _756 ] [842])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":207 222 {*adddi_1}
     (nil))
(insn 1473 1472 1474 43 (set (reg:SF 22 xmm1 [orig:843 _757 ] [843])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1390])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1389])) [2 vrbls.v S4 A32])) "CALHEL.f":207 131 {*movsf_internal}
     (nil))
(insn 1474 1473 1475 43 (set (reg:SF 21 xmm0 [1391])
        (minus:SF (reg:SF 21 xmm0 [orig:833 _747 ] [833])
            (reg:SF 22 xmm1 [orig:843 _757 ] [843]))) "CALHEL.f":207 841 {*fop_sf_1}
     (nil))
(insn 1475 1474 1476 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 dv2+0 S4 A32])
        (reg:SF 21 xmm0 [1391])) "CALHEL.f":207 131 {*movsf_internal}
     (nil))
(insn 1476 1475 1477 43 (set (reg:SI 1 dx [1392])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1477 1476 1478 43 (set (reg:DI 1 dx [orig:844 _758 ] [844])
        (sign_extend:DI (reg:SI 1 dx [1392]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1478 1477 1479 43 (parallel [
            (set (reg:DI 2 cx [orig:845 _759 ] [845])
                (mult:DI (reg:DI 1 dx [orig:844 _758 ] [844])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 349 {*muldi3_1}
     (nil))
(insn 1479 1478 1480 43 (set (reg:SI 1 dx [1393])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1480 1479 1481 43 (set (reg:DI 1 dx [orig:846 _760 ] [846])
        (sign_extend:DI (reg:SI 1 dx [1393]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1481 1480 1482 43 (parallel [
            (set (reg:DI 1 dx [orig:847 _761 ] [847])
                (mult:DI (reg:DI 1 dx [orig:846 _760 ] [846])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 349 {*muldi3_1}
     (nil))
(insn 1482 1481 1483 43 (parallel [
            (set (reg:DI 2 cx [orig:848 _762 ] [848])
                (plus:DI (reg:DI 2 cx [orig:845 _759 ] [845])
                    (reg:DI 1 dx [orig:847 _761 ] [847])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1483 1482 1484 43 (set (reg:SI 1 dx [1394])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1484 1483 1485 43 (set (reg:DI 1 dx [orig:849 _763 ] [849])
        (sign_extend:DI (reg:SI 1 dx [1394]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1485 1484 1486 43 (parallel [
            (set (reg:DI 1 dx [orig:850 _764 ] [850])
                (plus:DI (reg:DI 1 dx [orig:849 _763 ] [849])
                    (reg:DI 2 cx [orig:848 _762 ] [848])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1486 1485 1487 43 (parallel [
            (set (reg:DI 2 cx [orig:851 _765 ] [851])
                (plus:DI (reg:DI 1 dx [orig:850 _764 ] [850])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1487 1486 1488 43 (set (reg/f:DI 1 dx [1395])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":212 85 {*movdi_internal}
     (nil))
(insn 1488 1487 1489 43 (parallel [
            (set (reg:DI 2 cx [1396])
                (plus:DI (reg:DI 2 cx [orig:851 _765 ] [851])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1489 1488 1490 43 (set (reg:SF 21 xmm0 [orig:852 _766 ] [852])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1396])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1395])) [2 vrbls.v S4 A32])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1490 1489 1491 43 (set (reg:SI 1 dx [1397])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1491 1490 1492 43 (set (reg:DI 1 dx [orig:853 _767 ] [853])
        (sign_extend:DI (reg:SI 1 dx [1397]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1492 1491 1493 43 (parallel [
            (set (reg:DI 2 cx [orig:854 _768 ] [854])
                (mult:DI (reg:DI 1 dx [orig:853 _767 ] [853])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 349 {*muldi3_1}
     (nil))
(insn 1493 1492 1494 43 (set (reg:SI 1 dx [1398])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1494 1493 1495 43 (set (reg:DI 1 dx [orig:855 _769 ] [855])
        (sign_extend:DI (reg:SI 1 dx [1398]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1495 1494 1496 43 (parallel [
            (set (reg:DI 1 dx [orig:856 _770 ] [856])
                (plus:DI (reg:DI 1 dx [orig:855 _769 ] [855])
                    (reg:DI 2 cx [orig:854 _768 ] [854])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1496 1495 1497 43 (parallel [
            (set (reg:DI 2 cx [orig:857 _771 ] [857])
                (plus:DI (reg:DI 1 dx [orig:856 _770 ] [856])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1497 1496 1498 43 (set (reg/f:DI 1 dx [1399])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 vst+0 S8 A64])) "CALHEL.f":212 85 {*movdi_internal}
     (nil))
(insn 1498 1497 1499 43 (set (reg:SF 22 xmm1 [orig:858 _772 ] [858])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:857 _771 ] [857])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1399])) [2 *vst_864(D) S4 A32])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1499 1498 1500 43 (set (reg:SF 21 xmm0 [orig:859 _773 ] [859])
        (minus:SF (reg:SF 21 xmm0 [orig:852 _766 ] [852])
            (reg:SF 22 xmm1 [orig:858 _772 ] [858]))) "CALHEL.f":212 841 {*fop_sf_1}
     (nil))
(insn 1500 1499 1501 43 (set (reg:SF 23 xmm2 [orig:860 _774 ] [860])
        (reg:SF 21 xmm0 [orig:859 _773 ] [859])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1501 1500 1502 43 (set (reg:SF 21 xmm0 [1400])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [2 du1+0 S4 A32])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1502 1501 1698 43 (set (reg:SF 21 xmm0 [orig:861 _775 ] [861])
        (div:SF (reg:SF 21 xmm0 [1400])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -100 [0xffffffffffffff9c])) [2 dz1+0 S4 A32]))) "CALHEL.f":212 841 {*fop_sf_1}
     (nil))
(insn 1698 1502 1504 43 (set (reg:SF 22 xmm1 [orig:862 _776 ] [862])
        (reg:SF 21 xmm0 [orig:862 _776 ] [862])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1504 1698 1505 43 (set (reg:SF 22 xmm1 [orig:862 _776 ] [862])
        (mult:SF (reg:SF 22 xmm1 [orig:862 _776 ] [862])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [2 dz2+0 S4 A32]))) "CALHEL.f":212 838 {*fop_sf_comm}
     (nil))
(insn 1505 1504 1506 43 (set (reg:SF 21 xmm0 [1401])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [2 du2+0 S4 A32])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1506 1505 1508 43 (set (reg:SF 21 xmm0 [orig:864 _778 ] [864])
        (div:SF (reg:SF 21 xmm0 [1401])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [2 dz2+0 S4 A32]))) "CALHEL.f":212 841 {*fop_sf_1}
     (nil))
(insn 1508 1506 1509 43 (set (reg:SF 21 xmm0 [orig:866 _780 ] [866])
        (mult:SF (reg:SF 21 xmm0 [orig:865 _779 ] [865])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -100 [0xffffffffffffff9c])) [2 dz1+0 S4 A32]))) "CALHEL.f":212 838 {*fop_sf_comm}
     (nil))
(insn 1509 1508 1511 43 (set (reg:SF 21 xmm0 [orig:867 _781 ] [867])
        (plus:SF (reg:SF 21 xmm0 [orig:866 _780 ] [866])
            (reg:SF 22 xmm1 [orig:863 _777 ] [863]))) "CALHEL.f":212 838 {*fop_sf_comm}
     (nil))
(insn 1511 1509 1512 43 (set (reg:SF 21 xmm0 [orig:869 _783 ] [869])
        (mult:SF (reg:SF 21 xmm0 [orig:868 _782 ] [868])
            (reg:SF 23 xmm2 [orig:860 _774 ] [860]))) "CALHEL.f":212 838 {*fop_sf_comm}
     (nil))
(insn 1512 1511 1513 43 (set (reg:SI 1 dx [1402])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1513 1512 1514 43 (set (reg:DI 1 dx [orig:870 _784 ] [870])
        (sign_extend:DI (reg:SI 1 dx [1402]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1514 1513 1515 43 (parallel [
            (set (reg:DI 2 cx [orig:871 _785 ] [871])
                (mult:DI (reg:DI 1 dx [orig:870 _784 ] [870])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 349 {*muldi3_1}
     (nil))
(insn 1515 1514 1516 43 (set (reg:SI 1 dx [1403])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1516 1515 1517 43 (set (reg:DI 1 dx [orig:872 _786 ] [872])
        (sign_extend:DI (reg:SI 1 dx [1403]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1517 1516 1518 43 (parallel [
            (set (reg:DI 1 dx [orig:873 _787 ] [873])
                (mult:DI (reg:DI 1 dx [orig:872 _786 ] [872])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 349 {*muldi3_1}
     (nil))
(insn 1518 1517 1519 43 (parallel [
            (set (reg:DI 2 cx [orig:874 _788 ] [874])
                (plus:DI (reg:DI 2 cx [orig:871 _785 ] [871])
                    (reg:DI 1 dx [orig:873 _787 ] [873])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1519 1518 1520 43 (set (reg:SI 1 dx [1404])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1520 1519 1521 43 (set (reg:DI 1 dx [orig:875 _789 ] [875])
        (sign_extend:DI (reg:SI 1 dx [1404]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1521 1520 1522 43 (parallel [
            (set (reg:DI 1 dx [orig:876 _790 ] [876])
                (plus:DI (reg:DI 1 dx [orig:875 _789 ] [875])
                    (reg:DI 2 cx [orig:874 _788 ] [874])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1522 1521 1523 43 (parallel [
            (set (reg:DI 2 cx [orig:877 _791 ] [877])
                (plus:DI (reg:DI 1 dx [orig:876 _790 ] [876])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1523 1522 1524 43 (set (reg/f:DI 1 dx [1405])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0e17534cf0 vrbls>)) "CALHEL.f":212 85 {*movdi_internal}
     (nil))
(insn 1524 1523 1525 43 (parallel [
            (set (reg:DI 2 cx [1406])
                (plus:DI (reg:DI 2 cx [orig:877 _791 ] [877])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1525 1524 1526 43 (set (reg:SF 22 xmm1 [orig:878 _792 ] [878])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1406])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1405])) [2 vrbls.u S4 A32])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1526 1525 1527 43 (set (reg:SI 1 dx [1407])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1527 1526 1528 43 (set (reg:DI 1 dx [orig:879 _793 ] [879])
        (sign_extend:DI (reg:SI 1 dx [1407]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1528 1527 1529 43 (parallel [
            (set (reg:DI 2 cx [orig:880 _794 ] [880])
                (mult:DI (reg:DI 1 dx [orig:879 _793 ] [879])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 349 {*muldi3_1}
     (nil))
(insn 1529 1528 1530 43 (set (reg:SI 1 dx [1408])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1530 1529 1531 43 (set (reg:DI 1 dx [orig:881 _795 ] [881])
        (sign_extend:DI (reg:SI 1 dx [1408]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1531 1530 1532 43 (parallel [
            (set (reg:DI 1 dx [orig:882 _796 ] [882])
                (plus:DI (reg:DI 1 dx [orig:881 _795 ] [881])
                    (reg:DI 2 cx [orig:880 _794 ] [880])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1532 1531 1533 43 (parallel [
            (set (reg:DI 2 cx [orig:883 _797 ] [883])
                (plus:DI (reg:DI 1 dx [orig:882 _796 ] [882])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1533 1532 1534 43 (set (reg/f:DI 1 dx [1409])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 ust+0 S8 A64])) "CALHEL.f":212 85 {*movdi_internal}
     (nil))
(insn 1534 1533 1535 43 (set (reg:SF 23 xmm2 [orig:884 _798 ] [884])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:883 _797 ] [883])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1409])) [2 *ust_862(D) S4 A32])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1535 1534 1536 43 (set (reg:SF 22 xmm1 [orig:885 _799 ] [885])
        (minus:SF (reg:SF 22 xmm1 [orig:878 _792 ] [878])
            (reg:SF 23 xmm2 [orig:884 _798 ] [884]))) "CALHEL.f":212 841 {*fop_sf_1}
     (nil))
(insn 1536 1535 1537 43 (set (reg:SF 24 xmm3 [orig:886 _800 ] [886])
        (reg:SF 22 xmm1 [orig:885 _799 ] [885])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1537 1536 1538 43 (set (reg:SF 22 xmm1 [1410])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 dv1+0 S4 A32])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1538 1537 1700 43 (set (reg:SF 22 xmm1 [orig:887 _801 ] [887])
        (div:SF (reg:SF 22 xmm1 [1410])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -100 [0xffffffffffffff9c])) [2 dz1+0 S4 A32]))) "CALHEL.f":212 841 {*fop_sf_1}
     (nil))
(insn 1700 1538 1540 43 (set (reg:SF 23 xmm2 [orig:888 _802 ] [888])
        (reg:SF 22 xmm1 [orig:888 _802 ] [888])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1540 1700 1541 43 (set (reg:SF 23 xmm2 [orig:888 _802 ] [888])
        (mult:SF (reg:SF 23 xmm2 [orig:888 _802 ] [888])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [2 dz2+0 S4 A32]))) "CALHEL.f":212 838 {*fop_sf_comm}
     (nil))
(insn 1541 1540 1542 43 (set (reg:SF 22 xmm1 [1411])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 dv2+0 S4 A32])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1542 1541 1544 43 (set (reg:SF 22 xmm1 [orig:890 _804 ] [890])
        (div:SF (reg:SF 22 xmm1 [1411])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [2 dz2+0 S4 A32]))) "CALHEL.f":212 841 {*fop_sf_1}
     (nil))
(insn 1544 1542 1545 43 (set (reg:SF 22 xmm1 [orig:892 _806 ] [892])
        (mult:SF (reg:SF 22 xmm1 [orig:891 _805 ] [891])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -100 [0xffffffffffffff9c])) [2 dz1+0 S4 A32]))) "CALHEL.f":212 838 {*fop_sf_comm}
     (nil))
(insn 1545 1544 1547 43 (set (reg:SF 22 xmm1 [orig:893 _807 ] [893])
        (plus:SF (reg:SF 22 xmm1 [orig:892 _806 ] [892])
            (reg:SF 23 xmm2 [orig:889 _803 ] [889]))) "CALHEL.f":212 838 {*fop_sf_comm}
     (nil))
(insn 1547 1545 1548 43 (set (reg:SF 22 xmm1 [orig:895 _809 ] [895])
        (mult:SF (reg:SF 22 xmm1 [orig:894 _808 ] [894])
            (reg:SF 24 xmm3 [orig:886 _800 ] [886]))) "CALHEL.f":212 838 {*fop_sf_comm}
     (nil))
(insn 1548 1547 1550 43 (set (reg:SF 21 xmm0 [orig:896 _810 ] [896])
        (minus:SF (reg:SF 21 xmm0 [orig:869 _783 ] [869])
            (reg:SF 22 xmm1 [orig:895 _809 ] [895]))) "CALHEL.f":212 841 {*fop_sf_1}
     (nil))
(insn 1550 1548 1551 43 (set (reg:SF 21 xmm0 [orig:898 _812 ] [898])
        (mult:SF (reg:SF 21 xmm0 [orig:897 _811 ] [897])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])) [2 dz+0 S4 A32]))) "CALHEL.f":212 838 {*fop_sf_comm}
     (nil))
(insn 1551 1550 1552 43 (set (reg:SF 22 xmm1 [1412])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 dz1+0 S4 A32])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1552 1551 1554 43 (set (reg:SF 22 xmm1 [orig:899 _813 ] [899])
        (plus:SF (reg:SF 22 xmm1 [1412])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [2 dz2+0 S4 A32]))) "CALHEL.f":212 838 {*fop_sf_comm}
     (nil))
(insn 1554 1552 1703 43 (set (reg:SF 21 xmm0 [orig:898 _812 ] [898])
        (div:SF (reg:SF 21 xmm0 [orig:898 _812 ] [898])
            (reg:SF 22 xmm1 [orig:900 _814 ] [900]))) "CALHEL.f":212 841 {*fop_sf_1}
     (nil))
(insn 1703 1554 1555 43 (set (reg:SF 22 xmm1 [orig:901 _815 ] [901])
        (reg:SF 21 xmm0 [orig:898 _812 ] [898])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1555 1703 1556 43 (set (reg:SI 1 dx [1413])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1556 1555 1557 43 (set (reg:DI 1 dx [orig:902 _816 ] [902])
        (sign_extend:DI (reg:SI 1 dx [1413]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1557 1556 1558 43 (parallel [
            (set (reg:DI 2 cx [orig:903 _817 ] [903])
                (mult:DI (reg:DI 1 dx [orig:902 _816 ] [902])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 349 {*muldi3_1}
     (nil))
(insn 1558 1557 1559 43 (set (reg:SI 1 dx [1414])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1559 1558 1560 43 (set (reg:DI 1 dx [orig:904 _818 ] [904])
        (sign_extend:DI (reg:SI 1 dx [1414]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1560 1559 1561 43 (parallel [
            (set (reg:DI 1 dx [orig:905 _819 ] [905])
                (plus:DI (reg:DI 1 dx [orig:904 _818 ] [904])
                    (reg:DI 2 cx [orig:903 _817 ] [903])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1561 1560 1562 43 (parallel [
            (set (reg:DI 2 cx [orig:906 _820 ] [906])
                (plus:DI (reg:DI 1 dx [orig:905 _819 ] [905])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1562 1561 1563 43 (set (reg/f:DI 1 dx [1415])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 heli+0 S8 A64])) "CALHEL.f":212 85 {*movdi_internal}
     (nil))
(insn 1563 1562 1564 43 (set (reg:SF 21 xmm0 [orig:907 _821 ] [907])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:906 _820 ] [906])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1415])) [2 *heli_866(D) S4 A32])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
(insn 1564 1563 1565 43 (set (reg:SI 1 dx [1416])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1565 1564 1566 43 (set (reg:DI 1 dx [orig:908 _822 ] [908])
        (sign_extend:DI (reg:SI 1 dx [1416]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1566 1565 1567 43 (parallel [
            (set (reg:DI 2 cx [orig:909 _823 ] [909])
                (mult:DI (reg:DI 1 dx [orig:908 _822 ] [908])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 349 {*muldi3_1}
     (nil))
(insn 1567 1566 1568 43 (set (reg:SI 1 dx [1417])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALHEL.f":212 86 {*movsi_internal}
     (nil))
(insn 1568 1567 1569 43 (set (reg:DI 1 dx [orig:910 _824 ] [910])
        (sign_extend:DI (reg:SI 1 dx [1417]))) "CALHEL.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 1569 1568 1570 43 (parallel [
            (set (reg:DI 1 dx [orig:911 _825 ] [911])
                (plus:DI (reg:DI 1 dx [orig:910 _824 ] [910])
                    (reg:DI 2 cx [orig:909 _823 ] [909])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1570 1569 1571 43 (parallel [
            (set (reg:DI 2 cx [orig:912 _826 ] [912])
                (plus:DI (reg:DI 1 dx [orig:911 _825 ] [911])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":212 222 {*adddi_1}
     (nil))
(insn 1571 1570 1572 43 (set (reg:SF 21 xmm0 [orig:913 _827 ] [913])
        (plus:SF (reg:SF 21 xmm0 [orig:907 _821 ] [907])
            (reg:SF 22 xmm1 [orig:901 _815 ] [901]))) "CALHEL.f":212 838 {*fop_sf_comm}
     (nil))
(insn 1572 1571 1573 43 (set (reg/f:DI 1 dx [1418])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 heli+0 S8 A64])) "CALHEL.f":212 85 {*movdi_internal}
     (nil))
(insn 1573 1572 1574 43 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:912 _826 ] [912])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1418])) [2 *heli_866(D) S4 A32])
        (reg:SF 21 xmm0 [orig:913 _827 ] [913])) "CALHEL.f":212 131 {*movsf_internal}
     (nil))
;;  succ:       44 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930

;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 58, flags: (RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;;              42
;;              41
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1574 1573 1575 44 30 (nil) [2 uses])
(note 1575 1574 1576 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 1576 1575 1636 44 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":177 221 {*addsi_1}
     (nil))
(jump_insn 1636 1576 1637 44 (set (pc)
        (label_ref 1577)) "CALHEL.f":177 683 {jump}
     (nil)
 -> 1577)
;;  succ:       40 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930

(barrier 1637 1636 1673)
;; basic block 58, loop depth 0, maybe hot
;;  prev block 44, next block 45, flags: (RTL, MODIFIED)
;;  pred:       40
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1673 1637 1672 58 53 (nil) [1 uses])
(note 1672 1673 1674 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 1674 1672 1580 58 (const_int 0 [0]) "CALHEL.f":189 718 {nop}
     (nil))
;;  succ:       45 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930

;; basic block 45, loop depth 0, maybe hot
;;  prev block 58, next block 57, flags: (RTL, MODIFIED)
;;  pred:       58 [always]  (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1580 1674 1581 45 29 (nil) [0 uses])
(note 1581 1580 1582 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 1582 1581 1638 45 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":176 221 {*addsi_1}
     (nil))
(jump_insn 1638 1582 1639 45 (set (pc)
        (label_ref 1583)) "CALHEL.f":176 683 {jump}
     (nil)
 -> 1583)
;;  succ:       38 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 930

(barrier 1639 1638 1670)
;; basic block 57, loop depth 0, maybe hot
;;  prev block 45, next block 46, flags: (RTL, MODIFIED)
;;  pred:       38
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1670 1639 1669 57 52 (nil) [1 uses])
(note 1669 1670 1671 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 1671 1669 1586 57 (const_int 0 [0]) "CALHEL.f":177 718 {nop}
     (nil))
;;  succ:       46 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, maybe hot
;;  prev block 57, next block 56, flags: (RTL, MODIFIED)
;;  pred:       57 [always]  (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1586 1671 1587 46 28 (nil) [0 uses])
(note 1587 1586 1588 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 1588 1587 1640 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHEL.f":175 221 {*addsi_1}
     (nil))
(jump_insn 1640 1588 1641 46 (set (pc)
        (label_ref 1589)) "CALHEL.f":175 683 {jump}
     (nil)
 -> 1589)
;;  succ:       36 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1641 1640 1667)
;; basic block 56, loop depth 0, maybe hot
;;  prev block 46, next block 47, flags: (RTL, MODIFIED)
;;  pred:       36
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1667 1641 1666 56 51 (nil) [1 uses])
(note 1666 1667 1668 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 1668 1666 1592 56 (const_int 0 [0]) "CALHEL.f":176 718 {nop}
     (nil))
;;  succ:       47 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, maybe hot
;;  prev block 56, next block 1, flags: (RTL, MODIFIED)
;;  pred:       56 [always]  (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1592 1668 1593 47 27 (nil) [0 uses])
(note 1593 1592 1613 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 1613 1593 1675 47 (const_int 0 [0]) "CALHEL.f":221 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 1675 1613 0 NOTE_INSN_DELETED)
