
;; Function calvor (calvor_, funcdef_no=0, decl_uid=3771, cgraph_uid=0, symbol_order=0)

calvor (real(kind=4)[29631] * restrict uwnd, real(kind=4)[29631] * restrict vwnd, real(kind=4)[29631] * restrict absv)
{
  logical(kind=4) D.4071;
  logical(kind=4) D.4068;
  integer(kind=4) D.4065;
  integer(kind=4) D.4064;
  logical(kind=4) D.4062;
  logical(kind=4) D.4059;
  integer(kind=4) D.4056;
  integer(kind=4) D.4055;
  real(kind=4) uavg;
  real(kind=4) tphi;
  integer(kind=4) j;
  integer(kind=4) i;
  real(kind=4) favg;
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static real(kind=4) satdel [value-expr: options.satdel];
  static integer(kind=4) iflag [value-expr: options.iflag];
  static integer(kind=4) ioffs [value-expr: options.ioffs];
  static integer(kind=4) ksb [value-expr: options.ksb];
  static integer(kind=4) ibessl [value-expr: options.ibessl];
  static real(kind=4) spval [value-expr: options.spval];
  static real(kind=4) vtm[1125978] [value-expr: masks.vtm];
  static real(kind=4) htm[1125978] [value-expr: masks.htm];
  static real(kind=4) sice[29631] [value-expr: masks.sice];
  static real(kind=4) sm[29631] [value-expr: masks.sm];
  static real(kind=4) vbm3[29631] [value-expr: masks.vbm3];
  static real(kind=4) vbm2[29631] [value-expr: masks.vbm2];
  static real(kind=4) hbm2[29631] [value-expr: masks.hbm2];
  static integer(kind=4) nunit [value-expr: mapot.nunit];
  static integer(kind=4) iunit [value-expr: mapot.iunit];
  static integer(kind=4) munit [value-expr: mapot.munit];
  static integer(kind=4) lunit [value-expr: mapot.lunit];
  static integer(kind=4) kunit [value-expr: mapot.kunit];
  static real(kind=4) sphi0 [value-expr: mapot.sphi0];
  static real(kind=4) cphi0 [value-expr: mapot.cphi0];
  static real(kind=4) erlam0 [value-expr: mapot.erlam0];
  static real(kind=4) tshde[999999] [value-expr: mapot.tshde];
  static real(kind=4) eta[39] [value-expr: mapot.eta];
  static real(kind=4) aeta[38] [value-expr: mapot.aeta];
  static real(kind=4) deta[38] [value-expr: mapot.deta];
  static real(kind=4) alsl[22] [value-expr: mapot.alsl];
  static real(kind=4) spl[22] [value-expr: mapot.spl];
  static real(kind=4) z0slp [value-expr: mapot.z0slp];
  static real(kind=4) dislp [value-expr: mapot.dislp];
  static real(kind=4) y1p [value-expr: mapot.y1p];
  static real(kind=4) x1p [value-expr: mapot.x1p];
  static real(kind=4) dp30 [value-expr: mapot.dp30];
  static real(kind=4) cmld [value-expr: mapot.cmld];
  static real(kind=4) dphd [value-expr: mapot.dphd];
  static real(kind=4) dlmd [value-expr: mapot.dlmd];
  static real(kind=4) tph0d [value-expr: mapot.tph0d];
  static real(kind=4) tlm0d [value-expr: mapot.tlm0d];
  static real(kind=4) sbd [value-expr: mapot.sbd];
  static real(kind=4) wbd [value-expr: mapot.wbd];
  static real(kind=4) tsph [value-expr: mapot.tsph];
  static real(kind=4) pt [value-expr: mapot.pt];
  static real(kind=4) r [value-expr: mapot.r];
  static integer(kind=4) ishde[999999] [value-expr: mapot.ishde];
  static integer(kind=4) iym [value-expr: mapot.iym];
  static integer(kind=4) ixm [value-expr: mapot.ixm];
  static integer(kind=4) lsl [value-expr: mapot.lsl];
  static integer(kind=4) ivw[249] [value-expr: indx.ivw];
  static integer(kind=4) ive[249] [value-expr: indx.ive];
  static integer(kind=4) ihw[249] [value-expr: indx.ihw];
  static integer(kind=4) ihe[249] [value-expr: indx.ihe];
  static real(kind=4) ddmpv[29631] [value-expr: dynam.ddmpv];
  static real(kind=4) ddmpu[29631] [value-expr: dynam.ddmpu];
  static real(kind=4) f[29631] [value-expr: dynam.f];
  static real(kind=4) fad[29631] [value-expr: dynam.fad];
  static real(kind=4) fdiv[29631] [value-expr: dynam.fdiv];
  static real(kind=4) fcp[29631] [value-expr: dynam.fcp];
  static real(kind=4) curv[29631] [value-expr: dynam.curv];
  static real(kind=4) cpgfu[29631] [value-expr: dynam.cpgfu];
  static real(kind=4) wpdar[29631] [value-expr: dynam.wpdar];
  static real(kind=4) dx[29631] [value-expr: dynam.dx];
  static real(kind=4) emt[484] [value-expr: dynam.emt];
  static real(kind=4) em[484] [value-expr: dynam.em];
  static real(kind=4) dfl[39] [value-expr: dynam.dfl];
  static real(kind=4) etad[39] [value-expr: dynam.etad];
  static real(kind=4) f4q2[38] [value-expr: dynam.f4q2];
  static real(kind=4) aetad[38] [value-expr: dynam.aetad];
  static real(kind=4) rdeta[38] [value-expr: dynam.rdeta];
  static real(kind=4) detad[38] [value-expr: dynam.detad];
  static real(kind=4) ef4t [value-expr: dynam.ef4t];
  static real(kind=4) f4q [value-expr: dynam.f4q];
  static real(kind=4) f4d [value-expr: dynam.f4d];
  static real(kind=4) ptdyn [value-expr: dynam.ptdyn];
  static real(kind=4) rdyn [value-expr: dynam.rdyn];
  static real(kind=4) ent [value-expr: dynam.ent];
  static real(kind=4) en [value-expr: dynam.en];
  static real(kind=4) cpgfv [value-expr: dynam.cpgfv];
  static real(kind=4) dy [value-expr: dynam.dy];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static logical(kind=4) restrt [value-expr: ctlblk.restrt];
  static logical(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static logical(kind=4) run [value-expr: ctlblk.run];
  static logical(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=8) _1;
  integer(kind=8) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  integer(kind=4) _6;
  real(kind=4) _7;
  real(kind=4) _8;
  real(kind=4) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  integer(kind=8) _12;
  integer(kind=8) _13;
  integer(kind=4) _14;
  integer(kind=4) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  real(kind=4) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  integer(kind=4) _24;
  integer(kind=4) _25;
  integer(kind=8) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  real(kind=4) _29;
  real(kind=4) _30;
  integer(kind=4) _31;
  integer(kind=8) _32;
  integer(kind=8) _33;
  integer(kind=8) _34;
  integer(kind=8) _35;
  integer(kind=8) _36;
  real(kind=4) _37;
  real(kind=4) _38;
  integer(kind=4) _39;
  integer(kind=8) _40;
  integer(kind=8) _41;
  integer(kind=8) _42;
  integer(kind=8) _43;
  integer(kind=8) _44;
  real(kind=4) _45;
  real(kind=4) _46;
  real(kind=4) _47;
  integer(kind=8) _48;
  integer(kind=8) _49;
  integer(kind=8) _50;
  integer(kind=8) _51;
  integer(kind=4) _52;
  integer(kind=4) _53;
  integer(kind=8) _54;
  integer(kind=8) _55;
  integer(kind=8) _56;
  real(kind=4) _57;
  integer(kind=8) _58;
  integer(kind=8) _59;
  integer(kind=8) _60;
  integer(kind=8) _61;
  integer(kind=4) _62;
  integer(kind=4) _63;
  integer(kind=8) _64;
  integer(kind=8) _65;
  integer(kind=8) _66;
  real(kind=4) _67;
  real(kind=4) _68;
  integer(kind=4) _69;
  integer(kind=8) _70;
  integer(kind=8) _71;
  integer(kind=8) _72;
  integer(kind=8) _73;
  integer(kind=8) _74;
  real(kind=4) _75;
  real(kind=4) _76;
  integer(kind=4) _77;
  integer(kind=8) _78;
  integer(kind=8) _79;
  integer(kind=8) _80;
  integer(kind=8) _81;
  integer(kind=8) _82;
  real(kind=4) _83;
  real(kind=4) _84;
  real(kind=4) _85;
  integer(kind=8) _86;
  integer(kind=8) _87;
  integer(kind=8) _88;
  integer(kind=8) _89;
  integer(kind=4) _90;
  integer(kind=4) _91;
  integer(kind=8) _92;
  integer(kind=8) _93;
  integer(kind=8) _94;
  real(kind=4) _95;
  integer(kind=8) _96;
  integer(kind=8) _97;
  integer(kind=8) _98;
  integer(kind=8) _99;
  integer(kind=4) _100;
  integer(kind=4) _101;
  integer(kind=8) _102;
  integer(kind=8) _103;
  integer(kind=8) _104;
  real(kind=4) _105;
  real(kind=4) _106;
  real(kind=4) _107;
  integer(kind=8) _108;
  integer(kind=8) _109;
  integer(kind=8) _110;
  integer(kind=8) _111;
  integer(kind=8) _112;
  real(kind=4) _113;
  real(kind=4) _114;
  real(kind=4) _115;
  real(kind=4) _116;
  integer(kind=4) _117;
  integer(kind=8) _118;
  integer(kind=8) _119;
  integer(kind=8) _120;
  integer(kind=8) _121;
  integer(kind=8) _122;
  real(kind=4) _123;
  integer(kind=4) _124;
  integer(kind=8) _125;
  integer(kind=8) _126;
  integer(kind=8) _127;
  integer(kind=8) _128;
  integer(kind=8) _129;
  real(kind=4) _130;
  real(kind=4) _131;
  real(kind=4) _132;
  real(kind=4) _133;
  real(kind=4) _134;
  real(kind=4) _135;
  real(kind=4) _136;
  real(kind=4) _137;
  real(kind=4) _138;
  real(kind=4) _139;
  real(kind=4) _140;
  real(kind=4) _141;
  real(kind=4) _142;
  real(kind=4) _143;
  real(kind=4) _144;
  real(kind=4) _145;
  real(kind=4) _146;
  integer(kind=8) _147;
  integer(kind=8) _148;
  integer(kind=8) _149;
  integer(kind=8) _150;
  integer(kind=8) _151;
  real(kind=4) _152;
  integer(kind=8) _153;
  integer(kind=8) _154;
  integer(kind=8) _155;
  integer(kind=8) _156;
  integer(kind=8) _157;
  real(kind=4) _158;
  integer(kind=4) _168;
  integer(kind=4) _169;
  logical(kind=4) _171;
  logical(kind=4) _173;
  integer(kind=4) _181;
  integer(kind=4) _182;
  logical(kind=4) _184;
  logical(kind=4) _187;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _168 = parallel.jsta;
  _169 = parallel.jend;
  j_170 = _168;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # j_161 = PHI <j_170(2), j_177(7)>
  _171 = j_161 > _169;
  if (_171 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_172 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                6
  # i_159 = PHI <i_172(4), i_176(6)>
  _173 = i_159 > 119;
  if (_173 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _1 = (integer(kind=8)) j_161;
  _2 = _1 * 119;
  _3 = (integer(kind=8)) i_159;
  _4 = _2 + _3;
  _5 = _4 + -120;
  *absv_174(D)[_5] = 0.0;
  i_176 = i_159 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       5
  j_177 = j_161 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       3
  exch (uwnd_178(D));
  exch (&dynam.f);
  _181 = parallel.jsta_m2;
  _182 = parallel.jend_m2;
  j_183 = _181;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       8
;;                13
  # j_162 = PHI <j_183(8), j_193(13)>
  _184 = j_162 > _182;
  if (_184 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       14
;;                10

;;   basic block 10, loop depth 1
;;    pred:       9
  _6 = j_162 + -125;
  _7 = (real(kind=4)) _6;
  _8 = mapot.dphd;
  _9 = _7 * _8;
  tphi_185 = _9 * 1.7453290522098541259765625e-2;
  i_186 = 2;
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_160 = PHI <i_186(10), i_192(12)>
  _187 = i_160 > 118;
  if (_187 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       13
;;                12

;;   basic block 12, loop depth 2
;;    pred:       11
  _10 = (integer(kind=8)) j_162;
  _11 = _10 * 119;
  _12 = (integer(kind=8)) j_162;
  _13 = _12 + -1;
  _14 = indx.ihe[_13];
  _15 = i_160 + _14;
  _16 = (integer(kind=8)) _15;
  _17 = _11 + _16;
  _18 = _17 + -120;
  _19 = *uwnd_178(D)[_18];
  _20 = (integer(kind=8)) j_162;
  _21 = _20 * 119;
  _22 = (integer(kind=8)) j_162;
  _23 = _22 + -1;
  _24 = indx.ihw[_23];
  _25 = i_160 + _24;
  _26 = (integer(kind=8)) _25;
  _27 = _21 + _26;
  _28 = _27 + -120;
  _29 = *uwnd_178(D)[_28];
  _30 = _19 + _29;
  _31 = j_162 + 1;
  _32 = (integer(kind=8)) _31;
  _33 = _32 * 119;
  _34 = (integer(kind=8)) i_160;
  _35 = _33 + _34;
  _36 = _35 + -120;
  _37 = *uwnd_178(D)[_36];
  _38 = _30 + _37;
  _39 = j_162 + -1;
  _40 = (integer(kind=8)) _39;
  _41 = _40 * 119;
  _42 = (integer(kind=8)) i_160;
  _43 = _41 + _42;
  _44 = _43 + -120;
  _45 = *uwnd_178(D)[_44];
  _46 = _38 + _45;
  _47 = ((_46));
  uavg_188 = _47 * 2.5e-1;
  _48 = (integer(kind=8)) j_162;
  _49 = _48 * 119;
  _50 = (integer(kind=8)) j_162;
  _51 = _50 + -1;
  _52 = indx.ihe[_51];
  _53 = i_160 + _52;
  _54 = (integer(kind=8)) _53;
  _55 = _49 + _54;
  _56 = _55 + -120;
  _57 = dynam.f[_56];
  _58 = (integer(kind=8)) j_162;
  _59 = _58 * 119;
  _60 = (integer(kind=8)) j_162;
  _61 = _60 + -1;
  _62 = indx.ihw[_61];
  _63 = i_160 + _62;
  _64 = (integer(kind=8)) _63;
  _65 = _59 + _64;
  _66 = _65 + -120;
  _67 = dynam.f[_66];
  _68 = _57 + _67;
  _69 = j_162 + 1;
  _70 = (integer(kind=8)) _69;
  _71 = _70 * 119;
  _72 = (integer(kind=8)) i_160;
  _73 = _71 + _72;
  _74 = _73 + -120;
  _75 = dynam.f[_74];
  _76 = _68 + _75;
  _77 = j_162 + -1;
  _78 = (integer(kind=8)) _77;
  _79 = _78 * 119;
  _80 = (integer(kind=8)) i_160;
  _81 = _79 + _80;
  _82 = _81 + -120;
  _83 = dynam.f[_82];
  _84 = _76 + _83;
  _85 = ((_84));
  favg_189 = _85 * 2.5e-1;
  _86 = (integer(kind=8)) j_162;
  _87 = _86 * 119;
  _88 = (integer(kind=8)) j_162;
  _89 = _88 + -1;
  _90 = indx.ihe[_89];
  _91 = i_160 + _90;
  _92 = (integer(kind=8)) _91;
  _93 = _87 + _92;
  _94 = _93 + -120;
  _95 = *vwnd_190(D)[_94];
  _96 = (integer(kind=8)) j_162;
  _97 = _96 * 119;
  _98 = (integer(kind=8)) j_162;
  _99 = _98 + -1;
  _100 = indx.ihw[_99];
  _101 = i_160 + _100;
  _102 = (integer(kind=8)) _101;
  _103 = _97 + _102;
  _104 = _103 + -120;
  _105 = *vwnd_190(D)[_104];
  _106 = _95 - _105;
  _107 = ((_106));
  _108 = (integer(kind=8)) j_162;
  _109 = _108 * 119;
  _110 = (integer(kind=8)) i_160;
  _111 = _109 + _110;
  _112 = _111 + -120;
  _113 = dynam.dx[_112];
  _114 = _113 * 2.0e+0;
  _115 = ((_114));
  _116 = _107 / _115;
  _117 = j_162 + 1;
  _118 = (integer(kind=8)) _117;
  _119 = _118 * 119;
  _120 = (integer(kind=8)) i_160;
  _121 = _119 + _120;
  _122 = _121 + -120;
  _123 = *uwnd_178(D)[_122];
  _124 = j_162 + -1;
  _125 = (integer(kind=8)) _124;
  _126 = _125 * 119;
  _127 = (integer(kind=8)) i_160;
  _128 = _126 + _127;
  _129 = _128 + -120;
  _130 = *uwnd_178(D)[_129];
  _131 = _123 - _130;
  _132 = ((_131));
  _133 = dynam.dy;
  _134 = _133 * 2.0e+0;
  _135 = ((_134));
  _136 = _132 / _135;
  _137 = _116 - _136;
  _138 = __builtin_tanf (tphi_185);
  _139 = uavg_188 * _138;
  _140 = _139 / 6.376e+6;
  _141 = _137 + _140;
  _142 = favg_189 * 2.0e+0;
  _143 = ctlblk.dt;
  _144 = _142 / _143;
  _145 = _141 + _144;
  _146 = ((_145));
  _147 = (integer(kind=8)) j_162;
  _148 = _147 * 119;
  _149 = (integer(kind=8)) i_160;
  _150 = _148 + _149;
  _151 = _150 + -120;
  _152 = masks.hbm2[_151];
  _153 = (integer(kind=8)) j_162;
  _154 = _153 * 119;
  _155 = (integer(kind=8)) i_160;
  _156 = _154 + _155;
  _157 = _156 + -120;
  _158 = _146 * _152;
  *absv_174(D)[_157] = _158;
  i_192 = i_160 + 1;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 13, loop depth 1
;;    pred:       11
  j_193 = j_162 + 1;
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 14, loop depth 0
;;    pred:       9
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       14
<L16>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (_101 - 101 )
Partition 102 (_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )
Partition 112 (_112 - 112 )
Partition 113 (_113 - 113 )
Partition 114 (_114 - 114 )
Partition 115 (_115 - 115 )
Partition 116 (_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (_120 - 120 )
Partition 121 (_121 - 121 )
Partition 122 (_122 - 122 )
Partition 123 (_123 - 123 )
Partition 124 (_124 - 124 )
Partition 125 (_125 - 125 )
Partition 126 (_126 - 126 )
Partition 127 (_127 - 127 )
Partition 128 (_128 - 128 )
Partition 129 (_129 - 129 )
Partition 130 (_130 - 130 )
Partition 131 (_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (_133 - 133 )
Partition 134 (_134 - 134 )
Partition 135 (_135 - 135 )
Partition 136 (_136 - 136 )
Partition 137 (_137 - 137 )
Partition 138 (_138 - 138 )
Partition 139 (_139 - 139 )
Partition 140 (_140 - 140 )
Partition 141 (_141 - 141 )
Partition 142 (_142 - 142 )
Partition 143 (_143 - 143 )
Partition 144 (_144 - 144 )
Partition 145 (_145 - 145 )
Partition 146 (_146 - 146 )
Partition 147 (_147 - 147 )
Partition 148 (_148 - 148 )
Partition 149 (_149 - 149 )
Partition 150 (_150 - 150 )
Partition 151 (_151 - 151 )
Partition 152 (_152 - 152 )
Partition 153 (_153 - 153 )
Partition 154 (_154 - 154 )
Partition 155 (_155 - 155 )
Partition 156 (_156 - 156 )
Partition 157 (_157 - 157 )
Partition 158 (_158 - 158 )
Partition 159 (i_159 - 159 )
Partition 160 (i_160 - 160 )
Partition 161 (j_161 - 161 )
Partition 162 (j_162 - 162 )
Partition 168 (_168 - 168 )
Partition 169 (_169 - 169 )
Partition 170 (j_170 - 170 )
Partition 171 (_171 - 171 )
Partition 172 (i_172 - 172 )
Partition 173 (_173 - 173 )
Partition 174 (absv_174(D) - 174 )
Partition 176 (i_176 - 176 )
Partition 177 (j_177 - 177 )
Partition 178 (uwnd_178(D) - 178 )
Partition 181 (_181 - 181 )
Partition 182 (_182 - 182 )
Partition 183 (j_183 - 183 )
Partition 184 (_184 - 184 )
Partition 185 (tphi_185 - 185 )
Partition 186 (i_186 - 186 )
Partition 187 (_187 - 187 )
Partition 188 (uavg_188 - 188 )
Partition 189 (favg_189 - 189 )
Partition 190 (vwnd_190(D) - 190 )
Partition 192 (i_192 - 192 )
Partition 193 (j_193 - 193 )


Coalescible Partition map 

Partition 0, base 0 (i_159 - 159 160 172 176 186 192 )
Partition 2, base 1 (j_161 - 161 162 170 177 183 193 )
Partition 6, base 2 (absv_174(D) - 174 )
Partition 9, base 3 (uwnd_178(D) - 178 )
Partition 12, base 4 (vwnd_190(D) - 190 )


Partition map 

Partition 0 (i_159 - 159 )
Partition 1 (i_160 - 160 )
Partition 2 (j_161 - 161 )
Partition 3 (j_162 - 162 )
Partition 4 (j_170 - 170 )
Partition 5 (i_172 - 172 )
Partition 6 (absv_174(D) - 174 )
Partition 7 (i_176 - 176 )
Partition 8 (j_177 - 177 )
Partition 9 (uwnd_178(D) - 178 )
Partition 10 (j_183 - 183 )
Partition 11 (i_186 - 186 )
Partition 12 (vwnd_190(D) - 190 )
Partition 13 (i_192 - 192 )
Partition 14 (j_193 - 193 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) j_161 <-> j_170
(2147483646, 0) j_161 <-> j_177
(2147483646, 0) i_159 <-> i_172
(2147483646, 0) i_159 <-> i_176
(2147483646, 0) i_159 <-> i_160
(2147483646, 0) j_161 <-> j_162
(2147483646, 0) j_161 <-> j_183
(2147483646, 0) i_159 <-> i_186
(2147483646, 0) i_159 <-> i_192
(2147483646, 0) j_161 <-> j_193
(10000, 0) j_162 <-> j_183
(10000, 0) j_162 <-> j_193
(10000, 0) i_160 <-> i_186
(10000, 0) i_160 <-> i_192

Partition map 

Partition 0 (i_159 - 159 )
Partition 1 (i_160 - 160 )
Partition 2 (j_161 - 161 )
Partition 3 (j_162 - 162 )
Partition 4 (j_170 - 170 )
Partition 5 (i_172 - 172 )
Partition 6 (absv_174(D) - 174 )
Partition 7 (i_176 - 176 )
Partition 8 (j_177 - 177 )
Partition 9 (uwnd_178(D) - 178 )
Partition 10 (j_183 - 183 )
Partition 11 (i_186 - 186 )
Partition 12 (vwnd_190(D) - 190 )
Partition 13 (i_192 - 192 )
Partition 14 (j_193 - 193 )

Coalesce list: (161)j_161 & (170)j_170 [map: 2, 4] : Success -> 2
Coalesce list: (161)j_161 & (177)j_177 [map: 2, 8] : Success -> 2
Coalesce list: (159)i_159 & (172)i_172 [map: 0, 5] : Success -> 0
Coalesce list: (159)i_159 & (176)i_176 [map: 0, 7] : Success -> 0
Coalesce list: (159)i_159 & (160)i_160 [map: 0, 1] : Success -> 0
Coalesce list: (161)j_161 & (162)j_162 [map: 2, 3] : Success -> 2
Coalesce list: (161)j_161 & (183)j_183 [map: 2, 10] : Success -> 2
Coalesce list: (159)i_159 & (186)i_186 [map: 0, 11] : Success -> 0
Coalesce list: (159)i_159 & (192)i_192 [map: 0, 13] : Success -> 0
Coalesce list: (161)j_161 & (193)j_193 [map: 2, 14] : Success -> 2
Coalesce list: (162)j_161 & (183)j_161: Already Coalesced.
Coalesce list: (162)j_161 & (193)j_161: Already Coalesced.
Coalesce list: (160)i_159 & (186)i_159: Already Coalesced.
Coalesce list: (160)i_159 & (192)i_159: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (_72 - 72 )
Partition 72 (_73 - 73 )
Partition 73 (_74 - 74 )
Partition 74 (_75 - 75 )
Partition 75 (_76 - 76 )
Partition 76 (_77 - 77 )
Partition 77 (_78 - 78 )
Partition 78 (_79 - 79 )
Partition 79 (_80 - 80 )
Partition 80 (_81 - 81 )
Partition 81 (_82 - 82 )
Partition 82 (_83 - 83 )
Partition 83 (_84 - 84 )
Partition 84 (_85 - 85 )
Partition 85 (_86 - 86 )
Partition 86 (_87 - 87 )
Partition 87 (_88 - 88 )
Partition 88 (_89 - 89 )
Partition 89 (_90 - 90 )
Partition 90 (_91 - 91 )
Partition 91 (_92 - 92 )
Partition 92 (_93 - 93 )
Partition 93 (_94 - 94 )
Partition 94 (_95 - 95 )
Partition 95 (_96 - 96 )
Partition 96 (_97 - 97 )
Partition 97 (_98 - 98 )
Partition 98 (_99 - 99 )
Partition 99 (_100 - 100 )
Partition 100 (_101 - 101 )
Partition 101 (_102 - 102 )
Partition 102 (_103 - 103 )
Partition 103 (_104 - 104 )
Partition 104 (_105 - 105 )
Partition 105 (_106 - 106 )
Partition 106 (_107 - 107 )
Partition 107 (_108 - 108 )
Partition 108 (_109 - 109 )
Partition 109 (_110 - 110 )
Partition 110 (_111 - 111 )
Partition 111 (_112 - 112 )
Partition 112 (_113 - 113 )
Partition 113 (_114 - 114 )
Partition 114 (_115 - 115 )
Partition 115 (_116 - 116 )
Partition 116 (_117 - 117 )
Partition 117 (_118 - 118 )
Partition 118 (_119 - 119 )
Partition 119 (_120 - 120 )
Partition 120 (_121 - 121 )
Partition 121 (_122 - 122 )
Partition 122 (_123 - 123 )
Partition 123 (_124 - 124 )
Partition 124 (_125 - 125 )
Partition 125 (_126 - 126 )
Partition 126 (_127 - 127 )
Partition 127 (_128 - 128 )
Partition 128 (_129 - 129 )
Partition 129 (_130 - 130 )
Partition 130 (_131 - 131 )
Partition 131 (_132 - 132 )
Partition 132 (_133 - 133 )
Partition 133 (_134 - 134 )
Partition 134 (_135 - 135 )
Partition 135 (_136 - 136 )
Partition 136 (_137 - 137 )
Partition 137 (_138 - 138 )
Partition 138 (_139 - 139 )
Partition 139 (_140 - 140 )
Partition 140 (_141 - 141 )
Partition 141 (_142 - 142 )
Partition 142 (_143 - 143 )
Partition 143 (_144 - 144 )
Partition 144 (_145 - 145 )
Partition 145 (_146 - 146 )
Partition 146 (_147 - 147 )
Partition 147 (_148 - 148 )
Partition 148 (_149 - 149 )
Partition 149 (_150 - 150 )
Partition 150 (_151 - 151 )
Partition 151 (_152 - 152 )
Partition 152 (_153 - 153 )
Partition 153 (_154 - 154 )
Partition 154 (_155 - 155 )
Partition 155 (_156 - 156 )
Partition 156 (_157 - 157 )
Partition 157 (_158 - 158 )
Partition 158 (i_159 - 159 160 172 176 186 192 )
Partition 159 (j_161 - 161 162 170 177 183 193 )
Partition 160 (_168 - 168 )
Partition 161 (_169 - 169 )
Partition 162 (_171 - 171 )
Partition 163 (_173 - 173 )
Partition 164 (absv_174(D) - 174 )
Partition 165 (uwnd_178(D) - 178 )
Partition 166 (_181 - 181 )
Partition 167 (_182 - 182 )
Partition 168 (_184 - 184 )
Partition 169 (tphi_185 - 185 )
Partition 170 (_187 - 187 )
Partition 171 (uavg_188 - 188 )
Partition 172 (favg_189 - 189 )
Partition 173 (vwnd_190(D) - 190 )

calvor (real(kind=4)[29631] * restrict uwnd, real(kind=4)[29631] * restrict vwnd, real(kind=4)[29631] * restrict absv)
{
  logical(kind=4) D.4071;
  logical(kind=4) D.4068;
  integer(kind=4) D.4065;
  integer(kind=4) D.4064;
  logical(kind=4) D.4062;
  logical(kind=4) D.4059;
  integer(kind=4) D.4056;
  integer(kind=4) D.4055;
  real(kind=4) uavg;
  real(kind=4) tphi;
  integer(kind=4) j;
  integer(kind=4) i;
  real(kind=4) favg;
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static real(kind=4) satdel [value-expr: options.satdel];
  static integer(kind=4) iflag [value-expr: options.iflag];
  static integer(kind=4) ioffs [value-expr: options.ioffs];
  static integer(kind=4) ksb [value-expr: options.ksb];
  static integer(kind=4) ibessl [value-expr: options.ibessl];
  static real(kind=4) spval [value-expr: options.spval];
  static real(kind=4) vtm[1125978] [value-expr: masks.vtm];
  static real(kind=4) htm[1125978] [value-expr: masks.htm];
  static real(kind=4) sice[29631] [value-expr: masks.sice];
  static real(kind=4) sm[29631] [value-expr: masks.sm];
  static real(kind=4) vbm3[29631] [value-expr: masks.vbm3];
  static real(kind=4) vbm2[29631] [value-expr: masks.vbm2];
  static real(kind=4) hbm2[29631] [value-expr: masks.hbm2];
  static integer(kind=4) nunit [value-expr: mapot.nunit];
  static integer(kind=4) iunit [value-expr: mapot.iunit];
  static integer(kind=4) munit [value-expr: mapot.munit];
  static integer(kind=4) lunit [value-expr: mapot.lunit];
  static integer(kind=4) kunit [value-expr: mapot.kunit];
  static real(kind=4) sphi0 [value-expr: mapot.sphi0];
  static real(kind=4) cphi0 [value-expr: mapot.cphi0];
  static real(kind=4) erlam0 [value-expr: mapot.erlam0];
  static real(kind=4) tshde[999999] [value-expr: mapot.tshde];
  static real(kind=4) eta[39] [value-expr: mapot.eta];
  static real(kind=4) aeta[38] [value-expr: mapot.aeta];
  static real(kind=4) deta[38] [value-expr: mapot.deta];
  static real(kind=4) alsl[22] [value-expr: mapot.alsl];
  static real(kind=4) spl[22] [value-expr: mapot.spl];
  static real(kind=4) z0slp [value-expr: mapot.z0slp];
  static real(kind=4) dislp [value-expr: mapot.dislp];
  static real(kind=4) y1p [value-expr: mapot.y1p];
  static real(kind=4) x1p [value-expr: mapot.x1p];
  static real(kind=4) dp30 [value-expr: mapot.dp30];
  static real(kind=4) cmld [value-expr: mapot.cmld];
  static real(kind=4) dphd [value-expr: mapot.dphd];
  static real(kind=4) dlmd [value-expr: mapot.dlmd];
  static real(kind=4) tph0d [value-expr: mapot.tph0d];
  static real(kind=4) tlm0d [value-expr: mapot.tlm0d];
  static real(kind=4) sbd [value-expr: mapot.sbd];
  static real(kind=4) wbd [value-expr: mapot.wbd];
  static real(kind=4) tsph [value-expr: mapot.tsph];
  static real(kind=4) pt [value-expr: mapot.pt];
  static real(kind=4) r [value-expr: mapot.r];
  static integer(kind=4) ishde[999999] [value-expr: mapot.ishde];
  static integer(kind=4) iym [value-expr: mapot.iym];
  static integer(kind=4) ixm [value-expr: mapot.ixm];
  static integer(kind=4) lsl [value-expr: mapot.lsl];
  static integer(kind=4) ivw[249] [value-expr: indx.ivw];
  static integer(kind=4) ive[249] [value-expr: indx.ive];
  static integer(kind=4) ihw[249] [value-expr: indx.ihw];
  static integer(kind=4) ihe[249] [value-expr: indx.ihe];
  static real(kind=4) ddmpv[29631] [value-expr: dynam.ddmpv];
  static real(kind=4) ddmpu[29631] [value-expr: dynam.ddmpu];
  static real(kind=4) f[29631] [value-expr: dynam.f];
  static real(kind=4) fad[29631] [value-expr: dynam.fad];
  static real(kind=4) fdiv[29631] [value-expr: dynam.fdiv];
  static real(kind=4) fcp[29631] [value-expr: dynam.fcp];
  static real(kind=4) curv[29631] [value-expr: dynam.curv];
  static real(kind=4) cpgfu[29631] [value-expr: dynam.cpgfu];
  static real(kind=4) wpdar[29631] [value-expr: dynam.wpdar];
  static real(kind=4) dx[29631] [value-expr: dynam.dx];
  static real(kind=4) emt[484] [value-expr: dynam.emt];
  static real(kind=4) em[484] [value-expr: dynam.em];
  static real(kind=4) dfl[39] [value-expr: dynam.dfl];
  static real(kind=4) etad[39] [value-expr: dynam.etad];
  static real(kind=4) f4q2[38] [value-expr: dynam.f4q2];
  static real(kind=4) aetad[38] [value-expr: dynam.aetad];
  static real(kind=4) rdeta[38] [value-expr: dynam.rdeta];
  static real(kind=4) detad[38] [value-expr: dynam.detad];
  static real(kind=4) ef4t [value-expr: dynam.ef4t];
  static real(kind=4) f4q [value-expr: dynam.f4q];
  static real(kind=4) f4d [value-expr: dynam.f4d];
  static real(kind=4) ptdyn [value-expr: dynam.ptdyn];
  static real(kind=4) rdyn [value-expr: dynam.rdyn];
  static real(kind=4) ent [value-expr: dynam.ent];
  static real(kind=4) en [value-expr: dynam.en];
  static real(kind=4) cpgfv [value-expr: dynam.cpgfv];
  static real(kind=4) dy [value-expr: dynam.dy];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static logical(kind=4) restrt [value-expr: ctlblk.restrt];
  static logical(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static logical(kind=4) run [value-expr: ctlblk.run];
  static logical(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=8) _1;
  integer(kind=8) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  integer(kind=4) _6;
  real(kind=4) _7;
  real(kind=4) _8;
  real(kind=4) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  integer(kind=8) _12;
  integer(kind=8) _13;
  integer(kind=4) _14;
  integer(kind=4) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  real(kind=4) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  integer(kind=4) _24;
  integer(kind=4) _25;
  integer(kind=8) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  real(kind=4) _29;
  real(kind=4) _30;
  integer(kind=4) _31;
  integer(kind=8) _32;
  integer(kind=8) _33;
  integer(kind=8) _34;
  integer(kind=8) _35;
  integer(kind=8) _36;
  real(kind=4) _37;
  real(kind=4) _38;
  integer(kind=4) _39;
  integer(kind=8) _40;
  integer(kind=8) _41;
  integer(kind=8) _42;
  integer(kind=8) _43;
  integer(kind=8) _44;
  real(kind=4) _45;
  real(kind=4) _46;
  real(kind=4) _47;
  integer(kind=8) _48;
  integer(kind=8) _49;
  integer(kind=8) _50;
  integer(kind=8) _51;
  integer(kind=4) _52;
  integer(kind=4) _53;
  integer(kind=8) _54;
  integer(kind=8) _55;
  integer(kind=8) _56;
  real(kind=4) _57;
  integer(kind=8) _58;
  integer(kind=8) _59;
  integer(kind=8) _60;
  integer(kind=8) _61;
  integer(kind=4) _62;
  integer(kind=4) _63;
  integer(kind=8) _64;
  integer(kind=8) _65;
  integer(kind=8) _66;
  real(kind=4) _67;
  real(kind=4) _68;
  integer(kind=4) _69;
  integer(kind=8) _70;
  integer(kind=8) _71;
  integer(kind=8) _72;
  integer(kind=8) _73;
  integer(kind=8) _74;
  real(kind=4) _75;
  real(kind=4) _76;
  integer(kind=4) _77;
  integer(kind=8) _78;
  integer(kind=8) _79;
  integer(kind=8) _80;
  integer(kind=8) _81;
  integer(kind=8) _82;
  real(kind=4) _83;
  real(kind=4) _84;
  real(kind=4) _85;
  integer(kind=8) _86;
  integer(kind=8) _87;
  integer(kind=8) _88;
  integer(kind=8) _89;
  integer(kind=4) _90;
  integer(kind=4) _91;
  integer(kind=8) _92;
  integer(kind=8) _93;
  integer(kind=8) _94;
  real(kind=4) _95;
  integer(kind=8) _96;
  integer(kind=8) _97;
  integer(kind=8) _98;
  integer(kind=8) _99;
  integer(kind=4) _100;
  integer(kind=4) _101;
  integer(kind=8) _102;
  integer(kind=8) _103;
  integer(kind=8) _104;
  real(kind=4) _105;
  real(kind=4) _106;
  real(kind=4) _107;
  integer(kind=8) _108;
  integer(kind=8) _109;
  integer(kind=8) _110;
  integer(kind=8) _111;
  integer(kind=8) _112;
  real(kind=4) _113;
  real(kind=4) _114;
  real(kind=4) _115;
  real(kind=4) _116;
  integer(kind=4) _117;
  integer(kind=8) _118;
  integer(kind=8) _119;
  integer(kind=8) _120;
  integer(kind=8) _121;
  integer(kind=8) _122;
  real(kind=4) _123;
  integer(kind=4) _124;
  integer(kind=8) _125;
  integer(kind=8) _126;
  integer(kind=8) _127;
  integer(kind=8) _128;
  integer(kind=8) _129;
  real(kind=4) _130;
  real(kind=4) _131;
  real(kind=4) _132;
  real(kind=4) _133;
  real(kind=4) _134;
  real(kind=4) _135;
  real(kind=4) _136;
  real(kind=4) _137;
  real(kind=4) _138;
  real(kind=4) _139;
  real(kind=4) _140;
  real(kind=4) _141;
  real(kind=4) _142;
  real(kind=4) _143;
  real(kind=4) _144;
  real(kind=4) _145;
  real(kind=4) _146;
  integer(kind=8) _147;
  integer(kind=8) _148;
  integer(kind=8) _149;
  integer(kind=8) _150;
  integer(kind=8) _151;
  real(kind=4) _152;
  integer(kind=8) _153;
  integer(kind=8) _154;
  integer(kind=8) _155;
  integer(kind=8) _156;
  integer(kind=8) _157;
  real(kind=4) _158;
  integer(kind=4) _168;
  integer(kind=4) _169;
  logical(kind=4) _171;
  logical(kind=4) _173;
  integer(kind=4) _181;
  integer(kind=4) _182;
  logical(kind=4) _184;
  logical(kind=4) _187;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _168 = parallel.jsta;
  _169 = parallel.jend;
  j_170 = _168;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # j_161 = PHI <j_170(2), j_177(7)>
  _171 = j_161 > _169;
  if (_171 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_172 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                6
  # i_159 = PHI <i_172(4), i_176(6)>
  _173 = i_159 > 119;
  if (_173 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _1 = (integer(kind=8)) j_161;
  _2 = _1 * 119;
  _3 = (integer(kind=8)) i_159;
  _4 = _2 + _3;
  _5 = _4 + -120;
  *absv_174(D)[_5] = 0.0;
  i_176 = i_159 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       5
  j_177 = j_161 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       3
  exch (uwnd_178(D));
  exch (&dynam.f);
  _181 = parallel.jsta_m2;
  _182 = parallel.jend_m2;
  j_183 = _181;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       8
;;                13
  # j_162 = PHI <j_183(8), j_193(13)>
  _184 = j_162 > _182;
  if (_184 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       14
;;                10

;;   basic block 10, loop depth 1
;;    pred:       9
  _6 = j_162 + -125;
  _7 = (real(kind=4)) _6;
  _8 = mapot.dphd;
  _9 = _7 * _8;
  tphi_185 = _9 * 1.7453290522098541259765625e-2;
  i_186 = 2;
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                12
  # i_160 = PHI <i_186(10), i_192(12)>
  _187 = i_160 > 118;
  if (_187 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       13
;;                12

;;   basic block 12, loop depth 2
;;    pred:       11
  _10 = (integer(kind=8)) j_162;
  _11 = _10 * 119;
  _12 = (integer(kind=8)) j_162;
  _13 = _12 + -1;
  _14 = indx.ihe[_13];
  _15 = i_160 + _14;
  _16 = (integer(kind=8)) _15;
  _17 = _11 + _16;
  _18 = _17 + -120;
  _19 = *uwnd_178(D)[_18];
  _20 = (integer(kind=8)) j_162;
  _21 = _20 * 119;
  _22 = (integer(kind=8)) j_162;
  _23 = _22 + -1;
  _24 = indx.ihw[_23];
  _25 = i_160 + _24;
  _26 = (integer(kind=8)) _25;
  _27 = _21 + _26;
  _28 = _27 + -120;
  _29 = *uwnd_178(D)[_28];
  _30 = _19 + _29;
  _31 = j_162 + 1;
  _32 = (integer(kind=8)) _31;
  _33 = _32 * 119;
  _34 = (integer(kind=8)) i_160;
  _35 = _33 + _34;
  _36 = _35 + -120;
  _37 = *uwnd_178(D)[_36];
  _38 = _30 + _37;
  _39 = j_162 + -1;
  _40 = (integer(kind=8)) _39;
  _41 = _40 * 119;
  _42 = (integer(kind=8)) i_160;
  _43 = _41 + _42;
  _44 = _43 + -120;
  _45 = *uwnd_178(D)[_44];
  _46 = _38 + _45;
  _47 = ((_46));
  uavg_188 = _47 * 2.5e-1;
  _48 = (integer(kind=8)) j_162;
  _49 = _48 * 119;
  _50 = (integer(kind=8)) j_162;
  _51 = _50 + -1;
  _52 = indx.ihe[_51];
  _53 = i_160 + _52;
  _54 = (integer(kind=8)) _53;
  _55 = _49 + _54;
  _56 = _55 + -120;
  _57 = dynam.f[_56];
  _58 = (integer(kind=8)) j_162;
  _59 = _58 * 119;
  _60 = (integer(kind=8)) j_162;
  _61 = _60 + -1;
  _62 = indx.ihw[_61];
  _63 = i_160 + _62;
  _64 = (integer(kind=8)) _63;
  _65 = _59 + _64;
  _66 = _65 + -120;
  _67 = dynam.f[_66];
  _68 = _57 + _67;
  _69 = j_162 + 1;
  _70 = (integer(kind=8)) _69;
  _71 = _70 * 119;
  _72 = (integer(kind=8)) i_160;
  _73 = _71 + _72;
  _74 = _73 + -120;
  _75 = dynam.f[_74];
  _76 = _68 + _75;
  _77 = j_162 + -1;
  _78 = (integer(kind=8)) _77;
  _79 = _78 * 119;
  _80 = (integer(kind=8)) i_160;
  _81 = _79 + _80;
  _82 = _81 + -120;
  _83 = dynam.f[_82];
  _84 = _76 + _83;
  _85 = ((_84));
  favg_189 = _85 * 2.5e-1;
  _86 = (integer(kind=8)) j_162;
  _87 = _86 * 119;
  _88 = (integer(kind=8)) j_162;
  _89 = _88 + -1;
  _90 = indx.ihe[_89];
  _91 = i_160 + _90;
  _92 = (integer(kind=8)) _91;
  _93 = _87 + _92;
  _94 = _93 + -120;
  _95 = *vwnd_190(D)[_94];
  _96 = (integer(kind=8)) j_162;
  _97 = _96 * 119;
  _98 = (integer(kind=8)) j_162;
  _99 = _98 + -1;
  _100 = indx.ihw[_99];
  _101 = i_160 + _100;
  _102 = (integer(kind=8)) _101;
  _103 = _97 + _102;
  _104 = _103 + -120;
  _105 = *vwnd_190(D)[_104];
  _106 = _95 - _105;
  _107 = ((_106));
  _108 = (integer(kind=8)) j_162;
  _109 = _108 * 119;
  _110 = (integer(kind=8)) i_160;
  _111 = _109 + _110;
  _112 = _111 + -120;
  _113 = dynam.dx[_112];
  _114 = _113 * 2.0e+0;
  _115 = ((_114));
  _116 = _107 / _115;
  _117 = j_162 + 1;
  _118 = (integer(kind=8)) _117;
  _119 = _118 * 119;
  _120 = (integer(kind=8)) i_160;
  _121 = _119 + _120;
  _122 = _121 + -120;
  _123 = *uwnd_178(D)[_122];
  _124 = j_162 + -1;
  _125 = (integer(kind=8)) _124;
  _126 = _125 * 119;
  _127 = (integer(kind=8)) i_160;
  _128 = _126 + _127;
  _129 = _128 + -120;
  _130 = *uwnd_178(D)[_129];
  _131 = _123 - _130;
  _132 = ((_131));
  _133 = dynam.dy;
  _134 = _133 * 2.0e+0;
  _135 = ((_134));
  _136 = _132 / _135;
  _137 = _116 - _136;
  _138 = __builtin_tanf (tphi_185);
  _139 = uavg_188 * _138;
  _140 = _139 / 6.376e+6;
  _141 = _137 + _140;
  _142 = favg_189 * 2.0e+0;
  _143 = ctlblk.dt;
  _144 = _142 / _143;
  _145 = _141 + _144;
  _146 = ((_145));
  _147 = (integer(kind=8)) j_162;
  _148 = _147 * 119;
  _149 = (integer(kind=8)) i_160;
  _150 = _148 + _149;
  _151 = _150 + -120;
  _152 = masks.hbm2[_151];
  _153 = (integer(kind=8)) j_162;
  _154 = _153 * 119;
  _155 = (integer(kind=8)) i_160;
  _156 = _154 + _155;
  _157 = _156 + -120;
  _158 = _146 * _152;
  *absv_174(D)[_157] = _158;
  i_192 = i_160 + 1;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 13, loop depth 1
;;    pred:       11
  j_193 = j_162 + 1;
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 14, loop depth 0
;;    pred:       9
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       14
<L16>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _168 = parallel.jsta;

(insn 8 7 0 (set (reg:SI 245 [ _168 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f07ddce1750 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALVOR.f":71 -1
     (nil))

;; _169 = parallel.jend;

(insn 9 8 0 (set (reg:SI 246 [ _169 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f07ddce1750 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALVOR.f":71 -1
     (nil))

;; j_170 = _168;

(insn 10 9 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 245 [ _168 ])) "CALVOR.f":71 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _171 = j_161 > _169;

(insn 12 11 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 246 [ _169 ]))) "CALVOR.f":71 -1
     (nil))

(insn 13 12 14 (set (reg:QI 253)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVOR.f":71 -1
     (nil))

(insn 14 13 0 (set (reg:SI 247 [ _171 ])
        (zero_extend:SI (reg:QI 253))) "CALVOR.f":71 -1
     (nil))

;; if (_171 != 0)

(insn 15 14 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 247 [ _171 ])
            (const_int 0 [0]))) "CALVOR.f":71 -1
     (nil))

(jump_insn 16 15 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALVOR.f":71 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; i_172 = 1;

(insn 18 17 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALVOR.f":72 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _173 = i_159 > 119;

(insn 20 19 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALVOR.f":72 -1
     (nil))

(insn 21 20 22 (set (reg:QI 254)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVOR.f":72 -1
     (nil))

(insn 22 21 0 (set (reg:SI 248 [ _173 ])
        (zero_extend:SI (reg:QI 254))) "CALVOR.f":72 -1
     (nil))

;; if (_173 != 0)

(insn 23 22 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 248 [ _173 ])
            (const_int 0 [0]))) "CALVOR.f":72 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALVOR.f":72 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _1 = (integer(kind=8)) j_161;

(insn 26 25 27 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":73 -1
     (nil))

(insn 27 26 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 255))) "CALVOR.f":73 -1
     (nil))

;; _2 = _1 * 119;

(insn 28 27 0 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":73 -1
     (nil))

;; _3 = (integer(kind=8)) i_159;

(insn 29 28 30 (set (reg:SI 256)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":73 -1
     (nil))

(insn 30 29 0 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 256))) "CALVOR.f":73 -1
     (nil))

;; _4 = _2 + _3;

(insn 31 30 0 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":73 -1
     (nil))

;; _5 = _4 + -120;

(insn 32 31 0 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":73 -1
     (nil))

;; *absv_174(D)[_5] = 0.0;

(insn 33 32 34 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 absv+0 S8 A64])) "CALVOR.f":73 -1
     (nil))

(insn 34 33 35 (set (reg:SF 258)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALVOR.f":73 -1
     (nil))

(insn 35 34 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 91 [ _5 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 257)) [2 *absv_174(D) S4 A32])
        (reg:SF 258)) "CALVOR.f":73 -1
     (nil))

;; i_176 = i_159 + 1;

(insn 36 35 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":72 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 40 39 41 3 (nil) [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; j_177 = j_161 + 1;

(insn 42 41 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":71 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 46 45 47 2 (nil) [0 uses])

(note 47 46 0 NOTE_INSN_BASIC_BLOCK)

;; exch (uwnd_178(D));

(insn 48 47 49 (set (reg:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":77 -1
     (nil))

(insn 49 48 50 (set (reg:DI 5 di)
        (reg:DI 259)) "CALVOR.f":77 -1
     (nil))

(insn 50 49 51 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALVOR.f":77 -1
     (nil))

(call_insn 51 50 0 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f07ddcc9600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALVOR.f":77 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; exch (&dynam.f);

(insn 52 51 53 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)
                (const_int 834496 [0xcbbc0])))) "CALVOR.f":78 -1
     (nil))

(insn 53 52 54 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALVOR.f":78 -1
     (nil))

(call_insn 54 53 0 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f07ddcc9600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALVOR.f":78 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; _181 = parallel.jsta_m2;

(insn 55 54 0 (set (reg:SI 249 [ _181 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f07ddce1750 parallel>)
                    (const_int 24 [0x18]))) [1 parallel.jsta_m2+0 S4 A64])) "CALVOR.f":81 -1
     (nil))

;; _182 = parallel.jend_m2;

(insn 56 55 0 (set (reg:SI 250 [ _182 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f07ddce1750 parallel>)
                    (const_int 28 [0x1c]))) [1 parallel.jend_m2+0 S4 A32])) "CALVOR.f":81 -1
     (nil))

;; j_183 = _181;

(insn 57 56 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 249 [ _181 ])) "CALVOR.f":81 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _184 = j_162 > _182;

(insn 59 58 60 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 250 [ _182 ]))) "CALVOR.f":81 -1
     (nil))

(insn 60 59 61 (set (reg:QI 260)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVOR.f":81 -1
     (nil))

(insn 61 60 0 (set (reg:SI 251 [ _184 ])
        (zero_extend:SI (reg:QI 260))) "CALVOR.f":81 -1
     (nil))

;; if (_184 != 0)

(insn 62 61 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 251 [ _184 ])
            (const_int 0 [0]))) "CALVOR.f":81 -1
     (nil))

(jump_insn 63 62 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALVOR.f":81 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; _6 = j_162 + -125;

(insn 65 64 66 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":82 -1
     (nil))

(insn 66 65 0 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 261)
                    (const_int -125 [0xffffffffffffff83])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":82 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -125 [0xffffffffffffff83]))
        (nil)))

;; _7 = (real(kind=4)) _6;

(insn 67 66 0 (set (reg:SF 93 [ _7 ])
        (float:SF (reg:SI 92 [ _6 ]))) "CALVOR.f":82 -1
     (nil))

;; _8 = mapot.dphd;

(insn 68 67 69 (set (reg/f:DI 262)
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f07ddcd8b40 mapot>)) "CALVOR.f":1 -1
     (nil))

(insn 69 68 0 (set (reg:SF 94 [ _8 ])
        (mem/c:SF (plus:DI (reg/f:DI 262)
                (const_int 4000040 [0x3d0928])) [2 mapot.dphd+0 S4 A64])) "CALVOR.f":1 -1
     (nil))

;; _9 = _7 * _8;

(insn 70 69 0 (set (reg:SF 95 [ _9 ])
        (mult:SF (reg:SF 93 [ _7 ])
            (reg:SF 94 [ _8 ]))) "CALVOR.f":82 -1
     (nil))

;; tphi_185 = _9 * 1.7453290522098541259765625e-2;

(insn 71 70 72 (set (reg:SF 264)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALVOR.f":82 -1
     (expr_list:REG_EQUAL (const_double:SF 1.7453290522098541259765625e-2 [0x0.8efa34p-5])
        (nil)))

(insn 72 71 73 (set (reg:SF 263)
        (mult:SF (reg:SF 95 [ _9 ])
            (reg:SF 264))) "CALVOR.f":82 -1
     (nil))

(insn 73 72 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 tphi+0 S4 A32])
        (reg:SF 263)) "CALVOR.f":82 -1
     (nil))

;; i_186 = 2;

(insn 74 73 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALVOR.f":83 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _187 = i_160 > 118;

(insn 76 75 77 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALVOR.f":83 -1
     (nil))

(insn 77 76 78 (set (reg:QI 265)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVOR.f":83 -1
     (nil))

(insn 78 77 0 (set (reg:SI 252 [ _187 ])
        (zero_extend:SI (reg:QI 265))) "CALVOR.f":83 -1
     (nil))

;; if (_187 != 0)

(insn 79 78 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 252 [ _187 ])
            (const_int 0 [0]))) "CALVOR.f":83 -1
     (nil))

(jump_insn 80 79 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALVOR.f":83 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; _10 = (integer(kind=8)) j_162;

(insn 82 81 83 (set (reg:SI 266)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":85 -1
     (nil))

(insn 83 82 0 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 266))) "CALVOR.f":85 -1
     (nil))

;; _11 = _10 * 119;

(insn 84 83 0 (parallel [
            (set (reg:DI 97 [ _11 ])
                (mult:DI (reg:DI 96 [ _10 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _12 = (integer(kind=8)) j_162;

(insn 85 84 86 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":85 -1
     (nil))

(insn 86 85 0 (set (reg:DI 98 [ _12 ])
        (sign_extend:DI (reg:SI 267))) "CALVOR.f":85 -1
     (nil))

;; _13 = _12 + -1;

(insn 87 86 0 (parallel [
            (set (reg:DI 99 [ _13 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _14 = indx.ihe[_13];

(insn 88 87 0 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 99 [ _13 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihe S4 A32])) "CALVOR.f":85 -1
     (nil))

;; _15 = i_160 + _14;

(insn 89 88 90 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":85 -1
     (nil))

(insn 90 89 0 (parallel [
            (set (reg:SI 101 [ _15 ])
                (plus:SI (reg:SI 100 [ _14 ])
                    (reg:SI 268)))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 100 [ _14 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))

;; _16 = (integer(kind=8)) _15;

(insn 91 90 0 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 101 [ _15 ]))) "CALVOR.f":85 -1
     (nil))

;; _17 = _11 + _16;

(insn 92 91 0 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 97 [ _11 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _18 = _17 + -120;

(insn 93 92 0 (parallel [
            (set (reg:DI 104 [ _18 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _19 = *uwnd_178(D)[_18];

(insn 94 93 95 (set (reg/f:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":85 -1
     (nil))

(insn 95 94 0 (set (reg:SF 105 [ _19 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 104 [ _18 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 269)) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":85 -1
     (nil))

;; _20 = (integer(kind=8)) j_162;

(insn 96 95 97 (set (reg:SI 270)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":85 -1
     (nil))

(insn 97 96 0 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 270))) "CALVOR.f":85 -1
     (nil))

;; _21 = _20 * 119;

(insn 98 97 0 (parallel [
            (set (reg:DI 107 [ _21 ])
                (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _22 = (integer(kind=8)) j_162;

(insn 99 98 100 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":85 -1
     (nil))

(insn 100 99 0 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 271))) "CALVOR.f":85 -1
     (nil))

;; _23 = _22 + -1;

(insn 101 100 0 (parallel [
            (set (reg:DI 109 [ _23 ])
                (plus:DI (reg:DI 108 [ _22 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _24 = indx.ihw[_23];

(insn 102 101 103 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg:DI 109 [ _23 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

(insn 103 102 0 (set (reg:SI 110 [ _24 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 272)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihw S4 A32])) "CALVOR.f":85 -1
     (nil))

;; _25 = i_160 + _24;

(insn 104 103 105 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":85 -1
     (nil))

(insn 105 104 0 (parallel [
            (set (reg:SI 111 [ _25 ])
                (plus:SI (reg:SI 110 [ _24 ])
                    (reg:SI 273)))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 110 [ _24 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))

;; _26 = (integer(kind=8)) _25;

(insn 106 105 0 (set (reg:DI 112 [ _26 ])
        (sign_extend:DI (reg:SI 111 [ _25 ]))) "CALVOR.f":85 -1
     (nil))

;; _27 = _21 + _26;

(insn 107 106 0 (parallel [
            (set (reg:DI 113 [ _27 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _28 = _27 + -120;

(insn 108 107 0 (parallel [
            (set (reg:DI 114 [ _28 ])
                (plus:DI (reg:DI 113 [ _27 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _29 = *uwnd_178(D)[_28];

(insn 109 108 110 (set (reg/f:DI 274)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":85 -1
     (nil))

(insn 110 109 0 (set (reg:SF 115 [ _29 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 114 [ _28 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 274)) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":85 -1
     (nil))

;; _30 = _19 + _29;

(insn 111 110 0 (set (reg:SF 116 [ _30 ])
        (plus:SF (reg:SF 105 [ _19 ])
            (reg:SF 115 [ _29 ]))) "CALVOR.f":85 -1
     (nil))

;; _31 = j_162 + 1;

(insn 112 111 113 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":85 -1
     (nil))

(insn 113 112 0 (parallel [
            (set (reg:SI 117 [ _31 ])
                (plus:SI (reg:SI 275)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _32 = (integer(kind=8)) _31;

(insn 114 113 0 (set (reg:DI 118 [ _32 ])
        (sign_extend:DI (reg:SI 117 [ _31 ]))) "CALVOR.f":85 -1
     (nil))

;; _33 = _32 * 119;

(insn 115 114 0 (parallel [
            (set (reg:DI 119 [ _33 ])
                (mult:DI (reg:DI 118 [ _32 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _34 = (integer(kind=8)) i_160;

(insn 116 115 117 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":85 -1
     (nil))

(insn 117 116 0 (set (reg:DI 120 [ _34 ])
        (sign_extend:DI (reg:SI 276))) "CALVOR.f":85 -1
     (nil))

;; _35 = _33 + _34;

(insn 118 117 0 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 119 [ _33 ])
                    (reg:DI 120 [ _34 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _36 = _35 + -120;

(insn 119 118 0 (parallel [
            (set (reg:DI 122 [ _36 ])
                (plus:DI (reg:DI 121 [ _35 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _37 = *uwnd_178(D)[_36];

(insn 120 119 121 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":85 -1
     (nil))

(insn 121 120 0 (set (reg:SF 123 [ _37 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 122 [ _36 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 277)) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":85 -1
     (nil))

;; _38 = _30 + _37;

(insn 122 121 0 (set (reg:SF 124 [ _38 ])
        (plus:SF (reg:SF 116 [ _30 ])
            (reg:SF 123 [ _37 ]))) "CALVOR.f":85 -1
     (nil))

;; _39 = j_162 + -1;

(insn 123 122 124 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":85 -1
     (nil))

(insn 124 123 0 (parallel [
            (set (reg:SI 125 [ _39 ])
                (plus:SI (reg:SI 278)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; _40 = (integer(kind=8)) _39;

(insn 125 124 0 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 125 [ _39 ]))) "CALVOR.f":85 -1
     (nil))

;; _41 = _40 * 119;

(insn 126 125 0 (parallel [
            (set (reg:DI 127 [ _41 ])
                (mult:DI (reg:DI 126 [ _40 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _42 = (integer(kind=8)) i_160;

(insn 127 126 128 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":85 -1
     (nil))

(insn 128 127 0 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 279))) "CALVOR.f":85 -1
     (nil))

;; _43 = _41 + _42;

(insn 129 128 0 (parallel [
            (set (reg:DI 129 [ _43 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (reg:DI 128 [ _42 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _44 = _43 + -120;

(insn 130 129 0 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 129 [ _43 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))

;; _45 = *uwnd_178(D)[_44];

(insn 131 130 132 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":85 -1
     (nil))

(insn 132 131 0 (set (reg:SF 131 [ _45 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 130 [ _44 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 280)) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":85 -1
     (nil))

;; _46 = _38 + _45;

(insn 133 132 0 (set (reg:SF 132 [ _46 ])
        (plus:SF (reg:SF 124 [ _38 ])
            (reg:SF 131 [ _45 ]))) "CALVOR.f":85 -1
     (nil))

;; _47 = ((_46));

(insn 134 133 0 (set (reg:SF 133 [ _47 ])
        (reg:SF 132 [ _46 ])) "CALVOR.f":85 -1
     (nil))

;; uavg_188 = _47 * 2.5e-1;

(insn 135 134 136 (set (reg:SF 282)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALVOR.f":85 -1
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))

(insn 136 135 137 (set (reg:SF 281)
        (mult:SF (reg:SF 133 [ _47 ])
            (reg:SF 282))) "CALVOR.f":85 -1
     (nil))

(insn 137 136 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 uavg+0 S4 A32])
        (reg:SF 281)) "CALVOR.f":85 -1
     (nil))

;; _48 = (integer(kind=8)) j_162;

(insn 138 137 139 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":87 -1
     (nil))

(insn 139 138 0 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 283))) "CALVOR.f":87 -1
     (nil))

;; _49 = _48 * 119;

(insn 140 139 0 (parallel [
            (set (reg:DI 135 [ _49 ])
                (mult:DI (reg:DI 134 [ _48 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _50 = (integer(kind=8)) j_162;

(insn 141 140 142 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":87 -1
     (nil))

(insn 142 141 0 (set (reg:DI 136 [ _50 ])
        (sign_extend:DI (reg:SI 284))) "CALVOR.f":87 -1
     (nil))

;; _51 = _50 + -1;

(insn 143 142 0 (parallel [
            (set (reg:DI 137 [ _51 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _52 = indx.ihe[_51];

(insn 144 143 0 (set (reg:SI 138 [ _52 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 137 [ _51 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihe S4 A32])) "CALVOR.f":87 -1
     (nil))

;; _53 = i_160 + _52;

(insn 145 144 146 (set (reg:SI 285)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":87 -1
     (nil))

(insn 146 145 0 (parallel [
            (set (reg:SI 139 [ _53 ])
                (plus:SI (reg:SI 138 [ _52 ])
                    (reg:SI 285)))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 138 [ _52 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))

;; _54 = (integer(kind=8)) _53;

(insn 147 146 0 (set (reg:DI 140 [ _54 ])
        (sign_extend:DI (reg:SI 139 [ _53 ]))) "CALVOR.f":87 -1
     (nil))

;; _55 = _49 + _54;

(insn 148 147 0 (parallel [
            (set (reg:DI 141 [ _55 ])
                (plus:DI (reg:DI 135 [ _49 ])
                    (reg:DI 140 [ _54 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _56 = _55 + -120;

(insn 149 148 0 (parallel [
            (set (reg:DI 142 [ _56 ])
                (plus:DI (reg:DI 141 [ _55 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _57 = dynam.f[_56];

(insn 150 149 151 (set (reg/f:DI 286)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":87 -1
     (nil))

(insn 151 150 152 (parallel [
            (set (reg:DI 287)
                (plus:DI (reg:DI 142 [ _56 ])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

(insn 152 151 0 (set (reg:SF 143 [ _57 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 287)
                    (const_int 4 [0x4]))
                (reg/f:DI 286)) [2 dynam.f S4 A32])) "CALVOR.f":87 -1
     (nil))

;; _58 = (integer(kind=8)) j_162;

(insn 153 152 154 (set (reg:SI 288)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":87 -1
     (nil))

(insn 154 153 0 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 288))) "CALVOR.f":87 -1
     (nil))

;; _59 = _58 * 119;

(insn 155 154 0 (parallel [
            (set (reg:DI 145 [ _59 ])
                (mult:DI (reg:DI 144 [ _58 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _60 = (integer(kind=8)) j_162;

(insn 156 155 157 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":87 -1
     (nil))

(insn 157 156 0 (set (reg:DI 146 [ _60 ])
        (sign_extend:DI (reg:SI 289))) "CALVOR.f":87 -1
     (nil))

;; _61 = _60 + -1;

(insn 158 157 0 (parallel [
            (set (reg:DI 147 [ _61 ])
                (plus:DI (reg:DI 146 [ _60 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _62 = indx.ihw[_61];

(insn 159 158 160 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg:DI 147 [ _61 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

(insn 160 159 0 (set (reg:SI 148 [ _62 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 290)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihw S4 A32])) "CALVOR.f":87 -1
     (nil))

;; _63 = i_160 + _62;

(insn 161 160 162 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":87 -1
     (nil))

(insn 162 161 0 (parallel [
            (set (reg:SI 149 [ _63 ])
                (plus:SI (reg:SI 148 [ _62 ])
                    (reg:SI 291)))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 148 [ _62 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))

;; _64 = (integer(kind=8)) _63;

(insn 163 162 0 (set (reg:DI 150 [ _64 ])
        (sign_extend:DI (reg:SI 149 [ _63 ]))) "CALVOR.f":87 -1
     (nil))

;; _65 = _59 + _64;

(insn 164 163 0 (parallel [
            (set (reg:DI 151 [ _65 ])
                (plus:DI (reg:DI 145 [ _59 ])
                    (reg:DI 150 [ _64 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _66 = _65 + -120;

(insn 165 164 0 (parallel [
            (set (reg:DI 152 [ _66 ])
                (plus:DI (reg:DI 151 [ _65 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _67 = dynam.f[_66];

(insn 166 165 167 (set (reg/f:DI 292)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":87 -1
     (nil))

(insn 167 166 168 (parallel [
            (set (reg:DI 293)
                (plus:DI (reg:DI 152 [ _66 ])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

(insn 168 167 0 (set (reg:SF 153 [ _67 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 293)
                    (const_int 4 [0x4]))
                (reg/f:DI 292)) [2 dynam.f S4 A32])) "CALVOR.f":87 -1
     (nil))

;; _68 = _57 + _67;

(insn 169 168 0 (set (reg:SF 154 [ _68 ])
        (plus:SF (reg:SF 143 [ _57 ])
            (reg:SF 153 [ _67 ]))) "CALVOR.f":87 -1
     (nil))

;; _69 = j_162 + 1;

(insn 170 169 171 (set (reg:SI 294)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":87 -1
     (nil))

(insn 171 170 0 (parallel [
            (set (reg:SI 155 [ _69 ])
                (plus:SI (reg:SI 294)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _70 = (integer(kind=8)) _69;

(insn 172 171 0 (set (reg:DI 156 [ _70 ])
        (sign_extend:DI (reg:SI 155 [ _69 ]))) "CALVOR.f":87 -1
     (nil))

;; _71 = _70 * 119;

(insn 173 172 0 (parallel [
            (set (reg:DI 157 [ _71 ])
                (mult:DI (reg:DI 156 [ _70 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _72 = (integer(kind=8)) i_160;

(insn 174 173 175 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":87 -1
     (nil))

(insn 175 174 0 (set (reg:DI 158 [ _72 ])
        (sign_extend:DI (reg:SI 295))) "CALVOR.f":87 -1
     (nil))

;; _73 = _71 + _72;

(insn 176 175 0 (parallel [
            (set (reg:DI 159 [ _73 ])
                (plus:DI (reg:DI 157 [ _71 ])
                    (reg:DI 158 [ _72 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _74 = _73 + -120;

(insn 177 176 0 (parallel [
            (set (reg:DI 160 [ _74 ])
                (plus:DI (reg:DI 159 [ _73 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _75 = dynam.f[_74];

(insn 178 177 179 (set (reg/f:DI 296)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":87 -1
     (nil))

(insn 179 178 180 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg:DI 160 [ _74 ])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

(insn 180 179 0 (set (reg:SF 161 [ _75 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 297)
                    (const_int 4 [0x4]))
                (reg/f:DI 296)) [2 dynam.f S4 A32])) "CALVOR.f":87 -1
     (nil))

;; _76 = _68 + _75;

(insn 181 180 0 (set (reg:SF 162 [ _76 ])
        (plus:SF (reg:SF 154 [ _68 ])
            (reg:SF 161 [ _75 ]))) "CALVOR.f":87 -1
     (nil))

;; _77 = j_162 + -1;

(insn 182 181 183 (set (reg:SI 298)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":87 -1
     (nil))

(insn 183 182 0 (parallel [
            (set (reg:SI 163 [ _77 ])
                (plus:SI (reg:SI 298)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; _78 = (integer(kind=8)) _77;

(insn 184 183 0 (set (reg:DI 164 [ _78 ])
        (sign_extend:DI (reg:SI 163 [ _77 ]))) "CALVOR.f":87 -1
     (nil))

;; _79 = _78 * 119;

(insn 185 184 0 (parallel [
            (set (reg:DI 165 [ _79 ])
                (mult:DI (reg:DI 164 [ _78 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _80 = (integer(kind=8)) i_160;

(insn 186 185 187 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":87 -1
     (nil))

(insn 187 186 0 (set (reg:DI 166 [ _80 ])
        (sign_extend:DI (reg:SI 299))) "CALVOR.f":87 -1
     (nil))

;; _81 = _79 + _80;

(insn 188 187 0 (parallel [
            (set (reg:DI 167 [ _81 ])
                (plus:DI (reg:DI 165 [ _79 ])
                    (reg:DI 166 [ _80 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _82 = _81 + -120;

(insn 189 188 0 (parallel [
            (set (reg:DI 168 [ _82 ])
                (plus:DI (reg:DI 167 [ _81 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

;; _83 = dynam.f[_82];

(insn 190 189 191 (set (reg/f:DI 300)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":87 -1
     (nil))

(insn 191 190 192 (parallel [
            (set (reg:DI 301)
                (plus:DI (reg:DI 168 [ _82 ])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))

(insn 192 191 0 (set (reg:SF 169 [ _83 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 301)
                    (const_int 4 [0x4]))
                (reg/f:DI 300)) [2 dynam.f S4 A32])) "CALVOR.f":87 -1
     (nil))

;; _84 = _76 + _83;

(insn 193 192 0 (set (reg:SF 170 [ _84 ])
        (plus:SF (reg:SF 162 [ _76 ])
            (reg:SF 169 [ _83 ]))) "CALVOR.f":87 -1
     (nil))

;; _85 = ((_84));

(insn 194 193 0 (set (reg:SF 171 [ _85 ])
        (reg:SF 170 [ _84 ])) "CALVOR.f":87 -1
     (nil))

;; favg_189 = _85 * 2.5e-1;

(insn 195 194 196 (set (reg:SF 303)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALVOR.f":87 -1
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))

(insn 196 195 197 (set (reg:SF 302)
        (mult:SF (reg:SF 171 [ _85 ])
            (reg:SF 303))) "CALVOR.f":87 -1
     (nil))

(insn 197 196 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 favg+0 S4 A32])
        (reg:SF 302)) "CALVOR.f":87 -1
     (nil))

;; _86 = (integer(kind=8)) j_162;

(insn 198 197 199 (set (reg:SI 304)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 199 198 0 (set (reg:DI 172 [ _86 ])
        (sign_extend:DI (reg:SI 304))) "CALVOR.f":90 -1
     (nil))

;; _87 = _86 * 119;

(insn 200 199 0 (parallel [
            (set (reg:DI 173 [ _87 ])
                (mult:DI (reg:DI 172 [ _86 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _88 = (integer(kind=8)) j_162;

(insn 201 200 202 (set (reg:SI 305)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 202 201 0 (set (reg:DI 174 [ _88 ])
        (sign_extend:DI (reg:SI 305))) "CALVOR.f":90 -1
     (nil))

;; _89 = _88 + -1;

(insn 203 202 0 (parallel [
            (set (reg:DI 175 [ _89 ])
                (plus:DI (reg:DI 174 [ _88 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _90 = indx.ihe[_89];

(insn 204 203 0 (set (reg:SI 176 [ _90 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 175 [ _89 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihe S4 A32])) "CALVOR.f":90 -1
     (nil))

;; _91 = i_160 + _90;

(insn 205 204 206 (set (reg:SI 306)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 206 205 0 (parallel [
            (set (reg:SI 177 [ _91 ])
                (plus:SI (reg:SI 176 [ _90 ])
                    (reg:SI 306)))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 176 [ _90 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))

;; _92 = (integer(kind=8)) _91;

(insn 207 206 0 (set (reg:DI 178 [ _92 ])
        (sign_extend:DI (reg:SI 177 [ _91 ]))) "CALVOR.f":90 -1
     (nil))

;; _93 = _87 + _92;

(insn 208 207 0 (parallel [
            (set (reg:DI 179 [ _93 ])
                (plus:DI (reg:DI 173 [ _87 ])
                    (reg:DI 178 [ _92 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _94 = _93 + -120;

(insn 209 208 0 (parallel [
            (set (reg:DI 180 [ _94 ])
                (plus:DI (reg:DI 179 [ _93 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _95 = *vwnd_190(D)[_94];

(insn 210 209 211 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [3 vwnd+0 S8 A64])) "CALVOR.f":90 -1
     (nil))

(insn 211 210 0 (set (reg:SF 181 [ _95 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 180 [ _94 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 307)) [2 *vwnd_190(D) S4 A32])) "CALVOR.f":90 -1
     (nil))

;; _96 = (integer(kind=8)) j_162;

(insn 212 211 213 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 213 212 0 (set (reg:DI 182 [ _96 ])
        (sign_extend:DI (reg:SI 308))) "CALVOR.f":90 -1
     (nil))

;; _97 = _96 * 119;

(insn 214 213 0 (parallel [
            (set (reg:DI 183 [ _97 ])
                (mult:DI (reg:DI 182 [ _96 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _98 = (integer(kind=8)) j_162;

(insn 215 214 216 (set (reg:SI 309)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 216 215 0 (set (reg:DI 184 [ _98 ])
        (sign_extend:DI (reg:SI 309))) "CALVOR.f":90 -1
     (nil))

;; _99 = _98 + -1;

(insn 217 216 0 (parallel [
            (set (reg:DI 185 [ _99 ])
                (plus:DI (reg:DI 184 [ _98 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _100 = indx.ihw[_99];

(insn 218 217 219 (parallel [
            (set (reg:DI 310)
                (plus:DI (reg:DI 185 [ _99 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

(insn 219 218 0 (set (reg:SI 186 [ _100 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 310)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihw S4 A32])) "CALVOR.f":90 -1
     (nil))

;; _101 = i_160 + _100;

(insn 220 219 221 (set (reg:SI 311)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 221 220 0 (parallel [
            (set (reg:SI 187 [ _101 ])
                (plus:SI (reg:SI 186 [ _100 ])
                    (reg:SI 311)))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 186 [ _100 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))

;; _102 = (integer(kind=8)) _101;

(insn 222 221 0 (set (reg:DI 188 [ _102 ])
        (sign_extend:DI (reg:SI 187 [ _101 ]))) "CALVOR.f":90 -1
     (nil))

;; _103 = _97 + _102;

(insn 223 222 0 (parallel [
            (set (reg:DI 189 [ _103 ])
                (plus:DI (reg:DI 183 [ _97 ])
                    (reg:DI 188 [ _102 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _104 = _103 + -120;

(insn 224 223 0 (parallel [
            (set (reg:DI 190 [ _104 ])
                (plus:DI (reg:DI 189 [ _103 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _105 = *vwnd_190(D)[_104];

(insn 225 224 226 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [3 vwnd+0 S8 A64])) "CALVOR.f":90 -1
     (nil))

(insn 226 225 0 (set (reg:SF 191 [ _105 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 190 [ _104 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 312)) [2 *vwnd_190(D) S4 A32])) "CALVOR.f":90 -1
     (nil))

;; _106 = _95 - _105;

(insn 227 226 0 (set (reg:SF 192 [ _106 ])
        (minus:SF (reg:SF 181 [ _95 ])
            (reg:SF 191 [ _105 ]))) "CALVOR.f":90 -1
     (nil))

;; _107 = ((_106));

(insn 228 227 0 (set (reg:SF 193 [ _107 ])
        (reg:SF 192 [ _106 ])) "CALVOR.f":90 -1
     (nil))

;; _108 = (integer(kind=8)) j_162;

(insn 229 228 230 (set (reg:SI 313)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 230 229 0 (set (reg:DI 194 [ _108 ])
        (sign_extend:DI (reg:SI 313))) "CALVOR.f":90 -1
     (nil))

;; _109 = _108 * 119;

(insn 231 230 0 (parallel [
            (set (reg:DI 195 [ _109 ])
                (mult:DI (reg:DI 194 [ _108 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _110 = (integer(kind=8)) i_160;

(insn 232 231 233 (set (reg:SI 314)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 233 232 0 (set (reg:DI 196 [ _110 ])
        (sign_extend:DI (reg:SI 314))) "CALVOR.f":90 -1
     (nil))

;; _111 = _109 + _110;

(insn 234 233 0 (parallel [
            (set (reg:DI 197 [ _111 ])
                (plus:DI (reg:DI 195 [ _109 ])
                    (reg:DI 196 [ _110 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _112 = _111 + -120;

(insn 235 234 0 (parallel [
            (set (reg:DI 198 [ _112 ])
                (plus:DI (reg:DI 197 [ _111 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _113 = dynam.dx[_112];

(insn 236 235 237 (set (reg/f:DI 315)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":90 -1
     (nil))

(insn 237 236 238 (parallel [
            (set (reg:DI 316)
                (plus:DI (reg:DI 198 [ _112 ])
                    (const_int 1207 [0x4b7])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

(insn 238 237 0 (set (reg:SF 199 [ _113 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 316)
                    (const_int 4 [0x4]))
                (reg/f:DI 315)) [2 dynam.dx S4 A32])) "CALVOR.f":90 -1
     (nil))

;; _114 = _113 * 2.0e+0;

(insn 239 238 0 (set (reg:SF 200 [ _114 ])
        (plus:SF (reg:SF 199 [ _113 ])
            (reg:SF 199 [ _113 ]))) "CALVOR.f":90 -1
     (nil))

;; _115 = ((_114));

(insn 240 239 0 (set (reg:SF 201 [ _115 ])
        (reg:SF 200 [ _114 ])) "CALVOR.f":90 -1
     (nil))

;; _116 = _107 / _115;

(insn 241 240 0 (set (reg:SF 202 [ _116 ])
        (div:SF (reg:SF 193 [ _107 ])
            (reg:SF 201 [ _115 ]))) "CALVOR.f":90 -1
     (nil))

;; _117 = j_162 + 1;

(insn 242 241 243 (set (reg:SI 317)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 243 242 0 (parallel [
            (set (reg:SI 203 [ _117 ])
                (plus:SI (reg:SI 317)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _118 = (integer(kind=8)) _117;

(insn 244 243 0 (set (reg:DI 204 [ _118 ])
        (sign_extend:DI (reg:SI 203 [ _117 ]))) "CALVOR.f":90 -1
     (nil))

;; _119 = _118 * 119;

(insn 245 244 0 (parallel [
            (set (reg:DI 205 [ _119 ])
                (mult:DI (reg:DI 204 [ _118 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _120 = (integer(kind=8)) i_160;

(insn 246 245 247 (set (reg:SI 318)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 247 246 0 (set (reg:DI 206 [ _120 ])
        (sign_extend:DI (reg:SI 318))) "CALVOR.f":90 -1
     (nil))

;; _121 = _119 + _120;

(insn 248 247 0 (parallel [
            (set (reg:DI 207 [ _121 ])
                (plus:DI (reg:DI 205 [ _119 ])
                    (reg:DI 206 [ _120 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _122 = _121 + -120;

(insn 249 248 0 (parallel [
            (set (reg:DI 208 [ _122 ])
                (plus:DI (reg:DI 207 [ _121 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _123 = *uwnd_178(D)[_122];

(insn 250 249 251 (set (reg/f:DI 319)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":90 -1
     (nil))

(insn 251 250 0 (set (reg:SF 209 [ _123 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 208 [ _122 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 319)) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":90 -1
     (nil))

;; _124 = j_162 + -1;

(insn 252 251 253 (set (reg:SI 320)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 253 252 0 (parallel [
            (set (reg:SI 210 [ _124 ])
                (plus:SI (reg:SI 320)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; _125 = (integer(kind=8)) _124;

(insn 254 253 0 (set (reg:DI 211 [ _125 ])
        (sign_extend:DI (reg:SI 210 [ _124 ]))) "CALVOR.f":90 -1
     (nil))

;; _126 = _125 * 119;

(insn 255 254 0 (parallel [
            (set (reg:DI 212 [ _126 ])
                (mult:DI (reg:DI 211 [ _125 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _127 = (integer(kind=8)) i_160;

(insn 256 255 257 (set (reg:SI 321)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 257 256 0 (set (reg:DI 213 [ _127 ])
        (sign_extend:DI (reg:SI 321))) "CALVOR.f":90 -1
     (nil))

;; _128 = _126 + _127;

(insn 258 257 0 (parallel [
            (set (reg:DI 214 [ _128 ])
                (plus:DI (reg:DI 212 [ _126 ])
                    (reg:DI 213 [ _127 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _129 = _128 + -120;

(insn 259 258 0 (parallel [
            (set (reg:DI 215 [ _129 ])
                (plus:DI (reg:DI 214 [ _128 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _130 = *uwnd_178(D)[_129];

(insn 260 259 261 (set (reg/f:DI 322)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":90 -1
     (nil))

(insn 261 260 0 (set (reg:SF 216 [ _130 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 215 [ _129 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 322)) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":90 -1
     (nil))

;; _131 = _123 - _130;

(insn 262 261 0 (set (reg:SF 217 [ _131 ])
        (minus:SF (reg:SF 209 [ _123 ])
            (reg:SF 216 [ _130 ]))) "CALVOR.f":90 -1
     (nil))

;; _132 = ((_131));

(insn 263 262 0 (set (reg:SF 218 [ _132 ])
        (reg:SF 217 [ _131 ])) "CALVOR.f":90 -1
     (nil))

;; _133 = dynam.dy;

(insn 264 263 265 (set (reg/f:DI 323)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":1 -1
     (nil))

(insn 265 264 0 (set (reg:SF 219 [ _133 ])
        (mem/c:SF (reg/f:DI 323) [2 dynam.dy+0 S4 A128])) "CALVOR.f":1 -1
     (nil))

;; _134 = _133 * 2.0e+0;

(insn 266 265 0 (set (reg:SF 220 [ _134 ])
        (plus:SF (reg:SF 219 [ _133 ])
            (reg:SF 219 [ _133 ]))) "CALVOR.f":90 -1
     (nil))

;; _135 = ((_134));

(insn 267 266 0 (set (reg:SF 221 [ _135 ])
        (reg:SF 220 [ _134 ])) "CALVOR.f":90 -1
     (nil))

;; _136 = _132 / _135;

(insn 268 267 0 (set (reg:SF 222 [ _136 ])
        (div:SF (reg:SF 218 [ _132 ])
            (reg:SF 221 [ _135 ]))) "CALVOR.f":90 -1
     (nil))

;; _137 = _116 - _136;

(insn 269 268 0 (set (reg:SF 223 [ _137 ])
        (minus:SF (reg:SF 202 [ _116 ])
            (reg:SF 222 [ _136 ]))) "CALVOR.f":90 -1
     (nil))

;; _138 = __builtin_tanf (tphi_185);

(insn 270 269 271 (set (reg:SF 324)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 tphi+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 271 270 272 (set (reg:SF 21 xmm0)
        (reg:SF 324)) "CALVOR.f":90 -1
     (nil))

(call_insn/u 272 271 273 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("tanf") [flags 0x41]  <function_decl 0x7f07ddb45700 __builtin_tanf>) [0 __builtin_tanf S1 A8])
            (const_int 0 [0]))) "CALVOR.f":90 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 273 272 0 (set (reg:SF 224 [ _138 ])
        (reg:SF 21 xmm0)) "CALVOR.f":90 -1
     (nil))

;; _139 = uavg_188 * _138;

(insn 274 273 0 (set (reg:SF 225 [ _139 ])
        (mult:SF (reg:SF 224 [ _138 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 uavg+0 S4 A32]))) "CALVOR.f":90 -1
     (nil))

;; _140 = _139 / 6.376e+6;

(insn 275 274 276 (set (reg:SF 325)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALVOR.f":90 -1
     (expr_list:REG_EQUAL (const_double:SF 6.376e+6 [0x0.c2948p+23])
        (nil)))

(insn 276 275 0 (set (reg:SF 226 [ _140 ])
        (div:SF (reg:SF 225 [ _139 ])
            (reg:SF 325))) "CALVOR.f":90 -1
     (nil))

;; _141 = _137 + _140;

(insn 277 276 0 (set (reg:SF 227 [ _141 ])
        (plus:SF (reg:SF 223 [ _137 ])
            (reg:SF 226 [ _140 ]))) "CALVOR.f":90 -1
     (nil))

;; _142 = favg_189 * 2.0e+0;

(insn 278 277 279 (set (reg:SF 326)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 favg+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 279 278 0 (set (reg:SF 228 [ _142 ])
        (plus:SF (reg:SF 326)
            (reg:SF 326))) "CALVOR.f":90 -1
     (nil))

;; _143 = ctlblk.dt;

(insn 280 279 0 (set (reg:SF 229 [ _143 ])
        (mem/c:SF (const:DI (plus:DI (symbol_ref:DI ("ctlblk_") [flags 0x2]  <var_decl 0x7f07e4d3cab0 ctlblk>)
                    (const_int 48 [0x30]))) [2 ctlblk.dt+0 S4 A128])) "CALVOR.f":1 -1
     (nil))

;; _144 = _142 / _143;

(insn 281 280 0 (set (reg:SF 230 [ _144 ])
        (div:SF (reg:SF 228 [ _142 ])
            (reg:SF 229 [ _143 ]))) "CALVOR.f":90 -1
     (nil))

;; _145 = _141 + _144;

(insn 282 281 0 (set (reg:SF 231 [ _145 ])
        (plus:SF (reg:SF 227 [ _141 ])
            (reg:SF 230 [ _144 ]))) "CALVOR.f":90 -1
     (nil))

;; _146 = ((_145));

(insn 283 282 0 (set (reg:SF 232 [ _146 ])
        (reg:SF 231 [ _145 ])) "CALVOR.f":90 -1
     (nil))

;; _147 = (integer(kind=8)) j_162;

(insn 284 283 285 (set (reg:SI 327)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 285 284 0 (set (reg:DI 233 [ _147 ])
        (sign_extend:DI (reg:SI 327))) "CALVOR.f":90 -1
     (nil))

;; _148 = _147 * 119;

(insn 286 285 0 (parallel [
            (set (reg:DI 234 [ _148 ])
                (mult:DI (reg:DI 233 [ _147 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _149 = (integer(kind=8)) i_160;

(insn 287 286 288 (set (reg:SI 328)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 288 287 0 (set (reg:DI 235 [ _149 ])
        (sign_extend:DI (reg:SI 328))) "CALVOR.f":90 -1
     (nil))

;; _150 = _148 + _149;

(insn 289 288 0 (parallel [
            (set (reg:DI 236 [ _150 ])
                (plus:DI (reg:DI 234 [ _148 ])
                    (reg:DI 235 [ _149 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _151 = _150 + -120;

(insn 290 289 0 (parallel [
            (set (reg:DI 237 [ _151 ])
                (plus:DI (reg:DI 236 [ _150 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _152 = masks.hbm2[_151];

(insn 291 290 292 (set (reg/f:DI 329)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f07ddcddea0 masks>)) "CALVOR.f":90 -1
     (nil))

(insn 292 291 0 (set (reg:SF 238 [ _152 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 237 [ _151 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 329)) [2 masks.hbm2 S4 A32])) "CALVOR.f":90 -1
     (nil))

;; _153 = (integer(kind=8)) j_162;

(insn 293 292 294 (set (reg:SI 330)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 294 293 0 (set (reg:DI 239 [ _153 ])
        (sign_extend:DI (reg:SI 330))) "CALVOR.f":90 -1
     (nil))

;; _154 = _153 * 119;

(insn 295 294 0 (parallel [
            (set (reg:DI 240 [ _154 ])
                (mult:DI (reg:DI 239 [ _153 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _155 = (integer(kind=8)) i_160;

(insn 296 295 297 (set (reg:SI 331)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))

(insn 297 296 0 (set (reg:DI 241 [ _155 ])
        (sign_extend:DI (reg:SI 331))) "CALVOR.f":90 -1
     (nil))

;; _156 = _154 + _155;

(insn 298 297 0 (parallel [
            (set (reg:DI 242 [ _156 ])
                (plus:DI (reg:DI 240 [ _154 ])
                    (reg:DI 241 [ _155 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _157 = _156 + -120;

(insn 299 298 0 (parallel [
            (set (reg:DI 243 [ _157 ])
                (plus:DI (reg:DI 242 [ _156 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))

;; _158 = _146 * _152;

(insn 300 299 0 (set (reg:SF 244 [ _158 ])
        (mult:SF (reg:SF 232 [ _146 ])
            (reg:SF 238 [ _152 ]))) "CALVOR.f":90 -1
     (nil))

;; *absv_174(D)[_157] = _158;

(insn 301 300 302 (set (reg/f:DI 332)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 absv+0 S8 A64])) "CALVOR.f":90 -1
     (nil))

(insn 302 301 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 243 [ _157 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 332)) [2 *absv_174(D) S4 A32])
        (reg:SF 244 [ _158 ])) "CALVOR.f":90 -1
     (nil))

;; i_192 = i_160 + 1;

(insn 303 302 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":83 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 307 306 308 7 (nil) [0 uses])

(note 308 307 0 NOTE_INSN_BASIC_BLOCK)

;; j_193 = j_162 + 1;

(insn 309 308 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":81 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 313 312 314 6 (nil) [0 uses])

(note 314 313 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 15

;; <L16>:

(code_label 315 314 316 10 (nil) [0 uses])

(note 316 315 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.
Merging block 17 into block 15...
Merged blocks 15 and 17.
Merged 15 and 17 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])
        (reg:DI 5 di [ uwnd ])) "CALVOR.f":1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [3 vwnd+0 S8 A64])
        (reg:DI 4 si [ vwnd ])) "CALVOR.f":1 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 absv+0 S8 A64])
        (reg:DI 1 dx [ absv ])) "CALVOR.f":1 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 245 [ _168 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f07ddce1750 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALVOR.f":71 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 246 [ _169 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f07ddce1750 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALVOR.f":71 -1
     (nil))
(insn 10 9 43 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 245 [ _168 ])) "CALVOR.f":71 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              8 (DFS_BACK)
(code_label 43 10 11 4 5 (nil) [1 uses])
(note 11 43 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 246 [ _169 ]))) "CALVOR.f":71 -1
     (nil))
(insn 13 12 14 4 (set (reg:QI 253)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVOR.f":71 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 247 [ _171 ])
        (zero_extend:SI (reg:QI 253))) "CALVOR.f":71 -1
     (nil))
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 247 [ _171 ])
            (const_int 0 [0]))) "CALVOR.f":71 -1
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "CALVOR.f":71 -1
     (nil)
 -> 46)
;;  succ:       9
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 37 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALVOR.f":72 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              7 (DFS_BACK)
(code_label 37 18 19 6 4 (nil) [1 uses])
(note 19 37 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALVOR.f":72 -1
     (nil))
(insn 21 20 22 6 (set (reg:QI 254)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVOR.f":72 -1
     (nil))
(insn 22 21 23 6 (set (reg:SI 248 [ _173 ])
        (zero_extend:SI (reg:QI 254))) "CALVOR.f":72 -1
     (nil))
(insn 23 22 24 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 248 [ _173 ])
            (const_int 0 [0]))) "CALVOR.f":72 -1
     (nil))
(jump_insn 24 23 25 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "CALVOR.f":72 -1
     (nil)
 -> 40)
;;  succ:       8
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 25 24 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 7 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":73 -1
     (nil))
(insn 27 26 28 7 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 255))) "CALVOR.f":73 -1
     (nil))
(insn 28 27 29 7 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":73 -1
     (nil))
(insn 29 28 30 7 (set (reg:SI 256)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":73 -1
     (nil))
(insn 30 29 31 7 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 256))) "CALVOR.f":73 -1
     (nil))
(insn 31 30 32 7 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":73 -1
     (nil))
(insn 32 31 33 7 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":73 -1
     (nil))
(insn 33 32 34 7 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 absv+0 S8 A64])) "CALVOR.f":73 -1
     (nil))
(insn 34 33 35 7 (set (reg:SF 258)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALVOR.f":73 -1
     (nil))
(insn 35 34 36 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 91 [ _5 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 257)) [2 *absv_174(D) S4 A32])
        (reg:SF 258)) "CALVOR.f":73 -1
     (nil))
(insn 36 35 38 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":72 -1
     (nil))
(jump_insn 38 36 39 7 (set (pc)
        (label_ref 37)) "CALVOR.f":72 -1
     (nil)
 -> 37)
;;  succ:       6 (DFS_BACK)

(barrier 39 38 40)
;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 40 39 41 8 3 (nil) [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 44 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":71 -1
     (nil))
(jump_insn 44 42 45 8 (set (pc)
        (label_ref 43)) "CALVOR.f":71 -1
     (nil)
 -> 43)
;;  succ:       4 (DFS_BACK)

(barrier 45 44 46)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 46 45 47 9 2 (nil) [1 uses])
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":77 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 5 di)
        (reg:DI 259)) "CALVOR.f":77 -1
     (nil))
(insn 50 49 51 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALVOR.f":77 -1
     (nil))
(call_insn 51 50 52 9 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f07ddcc9600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALVOR.f":77 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 52 51 53 9 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)
                (const_int 834496 [0xcbbc0])))) "CALVOR.f":78 -1
     (nil))
(insn 53 52 54 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALVOR.f":78 -1
     (nil))
(call_insn 54 53 55 9 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f07ddcc9600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALVOR.f":78 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 55 54 56 9 (set (reg:SI 249 [ _181 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f07ddce1750 parallel>)
                    (const_int 24 [0x18]))) [1 parallel.jsta_m2+0 S4 A64])) "CALVOR.f":81 -1
     (nil))
(insn 56 55 57 9 (set (reg:SI 250 [ _182 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f07ddce1750 parallel>)
                    (const_int 28 [0x1c]))) [1 parallel.jend_m2+0 S4 A32])) "CALVOR.f":81 -1
     (nil))
(insn 57 56 310 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 249 [ _181 ])) "CALVOR.f":81 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 1, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
;;              14 (DFS_BACK)
(code_label 310 57 58 10 9 (nil) [1 uses])
(note 58 310 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 250 [ _182 ]))) "CALVOR.f":81 -1
     (nil))
(insn 60 59 61 10 (set (reg:QI 260)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVOR.f":81 -1
     (nil))
(insn 61 60 62 10 (set (reg:SI 251 [ _184 ])
        (zero_extend:SI (reg:QI 260))) "CALVOR.f":81 -1
     (nil))
(insn 62 61 63 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 251 [ _184 ])
            (const_int 0 [0]))) "CALVOR.f":81 -1
     (nil))
(jump_insn 63 62 64 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 313)
            (pc))) "CALVOR.f":81 -1
     (nil)
 -> 313)
;;  succ:       15
;;              11 (FALLTHRU)

;; basic block 11, loop depth 1, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":82 -1
     (nil))
(insn 66 65 67 11 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 261)
                    (const_int -125 [0xffffffffffffff83])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":82 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -125 [0xffffffffffffff83]))
        (nil)))
(insn 67 66 68 11 (set (reg:SF 93 [ _7 ])
        (float:SF (reg:SI 92 [ _6 ]))) "CALVOR.f":82 -1
     (nil))
(insn 68 67 69 11 (set (reg/f:DI 262)
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f07ddcd8b40 mapot>)) "CALVOR.f":1 -1
     (nil))
(insn 69 68 70 11 (set (reg:SF 94 [ _8 ])
        (mem/c:SF (plus:DI (reg/f:DI 262)
                (const_int 4000040 [0x3d0928])) [2 mapot.dphd+0 S4 A64])) "CALVOR.f":1 -1
     (nil))
(insn 70 69 71 11 (set (reg:SF 95 [ _9 ])
        (mult:SF (reg:SF 93 [ _7 ])
            (reg:SF 94 [ _8 ]))) "CALVOR.f":82 -1
     (nil))
(insn 71 70 72 11 (set (reg:SF 264)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALVOR.f":82 -1
     (expr_list:REG_EQUAL (const_double:SF 1.7453290522098541259765625e-2 [0x0.8efa34p-5])
        (nil)))
(insn 72 71 73 11 (set (reg:SF 263)
        (mult:SF (reg:SF 95 [ _9 ])
            (reg:SF 264))) "CALVOR.f":82 -1
     (nil))
(insn 73 72 74 11 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 tphi+0 S4 A32])
        (reg:SF 263)) "CALVOR.f":82 -1
     (nil))
(insn 74 73 304 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALVOR.f":83 -1
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 2, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
;;              13 (DFS_BACK)
(code_label 304 74 75 12 8 (nil) [1 uses])
(note 75 304 76 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALVOR.f":83 -1
     (nil))
(insn 77 76 78 12 (set (reg:QI 265)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVOR.f":83 -1
     (nil))
(insn 78 77 79 12 (set (reg:SI 252 [ _187 ])
        (zero_extend:SI (reg:QI 265))) "CALVOR.f":83 -1
     (nil))
(insn 79 78 80 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 252 [ _187 ])
            (const_int 0 [0]))) "CALVOR.f":83 -1
     (nil))
(jump_insn 80 79 81 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 307)
            (pc))) "CALVOR.f":83 -1
     (nil)
 -> 307)
;;  succ:       14
;;              13 (FALLTHRU)

;; basic block 13, loop depth 2, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 13 (set (reg:SI 266)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 83 82 84 13 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 266))) "CALVOR.f":85 -1
     (nil))
(insn 84 83 85 13 (parallel [
            (set (reg:DI 97 [ _11 ])
                (mult:DI (reg:DI 96 [ _10 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 85 84 86 13 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 86 85 87 13 (set (reg:DI 98 [ _12 ])
        (sign_extend:DI (reg:SI 267))) "CALVOR.f":85 -1
     (nil))
(insn 87 86 88 13 (parallel [
            (set (reg:DI 99 [ _13 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 88 87 89 13 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 99 [ _13 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihe S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 89 88 90 13 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 90 89 91 13 (parallel [
            (set (reg:SI 101 [ _15 ])
                (plus:SI (reg:SI 100 [ _14 ])
                    (reg:SI 268)))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 100 [ _14 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 91 90 92 13 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 101 [ _15 ]))) "CALVOR.f":85 -1
     (nil))
(insn 92 91 93 13 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 97 [ _11 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 93 92 94 13 (parallel [
            (set (reg:DI 104 [ _18 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 94 93 95 13 (set (reg/f:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":85 -1
     (nil))
(insn 95 94 96 13 (set (reg:SF 105 [ _19 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 104 [ _18 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 269)) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 96 95 97 13 (set (reg:SI 270)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 97 96 98 13 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 270))) "CALVOR.f":85 -1
     (nil))
(insn 98 97 99 13 (parallel [
            (set (reg:DI 107 [ _21 ])
                (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 99 98 100 13 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 100 99 101 13 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 271))) "CALVOR.f":85 -1
     (nil))
(insn 101 100 102 13 (parallel [
            (set (reg:DI 109 [ _23 ])
                (plus:DI (reg:DI 108 [ _22 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 102 101 103 13 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg:DI 109 [ _23 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 103 102 104 13 (set (reg:SI 110 [ _24 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 272)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihw S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 104 103 105 13 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 105 104 106 13 (parallel [
            (set (reg:SI 111 [ _25 ])
                (plus:SI (reg:SI 110 [ _24 ])
                    (reg:SI 273)))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 110 [ _24 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 106 105 107 13 (set (reg:DI 112 [ _26 ])
        (sign_extend:DI (reg:SI 111 [ _25 ]))) "CALVOR.f":85 -1
     (nil))
(insn 107 106 108 13 (parallel [
            (set (reg:DI 113 [ _27 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 108 107 109 13 (parallel [
            (set (reg:DI 114 [ _28 ])
                (plus:DI (reg:DI 113 [ _27 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 109 108 110 13 (set (reg/f:DI 274)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":85 -1
     (nil))
(insn 110 109 111 13 (set (reg:SF 115 [ _29 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 114 [ _28 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 274)) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 111 110 112 13 (set (reg:SF 116 [ _30 ])
        (plus:SF (reg:SF 105 [ _19 ])
            (reg:SF 115 [ _29 ]))) "CALVOR.f":85 -1
     (nil))
(insn 112 111 113 13 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 113 112 114 13 (parallel [
            (set (reg:SI 117 [ _31 ])
                (plus:SI (reg:SI 275)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 114 113 115 13 (set (reg:DI 118 [ _32 ])
        (sign_extend:DI (reg:SI 117 [ _31 ]))) "CALVOR.f":85 -1
     (nil))
(insn 115 114 116 13 (parallel [
            (set (reg:DI 119 [ _33 ])
                (mult:DI (reg:DI 118 [ _32 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 116 115 117 13 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 117 116 118 13 (set (reg:DI 120 [ _34 ])
        (sign_extend:DI (reg:SI 276))) "CALVOR.f":85 -1
     (nil))
(insn 118 117 119 13 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 119 [ _33 ])
                    (reg:DI 120 [ _34 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 119 118 120 13 (parallel [
            (set (reg:DI 122 [ _36 ])
                (plus:DI (reg:DI 121 [ _35 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 120 119 121 13 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":85 -1
     (nil))
(insn 121 120 122 13 (set (reg:SF 123 [ _37 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 122 [ _36 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 277)) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 122 121 123 13 (set (reg:SF 124 [ _38 ])
        (plus:SF (reg:SF 116 [ _30 ])
            (reg:SF 123 [ _37 ]))) "CALVOR.f":85 -1
     (nil))
(insn 123 122 124 13 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 124 123 125 13 (parallel [
            (set (reg:SI 125 [ _39 ])
                (plus:SI (reg:SI 278)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 125 124 126 13 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 125 [ _39 ]))) "CALVOR.f":85 -1
     (nil))
(insn 126 125 127 13 (parallel [
            (set (reg:DI 127 [ _41 ])
                (mult:DI (reg:DI 126 [ _40 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 127 126 128 13 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 128 127 129 13 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 279))) "CALVOR.f":85 -1
     (nil))
(insn 129 128 130 13 (parallel [
            (set (reg:DI 129 [ _43 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (reg:DI 128 [ _42 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 130 129 131 13 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 129 [ _43 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 -1
     (nil))
(insn 131 130 132 13 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":85 -1
     (nil))
(insn 132 131 133 13 (set (reg:SF 131 [ _45 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 130 [ _44 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 280)) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":85 -1
     (nil))
(insn 133 132 134 13 (set (reg:SF 132 [ _46 ])
        (plus:SF (reg:SF 124 [ _38 ])
            (reg:SF 131 [ _45 ]))) "CALVOR.f":85 -1
     (nil))
(insn 134 133 135 13 (set (reg:SF 133 [ _47 ])
        (reg:SF 132 [ _46 ])) "CALVOR.f":85 -1
     (nil))
(insn 135 134 136 13 (set (reg:SF 282)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALVOR.f":85 -1
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 136 135 137 13 (set (reg:SF 281)
        (mult:SF (reg:SF 133 [ _47 ])
            (reg:SF 282))) "CALVOR.f":85 -1
     (nil))
(insn 137 136 138 13 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 uavg+0 S4 A32])
        (reg:SF 281)) "CALVOR.f":85 -1
     (nil))
(insn 138 137 139 13 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 139 138 140 13 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 283))) "CALVOR.f":87 -1
     (nil))
(insn 140 139 141 13 (parallel [
            (set (reg:DI 135 [ _49 ])
                (mult:DI (reg:DI 134 [ _48 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 141 140 142 13 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 142 141 143 13 (set (reg:DI 136 [ _50 ])
        (sign_extend:DI (reg:SI 284))) "CALVOR.f":87 -1
     (nil))
(insn 143 142 144 13 (parallel [
            (set (reg:DI 137 [ _51 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 144 143 145 13 (set (reg:SI 138 [ _52 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 137 [ _51 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihe S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 145 144 146 13 (set (reg:SI 285)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 146 145 147 13 (parallel [
            (set (reg:SI 139 [ _53 ])
                (plus:SI (reg:SI 138 [ _52 ])
                    (reg:SI 285)))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 138 [ _52 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 147 146 148 13 (set (reg:DI 140 [ _54 ])
        (sign_extend:DI (reg:SI 139 [ _53 ]))) "CALVOR.f":87 -1
     (nil))
(insn 148 147 149 13 (parallel [
            (set (reg:DI 141 [ _55 ])
                (plus:DI (reg:DI 135 [ _49 ])
                    (reg:DI 140 [ _54 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 149 148 150 13 (parallel [
            (set (reg:DI 142 [ _56 ])
                (plus:DI (reg:DI 141 [ _55 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 150 149 151 13 (set (reg/f:DI 286)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":87 -1
     (nil))
(insn 151 150 152 13 (parallel [
            (set (reg:DI 287)
                (plus:DI (reg:DI 142 [ _56 ])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 152 151 153 13 (set (reg:SF 143 [ _57 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 287)
                    (const_int 4 [0x4]))
                (reg/f:DI 286)) [2 dynam.f S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 153 152 154 13 (set (reg:SI 288)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 154 153 155 13 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 288))) "CALVOR.f":87 -1
     (nil))
(insn 155 154 156 13 (parallel [
            (set (reg:DI 145 [ _59 ])
                (mult:DI (reg:DI 144 [ _58 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 156 155 157 13 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 157 156 158 13 (set (reg:DI 146 [ _60 ])
        (sign_extend:DI (reg:SI 289))) "CALVOR.f":87 -1
     (nil))
(insn 158 157 159 13 (parallel [
            (set (reg:DI 147 [ _61 ])
                (plus:DI (reg:DI 146 [ _60 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 159 158 160 13 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg:DI 147 [ _61 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 160 159 161 13 (set (reg:SI 148 [ _62 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 290)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihw S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 161 160 162 13 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 162 161 163 13 (parallel [
            (set (reg:SI 149 [ _63 ])
                (plus:SI (reg:SI 148 [ _62 ])
                    (reg:SI 291)))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 148 [ _62 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 163 162 164 13 (set (reg:DI 150 [ _64 ])
        (sign_extend:DI (reg:SI 149 [ _63 ]))) "CALVOR.f":87 -1
     (nil))
(insn 164 163 165 13 (parallel [
            (set (reg:DI 151 [ _65 ])
                (plus:DI (reg:DI 145 [ _59 ])
                    (reg:DI 150 [ _64 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 165 164 166 13 (parallel [
            (set (reg:DI 152 [ _66 ])
                (plus:DI (reg:DI 151 [ _65 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 166 165 167 13 (set (reg/f:DI 292)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":87 -1
     (nil))
(insn 167 166 168 13 (parallel [
            (set (reg:DI 293)
                (plus:DI (reg:DI 152 [ _66 ])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 168 167 169 13 (set (reg:SF 153 [ _67 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 293)
                    (const_int 4 [0x4]))
                (reg/f:DI 292)) [2 dynam.f S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 169 168 170 13 (set (reg:SF 154 [ _68 ])
        (plus:SF (reg:SF 143 [ _57 ])
            (reg:SF 153 [ _67 ]))) "CALVOR.f":87 -1
     (nil))
(insn 170 169 171 13 (set (reg:SI 294)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 171 170 172 13 (parallel [
            (set (reg:SI 155 [ _69 ])
                (plus:SI (reg:SI 294)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 172 171 173 13 (set (reg:DI 156 [ _70 ])
        (sign_extend:DI (reg:SI 155 [ _69 ]))) "CALVOR.f":87 -1
     (nil))
(insn 173 172 174 13 (parallel [
            (set (reg:DI 157 [ _71 ])
                (mult:DI (reg:DI 156 [ _70 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 174 173 175 13 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 175 174 176 13 (set (reg:DI 158 [ _72 ])
        (sign_extend:DI (reg:SI 295))) "CALVOR.f":87 -1
     (nil))
(insn 176 175 177 13 (parallel [
            (set (reg:DI 159 [ _73 ])
                (plus:DI (reg:DI 157 [ _71 ])
                    (reg:DI 158 [ _72 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 177 176 178 13 (parallel [
            (set (reg:DI 160 [ _74 ])
                (plus:DI (reg:DI 159 [ _73 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 178 177 179 13 (set (reg/f:DI 296)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":87 -1
     (nil))
(insn 179 178 180 13 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg:DI 160 [ _74 ])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 180 179 181 13 (set (reg:SF 161 [ _75 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 297)
                    (const_int 4 [0x4]))
                (reg/f:DI 296)) [2 dynam.f S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 181 180 182 13 (set (reg:SF 162 [ _76 ])
        (plus:SF (reg:SF 154 [ _68 ])
            (reg:SF 161 [ _75 ]))) "CALVOR.f":87 -1
     (nil))
(insn 182 181 183 13 (set (reg:SI 298)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 183 182 184 13 (parallel [
            (set (reg:SI 163 [ _77 ])
                (plus:SI (reg:SI 298)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 184 183 185 13 (set (reg:DI 164 [ _78 ])
        (sign_extend:DI (reg:SI 163 [ _77 ]))) "CALVOR.f":87 -1
     (nil))
(insn 185 184 186 13 (parallel [
            (set (reg:DI 165 [ _79 ])
                (mult:DI (reg:DI 164 [ _78 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 186 185 187 13 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 187 186 188 13 (set (reg:DI 166 [ _80 ])
        (sign_extend:DI (reg:SI 299))) "CALVOR.f":87 -1
     (nil))
(insn 188 187 189 13 (parallel [
            (set (reg:DI 167 [ _81 ])
                (plus:DI (reg:DI 165 [ _79 ])
                    (reg:DI 166 [ _80 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 189 188 190 13 (parallel [
            (set (reg:DI 168 [ _82 ])
                (plus:DI (reg:DI 167 [ _81 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 190 189 191 13 (set (reg/f:DI 300)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":87 -1
     (nil))
(insn 191 190 192 13 (parallel [
            (set (reg:DI 301)
                (plus:DI (reg:DI 168 [ _82 ])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 -1
     (nil))
(insn 192 191 193 13 (set (reg:SF 169 [ _83 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 301)
                    (const_int 4 [0x4]))
                (reg/f:DI 300)) [2 dynam.f S4 A32])) "CALVOR.f":87 -1
     (nil))
(insn 193 192 194 13 (set (reg:SF 170 [ _84 ])
        (plus:SF (reg:SF 162 [ _76 ])
            (reg:SF 169 [ _83 ]))) "CALVOR.f":87 -1
     (nil))
(insn 194 193 195 13 (set (reg:SF 171 [ _85 ])
        (reg:SF 170 [ _84 ])) "CALVOR.f":87 -1
     (nil))
(insn 195 194 196 13 (set (reg:SF 303)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALVOR.f":87 -1
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 196 195 197 13 (set (reg:SF 302)
        (mult:SF (reg:SF 171 [ _85 ])
            (reg:SF 303))) "CALVOR.f":87 -1
     (nil))
(insn 197 196 198 13 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 favg+0 S4 A32])
        (reg:SF 302)) "CALVOR.f":87 -1
     (nil))
(insn 198 197 199 13 (set (reg:SI 304)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 199 198 200 13 (set (reg:DI 172 [ _86 ])
        (sign_extend:DI (reg:SI 304))) "CALVOR.f":90 -1
     (nil))
(insn 200 199 201 13 (parallel [
            (set (reg:DI 173 [ _87 ])
                (mult:DI (reg:DI 172 [ _86 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 201 200 202 13 (set (reg:SI 305)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 202 201 203 13 (set (reg:DI 174 [ _88 ])
        (sign_extend:DI (reg:SI 305))) "CALVOR.f":90 -1
     (nil))
(insn 203 202 204 13 (parallel [
            (set (reg:DI 175 [ _89 ])
                (plus:DI (reg:DI 174 [ _88 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 204 203 205 13 (set (reg:SI 176 [ _90 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 175 [ _89 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihe S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 205 204 206 13 (set (reg:SI 306)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 206 205 207 13 (parallel [
            (set (reg:SI 177 [ _91 ])
                (plus:SI (reg:SI 176 [ _90 ])
                    (reg:SI 306)))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 176 [ _90 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 207 206 208 13 (set (reg:DI 178 [ _92 ])
        (sign_extend:DI (reg:SI 177 [ _91 ]))) "CALVOR.f":90 -1
     (nil))
(insn 208 207 209 13 (parallel [
            (set (reg:DI 179 [ _93 ])
                (plus:DI (reg:DI 173 [ _87 ])
                    (reg:DI 178 [ _92 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 209 208 210 13 (parallel [
            (set (reg:DI 180 [ _94 ])
                (plus:DI (reg:DI 179 [ _93 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 210 209 211 13 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [3 vwnd+0 S8 A64])) "CALVOR.f":90 -1
     (nil))
(insn 211 210 212 13 (set (reg:SF 181 [ _95 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 180 [ _94 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 307)) [2 *vwnd_190(D) S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 212 211 213 13 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 213 212 214 13 (set (reg:DI 182 [ _96 ])
        (sign_extend:DI (reg:SI 308))) "CALVOR.f":90 -1
     (nil))
(insn 214 213 215 13 (parallel [
            (set (reg:DI 183 [ _97 ])
                (mult:DI (reg:DI 182 [ _96 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 215 214 216 13 (set (reg:SI 309)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 216 215 217 13 (set (reg:DI 184 [ _98 ])
        (sign_extend:DI (reg:SI 309))) "CALVOR.f":90 -1
     (nil))
(insn 217 216 218 13 (parallel [
            (set (reg:DI 185 [ _99 ])
                (plus:DI (reg:DI 184 [ _98 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 218 217 219 13 (parallel [
            (set (reg:DI 310)
                (plus:DI (reg:DI 185 [ _99 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 219 218 220 13 (set (reg:SI 186 [ _100 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 310)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihw S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 220 219 221 13 (set (reg:SI 311)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 221 220 222 13 (parallel [
            (set (reg:SI 187 [ _101 ])
                (plus:SI (reg:SI 186 [ _100 ])
                    (reg:SI 311)))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 186 [ _100 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 222 221 223 13 (set (reg:DI 188 [ _102 ])
        (sign_extend:DI (reg:SI 187 [ _101 ]))) "CALVOR.f":90 -1
     (nil))
(insn 223 222 224 13 (parallel [
            (set (reg:DI 189 [ _103 ])
                (plus:DI (reg:DI 183 [ _97 ])
                    (reg:DI 188 [ _102 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 224 223 225 13 (parallel [
            (set (reg:DI 190 [ _104 ])
                (plus:DI (reg:DI 189 [ _103 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 225 224 226 13 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [3 vwnd+0 S8 A64])) "CALVOR.f":90 -1
     (nil))
(insn 226 225 227 13 (set (reg:SF 191 [ _105 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 190 [ _104 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 312)) [2 *vwnd_190(D) S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 227 226 228 13 (set (reg:SF 192 [ _106 ])
        (minus:SF (reg:SF 181 [ _95 ])
            (reg:SF 191 [ _105 ]))) "CALVOR.f":90 -1
     (nil))
(insn 228 227 229 13 (set (reg:SF 193 [ _107 ])
        (reg:SF 192 [ _106 ])) "CALVOR.f":90 -1
     (nil))
(insn 229 228 230 13 (set (reg:SI 313)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 230 229 231 13 (set (reg:DI 194 [ _108 ])
        (sign_extend:DI (reg:SI 313))) "CALVOR.f":90 -1
     (nil))
(insn 231 230 232 13 (parallel [
            (set (reg:DI 195 [ _109 ])
                (mult:DI (reg:DI 194 [ _108 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 232 231 233 13 (set (reg:SI 314)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 233 232 234 13 (set (reg:DI 196 [ _110 ])
        (sign_extend:DI (reg:SI 314))) "CALVOR.f":90 -1
     (nil))
(insn 234 233 235 13 (parallel [
            (set (reg:DI 197 [ _111 ])
                (plus:DI (reg:DI 195 [ _109 ])
                    (reg:DI 196 [ _110 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 235 234 236 13 (parallel [
            (set (reg:DI 198 [ _112 ])
                (plus:DI (reg:DI 197 [ _111 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 236 235 237 13 (set (reg/f:DI 315)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":90 -1
     (nil))
(insn 237 236 238 13 (parallel [
            (set (reg:DI 316)
                (plus:DI (reg:DI 198 [ _112 ])
                    (const_int 1207 [0x4b7])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 238 237 239 13 (set (reg:SF 199 [ _113 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 316)
                    (const_int 4 [0x4]))
                (reg/f:DI 315)) [2 dynam.dx S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 239 238 240 13 (set (reg:SF 200 [ _114 ])
        (plus:SF (reg:SF 199 [ _113 ])
            (reg:SF 199 [ _113 ]))) "CALVOR.f":90 -1
     (nil))
(insn 240 239 241 13 (set (reg:SF 201 [ _115 ])
        (reg:SF 200 [ _114 ])) "CALVOR.f":90 -1
     (nil))
(insn 241 240 242 13 (set (reg:SF 202 [ _116 ])
        (div:SF (reg:SF 193 [ _107 ])
            (reg:SF 201 [ _115 ]))) "CALVOR.f":90 -1
     (nil))
(insn 242 241 243 13 (set (reg:SI 317)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 243 242 244 13 (parallel [
            (set (reg:SI 203 [ _117 ])
                (plus:SI (reg:SI 317)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 244 243 245 13 (set (reg:DI 204 [ _118 ])
        (sign_extend:DI (reg:SI 203 [ _117 ]))) "CALVOR.f":90 -1
     (nil))
(insn 245 244 246 13 (parallel [
            (set (reg:DI 205 [ _119 ])
                (mult:DI (reg:DI 204 [ _118 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 246 245 247 13 (set (reg:SI 318)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 247 246 248 13 (set (reg:DI 206 [ _120 ])
        (sign_extend:DI (reg:SI 318))) "CALVOR.f":90 -1
     (nil))
(insn 248 247 249 13 (parallel [
            (set (reg:DI 207 [ _121 ])
                (plus:DI (reg:DI 205 [ _119 ])
                    (reg:DI 206 [ _120 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 249 248 250 13 (parallel [
            (set (reg:DI 208 [ _122 ])
                (plus:DI (reg:DI 207 [ _121 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 250 249 251 13 (set (reg/f:DI 319)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":90 -1
     (nil))
(insn 251 250 252 13 (set (reg:SF 209 [ _123 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 208 [ _122 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 319)) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 252 251 253 13 (set (reg:SI 320)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 253 252 254 13 (parallel [
            (set (reg:SI 210 [ _124 ])
                (plus:SI (reg:SI 320)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 254 253 255 13 (set (reg:DI 211 [ _125 ])
        (sign_extend:DI (reg:SI 210 [ _124 ]))) "CALVOR.f":90 -1
     (nil))
(insn 255 254 256 13 (parallel [
            (set (reg:DI 212 [ _126 ])
                (mult:DI (reg:DI 211 [ _125 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 256 255 257 13 (set (reg:SI 321)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 257 256 258 13 (set (reg:DI 213 [ _127 ])
        (sign_extend:DI (reg:SI 321))) "CALVOR.f":90 -1
     (nil))
(insn 258 257 259 13 (parallel [
            (set (reg:DI 214 [ _128 ])
                (plus:DI (reg:DI 212 [ _126 ])
                    (reg:DI 213 [ _127 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 259 258 260 13 (parallel [
            (set (reg:DI 215 [ _129 ])
                (plus:DI (reg:DI 214 [ _128 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 260 259 261 13 (set (reg/f:DI 322)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 uwnd+0 S8 A64])) "CALVOR.f":90 -1
     (nil))
(insn 261 260 262 13 (set (reg:SF 216 [ _130 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 215 [ _129 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 322)) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 262 261 263 13 (set (reg:SF 217 [ _131 ])
        (minus:SF (reg:SF 209 [ _123 ])
            (reg:SF 216 [ _130 ]))) "CALVOR.f":90 -1
     (nil))
(insn 263 262 264 13 (set (reg:SF 218 [ _132 ])
        (reg:SF 217 [ _131 ])) "CALVOR.f":90 -1
     (nil))
(insn 264 263 265 13 (set (reg/f:DI 323)
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":1 -1
     (nil))
(insn 265 264 266 13 (set (reg:SF 219 [ _133 ])
        (mem/c:SF (reg/f:DI 323) [2 dynam.dy+0 S4 A128])) "CALVOR.f":1 -1
     (nil))
(insn 266 265 267 13 (set (reg:SF 220 [ _134 ])
        (plus:SF (reg:SF 219 [ _133 ])
            (reg:SF 219 [ _133 ]))) "CALVOR.f":90 -1
     (nil))
(insn 267 266 268 13 (set (reg:SF 221 [ _135 ])
        (reg:SF 220 [ _134 ])) "CALVOR.f":90 -1
     (nil))
(insn 268 267 269 13 (set (reg:SF 222 [ _136 ])
        (div:SF (reg:SF 218 [ _132 ])
            (reg:SF 221 [ _135 ]))) "CALVOR.f":90 -1
     (nil))
(insn 269 268 270 13 (set (reg:SF 223 [ _137 ])
        (minus:SF (reg:SF 202 [ _116 ])
            (reg:SF 222 [ _136 ]))) "CALVOR.f":90 -1
     (nil))
(insn 270 269 271 13 (set (reg:SF 324)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 tphi+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 271 270 272 13 (set (reg:SF 21 xmm0)
        (reg:SF 324)) "CALVOR.f":90 -1
     (nil))
(call_insn/u 272 271 273 13 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("tanf") [flags 0x41]  <function_decl 0x7f07ddb45700 __builtin_tanf>) [0 __builtin_tanf S1 A8])
            (const_int 0 [0]))) "CALVOR.f":90 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 273 272 274 13 (set (reg:SF 224 [ _138 ])
        (reg:SF 21 xmm0)) "CALVOR.f":90 -1
     (nil))
(insn 274 273 275 13 (set (reg:SF 225 [ _139 ])
        (mult:SF (reg:SF 224 [ _138 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 uavg+0 S4 A32]))) "CALVOR.f":90 -1
     (nil))
(insn 275 274 276 13 (set (reg:SF 325)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALVOR.f":90 -1
     (expr_list:REG_EQUAL (const_double:SF 6.376e+6 [0x0.c2948p+23])
        (nil)))
(insn 276 275 277 13 (set (reg:SF 226 [ _140 ])
        (div:SF (reg:SF 225 [ _139 ])
            (reg:SF 325))) "CALVOR.f":90 -1
     (nil))
(insn 277 276 278 13 (set (reg:SF 227 [ _141 ])
        (plus:SF (reg:SF 223 [ _137 ])
            (reg:SF 226 [ _140 ]))) "CALVOR.f":90 -1
     (nil))
(insn 278 277 279 13 (set (reg:SF 326)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 favg+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 279 278 280 13 (set (reg:SF 228 [ _142 ])
        (plus:SF (reg:SF 326)
            (reg:SF 326))) "CALVOR.f":90 -1
     (nil))
(insn 280 279 281 13 (set (reg:SF 229 [ _143 ])
        (mem/c:SF (const:DI (plus:DI (symbol_ref:DI ("ctlblk_") [flags 0x2]  <var_decl 0x7f07e4d3cab0 ctlblk>)
                    (const_int 48 [0x30]))) [2 ctlblk.dt+0 S4 A128])) "CALVOR.f":1 -1
     (nil))
(insn 281 280 282 13 (set (reg:SF 230 [ _144 ])
        (div:SF (reg:SF 228 [ _142 ])
            (reg:SF 229 [ _143 ]))) "CALVOR.f":90 -1
     (nil))
(insn 282 281 283 13 (set (reg:SF 231 [ _145 ])
        (plus:SF (reg:SF 227 [ _141 ])
            (reg:SF 230 [ _144 ]))) "CALVOR.f":90 -1
     (nil))
(insn 283 282 284 13 (set (reg:SF 232 [ _146 ])
        (reg:SF 231 [ _145 ])) "CALVOR.f":90 -1
     (nil))
(insn 284 283 285 13 (set (reg:SI 327)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 285 284 286 13 (set (reg:DI 233 [ _147 ])
        (sign_extend:DI (reg:SI 327))) "CALVOR.f":90 -1
     (nil))
(insn 286 285 287 13 (parallel [
            (set (reg:DI 234 [ _148 ])
                (mult:DI (reg:DI 233 [ _147 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 287 286 288 13 (set (reg:SI 328)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 288 287 289 13 (set (reg:DI 235 [ _149 ])
        (sign_extend:DI (reg:SI 328))) "CALVOR.f":90 -1
     (nil))
(insn 289 288 290 13 (parallel [
            (set (reg:DI 236 [ _150 ])
                (plus:DI (reg:DI 234 [ _148 ])
                    (reg:DI 235 [ _149 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 290 289 291 13 (parallel [
            (set (reg:DI 237 [ _151 ])
                (plus:DI (reg:DI 236 [ _150 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 291 290 292 13 (set (reg/f:DI 329)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f07ddcddea0 masks>)) "CALVOR.f":90 -1
     (nil))
(insn 292 291 293 13 (set (reg:SF 238 [ _152 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 237 [ _151 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 329)) [2 masks.hbm2 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 293 292 294 13 (set (reg:SI 330)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 294 293 295 13 (set (reg:DI 239 [ _153 ])
        (sign_extend:DI (reg:SI 330))) "CALVOR.f":90 -1
     (nil))
(insn 295 294 296 13 (parallel [
            (set (reg:DI 240 [ _154 ])
                (mult:DI (reg:DI 239 [ _153 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 296 295 297 13 (set (reg:SI 331)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVOR.f":90 -1
     (nil))
(insn 297 296 298 13 (set (reg:DI 241 [ _155 ])
        (sign_extend:DI (reg:SI 331))) "CALVOR.f":90 -1
     (nil))
(insn 298 297 299 13 (parallel [
            (set (reg:DI 242 [ _156 ])
                (plus:DI (reg:DI 240 [ _154 ])
                    (reg:DI 241 [ _155 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 299 298 300 13 (parallel [
            (set (reg:DI 243 [ _157 ])
                (plus:DI (reg:DI 242 [ _156 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 -1
     (nil))
(insn 300 299 301 13 (set (reg:SF 244 [ _158 ])
        (mult:SF (reg:SF 232 [ _146 ])
            (reg:SF 238 [ _152 ]))) "CALVOR.f":90 -1
     (nil))
(insn 301 300 302 13 (set (reg/f:DI 332)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 absv+0 S8 A64])) "CALVOR.f":90 -1
     (nil))
(insn 302 301 303 13 (set (mem:SF (plus:DI (mult:DI (reg:DI 243 [ _157 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 332)) [2 *absv_174(D) S4 A32])
        (reg:SF 244 [ _158 ])) "CALVOR.f":90 -1
     (nil))
(insn 303 302 305 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":83 -1
     (nil))
(jump_insn 305 303 306 13 (set (pc)
        (label_ref 304)) "CALVOR.f":83 -1
     (nil)
 -> 304)
;;  succ:       12 (DFS_BACK)

(barrier 306 305 307)
;; basic block 14, loop depth 1, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 307 306 308 14 7 (nil) [1 uses])
(note 308 307 309 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 311 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":81 -1
     (nil))
(jump_insn 311 309 312 14 (set (pc)
        (label_ref 310)) "CALVOR.f":81 -1
     (nil)
 -> 310)
;;  succ:       10 (DFS_BACK)

(barrier 312 311 313)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 313 312 314 15 6 (nil) [1 uses])
(note 314 313 319 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 319 314 0 15 (const_int 0 [0]) "CALVOR.f":96 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

