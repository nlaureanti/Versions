
;; Function calmxw (calmxw_, funcdef_no=0, decl_uid=3772, cgraph_uid=0, symbol_order=0)

calmxw (real(kind=4)[29631] * restrict mxwp, real(kind=4)[29631] * restrict mxwz, real(kind=4)[29631] * restrict mxwu, real(kind=4)[29631] * restrict mxwv)
{
  real(kind=4) D.4051;
  real(kind=4) D.4050;
  real(kind=4) D.4049;
  real(kind=4) D.4048;
  logical(kind=4) D.4047;
  integer(kind=4) D.4044;
  logical(kind=4) D.4043;
  logical(kind=4) D.4040;
  integer(kind=4) D.4037;
  integer(kind=4) D.4036;
  logical(kind=4) D.4035;
  logical(kind=4) D.4032;
  integer(kind=4) D.4029;
  integer(kind=4) D.4028;
  real(kind=4) wind;
  real(kind=4) v0;
  real(kind=4) u0;
  real(kind=4) mxww;
  integer(kind=4) llmh;
  integer(kind=4) l;
  integer(kind=4) j;
  integer(kind=4) iw;
  integer(kind=4) ie;
  integer(kind=4) i;
  real(kind=4) critp;
  static real(kind=4) q[1125978] [value-expr: vrbls.q];
  static real(kind=4) t[1125978] [value-expr: vrbls.t];
  static real(kind=4) v[1125978] [value-expr: vrbls.v];
  static real(kind=4) u[1125978] [value-expr: vrbls.u];
  static real(kind=4) fis[29631] [value-expr: vrbls.fis];
  static real(kind=4) res[29631] [value-expr: vrbls.res];
  static real(kind=4) pd[29631] [value-expr: vrbls.pd];
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static real(kind=4) satdel [value-expr: options.satdel];
  static integer(kind=4) iflag [value-expr: options.iflag];
  static integer(kind=4) ioffs [value-expr: options.ioffs];
  static integer(kind=4) ksb [value-expr: options.ksb];
  static integer(kind=4) ibessl [value-expr: options.ibessl];
  static real(kind=4) spval [value-expr: options.spval];
  static real(kind=4) vtm[1125978] [value-expr: masks.vtm];
  static real(kind=4) htm[1125978] [value-expr: masks.htm];
  static real(kind=4) sice[29631] [value-expr: masks.sice];
  static real(kind=4) sm[29631] [value-expr: masks.sm];
  static real(kind=4) vbm3[29631] [value-expr: masks.vbm3];
  static real(kind=4) vbm2[29631] [value-expr: masks.vbm2];
  static real(kind=4) hbm2[29631] [value-expr: masks.hbm2];
  static integer(kind=4) lmv[29631] [value-expr: loops.lmv];
  static integer(kind=4) lmh[29631] [value-expr: loops.lmh];
  static integer(kind=4) jra[484] [value-expr: loops.jra];
  static integer(kind=4) ivha[484] [value-expr: loops.ivha];
  static integer(kind=4) ivla[484] [value-expr: loops.ivla];
  static integer(kind=4) ihha[484] [value-expr: loops.ihha];
  static integer(kind=4) ihla[484] [value-expr: loops.ihla];
  static integer(kind=4) ivw[249] [value-expr: indx.ivw];
  static integer(kind=4) ive[249] [value-expr: indx.ive];
  static integer(kind=4) ihw[249] [value-expr: indx.ihw];
  static integer(kind=4) ihe[249] [value-expr: indx.ihe];
  static integer(kind=4) maxwv[29631] [value-expr: extra.maxwv];
  static integer(kind=4) maxwu[29631] [value-expr: extra.maxwu];
  static real(kind=4) tlmax[29631] [value-expr: extra.tlmax];
  static real(kind=4) tlmin[29631] [value-expr: extra.tlmin];
  static real(kind=4) stdrd [value-expr: extra.stdrd];
  static real(kind=4) oldrd [value-expr: extra.oldrd];
  static real(kind=4) z1000[29631] [value-expr: extra.z1000];
  static real(kind=4) qsl[29631] [value-expr: extra.qsl];
  static real(kind=4) fsl[29631] [value-expr: extra.fsl];
  static real(kind=4) ttv[29631] [value-expr: extra.ttv];
  static real(kind=4) tsl[29631] [value-expr: extra.tsl];
  static real(kind=4) pfsl[29631] [value-expr: extra.pfsl];
  static real(kind=4) ptsl[29631] [value-expr: extra.ptsl];
  static real(kind=4) pslp[29631] [value-expr: extra.pslp];
  static real(kind=4) pdvp1[29631] [value-expr: extra.pdvp1];
  static real(kind=4) pdsl[29631] [value-expr: extra.pdsl];
  static real(kind=4) t500[29631] [value-expr: extra.t500];
  static real(kind=4) slp[29631] [value-expr: extra.slp];
  static integer(kind=4) kmnt[1121266] [value-expr: extra.kmnt];
  static integer(kind=4) kmntm[38] [value-expr: extra.kmntm];
  static real(kind=4) zint[1155609] [value-expr: extra.zint];
  static real(kind=4) alpint[1155609] [value-expr: extra.alpint];
  static real(kind=4) pint[1155609] [value-expr: extra.pint];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=8) _1;
  integer(kind=8) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  real(kind=4) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  real(kind=4) _12;
  integer(kind=8) _13;
  integer(kind=8) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  real(kind=4) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  real(kind=4) _24;
  integer(kind=8) _25;
  integer(kind=8) _26;
  integer(kind=4) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=4) _30;
  integer(kind=8) _31;
  integer(kind=8) _32;
  integer(kind=8) _33;
  integer(kind=8) _34;
  integer(kind=8) _35;
  integer(kind=8) _36;
  integer(kind=8) _37;
  integer(kind=4) _38;
  integer(kind=8) _39;
  integer(kind=8) _40;
  integer(kind=8) _41;
  integer(kind=8) _42;
  integer(kind=8) _43;
  integer(kind=8) _44;
  real(kind=4) _45;
  integer(kind=8) _46;
  integer(kind=8) _47;
  integer(kind=8) _48;
  integer(kind=8) _49;
  integer(kind=8) _50;
  integer(kind=8) _51;
  integer(kind=8) _52;
  integer(kind=8) _53;
  real(kind=4) _54;
  real(kind=4) _55;
  integer(kind=8) _56;
  integer(kind=8) _57;
  integer(kind=8) _58;
  integer(kind=8) _59;
  integer(kind=8) _60;
  integer(kind=8) _61;
  integer(kind=8) _62;
  integer(kind=8) _63;
  real(kind=4) _64;
  real(kind=4) _65;
  integer(kind=8) _66;
  integer(kind=8) _67;
  integer(kind=4) _68;
  integer(kind=8) _69;
  integer(kind=8) _70;
  integer(kind=8) _71;
  integer(kind=8) _72;
  integer(kind=8) _73;
  integer(kind=8) _74;
  real(kind=4) _75;
  real(kind=4) _76;
  real(kind=4) _77;
  integer(kind=8) _78;
  integer(kind=8) _79;
  integer(kind=4) _80;
  integer(kind=8) _81;
  integer(kind=8) _82;
  integer(kind=8) _83;
  integer(kind=8) _84;
  integer(kind=8) _85;
  integer(kind=8) _86;
  real(kind=4) _87;
  integer(kind=8) _88;
  integer(kind=8) _89;
  integer(kind=8) _90;
  integer(kind=8) _91;
  integer(kind=8) _92;
  integer(kind=8) _93;
  integer(kind=8) _94;
  integer(kind=8) _95;
  real(kind=4) _96;
  real(kind=4) _97;
  integer(kind=8) _98;
  integer(kind=8) _99;
  integer(kind=8) _100;
  integer(kind=8) _101;
  integer(kind=8) _102;
  integer(kind=8) _103;
  integer(kind=8) _104;
  integer(kind=8) _105;
  real(kind=4) _106;
  real(kind=4) _107;
  integer(kind=8) _108;
  integer(kind=8) _109;
  integer(kind=4) _110;
  integer(kind=8) _111;
  integer(kind=8) _112;
  integer(kind=8) _113;
  integer(kind=8) _114;
  integer(kind=8) _115;
  integer(kind=8) _116;
  real(kind=4) _117;
  real(kind=4) _118;
  real(kind=4) _119;
  real(kind=4) _120;
  integer(kind=8) _121;
  integer(kind=8) _122;
  integer(kind=8) _123;
  integer(kind=8) _124;
  integer(kind=8) _125;
  integer(kind=8) _126;
  integer(kind=8) _127;
  integer(kind=8) _128;
  real(kind=4) _129;
  integer(kind=8) _130;
  integer(kind=8) _131;
  integer(kind=8) _132;
  integer(kind=8) _133;
  integer(kind=8) _134;
  integer(kind=8) _135;
  integer(kind=8) _136;
  integer(kind=8) _137;
  integer(kind=8) _138;
  integer(kind=8) _139;
  integer(kind=8) _140;
  integer(kind=8) _141;
  integer(kind=8) _142;
  integer(kind=8) _143;
  integer(kind=8) _144;
  integer(kind=8) _145;
  integer(kind=8) _146;
  integer(kind=8) _147;
  real(kind=4) _148;
  integer(kind=4) _149;
  integer(kind=8) _150;
  integer(kind=8) _151;
  integer(kind=8) _152;
  integer(kind=8) _153;
  integer(kind=8) _154;
  integer(kind=8) _155;
  integer(kind=8) _156;
  integer(kind=8) _157;
  real(kind=4) _158;
  real(kind=4) _159;
  real(kind=4) _160;
  integer(kind=8) _161;
  integer(kind=8) _162;
  integer(kind=8) _163;
  integer(kind=8) _164;
  integer(kind=8) _165;
  real(kind=4) _166;
  integer(kind=4) _167;
  integer(kind=8) _168;
  integer(kind=8) _169;
  integer(kind=8) _170;
  integer(kind=8) _171;
  integer(kind=8) _172;
  integer(kind=8) _173;
  integer(kind=8) _174;
  integer(kind=8) _175;
  real(kind=4) _176;
  integer(kind=4) _177;
  integer(kind=8) _178;
  integer(kind=8) _179;
  integer(kind=8) _180;
  integer(kind=8) _181;
  integer(kind=8) _182;
  integer(kind=8) _183;
  integer(kind=8) _184;
  integer(kind=8) _185;
  real(kind=4) _186;
  real(kind=4) _187;
  integer(kind=4) _188;
  integer(kind=8) _189;
  integer(kind=8) _190;
  integer(kind=8) _191;
  integer(kind=8) _192;
  integer(kind=8) _193;
  integer(kind=8) _194;
  integer(kind=8) _195;
  integer(kind=8) _196;
  real(kind=4) _197;
  real(kind=4) _198;
  real(kind=4) _199;
  real(kind=4) _200;
  real(kind=4) _201;
  real(kind=4) _202;
  integer(kind=4) _203;
  integer(kind=8) _204;
  integer(kind=8) _205;
  integer(kind=8) _206;
  integer(kind=8) _207;
  integer(kind=8) _208;
  integer(kind=8) _209;
  integer(kind=8) _210;
  integer(kind=8) _211;
  real(kind=4) _212;
  real(kind=4) _213;
  integer(kind=8) _214;
  integer(kind=8) _215;
  integer(kind=8) _216;
  integer(kind=8) _217;
  integer(kind=8) _218;
  real(kind=4) _219;
  real(kind=4) _220;
  real(kind=4) _221;
  real(kind=4) _222;
  real(kind=4) _223;
  integer(kind=4) _224;
  integer(kind=8) _225;
  integer(kind=8) _226;
  integer(kind=8) _227;
  integer(kind=8) _228;
  integer(kind=8) _229;
  integer(kind=8) _230;
  integer(kind=8) _231;
  integer(kind=8) _232;
  real(kind=4) _233;
  integer(kind=8) _234;
  integer(kind=8) _235;
  integer(kind=8) _236;
  integer(kind=8) _237;
  integer(kind=8) _238;
  real(kind=4) _239;
  integer(kind=4) _255;
  integer(kind=4) _256;
  logical(kind=4) _258;
  logical(kind=4) _260;
  integer(kind=4) _271;
  integer(kind=4) _272;
  logical(kind=4) _274;
  logical(kind=4) _276;
  integer(kind=4) _281;
  logical(kind=4) _283;
  real(kind=4) _286;
  real(kind=4) _287;
  real(kind=4) _288;
  real(kind=4) _289;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  critp_253 = 5.0e+4;
  _255 = parallel.jsta;
  _256 = parallel.jend;
  j_257 = _255;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # j_242 = PHI <j_257(2), j_270(7)>
  _258 = j_242 > _256;
  if (_258 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_259 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                6
  # i_240 = PHI <i_259(4), i_269(6)>
  _260 = i_240 > 119;
  if (_260 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _1 = (integer(kind=8)) j_242;
  _2 = _1 * 119;
  _3 = (integer(kind=8)) i_240;
  _4 = _2 + _3;
  _5 = _4 + -120;
  _6 = options.spval;
  *mxwu_261(D)[_5] = _6;
  _7 = (integer(kind=8)) j_242;
  _8 = _7 * 119;
  _9 = (integer(kind=8)) i_240;
  _10 = _8 + _9;
  _11 = _10 + -120;
  _12 = options.spval;
  *mxwv_263(D)[_11] = _12;
  _13 = (integer(kind=8)) j_242;
  _14 = _13 * 119;
  _15 = (integer(kind=8)) i_240;
  _16 = _14 + _15;
  _17 = _16 + -120;
  _18 = options.spval;
  *mxwp_265(D)[_17] = _18;
  _19 = (integer(kind=8)) j_242;
  _20 = _19 * 119;
  _21 = (integer(kind=8)) i_240;
  _22 = _20 + _21;
  _23 = _22 + -120;
  _24 = options.spval;
  *mxwz_267(D)[_23] = _24;
  i_269 = i_240 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       5
  j_270 = j_242 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       3
  _271 = parallel.jsta_m;
  _272 = parallel.jend_m;
  j_273 = _271;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       8
;;                19
  # j_243 = PHI <j_273(8), j_298(19)>
  _274 = j_243 > _272;
  if (_274 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       20
;;                10

;;   basic block 10, loop depth 1
;;    pred:       9
  i_275 = 2;
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                18
  # i_241 = PHI <i_275(10), i_297(18)>
  _276 = i_241 > 118;
  if (_276 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       19
;;                12

;;   basic block 12, loop depth 2
;;    pred:       11
  _25 = (integer(kind=8)) j_243;
  _26 = _25 + -1;
  _27 = indx.ihe[_26];
  ie_277 = i_241 + _27;
  _28 = (integer(kind=8)) j_243;
  _29 = _28 + -1;
  _30 = indx.ihw[_29];
  iw_278 = i_241 + _30;
  mxww_279 = -1.0e+3;
  _31 = (integer(kind=8)) j_243;
  _32 = _31 * 119;
  _33 = (integer(kind=8)) i_241;
  _34 = _32 + _33;
  _35 = _34 + -120;
  llmh_280 = loops.lmh[_35];
  _281 = llmh_280 + -1;
  l_282 = _281;
;;    succ:       13

;;   basic block 13, loop depth 3
;;    pred:       12
;;                17
  # l_244 = PHI <l_282(12), l_296(17)>
  # mxww_245 = PHI <mxww_279(12), mxww_246(17)>
  _283 = l_244 <= 0;
  if (_283 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       18
;;                14

;;   basic block 14, loop depth 3
;;    pred:       13
  _36 = (integer(kind=8)) l_244;
  _37 = _36 * 29631;
  _38 = j_243 + -1;
  _39 = (integer(kind=8)) _38;
  _40 = _39 * 119;
  _41 = _37 + _40;
  _42 = (integer(kind=8)) i_241;
  _43 = _41 + _42;
  _44 = _43 + -29751;
  _45 = vrbls.u[_44];
  _46 = (integer(kind=8)) l_244;
  _47 = _46 * 29631;
  _48 = (integer(kind=8)) j_243;
  _49 = _48 * 119;
  _50 = _47 + _49;
  _51 = (integer(kind=8)) iw_278;
  _52 = _50 + _51;
  _53 = _52 + -29751;
  _54 = vrbls.u[_53];
  _55 = _45 + _54;
  _56 = (integer(kind=8)) l_244;
  _57 = _56 * 29631;
  _58 = (integer(kind=8)) j_243;
  _59 = _58 * 119;
  _60 = _57 + _59;
  _61 = (integer(kind=8)) ie_277;
  _62 = _60 + _61;
  _63 = _62 + -29751;
  _64 = vrbls.u[_63];
  _65 = _55 + _64;
  _66 = (integer(kind=8)) l_244;
  _67 = _66 * 29631;
  _68 = j_243 + 1;
  _69 = (integer(kind=8)) _68;
  _70 = _69 * 119;
  _71 = _67 + _70;
  _72 = (integer(kind=8)) i_241;
  _73 = _71 + _72;
  _74 = _73 + -29751;
  _75 = vrbls.u[_74];
  _76 = _65 + _75;
  _77 = ((_76));
  u0_284 = _77 * 2.5e-1;
  _78 = (integer(kind=8)) l_244;
  _79 = _78 * 29631;
  _80 = j_243 + -1;
  _81 = (integer(kind=8)) _80;
  _82 = _81 * 119;
  _83 = _79 + _82;
  _84 = (integer(kind=8)) i_241;
  _85 = _83 + _84;
  _86 = _85 + -29751;
  _87 = vrbls.v[_86];
  _88 = (integer(kind=8)) l_244;
  _89 = _88 * 29631;
  _90 = (integer(kind=8)) j_243;
  _91 = _90 * 119;
  _92 = _89 + _91;
  _93 = (integer(kind=8)) iw_278;
  _94 = _92 + _93;
  _95 = _94 + -29751;
  _96 = vrbls.v[_95];
  _97 = _87 + _96;
  _98 = (integer(kind=8)) l_244;
  _99 = _98 * 29631;
  _100 = (integer(kind=8)) j_243;
  _101 = _100 * 119;
  _102 = _99 + _101;
  _103 = (integer(kind=8)) ie_277;
  _104 = _102 + _103;
  _105 = _104 + -29751;
  _106 = vrbls.v[_105];
  _107 = _97 + _106;
  _108 = (integer(kind=8)) l_244;
  _109 = _108 * 29631;
  _110 = j_243 + 1;
  _111 = (integer(kind=8)) _110;
  _112 = _111 * 119;
  _113 = _109 + _112;
  _114 = (integer(kind=8)) i_241;
  _115 = _113 + _114;
  _116 = _115 + -29751;
  _117 = vrbls.v[_116];
  _118 = _107 + _117;
  _119 = ((_118));
  v0_285 = _119 * 2.5e-1;
  _286 = u0_284;
  _287 = _286 * _286;
  _288 = v0_285;
  _289 = _288 * _288;
  _120 = _287 + _289;
  wind_290 = __builtin_sqrtf (_120);
  if (wind_290 > mxww_245)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]
;;    succ:       15
;;                17

;;   basic block 15, loop depth 3
;;    pred:       14
  _121 = (integer(kind=8)) l_244;
  _122 = _121 * 29631;
  _123 = (integer(kind=8)) j_243;
  _124 = _123 * 119;
  _125 = _122 + _124;
  _126 = (integer(kind=8)) i_241;
  _127 = _125 + _126;
  _128 = _127 + -29751;
  _129 = extra.pint[_128];
  if (critp_253 > _129)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]
;;    succ:       16
;;                17

;;   basic block 16, loop depth 3
;;    pred:       15
  _130 = (integer(kind=8)) j_243;
  _131 = _130 * 119;
  _132 = (integer(kind=8)) i_241;
  _133 = _131 + _132;
  _134 = _133 + -120;
  *mxwu_261(D)[_134] = u0_284;
  _135 = (integer(kind=8)) j_243;
  _136 = _135 * 119;
  _137 = (integer(kind=8)) i_241;
  _138 = _136 + _137;
  _139 = _138 + -120;
  *mxwv_263(D)[_139] = v0_285;
  mxww_293 = wind_290;
  _140 = (integer(kind=8)) l_244;
  _141 = _140 * 29631;
  _142 = (integer(kind=8)) j_243;
  _143 = _142 * 119;
  _144 = _141 + _143;
  _145 = (integer(kind=8)) i_241;
  _146 = _144 + _145;
  _147 = _146 + -29751;
  _148 = extra.pint[_147];
  _149 = l_244 + 1;
  _150 = (integer(kind=8)) _149;
  _151 = _150 * 29631;
  _152 = (integer(kind=8)) j_243;
  _153 = _152 * 119;
  _154 = _151 + _153;
  _155 = (integer(kind=8)) i_241;
  _156 = _154 + _155;
  _157 = _156 + -29751;
  _158 = extra.pint[_157];
  _159 = _148 + _158;
  _160 = ((_159));
  _161 = (integer(kind=8)) j_243;
  _162 = _161 * 119;
  _163 = (integer(kind=8)) i_241;
  _164 = _162 + _163;
  _165 = _164 + -120;
  _166 = _160 * 5.0e-1;
  *mxwp_265(D)[_165] = _166;
  _167 = l_244 + 1;
  _168 = (integer(kind=8)) _167;
  _169 = _168 * 29631;
  _170 = (integer(kind=8)) j_243;
  _171 = _170 * 119;
  _172 = _169 + _171;
  _173 = (integer(kind=8)) i_241;
  _174 = _172 + _173;
  _175 = _174 + -29751;
  _176 = masks.htm[_175];
  _177 = l_244 + 1;
  _178 = (integer(kind=8)) _177;
  _179 = _178 * 29631;
  _180 = (integer(kind=8)) j_243;
  _181 = _180 * 119;
  _182 = _179 + _181;
  _183 = (integer(kind=8)) i_241;
  _184 = _182 + _183;
  _185 = _184 + -29751;
  _186 = vrbls.t[_185];
  _187 = _176 * _186;
  _188 = l_244 + 1;
  _189 = (integer(kind=8)) _188;
  _190 = _189 * 29631;
  _191 = (integer(kind=8)) j_243;
  _192 = _191 * 119;
  _193 = _190 + _192;
  _194 = (integer(kind=8)) i_241;
  _195 = _193 + _194;
  _196 = _195 + -29751;
  _197 = vrbls.q[_196];
  _198 = _197 * 6.07999980449676513671875e-1;
  _199 = _198 + 1.0e+0;
  _200 = ((_199));
  _201 = _187 * _200;
  _202 = _201 * 2.92897968292236328125e+1;
  _203 = l_244 + 1;
  _204 = (integer(kind=8)) _203;
  _205 = _204 * 29631;
  _206 = (integer(kind=8)) j_243;
  _207 = _206 * 119;
  _208 = _205 + _207;
  _209 = (integer(kind=8)) i_241;
  _210 = _208 + _209;
  _211 = _210 + -29751;
  _212 = extra.pint[_211];
  _213 = __builtin_logf (_212);
  _214 = (integer(kind=8)) j_243;
  _215 = _214 * 119;
  _216 = (integer(kind=8)) i_241;
  _217 = _215 + _216;
  _218 = _217 + -120;
  _219 = *mxwp_265(D)[_218];
  _220 = __builtin_logf (_219);
  _221 = _213 - _220;
  _222 = ((_221));
  _223 = _202 * _222;
  _224 = l_244 + 1;
  _225 = (integer(kind=8)) _224;
  _226 = _225 * 29631;
  _227 = (integer(kind=8)) j_243;
  _228 = _227 * 119;
  _229 = _226 + _228;
  _230 = (integer(kind=8)) i_241;
  _231 = _229 + _230;
  _232 = _231 + -29751;
  _233 = extra.zint[_232];
  _234 = (integer(kind=8)) j_243;
  _235 = _234 * 119;
  _236 = (integer(kind=8)) i_241;
  _237 = _235 + _236;
  _238 = _237 + -120;
  _239 = _223 + _233;
  *mxwz_267(D)[_238] = _239;
;;    succ:       17

;;   basic block 17, loop depth 3
;;    pred:       14
;;                15
;;                16
  # mxww_246 = PHI <mxww_245(14), mxww_245(15), mxww_293(16)>
  l_296 = l_244 + -1;
  goto <bb 13>; [INV]
;;    succ:       13

;;   basic block 18, loop depth 2
;;    pred:       13
  i_297 = i_241 + 1;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 19, loop depth 1
;;    pred:       11
  j_298 = j_243 + 1;
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 20, loop depth 0
;;    pred:       9
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       20
<L26>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (_101 - 101 )
Partition 102 (_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )
Partition 112 (_112 - 112 )
Partition 113 (_113 - 113 )
Partition 114 (_114 - 114 )
Partition 115 (_115 - 115 )
Partition 116 (_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (_120 - 120 )
Partition 121 (_121 - 121 )
Partition 122 (_122 - 122 )
Partition 123 (_123 - 123 )
Partition 124 (_124 - 124 )
Partition 125 (_125 - 125 )
Partition 126 (_126 - 126 )
Partition 127 (_127 - 127 )
Partition 128 (_128 - 128 )
Partition 129 (_129 - 129 )
Partition 130 (_130 - 130 )
Partition 131 (_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (_133 - 133 )
Partition 134 (_134 - 134 )
Partition 135 (_135 - 135 )
Partition 136 (_136 - 136 )
Partition 137 (_137 - 137 )
Partition 138 (_138 - 138 )
Partition 139 (_139 - 139 )
Partition 140 (_140 - 140 )
Partition 141 (_141 - 141 )
Partition 142 (_142 - 142 )
Partition 143 (_143 - 143 )
Partition 144 (_144 - 144 )
Partition 145 (_145 - 145 )
Partition 146 (_146 - 146 )
Partition 147 (_147 - 147 )
Partition 148 (_148 - 148 )
Partition 149 (_149 - 149 )
Partition 150 (_150 - 150 )
Partition 151 (_151 - 151 )
Partition 152 (_152 - 152 )
Partition 153 (_153 - 153 )
Partition 154 (_154 - 154 )
Partition 155 (_155 - 155 )
Partition 156 (_156 - 156 )
Partition 157 (_157 - 157 )
Partition 158 (_158 - 158 )
Partition 159 (_159 - 159 )
Partition 160 (_160 - 160 )
Partition 161 (_161 - 161 )
Partition 162 (_162 - 162 )
Partition 163 (_163 - 163 )
Partition 164 (_164 - 164 )
Partition 165 (_165 - 165 )
Partition 166 (_166 - 166 )
Partition 167 (_167 - 167 )
Partition 168 (_168 - 168 )
Partition 169 (_169 - 169 )
Partition 170 (_170 - 170 )
Partition 171 (_171 - 171 )
Partition 172 (_172 - 172 )
Partition 173 (_173 - 173 )
Partition 174 (_174 - 174 )
Partition 175 (_175 - 175 )
Partition 176 (_176 - 176 )
Partition 177 (_177 - 177 )
Partition 178 (_178 - 178 )
Partition 179 (_179 - 179 )
Partition 180 (_180 - 180 )
Partition 181 (_181 - 181 )
Partition 182 (_182 - 182 )
Partition 183 (_183 - 183 )
Partition 184 (_184 - 184 )
Partition 185 (_185 - 185 )
Partition 186 (_186 - 186 )
Partition 187 (_187 - 187 )
Partition 188 (_188 - 188 )
Partition 189 (_189 - 189 )
Partition 190 (_190 - 190 )
Partition 191 (_191 - 191 )
Partition 192 (_192 - 192 )
Partition 193 (_193 - 193 )
Partition 194 (_194 - 194 )
Partition 195 (_195 - 195 )
Partition 196 (_196 - 196 )
Partition 197 (_197 - 197 )
Partition 198 (_198 - 198 )
Partition 199 (_199 - 199 )
Partition 200 (_200 - 200 )
Partition 201 (_201 - 201 )
Partition 202 (_202 - 202 )
Partition 203 (_203 - 203 )
Partition 204 (_204 - 204 )
Partition 205 (_205 - 205 )
Partition 206 (_206 - 206 )
Partition 207 (_207 - 207 )
Partition 208 (_208 - 208 )
Partition 209 (_209 - 209 )
Partition 210 (_210 - 210 )
Partition 211 (_211 - 211 )
Partition 212 (_212 - 212 )
Partition 213 (_213 - 213 )
Partition 214 (_214 - 214 )
Partition 215 (_215 - 215 )
Partition 216 (_216 - 216 )
Partition 217 (_217 - 217 )
Partition 218 (_218 - 218 )
Partition 219 (_219 - 219 )
Partition 220 (_220 - 220 )
Partition 221 (_221 - 221 )
Partition 222 (_222 - 222 )
Partition 223 (_223 - 223 )
Partition 224 (_224 - 224 )
Partition 225 (_225 - 225 )
Partition 226 (_226 - 226 )
Partition 227 (_227 - 227 )
Partition 228 (_228 - 228 )
Partition 229 (_229 - 229 )
Partition 230 (_230 - 230 )
Partition 231 (_231 - 231 )
Partition 232 (_232 - 232 )
Partition 233 (_233 - 233 )
Partition 234 (_234 - 234 )
Partition 235 (_235 - 235 )
Partition 236 (_236 - 236 )
Partition 237 (_237 - 237 )
Partition 238 (_238 - 238 )
Partition 239 (_239 - 239 )
Partition 240 (i_240 - 240 )
Partition 241 (i_241 - 241 )
Partition 242 (j_242 - 242 )
Partition 243 (j_243 - 243 )
Partition 244 (l_244 - 244 )
Partition 245 (mxww_245 - 245 )
Partition 246 (mxww_246 - 246 )
Partition 253 (critp_253 - 253 )
Partition 255 (_255 - 255 )
Partition 256 (_256 - 256 )
Partition 257 (j_257 - 257 )
Partition 258 (_258 - 258 )
Partition 259 (i_259 - 259 )
Partition 260 (_260 - 260 )
Partition 261 (mxwu_261(D) - 261 )
Partition 263 (mxwv_263(D) - 263 )
Partition 265 (mxwp_265(D) - 265 )
Partition 267 (mxwz_267(D) - 267 )
Partition 269 (i_269 - 269 )
Partition 270 (j_270 - 270 )
Partition 271 (_271 - 271 )
Partition 272 (_272 - 272 )
Partition 273 (j_273 - 273 )
Partition 274 (_274 - 274 )
Partition 275 (i_275 - 275 )
Partition 276 (_276 - 276 )
Partition 277 (ie_277 - 277 )
Partition 278 (iw_278 - 278 )
Partition 279 (mxww_279 - 279 )
Partition 280 (llmh_280 - 280 )
Partition 281 (_281 - 281 )
Partition 282 (l_282 - 282 )
Partition 283 (_283 - 283 )
Partition 284 (u0_284 - 284 )
Partition 285 (v0_285 - 285 )
Partition 286 (_286 - 286 )
Partition 287 (_287 - 287 )
Partition 288 (_288 - 288 )
Partition 289 (_289 - 289 )
Partition 290 (wind_290 - 290 )
Partition 293 (mxww_293 - 293 )
Partition 296 (l_296 - 296 )
Partition 297 (i_297 - 297 )
Partition 298 (j_298 - 298 )


Coalescible Partition map 

Partition 0, base 0 (i_240 - 240 241 259 269 275 297 )
Partition 2, base 1 (j_242 - 242 243 257 270 273 298 )
Partition 4, base 2 (l_244 - 244 282 296 )
Partition 5, base 3 (mxww_245 - 245 246 279 293 )
Partition 9, base 4 (mxwu_261(D) - 261 )
Partition 10, base 5 (mxwv_263(D) - 263 )
Partition 11, base 6 (mxwp_265(D) - 265 )
Partition 12, base 7 (mxwz_267(D) - 267 )


Partition map 

Partition 0 (i_240 - 240 )
Partition 1 (i_241 - 241 )
Partition 2 (j_242 - 242 )
Partition 3 (j_243 - 243 )
Partition 4 (l_244 - 244 )
Partition 5 (mxww_245 - 245 )
Partition 6 (mxww_246 - 246 )
Partition 7 (j_257 - 257 )
Partition 8 (i_259 - 259 )
Partition 9 (mxwu_261(D) - 261 )
Partition 10 (mxwv_263(D) - 263 )
Partition 11 (mxwp_265(D) - 265 )
Partition 12 (mxwz_267(D) - 267 )
Partition 13 (i_269 - 269 )
Partition 14 (j_270 - 270 )
Partition 15 (j_273 - 273 )
Partition 16 (i_275 - 275 )
Partition 17 (mxww_279 - 279 )
Partition 18 (l_282 - 282 )
Partition 19 (mxww_293 - 293 )
Partition 20 (l_296 - 296 )
Partition 21 (i_297 - 297 )
Partition 22 (j_298 - 298 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) j_242 <-> j_257
(2147483646, 0) j_242 <-> j_270
(2147483646, 0) i_240 <-> i_259
(2147483646, 0) i_240 <-> i_269
(2147483646, 0) l_244 <-> l_282
(2147483646, 0) l_244 <-> l_296
(2147483646, 0) mxww_245 <-> mxww_279
(2147483646, 0) mxww_245 <-> mxww_246
(2147483646, 0) i_240 <-> i_241
(2147483646, 0) j_242 <-> j_243
(2147483646, 0) j_242 <-> j_273
(2147483646, 0) i_240 <-> i_275
(2147483646, 0) mxww_245 <-> mxww_293
(2147483646, 0) i_240 <-> i_297
(2147483646, 0) j_242 <-> j_298
(10000, 0) j_243 <-> j_273
(10000, 0) j_243 <-> j_298
(10000, 0) i_241 <-> i_275
(10000, 0) i_241 <-> i_297
(10000, 0) mxww_246 <-> mxww_293

Partition map 

Partition 0 (i_240 - 240 )
Partition 1 (i_241 - 241 )
Partition 2 (j_242 - 242 )
Partition 3 (j_243 - 243 )
Partition 4 (l_244 - 244 )
Partition 5 (mxww_245 - 245 )
Partition 6 (mxww_246 - 246 )
Partition 7 (j_257 - 257 )
Partition 8 (i_259 - 259 )
Partition 9 (mxwu_261(D) - 261 )
Partition 10 (mxwv_263(D) - 263 )
Partition 11 (mxwp_265(D) - 265 )
Partition 12 (mxwz_267(D) - 267 )
Partition 13 (i_269 - 269 )
Partition 14 (j_270 - 270 )
Partition 15 (j_273 - 273 )
Partition 16 (i_275 - 275 )
Partition 17 (mxww_279 - 279 )
Partition 18 (l_282 - 282 )
Partition 19 (mxww_293 - 293 )
Partition 20 (l_296 - 296 )
Partition 21 (i_297 - 297 )
Partition 22 (j_298 - 298 )

Coalesce list: (242)j_242 & (257)j_257 [map: 2, 7] : Success -> 2
Coalesce list: (242)j_242 & (270)j_270 [map: 2, 14] : Success -> 2
Coalesce list: (240)i_240 & (259)i_259 [map: 0, 8] : Success -> 0
Coalesce list: (240)i_240 & (269)i_269 [map: 0, 13] : Success -> 0
Coalesce list: (244)l_244 & (282)l_282 [map: 4, 18] : Success -> 4
Coalesce list: (244)l_244 & (296)l_296 [map: 4, 20] : Success -> 4
Coalesce list: (245)mxww_245 & (279)mxww_279 [map: 5, 17] : Success -> 5
Coalesce list: (245)mxww_245 & (246)mxww_246 [map: 5, 6] : Success -> 5
Coalesce list: (240)i_240 & (241)i_241 [map: 0, 1] : Success -> 0
Coalesce list: (242)j_242 & (243)j_243 [map: 2, 3] : Success -> 2
Coalesce list: (242)j_242 & (273)j_273 [map: 2, 15] : Success -> 2
Coalesce list: (240)i_240 & (275)i_275 [map: 0, 16] : Success -> 0
Coalesce list: (245)mxww_245 & (293)mxww_293 [map: 5, 19] : Success -> 5
Coalesce list: (240)i_240 & (297)i_297 [map: 0, 21] : Success -> 0
Coalesce list: (242)j_242 & (298)j_298 [map: 2, 22] : Success -> 2
Coalesce list: (243)j_242 & (273)j_242: Already Coalesced.
Coalesce list: (243)j_242 & (298)j_242: Already Coalesced.
Coalesce list: (241)i_240 & (275)i_240: Already Coalesced.
Coalesce list: (241)i_240 & (297)i_240: Already Coalesced.
Coalesce list: (246)mxww_245 & (293)mxww_245: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (_72 - 72 )
Partition 72 (_73 - 73 )
Partition 73 (_74 - 74 )
Partition 74 (_75 - 75 )
Partition 75 (_76 - 76 )
Partition 76 (_77 - 77 )
Partition 77 (_78 - 78 )
Partition 78 (_79 - 79 )
Partition 79 (_80 - 80 )
Partition 80 (_81 - 81 )
Partition 81 (_82 - 82 )
Partition 82 (_83 - 83 )
Partition 83 (_84 - 84 )
Partition 84 (_85 - 85 )
Partition 85 (_86 - 86 )
Partition 86 (_87 - 87 )
Partition 87 (_88 - 88 )
Partition 88 (_89 - 89 )
Partition 89 (_90 - 90 )
Partition 90 (_91 - 91 )
Partition 91 (_92 - 92 )
Partition 92 (_93 - 93 )
Partition 93 (_94 - 94 )
Partition 94 (_95 - 95 )
Partition 95 (_96 - 96 )
Partition 96 (_97 - 97 )
Partition 97 (_98 - 98 )
Partition 98 (_99 - 99 )
Partition 99 (_100 - 100 )
Partition 100 (_101 - 101 )
Partition 101 (_102 - 102 )
Partition 102 (_103 - 103 )
Partition 103 (_104 - 104 )
Partition 104 (_105 - 105 )
Partition 105 (_106 - 106 )
Partition 106 (_107 - 107 )
Partition 107 (_108 - 108 )
Partition 108 (_109 - 109 )
Partition 109 (_110 - 110 )
Partition 110 (_111 - 111 )
Partition 111 (_112 - 112 )
Partition 112 (_113 - 113 )
Partition 113 (_114 - 114 )
Partition 114 (_115 - 115 )
Partition 115 (_116 - 116 )
Partition 116 (_117 - 117 )
Partition 117 (_118 - 118 )
Partition 118 (_119 - 119 )
Partition 119 (_120 - 120 )
Partition 120 (_121 - 121 )
Partition 121 (_122 - 122 )
Partition 122 (_123 - 123 )
Partition 123 (_124 - 124 )
Partition 124 (_125 - 125 )
Partition 125 (_126 - 126 )
Partition 126 (_127 - 127 )
Partition 127 (_128 - 128 )
Partition 128 (_129 - 129 )
Partition 129 (_130 - 130 )
Partition 130 (_131 - 131 )
Partition 131 (_132 - 132 )
Partition 132 (_133 - 133 )
Partition 133 (_134 - 134 )
Partition 134 (_135 - 135 )
Partition 135 (_136 - 136 )
Partition 136 (_137 - 137 )
Partition 137 (_138 - 138 )
Partition 138 (_139 - 139 )
Partition 139 (_140 - 140 )
Partition 140 (_141 - 141 )
Partition 141 (_142 - 142 )
Partition 142 (_143 - 143 )
Partition 143 (_144 - 144 )
Partition 144 (_145 - 145 )
Partition 145 (_146 - 146 )
Partition 146 (_147 - 147 )
Partition 147 (_148 - 148 )
Partition 148 (_149 - 149 )
Partition 149 (_150 - 150 )
Partition 150 (_151 - 151 )
Partition 151 (_152 - 152 )
Partition 152 (_153 - 153 )
Partition 153 (_154 - 154 )
Partition 154 (_155 - 155 )
Partition 155 (_156 - 156 )
Partition 156 (_157 - 157 )
Partition 157 (_158 - 158 )
Partition 158 (_159 - 159 )
Partition 159 (_160 - 160 )
Partition 160 (_161 - 161 )
Partition 161 (_162 - 162 )
Partition 162 (_163 - 163 )
Partition 163 (_164 - 164 )
Partition 164 (_165 - 165 )
Partition 165 (_166 - 166 )
Partition 166 (_167 - 167 )
Partition 167 (_168 - 168 )
Partition 168 (_169 - 169 )
Partition 169 (_170 - 170 )
Partition 170 (_171 - 171 )
Partition 171 (_172 - 172 )
Partition 172 (_173 - 173 )
Partition 173 (_174 - 174 )
Partition 174 (_175 - 175 )
Partition 175 (_176 - 176 )
Partition 176 (_177 - 177 )
Partition 177 (_178 - 178 )
Partition 178 (_179 - 179 )
Partition 179 (_180 - 180 )
Partition 180 (_181 - 181 )
Partition 181 (_182 - 182 )
Partition 182 (_183 - 183 )
Partition 183 (_184 - 184 )
Partition 184 (_185 - 185 )
Partition 185 (_186 - 186 )
Partition 186 (_187 - 187 )
Partition 187 (_188 - 188 )
Partition 188 (_189 - 189 )
Partition 189 (_190 - 190 )
Partition 190 (_191 - 191 )
Partition 191 (_192 - 192 )
Partition 192 (_193 - 193 )
Partition 193 (_194 - 194 )
Partition 194 (_195 - 195 )
Partition 195 (_196 - 196 )
Partition 196 (_197 - 197 )
Partition 197 (_198 - 198 )
Partition 198 (_199 - 199 )
Partition 199 (_200 - 200 )
Partition 200 (_201 - 201 )
Partition 201 (_202 - 202 )
Partition 202 (_203 - 203 )
Partition 203 (_204 - 204 )
Partition 204 (_205 - 205 )
Partition 205 (_206 - 206 )
Partition 206 (_207 - 207 )
Partition 207 (_208 - 208 )
Partition 208 (_209 - 209 )
Partition 209 (_210 - 210 )
Partition 210 (_211 - 211 )
Partition 211 (_212 - 212 )
Partition 212 (_213 - 213 )
Partition 213 (_214 - 214 )
Partition 214 (_215 - 215 )
Partition 215 (_216 - 216 )
Partition 216 (_217 - 217 )
Partition 217 (_218 - 218 )
Partition 218 (_219 - 219 )
Partition 219 (_220 - 220 )
Partition 220 (_221 - 221 )
Partition 221 (_222 - 222 )
Partition 222 (_223 - 223 )
Partition 223 (_224 - 224 )
Partition 224 (_225 - 225 )
Partition 225 (_226 - 226 )
Partition 226 (_227 - 227 )
Partition 227 (_228 - 228 )
Partition 228 (_229 - 229 )
Partition 229 (_230 - 230 )
Partition 230 (_231 - 231 )
Partition 231 (_232 - 232 )
Partition 232 (_233 - 233 )
Partition 233 (_234 - 234 )
Partition 234 (_235 - 235 )
Partition 235 (_236 - 236 )
Partition 236 (_237 - 237 )
Partition 237 (_238 - 238 )
Partition 238 (_239 - 239 )
Partition 239 (i_240 - 240 241 259 269 275 297 )
Partition 240 (j_242 - 242 243 257 270 273 298 )
Partition 241 (l_244 - 244 282 296 )
Partition 242 (mxww_245 - 245 246 279 293 )
Partition 243 (critp_253 - 253 )
Partition 244 (_255 - 255 )
Partition 245 (_256 - 256 )
Partition 246 (_258 - 258 )
Partition 247 (_260 - 260 )
Partition 248 (mxwu_261(D) - 261 )
Partition 249 (mxwv_263(D) - 263 )
Partition 250 (mxwp_265(D) - 265 )
Partition 251 (mxwz_267(D) - 267 )
Partition 252 (_271 - 271 )
Partition 253 (_272 - 272 )
Partition 254 (_274 - 274 )
Partition 255 (_276 - 276 )
Partition 256 (ie_277 - 277 )
Partition 257 (iw_278 - 278 )
Partition 258 (llmh_280 - 280 )
Partition 259 (_281 - 281 )
Partition 260 (_283 - 283 )
Partition 261 (u0_284 - 284 )
Partition 262 (v0_285 - 285 )
Partition 263 (_286 - 286 )
Partition 264 (_287 - 287 )
Partition 265 (_288 - 288 )
Partition 266 (_289 - 289 )
Partition 267 (wind_290 - 290 )

calmxw (real(kind=4)[29631] * restrict mxwp, real(kind=4)[29631] * restrict mxwz, real(kind=4)[29631] * restrict mxwu, real(kind=4)[29631] * restrict mxwv)
{
  real(kind=4) D.4051;
  real(kind=4) D.4050;
  real(kind=4) D.4049;
  real(kind=4) D.4048;
  logical(kind=4) D.4047;
  integer(kind=4) D.4044;
  logical(kind=4) D.4043;
  logical(kind=4) D.4040;
  integer(kind=4) D.4037;
  integer(kind=4) D.4036;
  logical(kind=4) D.4035;
  logical(kind=4) D.4032;
  integer(kind=4) D.4029;
  integer(kind=4) D.4028;
  real(kind=4) wind;
  real(kind=4) v0;
  real(kind=4) u0;
  real(kind=4) mxww;
  integer(kind=4) llmh;
  integer(kind=4) l;
  integer(kind=4) j;
  integer(kind=4) iw;
  integer(kind=4) ie;
  integer(kind=4) i;
  real(kind=4) critp;
  static real(kind=4) q[1125978] [value-expr: vrbls.q];
  static real(kind=4) t[1125978] [value-expr: vrbls.t];
  static real(kind=4) v[1125978] [value-expr: vrbls.v];
  static real(kind=4) u[1125978] [value-expr: vrbls.u];
  static real(kind=4) fis[29631] [value-expr: vrbls.fis];
  static real(kind=4) res[29631] [value-expr: vrbls.res];
  static real(kind=4) pd[29631] [value-expr: vrbls.pd];
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static real(kind=4) satdel [value-expr: options.satdel];
  static integer(kind=4) iflag [value-expr: options.iflag];
  static integer(kind=4) ioffs [value-expr: options.ioffs];
  static integer(kind=4) ksb [value-expr: options.ksb];
  static integer(kind=4) ibessl [value-expr: options.ibessl];
  static real(kind=4) spval [value-expr: options.spval];
  static real(kind=4) vtm[1125978] [value-expr: masks.vtm];
  static real(kind=4) htm[1125978] [value-expr: masks.htm];
  static real(kind=4) sice[29631] [value-expr: masks.sice];
  static real(kind=4) sm[29631] [value-expr: masks.sm];
  static real(kind=4) vbm3[29631] [value-expr: masks.vbm3];
  static real(kind=4) vbm2[29631] [value-expr: masks.vbm2];
  static real(kind=4) hbm2[29631] [value-expr: masks.hbm2];
  static integer(kind=4) lmv[29631] [value-expr: loops.lmv];
  static integer(kind=4) lmh[29631] [value-expr: loops.lmh];
  static integer(kind=4) jra[484] [value-expr: loops.jra];
  static integer(kind=4) ivha[484] [value-expr: loops.ivha];
  static integer(kind=4) ivla[484] [value-expr: loops.ivla];
  static integer(kind=4) ihha[484] [value-expr: loops.ihha];
  static integer(kind=4) ihla[484] [value-expr: loops.ihla];
  static integer(kind=4) ivw[249] [value-expr: indx.ivw];
  static integer(kind=4) ive[249] [value-expr: indx.ive];
  static integer(kind=4) ihw[249] [value-expr: indx.ihw];
  static integer(kind=4) ihe[249] [value-expr: indx.ihe];
  static integer(kind=4) maxwv[29631] [value-expr: extra.maxwv];
  static integer(kind=4) maxwu[29631] [value-expr: extra.maxwu];
  static real(kind=4) tlmax[29631] [value-expr: extra.tlmax];
  static real(kind=4) tlmin[29631] [value-expr: extra.tlmin];
  static real(kind=4) stdrd [value-expr: extra.stdrd];
  static real(kind=4) oldrd [value-expr: extra.oldrd];
  static real(kind=4) z1000[29631] [value-expr: extra.z1000];
  static real(kind=4) qsl[29631] [value-expr: extra.qsl];
  static real(kind=4) fsl[29631] [value-expr: extra.fsl];
  static real(kind=4) ttv[29631] [value-expr: extra.ttv];
  static real(kind=4) tsl[29631] [value-expr: extra.tsl];
  static real(kind=4) pfsl[29631] [value-expr: extra.pfsl];
  static real(kind=4) ptsl[29631] [value-expr: extra.ptsl];
  static real(kind=4) pslp[29631] [value-expr: extra.pslp];
  static real(kind=4) pdvp1[29631] [value-expr: extra.pdvp1];
  static real(kind=4) pdsl[29631] [value-expr: extra.pdsl];
  static real(kind=4) t500[29631] [value-expr: extra.t500];
  static real(kind=4) slp[29631] [value-expr: extra.slp];
  static integer(kind=4) kmnt[1121266] [value-expr: extra.kmnt];
  static integer(kind=4) kmntm[38] [value-expr: extra.kmntm];
  static real(kind=4) zint[1155609] [value-expr: extra.zint];
  static real(kind=4) alpint[1155609] [value-expr: extra.alpint];
  static real(kind=4) pint[1155609] [value-expr: extra.pint];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=8) _1;
  integer(kind=8) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  real(kind=4) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  real(kind=4) _12;
  integer(kind=8) _13;
  integer(kind=8) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  real(kind=4) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  real(kind=4) _24;
  integer(kind=8) _25;
  integer(kind=8) _26;
  integer(kind=4) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=4) _30;
  integer(kind=8) _31;
  integer(kind=8) _32;
  integer(kind=8) _33;
  integer(kind=8) _34;
  integer(kind=8) _35;
  integer(kind=8) _36;
  integer(kind=8) _37;
  integer(kind=4) _38;
  integer(kind=8) _39;
  integer(kind=8) _40;
  integer(kind=8) _41;
  integer(kind=8) _42;
  integer(kind=8) _43;
  integer(kind=8) _44;
  real(kind=4) _45;
  integer(kind=8) _46;
  integer(kind=8) _47;
  integer(kind=8) _48;
  integer(kind=8) _49;
  integer(kind=8) _50;
  integer(kind=8) _51;
  integer(kind=8) _52;
  integer(kind=8) _53;
  real(kind=4) _54;
  real(kind=4) _55;
  integer(kind=8) _56;
  integer(kind=8) _57;
  integer(kind=8) _58;
  integer(kind=8) _59;
  integer(kind=8) _60;
  integer(kind=8) _61;
  integer(kind=8) _62;
  integer(kind=8) _63;
  real(kind=4) _64;
  real(kind=4) _65;
  integer(kind=8) _66;
  integer(kind=8) _67;
  integer(kind=4) _68;
  integer(kind=8) _69;
  integer(kind=8) _70;
  integer(kind=8) _71;
  integer(kind=8) _72;
  integer(kind=8) _73;
  integer(kind=8) _74;
  real(kind=4) _75;
  real(kind=4) _76;
  real(kind=4) _77;
  integer(kind=8) _78;
  integer(kind=8) _79;
  integer(kind=4) _80;
  integer(kind=8) _81;
  integer(kind=8) _82;
  integer(kind=8) _83;
  integer(kind=8) _84;
  integer(kind=8) _85;
  integer(kind=8) _86;
  real(kind=4) _87;
  integer(kind=8) _88;
  integer(kind=8) _89;
  integer(kind=8) _90;
  integer(kind=8) _91;
  integer(kind=8) _92;
  integer(kind=8) _93;
  integer(kind=8) _94;
  integer(kind=8) _95;
  real(kind=4) _96;
  real(kind=4) _97;
  integer(kind=8) _98;
  integer(kind=8) _99;
  integer(kind=8) _100;
  integer(kind=8) _101;
  integer(kind=8) _102;
  integer(kind=8) _103;
  integer(kind=8) _104;
  integer(kind=8) _105;
  real(kind=4) _106;
  real(kind=4) _107;
  integer(kind=8) _108;
  integer(kind=8) _109;
  integer(kind=4) _110;
  integer(kind=8) _111;
  integer(kind=8) _112;
  integer(kind=8) _113;
  integer(kind=8) _114;
  integer(kind=8) _115;
  integer(kind=8) _116;
  real(kind=4) _117;
  real(kind=4) _118;
  real(kind=4) _119;
  real(kind=4) _120;
  integer(kind=8) _121;
  integer(kind=8) _122;
  integer(kind=8) _123;
  integer(kind=8) _124;
  integer(kind=8) _125;
  integer(kind=8) _126;
  integer(kind=8) _127;
  integer(kind=8) _128;
  real(kind=4) _129;
  integer(kind=8) _130;
  integer(kind=8) _131;
  integer(kind=8) _132;
  integer(kind=8) _133;
  integer(kind=8) _134;
  integer(kind=8) _135;
  integer(kind=8) _136;
  integer(kind=8) _137;
  integer(kind=8) _138;
  integer(kind=8) _139;
  integer(kind=8) _140;
  integer(kind=8) _141;
  integer(kind=8) _142;
  integer(kind=8) _143;
  integer(kind=8) _144;
  integer(kind=8) _145;
  integer(kind=8) _146;
  integer(kind=8) _147;
  real(kind=4) _148;
  integer(kind=4) _149;
  integer(kind=8) _150;
  integer(kind=8) _151;
  integer(kind=8) _152;
  integer(kind=8) _153;
  integer(kind=8) _154;
  integer(kind=8) _155;
  integer(kind=8) _156;
  integer(kind=8) _157;
  real(kind=4) _158;
  real(kind=4) _159;
  real(kind=4) _160;
  integer(kind=8) _161;
  integer(kind=8) _162;
  integer(kind=8) _163;
  integer(kind=8) _164;
  integer(kind=8) _165;
  real(kind=4) _166;
  integer(kind=4) _167;
  integer(kind=8) _168;
  integer(kind=8) _169;
  integer(kind=8) _170;
  integer(kind=8) _171;
  integer(kind=8) _172;
  integer(kind=8) _173;
  integer(kind=8) _174;
  integer(kind=8) _175;
  real(kind=4) _176;
  integer(kind=4) _177;
  integer(kind=8) _178;
  integer(kind=8) _179;
  integer(kind=8) _180;
  integer(kind=8) _181;
  integer(kind=8) _182;
  integer(kind=8) _183;
  integer(kind=8) _184;
  integer(kind=8) _185;
  real(kind=4) _186;
  real(kind=4) _187;
  integer(kind=4) _188;
  integer(kind=8) _189;
  integer(kind=8) _190;
  integer(kind=8) _191;
  integer(kind=8) _192;
  integer(kind=8) _193;
  integer(kind=8) _194;
  integer(kind=8) _195;
  integer(kind=8) _196;
  real(kind=4) _197;
  real(kind=4) _198;
  real(kind=4) _199;
  real(kind=4) _200;
  real(kind=4) _201;
  real(kind=4) _202;
  integer(kind=4) _203;
  integer(kind=8) _204;
  integer(kind=8) _205;
  integer(kind=8) _206;
  integer(kind=8) _207;
  integer(kind=8) _208;
  integer(kind=8) _209;
  integer(kind=8) _210;
  integer(kind=8) _211;
  real(kind=4) _212;
  real(kind=4) _213;
  integer(kind=8) _214;
  integer(kind=8) _215;
  integer(kind=8) _216;
  integer(kind=8) _217;
  integer(kind=8) _218;
  real(kind=4) _219;
  real(kind=4) _220;
  real(kind=4) _221;
  real(kind=4) _222;
  real(kind=4) _223;
  integer(kind=4) _224;
  integer(kind=8) _225;
  integer(kind=8) _226;
  integer(kind=8) _227;
  integer(kind=8) _228;
  integer(kind=8) _229;
  integer(kind=8) _230;
  integer(kind=8) _231;
  integer(kind=8) _232;
  real(kind=4) _233;
  integer(kind=8) _234;
  integer(kind=8) _235;
  integer(kind=8) _236;
  integer(kind=8) _237;
  integer(kind=8) _238;
  real(kind=4) _239;
  integer(kind=4) _255;
  integer(kind=4) _256;
  logical(kind=4) _258;
  logical(kind=4) _260;
  integer(kind=4) _271;
  integer(kind=4) _272;
  logical(kind=4) _274;
  logical(kind=4) _276;
  integer(kind=4) _281;
  logical(kind=4) _283;
  real(kind=4) _286;
  real(kind=4) _287;
  real(kind=4) _288;
  real(kind=4) _289;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  critp_253 = 5.0e+4;
  _255 = parallel.jsta;
  _256 = parallel.jend;
  j_257 = _255;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # j_242 = PHI <j_257(2), j_270(7)>
  _258 = j_242 > _256;
  if (_258 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_259 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                6
  # i_240 = PHI <i_259(4), i_269(6)>
  _260 = i_240 > 119;
  if (_260 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _1 = (integer(kind=8)) j_242;
  _2 = _1 * 119;
  _3 = (integer(kind=8)) i_240;
  _4 = _2 + _3;
  _5 = _4 + -120;
  _6 = options.spval;
  *mxwu_261(D)[_5] = _6;
  _7 = (integer(kind=8)) j_242;
  _8 = _7 * 119;
  _9 = (integer(kind=8)) i_240;
  _10 = _8 + _9;
  _11 = _10 + -120;
  _12 = options.spval;
  *mxwv_263(D)[_11] = _12;
  _13 = (integer(kind=8)) j_242;
  _14 = _13 * 119;
  _15 = (integer(kind=8)) i_240;
  _16 = _14 + _15;
  _17 = _16 + -120;
  _18 = options.spval;
  *mxwp_265(D)[_17] = _18;
  _19 = (integer(kind=8)) j_242;
  _20 = _19 * 119;
  _21 = (integer(kind=8)) i_240;
  _22 = _20 + _21;
  _23 = _22 + -120;
  _24 = options.spval;
  *mxwz_267(D)[_23] = _24;
  i_269 = i_240 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       5
  j_270 = j_242 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       3
  _271 = parallel.jsta_m;
  _272 = parallel.jend_m;
  j_273 = _271;
;;    succ:       9

;;   basic block 9, loop depth 1
;;    pred:       8
;;                19
  # j_243 = PHI <j_273(8), j_298(19)>
  _274 = j_243 > _272;
  if (_274 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       20
;;                10

;;   basic block 10, loop depth 1
;;    pred:       9
  i_275 = 2;
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       10
;;                18
  # i_241 = PHI <i_275(10), i_297(18)>
  _276 = i_241 > 118;
  if (_276 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       19
;;                12

;;   basic block 12, loop depth 2
;;    pred:       11
  _25 = (integer(kind=8)) j_243;
  _26 = _25 + -1;
  _27 = indx.ihe[_26];
  ie_277 = i_241 + _27;
  _28 = (integer(kind=8)) j_243;
  _29 = _28 + -1;
  _30 = indx.ihw[_29];
  iw_278 = i_241 + _30;
  mxww_279 = -1.0e+3;
  _31 = (integer(kind=8)) j_243;
  _32 = _31 * 119;
  _33 = (integer(kind=8)) i_241;
  _34 = _32 + _33;
  _35 = _34 + -120;
  llmh_280 = loops.lmh[_35];
  _281 = llmh_280 + -1;
  l_282 = _281;
;;    succ:       13

;;   basic block 13, loop depth 3
;;    pred:       12
;;                17
  # l_244 = PHI <l_282(12), l_296(17)>
  # mxww_245 = PHI <mxww_279(12), mxww_246(17)>
  _283 = l_244 <= 0;
  if (_283 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       18
;;                14

;;   basic block 14, loop depth 3
;;    pred:       13
  _36 = (integer(kind=8)) l_244;
  _37 = _36 * 29631;
  _38 = j_243 + -1;
  _39 = (integer(kind=8)) _38;
  _40 = _39 * 119;
  _41 = _37 + _40;
  _42 = (integer(kind=8)) i_241;
  _43 = _41 + _42;
  _44 = _43 + -29751;
  _45 = vrbls.u[_44];
  _46 = (integer(kind=8)) l_244;
  _47 = _46 * 29631;
  _48 = (integer(kind=8)) j_243;
  _49 = _48 * 119;
  _50 = _47 + _49;
  _51 = (integer(kind=8)) iw_278;
  _52 = _50 + _51;
  _53 = _52 + -29751;
  _54 = vrbls.u[_53];
  _55 = _45 + _54;
  _56 = (integer(kind=8)) l_244;
  _57 = _56 * 29631;
  _58 = (integer(kind=8)) j_243;
  _59 = _58 * 119;
  _60 = _57 + _59;
  _61 = (integer(kind=8)) ie_277;
  _62 = _60 + _61;
  _63 = _62 + -29751;
  _64 = vrbls.u[_63];
  _65 = _55 + _64;
  _66 = (integer(kind=8)) l_244;
  _67 = _66 * 29631;
  _68 = j_243 + 1;
  _69 = (integer(kind=8)) _68;
  _70 = _69 * 119;
  _71 = _67 + _70;
  _72 = (integer(kind=8)) i_241;
  _73 = _71 + _72;
  _74 = _73 + -29751;
  _75 = vrbls.u[_74];
  _76 = _65 + _75;
  _77 = ((_76));
  u0_284 = _77 * 2.5e-1;
  _78 = (integer(kind=8)) l_244;
  _79 = _78 * 29631;
  _80 = j_243 + -1;
  _81 = (integer(kind=8)) _80;
  _82 = _81 * 119;
  _83 = _79 + _82;
  _84 = (integer(kind=8)) i_241;
  _85 = _83 + _84;
  _86 = _85 + -29751;
  _87 = vrbls.v[_86];
  _88 = (integer(kind=8)) l_244;
  _89 = _88 * 29631;
  _90 = (integer(kind=8)) j_243;
  _91 = _90 * 119;
  _92 = _89 + _91;
  _93 = (integer(kind=8)) iw_278;
  _94 = _92 + _93;
  _95 = _94 + -29751;
  _96 = vrbls.v[_95];
  _97 = _87 + _96;
  _98 = (integer(kind=8)) l_244;
  _99 = _98 * 29631;
  _100 = (integer(kind=8)) j_243;
  _101 = _100 * 119;
  _102 = _99 + _101;
  _103 = (integer(kind=8)) ie_277;
  _104 = _102 + _103;
  _105 = _104 + -29751;
  _106 = vrbls.v[_105];
  _107 = _97 + _106;
  _108 = (integer(kind=8)) l_244;
  _109 = _108 * 29631;
  _110 = j_243 + 1;
  _111 = (integer(kind=8)) _110;
  _112 = _111 * 119;
  _113 = _109 + _112;
  _114 = (integer(kind=8)) i_241;
  _115 = _113 + _114;
  _116 = _115 + -29751;
  _117 = vrbls.v[_116];
  _118 = _107 + _117;
  _119 = ((_118));
  v0_285 = _119 * 2.5e-1;
  _286 = u0_284;
  _287 = _286 * _286;
  _288 = v0_285;
  _289 = _288 * _288;
  _120 = _287 + _289;
  wind_290 = __builtin_sqrtf (_120);
  if (wind_290 > mxww_245)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]
;;    succ:       15
;;                17

;;   basic block 15, loop depth 3
;;    pred:       14
  _121 = (integer(kind=8)) l_244;
  _122 = _121 * 29631;
  _123 = (integer(kind=8)) j_243;
  _124 = _123 * 119;
  _125 = _122 + _124;
  _126 = (integer(kind=8)) i_241;
  _127 = _125 + _126;
  _128 = _127 + -29751;
  _129 = extra.pint[_128];
  if (critp_253 > _129)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]
;;    succ:       16
;;                17

;;   basic block 16, loop depth 3
;;    pred:       15
  _130 = (integer(kind=8)) j_243;
  _131 = _130 * 119;
  _132 = (integer(kind=8)) i_241;
  _133 = _131 + _132;
  _134 = _133 + -120;
  *mxwu_261(D)[_134] = u0_284;
  _135 = (integer(kind=8)) j_243;
  _136 = _135 * 119;
  _137 = (integer(kind=8)) i_241;
  _138 = _136 + _137;
  _139 = _138 + -120;
  *mxwv_263(D)[_139] = v0_285;
  mxww_293 = wind_290;
  _140 = (integer(kind=8)) l_244;
  _141 = _140 * 29631;
  _142 = (integer(kind=8)) j_243;
  _143 = _142 * 119;
  _144 = _141 + _143;
  _145 = (integer(kind=8)) i_241;
  _146 = _144 + _145;
  _147 = _146 + -29751;
  _148 = extra.pint[_147];
  _149 = l_244 + 1;
  _150 = (integer(kind=8)) _149;
  _151 = _150 * 29631;
  _152 = (integer(kind=8)) j_243;
  _153 = _152 * 119;
  _154 = _151 + _153;
  _155 = (integer(kind=8)) i_241;
  _156 = _154 + _155;
  _157 = _156 + -29751;
  _158 = extra.pint[_157];
  _159 = _148 + _158;
  _160 = ((_159));
  _161 = (integer(kind=8)) j_243;
  _162 = _161 * 119;
  _163 = (integer(kind=8)) i_241;
  _164 = _162 + _163;
  _165 = _164 + -120;
  _166 = _160 * 5.0e-1;
  *mxwp_265(D)[_165] = _166;
  _167 = l_244 + 1;
  _168 = (integer(kind=8)) _167;
  _169 = _168 * 29631;
  _170 = (integer(kind=8)) j_243;
  _171 = _170 * 119;
  _172 = _169 + _171;
  _173 = (integer(kind=8)) i_241;
  _174 = _172 + _173;
  _175 = _174 + -29751;
  _176 = masks.htm[_175];
  _177 = l_244 + 1;
  _178 = (integer(kind=8)) _177;
  _179 = _178 * 29631;
  _180 = (integer(kind=8)) j_243;
  _181 = _180 * 119;
  _182 = _179 + _181;
  _183 = (integer(kind=8)) i_241;
  _184 = _182 + _183;
  _185 = _184 + -29751;
  _186 = vrbls.t[_185];
  _187 = _176 * _186;
  _188 = l_244 + 1;
  _189 = (integer(kind=8)) _188;
  _190 = _189 * 29631;
  _191 = (integer(kind=8)) j_243;
  _192 = _191 * 119;
  _193 = _190 + _192;
  _194 = (integer(kind=8)) i_241;
  _195 = _193 + _194;
  _196 = _195 + -29751;
  _197 = vrbls.q[_196];
  _198 = _197 * 6.07999980449676513671875e-1;
  _199 = _198 + 1.0e+0;
  _200 = ((_199));
  _201 = _187 * _200;
  _202 = _201 * 2.92897968292236328125e+1;
  _203 = l_244 + 1;
  _204 = (integer(kind=8)) _203;
  _205 = _204 * 29631;
  _206 = (integer(kind=8)) j_243;
  _207 = _206 * 119;
  _208 = _205 + _207;
  _209 = (integer(kind=8)) i_241;
  _210 = _208 + _209;
  _211 = _210 + -29751;
  _212 = extra.pint[_211];
  _213 = __builtin_logf (_212);
  _214 = (integer(kind=8)) j_243;
  _215 = _214 * 119;
  _216 = (integer(kind=8)) i_241;
  _217 = _215 + _216;
  _218 = _217 + -120;
  _219 = *mxwp_265(D)[_218];
  _220 = __builtin_logf (_219);
  _221 = _213 - _220;
  _222 = ((_221));
  _223 = _202 * _222;
  _224 = l_244 + 1;
  _225 = (integer(kind=8)) _224;
  _226 = _225 * 29631;
  _227 = (integer(kind=8)) j_243;
  _228 = _227 * 119;
  _229 = _226 + _228;
  _230 = (integer(kind=8)) i_241;
  _231 = _229 + _230;
  _232 = _231 + -29751;
  _233 = extra.zint[_232];
  _234 = (integer(kind=8)) j_243;
  _235 = _234 * 119;
  _236 = (integer(kind=8)) i_241;
  _237 = _235 + _236;
  _238 = _237 + -120;
  _239 = _223 + _233;
  *mxwz_267(D)[_238] = _239;
;;    succ:       17

;;   basic block 17, loop depth 3
;;    pred:       14
;;                15
;;                16
  # mxww_246 = PHI <mxww_245(14), mxww_245(15), mxww_293(16)>
  l_296 = l_244 + -1;
  goto <bb 13>; [INV]
;;    succ:       13

;;   basic block 18, loop depth 2
;;    pred:       13
  i_297 = i_241 + 1;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 19, loop depth 1
;;    pred:       11
  j_298 = j_243 + 1;
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 20, loop depth 0
;;    pred:       9
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       20
<L26>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; critp_253 = 5.0e+4;

(insn 9 8 10 (set (reg:SF 340)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALMXW.f":72 -1
     (nil))

(insn 10 9 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 critp+0 S4 A32])
        (reg:SF 340)) "CALMXW.f":72 -1
     (nil))

;; _255 = parallel.jsta;

(insn 11 10 0 (set (reg:SI 326 [ _255 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f8a2981a630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALMXW.f":74 -1
     (nil))

;; _256 = parallel.jend;

(insn 12 11 0 (set (reg:SI 327 [ _256 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f8a2981a630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALMXW.f":74 -1
     (nil))

;; j_257 = _255;

(insn 13 12 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 326 [ _255 ])) "CALMXW.f":74 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _258 = j_242 > _256;

(insn 15 14 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 327 [ _256 ]))) "CALMXW.f":74 -1
     (nil))

(insn 16 15 17 (set (reg:QI 341)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALMXW.f":74 -1
     (nil))

(insn 17 16 0 (set (reg:SI 328 [ _258 ])
        (zero_extend:SI (reg:QI 341))) "CALMXW.f":74 -1
     (nil))

;; if (_258 != 0)

(insn 18 17 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 328 [ _258 ])
            (const_int 0 [0]))) "CALMXW.f":74 -1
     (nil))

(jump_insn 19 18 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALMXW.f":74 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; i_259 = 1;

(insn 21 20 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALMXW.f":75 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _260 = i_240 > 119;

(insn 23 22 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALMXW.f":75 -1
     (nil))

(insn 24 23 25 (set (reg:QI 342)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALMXW.f":75 -1
     (nil))

(insn 25 24 0 (set (reg:SI 329 [ _260 ])
        (zero_extend:SI (reg:QI 342))) "CALMXW.f":75 -1
     (nil))

;; if (_260 != 0)

(insn 26 25 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 329 [ _260 ])
            (const_int 0 [0]))) "CALMXW.f":75 -1
     (nil))

(jump_insn 27 26 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALMXW.f":75 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _1 = (integer(kind=8)) j_242;

(insn 29 28 30 (set (reg:SI 343)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":76 -1
     (nil))

(insn 30 29 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 343))) "CALMXW.f":76 -1
     (nil))

;; _2 = _1 * 119;

(insn 31 30 0 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":76 -1
     (nil))

;; _3 = (integer(kind=8)) i_240;

(insn 32 31 33 (set (reg:SI 344)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":76 -1
     (nil))

(insn 33 32 0 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 344))) "CALMXW.f":76 -1
     (nil))

;; _4 = _2 + _3;

(insn 34 33 0 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":76 -1
     (nil))

;; _5 = _4 + -120;

(insn 35 34 0 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":76 -1
     (nil))

;; _6 = options.spval;

(insn 36 35 0 (set (reg:SF 92 [ _6 ])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f8a2981a240 options>) [2 options.spval+0 S4 A128])) "CALMXW.f":1 -1
     (nil))

;; *mxwu_261(D)[_5] = _6;

(insn 37 36 38 (set (reg/f:DI 345)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [3 mxwu+0 S8 A64])) "CALMXW.f":76 -1
     (nil))

(insn 38 37 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 91 [ _5 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 345)) [2 *mxwu_261(D) S4 A32])
        (reg:SF 92 [ _6 ])) "CALMXW.f":76 -1
     (nil))

;; _7 = (integer(kind=8)) j_242;

(insn 39 38 40 (set (reg:SI 346)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":77 -1
     (nil))

(insn 40 39 0 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 346))) "CALMXW.f":77 -1
     (nil))

;; _8 = _7 * 119;

(insn 41 40 0 (parallel [
            (set (reg:DI 94 [ _8 ])
                (mult:DI (reg:DI 93 [ _7 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":77 -1
     (nil))

;; _9 = (integer(kind=8)) i_240;

(insn 42 41 43 (set (reg:SI 347)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":77 -1
     (nil))

(insn 43 42 0 (set (reg:DI 95 [ _9 ])
        (sign_extend:DI (reg:SI 347))) "CALMXW.f":77 -1
     (nil))

;; _10 = _8 + _9;

(insn 44 43 0 (parallel [
            (set (reg:DI 96 [ _10 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":77 -1
     (nil))

;; _11 = _10 + -120;

(insn 45 44 0 (parallel [
            (set (reg:DI 97 [ _11 ])
                (plus:DI (reg:DI 96 [ _10 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":77 -1
     (nil))

;; _12 = options.spval;

(insn 46 45 0 (set (reg:SF 98 [ _12 ])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f8a2981a240 options>) [2 options.spval+0 S4 A128])) "CALMXW.f":1 -1
     (nil))

;; *mxwv_263(D)[_11] = _12;

(insn 47 46 48 (set (reg/f:DI 348)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 mxwv+0 S8 A64])) "CALMXW.f":77 -1
     (nil))

(insn 48 47 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 348)) [2 *mxwv_263(D) S4 A32])
        (reg:SF 98 [ _12 ])) "CALMXW.f":77 -1
     (nil))

;; _13 = (integer(kind=8)) j_242;

(insn 49 48 50 (set (reg:SI 349)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":78 -1
     (nil))

(insn 50 49 0 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 349))) "CALMXW.f":78 -1
     (nil))

;; _14 = _13 * 119;

(insn 51 50 0 (parallel [
            (set (reg:DI 100 [ _14 ])
                (mult:DI (reg:DI 99 [ _13 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":78 -1
     (nil))

;; _15 = (integer(kind=8)) i_240;

(insn 52 51 53 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":78 -1
     (nil))

(insn 53 52 0 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 350))) "CALMXW.f":78 -1
     (nil))

;; _16 = _14 + _15;

(insn 54 53 0 (parallel [
            (set (reg:DI 102 [ _16 ])
                (plus:DI (reg:DI 100 [ _14 ])
                    (reg:DI 101 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":78 -1
     (nil))

;; _17 = _16 + -120;

(insn 55 54 0 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":78 -1
     (nil))

;; _18 = options.spval;

(insn 56 55 0 (set (reg:SF 104 [ _18 ])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f8a2981a240 options>) [2 options.spval+0 S4 A128])) "CALMXW.f":1 -1
     (nil))

;; *mxwp_265(D)[_17] = _18;

(insn 57 56 58 (set (reg/f:DI 351)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 mxwp+0 S8 A64])) "CALMXW.f":78 -1
     (nil))

(insn 58 57 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 351)) [2 *mxwp_265(D) S4 A32])
        (reg:SF 104 [ _18 ])) "CALMXW.f":78 -1
     (nil))

;; _19 = (integer(kind=8)) j_242;

(insn 59 58 60 (set (reg:SI 352)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":79 -1
     (nil))

(insn 60 59 0 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 352))) "CALMXW.f":79 -1
     (nil))

;; _20 = _19 * 119;

(insn 61 60 0 (parallel [
            (set (reg:DI 106 [ _20 ])
                (mult:DI (reg:DI 105 [ _19 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":79 -1
     (nil))

;; _21 = (integer(kind=8)) i_240;

(insn 62 61 63 (set (reg:SI 353)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":79 -1
     (nil))

(insn 63 62 0 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 353))) "CALMXW.f":79 -1
     (nil))

;; _22 = _20 + _21;

(insn 64 63 0 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 106 [ _20 ])
                    (reg:DI 107 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":79 -1
     (nil))

;; _23 = _22 + -120;

(insn 65 64 0 (parallel [
            (set (reg:DI 109 [ _23 ])
                (plus:DI (reg:DI 108 [ _22 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":79 -1
     (nil))

;; _24 = options.spval;

(insn 66 65 0 (set (reg:SF 110 [ _24 ])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f8a2981a240 options>) [2 options.spval+0 S4 A128])) "CALMXW.f":1 -1
     (nil))

;; *mxwz_267(D)[_23] = _24;

(insn 67 66 68 (set (reg/f:DI 354)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [3 mxwz+0 S8 A64])) "CALMXW.f":79 -1
     (nil))

(insn 68 67 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 109 [ _23 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 354)) [2 *mxwz_267(D) S4 A32])
        (reg:SF 110 [ _24 ])) "CALMXW.f":79 -1
     (nil))

;; i_269 = i_240 + 1;

(insn 69 68 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":75 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 73 72 74 3 (nil) [0 uses])

(note 74 73 0 NOTE_INSN_BASIC_BLOCK)

;; j_270 = j_242 + 1;

(insn 75 74 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":74 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 79 78 80 2 (nil) [0 uses])

(note 80 79 0 NOTE_INSN_BASIC_BLOCK)

;; _271 = parallel.jsta_m;

(insn 81 80 0 (set (reg:SI 330 [ _271 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f8a2981a630 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALMXW.f":87 -1
     (nil))

;; _272 = parallel.jend_m;

(insn 82 81 0 (set (reg:SI 331 [ _272 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f8a2981a630 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALMXW.f":87 -1
     (nil))

;; j_273 = _271;

(insn 83 82 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 330 [ _271 ])) "CALMXW.f":87 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _274 = j_243 > _272;

(insn 85 84 86 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 331 [ _272 ]))) "CALMXW.f":87 -1
     (nil))

(insn 86 85 87 (set (reg:QI 355)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALMXW.f":87 -1
     (nil))

(insn 87 86 0 (set (reg:SI 332 [ _274 ])
        (zero_extend:SI (reg:QI 355))) "CALMXW.f":87 -1
     (nil))

;; if (_274 != 0)

(insn 88 87 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 332 [ _274 ])
            (const_int 0 [0]))) "CALMXW.f":87 -1
     (nil))

(jump_insn 89 88 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALMXW.f":87 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; i_275 = 2;

(insn 91 90 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALMXW.f":88 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _276 = i_241 > 118;

(insn 93 92 94 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALMXW.f":88 -1
     (nil))

(insn 94 93 95 (set (reg:QI 356)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALMXW.f":88 -1
     (nil))

(insn 95 94 0 (set (reg:SI 333 [ _276 ])
        (zero_extend:SI (reg:QI 356))) "CALMXW.f":88 -1
     (nil))

;; if (_276 != 0)

(insn 96 95 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 333 [ _276 ])
            (const_int 0 [0]))) "CALMXW.f":88 -1
     (nil))

(jump_insn 97 96 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALMXW.f":88 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; _25 = (integer(kind=8)) j_243;

(insn 99 98 100 (set (reg:SI 357)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":89 -1
     (nil))

(insn 100 99 0 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 357))) "CALMXW.f":89 -1
     (nil))

;; _26 = _25 + -1;

(insn 101 100 0 (parallel [
            (set (reg:DI 112 [ _26 ])
                (plus:DI (reg:DI 111 [ _25 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":89 -1
     (nil))

;; _27 = indx.ihe[_26];

(insn 102 101 0 (set (reg:SI 113 [ _27 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 112 [ _26 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f8a29813630 indx>)) [1 indx.ihe S4 A32])) "CALMXW.f":89 -1
     (nil))

;; ie_277 = i_241 + _27;

(insn 106 102 107 (set (reg:SI 361)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":89 -1
     (nil))

(insn 107 106 108 (parallel [
            (set (reg:SI 360)
                (plus:SI (reg:SI 113 [ _27 ])
                    (reg:SI 361)))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":89 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 113 [ _27 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))

(insn 108 107 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ie+0 S4 A32])
        (reg:SI 360)) "CALMXW.f":89 -1
     (nil))

;; _28 = (integer(kind=8)) j_243;

(insn 109 108 110 (set (reg:SI 362)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":90 -1
     (nil))

(insn 110 109 0 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 362))) "CALMXW.f":90 -1
     (nil))

;; _29 = _28 + -1;

(insn 111 110 0 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":90 -1
     (nil))

;; _30 = indx.ihw[_29];

(insn 112 111 113 (parallel [
            (set (reg:DI 363)
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":90 -1
     (nil))

(insn 113 112 0 (set (reg:SI 116 [ _30 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 363)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f8a29813630 indx>)) [1 indx.ihw S4 A32])) "CALMXW.f":90 -1
     (nil))

;; iw_278 = i_241 + _30;

(insn 117 113 118 (set (reg:SI 367)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":90 -1
     (nil))

(insn 118 117 119 (parallel [
            (set (reg:SI 366)
                (plus:SI (reg:SI 116 [ _30 ])
                    (reg:SI 367)))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":90 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 116 [ _30 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))

(insn 119 118 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 iw+0 S4 A32])
        (reg:SI 366)) "CALMXW.f":90 -1
     (nil))

;; mxww_279 = -1.0e+3;

(insn 120 119 121 (set (reg:SF 368)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALMXW.f":91 -1
     (nil))

(insn 121 120 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 mxww+0 S4 A32])
        (reg:SF 368)) "CALMXW.f":91 -1
     (nil))

;; _31 = (integer(kind=8)) j_243;

(insn 122 121 123 (set (reg:SI 369)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":92 -1
     (nil))

(insn 123 122 0 (set (reg:DI 117 [ _31 ])
        (sign_extend:DI (reg:SI 369))) "CALMXW.f":92 -1
     (nil))

;; _32 = _31 * 119;

(insn 124 123 0 (parallel [
            (set (reg:DI 118 [ _32 ])
                (mult:DI (reg:DI 117 [ _31 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":92 -1
     (nil))

;; _33 = (integer(kind=8)) i_241;

(insn 125 124 126 (set (reg:SI 370)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":92 -1
     (nil))

(insn 126 125 0 (set (reg:DI 119 [ _33 ])
        (sign_extend:DI (reg:SI 370))) "CALMXW.f":92 -1
     (nil))

;; _34 = _32 + _33;

(insn 127 126 0 (parallel [
            (set (reg:DI 120 [ _34 ])
                (plus:DI (reg:DI 118 [ _32 ])
                    (reg:DI 119 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":92 -1
     (nil))

;; _35 = _34 + -120;

(insn 128 127 0 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 120 [ _34 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":92 -1
     (nil))

;; llmh_280 = loops.lmh[_35];

(insn 129 128 130 (set (reg/f:DI 371)
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f8a29813900 loops>)) "CALMXW.f":92 -1
     (nil))

(insn 130 129 131 (parallel [
            (set (reg:DI 372)
                (plus:DI (reg:DI 121 [ _35 ])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":92 -1
     (nil))

(insn 131 130 132 (set (reg:SI 373)
        (mem:SI (plus:DI (mult:DI (reg:DI 372)
                    (const_int 4 [0x4]))
                (reg/f:DI 371)) [1 loops.lmh S4 A32])) "CALMXW.f":92 -1
     (nil))

(insn 132 131 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 llmh+0 S4 A32])
        (reg:SI 373)) "CALMXW.f":92 -1
     (nil))

;; _281 = llmh_280 + -1;

(insn 133 132 134 (set (reg:SI 374)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 llmh+0 S4 A32])) "CALMXW.f":94 -1
     (nil))

(insn 134 133 0 (parallel [
            (set (reg:SI 334 [ _281 ])
                (plus:SI (reg:SI 374)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":94 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [1 llmh+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; l_282 = _281;

(insn 135 134 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
        (reg:SI 334 [ _281 ])) "CALMXW.f":94 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; _283 = l_244 <= 0;

(insn 137 136 138 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 0 [0]))) "CALMXW.f":94 -1
     (nil))

(insn 138 137 139 (set (reg:QI 375)
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "CALMXW.f":94 -1
     (nil))

(insn 139 138 0 (set (reg:SI 335 [ _283 ])
        (zero_extend:SI (reg:QI 375))) "CALMXW.f":94 -1
     (nil))

;; if (_283 != 0)

(insn 140 139 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 335 [ _283 ])
            (const_int 0 [0]))) "CALMXW.f":94 -1
     (nil))

(jump_insn 141 140 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALMXW.f":94 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; _36 = (integer(kind=8)) l_244;

(insn 143 142 144 (set (reg:SI 376)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":96 -1
     (nil))

(insn 144 143 0 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 376))) "CALMXW.f":96 -1
     (nil))

;; _37 = _36 * 29631;

(insn 145 144 0 (parallel [
            (set (reg:DI 123 [ _37 ])
                (mult:DI (reg:DI 122 [ _36 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _38 = j_243 + -1;

(insn 146 145 147 (set (reg:SI 377)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":96 -1
     (nil))

(insn 147 146 0 (parallel [
            (set (reg:SI 124 [ _38 ])
                (plus:SI (reg:SI 377)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; _39 = (integer(kind=8)) _38;

(insn 148 147 0 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 124 [ _38 ]))) "CALMXW.f":96 -1
     (nil))

;; _40 = _39 * 119;

(insn 149 148 0 (parallel [
            (set (reg:DI 126 [ _40 ])
                (mult:DI (reg:DI 125 [ _39 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _41 = _37 + _40;

(insn 150 149 0 (parallel [
            (set (reg:DI 127 [ _41 ])
                (plus:DI (reg:DI 123 [ _37 ])
                    (reg:DI 126 [ _40 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _42 = (integer(kind=8)) i_241;

(insn 151 150 152 (set (reg:SI 378)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":96 -1
     (nil))

(insn 152 151 0 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 378))) "CALMXW.f":96 -1
     (nil))

;; _43 = _41 + _42;

(insn 153 152 0 (parallel [
            (set (reg:DI 129 [ _43 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (reg:DI 128 [ _42 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _44 = _43 + -29751;

(insn 154 153 0 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 129 [ _43 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _45 = vrbls.u[_44];

(insn 155 154 156 (set (reg/f:DI 379)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":96 -1
     (nil))

(insn 156 155 157 (parallel [
            (set (reg:DI 380)
                (plus:DI (reg:DI 130 [ _44 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

(insn 157 156 0 (set (reg:SF 131 [ _45 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 380)
                    (const_int 4 [0x4]))
                (reg/f:DI 379)) [2 vrbls.u S4 A32])) "CALMXW.f":96 -1
     (nil))

;; _46 = (integer(kind=8)) l_244;

(insn 158 157 159 (set (reg:SI 381)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":96 -1
     (nil))

(insn 159 158 0 (set (reg:DI 132 [ _46 ])
        (sign_extend:DI (reg:SI 381))) "CALMXW.f":96 -1
     (nil))

;; _47 = _46 * 29631;

(insn 160 159 0 (parallel [
            (set (reg:DI 133 [ _47 ])
                (mult:DI (reg:DI 132 [ _46 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _48 = (integer(kind=8)) j_243;

(insn 161 160 162 (set (reg:SI 382)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":96 -1
     (nil))

(insn 162 161 0 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 382))) "CALMXW.f":96 -1
     (nil))

;; _49 = _48 * 119;

(insn 163 162 0 (parallel [
            (set (reg:DI 135 [ _49 ])
                (mult:DI (reg:DI 134 [ _48 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _50 = _47 + _49;

(insn 164 163 0 (parallel [
            (set (reg:DI 136 [ _50 ])
                (plus:DI (reg:DI 133 [ _47 ])
                    (reg:DI 135 [ _49 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _51 = (integer(kind=8)) iw_278;

(insn 165 164 166 (set (reg:SI 383)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 iw+0 S4 A32])) "CALMXW.f":96 -1
     (nil))

(insn 166 165 0 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 383))) "CALMXW.f":96 -1
     (nil))

;; _52 = _50 + _51;

(insn 167 166 0 (parallel [
            (set (reg:DI 138 [ _52 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _53 = _52 + -29751;

(insn 168 167 0 (parallel [
            (set (reg:DI 139 [ _53 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _54 = vrbls.u[_53];

(insn 169 168 170 (set (reg/f:DI 384)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":96 -1
     (nil))

(insn 170 169 171 (parallel [
            (set (reg:DI 385)
                (plus:DI (reg:DI 139 [ _53 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

(insn 171 170 0 (set (reg:SF 140 [ _54 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 385)
                    (const_int 4 [0x4]))
                (reg/f:DI 384)) [2 vrbls.u S4 A32])) "CALMXW.f":96 -1
     (nil))

;; _55 = _45 + _54;

(insn 172 171 0 (set (reg:SF 141 [ _55 ])
        (plus:SF (reg:SF 131 [ _45 ])
            (reg:SF 140 [ _54 ]))) "CALMXW.f":96 -1
     (nil))

;; _56 = (integer(kind=8)) l_244;

(insn 173 172 174 (set (reg:SI 386)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":96 -1
     (nil))

(insn 174 173 0 (set (reg:DI 142 [ _56 ])
        (sign_extend:DI (reg:SI 386))) "CALMXW.f":96 -1
     (nil))

;; _57 = _56 * 29631;

(insn 175 174 0 (parallel [
            (set (reg:DI 143 [ _57 ])
                (mult:DI (reg:DI 142 [ _56 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _58 = (integer(kind=8)) j_243;

(insn 176 175 177 (set (reg:SI 387)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":96 -1
     (nil))

(insn 177 176 0 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 387))) "CALMXW.f":96 -1
     (nil))

;; _59 = _58 * 119;

(insn 178 177 0 (parallel [
            (set (reg:DI 145 [ _59 ])
                (mult:DI (reg:DI 144 [ _58 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _60 = _57 + _59;

(insn 179 178 0 (parallel [
            (set (reg:DI 146 [ _60 ])
                (plus:DI (reg:DI 143 [ _57 ])
                    (reg:DI 145 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _61 = (integer(kind=8)) ie_277;

(insn 180 179 181 (set (reg:SI 388)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ie+0 S4 A32])) "CALMXW.f":96 -1
     (nil))

(insn 181 180 0 (set (reg:DI 147 [ _61 ])
        (sign_extend:DI (reg:SI 388))) "CALMXW.f":96 -1
     (nil))

;; _62 = _60 + _61;

(insn 182 181 0 (parallel [
            (set (reg:DI 148 [ _62 ])
                (plus:DI (reg:DI 146 [ _60 ])
                    (reg:DI 147 [ _61 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _63 = _62 + -29751;

(insn 183 182 0 (parallel [
            (set (reg:DI 149 [ _63 ])
                (plus:DI (reg:DI 148 [ _62 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _64 = vrbls.u[_63];

(insn 184 183 185 (set (reg/f:DI 389)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":96 -1
     (nil))

(insn 185 184 186 (parallel [
            (set (reg:DI 390)
                (plus:DI (reg:DI 149 [ _63 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

(insn 186 185 0 (set (reg:SF 150 [ _64 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 390)
                    (const_int 4 [0x4]))
                (reg/f:DI 389)) [2 vrbls.u S4 A32])) "CALMXW.f":96 -1
     (nil))

;; _65 = _55 + _64;

(insn 187 186 0 (set (reg:SF 151 [ _65 ])
        (plus:SF (reg:SF 141 [ _55 ])
            (reg:SF 150 [ _64 ]))) "CALMXW.f":96 -1
     (nil))

;; _66 = (integer(kind=8)) l_244;

(insn 188 187 189 (set (reg:SI 391)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":96 -1
     (nil))

(insn 189 188 0 (set (reg:DI 152 [ _66 ])
        (sign_extend:DI (reg:SI 391))) "CALMXW.f":96 -1
     (nil))

;; _67 = _66 * 29631;

(insn 190 189 0 (parallel [
            (set (reg:DI 153 [ _67 ])
                (mult:DI (reg:DI 152 [ _66 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _68 = j_243 + 1;

(insn 191 190 192 (set (reg:SI 392)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":96 -1
     (nil))

(insn 192 191 0 (parallel [
            (set (reg:SI 154 [ _68 ])
                (plus:SI (reg:SI 392)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _69 = (integer(kind=8)) _68;

(insn 193 192 0 (set (reg:DI 155 [ _69 ])
        (sign_extend:DI (reg:SI 154 [ _68 ]))) "CALMXW.f":96 -1
     (nil))

;; _70 = _69 * 119;

(insn 194 193 0 (parallel [
            (set (reg:DI 156 [ _70 ])
                (mult:DI (reg:DI 155 [ _69 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _71 = _67 + _70;

(insn 195 194 0 (parallel [
            (set (reg:DI 157 [ _71 ])
                (plus:DI (reg:DI 153 [ _67 ])
                    (reg:DI 156 [ _70 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _72 = (integer(kind=8)) i_241;

(insn 196 195 197 (set (reg:SI 393)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":96 -1
     (nil))

(insn 197 196 0 (set (reg:DI 158 [ _72 ])
        (sign_extend:DI (reg:SI 393))) "CALMXW.f":96 -1
     (nil))

;; _73 = _71 + _72;

(insn 198 197 0 (parallel [
            (set (reg:DI 159 [ _73 ])
                (plus:DI (reg:DI 157 [ _71 ])
                    (reg:DI 158 [ _72 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _74 = _73 + -29751;

(insn 199 198 0 (parallel [
            (set (reg:DI 160 [ _74 ])
                (plus:DI (reg:DI 159 [ _73 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

;; _75 = vrbls.u[_74];

(insn 200 199 201 (set (reg/f:DI 394)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":96 -1
     (nil))

(insn 201 200 202 (parallel [
            (set (reg:DI 395)
                (plus:DI (reg:DI 160 [ _74 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))

(insn 202 201 0 (set (reg:SF 161 [ _75 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 395)
                    (const_int 4 [0x4]))
                (reg/f:DI 394)) [2 vrbls.u S4 A32])) "CALMXW.f":96 -1
     (nil))

;; _76 = _65 + _75;

(insn 203 202 0 (set (reg:SF 162 [ _76 ])
        (plus:SF (reg:SF 151 [ _65 ])
            (reg:SF 161 [ _75 ]))) "CALMXW.f":96 -1
     (nil))

;; _77 = ((_76));

(insn 204 203 0 (set (reg:SF 163 [ _77 ])
        (reg:SF 162 [ _76 ])) "CALMXW.f":96 -1
     (nil))

;; u0_284 = _77 * 2.5e-1;

(insn 205 204 206 (set (reg:SF 397)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALMXW.f":96 -1
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))

(insn 206 205 207 (set (reg:SF 396)
        (mult:SF (reg:SF 163 [ _77 ])
            (reg:SF 397))) "CALMXW.f":96 -1
     (nil))

(insn 207 206 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 u0+0 S4 A32])
        (reg:SF 396)) "CALMXW.f":96 -1
     (nil))

;; _78 = (integer(kind=8)) l_244;

(insn 208 207 209 (set (reg:SI 398)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":98 -1
     (nil))

(insn 209 208 0 (set (reg:DI 164 [ _78 ])
        (sign_extend:DI (reg:SI 398))) "CALMXW.f":98 -1
     (nil))

;; _79 = _78 * 29631;

(insn 210 209 0 (parallel [
            (set (reg:DI 165 [ _79 ])
                (mult:DI (reg:DI 164 [ _78 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _80 = j_243 + -1;

(insn 211 210 212 (set (reg:SI 399)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":98 -1
     (nil))

(insn 212 211 0 (parallel [
            (set (reg:SI 166 [ _80 ])
                (plus:SI (reg:SI 399)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; _81 = (integer(kind=8)) _80;

(insn 213 212 0 (set (reg:DI 167 [ _81 ])
        (sign_extend:DI (reg:SI 166 [ _80 ]))) "CALMXW.f":98 -1
     (nil))

;; _82 = _81 * 119;

(insn 214 213 0 (parallel [
            (set (reg:DI 168 [ _82 ])
                (mult:DI (reg:DI 167 [ _81 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _83 = _79 + _82;

(insn 215 214 0 (parallel [
            (set (reg:DI 169 [ _83 ])
                (plus:DI (reg:DI 165 [ _79 ])
                    (reg:DI 168 [ _82 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _84 = (integer(kind=8)) i_241;

(insn 216 215 217 (set (reg:SI 400)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":98 -1
     (nil))

(insn 217 216 0 (set (reg:DI 170 [ _84 ])
        (sign_extend:DI (reg:SI 400))) "CALMXW.f":98 -1
     (nil))

;; _85 = _83 + _84;

(insn 218 217 0 (parallel [
            (set (reg:DI 171 [ _85 ])
                (plus:DI (reg:DI 169 [ _83 ])
                    (reg:DI 170 [ _84 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _86 = _85 + -29751;

(insn 219 218 0 (parallel [
            (set (reg:DI 172 [ _86 ])
                (plus:DI (reg:DI 171 [ _85 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _87 = vrbls.v[_86];

(insn 220 219 221 (set (reg/f:DI 401)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":98 -1
     (nil))

(insn 221 220 222 (parallel [
            (set (reg:DI 402)
                (plus:DI (reg:DI 172 [ _86 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

(insn 222 221 0 (set (reg:SF 173 [ _87 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 402)
                    (const_int 4 [0x4]))
                (reg/f:DI 401)) [2 vrbls.v S4 A32])) "CALMXW.f":98 -1
     (nil))

;; _88 = (integer(kind=8)) l_244;

(insn 223 222 224 (set (reg:SI 403)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":98 -1
     (nil))

(insn 224 223 0 (set (reg:DI 174 [ _88 ])
        (sign_extend:DI (reg:SI 403))) "CALMXW.f":98 -1
     (nil))

;; _89 = _88 * 29631;

(insn 225 224 0 (parallel [
            (set (reg:DI 175 [ _89 ])
                (mult:DI (reg:DI 174 [ _88 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _90 = (integer(kind=8)) j_243;

(insn 226 225 227 (set (reg:SI 404)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":98 -1
     (nil))

(insn 227 226 0 (set (reg:DI 176 [ _90 ])
        (sign_extend:DI (reg:SI 404))) "CALMXW.f":98 -1
     (nil))

;; _91 = _90 * 119;

(insn 228 227 0 (parallel [
            (set (reg:DI 177 [ _91 ])
                (mult:DI (reg:DI 176 [ _90 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _92 = _89 + _91;

(insn 229 228 0 (parallel [
            (set (reg:DI 178 [ _92 ])
                (plus:DI (reg:DI 175 [ _89 ])
                    (reg:DI 177 [ _91 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _93 = (integer(kind=8)) iw_278;

(insn 230 229 231 (set (reg:SI 405)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 iw+0 S4 A32])) "CALMXW.f":98 -1
     (nil))

(insn 231 230 0 (set (reg:DI 179 [ _93 ])
        (sign_extend:DI (reg:SI 405))) "CALMXW.f":98 -1
     (nil))

;; _94 = _92 + _93;

(insn 232 231 0 (parallel [
            (set (reg:DI 180 [ _94 ])
                (plus:DI (reg:DI 178 [ _92 ])
                    (reg:DI 179 [ _93 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _95 = _94 + -29751;

(insn 233 232 0 (parallel [
            (set (reg:DI 181 [ _95 ])
                (plus:DI (reg:DI 180 [ _94 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _96 = vrbls.v[_95];

(insn 234 233 235 (set (reg/f:DI 406)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":98 -1
     (nil))

(insn 235 234 236 (parallel [
            (set (reg:DI 407)
                (plus:DI (reg:DI 181 [ _95 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

(insn 236 235 0 (set (reg:SF 182 [ _96 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 407)
                    (const_int 4 [0x4]))
                (reg/f:DI 406)) [2 vrbls.v S4 A32])) "CALMXW.f":98 -1
     (nil))

;; _97 = _87 + _96;

(insn 237 236 0 (set (reg:SF 183 [ _97 ])
        (plus:SF (reg:SF 173 [ _87 ])
            (reg:SF 182 [ _96 ]))) "CALMXW.f":98 -1
     (nil))

;; _98 = (integer(kind=8)) l_244;

(insn 238 237 239 (set (reg:SI 408)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":98 -1
     (nil))

(insn 239 238 0 (set (reg:DI 184 [ _98 ])
        (sign_extend:DI (reg:SI 408))) "CALMXW.f":98 -1
     (nil))

;; _99 = _98 * 29631;

(insn 240 239 0 (parallel [
            (set (reg:DI 185 [ _99 ])
                (mult:DI (reg:DI 184 [ _98 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _100 = (integer(kind=8)) j_243;

(insn 241 240 242 (set (reg:SI 409)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":98 -1
     (nil))

(insn 242 241 0 (set (reg:DI 186 [ _100 ])
        (sign_extend:DI (reg:SI 409))) "CALMXW.f":98 -1
     (nil))

;; _101 = _100 * 119;

(insn 243 242 0 (parallel [
            (set (reg:DI 187 [ _101 ])
                (mult:DI (reg:DI 186 [ _100 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _102 = _99 + _101;

(insn 244 243 0 (parallel [
            (set (reg:DI 188 [ _102 ])
                (plus:DI (reg:DI 185 [ _99 ])
                    (reg:DI 187 [ _101 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _103 = (integer(kind=8)) ie_277;

(insn 245 244 246 (set (reg:SI 410)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ie+0 S4 A32])) "CALMXW.f":98 -1
     (nil))

(insn 246 245 0 (set (reg:DI 189 [ _103 ])
        (sign_extend:DI (reg:SI 410))) "CALMXW.f":98 -1
     (nil))

;; _104 = _102 + _103;

(insn 247 246 0 (parallel [
            (set (reg:DI 190 [ _104 ])
                (plus:DI (reg:DI 188 [ _102 ])
                    (reg:DI 189 [ _103 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _105 = _104 + -29751;

(insn 248 247 0 (parallel [
            (set (reg:DI 191 [ _105 ])
                (plus:DI (reg:DI 190 [ _104 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _106 = vrbls.v[_105];

(insn 249 248 250 (set (reg/f:DI 411)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":98 -1
     (nil))

(insn 250 249 251 (parallel [
            (set (reg:DI 412)
                (plus:DI (reg:DI 191 [ _105 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

(insn 251 250 0 (set (reg:SF 192 [ _106 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 412)
                    (const_int 4 [0x4]))
                (reg/f:DI 411)) [2 vrbls.v S4 A32])) "CALMXW.f":98 -1
     (nil))

;; _107 = _97 + _106;

(insn 252 251 0 (set (reg:SF 193 [ _107 ])
        (plus:SF (reg:SF 183 [ _97 ])
            (reg:SF 192 [ _106 ]))) "CALMXW.f":98 -1
     (nil))

;; _108 = (integer(kind=8)) l_244;

(insn 253 252 254 (set (reg:SI 413)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":98 -1
     (nil))

(insn 254 253 0 (set (reg:DI 194 [ _108 ])
        (sign_extend:DI (reg:SI 413))) "CALMXW.f":98 -1
     (nil))

;; _109 = _108 * 29631;

(insn 255 254 0 (parallel [
            (set (reg:DI 195 [ _109 ])
                (mult:DI (reg:DI 194 [ _108 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _110 = j_243 + 1;

(insn 256 255 257 (set (reg:SI 414)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":98 -1
     (nil))

(insn 257 256 0 (parallel [
            (set (reg:SI 196 [ _110 ])
                (plus:SI (reg:SI 414)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _111 = (integer(kind=8)) _110;

(insn 258 257 0 (set (reg:DI 197 [ _111 ])
        (sign_extend:DI (reg:SI 196 [ _110 ]))) "CALMXW.f":98 -1
     (nil))

;; _112 = _111 * 119;

(insn 259 258 0 (parallel [
            (set (reg:DI 198 [ _112 ])
                (mult:DI (reg:DI 197 [ _111 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _113 = _109 + _112;

(insn 260 259 0 (parallel [
            (set (reg:DI 199 [ _113 ])
                (plus:DI (reg:DI 195 [ _109 ])
                    (reg:DI 198 [ _112 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _114 = (integer(kind=8)) i_241;

(insn 261 260 262 (set (reg:SI 415)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":98 -1
     (nil))

(insn 262 261 0 (set (reg:DI 200 [ _114 ])
        (sign_extend:DI (reg:SI 415))) "CALMXW.f":98 -1
     (nil))

;; _115 = _113 + _114;

(insn 263 262 0 (parallel [
            (set (reg:DI 201 [ _115 ])
                (plus:DI (reg:DI 199 [ _113 ])
                    (reg:DI 200 [ _114 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _116 = _115 + -29751;

(insn 264 263 0 (parallel [
            (set (reg:DI 202 [ _116 ])
                (plus:DI (reg:DI 201 [ _115 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

;; _117 = vrbls.v[_116];

(insn 265 264 266 (set (reg/f:DI 416)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":98 -1
     (nil))

(insn 266 265 267 (parallel [
            (set (reg:DI 417)
                (plus:DI (reg:DI 202 [ _116 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))

(insn 267 266 0 (set (reg:SF 203 [ _117 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 417)
                    (const_int 4 [0x4]))
                (reg/f:DI 416)) [2 vrbls.v S4 A32])) "CALMXW.f":98 -1
     (nil))

;; _118 = _107 + _117;

(insn 268 267 0 (set (reg:SF 204 [ _118 ])
        (plus:SF (reg:SF 193 [ _107 ])
            (reg:SF 203 [ _117 ]))) "CALMXW.f":98 -1
     (nil))

;; _119 = ((_118));

(insn 269 268 0 (set (reg:SF 205 [ _119 ])
        (reg:SF 204 [ _118 ])) "CALMXW.f":98 -1
     (nil))

;; v0_285 = _119 * 2.5e-1;

(insn 270 269 271 (set (reg:SF 419)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALMXW.f":98 -1
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))

(insn 271 270 272 (set (reg:SF 418)
        (mult:SF (reg:SF 205 [ _119 ])
            (reg:SF 419))) "CALMXW.f":98 -1
     (nil))

(insn 272 271 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 v0+0 S4 A32])
        (reg:SF 418)) "CALMXW.f":98 -1
     (nil))

;; _286 = u0_284;

(insn 273 272 0 (set (reg:SF 336 [ _286 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 u0+0 S4 A32])) "CALMXW.f":99 -1
     (nil))

;; _287 = _286 * _286;

(insn 274 273 0 (set (reg:SF 337 [ _287 ])
        (mult:SF (reg:SF 336 [ _286 ])
            (reg:SF 336 [ _286 ]))) "CALMXW.f":99 -1
     (nil))

;; _288 = v0_285;

(insn 275 274 0 (set (reg:SF 338 [ _288 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 v0+0 S4 A32])) "CALMXW.f":99 -1
     (nil))

;; _289 = _288 * _288;

(insn 276 275 0 (set (reg:SF 339 [ _289 ])
        (mult:SF (reg:SF 338 [ _288 ])
            (reg:SF 338 [ _288 ]))) "CALMXW.f":99 -1
     (nil))

;; _120 = _287 + _289;

(insn 277 276 0 (set (reg:SF 206 [ _120 ])
        (plus:SF (reg:SF 337 [ _287 ])
            (reg:SF 339 [ _289 ]))) "CALMXW.f":99 -1
     (nil))

;; wind_290 = __builtin_sqrtf (_120);

(insn 278 277 279 (set (reg:SF 420)
        (sqrt:SF (reg:SF 206 [ _120 ]))) "CALMXW.f":99 -1
     (nil))

(insn 279 278 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 wind+0 S4 A32])
        (reg:SF 420)) "CALMXW.f":99 -1
     (nil))

;; if (wind_290 > mxww_245)

(insn 280 279 281 (set (reg:SF 421)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 wind+0 S4 A32])) "CALMXW.f":107 -1
     (nil))

(insn 281 280 282 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 421)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 mxww+0 S4 A32]))) "CALMXW.f":107 -1
     (nil))

(jump_insn 282 281 283 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) "CALMXW.f":107 -1
     (nil))

(jump_insn 283 282 284 (set (pc)
        (label_ref 0)) "CALMXW.f":107 -1
     (nil))

(barrier 284 283 285)

(code_label 285 284 0 10 (nil) [0 uses])

;; Generating RTL for gimple basic block 15

;; _121 = (integer(kind=8)) l_244;

(insn 287 286 288 (set (reg:SI 422)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":107 -1
     (nil))

(insn 288 287 0 (set (reg:DI 207 [ _121 ])
        (sign_extend:DI (reg:SI 422))) "CALMXW.f":107 -1
     (nil))

;; _122 = _121 * 29631;

(insn 289 288 0 (parallel [
            (set (reg:DI 208 [ _122 ])
                (mult:DI (reg:DI 207 [ _121 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":107 -1
     (nil))

;; _123 = (integer(kind=8)) j_243;

(insn 290 289 291 (set (reg:SI 423)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":107 -1
     (nil))

(insn 291 290 0 (set (reg:DI 209 [ _123 ])
        (sign_extend:DI (reg:SI 423))) "CALMXW.f":107 -1
     (nil))

;; _124 = _123 * 119;

(insn 292 291 0 (parallel [
            (set (reg:DI 210 [ _124 ])
                (mult:DI (reg:DI 209 [ _123 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":107 -1
     (nil))

;; _125 = _122 + _124;

(insn 293 292 0 (parallel [
            (set (reg:DI 211 [ _125 ])
                (plus:DI (reg:DI 208 [ _122 ])
                    (reg:DI 210 [ _124 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":107 -1
     (nil))

;; _126 = (integer(kind=8)) i_241;

(insn 294 293 295 (set (reg:SI 424)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":107 -1
     (nil))

(insn 295 294 0 (set (reg:DI 212 [ _126 ])
        (sign_extend:DI (reg:SI 424))) "CALMXW.f":107 -1
     (nil))

;; _127 = _125 + _126;

(insn 296 295 0 (parallel [
            (set (reg:DI 213 [ _127 ])
                (plus:DI (reg:DI 211 [ _125 ])
                    (reg:DI 212 [ _126 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":107 -1
     (nil))

;; _128 = _127 + -29751;

(insn 297 296 0 (parallel [
            (set (reg:DI 214 [ _128 ])
                (plus:DI (reg:DI 213 [ _127 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":107 -1
     (nil))

;; _129 = extra.pint[_128];

(insn 298 297 299 (set (reg/f:DI 425)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f8a2980b870 extra>)) "CALMXW.f":107 -1
     (nil))

(insn 299 298 0 (set (reg:SF 215 [ _129 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 214 [ _128 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 425)) [2 extra.pint S4 A32])) "CALMXW.f":107 -1
     (nil))

;; if (critp_253 > _129)

(insn 300 299 301 (set (reg:SF 426)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 critp+0 S4 A32])) "CALMXW.f":107 -1
     (nil))

(insn 301 300 302 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 426)
            (reg:SF 215 [ _129 ]))) "CALMXW.f":107 -1
     (nil))

(jump_insn 302 301 303 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 305)
            (pc))) "CALMXW.f":107 -1
     (nil))

(jump_insn 303 302 304 (set (pc)
        (label_ref 0)) "CALMXW.f":107 -1
     (nil))

(barrier 304 303 305)

(code_label 305 304 0 11 (nil) [0 uses])

;; Generating RTL for gimple basic block 16

;; _130 = (integer(kind=8)) j_243;

(insn 307 306 308 (set (reg:SI 427)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":108 -1
     (nil))

(insn 308 307 0 (set (reg:DI 216 [ _130 ])
        (sign_extend:DI (reg:SI 427))) "CALMXW.f":108 -1
     (nil))

;; _131 = _130 * 119;

(insn 309 308 0 (parallel [
            (set (reg:DI 217 [ _131 ])
                (mult:DI (reg:DI 216 [ _130 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":108 -1
     (nil))

;; _132 = (integer(kind=8)) i_241;

(insn 310 309 311 (set (reg:SI 428)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":108 -1
     (nil))

(insn 311 310 0 (set (reg:DI 218 [ _132 ])
        (sign_extend:DI (reg:SI 428))) "CALMXW.f":108 -1
     (nil))

;; _133 = _131 + _132;

(insn 312 311 0 (parallel [
            (set (reg:DI 219 [ _133 ])
                (plus:DI (reg:DI 217 [ _131 ])
                    (reg:DI 218 [ _132 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":108 -1
     (nil))

;; _134 = _133 + -120;

(insn 313 312 0 (parallel [
            (set (reg:DI 220 [ _134 ])
                (plus:DI (reg:DI 219 [ _133 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":108 -1
     (nil))

;; *mxwu_261(D)[_134] = u0_284;

(insn 314 313 315 (set (reg/f:DI 429)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [3 mxwu+0 S8 A64])) "CALMXW.f":108 -1
     (nil))

(insn 315 314 316 (set (reg:SF 430)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 u0+0 S4 A32])) "CALMXW.f":108 -1
     (nil))

(insn 316 315 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 220 [ _134 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 429)) [2 *mxwu_261(D) S4 A32])
        (reg:SF 430)) "CALMXW.f":108 -1
     (nil))

;; _135 = (integer(kind=8)) j_243;

(insn 317 316 318 (set (reg:SI 431)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":109 -1
     (nil))

(insn 318 317 0 (set (reg:DI 221 [ _135 ])
        (sign_extend:DI (reg:SI 431))) "CALMXW.f":109 -1
     (nil))

;; _136 = _135 * 119;

(insn 319 318 0 (parallel [
            (set (reg:DI 222 [ _136 ])
                (mult:DI (reg:DI 221 [ _135 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":109 -1
     (nil))

;; _137 = (integer(kind=8)) i_241;

(insn 320 319 321 (set (reg:SI 432)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":109 -1
     (nil))

(insn 321 320 0 (set (reg:DI 223 [ _137 ])
        (sign_extend:DI (reg:SI 432))) "CALMXW.f":109 -1
     (nil))

;; _138 = _136 + _137;

(insn 322 321 0 (parallel [
            (set (reg:DI 224 [ _138 ])
                (plus:DI (reg:DI 222 [ _136 ])
                    (reg:DI 223 [ _137 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":109 -1
     (nil))

;; _139 = _138 + -120;

(insn 323 322 0 (parallel [
            (set (reg:DI 225 [ _139 ])
                (plus:DI (reg:DI 224 [ _138 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":109 -1
     (nil))

;; *mxwv_263(D)[_139] = v0_285;

(insn 324 323 325 (set (reg/f:DI 433)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 mxwv+0 S8 A64])) "CALMXW.f":109 -1
     (nil))

(insn 325 324 326 (set (reg:SF 434)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 v0+0 S4 A32])) "CALMXW.f":109 -1
     (nil))

(insn 326 325 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 225 [ _139 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 433)) [2 *mxwv_263(D) S4 A32])
        (reg:SF 434)) "CALMXW.f":109 -1
     (nil))

;; mxww_293 = wind_290;

(insn 327 326 328 (set (reg:SF 435)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 wind+0 S4 A32])) "CALMXW.f":110 -1
     (nil))

(insn 328 327 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 mxww+0 S4 A32])
        (reg:SF 435)) "CALMXW.f":110 -1
     (nil))

;; _140 = (integer(kind=8)) l_244;

(insn 329 328 330 (set (reg:SI 436)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":111 -1
     (nil))

(insn 330 329 0 (set (reg:DI 226 [ _140 ])
        (sign_extend:DI (reg:SI 436))) "CALMXW.f":111 -1
     (nil))

;; _141 = _140 * 29631;

(insn 331 330 0 (parallel [
            (set (reg:DI 227 [ _141 ])
                (mult:DI (reg:DI 226 [ _140 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _142 = (integer(kind=8)) j_243;

(insn 332 331 333 (set (reg:SI 437)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":111 -1
     (nil))

(insn 333 332 0 (set (reg:DI 228 [ _142 ])
        (sign_extend:DI (reg:SI 437))) "CALMXW.f":111 -1
     (nil))

;; _143 = _142 * 119;

(insn 334 333 0 (parallel [
            (set (reg:DI 229 [ _143 ])
                (mult:DI (reg:DI 228 [ _142 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _144 = _141 + _143;

(insn 335 334 0 (parallel [
            (set (reg:DI 230 [ _144 ])
                (plus:DI (reg:DI 227 [ _141 ])
                    (reg:DI 229 [ _143 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _145 = (integer(kind=8)) i_241;

(insn 336 335 337 (set (reg:SI 438)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":111 -1
     (nil))

(insn 337 336 0 (set (reg:DI 231 [ _145 ])
        (sign_extend:DI (reg:SI 438))) "CALMXW.f":111 -1
     (nil))

;; _146 = _144 + _145;

(insn 338 337 0 (parallel [
            (set (reg:DI 232 [ _146 ])
                (plus:DI (reg:DI 230 [ _144 ])
                    (reg:DI 231 [ _145 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _147 = _146 + -29751;

(insn 339 338 0 (parallel [
            (set (reg:DI 233 [ _147 ])
                (plus:DI (reg:DI 232 [ _146 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _148 = extra.pint[_147];

(insn 340 339 341 (set (reg/f:DI 439)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f8a2980b870 extra>)) "CALMXW.f":111 -1
     (nil))

(insn 341 340 0 (set (reg:SF 234 [ _148 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 233 [ _147 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 extra.pint S4 A32])) "CALMXW.f":111 -1
     (nil))

;; _149 = l_244 + 1;

(insn 342 341 343 (set (reg:SI 440)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":111 -1
     (nil))

(insn 343 342 0 (parallel [
            (set (reg:SI 235 [ _149 ])
                (plus:SI (reg:SI 440)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _150 = (integer(kind=8)) _149;

(insn 344 343 0 (set (reg:DI 236 [ _150 ])
        (sign_extend:DI (reg:SI 235 [ _149 ]))) "CALMXW.f":111 -1
     (nil))

;; _151 = _150 * 29631;

(insn 345 344 0 (parallel [
            (set (reg:DI 237 [ _151 ])
                (mult:DI (reg:DI 236 [ _150 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _152 = (integer(kind=8)) j_243;

(insn 346 345 347 (set (reg:SI 441)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":111 -1
     (nil))

(insn 347 346 0 (set (reg:DI 238 [ _152 ])
        (sign_extend:DI (reg:SI 441))) "CALMXW.f":111 -1
     (nil))

;; _153 = _152 * 119;

(insn 348 347 0 (parallel [
            (set (reg:DI 239 [ _153 ])
                (mult:DI (reg:DI 238 [ _152 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _154 = _151 + _153;

(insn 349 348 0 (parallel [
            (set (reg:DI 240 [ _154 ])
                (plus:DI (reg:DI 237 [ _151 ])
                    (reg:DI 239 [ _153 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _155 = (integer(kind=8)) i_241;

(insn 350 349 351 (set (reg:SI 442)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":111 -1
     (nil))

(insn 351 350 0 (set (reg:DI 241 [ _155 ])
        (sign_extend:DI (reg:SI 442))) "CALMXW.f":111 -1
     (nil))

;; _156 = _154 + _155;

(insn 352 351 0 (parallel [
            (set (reg:DI 242 [ _156 ])
                (plus:DI (reg:DI 240 [ _154 ])
                    (reg:DI 241 [ _155 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _157 = _156 + -29751;

(insn 353 352 0 (parallel [
            (set (reg:DI 243 [ _157 ])
                (plus:DI (reg:DI 242 [ _156 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _158 = extra.pint[_157];

(insn 354 353 355 (set (reg/f:DI 443)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f8a2980b870 extra>)) "CALMXW.f":111 -1
     (nil))

(insn 355 354 0 (set (reg:SF 244 [ _158 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 243 [ _157 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 443)) [2 extra.pint S4 A32])) "CALMXW.f":111 -1
     (nil))

;; _159 = _148 + _158;

(insn 356 355 0 (set (reg:SF 245 [ _159 ])
        (plus:SF (reg:SF 234 [ _148 ])
            (reg:SF 244 [ _158 ]))) "CALMXW.f":111 -1
     (nil))

;; _160 = ((_159));

(insn 357 356 0 (set (reg:SF 246 [ _160 ])
        (reg:SF 245 [ _159 ])) "CALMXW.f":111 -1
     (nil))

;; _161 = (integer(kind=8)) j_243;

(insn 358 357 359 (set (reg:SI 444)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":111 -1
     (nil))

(insn 359 358 0 (set (reg:DI 247 [ _161 ])
        (sign_extend:DI (reg:SI 444))) "CALMXW.f":111 -1
     (nil))

;; _162 = _161 * 119;

(insn 360 359 0 (parallel [
            (set (reg:DI 248 [ _162 ])
                (mult:DI (reg:DI 247 [ _161 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _163 = (integer(kind=8)) i_241;

(insn 361 360 362 (set (reg:SI 445)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":111 -1
     (nil))

(insn 362 361 0 (set (reg:DI 249 [ _163 ])
        (sign_extend:DI (reg:SI 445))) "CALMXW.f":111 -1
     (nil))

;; _164 = _162 + _163;

(insn 363 362 0 (parallel [
            (set (reg:DI 250 [ _164 ])
                (plus:DI (reg:DI 248 [ _162 ])
                    (reg:DI 249 [ _163 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _165 = _164 + -120;

(insn 364 363 0 (parallel [
            (set (reg:DI 251 [ _165 ])
                (plus:DI (reg:DI 250 [ _164 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))

;; _166 = _160 * 5.0e-1;

(insn 365 364 366 (set (reg:SF 446)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALMXW.f":111 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))

(insn 366 365 0 (set (reg:SF 252 [ _166 ])
        (mult:SF (reg:SF 246 [ _160 ])
            (reg:SF 446))) "CALMXW.f":111 -1
     (nil))

;; *mxwp_265(D)[_165] = _166;

(insn 367 366 368 (set (reg/f:DI 447)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 mxwp+0 S8 A64])) "CALMXW.f":111 -1
     (nil))

(insn 368 367 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 251 [ _165 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 447)) [2 *mxwp_265(D) S4 A32])
        (reg:SF 252 [ _166 ])) "CALMXW.f":111 -1
     (nil))

;; _167 = l_244 + 1;

(insn 369 368 370 (set (reg:SI 448)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 370 369 0 (parallel [
            (set (reg:SI 253 [ _167 ])
                (plus:SI (reg:SI 448)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _168 = (integer(kind=8)) _167;

(insn 371 370 0 (set (reg:DI 254 [ _168 ])
        (sign_extend:DI (reg:SI 253 [ _167 ]))) "CALMXW.f":113 -1
     (nil))

;; _169 = _168 * 29631;

(insn 372 371 0 (parallel [
            (set (reg:DI 255 [ _169 ])
                (mult:DI (reg:DI 254 [ _168 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _170 = (integer(kind=8)) j_243;

(insn 373 372 374 (set (reg:SI 449)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 374 373 0 (set (reg:DI 256 [ _170 ])
        (sign_extend:DI (reg:SI 449))) "CALMXW.f":113 -1
     (nil))

;; _171 = _170 * 119;

(insn 375 374 0 (parallel [
            (set (reg:DI 257 [ _171 ])
                (mult:DI (reg:DI 256 [ _170 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _172 = _169 + _171;

(insn 376 375 0 (parallel [
            (set (reg:DI 258 [ _172 ])
                (plus:DI (reg:DI 255 [ _169 ])
                    (reg:DI 257 [ _171 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _173 = (integer(kind=8)) i_241;

(insn 377 376 378 (set (reg:SI 450)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 378 377 0 (set (reg:DI 259 [ _173 ])
        (sign_extend:DI (reg:SI 450))) "CALMXW.f":113 -1
     (nil))

;; _174 = _172 + _173;

(insn 379 378 0 (parallel [
            (set (reg:DI 260 [ _174 ])
                (plus:DI (reg:DI 258 [ _172 ])
                    (reg:DI 259 [ _173 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _175 = _174 + -29751;

(insn 380 379 0 (parallel [
            (set (reg:DI 261 [ _175 ])
                (plus:DI (reg:DI 260 [ _174 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _176 = masks.htm[_175];

(insn 381 380 382 (set (reg/f:DI 451)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f8a29813d80 masks>)) "CALMXW.f":113 -1
     (nil))

(insn 382 381 383 (parallel [
            (set (reg:DI 452)
                (plus:DI (reg:DI 261 [ _175 ])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

(insn 383 382 0 (set (reg:SF 262 [ _176 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 452)
                    (const_int 4 [0x4]))
                (reg/f:DI 451)) [2 masks.htm S4 A32])) "CALMXW.f":113 -1
     (nil))

;; _177 = l_244 + 1;

(insn 384 383 385 (set (reg:SI 453)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 385 384 0 (parallel [
            (set (reg:SI 263 [ _177 ])
                (plus:SI (reg:SI 453)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _178 = (integer(kind=8)) _177;

(insn 386 385 0 (set (reg:DI 264 [ _178 ])
        (sign_extend:DI (reg:SI 263 [ _177 ]))) "CALMXW.f":113 -1
     (nil))

;; _179 = _178 * 29631;

(insn 387 386 0 (parallel [
            (set (reg:DI 265 [ _179 ])
                (mult:DI (reg:DI 264 [ _178 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _180 = (integer(kind=8)) j_243;

(insn 388 387 389 (set (reg:SI 454)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 389 388 0 (set (reg:DI 266 [ _180 ])
        (sign_extend:DI (reg:SI 454))) "CALMXW.f":113 -1
     (nil))

;; _181 = _180 * 119;

(insn 390 389 0 (parallel [
            (set (reg:DI 267 [ _181 ])
                (mult:DI (reg:DI 266 [ _180 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _182 = _179 + _181;

(insn 391 390 0 (parallel [
            (set (reg:DI 268 [ _182 ])
                (plus:DI (reg:DI 265 [ _179 ])
                    (reg:DI 267 [ _181 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _183 = (integer(kind=8)) i_241;

(insn 392 391 393 (set (reg:SI 455)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 393 392 0 (set (reg:DI 269 [ _183 ])
        (sign_extend:DI (reg:SI 455))) "CALMXW.f":113 -1
     (nil))

;; _184 = _182 + _183;

(insn 394 393 0 (parallel [
            (set (reg:DI 270 [ _184 ])
                (plus:DI (reg:DI 268 [ _182 ])
                    (reg:DI 269 [ _183 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _185 = _184 + -29751;

(insn 395 394 0 (parallel [
            (set (reg:DI 271 [ _185 ])
                (plus:DI (reg:DI 270 [ _184 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _186 = vrbls.t[_185];

(insn 396 395 397 (set (reg/f:DI 456)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":113 -1
     (nil))

(insn 397 396 398 (parallel [
            (set (reg:DI 457)
                (plus:DI (reg:DI 271 [ _185 ])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

(insn 398 397 0 (set (reg:SF 272 [ _186 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 457)
                    (const_int 4 [0x4]))
                (reg/f:DI 456)) [2 vrbls.t S4 A32])) "CALMXW.f":113 -1
     (nil))

;; _187 = _176 * _186;

(insn 399 398 0 (set (reg:SF 273 [ _187 ])
        (mult:SF (reg:SF 262 [ _176 ])
            (reg:SF 272 [ _186 ]))) "CALMXW.f":113 -1
     (nil))

;; _188 = l_244 + 1;

(insn 400 399 401 (set (reg:SI 458)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 401 400 0 (parallel [
            (set (reg:SI 274 [ _188 ])
                (plus:SI (reg:SI 458)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _189 = (integer(kind=8)) _188;

(insn 402 401 0 (set (reg:DI 275 [ _189 ])
        (sign_extend:DI (reg:SI 274 [ _188 ]))) "CALMXW.f":113 -1
     (nil))

;; _190 = _189 * 29631;

(insn 403 402 0 (parallel [
            (set (reg:DI 276 [ _190 ])
                (mult:DI (reg:DI 275 [ _189 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _191 = (integer(kind=8)) j_243;

(insn 404 403 405 (set (reg:SI 459)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 405 404 0 (set (reg:DI 277 [ _191 ])
        (sign_extend:DI (reg:SI 459))) "CALMXW.f":113 -1
     (nil))

;; _192 = _191 * 119;

(insn 406 405 0 (parallel [
            (set (reg:DI 278 [ _192 ])
                (mult:DI (reg:DI 277 [ _191 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _193 = _190 + _192;

(insn 407 406 0 (parallel [
            (set (reg:DI 279 [ _193 ])
                (plus:DI (reg:DI 276 [ _190 ])
                    (reg:DI 278 [ _192 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _194 = (integer(kind=8)) i_241;

(insn 408 407 409 (set (reg:SI 460)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 409 408 0 (set (reg:DI 280 [ _194 ])
        (sign_extend:DI (reg:SI 460))) "CALMXW.f":113 -1
     (nil))

;; _195 = _193 + _194;

(insn 410 409 0 (parallel [
            (set (reg:DI 281 [ _195 ])
                (plus:DI (reg:DI 279 [ _193 ])
                    (reg:DI 280 [ _194 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _196 = _195 + -29751;

(insn 411 410 0 (parallel [
            (set (reg:DI 282 [ _196 ])
                (plus:DI (reg:DI 281 [ _195 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _197 = vrbls.q[_196];

(insn 412 411 413 (set (reg/f:DI 461)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":113 -1
     (nil))

(insn 413 412 414 (parallel [
            (set (reg:DI 462)
                (plus:DI (reg:DI 282 [ _196 ])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

(insn 414 413 0 (set (reg:SF 283 [ _197 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 462)
                    (const_int 4 [0x4]))
                (reg/f:DI 461)) [2 vrbls.q S4 A32])) "CALMXW.f":113 -1
     (nil))

;; _198 = _197 * 6.07999980449676513671875e-1;

(insn 415 414 416 (set (reg:SF 463)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))

(insn 416 415 0 (set (reg:SF 284 [ _198 ])
        (mult:SF (reg:SF 283 [ _197 ])
            (reg:SF 463))) "CALMXW.f":113 -1
     (nil))

;; _199 = _198 + 1.0e+0;

(insn 417 416 418 (set (reg:SF 464)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 418 417 0 (set (reg:SF 285 [ _199 ])
        (plus:SF (reg:SF 284 [ _198 ])
            (reg:SF 464))) "CALMXW.f":113 -1
     (nil))

;; _200 = ((_199));

(insn 419 418 0 (set (reg:SF 286 [ _200 ])
        (reg:SF 285 [ _199 ])) "CALMXW.f":113 -1
     (nil))

;; _201 = _187 * _200;

(insn 420 419 0 (set (reg:SF 287 [ _201 ])
        (mult:SF (reg:SF 273 [ _187 ])
            (reg:SF 286 [ _200 ]))) "CALMXW.f":113 -1
     (nil))

;; _202 = _201 * 2.92897968292236328125e+1;

(insn 421 420 422 (set (reg:SF 465)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (const_double:SF 2.92897968292236328125e+1 [0x0.ea5181p+5])
        (nil)))

(insn 422 421 0 (set (reg:SF 288 [ _202 ])
        (mult:SF (reg:SF 287 [ _201 ])
            (reg:SF 465))) "CALMXW.f":113 -1
     (nil))

;; _203 = l_244 + 1;

(insn 423 422 424 (set (reg:SI 466)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 424 423 0 (parallel [
            (set (reg:SI 289 [ _203 ])
                (plus:SI (reg:SI 466)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _204 = (integer(kind=8)) _203;

(insn 425 424 0 (set (reg:DI 290 [ _204 ])
        (sign_extend:DI (reg:SI 289 [ _203 ]))) "CALMXW.f":113 -1
     (nil))

;; _205 = _204 * 29631;

(insn 426 425 0 (parallel [
            (set (reg:DI 291 [ _205 ])
                (mult:DI (reg:DI 290 [ _204 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _206 = (integer(kind=8)) j_243;

(insn 427 426 428 (set (reg:SI 467)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 428 427 0 (set (reg:DI 292 [ _206 ])
        (sign_extend:DI (reg:SI 467))) "CALMXW.f":113 -1
     (nil))

;; _207 = _206 * 119;

(insn 429 428 0 (parallel [
            (set (reg:DI 293 [ _207 ])
                (mult:DI (reg:DI 292 [ _206 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _208 = _205 + _207;

(insn 430 429 0 (parallel [
            (set (reg:DI 294 [ _208 ])
                (plus:DI (reg:DI 291 [ _205 ])
                    (reg:DI 293 [ _207 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _209 = (integer(kind=8)) i_241;

(insn 431 430 432 (set (reg:SI 468)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 432 431 0 (set (reg:DI 295 [ _209 ])
        (sign_extend:DI (reg:SI 468))) "CALMXW.f":113 -1
     (nil))

;; _210 = _208 + _209;

(insn 433 432 0 (parallel [
            (set (reg:DI 296 [ _210 ])
                (plus:DI (reg:DI 294 [ _208 ])
                    (reg:DI 295 [ _209 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _211 = _210 + -29751;

(insn 434 433 0 (parallel [
            (set (reg:DI 297 [ _211 ])
                (plus:DI (reg:DI 296 [ _210 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _212 = extra.pint[_211];

(insn 435 434 436 (set (reg/f:DI 469)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f8a2980b870 extra>)) "CALMXW.f":113 -1
     (nil))

(insn 436 435 0 (set (reg:SF 298 [ _212 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 297 [ _211 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 469)) [2 extra.pint S4 A32])) "CALMXW.f":113 -1
     (nil))

;; _213 = __builtin_logf (_212);

(insn 437 436 438 (set (reg:SF 21 xmm0)
        (reg:SF 298 [ _212 ])) "CALMXW.f":113 -1
     (nil))

(call_insn/u 438 437 439 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f8a2967b900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALMXW.f":113 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 439 438 0 (set (reg:SF 299 [ _213 ])
        (reg:SF 21 xmm0)) "CALMXW.f":113 -1
     (nil))

;; _214 = (integer(kind=8)) j_243;

(insn 440 439 441 (set (reg:SI 470)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 441 440 0 (set (reg:DI 300 [ _214 ])
        (sign_extend:DI (reg:SI 470))) "CALMXW.f":113 -1
     (nil))

;; _215 = _214 * 119;

(insn 442 441 0 (parallel [
            (set (reg:DI 301 [ _215 ])
                (mult:DI (reg:DI 300 [ _214 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _216 = (integer(kind=8)) i_241;

(insn 443 442 444 (set (reg:SI 471)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 444 443 0 (set (reg:DI 302 [ _216 ])
        (sign_extend:DI (reg:SI 471))) "CALMXW.f":113 -1
     (nil))

;; _217 = _215 + _216;

(insn 445 444 0 (parallel [
            (set (reg:DI 303 [ _217 ])
                (plus:DI (reg:DI 301 [ _215 ])
                    (reg:DI 302 [ _216 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _218 = _217 + -120;

(insn 446 445 0 (parallel [
            (set (reg:DI 304 [ _218 ])
                (plus:DI (reg:DI 303 [ _217 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _219 = *mxwp_265(D)[_218];

(insn 447 446 448 (set (reg/f:DI 472)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 mxwp+0 S8 A64])) "CALMXW.f":113 -1
     (nil))

(insn 448 447 0 (set (reg:SF 305 [ _219 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 304 [ _218 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 472)) [2 *mxwp_265(D) S4 A32])) "CALMXW.f":113 -1
     (nil))

;; _220 = __builtin_logf (_219);

(insn 449 448 450 (set (reg:SF 21 xmm0)
        (reg:SF 305 [ _219 ])) "CALMXW.f":113 -1
     (nil))

(call_insn/u 450 449 451 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f8a2967b900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALMXW.f":113 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 451 450 0 (set (reg:SF 306 [ _220 ])
        (reg:SF 21 xmm0)) "CALMXW.f":113 -1
     (nil))

;; _221 = _213 - _220;

(insn 452 451 0 (set (reg:SF 307 [ _221 ])
        (minus:SF (reg:SF 299 [ _213 ])
            (reg:SF 306 [ _220 ]))) "CALMXW.f":113 -1
     (nil))

;; _222 = ((_221));

(insn 453 452 0 (set (reg:SF 308 [ _222 ])
        (reg:SF 307 [ _221 ])) "CALMXW.f":113 -1
     (nil))

;; _223 = _202 * _222;

(insn 454 453 0 (set (reg:SF 309 [ _223 ])
        (mult:SF (reg:SF 288 [ _202 ])
            (reg:SF 308 [ _222 ]))) "CALMXW.f":113 -1
     (nil))

;; _224 = l_244 + 1;

(insn 455 454 456 (set (reg:SI 473)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 456 455 0 (parallel [
            (set (reg:SI 310 [ _224 ])
                (plus:SI (reg:SI 473)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _225 = (integer(kind=8)) _224;

(insn 457 456 0 (set (reg:DI 311 [ _225 ])
        (sign_extend:DI (reg:SI 310 [ _224 ]))) "CALMXW.f":113 -1
     (nil))

;; _226 = _225 * 29631;

(insn 458 457 0 (parallel [
            (set (reg:DI 312 [ _226 ])
                (mult:DI (reg:DI 311 [ _225 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _227 = (integer(kind=8)) j_243;

(insn 459 458 460 (set (reg:SI 474)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 460 459 0 (set (reg:DI 313 [ _227 ])
        (sign_extend:DI (reg:SI 474))) "CALMXW.f":113 -1
     (nil))

;; _228 = _227 * 119;

(insn 461 460 0 (parallel [
            (set (reg:DI 314 [ _228 ])
                (mult:DI (reg:DI 313 [ _227 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _229 = _226 + _228;

(insn 462 461 0 (parallel [
            (set (reg:DI 315 [ _229 ])
                (plus:DI (reg:DI 312 [ _226 ])
                    (reg:DI 314 [ _228 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _230 = (integer(kind=8)) i_241;

(insn 463 462 464 (set (reg:SI 475)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 464 463 0 (set (reg:DI 316 [ _230 ])
        (sign_extend:DI (reg:SI 475))) "CALMXW.f":113 -1
     (nil))

;; _231 = _229 + _230;

(insn 465 464 0 (parallel [
            (set (reg:DI 317 [ _231 ])
                (plus:DI (reg:DI 315 [ _229 ])
                    (reg:DI 316 [ _230 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _232 = _231 + -29751;

(insn 466 465 0 (parallel [
            (set (reg:DI 318 [ _232 ])
                (plus:DI (reg:DI 317 [ _231 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _233 = extra.zint[_232];

(insn 467 466 468 (set (reg/f:DI 476)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f8a2980b870 extra>)) "CALMXW.f":113 -1
     (nil))

(insn 468 467 469 (parallel [
            (set (reg:DI 477)
                (plus:DI (reg:DI 318 [ _232 ])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

(insn 469 468 0 (set (reg:SF 319 [ _233 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 477)
                    (const_int 4 [0x4]))
                (reg/f:DI 476)) [2 extra.zint S4 A32])) "CALMXW.f":113 -1
     (nil))

;; _234 = (integer(kind=8)) j_243;

(insn 470 469 471 (set (reg:SI 478)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 471 470 0 (set (reg:DI 320 [ _234 ])
        (sign_extend:DI (reg:SI 478))) "CALMXW.f":113 -1
     (nil))

;; _235 = _234 * 119;

(insn 472 471 0 (parallel [
            (set (reg:DI 321 [ _235 ])
                (mult:DI (reg:DI 320 [ _234 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _236 = (integer(kind=8)) i_241;

(insn 473 472 474 (set (reg:SI 479)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))

(insn 474 473 0 (set (reg:DI 322 [ _236 ])
        (sign_extend:DI (reg:SI 479))) "CALMXW.f":113 -1
     (nil))

;; _237 = _235 + _236;

(insn 475 474 0 (parallel [
            (set (reg:DI 323 [ _237 ])
                (plus:DI (reg:DI 321 [ _235 ])
                    (reg:DI 322 [ _236 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _238 = _237 + -120;

(insn 476 475 0 (parallel [
            (set (reg:DI 324 [ _238 ])
                (plus:DI (reg:DI 323 [ _237 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))

;; _239 = _223 + _233;

(insn 477 476 0 (set (reg:SF 325 [ _239 ])
        (plus:SF (reg:SF 309 [ _223 ])
            (reg:SF 319 [ _233 ]))) "CALMXW.f":113 -1
     (nil))

;; *mxwz_267(D)[_238] = _239;

(insn 478 477 479 (set (reg/f:DI 480)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [3 mxwz+0 S8 A64])) "CALMXW.f":113 -1
     (nil))

(insn 479 478 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 324 [ _238 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 480)) [2 *mxwz_267(D) S4 A32])
        (reg:SF 325 [ _239 ])) "CALMXW.f":113 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 480 479 481 9 (nil) [0 uses])

(note 481 480 0 NOTE_INSN_BASIC_BLOCK)

;; l_296 = l_244 + -1;

(insn 482 481 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":94 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 486 485 487 8 (nil) [0 uses])

(note 487 486 0 NOTE_INSN_BASIC_BLOCK)

;; i_297 = i_241 + 1;

(insn 488 487 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":88 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; 

(code_label 492 491 493 7 (nil) [0 uses])

(note 493 492 0 NOTE_INSN_BASIC_BLOCK)

;; j_298 = j_243 + 1;

(insn 494 493 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":87 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 498 497 499 6 (nil) [0 uses])

(note 499 498 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 21

;; <L26>:

(code_label 500 499 501 15 (nil) [0 uses])

(note 501 500 0 NOTE_INSN_BASIC_BLOCK)
Purged non-fallthru edges from bb 25
Purged non-fallthru edges from bb 27


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 15->17 redirected to 18
Forwarding edge 15->16 to 22 failed.
Forwarding edge 15->16 to 22 failed.
deleting block 17
Edge 18->20 redirected to 21
Forwarding edge 18->19 to 22 failed.
Forwarding edge 18->19 to 22 failed.
deleting block 20
Merging block 26 into block 25...
Merged blocks 25 and 26.
Merged 25 and 26 without moving.
Merging block 27 into block 25...
Merged blocks 25 and 27.
Merged 25 and 27 without moving.


try_optimize_cfg iteration 2

Forwarding edge 15->16 to 22 failed.
Forwarding edge 18->19 to 22 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 mxwp+0 S8 A64])
        (reg:DI 5 di [ mxwp ])) "CALMXW.f":1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [3 mxwz+0 S8 A64])
        (reg:DI 4 si [ mxwz ])) "CALMXW.f":1 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [3 mxwu+0 S8 A64])
        (reg:DI 1 dx [ mxwu ])) "CALMXW.f":1 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 mxwv+0 S8 A64])
        (reg:DI 2 cx [ mxwv ])) "CALMXW.f":1 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SF 340)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALMXW.f":72 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 critp+0 S4 A32])
        (reg:SF 340)) "CALMXW.f":72 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 326 [ _255 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f8a2981a630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALMXW.f":74 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 327 [ _256 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f8a2981a630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALMXW.f":74 -1
     (nil))
(insn 13 12 76 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 326 [ _255 ])) "CALMXW.f":74 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              8 (DFS_BACK)
(code_label 76 13 14 4 5 (nil) [1 uses])
(note 14 76 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 327 [ _256 ]))) "CALMXW.f":74 -1
     (nil))
(insn 16 15 17 4 (set (reg:QI 341)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALMXW.f":74 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 328 [ _258 ])
        (zero_extend:SI (reg:QI 341))) "CALMXW.f":74 -1
     (nil))
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 328 [ _258 ])
            (const_int 0 [0]))) "CALMXW.f":74 -1
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "CALMXW.f":74 -1
     (nil)
 -> 79)
;;  succ:       9
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 70 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALMXW.f":75 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              7 (DFS_BACK)
(code_label 70 21 22 6 4 (nil) [1 uses])
(note 22 70 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALMXW.f":75 -1
     (nil))
(insn 24 23 25 6 (set (reg:QI 342)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALMXW.f":75 -1
     (nil))
(insn 25 24 26 6 (set (reg:SI 329 [ _260 ])
        (zero_extend:SI (reg:QI 342))) "CALMXW.f":75 -1
     (nil))
(insn 26 25 27 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 329 [ _260 ])
            (const_int 0 [0]))) "CALMXW.f":75 -1
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "CALMXW.f":75 -1
     (nil)
 -> 73)
;;  succ:       8
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 7 (set (reg:SI 343)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":76 -1
     (nil))
(insn 30 29 31 7 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 343))) "CALMXW.f":76 -1
     (nil))
(insn 31 30 32 7 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":76 -1
     (nil))
(insn 32 31 33 7 (set (reg:SI 344)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":76 -1
     (nil))
(insn 33 32 34 7 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 344))) "CALMXW.f":76 -1
     (nil))
(insn 34 33 35 7 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":76 -1
     (nil))
(insn 35 34 36 7 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":76 -1
     (nil))
(insn 36 35 37 7 (set (reg:SF 92 [ _6 ])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f8a2981a240 options>) [2 options.spval+0 S4 A128])) "CALMXW.f":1 -1
     (nil))
(insn 37 36 38 7 (set (reg/f:DI 345)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [3 mxwu+0 S8 A64])) "CALMXW.f":76 -1
     (nil))
(insn 38 37 39 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 91 [ _5 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 345)) [2 *mxwu_261(D) S4 A32])
        (reg:SF 92 [ _6 ])) "CALMXW.f":76 -1
     (nil))
(insn 39 38 40 7 (set (reg:SI 346)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":77 -1
     (nil))
(insn 40 39 41 7 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 346))) "CALMXW.f":77 -1
     (nil))
(insn 41 40 42 7 (parallel [
            (set (reg:DI 94 [ _8 ])
                (mult:DI (reg:DI 93 [ _7 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":77 -1
     (nil))
(insn 42 41 43 7 (set (reg:SI 347)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":77 -1
     (nil))
(insn 43 42 44 7 (set (reg:DI 95 [ _9 ])
        (sign_extend:DI (reg:SI 347))) "CALMXW.f":77 -1
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg:DI 96 [ _10 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":77 -1
     (nil))
(insn 45 44 46 7 (parallel [
            (set (reg:DI 97 [ _11 ])
                (plus:DI (reg:DI 96 [ _10 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":77 -1
     (nil))
(insn 46 45 47 7 (set (reg:SF 98 [ _12 ])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f8a2981a240 options>) [2 options.spval+0 S4 A128])) "CALMXW.f":1 -1
     (nil))
(insn 47 46 48 7 (set (reg/f:DI 348)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 mxwv+0 S8 A64])) "CALMXW.f":77 -1
     (nil))
(insn 48 47 49 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 348)) [2 *mxwv_263(D) S4 A32])
        (reg:SF 98 [ _12 ])) "CALMXW.f":77 -1
     (nil))
(insn 49 48 50 7 (set (reg:SI 349)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":78 -1
     (nil))
(insn 50 49 51 7 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 349))) "CALMXW.f":78 -1
     (nil))
(insn 51 50 52 7 (parallel [
            (set (reg:DI 100 [ _14 ])
                (mult:DI (reg:DI 99 [ _13 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":78 -1
     (nil))
(insn 52 51 53 7 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":78 -1
     (nil))
(insn 53 52 54 7 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 350))) "CALMXW.f":78 -1
     (nil))
(insn 54 53 55 7 (parallel [
            (set (reg:DI 102 [ _16 ])
                (plus:DI (reg:DI 100 [ _14 ])
                    (reg:DI 101 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":78 -1
     (nil))
(insn 55 54 56 7 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":78 -1
     (nil))
(insn 56 55 57 7 (set (reg:SF 104 [ _18 ])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f8a2981a240 options>) [2 options.spval+0 S4 A128])) "CALMXW.f":1 -1
     (nil))
(insn 57 56 58 7 (set (reg/f:DI 351)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 mxwp+0 S8 A64])) "CALMXW.f":78 -1
     (nil))
(insn 58 57 59 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 351)) [2 *mxwp_265(D) S4 A32])
        (reg:SF 104 [ _18 ])) "CALMXW.f":78 -1
     (nil))
(insn 59 58 60 7 (set (reg:SI 352)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":79 -1
     (nil))
(insn 60 59 61 7 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 352))) "CALMXW.f":79 -1
     (nil))
(insn 61 60 62 7 (parallel [
            (set (reg:DI 106 [ _20 ])
                (mult:DI (reg:DI 105 [ _19 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":79 -1
     (nil))
(insn 62 61 63 7 (set (reg:SI 353)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":79 -1
     (nil))
(insn 63 62 64 7 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 353))) "CALMXW.f":79 -1
     (nil))
(insn 64 63 65 7 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 106 [ _20 ])
                    (reg:DI 107 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":79 -1
     (nil))
(insn 65 64 66 7 (parallel [
            (set (reg:DI 109 [ _23 ])
                (plus:DI (reg:DI 108 [ _22 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":79 -1
     (nil))
(insn 66 65 67 7 (set (reg:SF 110 [ _24 ])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f8a2981a240 options>) [2 options.spval+0 S4 A128])) "CALMXW.f":1 -1
     (nil))
(insn 67 66 68 7 (set (reg/f:DI 354)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [3 mxwz+0 S8 A64])) "CALMXW.f":79 -1
     (nil))
(insn 68 67 69 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 109 [ _23 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 354)) [2 *mxwz_267(D) S4 A32])
        (reg:SF 110 [ _24 ])) "CALMXW.f":79 -1
     (nil))
(insn 69 68 71 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":75 -1
     (nil))
(jump_insn 71 69 72 7 (set (pc)
        (label_ref 70)) "CALMXW.f":75 -1
     (nil)
 -> 70)
;;  succ:       6 (DFS_BACK)

(barrier 72 71 73)
;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 73 72 74 8 3 (nil) [1 uses])
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 77 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":74 -1
     (nil))
(jump_insn 77 75 78 8 (set (pc)
        (label_ref 76)) "CALMXW.f":74 -1
     (nil)
 -> 76)
;;  succ:       4 (DFS_BACK)

(barrier 78 77 79)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 79 78 80 9 2 (nil) [1 uses])
(note 80 79 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 9 (set (reg:SI 330 [ _271 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f8a2981a630 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALMXW.f":87 -1
     (nil))
(insn 82 81 83 9 (set (reg:SI 331 [ _272 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f8a2981a630 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALMXW.f":87 -1
     (nil))
(insn 83 82 495 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 330 [ _271 ])) "CALMXW.f":87 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 1, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
;;              24 (DFS_BACK)
(code_label 495 83 84 10 14 (nil) [1 uses])
(note 84 495 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 331 [ _272 ]))) "CALMXW.f":87 -1
     (nil))
(insn 86 85 87 10 (set (reg:QI 355)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALMXW.f":87 -1
     (nil))
(insn 87 86 88 10 (set (reg:SI 332 [ _274 ])
        (zero_extend:SI (reg:QI 355))) "CALMXW.f":87 -1
     (nil))
(insn 88 87 89 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 332 [ _274 ])
            (const_int 0 [0]))) "CALMXW.f":87 -1
     (nil))
(jump_insn 89 88 90 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) "CALMXW.f":87 -1
     (nil)
 -> 498)
;;  succ:       25
;;              11 (FALLTHRU)

;; basic block 11, loop depth 1, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 489 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALMXW.f":88 -1
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 2, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
;;              23 (DFS_BACK)
(code_label 489 91 92 12 13 (nil) [1 uses])
(note 92 489 93 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALMXW.f":88 -1
     (nil))
(insn 94 93 95 12 (set (reg:QI 356)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALMXW.f":88 -1
     (nil))
(insn 95 94 96 12 (set (reg:SI 333 [ _276 ])
        (zero_extend:SI (reg:QI 356))) "CALMXW.f":88 -1
     (nil))
(insn 96 95 97 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 333 [ _276 ])
            (const_int 0 [0]))) "CALMXW.f":88 -1
     (nil))
(jump_insn 97 96 98 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 492)
            (pc))) "CALMXW.f":88 -1
     (nil)
 -> 492)
;;  succ:       24
;;              13 (FALLTHRU)

;; basic block 13, loop depth 2, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 98 97 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 13 (set (reg:SI 357)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":89 -1
     (nil))
(insn 100 99 101 13 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 357))) "CALMXW.f":89 -1
     (nil))
(insn 101 100 102 13 (parallel [
            (set (reg:DI 112 [ _26 ])
                (plus:DI (reg:DI 111 [ _25 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":89 -1
     (nil))
(insn 102 101 106 13 (set (reg:SI 113 [ _27 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 112 [ _26 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f8a29813630 indx>)) [1 indx.ihe S4 A32])) "CALMXW.f":89 -1
     (nil))
(insn 106 102 107 13 (set (reg:SI 361)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":89 -1
     (nil))
(insn 107 106 108 13 (parallel [
            (set (reg:SI 360)
                (plus:SI (reg:SI 113 [ _27 ])
                    (reg:SI 361)))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":89 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 113 [ _27 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 108 107 109 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ie+0 S4 A32])
        (reg:SI 360)) "CALMXW.f":89 -1
     (nil))
(insn 109 108 110 13 (set (reg:SI 362)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":90 -1
     (nil))
(insn 110 109 111 13 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 362))) "CALMXW.f":90 -1
     (nil))
(insn 111 110 112 13 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":90 -1
     (nil))
(insn 112 111 113 13 (parallel [
            (set (reg:DI 363)
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":90 -1
     (nil))
(insn 113 112 117 13 (set (reg:SI 116 [ _30 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 363)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f8a29813630 indx>)) [1 indx.ihw S4 A32])) "CALMXW.f":90 -1
     (nil))
(insn 117 113 118 13 (set (reg:SI 367)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":90 -1
     (nil))
(insn 118 117 119 13 (parallel [
            (set (reg:SI 366)
                (plus:SI (reg:SI 116 [ _30 ])
                    (reg:SI 367)))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":90 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 116 [ _30 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 119 118 120 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 iw+0 S4 A32])
        (reg:SI 366)) "CALMXW.f":90 -1
     (nil))
(insn 120 119 121 13 (set (reg:SF 368)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALMXW.f":91 -1
     (nil))
(insn 121 120 122 13 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 mxww+0 S4 A32])
        (reg:SF 368)) "CALMXW.f":91 -1
     (nil))
(insn 122 121 123 13 (set (reg:SI 369)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":92 -1
     (nil))
(insn 123 122 124 13 (set (reg:DI 117 [ _31 ])
        (sign_extend:DI (reg:SI 369))) "CALMXW.f":92 -1
     (nil))
(insn 124 123 125 13 (parallel [
            (set (reg:DI 118 [ _32 ])
                (mult:DI (reg:DI 117 [ _31 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":92 -1
     (nil))
(insn 125 124 126 13 (set (reg:SI 370)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":92 -1
     (nil))
(insn 126 125 127 13 (set (reg:DI 119 [ _33 ])
        (sign_extend:DI (reg:SI 370))) "CALMXW.f":92 -1
     (nil))
(insn 127 126 128 13 (parallel [
            (set (reg:DI 120 [ _34 ])
                (plus:DI (reg:DI 118 [ _32 ])
                    (reg:DI 119 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":92 -1
     (nil))
(insn 128 127 129 13 (parallel [
            (set (reg:DI 121 [ _35 ])
                (plus:DI (reg:DI 120 [ _34 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":92 -1
     (nil))
(insn 129 128 130 13 (set (reg/f:DI 371)
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f8a29813900 loops>)) "CALMXW.f":92 -1
     (nil))
(insn 130 129 131 13 (parallel [
            (set (reg:DI 372)
                (plus:DI (reg:DI 121 [ _35 ])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":92 -1
     (nil))
(insn 131 130 132 13 (set (reg:SI 373)
        (mem:SI (plus:DI (mult:DI (reg:DI 372)
                    (const_int 4 [0x4]))
                (reg/f:DI 371)) [1 loops.lmh S4 A32])) "CALMXW.f":92 -1
     (nil))
(insn 132 131 133 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 llmh+0 S4 A32])
        (reg:SI 373)) "CALMXW.f":92 -1
     (nil))
(insn 133 132 134 13 (set (reg:SI 374)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 llmh+0 S4 A32])) "CALMXW.f":94 -1
     (nil))
(insn 134 133 135 13 (parallel [
            (set (reg:SI 334 [ _281 ])
                (plus:SI (reg:SI 374)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":94 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [1 llmh+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 135 134 483 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
        (reg:SI 334 [ _281 ])) "CALMXW.f":94 -1
     (nil))
;;  succ:       14 (FALLTHRU)

;; basic block 14, loop depth 3, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
;;              22 (DFS_BACK)
(code_label 483 135 136 14 12 (nil) [1 uses])
(note 136 483 137 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 0 [0]))) "CALMXW.f":94 -1
     (nil))
(insn 138 137 139 14 (set (reg:QI 375)
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "CALMXW.f":94 -1
     (nil))
(insn 139 138 140 14 (set (reg:SI 335 [ _283 ])
        (zero_extend:SI (reg:QI 375))) "CALMXW.f":94 -1
     (nil))
(insn 140 139 141 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 335 [ _283 ])
            (const_int 0 [0]))) "CALMXW.f":94 -1
     (nil))
(jump_insn 141 140 142 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 486)
            (pc))) "CALMXW.f":94 -1
     (nil)
 -> 486)
;;  succ:       23
;;              15 (FALLTHRU)

;; basic block 15, loop depth 3, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
(note 142 141 143 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 15 (set (reg:SI 376)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 144 143 145 15 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 376))) "CALMXW.f":96 -1
     (nil))
(insn 145 144 146 15 (parallel [
            (set (reg:DI 123 [ _37 ])
                (mult:DI (reg:DI 122 [ _36 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 146 145 147 15 (set (reg:SI 377)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 147 146 148 15 (parallel [
            (set (reg:SI 124 [ _38 ])
                (plus:SI (reg:SI 377)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 148 147 149 15 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 124 [ _38 ]))) "CALMXW.f":96 -1
     (nil))
(insn 149 148 150 15 (parallel [
            (set (reg:DI 126 [ _40 ])
                (mult:DI (reg:DI 125 [ _39 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 150 149 151 15 (parallel [
            (set (reg:DI 127 [ _41 ])
                (plus:DI (reg:DI 123 [ _37 ])
                    (reg:DI 126 [ _40 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 151 150 152 15 (set (reg:SI 378)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 152 151 153 15 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 378))) "CALMXW.f":96 -1
     (nil))
(insn 153 152 154 15 (parallel [
            (set (reg:DI 129 [ _43 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (reg:DI 128 [ _42 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 154 153 155 15 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 129 [ _43 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 155 154 156 15 (set (reg/f:DI 379)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":96 -1
     (nil))
(insn 156 155 157 15 (parallel [
            (set (reg:DI 380)
                (plus:DI (reg:DI 130 [ _44 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 157 156 158 15 (set (reg:SF 131 [ _45 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 380)
                    (const_int 4 [0x4]))
                (reg/f:DI 379)) [2 vrbls.u S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 158 157 159 15 (set (reg:SI 381)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 159 158 160 15 (set (reg:DI 132 [ _46 ])
        (sign_extend:DI (reg:SI 381))) "CALMXW.f":96 -1
     (nil))
(insn 160 159 161 15 (parallel [
            (set (reg:DI 133 [ _47 ])
                (mult:DI (reg:DI 132 [ _46 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 161 160 162 15 (set (reg:SI 382)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 162 161 163 15 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 382))) "CALMXW.f":96 -1
     (nil))
(insn 163 162 164 15 (parallel [
            (set (reg:DI 135 [ _49 ])
                (mult:DI (reg:DI 134 [ _48 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 164 163 165 15 (parallel [
            (set (reg:DI 136 [ _50 ])
                (plus:DI (reg:DI 133 [ _47 ])
                    (reg:DI 135 [ _49 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 165 164 166 15 (set (reg:SI 383)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 iw+0 S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 166 165 167 15 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 383))) "CALMXW.f":96 -1
     (nil))
(insn 167 166 168 15 (parallel [
            (set (reg:DI 138 [ _52 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 168 167 169 15 (parallel [
            (set (reg:DI 139 [ _53 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 169 168 170 15 (set (reg/f:DI 384)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":96 -1
     (nil))
(insn 170 169 171 15 (parallel [
            (set (reg:DI 385)
                (plus:DI (reg:DI 139 [ _53 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 171 170 172 15 (set (reg:SF 140 [ _54 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 385)
                    (const_int 4 [0x4]))
                (reg/f:DI 384)) [2 vrbls.u S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 172 171 173 15 (set (reg:SF 141 [ _55 ])
        (plus:SF (reg:SF 131 [ _45 ])
            (reg:SF 140 [ _54 ]))) "CALMXW.f":96 -1
     (nil))
(insn 173 172 174 15 (set (reg:SI 386)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 174 173 175 15 (set (reg:DI 142 [ _56 ])
        (sign_extend:DI (reg:SI 386))) "CALMXW.f":96 -1
     (nil))
(insn 175 174 176 15 (parallel [
            (set (reg:DI 143 [ _57 ])
                (mult:DI (reg:DI 142 [ _56 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 176 175 177 15 (set (reg:SI 387)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 177 176 178 15 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 387))) "CALMXW.f":96 -1
     (nil))
(insn 178 177 179 15 (parallel [
            (set (reg:DI 145 [ _59 ])
                (mult:DI (reg:DI 144 [ _58 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 179 178 180 15 (parallel [
            (set (reg:DI 146 [ _60 ])
                (plus:DI (reg:DI 143 [ _57 ])
                    (reg:DI 145 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 180 179 181 15 (set (reg:SI 388)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ie+0 S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 181 180 182 15 (set (reg:DI 147 [ _61 ])
        (sign_extend:DI (reg:SI 388))) "CALMXW.f":96 -1
     (nil))
(insn 182 181 183 15 (parallel [
            (set (reg:DI 148 [ _62 ])
                (plus:DI (reg:DI 146 [ _60 ])
                    (reg:DI 147 [ _61 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 183 182 184 15 (parallel [
            (set (reg:DI 149 [ _63 ])
                (plus:DI (reg:DI 148 [ _62 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 184 183 185 15 (set (reg/f:DI 389)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":96 -1
     (nil))
(insn 185 184 186 15 (parallel [
            (set (reg:DI 390)
                (plus:DI (reg:DI 149 [ _63 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 186 185 187 15 (set (reg:SF 150 [ _64 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 390)
                    (const_int 4 [0x4]))
                (reg/f:DI 389)) [2 vrbls.u S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 187 186 188 15 (set (reg:SF 151 [ _65 ])
        (plus:SF (reg:SF 141 [ _55 ])
            (reg:SF 150 [ _64 ]))) "CALMXW.f":96 -1
     (nil))
(insn 188 187 189 15 (set (reg:SI 391)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 189 188 190 15 (set (reg:DI 152 [ _66 ])
        (sign_extend:DI (reg:SI 391))) "CALMXW.f":96 -1
     (nil))
(insn 190 189 191 15 (parallel [
            (set (reg:DI 153 [ _67 ])
                (mult:DI (reg:DI 152 [ _66 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 191 190 192 15 (set (reg:SI 392)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 192 191 193 15 (parallel [
            (set (reg:SI 154 [ _68 ])
                (plus:SI (reg:SI 392)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 193 192 194 15 (set (reg:DI 155 [ _69 ])
        (sign_extend:DI (reg:SI 154 [ _68 ]))) "CALMXW.f":96 -1
     (nil))
(insn 194 193 195 15 (parallel [
            (set (reg:DI 156 [ _70 ])
                (mult:DI (reg:DI 155 [ _69 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 195 194 196 15 (parallel [
            (set (reg:DI 157 [ _71 ])
                (plus:DI (reg:DI 153 [ _67 ])
                    (reg:DI 156 [ _70 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 196 195 197 15 (set (reg:SI 393)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 197 196 198 15 (set (reg:DI 158 [ _72 ])
        (sign_extend:DI (reg:SI 393))) "CALMXW.f":96 -1
     (nil))
(insn 198 197 199 15 (parallel [
            (set (reg:DI 159 [ _73 ])
                (plus:DI (reg:DI 157 [ _71 ])
                    (reg:DI 158 [ _72 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 199 198 200 15 (parallel [
            (set (reg:DI 160 [ _74 ])
                (plus:DI (reg:DI 159 [ _73 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 200 199 201 15 (set (reg/f:DI 394)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":96 -1
     (nil))
(insn 201 200 202 15 (parallel [
            (set (reg:DI 395)
                (plus:DI (reg:DI 160 [ _74 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":96 -1
     (nil))
(insn 202 201 203 15 (set (reg:SF 161 [ _75 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 395)
                    (const_int 4 [0x4]))
                (reg/f:DI 394)) [2 vrbls.u S4 A32])) "CALMXW.f":96 -1
     (nil))
(insn 203 202 204 15 (set (reg:SF 162 [ _76 ])
        (plus:SF (reg:SF 151 [ _65 ])
            (reg:SF 161 [ _75 ]))) "CALMXW.f":96 -1
     (nil))
(insn 204 203 205 15 (set (reg:SF 163 [ _77 ])
        (reg:SF 162 [ _76 ])) "CALMXW.f":96 -1
     (nil))
(insn 205 204 206 15 (set (reg:SF 397)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALMXW.f":96 -1
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 206 205 207 15 (set (reg:SF 396)
        (mult:SF (reg:SF 163 [ _77 ])
            (reg:SF 397))) "CALMXW.f":96 -1
     (nil))
(insn 207 206 208 15 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 u0+0 S4 A32])
        (reg:SF 396)) "CALMXW.f":96 -1
     (nil))
(insn 208 207 209 15 (set (reg:SI 398)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 209 208 210 15 (set (reg:DI 164 [ _78 ])
        (sign_extend:DI (reg:SI 398))) "CALMXW.f":98 -1
     (nil))
(insn 210 209 211 15 (parallel [
            (set (reg:DI 165 [ _79 ])
                (mult:DI (reg:DI 164 [ _78 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 211 210 212 15 (set (reg:SI 399)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 212 211 213 15 (parallel [
            (set (reg:SI 166 [ _80 ])
                (plus:SI (reg:SI 399)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 213 212 214 15 (set (reg:DI 167 [ _81 ])
        (sign_extend:DI (reg:SI 166 [ _80 ]))) "CALMXW.f":98 -1
     (nil))
(insn 214 213 215 15 (parallel [
            (set (reg:DI 168 [ _82 ])
                (mult:DI (reg:DI 167 [ _81 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 215 214 216 15 (parallel [
            (set (reg:DI 169 [ _83 ])
                (plus:DI (reg:DI 165 [ _79 ])
                    (reg:DI 168 [ _82 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 216 215 217 15 (set (reg:SI 400)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 217 216 218 15 (set (reg:DI 170 [ _84 ])
        (sign_extend:DI (reg:SI 400))) "CALMXW.f":98 -1
     (nil))
(insn 218 217 219 15 (parallel [
            (set (reg:DI 171 [ _85 ])
                (plus:DI (reg:DI 169 [ _83 ])
                    (reg:DI 170 [ _84 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 219 218 220 15 (parallel [
            (set (reg:DI 172 [ _86 ])
                (plus:DI (reg:DI 171 [ _85 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 220 219 221 15 (set (reg/f:DI 401)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":98 -1
     (nil))
(insn 221 220 222 15 (parallel [
            (set (reg:DI 402)
                (plus:DI (reg:DI 172 [ _86 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 222 221 223 15 (set (reg:SF 173 [ _87 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 402)
                    (const_int 4 [0x4]))
                (reg/f:DI 401)) [2 vrbls.v S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 223 222 224 15 (set (reg:SI 403)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 224 223 225 15 (set (reg:DI 174 [ _88 ])
        (sign_extend:DI (reg:SI 403))) "CALMXW.f":98 -1
     (nil))
(insn 225 224 226 15 (parallel [
            (set (reg:DI 175 [ _89 ])
                (mult:DI (reg:DI 174 [ _88 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 226 225 227 15 (set (reg:SI 404)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 227 226 228 15 (set (reg:DI 176 [ _90 ])
        (sign_extend:DI (reg:SI 404))) "CALMXW.f":98 -1
     (nil))
(insn 228 227 229 15 (parallel [
            (set (reg:DI 177 [ _91 ])
                (mult:DI (reg:DI 176 [ _90 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 229 228 230 15 (parallel [
            (set (reg:DI 178 [ _92 ])
                (plus:DI (reg:DI 175 [ _89 ])
                    (reg:DI 177 [ _91 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 230 229 231 15 (set (reg:SI 405)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 iw+0 S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 231 230 232 15 (set (reg:DI 179 [ _93 ])
        (sign_extend:DI (reg:SI 405))) "CALMXW.f":98 -1
     (nil))
(insn 232 231 233 15 (parallel [
            (set (reg:DI 180 [ _94 ])
                (plus:DI (reg:DI 178 [ _92 ])
                    (reg:DI 179 [ _93 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 233 232 234 15 (parallel [
            (set (reg:DI 181 [ _95 ])
                (plus:DI (reg:DI 180 [ _94 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 234 233 235 15 (set (reg/f:DI 406)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":98 -1
     (nil))
(insn 235 234 236 15 (parallel [
            (set (reg:DI 407)
                (plus:DI (reg:DI 181 [ _95 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 236 235 237 15 (set (reg:SF 182 [ _96 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 407)
                    (const_int 4 [0x4]))
                (reg/f:DI 406)) [2 vrbls.v S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 237 236 238 15 (set (reg:SF 183 [ _97 ])
        (plus:SF (reg:SF 173 [ _87 ])
            (reg:SF 182 [ _96 ]))) "CALMXW.f":98 -1
     (nil))
(insn 238 237 239 15 (set (reg:SI 408)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 239 238 240 15 (set (reg:DI 184 [ _98 ])
        (sign_extend:DI (reg:SI 408))) "CALMXW.f":98 -1
     (nil))
(insn 240 239 241 15 (parallel [
            (set (reg:DI 185 [ _99 ])
                (mult:DI (reg:DI 184 [ _98 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 241 240 242 15 (set (reg:SI 409)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 242 241 243 15 (set (reg:DI 186 [ _100 ])
        (sign_extend:DI (reg:SI 409))) "CALMXW.f":98 -1
     (nil))
(insn 243 242 244 15 (parallel [
            (set (reg:DI 187 [ _101 ])
                (mult:DI (reg:DI 186 [ _100 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 244 243 245 15 (parallel [
            (set (reg:DI 188 [ _102 ])
                (plus:DI (reg:DI 185 [ _99 ])
                    (reg:DI 187 [ _101 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 245 244 246 15 (set (reg:SI 410)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 ie+0 S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 246 245 247 15 (set (reg:DI 189 [ _103 ])
        (sign_extend:DI (reg:SI 410))) "CALMXW.f":98 -1
     (nil))
(insn 247 246 248 15 (parallel [
            (set (reg:DI 190 [ _104 ])
                (plus:DI (reg:DI 188 [ _102 ])
                    (reg:DI 189 [ _103 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 248 247 249 15 (parallel [
            (set (reg:DI 191 [ _105 ])
                (plus:DI (reg:DI 190 [ _104 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 249 248 250 15 (set (reg/f:DI 411)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":98 -1
     (nil))
(insn 250 249 251 15 (parallel [
            (set (reg:DI 412)
                (plus:DI (reg:DI 191 [ _105 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 251 250 252 15 (set (reg:SF 192 [ _106 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 412)
                    (const_int 4 [0x4]))
                (reg/f:DI 411)) [2 vrbls.v S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 252 251 253 15 (set (reg:SF 193 [ _107 ])
        (plus:SF (reg:SF 183 [ _97 ])
            (reg:SF 192 [ _106 ]))) "CALMXW.f":98 -1
     (nil))
(insn 253 252 254 15 (set (reg:SI 413)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 254 253 255 15 (set (reg:DI 194 [ _108 ])
        (sign_extend:DI (reg:SI 413))) "CALMXW.f":98 -1
     (nil))
(insn 255 254 256 15 (parallel [
            (set (reg:DI 195 [ _109 ])
                (mult:DI (reg:DI 194 [ _108 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 256 255 257 15 (set (reg:SI 414)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 257 256 258 15 (parallel [
            (set (reg:SI 196 [ _110 ])
                (plus:SI (reg:SI 414)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 258 257 259 15 (set (reg:DI 197 [ _111 ])
        (sign_extend:DI (reg:SI 196 [ _110 ]))) "CALMXW.f":98 -1
     (nil))
(insn 259 258 260 15 (parallel [
            (set (reg:DI 198 [ _112 ])
                (mult:DI (reg:DI 197 [ _111 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 260 259 261 15 (parallel [
            (set (reg:DI 199 [ _113 ])
                (plus:DI (reg:DI 195 [ _109 ])
                    (reg:DI 198 [ _112 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 261 260 262 15 (set (reg:SI 415)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 262 261 263 15 (set (reg:DI 200 [ _114 ])
        (sign_extend:DI (reg:SI 415))) "CALMXW.f":98 -1
     (nil))
(insn 263 262 264 15 (parallel [
            (set (reg:DI 201 [ _115 ])
                (plus:DI (reg:DI 199 [ _113 ])
                    (reg:DI 200 [ _114 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 264 263 265 15 (parallel [
            (set (reg:DI 202 [ _116 ])
                (plus:DI (reg:DI 201 [ _115 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 265 264 266 15 (set (reg/f:DI 416)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":98 -1
     (nil))
(insn 266 265 267 15 (parallel [
            (set (reg:DI 417)
                (plus:DI (reg:DI 202 [ _116 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":98 -1
     (nil))
(insn 267 266 268 15 (set (reg:SF 203 [ _117 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 417)
                    (const_int 4 [0x4]))
                (reg/f:DI 416)) [2 vrbls.v S4 A32])) "CALMXW.f":98 -1
     (nil))
(insn 268 267 269 15 (set (reg:SF 204 [ _118 ])
        (plus:SF (reg:SF 193 [ _107 ])
            (reg:SF 203 [ _117 ]))) "CALMXW.f":98 -1
     (nil))
(insn 269 268 270 15 (set (reg:SF 205 [ _119 ])
        (reg:SF 204 [ _118 ])) "CALMXW.f":98 -1
     (nil))
(insn 270 269 271 15 (set (reg:SF 419)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALMXW.f":98 -1
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 271 270 272 15 (set (reg:SF 418)
        (mult:SF (reg:SF 205 [ _119 ])
            (reg:SF 419))) "CALMXW.f":98 -1
     (nil))
(insn 272 271 273 15 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 v0+0 S4 A32])
        (reg:SF 418)) "CALMXW.f":98 -1
     (nil))
(insn 273 272 274 15 (set (reg:SF 336 [ _286 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 u0+0 S4 A32])) "CALMXW.f":99 -1
     (nil))
(insn 274 273 275 15 (set (reg:SF 337 [ _287 ])
        (mult:SF (reg:SF 336 [ _286 ])
            (reg:SF 336 [ _286 ]))) "CALMXW.f":99 -1
     (nil))
(insn 275 274 276 15 (set (reg:SF 338 [ _288 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 v0+0 S4 A32])) "CALMXW.f":99 -1
     (nil))
(insn 276 275 277 15 (set (reg:SF 339 [ _289 ])
        (mult:SF (reg:SF 338 [ _288 ])
            (reg:SF 338 [ _288 ]))) "CALMXW.f":99 -1
     (nil))
(insn 277 276 278 15 (set (reg:SF 206 [ _120 ])
        (plus:SF (reg:SF 337 [ _287 ])
            (reg:SF 339 [ _289 ]))) "CALMXW.f":99 -1
     (nil))
(insn 278 277 279 15 (set (reg:SF 420)
        (sqrt:SF (reg:SF 206 [ _120 ]))) "CALMXW.f":99 -1
     (nil))
(insn 279 278 280 15 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 wind+0 S4 A32])
        (reg:SF 420)) "CALMXW.f":99 -1
     (nil))
(insn 280 279 281 15 (set (reg:SF 421)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 wind+0 S4 A32])) "CALMXW.f":107 -1
     (nil))
(insn 281 280 282 15 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 421)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 mxww+0 S4 A32]))) "CALMXW.f":107 -1
     (nil))
(jump_insn 282 281 504 15 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 508)
            (pc))) "CALMXW.f":107 682 {*jcc}
     (nil)
 -> 508)
;;  succ:       18
;;              16 (FALLTHRU)

;; basic block 16, loop depth 3, maybe hot
;;  prev block 15, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
(note 504 282 283 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 283 504 284 16 (set (pc)
        (label_ref 480)) "CALMXW.f":107 -1
     (nil)
 -> 480)
;;  succ:       22

(barrier 284 283 508)
;; basic block 18, loop depth 3, maybe hot
;;  prev block 16, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
(code_label 508 284 286 18 16 (nil) [1 uses])
(note 286 508 287 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 18 (set (reg:SI 422)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":107 -1
     (nil))
(insn 288 287 289 18 (set (reg:DI 207 [ _121 ])
        (sign_extend:DI (reg:SI 422))) "CALMXW.f":107 -1
     (nil))
(insn 289 288 290 18 (parallel [
            (set (reg:DI 208 [ _122 ])
                (mult:DI (reg:DI 207 [ _121 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":107 -1
     (nil))
(insn 290 289 291 18 (set (reg:SI 423)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":107 -1
     (nil))
(insn 291 290 292 18 (set (reg:DI 209 [ _123 ])
        (sign_extend:DI (reg:SI 423))) "CALMXW.f":107 -1
     (nil))
(insn 292 291 293 18 (parallel [
            (set (reg:DI 210 [ _124 ])
                (mult:DI (reg:DI 209 [ _123 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":107 -1
     (nil))
(insn 293 292 294 18 (parallel [
            (set (reg:DI 211 [ _125 ])
                (plus:DI (reg:DI 208 [ _122 ])
                    (reg:DI 210 [ _124 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":107 -1
     (nil))
(insn 294 293 295 18 (set (reg:SI 424)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":107 -1
     (nil))
(insn 295 294 296 18 (set (reg:DI 212 [ _126 ])
        (sign_extend:DI (reg:SI 424))) "CALMXW.f":107 -1
     (nil))
(insn 296 295 297 18 (parallel [
            (set (reg:DI 213 [ _127 ])
                (plus:DI (reg:DI 211 [ _125 ])
                    (reg:DI 212 [ _126 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":107 -1
     (nil))
(insn 297 296 298 18 (parallel [
            (set (reg:DI 214 [ _128 ])
                (plus:DI (reg:DI 213 [ _127 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":107 -1
     (nil))
(insn 298 297 299 18 (set (reg/f:DI 425)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f8a2980b870 extra>)) "CALMXW.f":107 -1
     (nil))
(insn 299 298 300 18 (set (reg:SF 215 [ _129 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 214 [ _128 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 425)) [2 extra.pint S4 A32])) "CALMXW.f":107 -1
     (nil))
(insn 300 299 301 18 (set (reg:SF 426)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 critp+0 S4 A32])) "CALMXW.f":107 -1
     (nil))
(insn 301 300 302 18 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 426)
            (reg:SF 215 [ _129 ]))) "CALMXW.f":107 -1
     (nil))
(jump_insn 302 301 506 18 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 509)
            (pc))) "CALMXW.f":107 682 {*jcc}
     (nil)
 -> 509)
;;  succ:       21
;;              19 (FALLTHRU)

;; basic block 19, loop depth 3, maybe hot
;;  prev block 18, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
(note 506 302 303 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 303 506 304 19 (set (pc)
        (label_ref 480)) "CALMXW.f":107 -1
     (nil)
 -> 480)
;;  succ:       22

(barrier 304 303 509)
;; basic block 21, loop depth 3, maybe hot
;;  prev block 19, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
(code_label 509 304 306 21 17 (nil) [1 uses])
(note 306 509 307 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 21 (set (reg:SI 427)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":108 -1
     (nil))
(insn 308 307 309 21 (set (reg:DI 216 [ _130 ])
        (sign_extend:DI (reg:SI 427))) "CALMXW.f":108 -1
     (nil))
(insn 309 308 310 21 (parallel [
            (set (reg:DI 217 [ _131 ])
                (mult:DI (reg:DI 216 [ _130 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":108 -1
     (nil))
(insn 310 309 311 21 (set (reg:SI 428)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":108 -1
     (nil))
(insn 311 310 312 21 (set (reg:DI 218 [ _132 ])
        (sign_extend:DI (reg:SI 428))) "CALMXW.f":108 -1
     (nil))
(insn 312 311 313 21 (parallel [
            (set (reg:DI 219 [ _133 ])
                (plus:DI (reg:DI 217 [ _131 ])
                    (reg:DI 218 [ _132 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":108 -1
     (nil))
(insn 313 312 314 21 (parallel [
            (set (reg:DI 220 [ _134 ])
                (plus:DI (reg:DI 219 [ _133 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":108 -1
     (nil))
(insn 314 313 315 21 (set (reg/f:DI 429)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [3 mxwu+0 S8 A64])) "CALMXW.f":108 -1
     (nil))
(insn 315 314 316 21 (set (reg:SF 430)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 u0+0 S4 A32])) "CALMXW.f":108 -1
     (nil))
(insn 316 315 317 21 (set (mem:SF (plus:DI (mult:DI (reg:DI 220 [ _134 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 429)) [2 *mxwu_261(D) S4 A32])
        (reg:SF 430)) "CALMXW.f":108 -1
     (nil))
(insn 317 316 318 21 (set (reg:SI 431)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":109 -1
     (nil))
(insn 318 317 319 21 (set (reg:DI 221 [ _135 ])
        (sign_extend:DI (reg:SI 431))) "CALMXW.f":109 -1
     (nil))
(insn 319 318 320 21 (parallel [
            (set (reg:DI 222 [ _136 ])
                (mult:DI (reg:DI 221 [ _135 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":109 -1
     (nil))
(insn 320 319 321 21 (set (reg:SI 432)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":109 -1
     (nil))
(insn 321 320 322 21 (set (reg:DI 223 [ _137 ])
        (sign_extend:DI (reg:SI 432))) "CALMXW.f":109 -1
     (nil))
(insn 322 321 323 21 (parallel [
            (set (reg:DI 224 [ _138 ])
                (plus:DI (reg:DI 222 [ _136 ])
                    (reg:DI 223 [ _137 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":109 -1
     (nil))
(insn 323 322 324 21 (parallel [
            (set (reg:DI 225 [ _139 ])
                (plus:DI (reg:DI 224 [ _138 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":109 -1
     (nil))
(insn 324 323 325 21 (set (reg/f:DI 433)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 mxwv+0 S8 A64])) "CALMXW.f":109 -1
     (nil))
(insn 325 324 326 21 (set (reg:SF 434)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 v0+0 S4 A32])) "CALMXW.f":109 -1
     (nil))
(insn 326 325 327 21 (set (mem:SF (plus:DI (mult:DI (reg:DI 225 [ _139 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 433)) [2 *mxwv_263(D) S4 A32])
        (reg:SF 434)) "CALMXW.f":109 -1
     (nil))
(insn 327 326 328 21 (set (reg:SF 435)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 wind+0 S4 A32])) "CALMXW.f":110 -1
     (nil))
(insn 328 327 329 21 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 mxww+0 S4 A32])
        (reg:SF 435)) "CALMXW.f":110 -1
     (nil))
(insn 329 328 330 21 (set (reg:SI 436)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":111 -1
     (nil))
(insn 330 329 331 21 (set (reg:DI 226 [ _140 ])
        (sign_extend:DI (reg:SI 436))) "CALMXW.f":111 -1
     (nil))
(insn 331 330 332 21 (parallel [
            (set (reg:DI 227 [ _141 ])
                (mult:DI (reg:DI 226 [ _140 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 332 331 333 21 (set (reg:SI 437)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":111 -1
     (nil))
(insn 333 332 334 21 (set (reg:DI 228 [ _142 ])
        (sign_extend:DI (reg:SI 437))) "CALMXW.f":111 -1
     (nil))
(insn 334 333 335 21 (parallel [
            (set (reg:DI 229 [ _143 ])
                (mult:DI (reg:DI 228 [ _142 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 335 334 336 21 (parallel [
            (set (reg:DI 230 [ _144 ])
                (plus:DI (reg:DI 227 [ _141 ])
                    (reg:DI 229 [ _143 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 336 335 337 21 (set (reg:SI 438)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":111 -1
     (nil))
(insn 337 336 338 21 (set (reg:DI 231 [ _145 ])
        (sign_extend:DI (reg:SI 438))) "CALMXW.f":111 -1
     (nil))
(insn 338 337 339 21 (parallel [
            (set (reg:DI 232 [ _146 ])
                (plus:DI (reg:DI 230 [ _144 ])
                    (reg:DI 231 [ _145 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 339 338 340 21 (parallel [
            (set (reg:DI 233 [ _147 ])
                (plus:DI (reg:DI 232 [ _146 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 340 339 341 21 (set (reg/f:DI 439)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f8a2980b870 extra>)) "CALMXW.f":111 -1
     (nil))
(insn 341 340 342 21 (set (reg:SF 234 [ _148 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 233 [ _147 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 extra.pint S4 A32])) "CALMXW.f":111 -1
     (nil))
(insn 342 341 343 21 (set (reg:SI 440)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":111 -1
     (nil))
(insn 343 342 344 21 (parallel [
            (set (reg:SI 235 [ _149 ])
                (plus:SI (reg:SI 440)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 344 343 345 21 (set (reg:DI 236 [ _150 ])
        (sign_extend:DI (reg:SI 235 [ _149 ]))) "CALMXW.f":111 -1
     (nil))
(insn 345 344 346 21 (parallel [
            (set (reg:DI 237 [ _151 ])
                (mult:DI (reg:DI 236 [ _150 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 346 345 347 21 (set (reg:SI 441)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":111 -1
     (nil))
(insn 347 346 348 21 (set (reg:DI 238 [ _152 ])
        (sign_extend:DI (reg:SI 441))) "CALMXW.f":111 -1
     (nil))
(insn 348 347 349 21 (parallel [
            (set (reg:DI 239 [ _153 ])
                (mult:DI (reg:DI 238 [ _152 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 349 348 350 21 (parallel [
            (set (reg:DI 240 [ _154 ])
                (plus:DI (reg:DI 237 [ _151 ])
                    (reg:DI 239 [ _153 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 350 349 351 21 (set (reg:SI 442)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":111 -1
     (nil))
(insn 351 350 352 21 (set (reg:DI 241 [ _155 ])
        (sign_extend:DI (reg:SI 442))) "CALMXW.f":111 -1
     (nil))
(insn 352 351 353 21 (parallel [
            (set (reg:DI 242 [ _156 ])
                (plus:DI (reg:DI 240 [ _154 ])
                    (reg:DI 241 [ _155 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 353 352 354 21 (parallel [
            (set (reg:DI 243 [ _157 ])
                (plus:DI (reg:DI 242 [ _156 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 354 353 355 21 (set (reg/f:DI 443)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f8a2980b870 extra>)) "CALMXW.f":111 -1
     (nil))
(insn 355 354 356 21 (set (reg:SF 244 [ _158 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 243 [ _157 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 443)) [2 extra.pint S4 A32])) "CALMXW.f":111 -1
     (nil))
(insn 356 355 357 21 (set (reg:SF 245 [ _159 ])
        (plus:SF (reg:SF 234 [ _148 ])
            (reg:SF 244 [ _158 ]))) "CALMXW.f":111 -1
     (nil))
(insn 357 356 358 21 (set (reg:SF 246 [ _160 ])
        (reg:SF 245 [ _159 ])) "CALMXW.f":111 -1
     (nil))
(insn 358 357 359 21 (set (reg:SI 444)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":111 -1
     (nil))
(insn 359 358 360 21 (set (reg:DI 247 [ _161 ])
        (sign_extend:DI (reg:SI 444))) "CALMXW.f":111 -1
     (nil))
(insn 360 359 361 21 (parallel [
            (set (reg:DI 248 [ _162 ])
                (mult:DI (reg:DI 247 [ _161 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 361 360 362 21 (set (reg:SI 445)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":111 -1
     (nil))
(insn 362 361 363 21 (set (reg:DI 249 [ _163 ])
        (sign_extend:DI (reg:SI 445))) "CALMXW.f":111 -1
     (nil))
(insn 363 362 364 21 (parallel [
            (set (reg:DI 250 [ _164 ])
                (plus:DI (reg:DI 248 [ _162 ])
                    (reg:DI 249 [ _163 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 364 363 365 21 (parallel [
            (set (reg:DI 251 [ _165 ])
                (plus:DI (reg:DI 250 [ _164 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":111 -1
     (nil))
(insn 365 364 366 21 (set (reg:SF 446)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALMXW.f":111 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 366 365 367 21 (set (reg:SF 252 [ _166 ])
        (mult:SF (reg:SF 246 [ _160 ])
            (reg:SF 446))) "CALMXW.f":111 -1
     (nil))
(insn 367 366 368 21 (set (reg/f:DI 447)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 mxwp+0 S8 A64])) "CALMXW.f":111 -1
     (nil))
(insn 368 367 369 21 (set (mem:SF (plus:DI (mult:DI (reg:DI 251 [ _165 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 447)) [2 *mxwp_265(D) S4 A32])
        (reg:SF 252 [ _166 ])) "CALMXW.f":111 -1
     (nil))
(insn 369 368 370 21 (set (reg:SI 448)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 370 369 371 21 (parallel [
            (set (reg:SI 253 [ _167 ])
                (plus:SI (reg:SI 448)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 371 370 372 21 (set (reg:DI 254 [ _168 ])
        (sign_extend:DI (reg:SI 253 [ _167 ]))) "CALMXW.f":113 -1
     (nil))
(insn 372 371 373 21 (parallel [
            (set (reg:DI 255 [ _169 ])
                (mult:DI (reg:DI 254 [ _168 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 373 372 374 21 (set (reg:SI 449)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 374 373 375 21 (set (reg:DI 256 [ _170 ])
        (sign_extend:DI (reg:SI 449))) "CALMXW.f":113 -1
     (nil))
(insn 375 374 376 21 (parallel [
            (set (reg:DI 257 [ _171 ])
                (mult:DI (reg:DI 256 [ _170 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 376 375 377 21 (parallel [
            (set (reg:DI 258 [ _172 ])
                (plus:DI (reg:DI 255 [ _169 ])
                    (reg:DI 257 [ _171 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 377 376 378 21 (set (reg:SI 450)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 378 377 379 21 (set (reg:DI 259 [ _173 ])
        (sign_extend:DI (reg:SI 450))) "CALMXW.f":113 -1
     (nil))
(insn 379 378 380 21 (parallel [
            (set (reg:DI 260 [ _174 ])
                (plus:DI (reg:DI 258 [ _172 ])
                    (reg:DI 259 [ _173 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 380 379 381 21 (parallel [
            (set (reg:DI 261 [ _175 ])
                (plus:DI (reg:DI 260 [ _174 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 381 380 382 21 (set (reg/f:DI 451)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f8a29813d80 masks>)) "CALMXW.f":113 -1
     (nil))
(insn 382 381 383 21 (parallel [
            (set (reg:DI 452)
                (plus:DI (reg:DI 261 [ _175 ])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 383 382 384 21 (set (reg:SF 262 [ _176 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 452)
                    (const_int 4 [0x4]))
                (reg/f:DI 451)) [2 masks.htm S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 384 383 385 21 (set (reg:SI 453)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 385 384 386 21 (parallel [
            (set (reg:SI 263 [ _177 ])
                (plus:SI (reg:SI 453)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 386 385 387 21 (set (reg:DI 264 [ _178 ])
        (sign_extend:DI (reg:SI 263 [ _177 ]))) "CALMXW.f":113 -1
     (nil))
(insn 387 386 388 21 (parallel [
            (set (reg:DI 265 [ _179 ])
                (mult:DI (reg:DI 264 [ _178 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 388 387 389 21 (set (reg:SI 454)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 389 388 390 21 (set (reg:DI 266 [ _180 ])
        (sign_extend:DI (reg:SI 454))) "CALMXW.f":113 -1
     (nil))
(insn 390 389 391 21 (parallel [
            (set (reg:DI 267 [ _181 ])
                (mult:DI (reg:DI 266 [ _180 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 391 390 392 21 (parallel [
            (set (reg:DI 268 [ _182 ])
                (plus:DI (reg:DI 265 [ _179 ])
                    (reg:DI 267 [ _181 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 392 391 393 21 (set (reg:SI 455)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 393 392 394 21 (set (reg:DI 269 [ _183 ])
        (sign_extend:DI (reg:SI 455))) "CALMXW.f":113 -1
     (nil))
(insn 394 393 395 21 (parallel [
            (set (reg:DI 270 [ _184 ])
                (plus:DI (reg:DI 268 [ _182 ])
                    (reg:DI 269 [ _183 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 395 394 396 21 (parallel [
            (set (reg:DI 271 [ _185 ])
                (plus:DI (reg:DI 270 [ _184 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 396 395 397 21 (set (reg/f:DI 456)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":113 -1
     (nil))
(insn 397 396 398 21 (parallel [
            (set (reg:DI 457)
                (plus:DI (reg:DI 271 [ _185 ])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 398 397 399 21 (set (reg:SF 272 [ _186 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 457)
                    (const_int 4 [0x4]))
                (reg/f:DI 456)) [2 vrbls.t S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 399 398 400 21 (set (reg:SF 273 [ _187 ])
        (mult:SF (reg:SF 262 [ _176 ])
            (reg:SF 272 [ _186 ]))) "CALMXW.f":113 -1
     (nil))
(insn 400 399 401 21 (set (reg:SI 458)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 401 400 402 21 (parallel [
            (set (reg:SI 274 [ _188 ])
                (plus:SI (reg:SI 458)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 402 401 403 21 (set (reg:DI 275 [ _189 ])
        (sign_extend:DI (reg:SI 274 [ _188 ]))) "CALMXW.f":113 -1
     (nil))
(insn 403 402 404 21 (parallel [
            (set (reg:DI 276 [ _190 ])
                (mult:DI (reg:DI 275 [ _189 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 404 403 405 21 (set (reg:SI 459)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 405 404 406 21 (set (reg:DI 277 [ _191 ])
        (sign_extend:DI (reg:SI 459))) "CALMXW.f":113 -1
     (nil))
(insn 406 405 407 21 (parallel [
            (set (reg:DI 278 [ _192 ])
                (mult:DI (reg:DI 277 [ _191 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 407 406 408 21 (parallel [
            (set (reg:DI 279 [ _193 ])
                (plus:DI (reg:DI 276 [ _190 ])
                    (reg:DI 278 [ _192 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 408 407 409 21 (set (reg:SI 460)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 409 408 410 21 (set (reg:DI 280 [ _194 ])
        (sign_extend:DI (reg:SI 460))) "CALMXW.f":113 -1
     (nil))
(insn 410 409 411 21 (parallel [
            (set (reg:DI 281 [ _195 ])
                (plus:DI (reg:DI 279 [ _193 ])
                    (reg:DI 280 [ _194 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 411 410 412 21 (parallel [
            (set (reg:DI 282 [ _196 ])
                (plus:DI (reg:DI 281 [ _195 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 412 411 413 21 (set (reg/f:DI 461)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f8a2981aea0 vrbls>)) "CALMXW.f":113 -1
     (nil))
(insn 413 412 414 21 (parallel [
            (set (reg:DI 462)
                (plus:DI (reg:DI 282 [ _196 ])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 414 413 415 21 (set (reg:SF 283 [ _197 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 462)
                    (const_int 4 [0x4]))
                (reg/f:DI 461)) [2 vrbls.q S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 415 414 416 21 (set (reg:SF 463)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 416 415 417 21 (set (reg:SF 284 [ _198 ])
        (mult:SF (reg:SF 283 [ _197 ])
            (reg:SF 463))) "CALMXW.f":113 -1
     (nil))
(insn 417 416 418 21 (set (reg:SF 464)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 418 417 419 21 (set (reg:SF 285 [ _199 ])
        (plus:SF (reg:SF 284 [ _198 ])
            (reg:SF 464))) "CALMXW.f":113 -1
     (nil))
(insn 419 418 420 21 (set (reg:SF 286 [ _200 ])
        (reg:SF 285 [ _199 ])) "CALMXW.f":113 -1
     (nil))
(insn 420 419 421 21 (set (reg:SF 287 [ _201 ])
        (mult:SF (reg:SF 273 [ _187 ])
            (reg:SF 286 [ _200 ]))) "CALMXW.f":113 -1
     (nil))
(insn 421 420 422 21 (set (reg:SF 465)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (const_double:SF 2.92897968292236328125e+1 [0x0.ea5181p+5])
        (nil)))
(insn 422 421 423 21 (set (reg:SF 288 [ _202 ])
        (mult:SF (reg:SF 287 [ _201 ])
            (reg:SF 465))) "CALMXW.f":113 -1
     (nil))
(insn 423 422 424 21 (set (reg:SI 466)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 424 423 425 21 (parallel [
            (set (reg:SI 289 [ _203 ])
                (plus:SI (reg:SI 466)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 425 424 426 21 (set (reg:DI 290 [ _204 ])
        (sign_extend:DI (reg:SI 289 [ _203 ]))) "CALMXW.f":113 -1
     (nil))
(insn 426 425 427 21 (parallel [
            (set (reg:DI 291 [ _205 ])
                (mult:DI (reg:DI 290 [ _204 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 427 426 428 21 (set (reg:SI 467)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 428 427 429 21 (set (reg:DI 292 [ _206 ])
        (sign_extend:DI (reg:SI 467))) "CALMXW.f":113 -1
     (nil))
(insn 429 428 430 21 (parallel [
            (set (reg:DI 293 [ _207 ])
                (mult:DI (reg:DI 292 [ _206 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 430 429 431 21 (parallel [
            (set (reg:DI 294 [ _208 ])
                (plus:DI (reg:DI 291 [ _205 ])
                    (reg:DI 293 [ _207 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 431 430 432 21 (set (reg:SI 468)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 432 431 433 21 (set (reg:DI 295 [ _209 ])
        (sign_extend:DI (reg:SI 468))) "CALMXW.f":113 -1
     (nil))
(insn 433 432 434 21 (parallel [
            (set (reg:DI 296 [ _210 ])
                (plus:DI (reg:DI 294 [ _208 ])
                    (reg:DI 295 [ _209 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 434 433 435 21 (parallel [
            (set (reg:DI 297 [ _211 ])
                (plus:DI (reg:DI 296 [ _210 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 435 434 436 21 (set (reg/f:DI 469)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f8a2980b870 extra>)) "CALMXW.f":113 -1
     (nil))
(insn 436 435 437 21 (set (reg:SF 298 [ _212 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 297 [ _211 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 469)) [2 extra.pint S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 437 436 438 21 (set (reg:SF 21 xmm0)
        (reg:SF 298 [ _212 ])) "CALMXW.f":113 -1
     (nil))
(call_insn/u 438 437 439 21 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f8a2967b900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALMXW.f":113 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 439 438 440 21 (set (reg:SF 299 [ _213 ])
        (reg:SF 21 xmm0)) "CALMXW.f":113 -1
     (nil))
(insn 440 439 441 21 (set (reg:SI 470)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 441 440 442 21 (set (reg:DI 300 [ _214 ])
        (sign_extend:DI (reg:SI 470))) "CALMXW.f":113 -1
     (nil))
(insn 442 441 443 21 (parallel [
            (set (reg:DI 301 [ _215 ])
                (mult:DI (reg:DI 300 [ _214 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 443 442 444 21 (set (reg:SI 471)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 444 443 445 21 (set (reg:DI 302 [ _216 ])
        (sign_extend:DI (reg:SI 471))) "CALMXW.f":113 -1
     (nil))
(insn 445 444 446 21 (parallel [
            (set (reg:DI 303 [ _217 ])
                (plus:DI (reg:DI 301 [ _215 ])
                    (reg:DI 302 [ _216 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 446 445 447 21 (parallel [
            (set (reg:DI 304 [ _218 ])
                (plus:DI (reg:DI 303 [ _217 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 447 446 448 21 (set (reg/f:DI 472)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 mxwp+0 S8 A64])) "CALMXW.f":113 -1
     (nil))
(insn 448 447 449 21 (set (reg:SF 305 [ _219 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 304 [ _218 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 472)) [2 *mxwp_265(D) S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 449 448 450 21 (set (reg:SF 21 xmm0)
        (reg:SF 305 [ _219 ])) "CALMXW.f":113 -1
     (nil))
(call_insn/u 450 449 451 21 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f8a2967b900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALMXW.f":113 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 451 450 452 21 (set (reg:SF 306 [ _220 ])
        (reg:SF 21 xmm0)) "CALMXW.f":113 -1
     (nil))
(insn 452 451 453 21 (set (reg:SF 307 [ _221 ])
        (minus:SF (reg:SF 299 [ _213 ])
            (reg:SF 306 [ _220 ]))) "CALMXW.f":113 -1
     (nil))
(insn 453 452 454 21 (set (reg:SF 308 [ _222 ])
        (reg:SF 307 [ _221 ])) "CALMXW.f":113 -1
     (nil))
(insn 454 453 455 21 (set (reg:SF 309 [ _223 ])
        (mult:SF (reg:SF 288 [ _202 ])
            (reg:SF 308 [ _222 ]))) "CALMXW.f":113 -1
     (nil))
(insn 455 454 456 21 (set (reg:SI 473)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 456 455 457 21 (parallel [
            (set (reg:SI 310 [ _224 ])
                (plus:SI (reg:SI 473)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 457 456 458 21 (set (reg:DI 311 [ _225 ])
        (sign_extend:DI (reg:SI 310 [ _224 ]))) "CALMXW.f":113 -1
     (nil))
(insn 458 457 459 21 (parallel [
            (set (reg:DI 312 [ _226 ])
                (mult:DI (reg:DI 311 [ _225 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 459 458 460 21 (set (reg:SI 474)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 460 459 461 21 (set (reg:DI 313 [ _227 ])
        (sign_extend:DI (reg:SI 474))) "CALMXW.f":113 -1
     (nil))
(insn 461 460 462 21 (parallel [
            (set (reg:DI 314 [ _228 ])
                (mult:DI (reg:DI 313 [ _227 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 462 461 463 21 (parallel [
            (set (reg:DI 315 [ _229 ])
                (plus:DI (reg:DI 312 [ _226 ])
                    (reg:DI 314 [ _228 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 463 462 464 21 (set (reg:SI 475)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 464 463 465 21 (set (reg:DI 316 [ _230 ])
        (sign_extend:DI (reg:SI 475))) "CALMXW.f":113 -1
     (nil))
(insn 465 464 466 21 (parallel [
            (set (reg:DI 317 [ _231 ])
                (plus:DI (reg:DI 315 [ _229 ])
                    (reg:DI 316 [ _230 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 466 465 467 21 (parallel [
            (set (reg:DI 318 [ _232 ])
                (plus:DI (reg:DI 317 [ _231 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 467 466 468 21 (set (reg/f:DI 476)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f8a2980b870 extra>)) "CALMXW.f":113 -1
     (nil))
(insn 468 467 469 21 (parallel [
            (set (reg:DI 477)
                (plus:DI (reg:DI 318 [ _232 ])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 469 468 470 21 (set (reg:SF 319 [ _233 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 477)
                    (const_int 4 [0x4]))
                (reg/f:DI 476)) [2 extra.zint S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 470 469 471 21 (set (reg:SI 478)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 471 470 472 21 (set (reg:DI 320 [ _234 ])
        (sign_extend:DI (reg:SI 478))) "CALMXW.f":113 -1
     (nil))
(insn 472 471 473 21 (parallel [
            (set (reg:DI 321 [ _235 ])
                (mult:DI (reg:DI 320 [ _234 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 473 472 474 21 (set (reg:SI 479)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALMXW.f":113 -1
     (nil))
(insn 474 473 475 21 (set (reg:DI 322 [ _236 ])
        (sign_extend:DI (reg:SI 479))) "CALMXW.f":113 -1
     (nil))
(insn 475 474 476 21 (parallel [
            (set (reg:DI 323 [ _237 ])
                (plus:DI (reg:DI 321 [ _235 ])
                    (reg:DI 322 [ _236 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 476 475 477 21 (parallel [
            (set (reg:DI 324 [ _238 ])
                (plus:DI (reg:DI 323 [ _237 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":113 -1
     (nil))
(insn 477 476 478 21 (set (reg:SF 325 [ _239 ])
        (plus:SF (reg:SF 309 [ _223 ])
            (reg:SF 319 [ _233 ]))) "CALMXW.f":113 -1
     (nil))
(insn 478 477 479 21 (set (reg/f:DI 480)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [3 mxwz+0 S8 A64])) "CALMXW.f":113 -1
     (nil))
(insn 479 478 480 21 (set (mem:SF (plus:DI (mult:DI (reg:DI 324 [ _238 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 480)) [2 *mxwz_267(D) S4 A32])
        (reg:SF 325 [ _239 ])) "CALMXW.f":113 -1
     (nil))
;;  succ:       22 (FALLTHRU)

;; basic block 22, loop depth 3, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 (FALLTHRU)
;;              16
;;              19
(code_label 480 479 481 22 9 (nil) [2 uses])
(note 481 480 482 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 482 481 484 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":94 -1
     (nil))
(jump_insn 484 482 485 22 (set (pc)
        (label_ref 483)) "CALMXW.f":94 -1
     (nil)
 -> 483)
;;  succ:       14 (DFS_BACK)

(barrier 485 484 486)
;; basic block 23, loop depth 2, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 486 485 487 23 8 (nil) [1 uses])
(note 487 486 488 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 488 487 490 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":88 -1
     (nil))
(jump_insn 490 488 491 23 (set (pc)
        (label_ref 489)) "CALMXW.f":88 -1
     (nil)
 -> 489)
;;  succ:       12 (DFS_BACK)

(barrier 491 490 492)
;; basic block 24, loop depth 1, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 492 491 493 24 7 (nil) [1 uses])
(note 493 492 494 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 494 493 496 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALMXW.f":87 -1
     (nil))
(jump_insn 496 494 497 24 (set (pc)
        (label_ref 495)) "CALMXW.f":87 -1
     (nil)
 -> 495)
;;  succ:       10 (DFS_BACK)

(barrier 497 496 498)
;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 498 497 499 25 6 (nil) [1 uses])
(note 499 498 510 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 510 499 0 25 (const_int 0 [0]) "CALMXW.f":121 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

