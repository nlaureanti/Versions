
;; Function calthte (calthte_, funcdef_no=0, decl_uid=3772, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=128, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=96, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 32
	 Choosing alt 0 in insn 32:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 33:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 35:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 36:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 37:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 43:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 69:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 72
	 Choosing alt 0 in insn 72:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 73:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 74:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 75:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 76:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 79:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 82
	 Choosing alt 0 in insn 82:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 83:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 84:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 85:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 86:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 89:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 92
	 Choosing alt 0 in insn 92:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 93:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 94:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 95:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 96:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 97:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 98:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 99:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 100:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 101:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 102:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 103
	 Choosing alt 1 in insn 103:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 105:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 106:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 107:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 108:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 109
	 Choosing alt 1 in insn 109:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 110:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 111:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 113:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 114:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 115:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 116:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 117:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 118:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 119:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 121:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 122
	 Choosing alt 1 in insn 122:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 123:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 124:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 125:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 126:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 127:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 128:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 129
	 Choosing alt 1 in insn 129:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 130:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 131:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 132:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 133:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 136:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 139
	 Choosing alt 0 in insn 139:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 143:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 146:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 147:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 151:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 152:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=229 from oldreg=120, assigning class SSE_REGS to r229
  152: r229:SF=r229:SF*r199:SF
      REG_DEAD r199:SF
      REG_DEAD r120:SF
    Inserting insn reload before:
  262: r229:SF=r120:SF
    Inserting insn reload after:
  263: r121:SF=r229:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 263:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 153:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 154:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 155
	 Choosing alt 1 in insn 155:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (1) rBwBz {*call_value}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 159:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=230 from oldreg=121, assigning class SSE_REGS to r230
  159: r230:SF=r230:SF-r123:SF
      REG_DEAD r123:SF
      REG_DEAD r121:SF
    Inserting insn reload before:
  264: r230:SF=r121:SF
    Inserting insn reload after:
  265: r124:SF=r230:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 264:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 160:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 161:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 162:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 163:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 164:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=231 from oldreg=204, assigning class SSE_REGS to r231
  164: r231:SF=r231:SF/[frame:DI-0x3c]
      REG_DEAD r204:SF
    Inserting insn reload before:
  266: r231:SF=r204:SF
    Inserting insn reload after:
  267: r125:SF=r231:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 165:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 166
	 Choosing alt 1 in insn 166:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 167:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 168:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 169:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 171:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 176:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 177:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 178:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 179:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 180:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 182:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 186:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 187:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 188:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 189:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 190:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 191:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 193:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 194:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 195
	 Choosing alt 1 in insn 195:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 196:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 197:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 198:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 199:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 200
	 Choosing alt 1 in insn 200:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 202:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 204
	 Choosing alt 1 in insn 204:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 205:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 206:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 1 in insn 207:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=232 from oldreg=222, assigning class SSE_REGS to r232
  207: r232:SF=r232:SF*[frame:DI-0x48]
      REG_DEAD r222:SF
    Inserting insn reload before:
  268: r232:SF=r222:SF
    Inserting insn reload after:
  269: r138:SF=r232:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 269:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 208:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 212
	 Choosing alt 1 in insn 212:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=233 from oldreg=138, assigning class SSE_REGS to r233
      Making reload reg 233 for reg 138 optional
  212: r224:SF=r139:SF*r233:SF
      REG_DEAD r139:SF
      REG_DEAD r138:SF
    Inserting insn reload before:
  270: r233:SF=r138:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 270:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 213:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 216:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 219
	 Choosing alt 0 in insn 219:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 220:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 221:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 222:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 223:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 224:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 230:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 18
EBB 7
EBB 17
EBB 8
EBB 9 10
EBB 11 12 13
EBB 14
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=234 from oldreg=138, assigning class SSE_REGS to inheritance r234
    Original reg change 138->234 (bb14):
  269: r234:SF=r232:SF
    Add original<-inheritance after:
  271: r138:SF=r234:SF

    Inheritance reuse change 138->234 (bb14):
  270: r233:SF=r234:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=235 from oldreg=121, assigning class SSE_REGS to inheritance r235
    Original reg change 121->235 (bb14):
  263: r235:SF=r229:SF
    Add original<-inheritance after:
  272: r121:SF=r235:SF

    Inheritance reuse change 121->235 (bb14):
  264: r230:SF=r235:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   271: r138:SF=r234:SF
deleting insn with uid = 271.
	    Removing dead insn:
   272: r121:SF=r235:SF
deleting insn with uid = 272.
EBB 20
EBB 15
EBB 19
EBB 16

********** Pseudo live ranges #1: **********

  BB 16
   Insn 240: point = 0, n_alt = -1
  BB 19
   Insn 257: point = 0, n_alt = -1
  BB 9
   Insn 57: point = 0, n_alt = -1
   Insn 56: point = 0, n_alt = 0
   Insn 55: point = 1, n_alt = 0
   Insn 54: point = 3, n_alt = 0
   Insn 53: point = 4, n_alt = 0
  BB 15
   Insn 247: point = 5, n_alt = -1
   Insn 230: point = 5, n_alt = 1
  BB 20
   Insn 260: point = 6, n_alt = -1
  BB 11
   Insn 65: point = 7, n_alt = -1
   Insn 64: point = 7, n_alt = 0
   Insn 63: point = 8, n_alt = 0
   Insn 62: point = 10, n_alt = 0
   Insn 61: point = 11, n_alt = 0
  BB 14
   Insn 245: point = 12, n_alt = -1
   Insn 224: point = 12, n_alt = 1
   Insn 223: point = 12, n_alt = 8
   Insn 222: point = 13, n_alt = 7
   Insn 221: point = 14, n_alt = 3
   Insn 220: point = 15, n_alt = 3
   Insn 219: point = 17, n_alt = 0
   Insn 218: point = 19, n_alt = 0
   Insn 217: point = 21, n_alt = 0
   Insn 216: point = 22, n_alt = 0
   Insn 215: point = 24, n_alt = 0
   Insn 214: point = 26, n_alt = 0
   Insn 213: point = 27, n_alt = 8
   Insn 212: point = 28, n_alt = 1
   Insn 270: point = 30, n_alt = 7
	   Creating copy r233<-r234@1000
   Insn 211: point = 32, n_alt = -2
   Insn 210: point = 33, n_alt = 0
   Insn 209: point = 33, n_alt = -2
   Insn 208: point = 34, n_alt = 7
   Insn 269: point = 35, n_alt = 8
	   Creating copy r232->r234@1000
   Insn 207: point = 37, n_alt = 1
   Insn 268: point = 37, n_alt = -2
	Hard reg 21 is preferable by r232 with profit 1000
   Insn 206: point = 39, n_alt = 7
   Insn 205: point = 40, n_alt = 8
   Insn 204: point = 41, n_alt = 1
   Insn 203: point = 43, n_alt = -2
   Insn 202: point = 45, n_alt = 1
   Insn 201: point = 47, n_alt = -2
   Insn 200: point = 49, n_alt = 1
   Insn 199: point = 51, n_alt = 7
   Insn 198: point = 52, n_alt = 1
   Insn 197: point = 54, n_alt = 7
   Insn 196: point = 55, n_alt = 7
   Insn 195: point = 56, n_alt = 1
   Insn 194: point = 58, n_alt = 7
   Insn 193: point = 59, n_alt = 7
   Insn 192: point = 60, n_alt = -2
   Insn 191: point = 62, n_alt = 2
   Insn 190: point = 64, n_alt = 7
   Insn 189: point = 65, n_alt = 2
   Insn 188: point = 67, n_alt = 7
   Insn 187: point = 68, n_alt = 4
   Insn 186: point = 69, n_alt = 9
   Insn 185: point = 70, n_alt = 0
   Insn 184: point = 70, n_alt = -2
   Insn 183: point = 71, n_alt = -2
   Insn 182: point = 72, n_alt = 7
   Insn 181: point = 73, n_alt = -2
   Insn 180: point = 75, n_alt = 2
   Insn 179: point = 77, n_alt = 7
   Insn 178: point = 78, n_alt = 8
   Insn 177: point = 79, n_alt = 1
   Insn 176: point = 81, n_alt = 7
   Insn 175: point = 82, n_alt = -2
   Insn 174: point = 83, n_alt = 0
   Insn 173: point = 83, n_alt = -2
   Insn 172: point = 84, n_alt = -2
   Insn 171: point = 85, n_alt = 7
   Insn 170: point = 86, n_alt = -2
   Insn 169: point = 88, n_alt = 2
   Insn 168: point = 90, n_alt = 7
   Insn 167: point = 91, n_alt = 8
   Insn 166: point = 92, n_alt = 1
   Insn 165: point = 94, n_alt = 7
   Insn 267: point = 95, n_alt = -2
	Hard reg 22 is preferable by r231 with profit 1000
   Insn 164: point = 97, n_alt = 2
   Insn 266: point = 97, n_alt = -2
	Hard reg 22 is preferable by r231 with profit 1000
	Hard reg 21 is preferable by r231 with profit 1000
   Insn 163: point = 99, n_alt = 7
   Insn 162: point = 100, n_alt = 8
   Insn 161: point = 101, n_alt = 2
   Insn 160: point = 103, n_alt = 7
   Insn 265: point = 104, n_alt = -2
	Hard reg 21 is preferable by r230 with profit 1000
   Insn 159: point = 106, n_alt = 2
   Insn 264: point = 107, n_alt = 7
	   Creating copy r230<-r235@1000
   Insn 158: point = 109, n_alt = -2
   Insn 157: point = 110, n_alt = 0
   Insn 156: point = 110, n_alt = -2
   Insn 155: point = 111, n_alt = 1
   Insn 154: point = 113, n_alt = 7
   Insn 153: point = 114, n_alt = 7
   Insn 263: point = 115, n_alt = 8
	   Creating copy r229->r235@1000
   Insn 152: point = 117, n_alt = 1
   Insn 262: point = 118, n_alt = -2
	Hard reg 22 is preferable by r229 with profit 1000
   Insn 151: point = 120, n_alt = 7
   Insn 150: point = 121, n_alt = -2
   Insn 149: point = 122, n_alt = 0
   Insn 148: point = 122, n_alt = -2
   Insn 147: point = 123, n_alt = 7
   Insn 146: point = 124, n_alt = 8
  BB 13
   Insn 143: point = 126, n_alt = 7
  BB 12
   Insn 141: point = 128, n_alt = -1
   Insn 140: point = 128, n_alt = 0
   Insn 139: point = 129, n_alt = 0
   Insn 138: point = 131, n_alt = 0
   Insn 137: point = 133, n_alt = 0
   Insn 136: point = 134, n_alt = 1
   Insn 135: point = 134, n_alt = 0
   Insn 134: point = 136, n_alt = 0
   Insn 133: point = 137, n_alt = 1
   Insn 132: point = 138, n_alt = 7
   Insn 131: point = 139, n_alt = 7
   Insn 130: point = 140, n_alt = 8
   Insn 129: point = 141, n_alt = 1
   Insn 128: point = 143, n_alt = 7
   Insn 127: point = 144, n_alt = 7
   Insn 126: point = 145, n_alt = 8
   Insn 125: point = 146, n_alt = 2
   Insn 124: point = 148, n_alt = 7
   Insn 123: point = 149, n_alt = 8
   Insn 122: point = 150, n_alt = 1
   Insn 121: point = 152, n_alt = 7
   Insn 120: point = 153, n_alt = -2
   Insn 119: point = 155, n_alt = 2
   Insn 118: point = 157, n_alt = 7
   Insn 117: point = 158, n_alt = 1
   Insn 116: point = 160, n_alt = 7
   Insn 115: point = 161, n_alt = 7
   Insn 114: point = 162, n_alt = 8
   Insn 113: point = 163, n_alt = 2
   Insn 112: point = 165, n_alt = -2
   Insn 111: point = 167, n_alt = 2
   Insn 110: point = 169, n_alt = 7
   Insn 109: point = 170, n_alt = 1
   Insn 108: point = 172, n_alt = 7
   Insn 107: point = 173, n_alt = 7
   Insn 106: point = 174, n_alt = 8
   Insn 105: point = 175, n_alt = 2
   Insn 104: point = 177, n_alt = -2
   Insn 103: point = 179, n_alt = 1
   Insn 102: point = 181, n_alt = 7
   Insn 101: point = 182, n_alt = 1
   Insn 100: point = 184, n_alt = 7
   Insn 99: point = 185, n_alt = 7
   Insn 98: point = 186, n_alt = 1
   Insn 97: point = 188, n_alt = 7
   Insn 96: point = 189, n_alt = 8
   Insn 95: point = 190, n_alt = 7
   Insn 94: point = 192, n_alt = 3
   Insn 93: point = 193, n_alt = 3
   Insn 92: point = 195, n_alt = 0
   Insn 91: point = 197, n_alt = 0
   Insn 90: point = 199, n_alt = 0
   Insn 89: point = 200, n_alt = 0
   Insn 88: point = 202, n_alt = 0
   Insn 87: point = 204, n_alt = 0
   Insn 86: point = 205, n_alt = 8
   Insn 85: point = 206, n_alt = 7
   Insn 84: point = 208, n_alt = 3
   Insn 83: point = 209, n_alt = 3
   Insn 82: point = 211, n_alt = 0
   Insn 81: point = 213, n_alt = 0
   Insn 80: point = 215, n_alt = 0
   Insn 79: point = 216, n_alt = 0
   Insn 78: point = 218, n_alt = 0
   Insn 77: point = 220, n_alt = 0
   Insn 76: point = 221, n_alt = 8
   Insn 75: point = 222, n_alt = 7
   Insn 74: point = 224, n_alt = 3
   Insn 73: point = 225, n_alt = 3
   Insn 72: point = 227, n_alt = 0
   Insn 71: point = 229, n_alt = 0
   Insn 70: point = 231, n_alt = 0
   Insn 69: point = 232, n_alt = 0
   Insn 68: point = 234, n_alt = 0
   Insn 67: point = 236, n_alt = 0
  BB 10
   Insn 59: point = 238, n_alt = 1
  BB 8
   Insn 51: point = 239, n_alt = 1
   Insn 50: point = 240, n_alt = 0
   Insn 49: point = 241, n_alt = 0
  BB 17
   Insn 251: point = 242, n_alt = -1
  BB 3
   Insn 17: point = 242, n_alt = -1
   Insn 16: point = 242, n_alt = 0
   Insn 15: point = 243, n_alt = 0
   Insn 14: point = 245, n_alt = 0
   Insn 13: point = 246, n_alt = 0
  BB 7
   Insn 243: point = 247, n_alt = -1
   Insn 43: point = 247, n_alt = 1
  BB 18
   Insn 254: point = 248, n_alt = -1
  BB 5
   Insn 25: point = 249, n_alt = -1
   Insn 24: point = 249, n_alt = 0
   Insn 23: point = 250, n_alt = 0
   Insn 22: point = 252, n_alt = 0
   Insn 21: point = 253, n_alt = 0
  BB 6
   Insn 241: point = 254, n_alt = -1
   Insn 37: point = 254, n_alt = 1
   Insn 36: point = 254, n_alt = 8
   Insn 35: point = 255, n_alt = 7
   Insn 34: point = 256, n_alt = 3
   Insn 33: point = 257, n_alt = 3
   Insn 32: point = 259, n_alt = 0
   Insn 31: point = 261, n_alt = 1
   Insn 30: point = 263, n_alt = 0
   Insn 29: point = 264, n_alt = 0
   Insn 28: point = 266, n_alt = 1
   Insn 27: point = 268, n_alt = 0
  BB 4
   Insn 19: point = 270, n_alt = 1
  BB 2
   Insn 11: point = 271, n_alt = 1
   Insn 10: point = 272, n_alt = 0
   Insn 9: point = 273, n_alt = 0
   Insn 5: point = 274, n_alt = 5
   Insn 4: point = 274, n_alt = 5
   Insn 3: point = 274, n_alt = 5
   Insn 2: point = 274, n_alt = 5
 r87: [265..266]
 r88: [260..264]
 r89: [260..261]
 r90: [258..259]
 r91: [254..257]
 r92: [233..234]
 r93: [228..232]
 r94: [228..229]
 r95: [226..227]
 r96: [223..225]
 r97: [217..218]
 r98: [212..216]
 r99: [212..213]
 r100: [210..211]
 r101: [207..209]
 r102: [201..202]
 r103: [196..200]
 r104: [196..197]
 r105: [194..195]
 r106: [191..193]
 r107: [176..186]
 r108: [180..182]
 r109: [178..179]
 r110: [176..177]
 r111: [164..170]
 r112: [166..167]
 r113: [164..165]
 r114: [156..158]
 r115: [154..155]
 r116: [151..153]
 r117: [130..134]
 r118: [130..131]
 r119: [128..129]
 r120: [119..121]
 r122: [110..111]
 r123: [106..109]
 r124: [102..104]
 r125: [93..95]
 r126: [87..88]
 r127: [80..82]
 r128: [74..75]
 r129: [63..65]
 r130: [61..62]
 r131: [42..60]
 r132: [46..56]
 r133: [50..52]
 r134: [48..49]
 r135: [46..47]
 r136: [44..45]
 r137: [42..43]
 r139: [29..32]
 r140: [23..24]
 r141: [18..22]
 r142: [18..19]
 r143: [16..17]
 r144: [12..15]
 r145: [128..139] [124..126]
 r146: [271..273]
 r147: [242..272]
 r148: [242..243]
 r149: [249..250]
 r150: [239..241]
 r151: [0..240]
 r152: [0..1]
 r153: [7..8]
 r154: [83..86]
 r155: [70..73]
 r156: [244..245]
 r157: [251..252]
 r158: [267..268]
 r159: [262..263]
 r160: [254..256]
 r161: [254..255]
 r162: [2..3]
 r163: [9..10]
 r164: [235..236]
 r165: [230..231]
 r166: [223..224]
 r167: [221..222]
 r168: [219..220]
 r169: [214..215]
 r170: [207..208]
 r171: [205..206]
 r172: [203..204]
 r173: [198..199]
 r174: [191..192]
 r175: [189..190]
 r176: [187..188]
 r177: [183..185]
 r178: [183..184]
 r179: [180..181]
 r180: [174..175]
 r181: [171..173]
 r182: [171..172]
 r183: [168..169]
 r184: [162..163]
 r185: [159..161]
 r186: [159..160]
 r187: [156..157]
 r188: [149..150]
 r189: [151..152]
 r190: [145..146]
 r191: [147..148]
 r192: [140..141]
 r193: [142..144]
 r194: [142..143]
 r195: [135..136]
 r196: [137..138]
 r197: [132..133]
 r198: [122..123]
 r199: [117..120]
 r200: [112..114]
 r201: [112..113]
 r202: [100..101]
 r203: [102..103]
 r204: [98..99]
 r205: [91..92]
 r206: [93..94]
 r207: [89..90]
 r208: [84..85]
 r209: [78..79]
 r210: [80..81]
 r211: [76..77]
 r212: [71..72]
 r213: [68..69]
 r214: [66..67]
 r215: [63..64]
 r216: [57..59]
 r217: [57..58]
 r218: [53..55]
 r219: [53..54]
 r220: [50..51]
 r221: [40..41]
 r222: [38..39]
 r223: [33..34]
 r224: [27..28]
 r225: [25..26]
 r226: [20..21]
 r227: [12..14]
 r228: [12..13]
 r229: [116..118]
 r230: [105..107]
 r231: [96..97]
 r232: [36..37]
 r233: [29..30]
 r234: [31..35]
 r235: [108..115]
Compressing live ranges: from 274 to 216 - 78%
Ranges after the compression:
 r87: [210..211]
 r88: [206..209]
 r89: [206..207]
 r90: [204..205]
 r91: [202..203]
 r92: [188..189]
 r93: [184..187]
 r94: [184..185]
 r95: [182..183]
 r96: [180..181]
 r97: [174..175]
 r98: [170..173]
 r99: [170..171]
 r100: [168..169]
 r101: [166..167]
 r102: [160..161]
 r103: [156..159]
 r104: [156..157]
 r105: [154..155]
 r106: [152..153]
 r107: [140..147]
 r108: [144..145]
 r109: [142..143]
 r110: [140..141]
 r111: [130..135]
 r112: [132..133]
 r113: [130..131]
 r114: [124..125]
 r115: [122..123]
 r116: [120..121]
 r117: [102..105]
 r118: [102..103]
 r119: [100..101]
 r120: [94..95]
 r122: [88..89]
 r123: [84..87]
 r124: [82..83]
 r125: [74..75]
 r126: [68..69]
 r127: [64..65]
 r128: [58..59]
 r129: [50..51]
 r130: [48..49]
 r131: [34..47]
 r132: [38..45]
 r133: [42..43]
 r134: [40..41]
 r135: [38..39]
 r136: [36..37]
 r137: [34..35]
 r139: [22..25]
 r140: [16..17]
 r141: [12..15]
 r142: [12..13]
 r143: [10..11]
 r144: [8..9]
 r145: [98..109]
 r146: [214..215]
 r147: [194..215]
 r148: [194..195]
 r149: [198..199]
 r150: [192..193]
 r151: [0..193]
 r152: [0..1]
 r153: [4..5]
 r154: [66..67]
 r155: [56..57]
 r156: [196..197]
 r157: [200..201]
 r158: [212..213]
 r159: [208..209]
 r160: [202..203]
 r161: [202..203]
 r162: [2..3]
 r163: [6..7]
 r164: [190..191]
 r165: [186..187]
 r166: [180..181]
 r167: [178..179]
 r168: [176..177]
 r169: [172..173]
 r170: [166..167]
 r171: [164..165]
 r172: [162..163]
 r173: [158..159]
 r174: [152..153]
 r175: [150..151]
 r176: [148..149]
 r177: [146..147]
 r178: [146..147]
 r179: [144..145]
 r180: [138..139]
 r181: [136..137]
 r182: [136..137]
 r183: [134..135]
 r184: [128..129]
 r185: [126..127]
 r186: [126..127]
 r187: [124..125]
 r188: [118..119]
 r189: [120..121]
 r190: [114..115]
 r191: [116..117]
 r192: [110..111]
 r193: [112..113]
 r194: [112..113]
 r195: [106..107]
 r196: [108..109]
 r197: [104..105]
 r198: [96..97]
 r199: [92..95]
 r200: [90..91]
 r201: [90..91]
 r202: [80..81]
 r203: [82..83]
 r204: [78..79]
 r205: [72..73]
 r206: [74..75]
 r207: [70..71]
 r208: [66..67]
 r209: [62..63]
 r210: [64..65]
 r211: [60..61]
 r212: [56..57]
 r213: [54..55]
 r214: [52..53]
 r215: [50..51]
 r216: [46..47]
 r217: [46..47]
 r218: [44..45]
 r219: [44..45]
 r220: [42..43]
 r221: [32..33]
 r222: [30..31]
 r223: [26..27]
 r224: [20..21]
 r225: [18..19]
 r226: [14..15]
 r227: [8..9]
 r228: [8..9]
 r229: [92..93]
 r230: [84..85]
 r231: [76..77]
 r232: [28..29]
 r233: [22..23]
 r234: [24..27]
 r235: [86..91]

********** Assignment #1: **********

	 Assigning to 235 (cl=SSE_REGS, orig=121, freq=2000, tfirst=229, tfreq=4000)...
	 Assigning to 229 (cl=SSE_REGS, orig=120, freq=3000, tfirst=229, tfreq=4000)...
	   Assign 22 to reload r229 (freq=3000)
	Hard reg 22 is preferable by r235 with profit 1000
	Hard reg 21 is preferable by r230 with profit 1000
	Hard reg 22 is preferable by r230 with profit 500
	 Assigning to 230 (cl=SSE_REGS, orig=121, freq=3000, tfirst=229, tfreq=4000)...
	   Assign 22 to reload r230 (freq=3000)
	Hard reg 22 is preferable by r235 with profit 2000
	 Assigning to 231 (cl=SSE_REGS, orig=204, freq=3000, tfirst=231, tfreq=3000)...
	   Assign 22 to reload r231 (freq=3000)
	 Assigning to 234 (cl=SSE_REGS, orig=138, freq=2000, tfirst=232, tfreq=3000)...
	 Assigning to 232 (cl=SSE_REGS, orig=222, freq=3000, tfirst=232, tfreq=3000)...
	   Assign 21 to reload r232 (freq=3000)
	Hard reg 21 is preferable by r234 with profit 1000
	Hard reg 21 is preferable by r233 with profit 500
	 Assigning to 233 (cl=SSE_REGS, orig=138, freq=2000, tfirst=232, tfreq=3000)...
	   Assign 25 to optional reload r233 (freq=2000)
	Hard reg 21 is preferable by r234 with profit 1000
	Hard reg 25 is preferable by r234 with profit 1000
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 2 (0.00%)
   Insn after restoring regs:
  270: r233:SF=r138:SF
      REG_DEAD r138:SF
   Insn after restoring regs:
  269: r138:SF=r232:SF
      REG_DEAD r232:SF
   Insn after restoring regs:
  264: r230:SF=r121:SF
      REG_DEAD r121:SF
   Insn after restoring regs:
  263: r121:SF=r229:SF
      REG_DEAD r229:SF
Remove optional reload reg 233
  Restoring original insn:
  212: r224:SF=r139:SF*r138:SF
      REG_DEAD r138:SF
      REG_DEAD r139:SF
  Deleting move 270
  270: r233:SF=r138:SF
      REG_DEAD r138:SF
deleting insn with uid = 270.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 212:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=236 from oldreg=138, assigning class SSE_REGS to r236
      Making reload reg 236 for reg 138 optional
  212: r224:SF=r139:SF*r236:SF
      REG_DEAD r138:SF
      REG_DEAD r139:SF
    Inserting insn reload before:
  273: r236:SF=r138:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 273:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 18
EBB 7
EBB 17
EBB 8
EBB 9 10
EBB 11 12 13
EBB 14
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=237 from oldreg=138, assigning class SSE_REGS to inheritance r237
    Original reg change 138->237 (bb14):
  269: r237:SF=r232:SF
      REG_DEAD r232:SF
    Add original<-inheritance after:
  274: r138:SF=r237:SF

    Inheritance reuse change 138->237 (bb14):
  273: r236:SF=r237:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=238 from oldreg=121, assigning class SSE_REGS to inheritance r238
    Original reg change 121->238 (bb14):
  263: r238:SF=r229:SF
      REG_DEAD r229:SF
    Add original<-inheritance after:
  275: r121:SF=r238:SF

    Inheritance reuse change 121->238 (bb14):
  264: r230:SF=r238:SF
      REG_DEAD r238:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   274: r138:SF=r237:SF
deleting insn with uid = 274.
	    Removing dead insn:
   275: r121:SF=r238:SF
deleting insn with uid = 275.
EBB 20
EBB 15
EBB 19
EBB 16

********** Pseudo live ranges #2: **********

  BB 16
   Insn 240: point = 0, n_alt = -1
  BB 19
   Insn 257: point = 0, n_alt = -1
  BB 9
   Insn 57: point = 0, n_alt = -1
   Insn 56: point = 0, n_alt = 0
   Insn 55: point = 1, n_alt = 0
   Insn 54: point = 3, n_alt = 0
   Insn 53: point = 4, n_alt = 0
  BB 15
   Insn 247: point = 5, n_alt = -1
   Insn 230: point = 5, n_alt = 1
  BB 20
   Insn 260: point = 6, n_alt = -1
  BB 11
   Insn 65: point = 7, n_alt = -1
   Insn 64: point = 7, n_alt = 0
   Insn 63: point = 8, n_alt = 0
   Insn 62: point = 10, n_alt = 0
   Insn 61: point = 11, n_alt = 0
  BB 14
   Insn 245: point = 12, n_alt = -1
   Insn 224: point = 12, n_alt = 1
   Insn 223: point = 12, n_alt = 8
   Insn 222: point = 13, n_alt = 7
   Insn 221: point = 14, n_alt = 3
   Insn 220: point = 15, n_alt = 3
   Insn 219: point = 17, n_alt = 0
   Insn 218: point = 19, n_alt = 0
   Insn 217: point = 21, n_alt = 0
   Insn 216: point = 22, n_alt = 0
   Insn 215: point = 24, n_alt = 0
   Insn 214: point = 26, n_alt = 0
   Insn 213: point = 27, n_alt = 8
   Insn 212: point = 28, n_alt = 1
   Insn 273: point = 30, n_alt = 7
	   Creating copy r236<-r237@1000
   Insn 211: point = 32, n_alt = -2
   Insn 210: point = 33, n_alt = 0
   Insn 209: point = 33, n_alt = -2
   Insn 208: point = 34, n_alt = 7
   Insn 269: point = 35, n_alt = 8
	   Creating copy r232->r237@1000
   Insn 207: point = 37, n_alt = 1
   Insn 268: point = 37, n_alt = -2
	Hard reg 21 is preferable by r232 with profit 1000
   Insn 206: point = 39, n_alt = 7
   Insn 205: point = 40, n_alt = 8
   Insn 204: point = 41, n_alt = 1
   Insn 203: point = 43, n_alt = -2
   Insn 202: point = 45, n_alt = 1
   Insn 201: point = 47, n_alt = -2
   Insn 200: point = 49, n_alt = 1
   Insn 199: point = 51, n_alt = 7
   Insn 198: point = 52, n_alt = 1
   Insn 197: point = 54, n_alt = 7
   Insn 196: point = 55, n_alt = 7
   Insn 195: point = 56, n_alt = 1
   Insn 194: point = 58, n_alt = 7
   Insn 193: point = 59, n_alt = 7
   Insn 192: point = 60, n_alt = -2
   Insn 191: point = 62, n_alt = 2
   Insn 190: point = 64, n_alt = 7
   Insn 189: point = 65, n_alt = 2
   Insn 188: point = 67, n_alt = 7
   Insn 187: point = 68, n_alt = 4
   Insn 186: point = 69, n_alt = 9
   Insn 185: point = 70, n_alt = 0
   Insn 184: point = 70, n_alt = -2
   Insn 183: point = 71, n_alt = -2
   Insn 182: point = 72, n_alt = 7
   Insn 181: point = 73, n_alt = -2
   Insn 180: point = 75, n_alt = 2
   Insn 179: point = 77, n_alt = 7
   Insn 178: point = 78, n_alt = 8
   Insn 177: point = 79, n_alt = 1
   Insn 176: point = 81, n_alt = 7
   Insn 175: point = 82, n_alt = -2
   Insn 174: point = 83, n_alt = 0
   Insn 173: point = 83, n_alt = -2
   Insn 172: point = 84, n_alt = -2
   Insn 171: point = 85, n_alt = 7
   Insn 170: point = 86, n_alt = -2
   Insn 169: point = 88, n_alt = 2
   Insn 168: point = 90, n_alt = 7
   Insn 167: point = 91, n_alt = 8
   Insn 166: point = 92, n_alt = 1
   Insn 165: point = 94, n_alt = 7
   Insn 267: point = 95, n_alt = -2
	Hard reg 22 is preferable by r231 with profit 1000
   Insn 164: point = 97, n_alt = 2
   Insn 266: point = 97, n_alt = -2
	Hard reg 22 is preferable by r231 with profit 1000
	Hard reg 21 is preferable by r231 with profit 1000
   Insn 163: point = 99, n_alt = 7
   Insn 162: point = 100, n_alt = 8
   Insn 161: point = 101, n_alt = 2
   Insn 160: point = 103, n_alt = 7
   Insn 265: point = 104, n_alt = -2
	Hard reg 21 is preferable by r230 with profit 1000
   Insn 159: point = 106, n_alt = 2
   Insn 264: point = 107, n_alt = 7
	   Creating copy r230<-r238@1000
   Insn 158: point = 109, n_alt = -2
   Insn 157: point = 110, n_alt = 0
   Insn 156: point = 110, n_alt = -2
   Insn 155: point = 111, n_alt = 1
   Insn 154: point = 113, n_alt = 7
   Insn 153: point = 114, n_alt = 7
   Insn 263: point = 115, n_alt = 8
	   Creating copy r229->r238@1000
   Insn 152: point = 117, n_alt = 1
   Insn 262: point = 118, n_alt = -2
	Hard reg 22 is preferable by r229 with profit 1000
   Insn 151: point = 120, n_alt = 7
   Insn 150: point = 121, n_alt = -2
   Insn 149: point = 122, n_alt = 0
   Insn 148: point = 122, n_alt = -2
   Insn 147: point = 123, n_alt = 7
   Insn 146: point = 124, n_alt = 8
  BB 13
   Insn 143: point = 126, n_alt = 7
  BB 12
   Insn 141: point = 128, n_alt = -1
   Insn 140: point = 128, n_alt = 0
   Insn 139: point = 129, n_alt = 0
   Insn 138: point = 131, n_alt = 0
   Insn 137: point = 133, n_alt = 0
   Insn 136: point = 134, n_alt = 1
   Insn 135: point = 134, n_alt = 0
   Insn 134: point = 136, n_alt = 0
   Insn 133: point = 137, n_alt = 1
   Insn 132: point = 138, n_alt = 7
   Insn 131: point = 139, n_alt = 7
   Insn 130: point = 140, n_alt = 8
   Insn 129: point = 141, n_alt = 1
   Insn 128: point = 143, n_alt = 7
   Insn 127: point = 144, n_alt = 7
   Insn 126: point = 145, n_alt = 8
   Insn 125: point = 146, n_alt = 2
   Insn 124: point = 148, n_alt = 7
   Insn 123: point = 149, n_alt = 8
   Insn 122: point = 150, n_alt = 1
   Insn 121: point = 152, n_alt = 7
   Insn 120: point = 153, n_alt = -2
   Insn 119: point = 155, n_alt = 2
   Insn 118: point = 157, n_alt = 7
   Insn 117: point = 158, n_alt = 1
   Insn 116: point = 160, n_alt = 7
   Insn 115: point = 161, n_alt = 7
   Insn 114: point = 162, n_alt = 8
   Insn 113: point = 163, n_alt = 2
   Insn 112: point = 165, n_alt = -2
   Insn 111: point = 167, n_alt = 2
   Insn 110: point = 169, n_alt = 7
   Insn 109: point = 170, n_alt = 1
   Insn 108: point = 172, n_alt = 7
   Insn 107: point = 173, n_alt = 7
   Insn 106: point = 174, n_alt = 8
   Insn 105: point = 175, n_alt = 2
   Insn 104: point = 177, n_alt = -2
   Insn 103: point = 179, n_alt = 1
   Insn 102: point = 181, n_alt = 7
   Insn 101: point = 182, n_alt = 1
   Insn 100: point = 184, n_alt = 7
   Insn 99: point = 185, n_alt = 7
   Insn 98: point = 186, n_alt = 1
   Insn 97: point = 188, n_alt = 7
   Insn 96: point = 189, n_alt = 8
   Insn 95: point = 190, n_alt = 7
   Insn 94: point = 192, n_alt = 3
   Insn 93: point = 193, n_alt = 3
   Insn 92: point = 195, n_alt = 0
   Insn 91: point = 197, n_alt = 0
   Insn 90: point = 199, n_alt = 0
   Insn 89: point = 200, n_alt = 0
   Insn 88: point = 202, n_alt = 0
   Insn 87: point = 204, n_alt = 0
   Insn 86: point = 205, n_alt = 8
   Insn 85: point = 206, n_alt = 7
   Insn 84: point = 208, n_alt = 3
   Insn 83: point = 209, n_alt = 3
   Insn 82: point = 211, n_alt = 0
   Insn 81: point = 213, n_alt = 0
   Insn 80: point = 215, n_alt = 0
   Insn 79: point = 216, n_alt = 0
   Insn 78: point = 218, n_alt = 0
   Insn 77: point = 220, n_alt = 0
   Insn 76: point = 221, n_alt = 8
   Insn 75: point = 222, n_alt = 7
   Insn 74: point = 224, n_alt = 3
   Insn 73: point = 225, n_alt = 3
   Insn 72: point = 227, n_alt = 0
   Insn 71: point = 229, n_alt = 0
   Insn 70: point = 231, n_alt = 0
   Insn 69: point = 232, n_alt = 0
   Insn 68: point = 234, n_alt = 0
   Insn 67: point = 236, n_alt = 0
  BB 10
   Insn 59: point = 238, n_alt = 1
  BB 8
   Insn 51: point = 239, n_alt = 1
   Insn 50: point = 240, n_alt = 0
   Insn 49: point = 241, n_alt = 0
  BB 17
   Insn 251: point = 242, n_alt = -1
  BB 3
   Insn 17: point = 242, n_alt = -1
   Insn 16: point = 242, n_alt = 0
   Insn 15: point = 243, n_alt = 0
   Insn 14: point = 245, n_alt = 0
   Insn 13: point = 246, n_alt = 0
  BB 7
   Insn 243: point = 247, n_alt = -1
   Insn 43: point = 247, n_alt = 1
  BB 18
   Insn 254: point = 248, n_alt = -1
  BB 5
   Insn 25: point = 249, n_alt = -1
   Insn 24: point = 249, n_alt = 0
   Insn 23: point = 250, n_alt = 0
   Insn 22: point = 252, n_alt = 0
   Insn 21: point = 253, n_alt = 0
  BB 6
   Insn 241: point = 254, n_alt = -1
   Insn 37: point = 254, n_alt = 1
   Insn 36: point = 254, n_alt = 8
   Insn 35: point = 255, n_alt = 7
   Insn 34: point = 256, n_alt = 3
   Insn 33: point = 257, n_alt = 3
   Insn 32: point = 259, n_alt = 0
   Insn 31: point = 261, n_alt = 1
   Insn 30: point = 263, n_alt = 0
   Insn 29: point = 264, n_alt = 0
   Insn 28: point = 266, n_alt = 1
   Insn 27: point = 268, n_alt = 0
  BB 4
   Insn 19: point = 270, n_alt = 1
  BB 2
   Insn 11: point = 271, n_alt = 1
   Insn 10: point = 272, n_alt = 0
   Insn 9: point = 273, n_alt = 0
   Insn 5: point = 274, n_alt = 5
   Insn 4: point = 274, n_alt = 5
   Insn 3: point = 274, n_alt = 5
   Insn 2: point = 274, n_alt = 5
 r87: [265..266]
 r88: [260..264]
 r89: [260..261]
 r90: [258..259]
 r91: [254..257]
 r92: [233..234]
 r93: [228..232]
 r94: [228..229]
 r95: [226..227]
 r96: [223..225]
 r97: [217..218]
 r98: [212..216]
 r99: [212..213]
 r100: [210..211]
 r101: [207..209]
 r102: [201..202]
 r103: [196..200]
 r104: [196..197]
 r105: [194..195]
 r106: [191..193]
 r107: [176..186]
 r108: [180..182]
 r109: [178..179]
 r110: [176..177]
 r111: [164..170]
 r112: [166..167]
 r113: [164..165]
 r114: [156..158]
 r115: [154..155]
 r116: [151..153]
 r117: [130..134]
 r118: [130..131]
 r119: [128..129]
 r120: [119..121]
 r122: [110..111]
 r123: [106..109]
 r124: [102..104]
 r125: [93..95]
 r126: [87..88]
 r127: [80..82]
 r128: [74..75]
 r129: [63..65]
 r130: [61..62]
 r131: [42..60]
 r132: [46..56]
 r133: [50..52]
 r134: [48..49]
 r135: [46..47]
 r136: [44..45]
 r137: [42..43]
 r139: [29..32]
 r140: [23..24]
 r141: [18..22]
 r142: [18..19]
 r143: [16..17]
 r144: [12..15]
 r145: [128..139] [124..126]
 r146: [271..273]
 r147: [242..272]
 r148: [242..243]
 r149: [249..250]
 r150: [239..241]
 r151: [0..240]
 r152: [0..1]
 r153: [7..8]
 r154: [83..86]
 r155: [70..73]
 r156: [244..245]
 r157: [251..252]
 r158: [267..268]
 r159: [262..263]
 r160: [254..256]
 r161: [254..255]
 r162: [2..3]
 r163: [9..10]
 r164: [235..236]
 r165: [230..231]
 r166: [223..224]
 r167: [221..222]
 r168: [219..220]
 r169: [214..215]
 r170: [207..208]
 r171: [205..206]
 r172: [203..204]
 r173: [198..199]
 r174: [191..192]
 r175: [189..190]
 r176: [187..188]
 r177: [183..185]
 r178: [183..184]
 r179: [180..181]
 r180: [174..175]
 r181: [171..173]
 r182: [171..172]
 r183: [168..169]
 r184: [162..163]
 r185: [159..161]
 r186: [159..160]
 r187: [156..157]
 r188: [149..150]
 r189: [151..152]
 r190: [145..146]
 r191: [147..148]
 r192: [140..141]
 r193: [142..144]
 r194: [142..143]
 r195: [135..136]
 r196: [137..138]
 r197: [132..133]
 r198: [122..123]
 r199: [117..120]
 r200: [112..114]
 r201: [112..113]
 r202: [100..101]
 r203: [102..103]
 r204: [98..99]
 r205: [91..92]
 r206: [93..94]
 r207: [89..90]
 r208: [84..85]
 r209: [78..79]
 r210: [80..81]
 r211: [76..77]
 r212: [71..72]
 r213: [68..69]
 r214: [66..67]
 r215: [63..64]
 r216: [57..59]
 r217: [57..58]
 r218: [53..55]
 r219: [53..54]
 r220: [50..51]
 r221: [40..41]
 r222: [38..39]
 r223: [33..34]
 r224: [27..28]
 r225: [25..26]
 r226: [20..21]
 r227: [12..14]
 r228: [12..13]
 r229: [116..118]
 r230: [105..107]
 r231: [96..97]
 r232: [36..37]
 r236: [29..30]
 r237: [31..35]
 r238: [108..115]
Compressing live ranges: from 274 to 216 - 78%
Ranges after the compression:
 r87: [210..211]
 r88: [206..209]
 r89: [206..207]
 r90: [204..205]
 r91: [202..203]
 r92: [188..189]
 r93: [184..187]
 r94: [184..185]
 r95: [182..183]
 r96: [180..181]
 r97: [174..175]
 r98: [170..173]
 r99: [170..171]
 r100: [168..169]
 r101: [166..167]
 r102: [160..161]
 r103: [156..159]
 r104: [156..157]
 r105: [154..155]
 r106: [152..153]
 r107: [140..147]
 r108: [144..145]
 r109: [142..143]
 r110: [140..141]
 r111: [130..135]
 r112: [132..133]
 r113: [130..131]
 r114: [124..125]
 r115: [122..123]
 r116: [120..121]
 r117: [102..105]
 r118: [102..103]
 r119: [100..101]
 r120: [94..95]
 r122: [88..89]
 r123: [84..87]
 r124: [82..83]
 r125: [74..75]
 r126: [68..69]
 r127: [64..65]
 r128: [58..59]
 r129: [50..51]
 r130: [48..49]
 r131: [34..47]
 r132: [38..45]
 r133: [42..43]
 r134: [40..41]
 r135: [38..39]
 r136: [36..37]
 r137: [34..35]
 r139: [22..25]
 r140: [16..17]
 r141: [12..15]
 r142: [12..13]
 r143: [10..11]
 r144: [8..9]
 r145: [98..109]
 r146: [214..215]
 r147: [194..215]
 r148: [194..195]
 r149: [198..199]
 r150: [192..193]
 r151: [0..193]
 r152: [0..1]
 r153: [4..5]
 r154: [66..67]
 r155: [56..57]
 r156: [196..197]
 r157: [200..201]
 r158: [212..213]
 r159: [208..209]
 r160: [202..203]
 r161: [202..203]
 r162: [2..3]
 r163: [6..7]
 r164: [190..191]
 r165: [186..187]
 r166: [180..181]
 r167: [178..179]
 r168: [176..177]
 r169: [172..173]
 r170: [166..167]
 r171: [164..165]
 r172: [162..163]
 r173: [158..159]
 r174: [152..153]
 r175: [150..151]
 r176: [148..149]
 r177: [146..147]
 r178: [146..147]
 r179: [144..145]
 r180: [138..139]
 r181: [136..137]
 r182: [136..137]
 r183: [134..135]
 r184: [128..129]
 r185: [126..127]
 r186: [126..127]
 r187: [124..125]
 r188: [118..119]
 r189: [120..121]
 r190: [114..115]
 r191: [116..117]
 r192: [110..111]
 r193: [112..113]
 r194: [112..113]
 r195: [106..107]
 r196: [108..109]
 r197: [104..105]
 r198: [96..97]
 r199: [92..95]
 r200: [90..91]
 r201: [90..91]
 r202: [80..81]
 r203: [82..83]
 r204: [78..79]
 r205: [72..73]
 r206: [74..75]
 r207: [70..71]
 r208: [66..67]
 r209: [62..63]
 r210: [64..65]
 r211: [60..61]
 r212: [56..57]
 r213: [54..55]
 r214: [52..53]
 r215: [50..51]
 r216: [46..47]
 r217: [46..47]
 r218: [44..45]
 r219: [44..45]
 r220: [42..43]
 r221: [32..33]
 r222: [30..31]
 r223: [26..27]
 r224: [20..21]
 r225: [18..19]
 r226: [14..15]
 r227: [8..9]
 r228: [8..9]
 r229: [92..93]
 r230: [84..85]
 r231: [76..77]
 r232: [28..29]
 r236: [22..23]
 r237: [24..27]
 r238: [86..91]

********** Assignment #2: **********

	 Assigning to 237 (cl=SSE_REGS, orig=138, freq=2000, tfirst=236, tfreq=2000)...
	 Assigning to 236 (cl=SSE_REGS, orig=138, freq=2000, tfirst=236, tfreq=2000)...
	   Assign 25 to optional reload r236 (freq=2000)
	Hard reg 25 is preferable by r237 with profit 1000
	 Assigning to 238 (cl=SSE_REGS, orig=121, freq=2000, tfirst=238, tfreq=2000)...
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 2 (0.00%)
   Insn after restoring regs:
  273: r236:SF=r138:SF
      REG_DEAD r138:SF
   Insn after restoring regs:
  269: r138:SF=r232:SF
      REG_DEAD r232:SF
   Insn after restoring regs:
  264: r230:SF=r121:SF
      REG_DEAD r121:SF
   Insn after restoring regs:
  263: r121:SF=r229:SF
      REG_DEAD r229:SF
Keep optional reload reg 233
Remove optional reload reg 236
  Restoring original insn:
  212: r224:SF=r139:SF*r138:SF
      REG_DEAD r138:SF
      REG_DEAD r139:SF
  Deleting move 273
  273: r236:SF=r138:SF
      REG_DEAD r138:SF
deleting insn with uid = 273.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 212:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 16
   Insn 240: point = 0, n_alt = -1
  BB 19
   Insn 257: point = 0, n_alt = -1
  BB 9
   Insn 57: point = 0, n_alt = -1
   Insn 56: point = 0, n_alt = 0
   Insn 55: point = 1, n_alt = 0
   Insn 54: point = 3, n_alt = 0
   Insn 53: point = 4, n_alt = 0
  BB 15
   Insn 247: point = 5, n_alt = -1
   Insn 230: point = 5, n_alt = 1
  BB 20
   Insn 260: point = 6, n_alt = -1
  BB 11
   Insn 65: point = 7, n_alt = -1
   Insn 64: point = 7, n_alt = 0
   Insn 63: point = 8, n_alt = 0
   Insn 62: point = 10, n_alt = 0
   Insn 61: point = 11, n_alt = 0
  BB 14
   Insn 245: point = 12, n_alt = -1
   Insn 224: point = 12, n_alt = 1
   Insn 223: point = 12, n_alt = 8
   Insn 222: point = 13, n_alt = 7
   Insn 221: point = 14, n_alt = 3
   Insn 220: point = 15, n_alt = 3
   Insn 219: point = 17, n_alt = 0
   Insn 218: point = 19, n_alt = 0
   Insn 217: point = 21, n_alt = 0
   Insn 216: point = 22, n_alt = 0
   Insn 215: point = 24, n_alt = 0
   Insn 214: point = 26, n_alt = 0
   Insn 213: point = 27, n_alt = 8
   Insn 212: point = 28, n_alt = 1
   Insn 211: point = 30, n_alt = -2
   Insn 210: point = 31, n_alt = 0
   Insn 209: point = 31, n_alt = -2
   Insn 208: point = 32, n_alt = 7
   Insn 269: point = 33, n_alt = 8
   Insn 207: point = 35, n_alt = 1
   Insn 268: point = 35, n_alt = -2
   Insn 206: point = 37, n_alt = 7
   Insn 205: point = 38, n_alt = 8
   Insn 204: point = 39, n_alt = 1
   Insn 203: point = 41, n_alt = -2
   Insn 202: point = 43, n_alt = 1
   Insn 201: point = 45, n_alt = -2
   Insn 200: point = 47, n_alt = 1
   Insn 199: point = 49, n_alt = 7
   Insn 198: point = 50, n_alt = 1
   Insn 197: point = 52, n_alt = 7
   Insn 196: point = 53, n_alt = 7
   Insn 195: point = 54, n_alt = 1
   Insn 194: point = 56, n_alt = 7
   Insn 193: point = 57, n_alt = 7
   Insn 192: point = 58, n_alt = -2
   Insn 191: point = 60, n_alt = 2
   Insn 190: point = 62, n_alt = 7
   Insn 189: point = 63, n_alt = 2
   Insn 188: point = 65, n_alt = 7
   Insn 187: point = 66, n_alt = 4
   Insn 186: point = 67, n_alt = 9
   Insn 185: point = 68, n_alt = 0
   Insn 184: point = 68, n_alt = -2
   Insn 183: point = 69, n_alt = -2
   Insn 182: point = 70, n_alt = 7
   Insn 181: point = 71, n_alt = -2
   Insn 180: point = 73, n_alt = 2
   Insn 179: point = 75, n_alt = 7
   Insn 178: point = 76, n_alt = 8
   Insn 177: point = 77, n_alt = 1
   Insn 176: point = 79, n_alt = 7
   Insn 175: point = 80, n_alt = -2
   Insn 174: point = 81, n_alt = 0
   Insn 173: point = 81, n_alt = -2
   Insn 172: point = 82, n_alt = -2
   Insn 171: point = 83, n_alt = 7
   Insn 170: point = 84, n_alt = -2
   Insn 169: point = 86, n_alt = 2
   Insn 168: point = 88, n_alt = 7
   Insn 167: point = 89, n_alt = 8
   Insn 166: point = 90, n_alt = 1
   Insn 165: point = 92, n_alt = 7
   Insn 267: point = 93, n_alt = -2
   Insn 164: point = 95, n_alt = 2
   Insn 266: point = 95, n_alt = -2
   Insn 163: point = 97, n_alt = 7
   Insn 162: point = 98, n_alt = 8
   Insn 161: point = 99, n_alt = 2
   Insn 160: point = 101, n_alt = 7
   Insn 265: point = 102, n_alt = -2
   Insn 159: point = 104, n_alt = 2
   Insn 264: point = 105, n_alt = 7
   Insn 158: point = 107, n_alt = -2
   Insn 157: point = 108, n_alt = 0
   Insn 156: point = 108, n_alt = -2
   Insn 155: point = 109, n_alt = 1
   Insn 154: point = 111, n_alt = 7
   Insn 153: point = 112, n_alt = 7
   Insn 263: point = 113, n_alt = 8
   Insn 152: point = 115, n_alt = 1
   Insn 262: point = 116, n_alt = -2
   Insn 151: point = 118, n_alt = 7
   Insn 150: point = 119, n_alt = -2
   Insn 149: point = 120, n_alt = 0
   Insn 148: point = 120, n_alt = -2
   Insn 147: point = 121, n_alt = 7
   Insn 146: point = 122, n_alt = 8
  BB 13
   Insn 143: point = 124, n_alt = 7
  BB 12
   Insn 141: point = 126, n_alt = -1
   Insn 140: point = 126, n_alt = 0
   Insn 139: point = 127, n_alt = 0
   Insn 138: point = 129, n_alt = 0
   Insn 137: point = 131, n_alt = 0
   Insn 136: point = 132, n_alt = 1
   Insn 135: point = 132, n_alt = 0
   Insn 134: point = 134, n_alt = 0
   Insn 133: point = 135, n_alt = 1
   Insn 132: point = 136, n_alt = 7
   Insn 131: point = 137, n_alt = 7
   Insn 130: point = 138, n_alt = 8
   Insn 129: point = 139, n_alt = 1
   Insn 128: point = 141, n_alt = 7
   Insn 127: point = 142, n_alt = 7
   Insn 126: point = 143, n_alt = 8
   Insn 125: point = 144, n_alt = 2
   Insn 124: point = 146, n_alt = 7
   Insn 123: point = 147, n_alt = 8
   Insn 122: point = 148, n_alt = 1
   Insn 121: point = 150, n_alt = 7
   Insn 120: point = 151, n_alt = -2
   Insn 119: point = 153, n_alt = 2
   Insn 118: point = 155, n_alt = 7
   Insn 117: point = 156, n_alt = 1
   Insn 116: point = 158, n_alt = 7
   Insn 115: point = 159, n_alt = 7
   Insn 114: point = 160, n_alt = 8
   Insn 113: point = 161, n_alt = 2
   Insn 112: point = 163, n_alt = -2
   Insn 111: point = 165, n_alt = 2
   Insn 110: point = 167, n_alt = 7
   Insn 109: point = 168, n_alt = 1
   Insn 108: point = 170, n_alt = 7
   Insn 107: point = 171, n_alt = 7
   Insn 106: point = 172, n_alt = 8
   Insn 105: point = 173, n_alt = 2
   Insn 104: point = 175, n_alt = -2
   Insn 103: point = 177, n_alt = 1
   Insn 102: point = 179, n_alt = 7
   Insn 101: point = 180, n_alt = 1
   Insn 100: point = 182, n_alt = 7
   Insn 99: point = 183, n_alt = 7
   Insn 98: point = 184, n_alt = 1
   Insn 97: point = 186, n_alt = 7
   Insn 96: point = 187, n_alt = 8
   Insn 95: point = 188, n_alt = 7
   Insn 94: point = 190, n_alt = 3
   Insn 93: point = 191, n_alt = 3
   Insn 92: point = 193, n_alt = 0
   Insn 91: point = 195, n_alt = 0
   Insn 90: point = 197, n_alt = 0
   Insn 89: point = 198, n_alt = 0
   Insn 88: point = 200, n_alt = 0
   Insn 87: point = 202, n_alt = 0
   Insn 86: point = 203, n_alt = 8
   Insn 85: point = 204, n_alt = 7
   Insn 84: point = 206, n_alt = 3
   Insn 83: point = 207, n_alt = 3
   Insn 82: point = 209, n_alt = 0
   Insn 81: point = 211, n_alt = 0
   Insn 80: point = 213, n_alt = 0
   Insn 79: point = 214, n_alt = 0
   Insn 78: point = 216, n_alt = 0
   Insn 77: point = 218, n_alt = 0
   Insn 76: point = 219, n_alt = 8
   Insn 75: point = 220, n_alt = 7
   Insn 74: point = 222, n_alt = 3
   Insn 73: point = 223, n_alt = 3
   Insn 72: point = 225, n_alt = 0
   Insn 71: point = 227, n_alt = 0
   Insn 70: point = 229, n_alt = 0
   Insn 69: point = 230, n_alt = 0
   Insn 68: point = 232, n_alt = 0
   Insn 67: point = 234, n_alt = 0
  BB 10
   Insn 59: point = 236, n_alt = 1
  BB 8
   Insn 51: point = 237, n_alt = 1
   Insn 50: point = 238, n_alt = 0
   Insn 49: point = 239, n_alt = 0
  BB 17
   Insn 251: point = 240, n_alt = -1
  BB 3
   Insn 17: point = 240, n_alt = -1
   Insn 16: point = 240, n_alt = 0
   Insn 15: point = 241, n_alt = 0
   Insn 14: point = 243, n_alt = 0
   Insn 13: point = 244, n_alt = 0
  BB 7
   Insn 243: point = 245, n_alt = -1
   Insn 43: point = 245, n_alt = 1
  BB 18
   Insn 254: point = 246, n_alt = -1
  BB 5
   Insn 25: point = 247, n_alt = -1
   Insn 24: point = 247, n_alt = 0
   Insn 23: point = 248, n_alt = 0
   Insn 22: point = 250, n_alt = 0
   Insn 21: point = 251, n_alt = 0
  BB 6
   Insn 241: point = 252, n_alt = -1
   Insn 37: point = 252, n_alt = 1
   Insn 36: point = 252, n_alt = 8
   Insn 35: point = 253, n_alt = 7
   Insn 34: point = 254, n_alt = 3
   Insn 33: point = 255, n_alt = 3
   Insn 32: point = 257, n_alt = 0
   Insn 31: point = 259, n_alt = 1
   Insn 30: point = 261, n_alt = 0
   Insn 29: point = 262, n_alt = 0
   Insn 28: point = 264, n_alt = 1
   Insn 27: point = 266, n_alt = 0
  BB 4
   Insn 19: point = 268, n_alt = 1
  BB 2
   Insn 11: point = 269, n_alt = 1
   Insn 10: point = 270, n_alt = 0
   Insn 9: point = 271, n_alt = 0
   Insn 5: point = 272, n_alt = 5
   Insn 4: point = 272, n_alt = 5
   Insn 3: point = 272, n_alt = 5
   Insn 2: point = 272, n_alt = 5
 r121: [106..113]
 r138: [29..33]
Compressing live ranges: from 272 to 4 - 1%
Ranges after the compression:
 r121: [2..3]
 r138: [0..1]
  Slot 0 regnos (width = 0):	 121	 138
Changing spilled pseudos to memory in insn #263
Changing spilled pseudos to memory in insn #264
Changing spilled pseudos to memory in insn #269
Changing spilled pseudos to memory in insn #212
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 1 for insn #212
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 212:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #269
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 269:  (0) m  (1) v {*movsf_internal}
Reusing alternative 7 for insn #264
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 264:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #263
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 263:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=144, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=112, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 36
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 75
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 85
changing reg in insn 88
changing reg in insn 89
changing reg in insn 89
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 95
changing reg in insn 98
changing reg in insn 105
changing reg in insn 101
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 105
changing reg in insn 109
changing reg in insn 113
changing reg in insn 111
changing reg in insn 112
changing reg in insn 112
changing reg in insn 113
changing reg in insn 117
changing reg in insn 119
changing reg in insn 119
changing reg in insn 120
changing reg in insn 120
changing reg in insn 135
changing reg in insn 138
changing reg in insn 139
changing reg in insn 140
changing reg in insn 150
changing reg in insn 155
changing reg in insn 156
changing reg in insn 158
changing reg in insn 159
changing reg in insn 161
changing reg in insn 169
changing reg in insn 170
changing reg in insn 175
changing reg in insn 177
changing reg in insn 180
changing reg in insn 181
changing reg in insn 189
changing reg in insn 191
changing reg in insn 191
changing reg in insn 192
changing reg in insn 192
changing reg in insn 195
changing reg in insn 202
changing reg in insn 198
changing reg in insn 200
changing reg in insn 201
changing reg in insn 201
changing reg in insn 202
changing reg in insn 202
changing reg in insn 203
changing reg in insn 203
changing reg in insn 211
changing reg in insn 215
changing reg in insn 216
changing reg in insn 216
changing reg in insn 218
changing reg in insn 219
changing reg in insn 220
changing reg in insn 220
changing reg in insn 223
changing reg in insn 143
changing reg in insn 131
changing reg in insn 146
changing reg in insn 136
changing reg in insn 136
changing reg in insn 133
changing reg in insn 9
changing reg in insn 11
changing reg in insn 10
changing reg in insn 13
changing reg in insn 15
changing reg in insn 16
changing reg in insn 23
changing reg in insn 24
changing reg in insn 49
changing reg in insn 51
changing reg in insn 50
changing reg in insn 53
changing reg in insn 55
changing reg in insn 56
changing reg in insn 63
changing reg in insn 64
changing reg in insn 170
changing reg in insn 173
changing reg in insn 181
changing reg in insn 184
changing reg in insn 14
changing reg in insn 15
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 34
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 54
changing reg in insn 55
changing reg in insn 62
changing reg in insn 63
changing reg in insn 67
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 74
changing reg in insn 75
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 80
changing reg in insn 81
changing reg in insn 84
changing reg in insn 85
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 90
changing reg in insn 91
changing reg in insn 94
changing reg in insn 95
changing reg in insn 95
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 99
changing reg in insn 101
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 110
changing reg in insn 111
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 117
changing reg in insn 116
changing reg in insn 117
changing reg in insn 118
changing reg in insn 119
changing reg in insn 122
changing reg in insn 123
changing reg in insn 121
changing reg in insn 125
changing reg in insn 126
changing reg in insn 124
changing reg in insn 125
changing reg in insn 129
changing reg in insn 130
changing reg in insn 127
changing reg in insn 128
changing reg in insn 134
changing reg in insn 135
changing reg in insn 132
changing reg in insn 133
changing reg in insn 137
changing reg in insn 138
changing reg in insn 147
changing reg in insn 148
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 161
changing reg in insn 162
changing reg in insn 160
changing reg in insn 161
changing reg in insn 163
changing reg in insn 166
changing reg in insn 167
changing reg in insn 165
changing reg in insn 168
changing reg in insn 169
changing reg in insn 171
changing reg in insn 172
changing reg in insn 177
changing reg in insn 178
changing reg in insn 176
changing reg in insn 177
changing reg in insn 179
changing reg in insn 180
changing reg in insn 182
changing reg in insn 183
changing reg in insn 186
changing reg in insn 187
changing reg in insn 188
changing reg in insn 189
changing reg in insn 190
changing reg in insn 191
changing reg in insn 193
changing reg in insn 194
changing reg in insn 196
changing reg in insn 198
changing reg in insn 197
changing reg in insn 198
changing reg in insn 199
changing reg in insn 204
changing reg in insn 205
changing reg in insn 206
changing reg in insn 208
changing reg in insn 209
changing reg in insn 212
changing reg in insn 213
changing reg in insn 214
changing reg in insn 215
changing reg in insn 217
changing reg in insn 218
changing reg in insn 221
changing reg in insn 223
changing reg in insn 222
changing reg in insn 223
deleting insn with uid = 104.
deleting insn with uid = 112.
deleting insn with uid = 148.
deleting insn with uid = 262.
deleting insn with uid = 156.
deleting insn with uid = 158.
deleting insn with uid = 267.
deleting insn with uid = 201.
deleting insn with uid = 203.
deleting insn with uid = 268.
deleting insn with uid = 209.
deleting insn with uid = 211.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 174.
verify found no changes in insn with uid = 185.
verify found no changes in insn with uid = 210.


calthte

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;;  ref usage 	r0={41d,35u} r1={26d,21u} r2={8d,3u} r3={1d,1u} r4={6d,1u} r5={6d,1u} r6={1d,101u} r7={1d,25u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={36d,11u} r18={5d} r19={5d} r20={1d,1u} r21={58d,59u} r22={33d,27u} r23={12d,6u} r24={7d,1u} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} 
;;    total ref usage 846{553d,293u,0e} in 205{200 regular + 5 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 146 147
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 p1d+0 S8 A64])
        (reg:DI 5 di [ p1d ])) "CALTHTE.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 t1d+0 S8 A64])
        (reg:DI 4 si [ t1d ])) "CALTHTE.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 q1d+0 S8 A64])
        (reg:DI 1 dx [ q1d ])) "CALTHTE.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 thte+0 S8 A64])
        (reg:DI 2 cx [ thte ])) "CALTHTE.f":1 85 {*movdi_internal}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SI 1 dx [orig:146 _69 ] [146])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7ff5f8637870 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALTHTE.f":61 86 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:147 _70 ] [147])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7ff5f8637870 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALTHTE.f":61 86 {*movsi_internal}
     (nil))
(insn 11 10 44 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:146 _69 ] [146])) "CALTHTE.f":61 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  def 	 17 [flags] 148 156
(code_label 44 11 12 3 5 (nil) [1 uses])
(note 12 44 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:147 _70 ] [147]))) "CALTHTE.f":61 11 {*cmpsi_1}
     (nil))
(insn 14 13 15 3 (set (reg:QI 1 dx [156])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALTHTE.f":61 678 {*setcc_qi}
     (nil))
(insn 15 14 16 3 (set (reg:SI 1 dx [orig:148 _72 ] [148])
        (zero_extend:SI (reg:QI 1 dx [156]))) "CALTHTE.f":61 140 {*zero_extendqisi2}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:148 _72 ] [148])
            (const_int 0 [0]))) "CALTHTE.f":61 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 250)
            (pc))) "CALTHTE.f":61 682 {*jcc}
     (nil)
 -> 250)
;;  succ:       17
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 38 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALTHTE.f":62 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 149 157
(code_label 38 19 20 5 4 (nil) [1 uses])
(note 20 38 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALTHTE.f":62 11 {*cmpsi_1}
     (nil))
(insn 22 21 23 5 (set (reg:QI 1 dx [157])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALTHTE.f":62 678 {*setcc_qi}
     (nil))
(insn 23 22 24 5 (set (reg:SI 1 dx [orig:149 _74 ] [149])
        (zero_extend:SI (reg:QI 1 dx [157]))) "CALTHTE.f":62 140 {*zero_extendqisi2}
     (nil))
(insn 24 23 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:149 _74 ] [149])
            (const_int 0 [0]))) "CALTHTE.f":62 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 253)
            (pc))) "CALTHTE.f":62 682 {*jcc}
     (nil)
 -> 253)
;;  succ:       18
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 18, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 158 159 160 161
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:SI 1 dx [158])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTHTE.f":63 86 {*movsi_internal}
     (nil))
(insn 28 27 29 6 (set (reg:DI 1 dx [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 1 dx [158]))) "CALTHTE.f":63 149 {*extendsidi2_rex64}
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg:DI 2 cx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 1 dx [orig:87 _1 ] [87])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":63 349 {*muldi3_1}
     (nil))
(insn 30 29 31 6 (set (reg:SI 1 dx [159])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTHTE.f":63 86 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (reg:DI 1 dx [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 1 dx [159]))) "CALTHTE.f":63 149 {*extendsidi2_rex64}
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg:DI 1 dx [orig:90 _4 ] [90])
                (plus:DI (reg:DI 1 dx [orig:89 _3 ] [89])
                    (reg:DI 2 cx [orig:88 _2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":63 222 {*adddi_1}
     (nil))
(insn 33 32 34 6 (parallel [
            (set (reg:DI 2 cx [orig:91 _5 ] [91])
                (plus:DI (reg:DI 1 dx [orig:90 _4 ] [90])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":63 222 {*adddi_1}
     (nil))
(insn 34 33 35 6 (set (reg/f:DI 1 dx [160])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 thte+0 S8 A64])) "CALTHTE.f":63 85 {*movdi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:SF 21 xmm0 [161])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":63 131 {*movsf_internal}
     (nil))
(insn 36 35 37 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:91 _5 ] [91])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [160])) [2 *thte_75(D) S4 A32])
        (reg:SF 21 xmm0 [161])) "CALTHTE.f":63 131 {*movsf_internal}
     (nil))
(insn 37 36 241 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":62 221 {*addsi_1}
     (nil))
(jump_insn 241 37 242 6 (set (pc)
        (label_ref 38)) "CALTHTE.f":62 683 {jump}
     (nil)
 -> 38)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147

(barrier 242 241 253)
;; basic block 18, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 253 242 252 18 13 (nil) [1 uses])
(note 252 253 254 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 254 252 41 18 (const_int 0 [0]) "CALTHTE.f":63 718 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147

;; basic block 7, loop depth 0, maybe hot
;;  prev block 18, next block 17, flags: (RTL, MODIFIED)
;;  pred:       18 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 41 254 42 7 3 (nil) [0 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 243 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":61 221 {*addsi_1}
     (nil))
(jump_insn 243 43 244 7 (set (pc)
        (label_ref 44)) "CALTHTE.f":61 683 {jump}
     (nil)
 -> 44)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147

(barrier 244 243 250)
;; basic block 17, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 250 244 249 17 12 (nil) [1 uses])
(note 249 250 251 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 251 249 47 17 (const_int 0 [0]) "CALTHTE.f":62 718 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 17, next block 9, flags: (RTL, MODIFIED)
;;  pred:       17 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 150 151
(code_label 47 251 48 8 2 (nil) [0 uses])
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg:SI 0 ax [orig:150 _79 ] [150])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7ff5f8637870 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALTHTE.f":69 86 {*movsi_internal}
     (nil))
(insn 50 49 51 8 (set (reg:SI 3 bx [orig:151 _80 ] [151])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7ff5f8637870 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALTHTE.f":69 86 {*movsi_internal}
     (nil))
(insn 51 50 231 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:150 _79 ] [150])) "CALTHTE.f":69 86 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              15 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 17 [flags] 152 162
(code_label 231 51 52 9 10 (nil) [1 uses])
(note 52 231 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 3 bx [orig:151 _80 ] [151]))) "CALTHTE.f":69 11 {*cmpsi_1}
     (nil))
(insn 54 53 55 9 (set (reg:QI 0 ax [162])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALTHTE.f":69 678 {*setcc_qi}
     (nil))
(insn 55 54 56 9 (set (reg:SI 0 ax [orig:152 _82 ] [152])
        (zero_extend:SI (reg:QI 0 ax [162]))) "CALTHTE.f":69 140 {*zero_extendqisi2}
     (nil))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:152 _82 ] [152])
            (const_int 0 [0]))) "CALTHTE.f":69 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 256)
            (pc))) "CALTHTE.f":69 682 {*jcc}
     (nil)
 -> 256)
;;  succ:       19
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 225 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALTHTE.f":70 86 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              14 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 153 163
(code_label 225 59 60 11 9 (nil) [1 uses])
(note 60 225 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALTHTE.f":70 11 {*cmpsi_1}
     (nil))
(insn 62 61 63 11 (set (reg:QI 0 ax [163])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALTHTE.f":70 678 {*setcc_qi}
     (nil))
(insn 63 62 64 11 (set (reg:SI 0 ax [orig:153 _84 ] [153])
        (zero_extend:SI (reg:QI 0 ax [163]))) "CALTHTE.f":70 140 {*zero_extendqisi2}
     (nil))
(insn 64 63 65 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:153 _84 ] [153])
            (const_int 0 [0]))) "CALTHTE.f":70 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 65 64 66 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 259)
            (pc))) "CALTHTE.f":70 682 {*jcc}
     (nil)
 -> 259)
;;  succ:       20
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 145 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
(note 66 65 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 12 (set (reg:SI 0 ax [164])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTHTE.f":71 86 {*movsi_internal}
     (nil))
(insn 68 67 69 12 (set (reg:DI 0 ax [orig:92 _6 ] [92])
        (sign_extend:DI (reg:SI 0 ax [164]))) "CALTHTE.f":71 149 {*extendsidi2_rex64}
     (nil))
(insn 69 68 70 12 (parallel [
            (set (reg:DI 1 dx [orig:93 _7 ] [93])
                (mult:DI (reg:DI 0 ax [orig:92 _6 ] [92])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":71 349 {*muldi3_1}
     (nil))
(insn 70 69 71 12 (set (reg:SI 0 ax [165])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTHTE.f":71 86 {*movsi_internal}
     (nil))
(insn 71 70 72 12 (set (reg:DI 0 ax [orig:94 _8 ] [94])
        (sign_extend:DI (reg:SI 0 ax [165]))) "CALTHTE.f":71 149 {*extendsidi2_rex64}
     (nil))
(insn 72 71 73 12 (parallel [
            (set (reg:DI 0 ax [orig:95 _9 ] [95])
                (plus:DI (reg:DI 0 ax [orig:94 _8 ] [94])
                    (reg:DI 1 dx [orig:93 _7 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":71 222 {*adddi_1}
     (nil))
(insn 73 72 74 12 (parallel [
            (set (reg:DI 1 dx [orig:96 _10 ] [96])
                (plus:DI (reg:DI 0 ax [orig:95 _9 ] [95])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":71 222 {*adddi_1}
     (nil))
(insn 74 73 75 12 (set (reg/f:DI 0 ax [166])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 p1d+0 S8 A64])) "CALTHTE.f":71 85 {*movdi_internal}
     (nil))
(insn 75 74 76 12 (set (reg:SF 21 xmm0 [167])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:96 _10 ] [96])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [166])) [2 *p1d_85(D) S4 A32])) "CALTHTE.f":71 131 {*movsf_internal}
     (nil))
(insn 76 75 77 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 p+0 S4 A32])
        (reg:SF 21 xmm0 [167])) "CALTHTE.f":71 131 {*movsf_internal}
     (nil))
(insn 77 76 78 12 (set (reg:SI 0 ax [168])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTHTE.f":72 86 {*movsi_internal}
     (nil))
(insn 78 77 79 12 (set (reg:DI 0 ax [orig:97 _11 ] [97])
        (sign_extend:DI (reg:SI 0 ax [168]))) "CALTHTE.f":72 149 {*extendsidi2_rex64}
     (nil))
(insn 79 78 80 12 (parallel [
            (set (reg:DI 1 dx [orig:98 _12 ] [98])
                (mult:DI (reg:DI 0 ax [orig:97 _11 ] [97])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":72 349 {*muldi3_1}
     (nil))
(insn 80 79 81 12 (set (reg:SI 0 ax [169])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTHTE.f":72 86 {*movsi_internal}
     (nil))
(insn 81 80 82 12 (set (reg:DI 0 ax [orig:99 _13 ] [99])
        (sign_extend:DI (reg:SI 0 ax [169]))) "CALTHTE.f":72 149 {*extendsidi2_rex64}
     (nil))
(insn 82 81 83 12 (parallel [
            (set (reg:DI 0 ax [orig:100 _14 ] [100])
                (plus:DI (reg:DI 0 ax [orig:99 _13 ] [99])
                    (reg:DI 1 dx [orig:98 _12 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":72 222 {*adddi_1}
     (nil))
(insn 83 82 84 12 (parallel [
            (set (reg:DI 1 dx [orig:101 _15 ] [101])
                (plus:DI (reg:DI 0 ax [orig:100 _14 ] [100])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":72 222 {*adddi_1}
     (nil))
(insn 84 83 85 12 (set (reg/f:DI 0 ax [170])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 t1d+0 S8 A64])) "CALTHTE.f":72 85 {*movdi_internal}
     (nil))
(insn 85 84 86 12 (set (reg:SF 21 xmm0 [171])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:101 _15 ] [101])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [170])) [2 *t1d_87(D) S4 A32])) "CALTHTE.f":72 131 {*movsf_internal}
     (nil))
(insn 86 85 87 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 t+0 S4 A32])
        (reg:SF 21 xmm0 [171])) "CALTHTE.f":72 131 {*movsf_internal}
     (nil))
(insn 87 86 88 12 (set (reg:SI 0 ax [172])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTHTE.f":73 86 {*movsi_internal}
     (nil))
(insn 88 87 89 12 (set (reg:DI 0 ax [orig:102 _16 ] [102])
        (sign_extend:DI (reg:SI 0 ax [172]))) "CALTHTE.f":73 149 {*extendsidi2_rex64}
     (nil))
(insn 89 88 90 12 (parallel [
            (set (reg:DI 1 dx [orig:103 _17 ] [103])
                (mult:DI (reg:DI 0 ax [orig:102 _16 ] [102])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":73 349 {*muldi3_1}
     (nil))
(insn 90 89 91 12 (set (reg:SI 0 ax [173])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTHTE.f":73 86 {*movsi_internal}
     (nil))
(insn 91 90 92 12 (set (reg:DI 0 ax [orig:104 _18 ] [104])
        (sign_extend:DI (reg:SI 0 ax [173]))) "CALTHTE.f":73 149 {*extendsidi2_rex64}
     (nil))
(insn 92 91 93 12 (parallel [
            (set (reg:DI 0 ax [orig:105 _19 ] [105])
                (plus:DI (reg:DI 0 ax [orig:104 _18 ] [104])
                    (reg:DI 1 dx [orig:103 _17 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":73 222 {*adddi_1}
     (nil))
(insn 93 92 94 12 (parallel [
            (set (reg:DI 1 dx [orig:106 _20 ] [106])
                (plus:DI (reg:DI 0 ax [orig:105 _19 ] [105])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":73 222 {*adddi_1}
     (nil))
(insn 94 93 95 12 (set (reg/f:DI 0 ax [174])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 q1d+0 S8 A64])) "CALTHTE.f":73 85 {*movdi_internal}
     (nil))
(insn 95 94 96 12 (set (reg:SF 21 xmm0 [175])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:106 _20 ] [106])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [174])) [2 *q1d_89(D) S4 A32])) "CALTHTE.f":73 131 {*movsf_internal}
     (nil))
(insn 96 95 97 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 q+0 S4 A32])
        (reg:SF 21 xmm0 [175])) "CALTHTE.f":73 131 {*movsf_internal}
     (nil))
(insn 97 96 98 12 (set (reg:SF 21 xmm0 [176])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 p+0 S4 A32])) "CALTHTE.f":74 131 {*movsf_internal}
     (nil))
(insn 98 97 99 12 (set (reg:SF 21 xmm0 [orig:107 _21 ] [107])
        (mult:SF (reg:SF 21 xmm0 [176])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 q+0 S4 A32]))) "CALTHTE.f":74 838 {*fop_sf_comm}
     (nil))
(insn 99 98 100 12 (set (reg:SF 23 xmm2 [177])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 q+0 S4 A32])) "CALTHTE.f":74 131 {*movsf_internal}
     (nil))
(insn 100 99 101 12 (set (reg:SF 22 xmm1 [178])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":74 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.780210018157958984375e-1 [0x0.c18bf8p-1])
        (nil)))
(insn 101 100 102 12 (set (reg:SF 23 xmm2 [orig:108 _22 ] [108])
        (mult:SF (reg:SF 23 xmm2 [177])
            (reg:SF 22 xmm1 [178]))) "CALTHTE.f":74 838 {*fop_sf_comm}
     (nil))
(insn 102 101 103 12 (set (reg:SF 22 xmm1 [179])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":74 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.219789981842041015625e-1 [0x0.9f3a04p+0])
        (nil)))
(insn 103 102 105 12 (set (reg:SF 22 xmm1 [orig:109 _23 ] [109])
        (plus:SF (reg:SF 22 xmm1 [179])
            (reg:SF 23 xmm2 [orig:108 _22 ] [108]))) "CALTHTE.f":74 838 {*fop_sf_comm}
     (nil))
(insn 105 103 106 12 (set (reg:SF 21 xmm0 [180])
        (div:SF (reg:SF 21 xmm0 [orig:107 _21 ] [107])
            (reg:SF 22 xmm1 [orig:110 _24 ] [110]))) "CALTHTE.f":74 841 {*fop_sf_1}
     (nil))
(insn 106 105 107 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 evp+0 S4 A32])
        (reg:SF 21 xmm0 [180])) "CALTHTE.f":74 131 {*movsf_internal}
     (nil))
(insn 107 106 108 12 (set (reg:SF 22 xmm1 [181])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 evp+0 S4 A32])) "CALTHTE.f":75 131 {*movsf_internal}
     (nil))
(insn 108 107 109 12 (set (reg:SF 21 xmm0 [182])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":75 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.219789981842041015625e-1 [0x0.9f3a04p+0])
        (nil)))
(insn 109 108 110 12 (set (reg:SF 21 xmm0 [orig:111 _25 ] [111])
        (mult:SF (reg:SF 21 xmm0 [182])
            (reg:SF 22 xmm1 [181]))) "CALTHTE.f":75 838 {*fop_sf_comm}
     (nil))
(insn 110 109 111 12 (set (reg:SF 22 xmm1 [183])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 p+0 S4 A32])) "CALTHTE.f":75 131 {*movsf_internal}
     (nil))
(insn 111 110 113 12 (set (reg:SF 22 xmm1 [orig:112 _26 ] [112])
        (minus:SF (reg:SF 22 xmm1 [183])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 evp+0 S4 A32]))) "CALTHTE.f":75 841 {*fop_sf_1}
     (nil))
(insn 113 111 114 12 (set (reg:SF 21 xmm0 [184])
        (div:SF (reg:SF 21 xmm0 [orig:111 _25 ] [111])
            (reg:SF 22 xmm1 [orig:113 _27 ] [113]))) "CALTHTE.f":75 841 {*fop_sf_1}
     (nil))
(insn 114 113 115 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 rmx+0 S4 A32])
        (reg:SF 21 xmm0 [184])) "CALTHTE.f":75 131 {*movsf_internal}
     (nil))
(insn 115 114 116 12 (set (reg:SF 22 xmm1 [185])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 rmx+0 S4 A32])) "CALTHTE.f":76 131 {*movsf_internal}
     (nil))
(insn 116 115 117 12 (set (reg:SF 21 xmm0 [186])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":76 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.800000011920928955078125e-1 [0x0.8f5c29p-1])
        (nil)))
(insn 117 116 118 12 (set (reg:SF 22 xmm1 [orig:114 _28 ] [114])
        (mult:SF (reg:SF 22 xmm1 [185])
            (reg:SF 21 xmm0 [186]))) "CALTHTE.f":76 838 {*fop_sf_comm}
     (nil))
(insn 118 117 119 12 (set (reg:SF 21 xmm0 [187])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":76 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 119 118 120 12 (set (reg:SF 21 xmm0 [orig:115 _29 ] [115])
        (minus:SF (reg:SF 21 xmm0 [187])
            (reg:SF 22 xmm1 [orig:114 _28 ] [114]))) "CALTHTE.f":76 841 {*fop_sf_1}
     (nil))
(insn 120 119 121 12 (set (reg:SF 22 xmm1 [orig:116 _30 ] [116])
        (reg:SF 21 xmm0 [orig:115 _29 ] [115])) "CALTHTE.f":76 131 {*movsf_internal}
     (nil))
(insn 121 120 122 12 (set (reg:SF 21 xmm0 [189])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":76 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.8450000286102294921875e-1 [0x0.91a9fcp-1])
        (nil)))
(insn 122 121 123 12 (set (reg:SF 21 xmm0 [188])
        (mult:SF (reg:SF 21 xmm0 [189])
            (reg:SF 22 xmm1 [orig:116 _30 ] [116]))) "CALTHTE.f":76 838 {*fop_sf_comm}
     (nil))
(insn 123 122 124 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 ckapa+0 S4 A32])
        (reg:SF 21 xmm0 [188])) "CALTHTE.f":76 131 {*movsf_internal}
     (nil))
(insn 124 123 125 12 (set (reg:SF 21 xmm0 [191])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":77 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 125 124 126 12 (set (reg:SF 21 xmm0 [190])
        (div:SF (reg:SF 21 xmm0 [191])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 ckapa+0 S4 A32]))) "CALTHTE.f":77 841 {*fop_sf_1}
     (nil))
(insn 126 125 127 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 rkapa+0 S4 A32])
        (reg:SF 21 xmm0 [190])) "CALTHTE.f":77 131 {*movsf_internal}
     (nil))
(insn 127 126 128 12 (set (reg:SF 22 xmm1 [193])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 evp+0 S4 A32])) "CALTHTE.f":78 131 {*movsf_internal}
     (nil))
(insn 128 127 129 12 (set (reg:SF 21 xmm0 [194])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":78 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))
(insn 129 128 130 12 (set (reg:SF 21 xmm0 [192])
        (mult:SF (reg:SF 21 xmm0 [194])
            (reg:SF 22 xmm1 [193]))) "CALTHTE.f":78 838 {*fop_sf_comm}
     (nil))
(insn 130 129 131 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 arg+0 S4 A32])
        (reg:SF 21 xmm0 [192])) "CALTHTE.f":78 131 {*movsf_internal}
     (nil))
(insn 131 130 132 12 (set (reg:SF 21 xmm0 [orig:145 M.0_63 ] [145])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":79 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.999999960041972002500187954865396022796630859375e-13 [0x0.8cbcccp-39])
        (nil)))
(insn 132 131 133 12 (set (reg:SF 22 xmm1 [196])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 arg+0 S4 A32])) "CALTHTE.f":79 131 {*movsf_internal}
     (nil))
(insn 133 132 134 12 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [196])
            (reg:SF 21 xmm0 [orig:145 M.0_63 ] [145]))) "CALTHTE.f":79 53 {*cmpisf}
     (nil))
(insn 134 133 135 12 (set (reg:QI 0 ax [195])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALTHTE.f":79 678 {*setcc_qi}
     (nil))
(insn 135 134 136 12 (set (reg:SI 1 dx [orig:117 _31 ] [117])
        (zero_extend:SI (reg:QI 0 ax [195]))) "CALTHTE.f":79 140 {*zero_extendqisi2}
     (nil))
(insn 136 135 137 12 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:145 M.0_63 ] [145])
                    (reg:SF 21 xmm0 [orig:145 M.0_63 ] [145]))
            ] UNSPEC_NOTRAP)) "CALTHTE.f":79 54 {*cmpiusf}
     (nil))
(insn 137 136 138 12 (set (reg:QI 0 ax [197])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALTHTE.f":79 678 {*setcc_qi}
     (nil))
(insn 138 137 139 12 (set (reg:SI 0 ax [orig:118 _32 ] [118])
        (zero_extend:SI (reg:QI 0 ax [197]))) "CALTHTE.f":79 140 {*zero_extendqisi2}
     (nil))
(insn 139 138 140 12 (parallel [
            (set (reg:SI 0 ax [orig:119 _33 ] [119])
                (ior:SI (reg:SI 0 ax [orig:118 _32 ] [118])
                    (reg:SI 1 dx [orig:117 _31 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":79 450 {*iorsi_1}
     (nil))
(insn 140 139 141 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:119 _33 ] [119])
            (const_int 0 [0]))) "CALTHTE.f":79 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 141 140 142 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "CALTHTE.f":79 682 {*jcc}
     (nil)
 -> 144)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 145 151

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 145
(note 142 141 143 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 13 (set (reg:SF 21 xmm0 [orig:145 M.0_63 ] [145])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 arg+0 S4 A32])) "CALTHTE.f":79 131 {*movsf_internal}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 145 151

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 20, flags: (RTL, MODIFIED)
;;  pred:       12
;;              13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 145 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 145
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 154 155 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228
(code_label 144 143 145 14 8 (nil) [1 uses])
(note 145 144 146 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 arg+0 S4 A32])
        (reg:SF 21 xmm0 [orig:145 M.0_63 ] [145])) "CALTHTE.f":79 131 {*movsf_internal}
     (nil))
(insn 147 146 149 14 (set (reg:SF 21 xmm0 [198])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 t+0 S4 A32])) "CALTHTE.f":80 131 {*movsf_internal}
     (nil))
(call_insn/u 149 147 150 14 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7ff5f84a7900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALTHTE.f":80 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 150 149 151 14 (set (reg:SF 22 xmm1 [orig:120 _34 ] [120])
        (reg:SF 21 xmm0)) "CALTHTE.f":80 131 {*movsf_internal}
     (nil))
(insn 151 150 152 14 (set (reg:SF 21 xmm0 [199])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":80 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.5e+0 [0x0.ep+2])
        (nil)))
(insn 152 151 263 14 (set (reg:SF 22 xmm1 [orig:120 _34 ] [120])
        (mult:SF (reg:SF 22 xmm1 [orig:120 _34 ] [120])
            (reg:SF 21 xmm0 [199]))) "CALTHTE.f":80 838 {*fop_sf_comm}
     (nil))
(insn 263 152 275 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [5 %sfp+-100 S4 A32])
        (reg:SF 22 xmm1 [orig:120 _34 ] [120])) "CALTHTE.f":80 131 {*movsf_internal}
     (nil))
(note 275 263 272 14 NOTE_INSN_DELETED)
(note 272 275 153 14 NOTE_INSN_DELETED)
(insn 153 272 154 14 (set (reg:SF 22 xmm1 [200])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 evp+0 S4 A32])) "CALTHTE.f":80 131 {*movsf_internal}
     (nil))
(insn 154 153 155 14 (set (reg:SF 21 xmm0 [201])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":80 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))
(insn 155 154 157 14 (set (reg:SF 21 xmm0 [orig:122 _36 ] [122])
        (mult:SF (reg:SF 21 xmm0 [201])
            (reg:SF 22 xmm1 [200]))) "CALTHTE.f":80 838 {*fop_sf_comm}
     (nil))
(call_insn/u 157 155 264 14 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7ff5f84a7900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALTHTE.f":80 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 264 157 159 14 (set (reg:SF 22 xmm1 [orig:121 _35 ] [121])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [5 %sfp+-100 S4 A32])) "CALTHTE.f":80 131 {*movsf_internal}
     (nil))
(insn 159 264 265 14 (set (reg:SF 22 xmm1 [orig:121 _35 ] [121])
        (minus:SF (reg:SF 22 xmm1 [orig:121 _35 ] [121])
            (reg:SF 21 xmm0 [orig:123 _37 ] [123]))) "CALTHTE.f":80 841 {*fop_sf_1}
     (nil))
(insn 265 159 160 14 (set (reg:SF 21 xmm0 [orig:124 _38 ] [124])
        (reg:SF 22 xmm1 [orig:121 _35 ] [121])) "CALTHTE.f":80 131 {*movsf_internal}
     (nil))
(insn 160 265 161 14 (set (reg:SF 22 xmm1 [203])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":80 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.804999828338623046875e+0 [0x0.99c28fp+3])
        (nil)))
(insn 161 160 162 14 (set (reg:SF 21 xmm0 [202])
        (minus:SF (reg:SF 21 xmm0 [orig:124 _38 ] [124])
            (reg:SF 22 xmm1 [203]))) "CALTHTE.f":80 841 {*fop_sf_1}
     (nil))
(insn 162 161 163 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 denom+0 S4 A32])
        (reg:SF 21 xmm0 [202])) "CALTHTE.f":80 131 {*movsf_internal}
     (nil))
(insn 163 162 266 14 (set (reg:SF 21 xmm0 [204])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":81 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.84e+3 [0x0.b18p+12])
        (nil)))
(insn 266 163 164 14 (set (reg:SF 22 xmm1 [204])
        (reg:SF 21 xmm0 [204])) "CALTHTE.f":81 131 {*movsf_internal}
     (nil))
(insn 164 266 165 14 (set (reg:SF 22 xmm1 [204])
        (div:SF (reg:SF 22 xmm1 [204])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 denom+0 S4 A32]))) "CALTHTE.f":81 841 {*fop_sf_1}
     (nil))
(insn 165 164 166 14 (set (reg:SF 21 xmm0 [206])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":81 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.5e+1 [0x0.dcp+6])
        (nil)))
(insn 166 165 167 14 (set (reg:SF 21 xmm0 [205])
        (plus:SF (reg:SF 21 xmm0 [206])
            (reg:SF 22 xmm1 [orig:125 _39 ] [125]))) "CALTHTE.f":81 838 {*fop_sf_comm}
     (nil))
(insn 167 166 168 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 tlcl+0 S4 A32])
        (reg:SF 21 xmm0 [205])) "CALTHTE.f":81 131 {*movsf_internal}
     (nil))
(insn 168 167 169 14 (set (reg:SF 21 xmm0 [207])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 tlcl+0 S4 A32])) "CALTHTE.f":82 131 {*movsf_internal}
     (nil))
(insn 169 168 170 14 (set (reg:SF 21 xmm0 [orig:126 _40 ] [126])
        (div:SF (reg:SF 21 xmm0 [207])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 t+0 S4 A32]))) "CALTHTE.f":82 841 {*fop_sf_1}
     (nil))
(insn 170 169 171 14 (set (reg:SF 23 xmm2 [orig:154 _101 ] [154])
        (reg:SF 21 xmm0 [orig:126 _40 ] [126])) "CALTHTE.f":82 131 {*movsf_internal}
     (nil))
(insn 171 170 172 14 (set (reg:SF 21 xmm0 [208])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 rkapa+0 S4 A32])) "CALTHTE.f":82 131 {*movsf_internal}
     (nil))
(insn 172 171 173 14 (set (reg:SF 22 xmm1)
        (reg:SF 21 xmm0 [208])) "CALTHTE.f":82 131 {*movsf_internal}
     (nil))
(insn 173 172 174 14 (set (reg:SF 21 xmm0)
        (reg:SF 23 xmm2 [orig:154 _101 ] [154])) "CALTHTE.f":82 131 {*movsf_internal}
     (nil))
(call_insn/u 174 173 175 14 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7ff5f84b4100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALTHTE.f":82 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 175 174 176 14 (set (reg:SF 22 xmm1 [orig:127 _41 ] [127])
        (reg:SF 21 xmm0)) "CALTHTE.f":82 131 {*movsf_internal}
     (nil))
(insn 176 175 177 14 (set (reg:SF 21 xmm0 [210])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 p+0 S4 A32])) "CALTHTE.f":82 131 {*movsf_internal}
     (nil))
(insn 177 176 178 14 (set (reg:SF 21 xmm0 [209])
        (mult:SF (reg:SF 21 xmm0 [210])
            (reg:SF 22 xmm1 [orig:127 _41 ] [127]))) "CALTHTE.f":82 838 {*fop_sf_comm}
     (nil))
(insn 178 177 179 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 plcl+0 S4 A32])
        (reg:SF 21 xmm0 [209])) "CALTHTE.f":82 131 {*movsf_internal}
     (nil))
(insn 179 178 180 14 (set (reg:SF 21 xmm0 [211])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":83 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 180 179 181 14 (set (reg:SF 21 xmm0 [orig:128 _42 ] [128])
        (div:SF (reg:SF 21 xmm0 [211])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 p+0 S4 A32]))) "CALTHTE.f":83 841 {*fop_sf_1}
     (nil))
(insn 181 180 182 14 (set (reg:SF 23 xmm2 [orig:155 _103 ] [155])
        (reg:SF 21 xmm0 [orig:128 _42 ] [128])) "CALTHTE.f":83 131 {*movsf_internal}
     (nil))
(insn 182 181 183 14 (set (reg:SF 21 xmm0 [212])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 ckapa+0 S4 A32])) "CALTHTE.f":83 131 {*movsf_internal}
     (nil))
(insn 183 182 184 14 (set (reg:SF 22 xmm1)
        (reg:SF 21 xmm0 [212])) "CALTHTE.f":83 131 {*movsf_internal}
     (nil))
(insn 184 183 185 14 (set (reg:SF 21 xmm0)
        (reg:SF 23 xmm2 [orig:155 _103 ] [155])) "CALTHTE.f":83 131 {*movsf_internal}
     (nil))
(call_insn/u 185 184 186 14 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7ff5f84b4100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALTHTE.f":83 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 186 185 187 14 (set (reg:SF 0 ax [213])
        (reg:SF 21 xmm0)) "CALTHTE.f":83 131 {*movsf_internal}
     (nil))
(insn 187 186 188 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 fac+0 S4 A32])
        (reg:SF 0 ax [213])) "CALTHTE.f":83 131 {*movsf_internal}
     (nil))
(insn 188 187 189 14 (set (reg:SF 21 xmm0 [214])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":84 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.375999927520751953125e+0 [0x0.d81062p+2])
        (nil)))
(insn 189 188 190 14 (set (reg:SF 21 xmm0 [orig:129 _43 ] [129])
        (div:SF (reg:SF 21 xmm0 [214])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [2 tlcl+0 S4 A32]))) "CALTHTE.f":84 841 {*fop_sf_1}
     (nil))
(insn 190 189 191 14 (set (reg:SF 22 xmm1 [215])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":84 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.54000001586973667144775390625e-3 [0x0.a67621p-8])
        (nil)))
(insn 191 190 192 14 (set (reg:SF 21 xmm0 [orig:130 _44 ] [130])
        (minus:SF (reg:SF 21 xmm0 [orig:129 _43 ] [129])
            (reg:SF 22 xmm1 [215]))) "CALTHTE.f":84 841 {*fop_sf_1}
     (nil))
(insn 192 191 193 14 (set (reg:SF 24 xmm3 [orig:131 _45 ] [131])
        (reg:SF 21 xmm0 [orig:130 _44 ] [130])) "CALTHTE.f":84 131 {*movsf_internal}
     (nil))
(insn 193 192 194 14 (set (reg:SF 22 xmm1 [216])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 rmx+0 S4 A32])) "CALTHTE.f":84 131 {*movsf_internal}
     (nil))
(insn 194 193 195 14 (set (reg:SF 21 xmm0 [217])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":84 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 195 194 196 14 (set (reg:SF 21 xmm0 [orig:132 _46 ] [132])
        (mult:SF (reg:SF 21 xmm0 [217])
            (reg:SF 22 xmm1 [216]))) "CALTHTE.f":84 838 {*fop_sf_comm}
     (nil))
(insn 196 195 197 14 (set (reg:SF 23 xmm2 [218])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 rmx+0 S4 A32])) "CALTHTE.f":84 131 {*movsf_internal}
     (nil))
(insn 197 196 198 14 (set (reg:SF 22 xmm1 [219])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":84 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 8.10000002384185791015625e-1 [0x0.cf5c29p+0])
        (nil)))
(insn 198 197 199 14 (set (reg:SF 23 xmm2 [orig:133 _47 ] [133])
        (mult:SF (reg:SF 23 xmm2 [218])
            (reg:SF 22 xmm1 [219]))) "CALTHTE.f":84 838 {*fop_sf_comm}
     (nil))
(insn 199 198 200 14 (set (reg:SF 22 xmm1 [220])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALTHTE.f":84 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 200 199 202 14 (set (reg:SF 22 xmm1 [orig:134 _48 ] [134])
        (plus:SF (reg:SF 22 xmm1 [220])
            (reg:SF 23 xmm2 [orig:133 _47 ] [133]))) "CALTHTE.f":84 838 {*fop_sf_comm}
     (nil))
(insn 202 200 204 14 (set (reg:SF 21 xmm0 [orig:136 _50 ] [136])
        (mult:SF (reg:SF 21 xmm0 [orig:132 _46 ] [132])
            (reg:SF 22 xmm1 [orig:135 _49 ] [135]))) "CALTHTE.f":84 838 {*fop_sf_comm}
     (nil))
(insn 204 202 205 14 (set (reg:SF 21 xmm0 [221])
        (mult:SF (reg:SF 21 xmm0 [orig:137 _51 ] [137])
            (reg:SF 24 xmm3 [orig:131 _45 ] [131]))) "CALTHTE.f":84 838 {*fop_sf_comm}
     (nil))
(insn 205 204 206 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [2 eterm+0 S4 A32])
        (reg:SF 21 xmm0 [221])) "CALTHTE.f":84 131 {*movsf_internal}
     (nil))
(insn 206 205 207 14 (set (reg:SF 21 xmm0 [222])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 t+0 S4 A32])) "CALTHTE.f":85 131 {*movsf_internal}
     (nil))
(insn 207 206 269 14 (set (reg:SF 21 xmm0 [222])
        (mult:SF (reg:SF 21 xmm0 [222])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [2 fac+0 S4 A32]))) "CALTHTE.f":85 838 {*fop_sf_comm}
     (nil))
(insn 269 207 274 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [5 %sfp+-100 S4 A32])
        (reg:SF 21 xmm0 [222])) "CALTHTE.f":85 131 {*movsf_internal}
     (nil))
(note 274 269 271 14 NOTE_INSN_DELETED)
(note 271 274 208 14 NOTE_INSN_DELETED)
(insn 208 271 210 14 (set (reg:SF 21 xmm0 [223])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [2 eterm+0 S4 A32])) "CALTHTE.f":85 131 {*movsf_internal}
     (nil))
(call_insn/u 210 208 270 14 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x7ff5f84a7300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "CALTHTE.f":85 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 270 210 273 14 NOTE_INSN_DELETED)
(note 273 270 212 14 NOTE_INSN_DELETED)
(insn 212 273 213 14 (set (reg:SF 21 xmm0 [224])
        (mult:SF (reg:SF 21 xmm0 [orig:139 _53 ] [139])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [5 %sfp+-100 S4 A32]))) "CALTHTE.f":85 838 {*fop_sf_comm}
     (nil))
(insn 213 212 214 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 thetae+0 S4 A32])
        (reg:SF 21 xmm0 [224])) "CALTHTE.f":85 131 {*movsf_internal}
     (nil))
(insn 214 213 215 14 (set (reg:SI 0 ax [225])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTHTE.f":86 86 {*movsi_internal}
     (nil))
(insn 215 214 216 14 (set (reg:DI 0 ax [orig:140 _54 ] [140])
        (sign_extend:DI (reg:SI 0 ax [225]))) "CALTHTE.f":86 149 {*extendsidi2_rex64}
     (nil))
(insn 216 215 217 14 (parallel [
            (set (reg:DI 1 dx [orig:141 _55 ] [141])
                (mult:DI (reg:DI 0 ax [orig:140 _54 ] [140])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":86 349 {*muldi3_1}
     (nil))
(insn 217 216 218 14 (set (reg:SI 0 ax [226])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTHTE.f":86 86 {*movsi_internal}
     (nil))
(insn 218 217 219 14 (set (reg:DI 0 ax [orig:142 _56 ] [142])
        (sign_extend:DI (reg:SI 0 ax [226]))) "CALTHTE.f":86 149 {*extendsidi2_rex64}
     (nil))
(insn 219 218 220 14 (parallel [
            (set (reg:DI 0 ax [orig:143 _57 ] [143])
                (plus:DI (reg:DI 0 ax [orig:142 _56 ] [142])
                    (reg:DI 1 dx [orig:141 _55 ] [141])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":86 222 {*adddi_1}
     (nil))
(insn 220 219 221 14 (parallel [
            (set (reg:DI 1 dx [orig:144 _58 ] [144])
                (plus:DI (reg:DI 0 ax [orig:143 _57 ] [143])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":86 222 {*adddi_1}
     (nil))
(insn 221 220 222 14 (set (reg/f:DI 0 ax [227])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 thte+0 S8 A64])) "CALTHTE.f":86 85 {*movdi_internal}
     (nil))
(insn 222 221 223 14 (set (reg:SF 21 xmm0 [228])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 thetae+0 S4 A32])) "CALTHTE.f":86 131 {*movsf_internal}
     (nil))
(insn 223 222 224 14 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:144 _58 ] [144])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [227])) [2 *thte_75(D) S4 A32])
        (reg:SF 21 xmm0 [228])) "CALTHTE.f":86 131 {*movsf_internal}
     (nil))
(insn 224 223 245 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":70 221 {*addsi_1}
     (nil))
(jump_insn 245 224 246 14 (set (pc)
        (label_ref 225)) "CALTHTE.f":70 683 {jump}
     (nil)
 -> 225)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151

(barrier 246 245 259)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 14, next block 15, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 259 246 258 20 15 (nil) [1 uses])
(note 258 259 260 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 260 258 228 20 (const_int 0 [0]) "CALTHTE.f":86 718 {nop}
     (nil))
;;  succ:       15 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151

;; basic block 15, loop depth 0, maybe hot
;;  prev block 20, next block 19, flags: (RTL, MODIFIED)
;;  pred:       20 [always]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 228 260 229 15 7 (nil) [0 uses])
(note 229 228 230 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 247 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTHTE.f":69 221 {*addsi_1}
     (nil))
(jump_insn 247 230 248 15 (set (pc)
        (label_ref 231)) "CALTHTE.f":69 683 {jump}
     (nil)
 -> 231)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151

(barrier 248 247 256)
;; basic block 19, loop depth 0, maybe hot
;;  prev block 15, next block 16, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 256 248 255 19 14 (nil) [1 uses])
(note 255 256 257 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 257 255 234 19 (const_int 0 [0]) "CALTHTE.f":70 718 {nop}
     (nil))
;;  succ:       16 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 19, next block 1, flags: (RTL, MODIFIED)
;;  pred:       19 [always]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 234 257 235 16 6 (nil) [0 uses])
(note 235 234 240 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 240 235 261 16 (const_int 0 [0]) "CALTHTE.f":92 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 261 240 0 NOTE_INSN_DELETED)
