
;; Function calvis (calvis_, funcdef_no=0, decl_uid=3776, cgraph_uid=0, symbol_order=0)

calvis (real(kind=4)[29631] * restrict qv, real(kind=4)[29631] * restrict qc, real(kind=4)[29631] * restrict qr, real(kind=4)[29631] * restrict qi, real(kind=4)[29631] * restrict qs, real(kind=4)[29631] * restrict tt, real(kind=4)[29631] * restrict pp, real(kind=4)[29631] * restrict vis)
{
  real(kind=4) D.3907;
  real(kind=4) M.0;
  real(kind=4) D.3905;
  real(kind=4) D.3904;
  real(kind=4) D.3903;
  real(kind=4) D.3902;
  logical(kind=4) D.3901;
  logical(kind=4) D.3898;
  integer(kind=4) D.3895;
  integer(kind=4) D.3894;
  real(kind=4) vovermd;
  real(kind=4) tv;
  real(kind=4) tice;
  real(kind=4) rhowat;
  real(kind=4) rhoice;
  real(kind=4) rhoair;
  real(kind=4) qsnow;
  real(kind=4) qrain;
  real(kind=4) qprc;
  real(kind=4) qclw;
  real(kind=4) qclice;
  real(kind=4) qcld;
  integer(kind=4) j;
  integer(kind=4) i;
  real(kind=4) exponlp;
  real(kind=4) exponlc;
  real(kind=4) exponfp;
  real(kind=4) exponfc;
  real(kind=4) const1;
  real(kind=4) conclp;
  real(kind=4) conclc;
  real(kind=4) concfp;
  real(kind=4) concfc;
  real(kind=4) coeflp;
  real(kind=4) coeflc;
  real(kind=4) coeffp;
  real(kind=4) coeffc;
  real(kind=4) celkel;
  real(kind=4) betav;
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=8) _1;
  integer(kind=8) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  real(kind=4) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  real(kind=4) _12;
  integer(kind=8) _13;
  integer(kind=8) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  real(kind=4) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  real(kind=4) _24;
  integer(kind=8) _25;
  integer(kind=8) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  integer(kind=8) _31;
  integer(kind=8) _32;
  integer(kind=8) _33;
  integer(kind=8) _34;
  integer(kind=8) _35;
  integer(kind=8) _36;
  integer(kind=8) _37;
  integer(kind=8) _38;
  integer(kind=8) _39;
  integer(kind=8) _40;
  integer(kind=8) _41;
  integer(kind=8) _42;
  integer(kind=8) _43;
  integer(kind=8) _44;
  integer(kind=8) _45;
  integer(kind=8) _46;
  integer(kind=8) _47;
  integer(kind=8) _48;
  integer(kind=8) _49;
  real(kind=4) _50;
  integer(kind=8) _51;
  integer(kind=8) _52;
  integer(kind=8) _53;
  integer(kind=8) _54;
  integer(kind=8) _55;
  real(kind=4) _56;
  real(kind=4) _57;
  real(kind=4) _58;
  real(kind=4) _59;
  integer(kind=8) _60;
  integer(kind=8) _61;
  integer(kind=8) _62;
  integer(kind=8) _63;
  integer(kind=8) _64;
  real(kind=4) _65;
  real(kind=4) _66;
  real(kind=4) _67;
  integer(kind=8) _68;
  integer(kind=8) _69;
  integer(kind=8) _70;
  integer(kind=8) _71;
  integer(kind=8) _72;
  real(kind=4) _73;
  real(kind=4) _74;
  real(kind=4) _75;
  real(kind=4) _76;
  real(kind=4) _77;
  real(kind=4) _78;
  real(kind=4) _79;
  real(kind=4) _80;
  real(kind=4) _81;
  real(kind=4) _82;
  real(kind=4) _83;
  real(kind=4) _84;
  real(kind=4) _85;
  real(kind=4) _86;
  real(kind=4) _87;
  real(kind=4) _88;
  real(kind=4) _89;
  real(kind=4) _90;
  real(kind=4) _91;
  real(kind=4) _92;
  real(kind=4) _93;
  real(kind=4) _94;
  real(kind=4) _95;
  real(kind=4) _96;
  real(kind=4) _97;
  real(kind=4) _98;
  logical(kind=4) _99;
  logical(kind=4) _100;
  logical(kind=4) _101;
  integer(kind=8) _102;
  integer(kind=8) _103;
  integer(kind=8) _104;
  integer(kind=8) _105;
  integer(kind=8) _106;
  real(kind=4) _107;
  real(kind=4) M.0_110;
  integer(kind=4) _127;
  integer(kind=4) _128;
  logical(kind=4) _130;
  logical(kind=4) _132;
  real(kind=4) _153;
  real(kind=4) _154;
  real(kind=4) _155;
  real(kind=4) _156;
  real(kind=4) M.0_158;
  real(kind=4) _159;
  real(kind=4) M.0_160;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  celkel_113 = 2.73149993896484375e+2;
  tice_114 = celkel_113 - 1.0e+1;
  coeflc_115 = 1.446999969482421875e+2;
  coeflp_116 = 2.2400000095367431640625e+0;
  coeffc_117 = 3.2779998779296875e+2;
  coeffp_118 = 1.035999965667724609375e+1;
  exponlc_119 = 8.7999999523162841796875e-1;
  exponlp_120 = 7.5e-1;
  exponfc_121 = 1.0e+0;
  exponfp_122 = 7.77599990367889404296875e-1;
  const1_123 = 3.912023067474365234375e+0;
  rhoice_124 = 9.17e+2;
  rhowat_125 = 1.0e+3;
  _127 = parallel.jsta;
  _128 = parallel.jend;
  j_129 = _127;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                9
  # j_109 = PHI <j_129(2), j_164(9)>
  _130 = j_109 > _128;
  if (_130 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       10
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_131 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                8
  # i_108 = PHI <i_131(4), i_163(8)>
  _132 = i_108 > 119;
  if (_132 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       9
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _1 = (integer(kind=8)) j_109;
  _2 = _1 * 119;
  _3 = (integer(kind=8)) i_108;
  _4 = _2 + _3;
  _5 = _4 + -120;
  _6 = *qr_133(D)[_5];
  _7 = (integer(kind=8)) j_109;
  _8 = _7 * 119;
  _9 = (integer(kind=8)) i_108;
  _10 = _8 + _9;
  _11 = _10 + -120;
  _12 = *qs_134(D)[_11];
  qprc_135 = _6 + _12;
  _13 = (integer(kind=8)) j_109;
  _14 = _13 * 119;
  _15 = (integer(kind=8)) i_108;
  _16 = _14 + _15;
  _17 = _16 + -120;
  _18 = *qc_136(D)[_17];
  _19 = (integer(kind=8)) j_109;
  _20 = _19 * 119;
  _21 = (integer(kind=8)) i_108;
  _22 = _20 + _21;
  _23 = _22 + -120;
  _24 = *qi_137(D)[_23];
  qcld_138 = _18 + _24;
  _25 = (integer(kind=8)) j_109;
  _26 = _25 * 119;
  _27 = (integer(kind=8)) i_108;
  _28 = _26 + _27;
  _29 = _28 + -120;
  qrain_139 = *qr_133(D)[_29];
  _30 = (integer(kind=8)) j_109;
  _31 = _30 * 119;
  _32 = (integer(kind=8)) i_108;
  _33 = _31 + _32;
  _34 = _33 + -120;
  qsnow_140 = *qs_134(D)[_34];
  _35 = (integer(kind=8)) j_109;
  _36 = _35 * 119;
  _37 = (integer(kind=8)) i_108;
  _38 = _36 + _37;
  _39 = _38 + -120;
  qclw_141 = *qc_136(D)[_39];
  _40 = (integer(kind=8)) j_109;
  _41 = _40 * 119;
  _42 = (integer(kind=8)) i_108;
  _43 = _41 + _42;
  _44 = _43 + -120;
  qclice_142 = *qi_137(D)[_44];
  _45 = (integer(kind=8)) j_109;
  _46 = _45 * 119;
  _47 = (integer(kind=8)) i_108;
  _48 = _46 + _47;
  _49 = _48 + -120;
  _50 = *tt_143(D)[_49];
  _51 = (integer(kind=8)) j_109;
  _52 = _51 * 119;
  _53 = (integer(kind=8)) i_108;
  _54 = _52 + _53;
  _55 = _54 + -120;
  _56 = *qv_144(D)[_55];
  _57 = _56 * 6.07999980449676513671875e-1;
  _58 = _57 + 1.0e+0;
  _59 = ((_58));
  tv_145 = _50 * _59;
  _60 = (integer(kind=8)) j_109;
  _61 = _60 * 119;
  _62 = (integer(kind=8)) i_108;
  _63 = _61 + _62;
  _64 = _63 + -120;
  _65 = *pp_146(D)[_64];
  _66 = tv_145 * 2.87040008544921875e+2;
  _67 = ((_66));
  rhoair_147 = _65 / _67;
  _68 = (integer(kind=8)) j_109;
  _69 = _68 * 119;
  _70 = (integer(kind=8)) i_108;
  _71 = _69 + _70;
  _72 = _71 + -120;
  _73 = *qv_144(D)[_72];
  _74 = _73 + 1.0e+0;
  _75 = ((_74));
  _76 = _75 / rhoair_147;
  _77 = qclw_141 + qrain_139;
  _78 = ((_77));
  _79 = _78 / rhowat_125;
  _80 = _76 + _79;
  _81 = qclice_142 + qsnow_140;
  _82 = ((_81));
  _83 = _82 / rhoice_124;
  vovermd_148 = _80 + _83;
  _84 = qclw_141 / vovermd_148;
  conclc_149 = _84 * 1.0e+3;
  _85 = qrain_139 / vovermd_148;
  conclp_150 = _85 * 1.0e+3;
  _86 = qclice_142 / vovermd_148;
  concfc_151 = _86 * 1.0e+3;
  _87 = qsnow_140 / vovermd_148;
  concfp_152 = _87 * 1.0e+3;
  _153 = concfc_151;
  _154 = concfp_152;
  _155 = conclc_149;
  _156 = conclp_150;
  _88 = __builtin_powf (_153, exponfc_121);
  _89 = coeffc_117 * _88;
  _90 = __builtin_powf (_154, exponfp_122);
  _91 = coeffp_118 * _90;
  _92 = _89 + _91;
  _93 = __builtin_powf (_155, exponlc_119);
  _94 = coeflc_115 * _93;
  _95 = _92 + _94;
  _96 = __builtin_powf (_156, exponlp_120);
  _97 = coeflp_116 * _96;
  _98 = _95 + _97;
  betav_157 = _98 + 1.00000001335143196001808973960578441619873046875e-10;
  M.0_158 = 8.0e+1;
  _159 = const1_123 / betav_157;
  _99 = _159 < M.0_158;
  _100 = M.0_158 unord M.0_158;
  _101 = _99 | _100;
  if (_101 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 2
;;    pred:       6
  M.0_160 = _159;
;;    succ:       8

;;   basic block 8, loop depth 2
;;    pred:       6
;;                7
  # M.0_110 = PHI <M.0_158(6), M.0_160(7)>
  _102 = (integer(kind=8)) j_109;
  _103 = _102 * 119;
  _104 = (integer(kind=8)) i_108;
  _105 = _103 + _104;
  _106 = _105 + -120;
  _107 = M.0_110 * 1.0e+3;
  *vis_161(D)[_106] = _107;
  i_163 = i_108 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 9, loop depth 1
;;    pred:       5
  j_164 = j_109 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 10, loop depth 0
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
<L11>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (_101 - 101 )
Partition 102 (_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (i_108 - 108 )
Partition 109 (j_109 - 109 )
Partition 110 (M.0_110 - 110 )
Partition 113 (celkel_113 - 113 )
Partition 114 (tice_114 - 114 )
Partition 115 (coeflc_115 - 115 )
Partition 116 (coeflp_116 - 116 )
Partition 117 (coeffc_117 - 117 )
Partition 118 (coeffp_118 - 118 )
Partition 119 (exponlc_119 - 119 )
Partition 120 (exponlp_120 - 120 )
Partition 121 (exponfc_121 - 121 )
Partition 122 (exponfp_122 - 122 )
Partition 123 (const1_123 - 123 )
Partition 124 (rhoice_124 - 124 )
Partition 125 (rhowat_125 - 125 )
Partition 127 (_127 - 127 )
Partition 128 (_128 - 128 )
Partition 129 (j_129 - 129 )
Partition 130 (_130 - 130 )
Partition 131 (i_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (qr_133(D) - 133 )
Partition 134 (qs_134(D) - 134 )
Partition 135 (qprc_135 - 135 )
Partition 136 (qc_136(D) - 136 )
Partition 137 (qi_137(D) - 137 )
Partition 138 (qcld_138 - 138 )
Partition 139 (qrain_139 - 139 )
Partition 140 (qsnow_140 - 140 )
Partition 141 (qclw_141 - 141 )
Partition 142 (qclice_142 - 142 )
Partition 143 (tt_143(D) - 143 )
Partition 144 (qv_144(D) - 144 )
Partition 145 (tv_145 - 145 )
Partition 146 (pp_146(D) - 146 )
Partition 147 (rhoair_147 - 147 )
Partition 148 (vovermd_148 - 148 )
Partition 149 (conclc_149 - 149 )
Partition 150 (conclp_150 - 150 )
Partition 151 (concfc_151 - 151 )
Partition 152 (concfp_152 - 152 )
Partition 153 (_153 - 153 )
Partition 154 (_154 - 154 )
Partition 155 (_155 - 155 )
Partition 156 (_156 - 156 )
Partition 157 (betav_157 - 157 )
Partition 158 (M.0_158 - 158 )
Partition 159 (_159 - 159 )
Partition 160 (M.0_160 - 160 )
Partition 161 (vis_161(D) - 161 )
Partition 163 (i_163 - 163 )
Partition 164 (j_164 - 164 )


Coalescible Partition map 

Partition 0, base 0 (i_108 - 108 131 163 )
Partition 1, base 1 (j_109 - 109 129 164 )
Partition 2, base 2 (M.0_110 - 110 158 159 160 )
Partition 5, base 3 (qr_133(D) - 133 )
Partition 6, base 4 (qs_134(D) - 134 )
Partition 7, base 5 (qc_136(D) - 136 )
Partition 8, base 6 (qi_137(D) - 137 )
Partition 9, base 7 (tt_143(D) - 143 )
Partition 10, base 8 (qv_144(D) - 144 )
Partition 11, base 9 (pp_146(D) - 146 )
Partition 15, base 10 (vis_161(D) - 161 )


Partition map 

Partition 0 (i_108 - 108 )
Partition 1 (j_109 - 109 )
Partition 2 (M.0_110 - 110 )
Partition 3 (j_129 - 129 )
Partition 4 (i_131 - 131 )
Partition 5 (qr_133(D) - 133 )
Partition 6 (qs_134(D) - 134 )
Partition 7 (qc_136(D) - 136 )
Partition 8 (qi_137(D) - 137 )
Partition 9 (tt_143(D) - 143 )
Partition 10 (qv_144(D) - 144 )
Partition 11 (pp_146(D) - 146 )
Partition 12 (M.0_158 - 158 )
Partition 13 (_159 - 159 )
Partition 14 (M.0_160 - 160 )
Partition 15 (vis_161(D) - 161 )
Partition 16 (i_163 - 163 )
Partition 17 (j_164 - 164 )


Conflict graph:
12: 13
13: 12

After sorting:
Sorted Coalesce list:
(2147483646, 0) j_109 <-> j_129
(2147483646, 0) j_109 <-> j_164
(2147483646, 0) i_108 <-> i_131
(2147483646, 0) i_108 <-> i_163
(20000, 0) M.0_110 <-> M.0_158
(10000, 0) _159 <-> M.0_160
(10000, 0) M.0_110 <-> M.0_160

Partition map 

Partition 0 (i_108 - 108 )
Partition 1 (j_109 - 109 )
Partition 2 (M.0_110 - 110 )
Partition 3 (j_129 - 129 )
Partition 4 (i_131 - 131 )
Partition 5 (qr_133(D) - 133 )
Partition 6 (qs_134(D) - 134 )
Partition 7 (qc_136(D) - 136 )
Partition 8 (qi_137(D) - 137 )
Partition 9 (tt_143(D) - 143 )
Partition 10 (qv_144(D) - 144 )
Partition 11 (pp_146(D) - 146 )
Partition 12 (M.0_158 - 158 )
Partition 13 (_159 - 159 )
Partition 14 (M.0_160 - 160 )
Partition 15 (vis_161(D) - 161 )
Partition 16 (i_163 - 163 )
Partition 17 (j_164 - 164 )

Coalesce list: (109)j_109 & (129)j_129 [map: 1, 3] : Success -> 1
Coalesce list: (109)j_109 & (164)j_164 [map: 1, 17] : Success -> 1
Coalesce list: (108)i_108 & (131)i_131 [map: 0, 4] : Success -> 0
Coalesce list: (108)i_108 & (163)i_163 [map: 0, 16] : Success -> 0
Coalesce list: (110)M.0_110 & (158)M.0_158 [map: 2, 12] : Success -> 2
Coalesce list: (159)_159 & (160)M.0_160 [map: 13, 14] : Success -> 13
Coalesce list: (110)M.0_110 & (160)_159 [map: 2, 13] : Fail due to conflict
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (_72 - 72 )
Partition 72 (_73 - 73 )
Partition 73 (_74 - 74 )
Partition 74 (_75 - 75 )
Partition 75 (_76 - 76 )
Partition 76 (_77 - 77 )
Partition 77 (_78 - 78 )
Partition 78 (_79 - 79 )
Partition 79 (_80 - 80 )
Partition 80 (_81 - 81 )
Partition 81 (_82 - 82 )
Partition 82 (_83 - 83 )
Partition 83 (_84 - 84 )
Partition 84 (_85 - 85 )
Partition 85 (_86 - 86 )
Partition 86 (_87 - 87 )
Partition 87 (_88 - 88 )
Partition 88 (_89 - 89 )
Partition 89 (_90 - 90 )
Partition 90 (_91 - 91 )
Partition 91 (_92 - 92 )
Partition 92 (_93 - 93 )
Partition 93 (_94 - 94 )
Partition 94 (_95 - 95 )
Partition 95 (_96 - 96 )
Partition 96 (_97 - 97 )
Partition 97 (_98 - 98 )
Partition 98 (_99 - 99 )
Partition 99 (_100 - 100 )
Partition 100 (_101 - 101 )
Partition 101 (_102 - 102 )
Partition 102 (_103 - 103 )
Partition 103 (_104 - 104 )
Partition 104 (_105 - 105 )
Partition 105 (_106 - 106 )
Partition 106 (_107 - 107 )
Partition 107 (i_108 - 108 131 163 )
Partition 108 (j_109 - 109 129 164 )
Partition 109 (M.0_110 - 110 158 )
Partition 110 (celkel_113 - 113 )
Partition 111 (tice_114 - 114 )
Partition 112 (coeflc_115 - 115 )
Partition 113 (coeflp_116 - 116 )
Partition 114 (coeffc_117 - 117 )
Partition 115 (coeffp_118 - 118 )
Partition 116 (exponlc_119 - 119 )
Partition 117 (exponlp_120 - 120 )
Partition 118 (exponfc_121 - 121 )
Partition 119 (exponfp_122 - 122 )
Partition 120 (const1_123 - 123 )
Partition 121 (rhoice_124 - 124 )
Partition 122 (rhowat_125 - 125 )
Partition 123 (_127 - 127 )
Partition 124 (_128 - 128 )
Partition 125 (_130 - 130 )
Partition 126 (_132 - 132 )
Partition 127 (qr_133(D) - 133 )
Partition 128 (qs_134(D) - 134 )
Partition 129 (qprc_135 - 135 )
Partition 130 (qc_136(D) - 136 )
Partition 131 (qi_137(D) - 137 )
Partition 132 (qcld_138 - 138 )
Partition 133 (qrain_139 - 139 )
Partition 134 (qsnow_140 - 140 )
Partition 135 (qclw_141 - 141 )
Partition 136 (qclice_142 - 142 )
Partition 137 (tt_143(D) - 143 )
Partition 138 (qv_144(D) - 144 )
Partition 139 (tv_145 - 145 )
Partition 140 (pp_146(D) - 146 )
Partition 141 (rhoair_147 - 147 )
Partition 142 (vovermd_148 - 148 )
Partition 143 (conclc_149 - 149 )
Partition 144 (conclp_150 - 150 )
Partition 145 (concfc_151 - 151 )
Partition 146 (concfp_152 - 152 )
Partition 147 (_153 - 153 )
Partition 148 (_154 - 154 )
Partition 149 (_155 - 155 )
Partition 150 (_156 - 156 )
Partition 151 (betav_157 - 157 )
Partition 152 (_159 - 159 160 )
Partition 153 (vis_161(D) - 161 )

calvis (real(kind=4)[29631] * restrict qv, real(kind=4)[29631] * restrict qc, real(kind=4)[29631] * restrict qr, real(kind=4)[29631] * restrict qi, real(kind=4)[29631] * restrict qs, real(kind=4)[29631] * restrict tt, real(kind=4)[29631] * restrict pp, real(kind=4)[29631] * restrict vis)
{
  real(kind=4) D.3907;
  real(kind=4) M.0;
  real(kind=4) D.3905;
  real(kind=4) D.3904;
  real(kind=4) D.3903;
  real(kind=4) D.3902;
  logical(kind=4) D.3901;
  logical(kind=4) D.3898;
  integer(kind=4) D.3895;
  integer(kind=4) D.3894;
  real(kind=4) vovermd;
  real(kind=4) tv;
  real(kind=4) tice;
  real(kind=4) rhowat;
  real(kind=4) rhoice;
  real(kind=4) rhoair;
  real(kind=4) qsnow;
  real(kind=4) qrain;
  real(kind=4) qprc;
  real(kind=4) qclw;
  real(kind=4) qclice;
  real(kind=4) qcld;
  integer(kind=4) j;
  integer(kind=4) i;
  real(kind=4) exponlp;
  real(kind=4) exponlc;
  real(kind=4) exponfp;
  real(kind=4) exponfc;
  real(kind=4) const1;
  real(kind=4) conclp;
  real(kind=4) conclc;
  real(kind=4) concfp;
  real(kind=4) concfc;
  real(kind=4) coeflp;
  real(kind=4) coeflc;
  real(kind=4) coeffp;
  real(kind=4) coeffc;
  real(kind=4) celkel;
  real(kind=4) betav;
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=8) _1;
  integer(kind=8) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  real(kind=4) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  real(kind=4) _12;
  integer(kind=8) _13;
  integer(kind=8) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  real(kind=4) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  real(kind=4) _24;
  integer(kind=8) _25;
  integer(kind=8) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  integer(kind=8) _31;
  integer(kind=8) _32;
  integer(kind=8) _33;
  integer(kind=8) _34;
  integer(kind=8) _35;
  integer(kind=8) _36;
  integer(kind=8) _37;
  integer(kind=8) _38;
  integer(kind=8) _39;
  integer(kind=8) _40;
  integer(kind=8) _41;
  integer(kind=8) _42;
  integer(kind=8) _43;
  integer(kind=8) _44;
  integer(kind=8) _45;
  integer(kind=8) _46;
  integer(kind=8) _47;
  integer(kind=8) _48;
  integer(kind=8) _49;
  real(kind=4) _50;
  integer(kind=8) _51;
  integer(kind=8) _52;
  integer(kind=8) _53;
  integer(kind=8) _54;
  integer(kind=8) _55;
  real(kind=4) _56;
  real(kind=4) _57;
  real(kind=4) _58;
  real(kind=4) _59;
  integer(kind=8) _60;
  integer(kind=8) _61;
  integer(kind=8) _62;
  integer(kind=8) _63;
  integer(kind=8) _64;
  real(kind=4) _65;
  real(kind=4) _66;
  real(kind=4) _67;
  integer(kind=8) _68;
  integer(kind=8) _69;
  integer(kind=8) _70;
  integer(kind=8) _71;
  integer(kind=8) _72;
  real(kind=4) _73;
  real(kind=4) _74;
  real(kind=4) _75;
  real(kind=4) _76;
  real(kind=4) _77;
  real(kind=4) _78;
  real(kind=4) _79;
  real(kind=4) _80;
  real(kind=4) _81;
  real(kind=4) _82;
  real(kind=4) _83;
  real(kind=4) _84;
  real(kind=4) _85;
  real(kind=4) _86;
  real(kind=4) _87;
  real(kind=4) _88;
  real(kind=4) _89;
  real(kind=4) _90;
  real(kind=4) _91;
  real(kind=4) _92;
  real(kind=4) _93;
  real(kind=4) _94;
  real(kind=4) _95;
  real(kind=4) _96;
  real(kind=4) _97;
  real(kind=4) _98;
  logical(kind=4) _99;
  logical(kind=4) _100;
  logical(kind=4) _101;
  integer(kind=8) _102;
  integer(kind=8) _103;
  integer(kind=8) _104;
  integer(kind=8) _105;
  integer(kind=8) _106;
  real(kind=4) _107;
  real(kind=4) M.0_110;
  integer(kind=4) _127;
  integer(kind=4) _128;
  logical(kind=4) _130;
  logical(kind=4) _132;
  real(kind=4) _153;
  real(kind=4) _154;
  real(kind=4) _155;
  real(kind=4) _156;
  real(kind=4) M.0_158;
  real(kind=4) _159;
  real(kind=4) M.0_160;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  celkel_113 = 2.73149993896484375e+2;
  tice_114 = celkel_113 - 1.0e+1;
  coeflc_115 = 1.446999969482421875e+2;
  coeflp_116 = 2.2400000095367431640625e+0;
  coeffc_117 = 3.2779998779296875e+2;
  coeffp_118 = 1.035999965667724609375e+1;
  exponlc_119 = 8.7999999523162841796875e-1;
  exponlp_120 = 7.5e-1;
  exponfc_121 = 1.0e+0;
  exponfp_122 = 7.77599990367889404296875e-1;
  const1_123 = 3.912023067474365234375e+0;
  rhoice_124 = 9.17e+2;
  rhowat_125 = 1.0e+3;
  _127 = parallel.jsta;
  _128 = parallel.jend;
  j_129 = _127;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                9
  # j_109 = PHI <j_129(2), j_164(9)>
  _130 = j_109 > _128;
  if (_130 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       10
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_131 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                8
  # i_108 = PHI <i_131(4), i_163(8)>
  _132 = i_108 > 119;
  if (_132 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       9
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _1 = (integer(kind=8)) j_109;
  _2 = _1 * 119;
  _3 = (integer(kind=8)) i_108;
  _4 = _2 + _3;
  _5 = _4 + -120;
  _6 = *qr_133(D)[_5];
  _7 = (integer(kind=8)) j_109;
  _8 = _7 * 119;
  _9 = (integer(kind=8)) i_108;
  _10 = _8 + _9;
  _11 = _10 + -120;
  _12 = *qs_134(D)[_11];
  qprc_135 = _6 + _12;
  _13 = (integer(kind=8)) j_109;
  _14 = _13 * 119;
  _15 = (integer(kind=8)) i_108;
  _16 = _14 + _15;
  _17 = _16 + -120;
  _18 = *qc_136(D)[_17];
  _19 = (integer(kind=8)) j_109;
  _20 = _19 * 119;
  _21 = (integer(kind=8)) i_108;
  _22 = _20 + _21;
  _23 = _22 + -120;
  _24 = *qi_137(D)[_23];
  qcld_138 = _18 + _24;
  _25 = (integer(kind=8)) j_109;
  _26 = _25 * 119;
  _27 = (integer(kind=8)) i_108;
  _28 = _26 + _27;
  _29 = _28 + -120;
  qrain_139 = *qr_133(D)[_29];
  _30 = (integer(kind=8)) j_109;
  _31 = _30 * 119;
  _32 = (integer(kind=8)) i_108;
  _33 = _31 + _32;
  _34 = _33 + -120;
  qsnow_140 = *qs_134(D)[_34];
  _35 = (integer(kind=8)) j_109;
  _36 = _35 * 119;
  _37 = (integer(kind=8)) i_108;
  _38 = _36 + _37;
  _39 = _38 + -120;
  qclw_141 = *qc_136(D)[_39];
  _40 = (integer(kind=8)) j_109;
  _41 = _40 * 119;
  _42 = (integer(kind=8)) i_108;
  _43 = _41 + _42;
  _44 = _43 + -120;
  qclice_142 = *qi_137(D)[_44];
  _45 = (integer(kind=8)) j_109;
  _46 = _45 * 119;
  _47 = (integer(kind=8)) i_108;
  _48 = _46 + _47;
  _49 = _48 + -120;
  _50 = *tt_143(D)[_49];
  _51 = (integer(kind=8)) j_109;
  _52 = _51 * 119;
  _53 = (integer(kind=8)) i_108;
  _54 = _52 + _53;
  _55 = _54 + -120;
  _56 = *qv_144(D)[_55];
  _57 = _56 * 6.07999980449676513671875e-1;
  _58 = _57 + 1.0e+0;
  _59 = ((_58));
  tv_145 = _50 * _59;
  _60 = (integer(kind=8)) j_109;
  _61 = _60 * 119;
  _62 = (integer(kind=8)) i_108;
  _63 = _61 + _62;
  _64 = _63 + -120;
  _65 = *pp_146(D)[_64];
  _66 = tv_145 * 2.87040008544921875e+2;
  _67 = ((_66));
  rhoair_147 = _65 / _67;
  _68 = (integer(kind=8)) j_109;
  _69 = _68 * 119;
  _70 = (integer(kind=8)) i_108;
  _71 = _69 + _70;
  _72 = _71 + -120;
  _73 = *qv_144(D)[_72];
  _74 = _73 + 1.0e+0;
  _75 = ((_74));
  _76 = _75 / rhoair_147;
  _77 = qclw_141 + qrain_139;
  _78 = ((_77));
  _79 = _78 / rhowat_125;
  _80 = _76 + _79;
  _81 = qclice_142 + qsnow_140;
  _82 = ((_81));
  _83 = _82 / rhoice_124;
  vovermd_148 = _80 + _83;
  _84 = qclw_141 / vovermd_148;
  conclc_149 = _84 * 1.0e+3;
  _85 = qrain_139 / vovermd_148;
  conclp_150 = _85 * 1.0e+3;
  _86 = qclice_142 / vovermd_148;
  concfc_151 = _86 * 1.0e+3;
  _87 = qsnow_140 / vovermd_148;
  concfp_152 = _87 * 1.0e+3;
  _153 = concfc_151;
  _154 = concfp_152;
  _155 = conclc_149;
  _156 = conclp_150;
  _88 = __builtin_powf (_153, exponfc_121);
  _89 = coeffc_117 * _88;
  _90 = __builtin_powf (_154, exponfp_122);
  _91 = coeffp_118 * _90;
  _92 = _89 + _91;
  _93 = __builtin_powf (_155, exponlc_119);
  _94 = coeflc_115 * _93;
  _95 = _92 + _94;
  _96 = __builtin_powf (_156, exponlp_120);
  _97 = coeflp_116 * _96;
  _98 = _95 + _97;
  betav_157 = _98 + 1.00000001335143196001808973960578441619873046875e-10;
  M.0_158 = 8.0e+1;
  _159 = const1_123 / betav_157;
  _99 = _159 < M.0_158;
  _100 = M.0_158 unord M.0_158;
  _101 = _99 | _100;
  if (_101 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 2
;;    pred:       6
  M.0_160 = _159;
;;    succ:       8

;;   basic block 8, loop depth 2
;;    pred:       6
;;                7
  # M.0_110 = PHI <M.0_158(6), M.0_160(7)>
  _102 = (integer(kind=8)) j_109;
  _103 = _102 * 119;
  _104 = (integer(kind=8)) i_108;
  _105 = _103 + _104;
  _106 = _105 + -120;
  _107 = M.0_110 * 1.0e+3;
  *vis_161(D)[_106] = _107;
  i_163 = i_108 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 9, loop depth 1
;;    pred:       5
  j_164 = j_109 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 10, loop depth 0
;;    pred:       3
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
<L11>:
  return;
;;    succ:       EXIT

}


Inserting a partition copy on edge BB7->BB8 : PART.109 = PART.152

;; Generating RTL for gimple basic block 2

;; celkel_113 = 2.73149993896484375e+2;

(insn 12 11 13 (set (reg:SF 204)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALVIS.f":68 -1
     (nil))

(insn 13 12 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 celkel+0 S4 A32])
        (reg:SF 204)) "CALVIS.f":68 -1
     (nil))

;; tice_114 = celkel_113 - 1.0e+1;

(insn 14 13 15 (set (reg:SF 206)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 celkel+0 S4 A32])) "CALVIS.f":69 -1
     (nil))

(insn 15 14 16 (set (reg:SF 207)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALVIS.f":69 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+1 [0x0.ap+4])
        (nil)))

(insn 16 15 17 (set (reg:SF 205)
        (minus:SF (reg:SF 206)
            (reg:SF 207))) "CALVIS.f":69 -1
     (nil))

(insn 17 16 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 tice+0 S4 A32])
        (reg:SF 205)) "CALVIS.f":69 -1
     (nil))

;; coeflc_115 = 1.446999969482421875e+2;

(insn 18 17 19 (set (reg:SF 208)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALVIS.f":70 -1
     (nil))

(insn 19 18 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 coeflc+0 S4 A32])
        (reg:SF 208)) "CALVIS.f":70 -1
     (nil))

;; coeflp_116 = 2.2400000095367431640625e+0;

(insn 20 19 21 (set (reg:SF 209)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALVIS.f":71 -1
     (nil))

(insn 21 20 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 coeflp+0 S4 A32])
        (reg:SF 209)) "CALVIS.f":71 -1
     (nil))

;; coeffc_117 = 3.2779998779296875e+2;

(insn 22 21 23 (set (reg:SF 210)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALVIS.f":72 -1
     (nil))

(insn 23 22 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 coeffc+0 S4 A32])
        (reg:SF 210)) "CALVIS.f":72 -1
     (nil))

;; coeffp_118 = 1.035999965667724609375e+1;

(insn 24 23 25 (set (reg:SF 211)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALVIS.f":73 -1
     (nil))

(insn 25 24 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 coeffp+0 S4 A32])
        (reg:SF 211)) "CALVIS.f":73 -1
     (nil))

;; exponlc_119 = 8.7999999523162841796875e-1;

(insn 26 25 27 (set (reg:SF 212)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALVIS.f":74 -1
     (nil))

(insn 27 26 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 exponlc+0 S4 A32])
        (reg:SF 212)) "CALVIS.f":74 -1
     (nil))

;; exponlp_120 = 7.5e-1;

(insn 28 27 29 (set (reg:SF 213)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALVIS.f":75 -1
     (nil))

(insn 29 28 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 exponlp+0 S4 A32])
        (reg:SF 213)) "CALVIS.f":75 -1
     (nil))

;; exponfc_121 = 1.0e+0;

(insn 30 29 31 (set (reg:SF 214)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALVIS.f":76 -1
     (nil))

(insn 31 30 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 exponfc+0 S4 A32])
        (reg:SF 214)) "CALVIS.f":76 -1
     (nil))

;; exponfp_122 = 7.77599990367889404296875e-1;

(insn 32 31 33 (set (reg:SF 215)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALVIS.f":77 -1
     (nil))

(insn 33 32 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 exponfp+0 S4 A32])
        (reg:SF 215)) "CALVIS.f":77 -1
     (nil))

;; const1_123 = 3.912023067474365234375e+0;

(insn 34 33 35 (set (reg:SF 216)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALVIS.f":78 -1
     (nil))

(insn 35 34 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [2 const1+0 S4 A32])
        (reg:SF 216)) "CALVIS.f":78 -1
     (nil))

;; rhoice_124 = 9.17e+2;

(insn 36 35 37 (set (reg:SF 217)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALVIS.f":79 -1
     (nil))

(insn 37 36 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 rhoice+0 S4 A32])
        (reg:SF 217)) "CALVIS.f":79 -1
     (nil))

;; rhowat_125 = 1.0e+3;

(insn 38 37 39 (set (reg:SF 218)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":80 -1
     (nil))

(insn 39 38 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [2 rhowat+0 S4 A32])
        (reg:SF 218)) "CALVIS.f":80 -1
     (nil))

;; _127 = parallel.jsta;

(insn 40 39 0 (set (reg:SI 195 [ _127 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0ebdd53870 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALVIS.f":82 -1
     (nil))

;; _128 = parallel.jend;

(insn 41 40 0 (set (reg:SI 196 [ _128 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0ebdd53870 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALVIS.f":82 -1
     (nil))

;; j_129 = _127;

(insn 42 41 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 195 [ _127 ])) "CALVIS.f":82 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _130 = j_109 > _128;

(insn 44 43 45 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 196 [ _128 ]))) "CALVIS.f":82 -1
     (nil))

(insn 45 44 46 (set (reg:QI 219)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVIS.f":82 -1
     (nil))

(insn 46 45 0 (set (reg:SI 197 [ _130 ])
        (zero_extend:SI (reg:QI 219))) "CALVIS.f":82 -1
     (nil))

;; if (_130 != 0)

(insn 47 46 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 197 [ _130 ])
            (const_int 0 [0]))) "CALVIS.f":82 -1
     (nil))

(jump_insn 48 47 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALVIS.f":82 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; i_131 = 1;

(insn 50 49 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALVIS.f":83 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _132 = i_108 > 119;

(insn 52 51 53 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALVIS.f":83 -1
     (nil))

(insn 53 52 54 (set (reg:QI 220)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVIS.f":83 -1
     (nil))

(insn 54 53 0 (set (reg:SI 198 [ _132 ])
        (zero_extend:SI (reg:QI 220))) "CALVIS.f":83 -1
     (nil))

;; if (_132 != 0)

(insn 55 54 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 198 [ _132 ])
            (const_int 0 [0]))) "CALVIS.f":83 -1
     (nil))

(jump_insn 56 55 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALVIS.f":83 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _1 = (integer(kind=8)) j_109;

(insn 58 57 59 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":99 -1
     (nil))

(insn 59 58 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 221))) "CALVIS.f":99 -1
     (nil))

;; _2 = _1 * 119;

(insn 60 59 0 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 -1
     (nil))

;; _3 = (integer(kind=8)) i_108;

(insn 61 60 62 (set (reg:SI 222)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":99 -1
     (nil))

(insn 62 61 0 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 222))) "CALVIS.f":99 -1
     (nil))

;; _4 = _2 + _3;

(insn 63 62 0 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 -1
     (nil))

;; _5 = _4 + -120;

(insn 64 63 0 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 -1
     (nil))

;; _6 = *qr_133(D)[_5];

(insn 65 64 66 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [3 qr+0 S8 A64])) "CALVIS.f":99 -1
     (nil))

(insn 66 65 0 (set (reg:SF 92 [ _6 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 91 [ _5 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 223)) [2 *qr_133(D) S4 A32])) "CALVIS.f":99 -1
     (nil))

;; _7 = (integer(kind=8)) j_109;

(insn 67 66 68 (set (reg:SI 224)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":99 -1
     (nil))

(insn 68 67 0 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 224))) "CALVIS.f":99 -1
     (nil))

;; _8 = _7 * 119;

(insn 69 68 0 (parallel [
            (set (reg:DI 94 [ _8 ])
                (mult:DI (reg:DI 93 [ _7 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 -1
     (nil))

;; _9 = (integer(kind=8)) i_108;

(insn 70 69 71 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":99 -1
     (nil))

(insn 71 70 0 (set (reg:DI 95 [ _9 ])
        (sign_extend:DI (reg:SI 225))) "CALVIS.f":99 -1
     (nil))

;; _10 = _8 + _9;

(insn 72 71 0 (parallel [
            (set (reg:DI 96 [ _10 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 -1
     (nil))

;; _11 = _10 + -120;

(insn 73 72 0 (parallel [
            (set (reg:DI 97 [ _11 ])
                (plus:DI (reg:DI 96 [ _10 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 -1
     (nil))

;; _12 = *qs_134(D)[_11];

(insn 74 73 75 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 qs+0 S8 A64])) "CALVIS.f":99 -1
     (nil))

(insn 75 74 0 (set (reg:SF 98 [ _12 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 226)) [2 *qs_134(D) S4 A32])) "CALVIS.f":99 -1
     (nil))

;; qprc_135 = _6 + _12;

(insn 76 75 77 (set (reg:SF 227)
        (plus:SF (reg:SF 92 [ _6 ])
            (reg:SF 98 [ _12 ]))) "CALVIS.f":99 -1
     (nil))

(insn 77 76 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 qprc+0 S4 A32])
        (reg:SF 227)) "CALVIS.f":99 -1
     (nil))

;; _13 = (integer(kind=8)) j_109;

(insn 78 77 79 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":100 -1
     (nil))

(insn 79 78 0 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 228))) "CALVIS.f":100 -1
     (nil))

;; _14 = _13 * 119;

(insn 80 79 0 (parallel [
            (set (reg:DI 100 [ _14 ])
                (mult:DI (reg:DI 99 [ _13 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 -1
     (nil))

;; _15 = (integer(kind=8)) i_108;

(insn 81 80 82 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":100 -1
     (nil))

(insn 82 81 0 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 229))) "CALVIS.f":100 -1
     (nil))

;; _16 = _14 + _15;

(insn 83 82 0 (parallel [
            (set (reg:DI 102 [ _16 ])
                (plus:DI (reg:DI 100 [ _14 ])
                    (reg:DI 101 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 -1
     (nil))

;; _17 = _16 + -120;

(insn 84 83 0 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 -1
     (nil))

;; _18 = *qc_136(D)[_17];

(insn 85 84 86 (set (reg/f:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [3 qc+0 S8 A64])) "CALVIS.f":100 -1
     (nil))

(insn 86 85 0 (set (reg:SF 104 [ _18 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 230)) [2 *qc_136(D) S4 A32])) "CALVIS.f":100 -1
     (nil))

;; _19 = (integer(kind=8)) j_109;

(insn 87 86 88 (set (reg:SI 231)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":100 -1
     (nil))

(insn 88 87 0 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 231))) "CALVIS.f":100 -1
     (nil))

;; _20 = _19 * 119;

(insn 89 88 0 (parallel [
            (set (reg:DI 106 [ _20 ])
                (mult:DI (reg:DI 105 [ _19 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 -1
     (nil))

;; _21 = (integer(kind=8)) i_108;

(insn 90 89 91 (set (reg:SI 232)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":100 -1
     (nil))

(insn 91 90 0 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 232))) "CALVIS.f":100 -1
     (nil))

;; _22 = _20 + _21;

(insn 92 91 0 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 106 [ _20 ])
                    (reg:DI 107 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 -1
     (nil))

;; _23 = _22 + -120;

(insn 93 92 0 (parallel [
            (set (reg:DI 109 [ _23 ])
                (plus:DI (reg:DI 108 [ _22 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 -1
     (nil))

;; _24 = *qi_137(D)[_23];

(insn 94 93 95 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [3 qi+0 S8 A64])) "CALVIS.f":100 -1
     (nil))

(insn 95 94 0 (set (reg:SF 110 [ _24 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 109 [ _23 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 233)) [2 *qi_137(D) S4 A32])) "CALVIS.f":100 -1
     (nil))

;; qcld_138 = _18 + _24;

(insn 96 95 97 (set (reg:SF 234)
        (plus:SF (reg:SF 104 [ _18 ])
            (reg:SF 110 [ _24 ]))) "CALVIS.f":100 -1
     (nil))

(insn 97 96 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [2 qcld+0 S4 A32])
        (reg:SF 234)) "CALVIS.f":100 -1
     (nil))

;; _25 = (integer(kind=8)) j_109;

(insn 98 97 99 (set (reg:SI 235)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":101 -1
     (nil))

(insn 99 98 0 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 235))) "CALVIS.f":101 -1
     (nil))

;; _26 = _25 * 119;

(insn 100 99 0 (parallel [
            (set (reg:DI 112 [ _26 ])
                (mult:DI (reg:DI 111 [ _25 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":101 -1
     (nil))

;; _27 = (integer(kind=8)) i_108;

(insn 101 100 102 (set (reg:SI 236)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":101 -1
     (nil))

(insn 102 101 0 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 236))) "CALVIS.f":101 -1
     (nil))

;; _28 = _26 + _27;

(insn 103 102 0 (parallel [
            (set (reg:DI 114 [ _28 ])
                (plus:DI (reg:DI 112 [ _26 ])
                    (reg:DI 113 [ _27 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":101 -1
     (nil))

;; _29 = _28 + -120;

(insn 104 103 0 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":101 -1
     (nil))

;; qrain_139 = *qr_133(D)[_29];

(insn 105 104 106 (set (reg/f:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [3 qr+0 S8 A64])) "CALVIS.f":101 -1
     (nil))

(insn 106 105 107 (set (reg:SF 238)
        (mem:SF (plus:DI (mult:DI (reg:DI 115 [ _29 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 237)) [2 *qr_133(D) S4 A32])) "CALVIS.f":101 -1
     (nil))

(insn 107 106 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 qrain+0 S4 A32])
        (reg:SF 238)) "CALVIS.f":101 -1
     (nil))

;; _30 = (integer(kind=8)) j_109;

(insn 108 107 109 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":102 -1
     (nil))

(insn 109 108 0 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 239))) "CALVIS.f":102 -1
     (nil))

;; _31 = _30 * 119;

(insn 110 109 0 (parallel [
            (set (reg:DI 117 [ _31 ])
                (mult:DI (reg:DI 116 [ _30 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":102 -1
     (nil))

;; _32 = (integer(kind=8)) i_108;

(insn 111 110 112 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":102 -1
     (nil))

(insn 112 111 0 (set (reg:DI 118 [ _32 ])
        (sign_extend:DI (reg:SI 240))) "CALVIS.f":102 -1
     (nil))

;; _33 = _31 + _32;

(insn 113 112 0 (parallel [
            (set (reg:DI 119 [ _33 ])
                (plus:DI (reg:DI 117 [ _31 ])
                    (reg:DI 118 [ _32 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":102 -1
     (nil))

;; _34 = _33 + -120;

(insn 114 113 0 (parallel [
            (set (reg:DI 120 [ _34 ])
                (plus:DI (reg:DI 119 [ _33 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":102 -1
     (nil))

;; qsnow_140 = *qs_134(D)[_34];

(insn 115 114 116 (set (reg/f:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 qs+0 S8 A64])) "CALVIS.f":102 -1
     (nil))

(insn 116 115 117 (set (reg:SF 242)
        (mem:SF (plus:DI (mult:DI (reg:DI 120 [ _34 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 241)) [2 *qs_134(D) S4 A32])) "CALVIS.f":102 -1
     (nil))

(insn 117 116 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [2 qsnow+0 S4 A32])
        (reg:SF 242)) "CALVIS.f":102 -1
     (nil))

;; _35 = (integer(kind=8)) j_109;

(insn 118 117 119 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":103 -1
     (nil))

(insn 119 118 0 (set (reg:DI 121 [ _35 ])
        (sign_extend:DI (reg:SI 243))) "CALVIS.f":103 -1
     (nil))

;; _36 = _35 * 119;

(insn 120 119 0 (parallel [
            (set (reg:DI 122 [ _36 ])
                (mult:DI (reg:DI 121 [ _35 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":103 -1
     (nil))

;; _37 = (integer(kind=8)) i_108;

(insn 121 120 122 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":103 -1
     (nil))

(insn 122 121 0 (set (reg:DI 123 [ _37 ])
        (sign_extend:DI (reg:SI 244))) "CALVIS.f":103 -1
     (nil))

;; _38 = _36 + _37;

(insn 123 122 0 (parallel [
            (set (reg:DI 124 [ _38 ])
                (plus:DI (reg:DI 122 [ _36 ])
                    (reg:DI 123 [ _37 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":103 -1
     (nil))

;; _39 = _38 + -120;

(insn 124 123 0 (parallel [
            (set (reg:DI 125 [ _39 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":103 -1
     (nil))

;; qclw_141 = *qc_136(D)[_39];

(insn 125 124 126 (set (reg/f:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [3 qc+0 S8 A64])) "CALVIS.f":103 -1
     (nil))

(insn 126 125 127 (set (reg:SF 246)
        (mem:SF (plus:DI (mult:DI (reg:DI 125 [ _39 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 245)) [2 *qc_136(D) S4 A32])) "CALVIS.f":103 -1
     (nil))

(insn 127 126 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [2 qclw+0 S4 A32])
        (reg:SF 246)) "CALVIS.f":103 -1
     (nil))

;; _40 = (integer(kind=8)) j_109;

(insn 128 127 129 (set (reg:SI 247)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":104 -1
     (nil))

(insn 129 128 0 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 247))) "CALVIS.f":104 -1
     (nil))

;; _41 = _40 * 119;

(insn 130 129 0 (parallel [
            (set (reg:DI 127 [ _41 ])
                (mult:DI (reg:DI 126 [ _40 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":104 -1
     (nil))

;; _42 = (integer(kind=8)) i_108;

(insn 131 130 132 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":104 -1
     (nil))

(insn 132 131 0 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 248))) "CALVIS.f":104 -1
     (nil))

;; _43 = _41 + _42;

(insn 133 132 0 (parallel [
            (set (reg:DI 129 [ _43 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (reg:DI 128 [ _42 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":104 -1
     (nil))

;; _44 = _43 + -120;

(insn 134 133 0 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 129 [ _43 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":104 -1
     (nil))

;; qclice_142 = *qi_137(D)[_44];

(insn 135 134 136 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [3 qi+0 S8 A64])) "CALVIS.f":104 -1
     (nil))

(insn 136 135 137 (set (reg:SF 250)
        (mem:SF (plus:DI (mult:DI (reg:DI 130 [ _44 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 249)) [2 *qi_137(D) S4 A32])) "CALVIS.f":104 -1
     (nil))

(insn 137 136 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [2 qclice+0 S4 A32])
        (reg:SF 250)) "CALVIS.f":104 -1
     (nil))

;; _45 = (integer(kind=8)) j_109;

(insn 138 137 139 (set (reg:SI 251)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":107 -1
     (nil))

(insn 139 138 0 (set (reg:DI 131 [ _45 ])
        (sign_extend:DI (reg:SI 251))) "CALVIS.f":107 -1
     (nil))

;; _46 = _45 * 119;

(insn 140 139 0 (parallel [
            (set (reg:DI 132 [ _46 ])
                (mult:DI (reg:DI 131 [ _45 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 -1
     (nil))

;; _47 = (integer(kind=8)) i_108;

(insn 141 140 142 (set (reg:SI 252)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":107 -1
     (nil))

(insn 142 141 0 (set (reg:DI 133 [ _47 ])
        (sign_extend:DI (reg:SI 252))) "CALVIS.f":107 -1
     (nil))

;; _48 = _46 + _47;

(insn 143 142 0 (parallel [
            (set (reg:DI 134 [ _48 ])
                (plus:DI (reg:DI 132 [ _46 ])
                    (reg:DI 133 [ _47 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 -1
     (nil))

;; _49 = _48 + -120;

(insn 144 143 0 (parallel [
            (set (reg:DI 135 [ _49 ])
                (plus:DI (reg:DI 134 [ _48 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 -1
     (nil))

;; _50 = *tt_143(D)[_49];

(insn 145 144 146 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 tt+0 S8 A64])) "CALVIS.f":107 -1
     (nil))

(insn 146 145 0 (set (reg:SF 136 [ _50 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 135 [ _49 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 253)) [2 *tt_143(D) S4 A32])) "CALVIS.f":107 -1
     (nil))

;; _51 = (integer(kind=8)) j_109;

(insn 147 146 148 (set (reg:SI 254)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":107 -1
     (nil))

(insn 148 147 0 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 254))) "CALVIS.f":107 -1
     (nil))

;; _52 = _51 * 119;

(insn 149 148 0 (parallel [
            (set (reg:DI 138 [ _52 ])
                (mult:DI (reg:DI 137 [ _51 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 -1
     (nil))

;; _53 = (integer(kind=8)) i_108;

(insn 150 149 151 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":107 -1
     (nil))

(insn 151 150 0 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 255))) "CALVIS.f":107 -1
     (nil))

;; _54 = _52 + _53;

(insn 152 151 0 (parallel [
            (set (reg:DI 140 [ _54 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (reg:DI 139 [ _53 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 -1
     (nil))

;; _55 = _54 + -120;

(insn 153 152 0 (parallel [
            (set (reg:DI 141 [ _55 ])
                (plus:DI (reg:DI 140 [ _54 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 -1
     (nil))

;; _56 = *qv_144(D)[_55];

(insn 154 153 155 (set (reg/f:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 qv+0 S8 A64])) "CALVIS.f":107 -1
     (nil))

(insn 155 154 0 (set (reg:SF 142 [ _56 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 141 [ _55 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 256)) [2 *qv_144(D) S4 A32])) "CALVIS.f":107 -1
     (nil))

;; _57 = _56 * 6.07999980449676513671875e-1;

(insn 156 155 157 (set (reg:SF 257)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "CALVIS.f":107 -1
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))

(insn 157 156 0 (set (reg:SF 143 [ _57 ])
        (mult:SF (reg:SF 142 [ _56 ])
            (reg:SF 257))) "CALVIS.f":107 -1
     (nil))

;; _58 = _57 + 1.0e+0;

(insn 158 157 159 (set (reg:SF 258)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALVIS.f":107 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 159 158 0 (set (reg:SF 144 [ _58 ])
        (plus:SF (reg:SF 143 [ _57 ])
            (reg:SF 258))) "CALVIS.f":107 -1
     (nil))

;; _59 = ((_58));

(insn 160 159 0 (set (reg:SF 145 [ _59 ])
        (reg:SF 144 [ _58 ])) "CALVIS.f":107 -1
     (nil))

;; tv_145 = _50 * _59;

(insn 161 160 162 (set (reg:SF 259)
        (mult:SF (reg:SF 136 [ _50 ])
            (reg:SF 145 [ _59 ]))) "CALVIS.f":107 -1
     (nil))

(insn 162 161 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [2 tv+0 S4 A32])
        (reg:SF 259)) "CALVIS.f":107 -1
     (nil))

;; _60 = (integer(kind=8)) j_109;

(insn 163 162 164 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":108 -1
     (nil))

(insn 164 163 0 (set (reg:DI 146 [ _60 ])
        (sign_extend:DI (reg:SI 260))) "CALVIS.f":108 -1
     (nil))

;; _61 = _60 * 119;

(insn 165 164 0 (parallel [
            (set (reg:DI 147 [ _61 ])
                (mult:DI (reg:DI 146 [ _60 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":108 -1
     (nil))

;; _62 = (integer(kind=8)) i_108;

(insn 166 165 167 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":108 -1
     (nil))

(insn 167 166 0 (set (reg:DI 148 [ _62 ])
        (sign_extend:DI (reg:SI 261))) "CALVIS.f":108 -1
     (nil))

;; _63 = _61 + _62;

(insn 168 167 0 (parallel [
            (set (reg:DI 149 [ _63 ])
                (plus:DI (reg:DI 147 [ _61 ])
                    (reg:DI 148 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":108 -1
     (nil))

;; _64 = _63 + -120;

(insn 169 168 0 (parallel [
            (set (reg:DI 150 [ _64 ])
                (plus:DI (reg:DI 149 [ _63 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":108 -1
     (nil))

;; _65 = *pp_146(D)[_64];

(insn 170 169 171 (set (reg/f:DI 262)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [3 pp+0 S8 A64])) "CALVIS.f":108 -1
     (nil))

(insn 171 170 0 (set (reg:SF 151 [ _65 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 150 [ _64 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 262)) [2 *pp_146(D) S4 A32])) "CALVIS.f":108 -1
     (nil))

;; _66 = tv_145 * 2.87040008544921875e+2;

(insn 172 171 173 (set (reg:SF 263)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [2 tv+0 S4 A32])) "CALVIS.f":108 -1
     (nil))

(insn 173 172 174 (set (reg:SF 264)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "CALVIS.f":108 -1
     (expr_list:REG_EQUAL (const_double:SF 2.87040008544921875e+2 [0x0.8f851fp+9])
        (nil)))

(insn 174 173 0 (set (reg:SF 152 [ _66 ])
        (mult:SF (reg:SF 263)
            (reg:SF 264))) "CALVIS.f":108 -1
     (nil))

;; _67 = ((_66));

(insn 175 174 0 (set (reg:SF 153 [ _67 ])
        (reg:SF 152 [ _66 ])) "CALVIS.f":108 -1
     (nil))

;; rhoair_147 = _65 / _67;

(insn 176 175 177 (set (reg:SF 265)
        (div:SF (reg:SF 151 [ _65 ])
            (reg:SF 153 [ _67 ]))) "CALVIS.f":108 -1
     (nil))

(insn 177 176 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [2 rhoair+0 S4 A32])
        (reg:SF 265)) "CALVIS.f":108 -1
     (nil))

;; _68 = (integer(kind=8)) j_109;

(insn 178 177 179 (set (reg:SI 266)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":145 -1
     (nil))

(insn 179 178 0 (set (reg:DI 154 [ _68 ])
        (sign_extend:DI (reg:SI 266))) "CALVIS.f":145 -1
     (nil))

;; _69 = _68 * 119;

(insn 180 179 0 (parallel [
            (set (reg:DI 155 [ _69 ])
                (mult:DI (reg:DI 154 [ _68 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":145 -1
     (nil))

;; _70 = (integer(kind=8)) i_108;

(insn 181 180 182 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":145 -1
     (nil))

(insn 182 181 0 (set (reg:DI 156 [ _70 ])
        (sign_extend:DI (reg:SI 267))) "CALVIS.f":145 -1
     (nil))

;; _71 = _69 + _70;

(insn 183 182 0 (parallel [
            (set (reg:DI 157 [ _71 ])
                (plus:DI (reg:DI 155 [ _69 ])
                    (reg:DI 156 [ _70 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":145 -1
     (nil))

;; _72 = _71 + -120;

(insn 184 183 0 (parallel [
            (set (reg:DI 158 [ _72 ])
                (plus:DI (reg:DI 157 [ _71 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":145 -1
     (nil))

;; _73 = *qv_144(D)[_72];

(insn 185 184 186 (set (reg/f:DI 268)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 qv+0 S8 A64])) "CALVIS.f":145 -1
     (nil))

(insn 186 185 0 (set (reg:SF 159 [ _73 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 158 [ _72 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 268)) [2 *qv_144(D) S4 A32])) "CALVIS.f":145 -1
     (nil))

;; _74 = _73 + 1.0e+0;

(insn 187 186 188 (set (reg:SF 269)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALVIS.f":145 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 188 187 0 (set (reg:SF 160 [ _74 ])
        (plus:SF (reg:SF 159 [ _73 ])
            (reg:SF 269))) "CALVIS.f":145 -1
     (nil))

;; _75 = ((_74));

(insn 189 188 0 (set (reg:SF 161 [ _75 ])
        (reg:SF 160 [ _74 ])) "CALVIS.f":145 -1
     (nil))

;; _76 = _75 / rhoair_147;

(insn 190 189 0 (set (reg:SF 162 [ _76 ])
        (div:SF (reg:SF 161 [ _75 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])) [2 rhoair+0 S4 A32]))) "CALVIS.f":145 -1
     (nil))

;; _77 = qclw_141 + qrain_139;

(insn 191 190 192 (set (reg:SF 270)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [2 qclw+0 S4 A32])) "CALVIS.f":145 -1
     (nil))

(insn 192 191 0 (set (reg:SF 163 [ _77 ])
        (plus:SF (reg:SF 270)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [2 qrain+0 S4 A32]))) "CALVIS.f":145 -1
     (nil))

;; _78 = ((_77));

(insn 193 192 0 (set (reg:SF 164 [ _78 ])
        (reg:SF 163 [ _77 ])) "CALVIS.f":145 -1
     (nil))

;; _79 = _78 / rhowat_125;

(insn 194 193 0 (set (reg:SF 165 [ _79 ])
        (div:SF (reg:SF 164 [ _78 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])) [2 rhowat+0 S4 A32]))) "CALVIS.f":145 -1
     (nil))

;; _80 = _76 + _79;

(insn 195 194 0 (set (reg:SF 166 [ _80 ])
        (plus:SF (reg:SF 162 [ _76 ])
            (reg:SF 165 [ _79 ]))) "CALVIS.f":145 -1
     (nil))

;; _81 = qclice_142 + qsnow_140;

(insn 196 195 197 (set (reg:SF 271)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [2 qclice+0 S4 A32])) "CALVIS.f":145 -1
     (nil))

(insn 197 196 0 (set (reg:SF 167 [ _81 ])
        (plus:SF (reg:SF 271)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [2 qsnow+0 S4 A32]))) "CALVIS.f":145 -1
     (nil))

;; _82 = ((_81));

(insn 198 197 0 (set (reg:SF 168 [ _82 ])
        (reg:SF 167 [ _81 ])) "CALVIS.f":145 -1
     (nil))

;; _83 = _82 / rhoice_124;

(insn 199 198 0 (set (reg:SF 169 [ _83 ])
        (div:SF (reg:SF 168 [ _82 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [2 rhoice+0 S4 A32]))) "CALVIS.f":145 -1
     (nil))

;; vovermd_148 = _80 + _83;

(insn 200 199 201 (set (reg:SF 272)
        (plus:SF (reg:SF 166 [ _80 ])
            (reg:SF 169 [ _83 ]))) "CALVIS.f":145 -1
     (nil))

(insn 201 200 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 vovermd+0 S4 A32])
        (reg:SF 272)) "CALVIS.f":145 -1
     (nil))

;; _84 = qclw_141 / vovermd_148;

(insn 202 201 203 (set (reg:SF 273)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [2 qclw+0 S4 A32])) "CALVIS.f":146 -1
     (nil))

(insn 203 202 0 (set (reg:SF 170 [ _84 ])
        (div:SF (reg:SF 273)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [2 vovermd+0 S4 A32]))) "CALVIS.f":146 -1
     (nil))

;; conclc_149 = _84 * 1.0e+3;

(insn 204 203 205 (set (reg:SF 275)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":146 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))

(insn 205 204 206 (set (reg:SF 274)
        (mult:SF (reg:SF 170 [ _84 ])
            (reg:SF 275))) "CALVIS.f":146 -1
     (nil))

(insn 206 205 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [2 conclc+0 S4 A32])
        (reg:SF 274)) "CALVIS.f":146 -1
     (nil))

;; _85 = qrain_139 / vovermd_148;

(insn 207 206 208 (set (reg:SF 276)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 qrain+0 S4 A32])) "CALVIS.f":147 -1
     (nil))

(insn 208 207 0 (set (reg:SF 171 [ _85 ])
        (div:SF (reg:SF 276)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [2 vovermd+0 S4 A32]))) "CALVIS.f":147 -1
     (nil))

;; conclp_150 = _85 * 1.0e+3;

(insn 209 208 210 (set (reg:SF 278)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":147 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))

(insn 210 209 211 (set (reg:SF 277)
        (mult:SF (reg:SF 171 [ _85 ])
            (reg:SF 278))) "CALVIS.f":147 -1
     (nil))

(insn 211 210 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 conclp+0 S4 A32])
        (reg:SF 277)) "CALVIS.f":147 -1
     (nil))

;; _86 = qclice_142 / vovermd_148;

(insn 212 211 213 (set (reg:SF 279)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [2 qclice+0 S4 A32])) "CALVIS.f":148 -1
     (nil))

(insn 213 212 0 (set (reg:SF 172 [ _86 ])
        (div:SF (reg:SF 279)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [2 vovermd+0 S4 A32]))) "CALVIS.f":148 -1
     (nil))

;; concfc_151 = _86 * 1.0e+3;

(insn 214 213 215 (set (reg:SF 281)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":148 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))

(insn 215 214 216 (set (reg:SF 280)
        (mult:SF (reg:SF 172 [ _86 ])
            (reg:SF 281))) "CALVIS.f":148 -1
     (nil))

(insn 216 215 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -108 [0xffffffffffffff94])) [2 concfc+0 S4 A32])
        (reg:SF 280)) "CALVIS.f":148 -1
     (nil))

;; _87 = qsnow_140 / vovermd_148;

(insn 217 216 218 (set (reg:SF 282)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [2 qsnow+0 S4 A32])) "CALVIS.f":149 -1
     (nil))

(insn 218 217 0 (set (reg:SF 173 [ _87 ])
        (div:SF (reg:SF 282)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [2 vovermd+0 S4 A32]))) "CALVIS.f":149 -1
     (nil))

;; concfp_152 = _87 * 1.0e+3;

(insn 219 218 220 (set (reg:SF 284)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":149 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))

(insn 220 219 221 (set (reg:SF 283)
        (mult:SF (reg:SF 173 [ _87 ])
            (reg:SF 284))) "CALVIS.f":149 -1
     (nil))

(insn 221 220 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [2 concfp+0 S4 A32])
        (reg:SF 283)) "CALVIS.f":149 -1
     (nil))

;; _153 = concfc_151;

(insn 222 221 0 (set (reg:SF 199 [ _153 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -108 [0xffffffffffffff94])) [2 concfc+0 S4 A32])) "CALVIS.f":153 -1
     (nil))

;; _154 = concfp_152;

(insn 223 222 0 (set (reg:SF 200 [ _154 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [2 concfp+0 S4 A32])) "CALVIS.f":153 -1
     (nil))

;; _155 = conclc_149;

(insn 224 223 0 (set (reg:SF 201 [ _155 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [2 conclc+0 S4 A32])) "CALVIS.f":153 -1
     (nil))

;; _156 = conclp_150;

(insn 225 224 0 (set (reg:SF 202 [ _156 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 conclp+0 S4 A32])) "CALVIS.f":153 -1
     (nil))

;; _88 = __builtin_powf (_153, exponfc_121);

(insn 226 225 227 (set (reg:SF 285)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 exponfc+0 S4 A32])) "CALVIS.f":153 -1
     (nil))

(insn 227 226 228 (set (reg:SF 22 xmm1)
        (reg:SF 285)) "CALVIS.f":153 -1
     (nil))

(insn 228 227 229 (set (reg:SF 21 xmm0)
        (reg:SF 199 [ _153 ])) "CALVIS.f":153 -1
     (nil))

(call_insn/u 229 228 230 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0ebdbcf100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALVIS.f":153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))

(insn 230 229 0 (set (reg:SF 174 [ _88 ])
        (reg:SF 21 xmm0)) "CALVIS.f":153 -1
     (nil))

;; _89 = coeffc_117 * _88;

(insn 231 230 0 (set (reg:SF 175 [ _89 ])
        (mult:SF (reg:SF 174 [ _88 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [2 coeffc+0 S4 A32]))) "CALVIS.f":153 -1
     (nil))

;; _90 = __builtin_powf (_154, exponfp_122);

(insn 232 231 233 (set (reg:SF 286)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 exponfp+0 S4 A32])) "CALVIS.f":153 -1
     (nil))

(insn 233 232 234 (set (reg:SF 22 xmm1)
        (reg:SF 286)) "CALVIS.f":153 -1
     (nil))

(insn 234 233 235 (set (reg:SF 21 xmm0)
        (reg:SF 200 [ _154 ])) "CALVIS.f":153 -1
     (nil))

(call_insn/u 235 234 236 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0ebdbcf100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALVIS.f":153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))

(insn 236 235 0 (set (reg:SF 176 [ _90 ])
        (reg:SF 21 xmm0)) "CALVIS.f":153 -1
     (nil))

;; _91 = coeffp_118 * _90;

(insn 237 236 0 (set (reg:SF 177 [ _91 ])
        (mult:SF (reg:SF 176 [ _90 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 coeffp+0 S4 A32]))) "CALVIS.f":153 -1
     (nil))

;; _92 = _89 + _91;

(insn 238 237 0 (set (reg:SF 178 [ _92 ])
        (plus:SF (reg:SF 175 [ _89 ])
            (reg:SF 177 [ _91 ]))) "CALVIS.f":153 -1
     (nil))

;; _93 = __builtin_powf (_155, exponlc_119);

(insn 239 238 240 (set (reg:SF 287)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 exponlc+0 S4 A32])) "CALVIS.f":153 -1
     (nil))

(insn 240 239 241 (set (reg:SF 22 xmm1)
        (reg:SF 287)) "CALVIS.f":153 -1
     (nil))

(insn 241 240 242 (set (reg:SF 21 xmm0)
        (reg:SF 201 [ _155 ])) "CALVIS.f":153 -1
     (nil))

(call_insn/u 242 241 243 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0ebdbcf100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALVIS.f":153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))

(insn 243 242 0 (set (reg:SF 179 [ _93 ])
        (reg:SF 21 xmm0)) "CALVIS.f":153 -1
     (nil))

;; _94 = coeflc_115 * _93;

(insn 244 243 0 (set (reg:SF 180 [ _94 ])
        (mult:SF (reg:SF 179 [ _93 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 coeflc+0 S4 A32]))) "CALVIS.f":153 -1
     (nil))

;; _95 = _92 + _94;

(insn 245 244 0 (set (reg:SF 181 [ _95 ])
        (plus:SF (reg:SF 178 [ _92 ])
            (reg:SF 180 [ _94 ]))) "CALVIS.f":153 -1
     (nil))

;; _96 = __builtin_powf (_156, exponlp_120);

(insn 246 245 247 (set (reg:SF 288)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 exponlp+0 S4 A32])) "CALVIS.f":153 -1
     (nil))

(insn 247 246 248 (set (reg:SF 22 xmm1)
        (reg:SF 288)) "CALVIS.f":153 -1
     (nil))

(insn 248 247 249 (set (reg:SF 21 xmm0)
        (reg:SF 202 [ _156 ])) "CALVIS.f":153 -1
     (nil))

(call_insn/u 249 248 250 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0ebdbcf100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALVIS.f":153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))

(insn 250 249 0 (set (reg:SF 182 [ _96 ])
        (reg:SF 21 xmm0)) "CALVIS.f":153 -1
     (nil))

;; _97 = coeflp_116 * _96;

(insn 251 250 0 (set (reg:SF 183 [ _97 ])
        (mult:SF (reg:SF 182 [ _96 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 coeflp+0 S4 A32]))) "CALVIS.f":153 -1
     (nil))

;; _98 = _95 + _97;

(insn 252 251 0 (set (reg:SF 184 [ _98 ])
        (plus:SF (reg:SF 181 [ _95 ])
            (reg:SF 183 [ _97 ]))) "CALVIS.f":153 -1
     (nil))

;; betav_157 = _98 + 1.00000001335143196001808973960578441619873046875e-10;

(insn 253 252 254 (set (reg:SF 290)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "CALVIS.f":153 -1
     (expr_list:REG_EQUAL (const_double:SF 1.00000001335143196001808973960578441619873046875e-10 [0x0.dbe6ffp-33])
        (nil)))

(insn 254 253 255 (set (reg:SF 289)
        (plus:SF (reg:SF 184 [ _98 ])
            (reg:SF 290))) "CALVIS.f":153 -1
     (nil))

(insn 255 254 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -116 [0xffffffffffffff8c])) [2 betav+0 S4 A32])
        (reg:SF 289)) "CALVIS.f":153 -1
     (nil))

;; M.0_158 = 8.0e+1;

(insn 256 255 0 (set (reg:SF 194 [ M.0_110 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CALVIS.f":154 -1
     (expr_list:REG_EQUAL (const_double:SF 8.0e+1 [0x0.ap+7])
        (nil)))

;; _159 = const1_123 / betav_157;

(insn 257 256 258 (set (reg:SF 291)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [2 const1+0 S4 A32])) "CALVIS.f":154 -1
     (nil))

(insn 258 257 0 (set (reg:SF 203 [ _159 ])
        (div:SF (reg:SF 291)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -116 [0xffffffffffffff8c])) [2 betav+0 S4 A32]))) "CALVIS.f":154 -1
     (nil))

;; _99 = _159 < M.0_158;

(insn 259 258 260 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 194 [ M.0_110 ])
            (reg:SF 203 [ _159 ]))) "CALVIS.f":154 -1
     (nil))

(insn 260 259 261 (set (reg:QI 293)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALVIS.f":154 -1
     (nil))

(insn 261 260 0 (set (reg:SI 185 [ _99 ])
        (zero_extend:SI (reg:QI 293))) "CALVIS.f":154 -1
     (nil))

;; _100 = M.0_158 unord M.0_158;

(insn 262 261 263 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 194 [ M.0_110 ])
                    (reg:SF 194 [ M.0_110 ]))
            ] UNSPEC_NOTRAP)) "CALVIS.f":154 -1
     (nil))

(insn 263 262 264 (set (reg:QI 294)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALVIS.f":154 -1
     (nil))

(insn 264 263 0 (set (reg:SI 186 [ _100 ])
        (zero_extend:SI (reg:QI 294))) "CALVIS.f":154 -1
     (nil))

;; _101 = _99 | _100;

(insn 265 264 0 (parallel [
            (set (reg:SI 187 [ _101 ])
                (ior:SI (reg:SI 185 [ _99 ])
                    (reg:SI 186 [ _100 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":154 -1
     (nil))

;; if (_101 != 0)

(insn 266 265 267 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 187 [ _101 ])
            (const_int 0 [0]))) "CALVIS.f":154 -1
     (nil))

(jump_insn 267 266 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALVIS.f":154 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; M.0_160 = _159;

(nil)

;; Generating RTL for gimple basic block 8

;; 

(code_label 269 268 270 4 (nil) [0 uses])

(note 270 269 0 NOTE_INSN_BASIC_BLOCK)

;; _102 = (integer(kind=8)) j_109;

(insn 271 270 272 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":154 -1
     (nil))

(insn 272 271 0 (set (reg:DI 188 [ _102 ])
        (sign_extend:DI (reg:SI 295))) "CALVIS.f":154 -1
     (nil))

;; _103 = _102 * 119;

(insn 273 272 0 (parallel [
            (set (reg:DI 189 [ _103 ])
                (mult:DI (reg:DI 188 [ _102 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":154 -1
     (nil))

;; _104 = (integer(kind=8)) i_108;

(insn 274 273 275 (set (reg:SI 296)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":154 -1
     (nil))

(insn 275 274 0 (set (reg:DI 190 [ _104 ])
        (sign_extend:DI (reg:SI 296))) "CALVIS.f":154 -1
     (nil))

;; _105 = _103 + _104;

(insn 276 275 0 (parallel [
            (set (reg:DI 191 [ _105 ])
                (plus:DI (reg:DI 189 [ _103 ])
                    (reg:DI 190 [ _104 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":154 -1
     (nil))

;; _106 = _105 + -120;

(insn 277 276 0 (parallel [
            (set (reg:DI 192 [ _106 ])
                (plus:DI (reg:DI 191 [ _105 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":154 -1
     (nil))

;; _107 = M.0_110 * 1.0e+3;

(insn 278 277 279 (set (reg:SF 297)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":154 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))

(insn 279 278 0 (set (reg:SF 193 [ _107 ])
        (mult:SF (reg:SF 194 [ M.0_110 ])
            (reg:SF 297))) "CALVIS.f":154 -1
     (nil))

;; *vis_161(D)[_106] = _107;

(insn 280 279 281 (set (reg/f:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [3 vis+0 S8 A64])) "CALVIS.f":154 -1
     (nil))

(insn 281 280 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 192 [ _106 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 298)) [2 *vis_161(D) S4 A32])
        (reg:SF 193 [ _107 ])) "CALVIS.f":154 -1
     (nil))

;; i_163 = i_108 + 1;

(insn 282 281 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":83 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 286 285 287 3 (nil) [0 uses])

(note 287 286 0 NOTE_INSN_BASIC_BLOCK)

;; j_164 = j_109 + 1;

(insn 288 287 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":82 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 292 291 293 2 (nil) [0 uses])

(note 293 292 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 11

;; <L11>:

(code_label 294 293 295 7 (nil) [0 uses])

(note 295 294 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 qv+0 S8 A64])
        (reg:DI 5 di [ qv ])) "CALVIS.f":2 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [3 qc+0 S8 A64])
        (reg:DI 4 si [ qc ])) "CALVIS.f":2 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [3 qr+0 S8 A64])
        (reg:DI 1 dx [ qr ])) "CALVIS.f":2 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [3 qi+0 S8 A64])
        (reg:DI 2 cx [ qi ])) "CALVIS.f":2 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 qs+0 S8 A64])
        (reg:DI 37 r8 [ qs ])) "CALVIS.f":2 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 tt+0 S8 A64])
        (reg:DI 38 r9 [ tt ])) "CALVIS.f":2 -1
     (nil))
(note 8 7 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 8 13 2 (set (reg:SF 204)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALVIS.f":68 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 celkel+0 S4 A32])
        (reg:SF 204)) "CALVIS.f":68 -1
     (nil))
(insn 14 13 15 2 (set (reg:SF 206)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 celkel+0 S4 A32])) "CALVIS.f":69 -1
     (nil))
(insn 15 14 16 2 (set (reg:SF 207)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALVIS.f":69 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 16 15 17 2 (set (reg:SF 205)
        (minus:SF (reg:SF 206)
            (reg:SF 207))) "CALVIS.f":69 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 tice+0 S4 A32])
        (reg:SF 205)) "CALVIS.f":69 -1
     (nil))
(insn 18 17 19 2 (set (reg:SF 208)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALVIS.f":70 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 coeflc+0 S4 A32])
        (reg:SF 208)) "CALVIS.f":70 -1
     (nil))
(insn 20 19 21 2 (set (reg:SF 209)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALVIS.f":71 -1
     (nil))
(insn 21 20 22 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 coeflp+0 S4 A32])
        (reg:SF 209)) "CALVIS.f":71 -1
     (nil))
(insn 22 21 23 2 (set (reg:SF 210)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALVIS.f":72 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 coeffc+0 S4 A32])
        (reg:SF 210)) "CALVIS.f":72 -1
     (nil))
(insn 24 23 25 2 (set (reg:SF 211)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALVIS.f":73 -1
     (nil))
(insn 25 24 26 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 coeffp+0 S4 A32])
        (reg:SF 211)) "CALVIS.f":73 -1
     (nil))
(insn 26 25 27 2 (set (reg:SF 212)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALVIS.f":74 -1
     (nil))
(insn 27 26 28 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 exponlc+0 S4 A32])
        (reg:SF 212)) "CALVIS.f":74 -1
     (nil))
(insn 28 27 29 2 (set (reg:SF 213)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALVIS.f":75 -1
     (nil))
(insn 29 28 30 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 exponlp+0 S4 A32])
        (reg:SF 213)) "CALVIS.f":75 -1
     (nil))
(insn 30 29 31 2 (set (reg:SF 214)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALVIS.f":76 -1
     (nil))
(insn 31 30 32 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 exponfc+0 S4 A32])
        (reg:SF 214)) "CALVIS.f":76 -1
     (nil))
(insn 32 31 33 2 (set (reg:SF 215)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALVIS.f":77 -1
     (nil))
(insn 33 32 34 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 exponfp+0 S4 A32])
        (reg:SF 215)) "CALVIS.f":77 -1
     (nil))
(insn 34 33 35 2 (set (reg:SF 216)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALVIS.f":78 -1
     (nil))
(insn 35 34 36 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [2 const1+0 S4 A32])
        (reg:SF 216)) "CALVIS.f":78 -1
     (nil))
(insn 36 35 37 2 (set (reg:SF 217)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALVIS.f":79 -1
     (nil))
(insn 37 36 38 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 rhoice+0 S4 A32])
        (reg:SF 217)) "CALVIS.f":79 -1
     (nil))
(insn 38 37 39 2 (set (reg:SF 218)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":80 -1
     (nil))
(insn 39 38 40 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [2 rhowat+0 S4 A32])
        (reg:SF 218)) "CALVIS.f":80 -1
     (nil))
(insn 40 39 41 2 (set (reg:SI 195 [ _127 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0ebdd53870 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALVIS.f":82 -1
     (nil))
(insn 41 40 42 2 (set (reg:SI 196 [ _128 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0ebdd53870 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALVIS.f":82 -1
     (nil))
(insn 42 41 289 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 195 [ _127 ])) "CALVIS.f":82 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              10 (DFS_BACK)
(code_label 289 42 43 4 6 (nil) [1 uses])
(note 43 289 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 196 [ _128 ]))) "CALVIS.f":82 -1
     (nil))
(insn 45 44 46 4 (set (reg:QI 219)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVIS.f":82 -1
     (nil))
(insn 46 45 47 4 (set (reg:SI 197 [ _130 ])
        (zero_extend:SI (reg:QI 219))) "CALVIS.f":82 -1
     (nil))
(insn 47 46 48 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 197 [ _130 ])
            (const_int 0 [0]))) "CALVIS.f":82 -1
     (nil))
(jump_insn 48 47 49 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 292)
            (pc))) "CALVIS.f":82 -1
     (nil)
 -> 292)
;;  succ:       11
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 49 48 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 283 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALVIS.f":83 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              9 (DFS_BACK)
(code_label 283 50 51 6 5 (nil) [1 uses])
(note 51 283 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALVIS.f":83 -1
     (nil))
(insn 53 52 54 6 (set (reg:QI 220)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVIS.f":83 -1
     (nil))
(insn 54 53 55 6 (set (reg:SI 198 [ _132 ])
        (zero_extend:SI (reg:QI 220))) "CALVIS.f":83 -1
     (nil))
(insn 55 54 56 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 198 [ _132 ])
            (const_int 0 [0]))) "CALVIS.f":83 -1
     (nil))
(jump_insn 56 55 57 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) "CALVIS.f":83 -1
     (nil)
 -> 286)
;;  succ:       10
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 57 56 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 7 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":99 -1
     (nil))
(insn 59 58 60 7 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 221))) "CALVIS.f":99 -1
     (nil))
(insn 60 59 61 7 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 -1
     (nil))
(insn 61 60 62 7 (set (reg:SI 222)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":99 -1
     (nil))
(insn 62 61 63 7 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 222))) "CALVIS.f":99 -1
     (nil))
(insn 63 62 64 7 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 -1
     (nil))
(insn 64 63 65 7 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 -1
     (nil))
(insn 65 64 66 7 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [3 qr+0 S8 A64])) "CALVIS.f":99 -1
     (nil))
(insn 66 65 67 7 (set (reg:SF 92 [ _6 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 91 [ _5 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 223)) [2 *qr_133(D) S4 A32])) "CALVIS.f":99 -1
     (nil))
(insn 67 66 68 7 (set (reg:SI 224)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":99 -1
     (nil))
(insn 68 67 69 7 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 224))) "CALVIS.f":99 -1
     (nil))
(insn 69 68 70 7 (parallel [
            (set (reg:DI 94 [ _8 ])
                (mult:DI (reg:DI 93 [ _7 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 -1
     (nil))
(insn 70 69 71 7 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":99 -1
     (nil))
(insn 71 70 72 7 (set (reg:DI 95 [ _9 ])
        (sign_extend:DI (reg:SI 225))) "CALVIS.f":99 -1
     (nil))
(insn 72 71 73 7 (parallel [
            (set (reg:DI 96 [ _10 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 -1
     (nil))
(insn 73 72 74 7 (parallel [
            (set (reg:DI 97 [ _11 ])
                (plus:DI (reg:DI 96 [ _10 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 -1
     (nil))
(insn 74 73 75 7 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 qs+0 S8 A64])) "CALVIS.f":99 -1
     (nil))
(insn 75 74 76 7 (set (reg:SF 98 [ _12 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 226)) [2 *qs_134(D) S4 A32])) "CALVIS.f":99 -1
     (nil))
(insn 76 75 77 7 (set (reg:SF 227)
        (plus:SF (reg:SF 92 [ _6 ])
            (reg:SF 98 [ _12 ]))) "CALVIS.f":99 -1
     (nil))
(insn 77 76 78 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 qprc+0 S4 A32])
        (reg:SF 227)) "CALVIS.f":99 -1
     (nil))
(insn 78 77 79 7 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":100 -1
     (nil))
(insn 79 78 80 7 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 228))) "CALVIS.f":100 -1
     (nil))
(insn 80 79 81 7 (parallel [
            (set (reg:DI 100 [ _14 ])
                (mult:DI (reg:DI 99 [ _13 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 -1
     (nil))
(insn 81 80 82 7 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":100 -1
     (nil))
(insn 82 81 83 7 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 229))) "CALVIS.f":100 -1
     (nil))
(insn 83 82 84 7 (parallel [
            (set (reg:DI 102 [ _16 ])
                (plus:DI (reg:DI 100 [ _14 ])
                    (reg:DI 101 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 -1
     (nil))
(insn 84 83 85 7 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 -1
     (nil))
(insn 85 84 86 7 (set (reg/f:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [3 qc+0 S8 A64])) "CALVIS.f":100 -1
     (nil))
(insn 86 85 87 7 (set (reg:SF 104 [ _18 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 230)) [2 *qc_136(D) S4 A32])) "CALVIS.f":100 -1
     (nil))
(insn 87 86 88 7 (set (reg:SI 231)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":100 -1
     (nil))
(insn 88 87 89 7 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 231))) "CALVIS.f":100 -1
     (nil))
(insn 89 88 90 7 (parallel [
            (set (reg:DI 106 [ _20 ])
                (mult:DI (reg:DI 105 [ _19 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 -1
     (nil))
(insn 90 89 91 7 (set (reg:SI 232)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":100 -1
     (nil))
(insn 91 90 92 7 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 232))) "CALVIS.f":100 -1
     (nil))
(insn 92 91 93 7 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 106 [ _20 ])
                    (reg:DI 107 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 -1
     (nil))
(insn 93 92 94 7 (parallel [
            (set (reg:DI 109 [ _23 ])
                (plus:DI (reg:DI 108 [ _22 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 -1
     (nil))
(insn 94 93 95 7 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [3 qi+0 S8 A64])) "CALVIS.f":100 -1
     (nil))
(insn 95 94 96 7 (set (reg:SF 110 [ _24 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 109 [ _23 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 233)) [2 *qi_137(D) S4 A32])) "CALVIS.f":100 -1
     (nil))
(insn 96 95 97 7 (set (reg:SF 234)
        (plus:SF (reg:SF 104 [ _18 ])
            (reg:SF 110 [ _24 ]))) "CALVIS.f":100 -1
     (nil))
(insn 97 96 98 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [2 qcld+0 S4 A32])
        (reg:SF 234)) "CALVIS.f":100 -1
     (nil))
(insn 98 97 99 7 (set (reg:SI 235)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":101 -1
     (nil))
(insn 99 98 100 7 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 235))) "CALVIS.f":101 -1
     (nil))
(insn 100 99 101 7 (parallel [
            (set (reg:DI 112 [ _26 ])
                (mult:DI (reg:DI 111 [ _25 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":101 -1
     (nil))
(insn 101 100 102 7 (set (reg:SI 236)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":101 -1
     (nil))
(insn 102 101 103 7 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 236))) "CALVIS.f":101 -1
     (nil))
(insn 103 102 104 7 (parallel [
            (set (reg:DI 114 [ _28 ])
                (plus:DI (reg:DI 112 [ _26 ])
                    (reg:DI 113 [ _27 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":101 -1
     (nil))
(insn 104 103 105 7 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":101 -1
     (nil))
(insn 105 104 106 7 (set (reg/f:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [3 qr+0 S8 A64])) "CALVIS.f":101 -1
     (nil))
(insn 106 105 107 7 (set (reg:SF 238)
        (mem:SF (plus:DI (mult:DI (reg:DI 115 [ _29 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 237)) [2 *qr_133(D) S4 A32])) "CALVIS.f":101 -1
     (nil))
(insn 107 106 108 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 qrain+0 S4 A32])
        (reg:SF 238)) "CALVIS.f":101 -1
     (nil))
(insn 108 107 109 7 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":102 -1
     (nil))
(insn 109 108 110 7 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 239))) "CALVIS.f":102 -1
     (nil))
(insn 110 109 111 7 (parallel [
            (set (reg:DI 117 [ _31 ])
                (mult:DI (reg:DI 116 [ _30 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":102 -1
     (nil))
(insn 111 110 112 7 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":102 -1
     (nil))
(insn 112 111 113 7 (set (reg:DI 118 [ _32 ])
        (sign_extend:DI (reg:SI 240))) "CALVIS.f":102 -1
     (nil))
(insn 113 112 114 7 (parallel [
            (set (reg:DI 119 [ _33 ])
                (plus:DI (reg:DI 117 [ _31 ])
                    (reg:DI 118 [ _32 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":102 -1
     (nil))
(insn 114 113 115 7 (parallel [
            (set (reg:DI 120 [ _34 ])
                (plus:DI (reg:DI 119 [ _33 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":102 -1
     (nil))
(insn 115 114 116 7 (set (reg/f:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 qs+0 S8 A64])) "CALVIS.f":102 -1
     (nil))
(insn 116 115 117 7 (set (reg:SF 242)
        (mem:SF (plus:DI (mult:DI (reg:DI 120 [ _34 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 241)) [2 *qs_134(D) S4 A32])) "CALVIS.f":102 -1
     (nil))
(insn 117 116 118 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [2 qsnow+0 S4 A32])
        (reg:SF 242)) "CALVIS.f":102 -1
     (nil))
(insn 118 117 119 7 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":103 -1
     (nil))
(insn 119 118 120 7 (set (reg:DI 121 [ _35 ])
        (sign_extend:DI (reg:SI 243))) "CALVIS.f":103 -1
     (nil))
(insn 120 119 121 7 (parallel [
            (set (reg:DI 122 [ _36 ])
                (mult:DI (reg:DI 121 [ _35 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":103 -1
     (nil))
(insn 121 120 122 7 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":103 -1
     (nil))
(insn 122 121 123 7 (set (reg:DI 123 [ _37 ])
        (sign_extend:DI (reg:SI 244))) "CALVIS.f":103 -1
     (nil))
(insn 123 122 124 7 (parallel [
            (set (reg:DI 124 [ _38 ])
                (plus:DI (reg:DI 122 [ _36 ])
                    (reg:DI 123 [ _37 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":103 -1
     (nil))
(insn 124 123 125 7 (parallel [
            (set (reg:DI 125 [ _39 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":103 -1
     (nil))
(insn 125 124 126 7 (set (reg/f:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [3 qc+0 S8 A64])) "CALVIS.f":103 -1
     (nil))
(insn 126 125 127 7 (set (reg:SF 246)
        (mem:SF (plus:DI (mult:DI (reg:DI 125 [ _39 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 245)) [2 *qc_136(D) S4 A32])) "CALVIS.f":103 -1
     (nil))
(insn 127 126 128 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [2 qclw+0 S4 A32])
        (reg:SF 246)) "CALVIS.f":103 -1
     (nil))
(insn 128 127 129 7 (set (reg:SI 247)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":104 -1
     (nil))
(insn 129 128 130 7 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 247))) "CALVIS.f":104 -1
     (nil))
(insn 130 129 131 7 (parallel [
            (set (reg:DI 127 [ _41 ])
                (mult:DI (reg:DI 126 [ _40 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":104 -1
     (nil))
(insn 131 130 132 7 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":104 -1
     (nil))
(insn 132 131 133 7 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 248))) "CALVIS.f":104 -1
     (nil))
(insn 133 132 134 7 (parallel [
            (set (reg:DI 129 [ _43 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (reg:DI 128 [ _42 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":104 -1
     (nil))
(insn 134 133 135 7 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 129 [ _43 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":104 -1
     (nil))
(insn 135 134 136 7 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [3 qi+0 S8 A64])) "CALVIS.f":104 -1
     (nil))
(insn 136 135 137 7 (set (reg:SF 250)
        (mem:SF (plus:DI (mult:DI (reg:DI 130 [ _44 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 249)) [2 *qi_137(D) S4 A32])) "CALVIS.f":104 -1
     (nil))
(insn 137 136 138 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [2 qclice+0 S4 A32])
        (reg:SF 250)) "CALVIS.f":104 -1
     (nil))
(insn 138 137 139 7 (set (reg:SI 251)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":107 -1
     (nil))
(insn 139 138 140 7 (set (reg:DI 131 [ _45 ])
        (sign_extend:DI (reg:SI 251))) "CALVIS.f":107 -1
     (nil))
(insn 140 139 141 7 (parallel [
            (set (reg:DI 132 [ _46 ])
                (mult:DI (reg:DI 131 [ _45 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 -1
     (nil))
(insn 141 140 142 7 (set (reg:SI 252)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":107 -1
     (nil))
(insn 142 141 143 7 (set (reg:DI 133 [ _47 ])
        (sign_extend:DI (reg:SI 252))) "CALVIS.f":107 -1
     (nil))
(insn 143 142 144 7 (parallel [
            (set (reg:DI 134 [ _48 ])
                (plus:DI (reg:DI 132 [ _46 ])
                    (reg:DI 133 [ _47 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 -1
     (nil))
(insn 144 143 145 7 (parallel [
            (set (reg:DI 135 [ _49 ])
                (plus:DI (reg:DI 134 [ _48 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 -1
     (nil))
(insn 145 144 146 7 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 tt+0 S8 A64])) "CALVIS.f":107 -1
     (nil))
(insn 146 145 147 7 (set (reg:SF 136 [ _50 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 135 [ _49 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 253)) [2 *tt_143(D) S4 A32])) "CALVIS.f":107 -1
     (nil))
(insn 147 146 148 7 (set (reg:SI 254)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":107 -1
     (nil))
(insn 148 147 149 7 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 254))) "CALVIS.f":107 -1
     (nil))
(insn 149 148 150 7 (parallel [
            (set (reg:DI 138 [ _52 ])
                (mult:DI (reg:DI 137 [ _51 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 -1
     (nil))
(insn 150 149 151 7 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":107 -1
     (nil))
(insn 151 150 152 7 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 255))) "CALVIS.f":107 -1
     (nil))
(insn 152 151 153 7 (parallel [
            (set (reg:DI 140 [ _54 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (reg:DI 139 [ _53 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 -1
     (nil))
(insn 153 152 154 7 (parallel [
            (set (reg:DI 141 [ _55 ])
                (plus:DI (reg:DI 140 [ _54 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 -1
     (nil))
(insn 154 153 155 7 (set (reg/f:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 qv+0 S8 A64])) "CALVIS.f":107 -1
     (nil))
(insn 155 154 156 7 (set (reg:SF 142 [ _56 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 141 [ _55 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 256)) [2 *qv_144(D) S4 A32])) "CALVIS.f":107 -1
     (nil))
(insn 156 155 157 7 (set (reg:SF 257)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "CALVIS.f":107 -1
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 157 156 158 7 (set (reg:SF 143 [ _57 ])
        (mult:SF (reg:SF 142 [ _56 ])
            (reg:SF 257))) "CALVIS.f":107 -1
     (nil))
(insn 158 157 159 7 (set (reg:SF 258)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALVIS.f":107 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 159 158 160 7 (set (reg:SF 144 [ _58 ])
        (plus:SF (reg:SF 143 [ _57 ])
            (reg:SF 258))) "CALVIS.f":107 -1
     (nil))
(insn 160 159 161 7 (set (reg:SF 145 [ _59 ])
        (reg:SF 144 [ _58 ])) "CALVIS.f":107 -1
     (nil))
(insn 161 160 162 7 (set (reg:SF 259)
        (mult:SF (reg:SF 136 [ _50 ])
            (reg:SF 145 [ _59 ]))) "CALVIS.f":107 -1
     (nil))
(insn 162 161 163 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [2 tv+0 S4 A32])
        (reg:SF 259)) "CALVIS.f":107 -1
     (nil))
(insn 163 162 164 7 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":108 -1
     (nil))
(insn 164 163 165 7 (set (reg:DI 146 [ _60 ])
        (sign_extend:DI (reg:SI 260))) "CALVIS.f":108 -1
     (nil))
(insn 165 164 166 7 (parallel [
            (set (reg:DI 147 [ _61 ])
                (mult:DI (reg:DI 146 [ _60 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":108 -1
     (nil))
(insn 166 165 167 7 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":108 -1
     (nil))
(insn 167 166 168 7 (set (reg:DI 148 [ _62 ])
        (sign_extend:DI (reg:SI 261))) "CALVIS.f":108 -1
     (nil))
(insn 168 167 169 7 (parallel [
            (set (reg:DI 149 [ _63 ])
                (plus:DI (reg:DI 147 [ _61 ])
                    (reg:DI 148 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":108 -1
     (nil))
(insn 169 168 170 7 (parallel [
            (set (reg:DI 150 [ _64 ])
                (plus:DI (reg:DI 149 [ _63 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":108 -1
     (nil))
(insn 170 169 171 7 (set (reg/f:DI 262)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [3 pp+0 S8 A64])) "CALVIS.f":108 -1
     (nil))
(insn 171 170 172 7 (set (reg:SF 151 [ _65 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 150 [ _64 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 262)) [2 *pp_146(D) S4 A32])) "CALVIS.f":108 -1
     (nil))
(insn 172 171 173 7 (set (reg:SF 263)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [2 tv+0 S4 A32])) "CALVIS.f":108 -1
     (nil))
(insn 173 172 174 7 (set (reg:SF 264)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "CALVIS.f":108 -1
     (expr_list:REG_EQUAL (const_double:SF 2.87040008544921875e+2 [0x0.8f851fp+9])
        (nil)))
(insn 174 173 175 7 (set (reg:SF 152 [ _66 ])
        (mult:SF (reg:SF 263)
            (reg:SF 264))) "CALVIS.f":108 -1
     (nil))
(insn 175 174 176 7 (set (reg:SF 153 [ _67 ])
        (reg:SF 152 [ _66 ])) "CALVIS.f":108 -1
     (nil))
(insn 176 175 177 7 (set (reg:SF 265)
        (div:SF (reg:SF 151 [ _65 ])
            (reg:SF 153 [ _67 ]))) "CALVIS.f":108 -1
     (nil))
(insn 177 176 178 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [2 rhoair+0 S4 A32])
        (reg:SF 265)) "CALVIS.f":108 -1
     (nil))
(insn 178 177 179 7 (set (reg:SI 266)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":145 -1
     (nil))
(insn 179 178 180 7 (set (reg:DI 154 [ _68 ])
        (sign_extend:DI (reg:SI 266))) "CALVIS.f":145 -1
     (nil))
(insn 180 179 181 7 (parallel [
            (set (reg:DI 155 [ _69 ])
                (mult:DI (reg:DI 154 [ _68 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":145 -1
     (nil))
(insn 181 180 182 7 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":145 -1
     (nil))
(insn 182 181 183 7 (set (reg:DI 156 [ _70 ])
        (sign_extend:DI (reg:SI 267))) "CALVIS.f":145 -1
     (nil))
(insn 183 182 184 7 (parallel [
            (set (reg:DI 157 [ _71 ])
                (plus:DI (reg:DI 155 [ _69 ])
                    (reg:DI 156 [ _70 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":145 -1
     (nil))
(insn 184 183 185 7 (parallel [
            (set (reg:DI 158 [ _72 ])
                (plus:DI (reg:DI 157 [ _71 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":145 -1
     (nil))
(insn 185 184 186 7 (set (reg/f:DI 268)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 qv+0 S8 A64])) "CALVIS.f":145 -1
     (nil))
(insn 186 185 187 7 (set (reg:SF 159 [ _73 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 158 [ _72 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 268)) [2 *qv_144(D) S4 A32])) "CALVIS.f":145 -1
     (nil))
(insn 187 186 188 7 (set (reg:SF 269)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALVIS.f":145 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 188 187 189 7 (set (reg:SF 160 [ _74 ])
        (plus:SF (reg:SF 159 [ _73 ])
            (reg:SF 269))) "CALVIS.f":145 -1
     (nil))
(insn 189 188 190 7 (set (reg:SF 161 [ _75 ])
        (reg:SF 160 [ _74 ])) "CALVIS.f":145 -1
     (nil))
(insn 190 189 191 7 (set (reg:SF 162 [ _76 ])
        (div:SF (reg:SF 161 [ _75 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])) [2 rhoair+0 S4 A32]))) "CALVIS.f":145 -1
     (nil))
(insn 191 190 192 7 (set (reg:SF 270)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [2 qclw+0 S4 A32])) "CALVIS.f":145 -1
     (nil))
(insn 192 191 193 7 (set (reg:SF 163 [ _77 ])
        (plus:SF (reg:SF 270)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [2 qrain+0 S4 A32]))) "CALVIS.f":145 -1
     (nil))
(insn 193 192 194 7 (set (reg:SF 164 [ _78 ])
        (reg:SF 163 [ _77 ])) "CALVIS.f":145 -1
     (nil))
(insn 194 193 195 7 (set (reg:SF 165 [ _79 ])
        (div:SF (reg:SF 164 [ _78 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])) [2 rhowat+0 S4 A32]))) "CALVIS.f":145 -1
     (nil))
(insn 195 194 196 7 (set (reg:SF 166 [ _80 ])
        (plus:SF (reg:SF 162 [ _76 ])
            (reg:SF 165 [ _79 ]))) "CALVIS.f":145 -1
     (nil))
(insn 196 195 197 7 (set (reg:SF 271)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [2 qclice+0 S4 A32])) "CALVIS.f":145 -1
     (nil))
(insn 197 196 198 7 (set (reg:SF 167 [ _81 ])
        (plus:SF (reg:SF 271)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [2 qsnow+0 S4 A32]))) "CALVIS.f":145 -1
     (nil))
(insn 198 197 199 7 (set (reg:SF 168 [ _82 ])
        (reg:SF 167 [ _81 ])) "CALVIS.f":145 -1
     (nil))
(insn 199 198 200 7 (set (reg:SF 169 [ _83 ])
        (div:SF (reg:SF 168 [ _82 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [2 rhoice+0 S4 A32]))) "CALVIS.f":145 -1
     (nil))
(insn 200 199 201 7 (set (reg:SF 272)
        (plus:SF (reg:SF 166 [ _80 ])
            (reg:SF 169 [ _83 ]))) "CALVIS.f":145 -1
     (nil))
(insn 201 200 202 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 vovermd+0 S4 A32])
        (reg:SF 272)) "CALVIS.f":145 -1
     (nil))
(insn 202 201 203 7 (set (reg:SF 273)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [2 qclw+0 S4 A32])) "CALVIS.f":146 -1
     (nil))
(insn 203 202 204 7 (set (reg:SF 170 [ _84 ])
        (div:SF (reg:SF 273)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [2 vovermd+0 S4 A32]))) "CALVIS.f":146 -1
     (nil))
(insn 204 203 205 7 (set (reg:SF 275)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":146 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 205 204 206 7 (set (reg:SF 274)
        (mult:SF (reg:SF 170 [ _84 ])
            (reg:SF 275))) "CALVIS.f":146 -1
     (nil))
(insn 206 205 207 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [2 conclc+0 S4 A32])
        (reg:SF 274)) "CALVIS.f":146 -1
     (nil))
(insn 207 206 208 7 (set (reg:SF 276)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 qrain+0 S4 A32])) "CALVIS.f":147 -1
     (nil))
(insn 208 207 209 7 (set (reg:SF 171 [ _85 ])
        (div:SF (reg:SF 276)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [2 vovermd+0 S4 A32]))) "CALVIS.f":147 -1
     (nil))
(insn 209 208 210 7 (set (reg:SF 278)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":147 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 210 209 211 7 (set (reg:SF 277)
        (mult:SF (reg:SF 171 [ _85 ])
            (reg:SF 278))) "CALVIS.f":147 -1
     (nil))
(insn 211 210 212 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 conclp+0 S4 A32])
        (reg:SF 277)) "CALVIS.f":147 -1
     (nil))
(insn 212 211 213 7 (set (reg:SF 279)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [2 qclice+0 S4 A32])) "CALVIS.f":148 -1
     (nil))
(insn 213 212 214 7 (set (reg:SF 172 [ _86 ])
        (div:SF (reg:SF 279)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [2 vovermd+0 S4 A32]))) "CALVIS.f":148 -1
     (nil))
(insn 214 213 215 7 (set (reg:SF 281)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":148 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 215 214 216 7 (set (reg:SF 280)
        (mult:SF (reg:SF 172 [ _86 ])
            (reg:SF 281))) "CALVIS.f":148 -1
     (nil))
(insn 216 215 217 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -108 [0xffffffffffffff94])) [2 concfc+0 S4 A32])
        (reg:SF 280)) "CALVIS.f":148 -1
     (nil))
(insn 217 216 218 7 (set (reg:SF 282)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [2 qsnow+0 S4 A32])) "CALVIS.f":149 -1
     (nil))
(insn 218 217 219 7 (set (reg:SF 173 [ _87 ])
        (div:SF (reg:SF 282)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [2 vovermd+0 S4 A32]))) "CALVIS.f":149 -1
     (nil))
(insn 219 218 220 7 (set (reg:SF 284)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":149 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 220 219 221 7 (set (reg:SF 283)
        (mult:SF (reg:SF 173 [ _87 ])
            (reg:SF 284))) "CALVIS.f":149 -1
     (nil))
(insn 221 220 222 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [2 concfp+0 S4 A32])
        (reg:SF 283)) "CALVIS.f":149 -1
     (nil))
(insn 222 221 223 7 (set (reg:SF 199 [ _153 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -108 [0xffffffffffffff94])) [2 concfc+0 S4 A32])) "CALVIS.f":153 -1
     (nil))
(insn 223 222 224 7 (set (reg:SF 200 [ _154 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [2 concfp+0 S4 A32])) "CALVIS.f":153 -1
     (nil))
(insn 224 223 225 7 (set (reg:SF 201 [ _155 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [2 conclc+0 S4 A32])) "CALVIS.f":153 -1
     (nil))
(insn 225 224 226 7 (set (reg:SF 202 [ _156 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 conclp+0 S4 A32])) "CALVIS.f":153 -1
     (nil))
(insn 226 225 227 7 (set (reg:SF 285)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 exponfc+0 S4 A32])) "CALVIS.f":153 -1
     (nil))
(insn 227 226 228 7 (set (reg:SF 22 xmm1)
        (reg:SF 285)) "CALVIS.f":153 -1
     (nil))
(insn 228 227 229 7 (set (reg:SF 21 xmm0)
        (reg:SF 199 [ _153 ])) "CALVIS.f":153 -1
     (nil))
(call_insn/u 229 228 230 7 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0ebdbcf100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALVIS.f":153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 230 229 231 7 (set (reg:SF 174 [ _88 ])
        (reg:SF 21 xmm0)) "CALVIS.f":153 -1
     (nil))
(insn 231 230 232 7 (set (reg:SF 175 [ _89 ])
        (mult:SF (reg:SF 174 [ _88 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [2 coeffc+0 S4 A32]))) "CALVIS.f":153 -1
     (nil))
(insn 232 231 233 7 (set (reg:SF 286)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 exponfp+0 S4 A32])) "CALVIS.f":153 -1
     (nil))
(insn 233 232 234 7 (set (reg:SF 22 xmm1)
        (reg:SF 286)) "CALVIS.f":153 -1
     (nil))
(insn 234 233 235 7 (set (reg:SF 21 xmm0)
        (reg:SF 200 [ _154 ])) "CALVIS.f":153 -1
     (nil))
(call_insn/u 235 234 236 7 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0ebdbcf100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALVIS.f":153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 236 235 237 7 (set (reg:SF 176 [ _90 ])
        (reg:SF 21 xmm0)) "CALVIS.f":153 -1
     (nil))
(insn 237 236 238 7 (set (reg:SF 177 [ _91 ])
        (mult:SF (reg:SF 176 [ _90 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 coeffp+0 S4 A32]))) "CALVIS.f":153 -1
     (nil))
(insn 238 237 239 7 (set (reg:SF 178 [ _92 ])
        (plus:SF (reg:SF 175 [ _89 ])
            (reg:SF 177 [ _91 ]))) "CALVIS.f":153 -1
     (nil))
(insn 239 238 240 7 (set (reg:SF 287)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 exponlc+0 S4 A32])) "CALVIS.f":153 -1
     (nil))
(insn 240 239 241 7 (set (reg:SF 22 xmm1)
        (reg:SF 287)) "CALVIS.f":153 -1
     (nil))
(insn 241 240 242 7 (set (reg:SF 21 xmm0)
        (reg:SF 201 [ _155 ])) "CALVIS.f":153 -1
     (nil))
(call_insn/u 242 241 243 7 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0ebdbcf100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALVIS.f":153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 243 242 244 7 (set (reg:SF 179 [ _93 ])
        (reg:SF 21 xmm0)) "CALVIS.f":153 -1
     (nil))
(insn 244 243 245 7 (set (reg:SF 180 [ _94 ])
        (mult:SF (reg:SF 179 [ _93 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 coeflc+0 S4 A32]))) "CALVIS.f":153 -1
     (nil))
(insn 245 244 246 7 (set (reg:SF 181 [ _95 ])
        (plus:SF (reg:SF 178 [ _92 ])
            (reg:SF 180 [ _94 ]))) "CALVIS.f":153 -1
     (nil))
(insn 246 245 247 7 (set (reg:SF 288)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 exponlp+0 S4 A32])) "CALVIS.f":153 -1
     (nil))
(insn 247 246 248 7 (set (reg:SF 22 xmm1)
        (reg:SF 288)) "CALVIS.f":153 -1
     (nil))
(insn 248 247 249 7 (set (reg:SF 21 xmm0)
        (reg:SF 202 [ _156 ])) "CALVIS.f":153 -1
     (nil))
(call_insn/u 249 248 250 7 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0ebdbcf100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALVIS.f":153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 250 249 251 7 (set (reg:SF 182 [ _96 ])
        (reg:SF 21 xmm0)) "CALVIS.f":153 -1
     (nil))
(insn 251 250 252 7 (set (reg:SF 183 [ _97 ])
        (mult:SF (reg:SF 182 [ _96 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 coeflp+0 S4 A32]))) "CALVIS.f":153 -1
     (nil))
(insn 252 251 253 7 (set (reg:SF 184 [ _98 ])
        (plus:SF (reg:SF 181 [ _95 ])
            (reg:SF 183 [ _97 ]))) "CALVIS.f":153 -1
     (nil))
(insn 253 252 254 7 (set (reg:SF 290)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "CALVIS.f":153 -1
     (expr_list:REG_EQUAL (const_double:SF 1.00000001335143196001808973960578441619873046875e-10 [0x0.dbe6ffp-33])
        (nil)))
(insn 254 253 255 7 (set (reg:SF 289)
        (plus:SF (reg:SF 184 [ _98 ])
            (reg:SF 290))) "CALVIS.f":153 -1
     (nil))
(insn 255 254 256 7 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -116 [0xffffffffffffff8c])) [2 betav+0 S4 A32])
        (reg:SF 289)) "CALVIS.f":153 -1
     (nil))
(insn 256 255 257 7 (set (reg:SF 194 [ M.0_110 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CALVIS.f":154 -1
     (expr_list:REG_EQUAL (const_double:SF 8.0e+1 [0x0.ap+7])
        (nil)))
(insn 257 256 258 7 (set (reg:SF 291)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [2 const1+0 S4 A32])) "CALVIS.f":154 -1
     (nil))
(insn 258 257 259 7 (set (reg:SF 203 [ _159 ])
        (div:SF (reg:SF 291)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -116 [0xffffffffffffff8c])) [2 betav+0 S4 A32]))) "CALVIS.f":154 -1
     (nil))
(insn 259 258 260 7 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 194 [ M.0_110 ])
            (reg:SF 203 [ _159 ]))) "CALVIS.f":154 -1
     (nil))
(insn 260 259 261 7 (set (reg:QI 293)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALVIS.f":154 -1
     (nil))
(insn 261 260 262 7 (set (reg:SI 185 [ _99 ])
        (zero_extend:SI (reg:QI 293))) "CALVIS.f":154 -1
     (nil))
(insn 262 261 263 7 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 194 [ M.0_110 ])
                    (reg:SF 194 [ M.0_110 ]))
            ] UNSPEC_NOTRAP)) "CALVIS.f":154 -1
     (nil))
(insn 263 262 264 7 (set (reg:QI 294)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALVIS.f":154 -1
     (nil))
(insn 264 263 265 7 (set (reg:SI 186 [ _100 ])
        (zero_extend:SI (reg:QI 294))) "CALVIS.f":154 -1
     (nil))
(insn 265 264 266 7 (parallel [
            (set (reg:SI 187 [ _101 ])
                (ior:SI (reg:SI 185 [ _99 ])
                    (reg:SI 186 [ _100 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":154 -1
     (nil))
(insn 266 265 267 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 187 [ _101 ])
            (const_int 0 [0]))) "CALVIS.f":154 -1
     (nil))
(jump_insn 267 266 268 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) "CALVIS.f":154 -1
     (nil)
 -> 269)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 2, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
(note 268 267 9 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 9 268 269 8 (set (reg:SF 194 [ M.0_110 ])
        (reg:SF 203 [ _159 ])) "CALVIS.f":154 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 2, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              8 (FALLTHRU)
(code_label 269 9 270 9 4 (nil) [1 uses])
(note 270 269 271 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 9 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALVIS.f":154 -1
     (nil))
(insn 272 271 273 9 (set (reg:DI 188 [ _102 ])
        (sign_extend:DI (reg:SI 295))) "CALVIS.f":154 -1
     (nil))
(insn 273 272 274 9 (parallel [
            (set (reg:DI 189 [ _103 ])
                (mult:DI (reg:DI 188 [ _102 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":154 -1
     (nil))
(insn 274 273 275 9 (set (reg:SI 296)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALVIS.f":154 -1
     (nil))
(insn 275 274 276 9 (set (reg:DI 190 [ _104 ])
        (sign_extend:DI (reg:SI 296))) "CALVIS.f":154 -1
     (nil))
(insn 276 275 277 9 (parallel [
            (set (reg:DI 191 [ _105 ])
                (plus:DI (reg:DI 189 [ _103 ])
                    (reg:DI 190 [ _104 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":154 -1
     (nil))
(insn 277 276 278 9 (parallel [
            (set (reg:DI 192 [ _106 ])
                (plus:DI (reg:DI 191 [ _105 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":154 -1
     (nil))
(insn 278 277 279 9 (set (reg:SF 297)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":154 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 279 278 280 9 (set (reg:SF 193 [ _107 ])
        (mult:SF (reg:SF 194 [ M.0_110 ])
            (reg:SF 297))) "CALVIS.f":154 -1
     (nil))
(insn 280 279 281 9 (set (reg/f:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [3 vis+0 S8 A64])) "CALVIS.f":154 -1
     (nil))
(insn 281 280 282 9 (set (mem:SF (plus:DI (mult:DI (reg:DI 192 [ _106 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 298)) [2 *vis_161(D) S4 A32])
        (reg:SF 193 [ _107 ])) "CALVIS.f":154 -1
     (nil))
(insn 282 281 284 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":83 -1
     (nil))
(jump_insn 284 282 285 9 (set (pc)
        (label_ref 283)) "CALVIS.f":83 -1
     (nil)
 -> 283)
;;  succ:       6 (DFS_BACK)

(barrier 285 284 286)
;; basic block 10, loop depth 1, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 286 285 287 10 3 (nil) [1 uses])
(note 287 286 288 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 290 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":82 -1
     (nil))
(jump_insn 290 288 291 10 (set (pc)
        (label_ref 289)) "CALVIS.f":82 -1
     (nil)
 -> 289)
;;  succ:       4 (DFS_BACK)

(barrier 291 290 292)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 292 291 293 11 2 (nil) [1 uses])
(note 293 292 298 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 298 293 0 11 (const_int 0 [0]) "CALVIS.f":158 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

