
;; Function caldwp2 (caldwp2_, funcdef_no=0, decl_uid=3772, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 23 n_edges 28 count 31 (  1.3)
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 20 9 19 10 11 12 13 14 15 16 22 17 21 18
;;
;; Loop 3
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 22 13 12 16 15 14
;;
;; Loop 4
;;  header 13, latch 16
;;  depth 2, outer 3
;;  nodes: 13 16 15 14
;;
;; Loop 1
;;  header 3, latch 9
;;  depth 1, outer 0
;;  nodes: 3 9 20 5 4 8 6 7
;;
;; Loop 2
;;  header 5, latch 8
;;  depth 2, outer 1
;;  nodes: 5 8 6 7
;; 2 succs { 3 }
;; 3 succs { 19 4 }
;; 4 succs { 5 }
;; 5 succs { 20 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 5 }
;; 20 succs { 9 }
;; 9 succs { 3 }
;; 19 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 21 12 }
;; 12 succs { 13 }
;; 13 succs { 22 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 13 }
;; 22 succs { 17 }
;; 17 succs { 11 }
;; 21 succs { 18 }
;; 18 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 140.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r204,l0) best SIREG, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a69 (r194,l0) best SSE_REGS, allocno SSE_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a97 (r185,l0) best SSE_REGS, allocno SSE_REGS
    r184: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a99 (r184,l0) best SSE_REGS, allocno SSE_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a52 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a45 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a18 (r151,l0) best SSE_REGS, allocno SSE_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a19 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a68 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a70 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a87 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a88 (r108,l0) best SSE_REGS, allocno SSE_REGS
    r107: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a96 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a98 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a100 (r105,l0) best SSE_REGS, allocno SSE_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a89 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a109 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a110 (r92,l0) best SSE_REGS, allocno SSE_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a3(r162,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 FP_TOP_REG:24000 FP_SECOND_REG:24000 FLOAT_REGS:24000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:24000 FP_TOP_SSE_REGS:24000 FP_SECOND_SSE_REGS:24000 FLOAT_SSE_REGS:24000 FLOAT_INT_REGS:24000 INT_SSE_REGS:24000 FLOAT_INT_SSE_REGS:24000 ALL_REGS:24000 MEM:12000
  a4(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a6(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a7(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a8(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a9(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a10(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a11(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a12(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a13(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a14(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a15(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a16(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a17(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a18(r151,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:11000
  a19(r145,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:12000
  a20(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a21(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a22(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a23(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a24(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a25(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a26(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a27(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a28(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a29(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a30(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a31(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a32(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a33(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a34(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a35(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a36(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a37(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a38(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a39(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a40(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a41(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a42(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a43(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a44(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a45(r163,l0) costs: AREG:45000 DREG:45000 CREG:45000 BREG:45000 SIREG:45000 DIREG:45000 AD_REGS:45000 CLOBBERED_REGS:45000 Q_REGS:45000 NON_Q_REGS:45000 TLS_GOTBASE_REGS:45000 GENERAL_REGS:45000 FP_TOP_REG:69000 FP_SECOND_REG:69000 FLOAT_REGS:69000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:69000 FP_TOP_SSE_REGS:69000 FP_SECOND_SSE_REGS:69000 FLOAT_SSE_REGS:69000 FLOAT_INT_REGS:69000 INT_SSE_REGS:69000 FLOAT_INT_SSE_REGS:69000 ALL_REGS:69000 MEM:29000
  a46(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a47(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a48(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a49(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a50(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a51(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a52(r168,l0) costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 CLOBBERED_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 TLS_GOTBASE_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:31000 FP_SECOND_REG:31000 FLOAT_REGS:31000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31000 FP_TOP_SSE_REGS:31000 FP_SECOND_SSE_REGS:31000 FLOAT_SSE_REGS:31000 FLOAT_INT_REGS:31000 INT_SSE_REGS:31000 FLOAT_INT_SSE_REGS:31000 ALL_REGS:31000 MEM:13000
  a53(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a54(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a55(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a56(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a57(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a58(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a59(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a60(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a61(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a62(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a63(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a64(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a65(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a66(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a67(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a68(r126,l0) costs: AREG:10000 DREG:10000 CREG:10000 BREG:10000 SIREG:10000 DIREG:10000 AD_REGS:10000 CLOBBERED_REGS:10000 Q_REGS:10000 NON_Q_REGS:10000 TLS_GOTBASE_REGS:10000 GENERAL_REGS:10000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:12000
  a69(r194,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:11000
  a70(r120,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:11000
  a71(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a72(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a73(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a74(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a75(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a76(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a77(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a78(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a79(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a80(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a81(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a82(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a83(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a84(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a85(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a86(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a87(r114,l0) costs: AREG:10000 DREG:10000 CREG:10000 BREG:10000 SIREG:10000 DIREG:10000 AD_REGS:10000 CLOBBERED_REGS:10000 Q_REGS:10000 NON_Q_REGS:10000 TLS_GOTBASE_REGS:10000 GENERAL_REGS:10000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:12000
  a88(r108,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:19000 FP_SECOND_REG:19000 FLOAT_REGS:19000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:19000 FP_TOP_SSE_REGS:19000 FP_SECOND_SSE_REGS:19000 FLOAT_SSE_REGS:19000 FLOAT_INT_REGS:19000 INT_SSE_REGS:19000 FLOAT_INT_SSE_REGS:19000 ALL_REGS:19000 MEM:6000
  a89(r99,l0) costs: AREG:21000 DREG:21000 CREG:21000 BREG:21000 SIREG:21000 DIREG:21000 AD_REGS:21000 CLOBBERED_REGS:21000 Q_REGS:21000 NON_Q_REGS:21000 TLS_GOTBASE_REGS:21000 GENERAL_REGS:21000 FP_TOP_REG:26000 FP_SECOND_REG:26000 FLOAT_REGS:26000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:26000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:12000
  a90(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a91(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a92(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a93(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a94(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a95(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a96(r107,l0) costs: AREG:10000 DREG:10000 CREG:10000 BREG:10000 SIREG:10000 DIREG:10000 AD_REGS:10000 CLOBBERED_REGS:10000 Q_REGS:10000 NON_Q_REGS:10000 TLS_GOTBASE_REGS:10000 GENERAL_REGS:10000 FP_TOP_REG:19000 FP_SECOND_REG:19000 FLOAT_REGS:19000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:19000 FP_TOP_SSE_REGS:19000 FP_SECOND_SSE_REGS:19000 FLOAT_SSE_REGS:19000 FLOAT_INT_REGS:19000 INT_SSE_REGS:19000 FLOAT_INT_SSE_REGS:19000 ALL_REGS:19000 MEM:7000
  a97(r185,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:11000
  a98(r106,l0) costs: AREG:21000 DREG:21000 CREG:21000 BREG:21000 SIREG:21000 DIREG:21000 AD_REGS:21000 CLOBBERED_REGS:21000 Q_REGS:21000 NON_Q_REGS:21000 TLS_GOTBASE_REGS:21000 GENERAL_REGS:21000 FP_TOP_REG:26000 FP_SECOND_REG:26000 FLOAT_REGS:26000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:26000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:11000
  a99(r184,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:11000
  a100(r105,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:11000
  a101(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a102(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a103(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a104(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a105(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a106(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a107(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a108(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a109(r98,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:11000
  a110(r92,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:11000
  a111(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a112(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a113(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a114(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a115(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a116(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a117(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a118(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a119(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a120(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a121(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a122(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a123(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a124(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a125(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a126(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a127(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a128(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a129(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a130(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a131(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 222(l0): point = 0
   Insn 239(l0): point = 3
   Insn 149(l0): point = 6
   Insn 148(l0): point = 8
   Insn 147(l0): point = 10
   Insn 146(l0): point = 12
   Insn 145(l0): point = 14
   Insn 229(l0): point = 17
   Insn 209(l0): point = 19
   Insn 242(l0): point = 22
   Insn 157(l0): point = 25
   Insn 156(l0): point = 27
   Insn 155(l0): point = 29
   Insn 154(l0): point = 31
   Insn 153(l0): point = 33
   Insn 151(l0): point = 36
   Insn 227(l0): point = 39
   Insn 203(l0): point = 41
   Insn 200(l0): point = 44
   Insn 199(l0): point = 46
   Insn 198(l0): point = 48
   Insn 197(l0): point = 50
   Insn 196(l0): point = 52
   Insn 195(l0): point = 54
   Insn 194(l0): point = 56
   Insn 193(l0): point = 58
   Insn 192(l0): point = 60
   Insn 191(l0): point = 62
   Insn 190(l0): point = 64
   Insn 189(l0): point = 66
   Insn 188(l0): point = 68
   Insn 187(l0): point = 70
   Insn 186(l0): point = 72
   Insn 185(l0): point = 74
   Insn 184(l0): point = 76
   Insn 183(l0): point = 78
   Insn 178(l0): point = 81
   Insn 177(l0): point = 83
   Insn 176(l0): point = 85
   Insn 175(l0): point = 87
   Insn 174(l0): point = 89
   Insn 173(l0): point = 91
   Insn 172(l0): point = 93
   Insn 171(l0): point = 95
   Insn 170(l0): point = 97
   Insn 169(l0): point = 99
   Insn 168(l0): point = 101
   Insn 167(l0): point = 103
   Insn 166(l0): point = 105
   Insn 165(l0): point = 107
   Insn 164(l0): point = 109
   Insn 163(l0): point = 111
   Insn 162(l0): point = 113
   Insn 161(l0): point = 115
   Insn 160(l0): point = 117
   Insn 159(l0): point = 119
   Insn 143(l0): point = 122
   Insn 142(l0): point = 124
   Insn 141(l0): point = 126
   Insn 140(l0): point = 128
   Insn 139(l0): point = 130
   Insn 138(l0): point = 132
   Insn 137(l0): point = 134
   Insn 136(l0): point = 136
   Insn 135(l0): point = 138
   Insn 134(l0): point = 140
   Insn 233(l0): point = 143
   Insn 18(l0): point = 146
   Insn 17(l0): point = 148
   Insn 16(l0): point = 150
   Insn 15(l0): point = 152
   Insn 14(l0): point = 154
   Insn 225(l0): point = 157
   Insn 128(l0): point = 159
   Insn 236(l0): point = 162
   Insn 26(l0): point = 165
   Insn 25(l0): point = 167
   Insn 24(l0): point = 169
   Insn 23(l0): point = 171
   Insn 22(l0): point = 173
   Insn 20(l0): point = 176
   Insn 223(l0): point = 179
   Insn 122(l0): point = 181
   Insn 121(l0): point = 183
   Insn 120(l0): point = 185
   Insn 119(l0): point = 187
   Insn 118(l0): point = 189
   Insn 117(l0): point = 191
   Insn 116(l0): point = 193
   Insn 115(l0): point = 195
   Insn 114(l0): point = 197
   Insn 113(l0): point = 199
   Insn 109(l0): point = 202
   Insn 108(l0): point = 204
   Insn 107(l0): point = 206
   Insn 106(l0): point = 208
   Insn 105(l0): point = 210
   Insn 104(l0): point = 212
   Insn 103(l0): point = 214
   Insn 102(l0): point = 216
   Insn 101(l0): point = 218
   Insn 100(l0): point = 220
   Insn 99(l0): point = 222
   Insn 98(l0): point = 224
   Insn 97(l0): point = 226
   Insn 96(l0): point = 228
   Insn 95(l0): point = 230
   Insn 94(l0): point = 232
   Insn 93(l0): point = 234
   Insn 92(l0): point = 236
   Insn 91(l0): point = 238
   Insn 90(l0): point = 240
   Insn 89(l0): point = 242
   Insn 88(l0): point = 244
   Insn 87(l0): point = 246
   Insn 86(l0): point = 248
   Insn 85(l0): point = 250
   Insn 84(l0): point = 252
   Insn 83(l0): point = 254
   Insn 82(l0): point = 256
   Insn 81(l0): point = 258
   Insn 80(l0): point = 260
   Insn 79(l0): point = 262
   Insn 78(l0): point = 264
   Insn 77(l0): point = 266
   Insn 76(l0): point = 268
   Insn 75(l0): point = 270
   Insn 74(l0): point = 272
   Insn 73(l0): point = 274
   Insn 72(l0): point = 276
   Insn 71(l0): point = 278
   Insn 70(l0): point = 280
   Insn 69(l0): point = 282
   Insn 68(l0): point = 284
   Insn 67(l0): point = 286
   Insn 66(l0): point = 288
   Insn 65(l0): point = 290
   Insn 64(l0): point = 292
   Insn 63(l0): point = 294
   Insn 62(l0): point = 296
   Insn 61(l0): point = 298
   Insn 60(l0): point = 300
   Insn 59(l0): point = 302
   Insn 58(l0): point = 304
   Insn 57(l0): point = 306
   Insn 56(l0): point = 308
   Insn 55(l0): point = 310
   Insn 54(l0): point = 312
   Insn 53(l0): point = 314
   Insn 52(l0): point = 316
   Insn 51(l0): point = 318
   Insn 50(l0): point = 320
   Insn 49(l0): point = 322
   Insn 48(l0): point = 324
   Insn 47(l0): point = 326
   Insn 46(l0): point = 328
   Insn 45(l0): point = 330
   Insn 44(l0): point = 332
   Insn 43(l0): point = 334
   Insn 42(l0): point = 336
   Insn 41(l0): point = 338
   Insn 40(l0): point = 340
   Insn 39(l0): point = 342
   Insn 38(l0): point = 344
   Insn 37(l0): point = 346
   Insn 36(l0): point = 348
   Insn 35(l0): point = 350
   Insn 34(l0): point = 352
   Insn 33(l0): point = 354
   Insn 32(l0): point = 356
   Insn 31(l0): point = 358
   Insn 30(l0): point = 360
   Insn 29(l0): point = 362
   Insn 28(l0): point = 364
   Insn 7(l0): point = 367
   Insn 12(l0): point = 370
   Insn 11(l0): point = 372
   Insn 10(l0): point = 374
   Insn 5(l0): point = 376
   Insn 4(l0): point = 378
   Insn 3(l0): point = 380
   Insn 2(l0): point = 382
 a0(r170): [6..124]
 a1(r218): [45..46]
 a2(r161): [45..52]
 a3(r162): [45..48]
 a4(r217): [49..50]
 a5(r156): [49..66]
 a6(r160): [53..54]
 a7(r159): [55..56]
 a8(r158): [55..60]
 a9(r216): [57..58]
 a10(r157): [61..62]
 a11(r215): [63..64]
 a12(r155): [67..68]
 a13(r154): [69..70]
 a14(r153): [69..74]
 a15(r214): [71..72]
 a16(r152): [75..76]
 a17(r213): [77..78]
 a18(r151): [84..85]
 a19(r145): [84..103]
 a20(r212): [86..87]
 a21(r150): [86..89]
 a22(r149): [90..91]
 a23(r148): [92..93]
 a24(r147): [92..97]
 a25(r211): [94..95]
 a26(r146): [98..99]
 a27(r210): [100..101]
 a28(r209): [104..105]
 a29(r144): [104..107]
 a30(r143): [108..109]
 a31(r142): [110..111]
 a32(r141): [110..115]
 a33(r208): [112..113]
 a34(r140): [116..117]
 a35(r207): [118..119]
 a36(r172): [28..29]
 a37(r206): [30..31]
 a38(r171): [9..10]
 a39(r205): [11..12]
 a40(r169): [123..126]
 a41(r204): [135..140]
 a42(r165): [146..372]
 a43(r203): [184..185]
 a44(r139): [184..187]
 a45(r163): [367..367] [184..238]
 a46(r138): [188..189]
 a47(r137): [190..191]
 a48(r136): [190..195]
 a49(r202): [192..193]
 a50(r135): [196..197]
 a51(r201): [198..199]
 a52(r168): [368..369] [202..220]
 a53(r134): [205..206]
 a54(r133): [207..208]
 a55(r132): [207..214]
 a56(r200): [209..210]
 a57(r199): [215..216]
 a58(r198): [221..222]
 a59(r131): [221..224]
 a60(r130): [225..226]
 a61(r129): [227..228]
 a62(r128): [227..232]
 a63(r197): [229..230]
 a64(r127): [233..234]
 a65(r196): [235..236]
 a66(r195): [241..242]
 a67(r125): [241..248]
 a68(r126): [241..244]
 a69(r194): [245..246]
 a70(r120): [245..262]
 a71(r124): [249..250]
 a72(r123): [251..252]
 a73(r122): [251..256]
 a74(r193): [253..254]
 a75(r121): [257..258]
 a76(r192): [259..260]
 a77(r191): [263..264]
 a78(r119): [263..266]
 a79(r118): [267..268]
 a80(r117): [269..270]
 a81(r116): [269..274]
 a82(r190): [271..272]
 a83(r115): [275..276]
 a84(r189): [277..278]
 a85(r188): [281..282]
 a86(r113): [281..286]
 a87(r114): [281..284]
 a88(r108): [285..300]
 a89(r99): [285..328]
 a90(r112): [287..288]
 a91(r111): [289..290]
 a92(r110): [289..294]
 a93(r187): [291..292]
 a94(r109): [295..296]
 a95(r186): [297..298]
 a96(r107): [301..302]
 a97(r185): [303..304]
 a98(r106): [303..306]
 a99(r184): [307..308]
 a100(r105): [307..310]
 a101(r183): [311..312]
 a102(r104): [311..314]
 a103(r103): [315..316]
 a104(r102): [317..318]
 a105(r101): [317..322]
 a106(r182): [319..320]
 a107(r100): [323..324]
 a108(r181): [325..326]
 a109(r98): [329..330]
 a110(r92): [329..348]
 a111(r180): [331..332]
 a112(r97): [331..334]
 a113(r96): [335..336]
 a114(r95): [337..338]
 a115(r94): [337..342]
 a116(r179): [339..340]
 a117(r93): [343..344]
 a118(r178): [345..346]
 a119(r177): [349..350]
 a120(r91): [349..352]
 a121(r90): [353..354]
 a122(r89): [355..356]
 a123(r88): [355..360]
 a124(r176): [357..358]
 a125(r87): [361..362]
 a126(r175): [363..364]
 a127(r167): [168..169]
 a128(r174): [170..171]
 a129(r166): [149..150]
 a130(r173): [151..152]
 a131(r164): [371..374]
Compressing live ranges: from 385 to 191 - 49%
Ranges after the compression:
 a0(r170): [0..59]
 a1(r218): [8..9]
 a2(r161): [8..11]
 a3(r162): [8..9]
 a4(r217): [10..11]
 a5(r156): [10..21]
 a6(r160): [12..13]
 a7(r159): [14..15]
 a8(r158): [14..17]
 a9(r216): [16..17]
 a10(r157): [18..19]
 a11(r215): [20..21]
 a12(r155): [22..23]
 a13(r154): [24..25]
 a14(r153): [24..27]
 a15(r214): [26..27]
 a16(r152): [28..29]
 a17(r213): [30..31]
 a18(r151): [32..33]
 a19(r145): [32..45]
 a20(r212): [34..35]
 a21(r150): [34..35]
 a22(r149): [36..37]
 a23(r148): [38..39]
 a24(r147): [38..41]
 a25(r211): [40..41]
 a26(r146): [42..43]
 a27(r210): [44..45]
 a28(r209): [46..47]
 a29(r144): [46..47]
 a30(r143): [48..49]
 a31(r142): [50..51]
 a32(r141): [50..53]
 a33(r208): [52..53]
 a34(r140): [54..55]
 a35(r207): [56..57]
 a36(r172): [4..5]
 a37(r206): [6..7]
 a38(r171): [0..1]
 a39(r205): [2..3]
 a40(r169): [58..59]
 a41(r204): [60..61]
 a42(r165): [62..190]
 a43(r203): [70..71]
 a44(r139): [70..71]
 a45(r163): [186..186] [70..101]
 a46(r138): [72..73]
 a47(r137): [74..75]
 a48(r136): [74..77]
 a49(r202): [76..77]
 a50(r135): [78..79]
 a51(r201): [80..81]
 a52(r168): [187..188] [82..89]
 a53(r134): [82..83]
 a54(r133): [84..85]
 a55(r132): [84..87]
 a56(r200): [86..87]
 a57(r199): [88..89]
 a58(r198): [90..91]
 a59(r131): [90..91]
 a60(r130): [92..93]
 a61(r129): [94..95]
 a62(r128): [94..97]
 a63(r197): [96..97]
 a64(r127): [98..99]
 a65(r196): [100..101]
 a66(r195): [102..103]
 a67(r125): [102..105]
 a68(r126): [102..103]
 a69(r194): [104..105]
 a70(r120): [104..115]
 a71(r124): [106..107]
 a72(r123): [108..109]
 a73(r122): [108..111]
 a74(r193): [110..111]
 a75(r121): [112..113]
 a76(r192): [114..115]
 a77(r191): [116..117]
 a78(r119): [116..117]
 a79(r118): [118..119]
 a80(r117): [120..121]
 a81(r116): [120..123]
 a82(r190): [122..123]
 a83(r115): [124..125]
 a84(r189): [126..127]
 a85(r188): [128..129]
 a86(r113): [128..131]
 a87(r114): [128..129]
 a88(r108): [130..141]
 a89(r99): [130..159]
 a90(r112): [132..133]
 a91(r111): [134..135]
 a92(r110): [134..137]
 a93(r187): [136..137]
 a94(r109): [138..139]
 a95(r186): [140..141]
 a96(r107): [142..143]
 a97(r185): [144..145]
 a98(r106): [144..145]
 a99(r184): [146..147]
 a100(r105): [146..147]
 a101(r183): [148..149]
 a102(r104): [148..149]
 a103(r103): [150..151]
 a104(r102): [152..153]
 a105(r101): [152..155]
 a106(r182): [154..155]
 a107(r100): [156..157]
 a108(r181): [158..159]
 a109(r98): [160..161]
 a110(r92): [160..173]
 a111(r180): [162..163]
 a112(r97): [162..163]
 a113(r96): [164..165]
 a114(r95): [166..167]
 a115(r94): [166..169]
 a116(r179): [168..169]
 a117(r93): [170..171]
 a118(r178): [172..173]
 a119(r177): [174..175]
 a120(r91): [174..175]
 a121(r90): [176..177]
 a122(r89): [178..179]
 a123(r88): [178..181]
 a124(r176): [180..181]
 a125(r87): [182..183]
 a126(r175): [184..185]
 a127(r167): [66..67]
 a128(r174): [68..69]
 a129(r166): [62..63]
 a130(r173): [64..65]
 a131(r164): [189..190]
  pref0:a41(r204)<-hr4@500
  regions=1, blocks=23, points=191
    allocnos=132 (big 0), copies=0, conflicts=0, ranges=134
Disposition:
  125:r87  l0     1  123:r88  l0     2  122:r89  l0     1  121:r90  l0     1
  120:r91  l0     2  110:r92  l0    22  117:r93  l0     1  115:r94  l0     2
  114:r95  l0     1  113:r96  l0     1  112:r97  l0     2  109:r98  l0    21
   89:r99  l0    21  107:r100 l0     1  105:r101 l0     2  104:r102 l0     1
  103:r103 l0     1  102:r104 l0     2  100:r105 l0    23   98:r106 l0    23
   96:r107 l0    22   88:r108 l0    22   94:r109 l0     1   92:r110 l0     2
   91:r111 l0     1   90:r112 l0     1   86:r113 l0     2   87:r114 l0    21
   83:r115 l0     1   81:r116 l0     2   80:r117 l0     1   79:r118 l0     1
   78:r119 l0     2   70:r120 l0    22   75:r121 l0     1   73:r122 l0     2
   72:r123 l0     1   71:r124 l0     1   67:r125 l0     2   68:r126 l0    21
   64:r127 l0     1   62:r128 l0     2   61:r129 l0     1   60:r130 l0     1
   59:r131 l0     2   55:r132 l0     2   54:r133 l0     1   53:r134 l0     1
   50:r135 l0     1   48:r136 l0     2   47:r137 l0     1   46:r138 l0     1
   44:r139 l0     2   34:r140 l0     1   32:r141 l0     2   31:r142 l0     1
   30:r143 l0     1   29:r144 l0     2   19:r145 l0    21   26:r146 l0     1
   24:r147 l0     2   23:r148 l0     1   22:r149 l0     1   21:r150 l0     2
   18:r151 l0    22   16:r152 l0     1   14:r153 l0     2   13:r154 l0     1
   12:r155 l0     1    5:r156 l0     4   10:r157 l0     1    8:r158 l0     2
    7:r159 l0     1    6:r160 l0     1    2:r161 l0     2    3:r162 l0    21
   45:r163 l0    21  131:r164 l0     1   42:r165 l0     0  129:r166 l0     1
  127:r167 l0     1   52:r168 l0    22   40:r169 l0     1    0:r170 l0     0
   38:r171 l0     1   36:r172 l0     1  130:r173 l0     1  128:r174 l0     1
  126:r175 l0     1  124:r176 l0     1  119:r177 l0     1  118:r178 l0     1
  116:r179 l0     1  111:r180 l0     1  108:r181 l0     1  106:r182 l0     1
  101:r183 l0     1   99:r184 l0    22   97:r185 l0    22   95:r186 l0     1
   93:r187 l0     1   85:r188 l0     1   84:r189 l0     1   82:r190 l0     1
   77:r191 l0     1   76:r192 l0     1   74:r193 l0     1   69:r194 l0    21
   66:r195 l0     1   65:r196 l0     1   63:r197 l0     1   58:r198 l0     1
   57:r199 l0     1   56:r200 l0     1   51:r201 l0     1   49:r202 l0     1
   43:r203 l0     1   41:r204 l0     0   39:r205 l0     1   37:r206 l0     1
   35:r207 l0     1   33:r208 l0     1   28:r209 l0     1   27:r210 l0     1
   25:r211 l0     1   20:r212 l0     1   17:r213 l0     1   15:r214 l0     1
   11:r215 l0     1    9:r216 l0     1    4:r217 l0     1    1:r218 l0     1
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


caldwp2

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,1u} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,22u} r7={1d,23u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,21u} r17={54d,12u} r18={1d} r19={1d} r20={1d,74u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={2d,4u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,2u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} 
;;    total ref usage 579{282d,297u,0e} in 182{181 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 164 165
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 p1d+0 S8 A64])
        (reg:DI 5 di [ p1d ])) "CALDWP2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ p1d ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 q1d+0 S8 A64])
        (reg:DI 4 si [ q1d ])) "CALDWP2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ q1d ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 tdwp+0 S8 A64])
        (reg:DI 1 dx [ tdwp ])) "CALDWP2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ tdwp ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 t1d+0 S8 A64])
        (reg:DI 2 cx [ t1d ])) "CALDWP2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ t1d ])
        (nil)))
(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 6 11 2 (set (reg:SI 164 [ _88 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fc679a00870 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALDWP2.f":68 86 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 165 [ _89 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fc679a00870 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALDWP2.f":68 86 {*movsi_internal}
     (nil))
(insn 12 11 129 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 164 [ _88 ])) "CALDWP2.f":68 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 164 [ _88 ])
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              9 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  def 	 17 [flags] 166 173
(code_label 129 12 13 3 6 (nil) [1 uses])
(note 13 129 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 165 [ _89 ]))) "CALDWP2.f":68 11 {*cmpsi_1}
     (nil))
(insn 15 14 16 3 (set (reg:QI 173)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALDWP2.f":68 678 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 16 15 17 3 (set (reg:SI 166 [ _91 ])
        (zero_extend:SI (reg:QI 173))) "CALDWP2.f":68 140 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 173)
        (nil)))
(insn 17 16 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 166 [ _91 ])
            (const_int 0 [0]))) "CALDWP2.f":68 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 166 [ _91 ])
        (nil)))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 232)
            (pc))) "CALDWP2.f":68 682 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 232)
;;  succ:       19
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 123 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALDWP2.f":69 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;;              8 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 167 174
(code_label 123 20 21 5 5 (nil) [1 uses])
(note 21 123 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALDWP2.f":69 11 {*cmpsi_1}
     (nil))
(insn 23 22 24 5 (set (reg:QI 174)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALDWP2.f":69 678 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 24 23 25 5 (set (reg:SI 167 [ _93 ])
        (zero_extend:SI (reg:QI 174))) "CALDWP2.f":69 140 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 174)
        (nil)))
(insn 25 24 26 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 167 [ _93 ])
            (const_int 0 [0]))) "CALDWP2.f":69 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 167 [ _93 ])
        (nil)))
(jump_insn 26 25 27 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 235)
            (pc))) "CALDWP2.f":69 682 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 235)
;;  succ:       20
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 163 168 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDWP2.f":70 86 {*movsi_internal}
     (nil))
(insn 29 28 30 6 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 175))) "CALDWP2.f":70 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 175)
        (nil)))
(insn 30 29 31 6 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":70 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 6 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDWP2.f":70 86 {*movsi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 176))) "CALDWP2.f":70 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 176)
        (nil)))
(insn 33 32 34 6 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":70 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 89 [ _3 ])
        (expr_list:REG_DEAD (reg:DI 88 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 34 33 35 6 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":70 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 35 34 36 6 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 p1d+0 S8 A64])) "CALDWP2.f":70 85 {*movdi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:SF 92 [ _6 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 91 [ _5 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 177)) [4 *p1d_94(D) S4 A32])) "CALDWP2.f":70 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 177)
        (expr_list:REG_DEAD (reg:DI 91 [ _5 ])
            (nil))))
(insn 37 36 38 6 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDWP2.f":70 86 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 178))) "CALDWP2.f":70 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 178)
        (nil)))
(insn 39 38 40 6 (parallel [
            (set (reg:DI 94 [ _8 ])
                (mult:DI (reg:DI 93 [ _7 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":70 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 93 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 6 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDWP2.f":70 86 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:DI 95 [ _9 ])
        (sign_extend:DI (reg:SI 179))) "CALDWP2.f":70 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 179)
        (nil)))
(insn 42 41 43 6 (parallel [
            (set (reg:DI 96 [ _10 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":70 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 95 [ _9 ])
        (expr_list:REG_DEAD (reg:DI 94 [ _8 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 43 42 44 6 (parallel [
            (set (reg:DI 97 [ _11 ])
                (plus:DI (reg:DI 96 [ _10 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":70 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 96 [ _10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 44 43 45 6 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 q1d+0 S8 A64])) "CALDWP2.f":70 85 {*movdi_internal}
     (nil))
(insn 45 44 46 6 (set (reg:SF 98 [ _12 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 180)) [4 *q1d_95(D) S4 A32])) "CALDWP2.f":70 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 180)
        (expr_list:REG_DEAD (reg:DI 97 [ _11 ])
            (nil))))
(insn 46 45 47 6 (set (reg:SF 99 [ _13 ])
        (mult:SF (reg:SF 92 [ _6 ])
            (reg:SF 98 [ _12 ]))) "CALDWP2.f":70 838 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 98 [ _12 ])
        (expr_list:REG_DEAD (reg:SF 92 [ _6 ])
            (nil))))
(insn 47 46 48 6 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDWP2.f":70 86 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:DI 100 [ _14 ])
        (sign_extend:DI (reg:SI 181))) "CALDWP2.f":70 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 181)
        (nil)))
(insn 49 48 50 6 (parallel [
            (set (reg:DI 101 [ _15 ])
                (mult:DI (reg:DI 100 [ _14 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":70 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 100 [ _14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 6 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDWP2.f":70 86 {*movsi_internal}
     (nil))
(insn 51 50 52 6 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 182))) "CALDWP2.f":70 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 182)
        (nil)))
(insn 52 51 53 6 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 101 [ _15 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":70 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
        (expr_list:REG_DEAD (reg:DI 101 [ _15 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 53 52 54 6 (parallel [
            (set (reg:DI 104 [ _18 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":70 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 54 53 55 6 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 q1d+0 S8 A64])) "CALDWP2.f":70 85 {*movdi_internal}
     (nil))
(insn 55 54 56 6 (set (reg:SF 105 [ _19 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 104 [ _18 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 183)) [4 *q1d_95(D) S4 A32])) "CALDWP2.f":70 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 183)
        (expr_list:REG_DEAD (reg:DI 104 [ _18 ])
            (nil))))
(insn 56 55 57 6 (set (reg:SF 184)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALDWP2.f":70 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.780210018157958984375e-1 [0x0.c18bf8p-1])
        (nil)))
(insn 57 56 58 6 (set (reg:SF 106 [ _20 ])
        (mult:SF (reg:SF 105 [ _19 ])
            (reg:SF 184))) "CALDWP2.f":70 838 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 184)
        (expr_list:REG_DEAD (reg:SF 105 [ _19 ])
            (nil))))
(insn 58 57 59 6 (set (reg:SF 185)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALDWP2.f":70 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.219789981842041015625e-1 [0x0.9f3a04p+0])
        (nil)))
(insn 59 58 60 6 (set (reg:SF 107 [ _21 ])
        (plus:SF (reg:SF 106 [ _20 ])
            (reg:SF 185))) "CALDWP2.f":70 838 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 185)
        (expr_list:REG_DEAD (reg:SF 106 [ _20 ])
            (nil))))
(insn 60 59 61 6 (set (reg:SF 108 [ _22 ])
        (reg:SF 107 [ _21 ])) "CALDWP2.f":70 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 107 [ _21 ])
        (nil)))
(insn 61 60 62 6 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDWP2.f":70 86 {*movsi_internal}
     (nil))
(insn 62 61 63 6 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 186))) "CALDWP2.f":70 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 186)
        (nil)))
(insn 63 62 64 6 (parallel [
            (set (reg:DI 110 [ _24 ])
                (mult:DI (reg:DI 109 [ _23 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":70 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 64 63 65 6 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDWP2.f":70 86 {*movsi_internal}
     (nil))
(insn 65 64 66 6 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 187))) "CALDWP2.f":70 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 187)
        (nil)))
(insn 66 65 67 6 (parallel [
            (set (reg:DI 112 [ _26 ])
                (plus:DI (reg:DI 110 [ _24 ])
                    (reg:DI 111 [ _25 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":70 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 111 [ _25 ])
        (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 67 66 68 6 (parallel [
            (set (reg:DI 113 [ _27 ])
                (plus:DI (reg:DI 112 [ _26 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":70 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 112 [ _26 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 68 67 69 6 (set (reg:SF 114 [ _28 ])
        (div:SF (reg:SF 99 [ _13 ])
            (reg:SF 108 [ _22 ]))) "CALDWP2.f":70 841 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 108 [ _22 ])
        (expr_list:REG_DEAD (reg:SF 99 [ _13 ])
            (nil))))
(insn 69 68 70 6 (set (reg/f:DI 188)
        (symbol_ref:DI ("evp.3858") [flags 0x202]  <var_decl 0x7fc679a02120 evp>)) "CALDWP2.f":70 85 {*movdi_internal}
     (nil))
(insn 70 69 71 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 113 [ _27 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 188)) [4 evp S4 A32])
        (reg:SF 114 [ _28 ])) "CALDWP2.f":70 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 188)
        (expr_list:REG_DEAD (reg:SF 114 [ _28 ])
            (expr_list:REG_DEAD (reg:DI 113 [ _27 ])
                (nil)))))
(insn 71 70 72 6 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDWP2.f":71 86 {*movsi_internal}
     (nil))
(insn 72 71 73 6 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 189))) "CALDWP2.f":71 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 189)
        (nil)))
(insn 73 72 74 6 (parallel [
            (set (reg:DI 116 [ _30 ])
                (mult:DI (reg:DI 115 [ _29 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":71 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 115 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 74 73 75 6 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDWP2.f":71 86 {*movsi_internal}
     (nil))
(insn 75 74 76 6 (set (reg:DI 117 [ _31 ])
        (sign_extend:DI (reg:SI 190))) "CALDWP2.f":71 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 190)
        (nil)))
(insn 76 75 77 6 (parallel [
            (set (reg:DI 118 [ _32 ])
                (plus:DI (reg:DI 116 [ _30 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":71 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 117 [ _31 ])
        (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 77 76 78 6 (parallel [
            (set (reg:DI 119 [ _33 ])
                (plus:DI (reg:DI 118 [ _32 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":71 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 118 [ _32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 79 6 (set (reg/f:DI 191)
        (symbol_ref:DI ("evp.3858") [flags 0x202]  <var_decl 0x7fc679a02120 evp>)) "CALDWP2.f":71 85 {*movdi_internal}
     (nil))
(insn 79 78 80 6 (set (reg:SF 120 [ _34 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 119 [ _33 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 191)) [4 evp S4 A32])) "CALDWP2.f":71 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 191)
        (expr_list:REG_DEAD (reg:DI 119 [ _33 ])
            (nil))))
(insn 80 79 81 6 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDWP2.f":71 86 {*movsi_internal}
     (nil))
(insn 81 80 82 6 (set (reg:DI 121 [ _35 ])
        (sign_extend:DI (reg:SI 192))) "CALDWP2.f":71 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 192)
        (nil)))
(insn 82 81 83 6 (parallel [
            (set (reg:DI 122 [ _36 ])
                (mult:DI (reg:DI 121 [ _35 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":71 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 121 [ _35 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 83 82 84 6 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDWP2.f":71 86 {*movsi_internal}
     (nil))
(insn 84 83 85 6 (set (reg:DI 123 [ _37 ])
        (sign_extend:DI (reg:SI 193))) "CALDWP2.f":71 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 193)
        (nil)))
(insn 85 84 86 6 (parallel [
            (set (reg:DI 124 [ _38 ])
                (plus:DI (reg:DI 122 [ _36 ])
                    (reg:DI 123 [ _37 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":71 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 123 [ _37 ])
        (expr_list:REG_DEAD (reg:DI 122 [ _36 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 86 85 87 6 (parallel [
            (set (reg:DI 125 [ _39 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":71 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 124 [ _38 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 87 86 88 6 (set (reg:SF 194)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALDWP2.f":71 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.000000047497451305389404296875e-3 [0x0.83126fp-9])
        (nil)))
(insn 88 87 89 6 (set (reg:SF 126 [ _40 ])
        (mult:SF (reg:SF 120 [ _34 ])
            (reg:SF 194))) "CALDWP2.f":71 838 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 194)
        (expr_list:REG_DEAD (reg:SF 120 [ _34 ])
            (nil))))
(insn 89 88 90 6 (set (reg/f:DI 195)
        (symbol_ref:DI ("evp.3858") [flags 0x202]  <var_decl 0x7fc679a02120 evp>)) "CALDWP2.f":71 85 {*movdi_internal}
     (nil))
(insn 90 89 91 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 125 [ _39 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 195)) [4 evp S4 A32])
        (reg:SF 126 [ _40 ])) "CALDWP2.f":71 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 195)
        (expr_list:REG_DEAD (reg:SF 126 [ _40 ])
            (expr_list:REG_DEAD (reg:DI 125 [ _39 ])
                (nil)))))
(insn 91 90 92 6 (set (reg:SF 163 [ M.0_81 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALDWP2.f":72 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.999999960041972002500187954865396022796630859375e-13 [0x0.8cbcccp-39])
        (nil)))
(insn 92 91 93 6 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDWP2.f":72 86 {*movsi_internal}
     (nil))
(insn 93 92 94 6 (set (reg:DI 127 [ _41 ])
        (sign_extend:DI (reg:SI 196))) "CALDWP2.f":72 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 196)
        (nil)))
(insn 94 93 95 6 (parallel [
            (set (reg:DI 128 [ _42 ])
                (mult:DI (reg:DI 127 [ _41 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":72 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 127 [ _41 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 95 94 96 6 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDWP2.f":72 86 {*movsi_internal}
     (nil))
(insn 96 95 97 6 (set (reg:DI 129 [ _43 ])
        (sign_extend:DI (reg:SI 197))) "CALDWP2.f":72 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 197)
        (nil)))
(insn 97 96 98 6 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 128 [ _42 ])
                    (reg:DI 129 [ _43 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":72 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 129 [ _43 ])
        (expr_list:REG_DEAD (reg:DI 128 [ _42 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 98 97 99 6 (parallel [
            (set (reg:DI 131 [ _45 ])
                (plus:DI (reg:DI 130 [ _44 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":72 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 130 [ _44 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 99 98 100 6 (set (reg/f:DI 198)
        (symbol_ref:DI ("evp.3858") [flags 0x202]  <var_decl 0x7fc679a02120 evp>)) "CALDWP2.f":72 85 {*movdi_internal}
     (nil))
(insn 100 99 101 6 (set (reg:SF 168 [ _99 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 131 [ _45 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 198)) [4 evp S4 A32])) "CALDWP2.f":72 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 198)
        (expr_list:REG_DEAD (reg:DI 131 [ _45 ])
            (nil))))
(insn 101 100 102 6 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 168 [ _99 ])
            (reg:SF 163 [ M.0_81 ]))) "CALDWP2.f":72 53 {*cmpisf}
     (nil))
(insn 102 101 103 6 (set (reg:QI 199)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALDWP2.f":72 678 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFP 17 flags)
        (nil)))
(insn 103 102 104 6 (set (reg:SI 132 [ _46 ])
        (zero_extend:SI (reg:QI 199))) "CALDWP2.f":72 140 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 199)
        (nil)))
(insn 104 103 105 6 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 163 [ M.0_81 ])
                    (reg:SF 163 [ M.0_81 ]))
            ] UNSPEC_NOTRAP)) "CALDWP2.f":72 54 {*cmpiusf}
     (nil))
(insn 105 104 106 6 (set (reg:QI 200)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALDWP2.f":72 678 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFP 17 flags)
        (nil)))
(insn 106 105 107 6 (set (reg:SI 133 [ _47 ])
        (zero_extend:SI (reg:QI 200))) "CALDWP2.f":72 140 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 200)
        (nil)))
(insn 107 106 108 6 (parallel [
            (set (reg:SI 134 [ _48 ])
                (ior:SI (reg:SI 132 [ _46 ])
                    (reg:SI 133 [ _47 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":72 450 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 133 [ _47 ])
        (expr_list:REG_DEAD (reg:SI 132 [ _46 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 108 107 109 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 134 [ _48 ])
            (const_int 0 [0]))) "CALDWP2.f":72 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 134 [ _48 ])
        (nil)))
(jump_insn 109 108 110 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) "CALDWP2.f":72 682 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 111)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 163 165 168

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165 168
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168
;; lr  def 	 163
(note 110 109 7 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 7 110 111 7 (set (reg:SF 163 [ M.0_81 ])
        (reg:SF 168 [ _99 ])) "CALDWP2.f":72 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 168 [ _99 ])
        (nil)))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 163 165

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 20, flags: (RTL)
;;  pred:       6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 163 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 163
;; lr  def 	 17 [flags] 135 136 137 138 139 201 202 203
(code_label 111 7 112 8 4 (nil) [1 uses])
(note 112 111 113 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 8 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDWP2.f":72 86 {*movsi_internal}
     (nil))
(insn 114 113 115 8 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 201))) "CALDWP2.f":72 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 201)
        (nil)))
(insn 115 114 116 8 (parallel [
            (set (reg:DI 136 [ _50 ])
                (mult:DI (reg:DI 135 [ _49 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":72 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 135 [ _49 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 116 115 117 8 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDWP2.f":72 86 {*movsi_internal}
     (nil))
(insn 117 116 118 8 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 202))) "CALDWP2.f":72 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 202)
        (nil)))
(insn 118 117 119 8 (parallel [
            (set (reg:DI 138 [ _52 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":72 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 137 [ _51 ])
        (expr_list:REG_DEAD (reg:DI 136 [ _50 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 119 118 120 8 (parallel [
            (set (reg:DI 139 [ _53 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":72 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 138 [ _52 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 120 119 121 8 (set (reg/f:DI 203)
        (symbol_ref:DI ("evp.3858") [flags 0x202]  <var_decl 0x7fc679a02120 evp>)) "CALDWP2.f":72 85 {*movdi_internal}
     (nil))
(insn 121 120 122 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 139 [ _53 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 203)) [4 evp S4 A32])
        (reg:SF 163 [ M.0_81 ])) "CALDWP2.f":72 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 203)
        (expr_list:REG_DEAD (reg:SF 163 [ M.0_81 ])
            (expr_list:REG_DEAD (reg:DI 139 [ _53 ])
                (nil)))))
(insn 122 121 223 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":69 221 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 223 122 224 8 (set (pc)
        (label_ref 123)) "CALDWP2.f":69 683 {jump}
     (nil)
 -> 123)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165

(barrier 224 223 235)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 8, next block 9, flags: (RTL)
;;  pred:       5
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 235 224 234 20 16 (nil) [1 uses])
(note 234 235 236 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 236 234 126 20 (const_int 0 [0]) "CALDWP2.f":72 718 {nop}
     (nil))
;;  succ:       9 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165

;; basic block 9, loop depth 0, maybe hot
;;  prev block 20, next block 19, flags: (RTL)
;;  pred:       20 [always]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 126 236 127 9 3 (nil) [0 uses])
(note 127 126 128 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 225 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":68 221 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 225 128 226 9 (set (pc)
        (label_ref 129)) "CALDWP2.f":68 683 {jump}
     (nil)
 -> 129)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165

(barrier 226 225 232)
;; basic block 19, loop depth 0, maybe hot
;;  prev block 9, next block 10, flags: (RTL)
;;  pred:       3
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 232 226 231 19 15 (nil) [1 uses])
(note 231 232 233 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 233 231 132 19 (const_int 0 [0]) "CALDWP2.f":69 718 {nop}
     (nil))
;;  succ:       10 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 19, next block 11, flags: (RTL)
;;  pred:       19 [always]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 169 170 204
(code_label 132 233 133 10 2 (nil) [0 uses])
(note 133 132 134 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 10 (set (reg:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 tdwp+0 S8 A64])) "CALDWP2.f":78 85 {*movdi_internal}
     (nil))
(insn 135 134 136 10 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fc679a02990 *.LC4>)) "CALDWP2.f":78 85 {*movdi_internal}
     (nil))
(insn 136 135 137 10 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fc679a02a20 *.LC5>)) "CALDWP2.f":78 85 {*movdi_internal}
     (nil))
(insn 137 136 138 10 (set (reg:DI 4 si)
        (reg:DI 204)) "CALDWP2.f":78 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 204)
        (nil)))
(insn 138 137 139 10 (set (reg:DI 5 di)
        (symbol_ref:DI ("evp.3858") [flags 0x202]  <var_decl 0x7fc679a02120 evp>)) "CALDWP2.f":78 85 {*movdi_internal}
     (nil))
(insn 139 138 140 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALDWP2.f":78 88 {*movqi_internal}
     (nil))
(call_insn 140 139 141 10 (call (mem:QI (symbol_ref:DI ("dewpoint_") [flags 0x41]  <function_decl 0x7fc6799f8600 dewpoint>) [0 dewpoint S1 A8])
        (const_int 0 [0])) "CALDWP2.f":78 689 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg:QI 0 ax)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 141 140 142 10 (set (reg:SI 169 [ _106 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fc679a00870 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALDWP2.f":82 86 {*movsi_internal}
     (nil))
(insn 142 141 143 10 (set (reg:SI 170 [ _107 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fc679a00870 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALDWP2.f":82 86 {*movsi_internal}
     (nil))
(insn 143 142 210 10 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 169 [ _106 ])) "CALDWP2.f":82 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 169 [ _106 ])
        (nil)))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;;              17 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170
;; lr  def 	 17 [flags] 171 205
(code_label 210 143 144 11 12 (nil) [1 uses])
(note 144 210 145 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 170 [ _107 ]))) "CALDWP2.f":82 11 {*cmpsi_1}
     (nil))
(insn 146 145 147 11 (set (reg:QI 205)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALDWP2.f":82 678 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 147 146 148 11 (set (reg:SI 171 [ _109 ])
        (zero_extend:SI (reg:QI 205))) "CALDWP2.f":82 140 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 205)
        (nil)))
(insn 148 147 149 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171 [ _109 ])
            (const_int 0 [0]))) "CALDWP2.f":82 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 171 [ _109 ])
        (nil)))
(jump_insn 149 148 150 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 238)
            (pc))) "CALDWP2.f":82 682 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 238)
;;  succ:       21
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 150 149 151 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 204 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALDWP2.f":83 86 {*movsi_internal}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;;              16 [always] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 172 206
(code_label 204 151 152 13 11 (nil) [1 uses])
(note 152 204 153 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALDWP2.f":83 11 {*cmpsi_1}
     (nil))
(insn 154 153 155 13 (set (reg:QI 206)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALDWP2.f":83 678 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 155 154 156 13 (set (reg:SI 172 [ _111 ])
        (zero_extend:SI (reg:QI 206))) "CALDWP2.f":83 140 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 206)
        (nil)))
(insn 156 155 157 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 172 [ _111 ])
            (const_int 0 [0]))) "CALDWP2.f":83 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 172 [ _111 ])
        (nil)))
(jump_insn 157 156 158 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 241)
            (pc))) "CALDWP2.f":83 682 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 241)
;;  succ:       22
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 140 141 142 143 144 145 146 147 148 149 150 151 207 208 209 210 211 212
(note 158 157 159 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 14 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDWP2.f":84 86 {*movsi_internal}
     (nil))
(insn 160 159 161 14 (set (reg:DI 140 [ _54 ])
        (sign_extend:DI (reg:SI 207))) "CALDWP2.f":84 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 207)
        (nil)))
(insn 161 160 162 14 (parallel [
            (set (reg:DI 141 [ _55 ])
                (mult:DI (reg:DI 140 [ _54 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":84 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 140 [ _54 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 162 161 163 14 (set (reg:SI 208)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDWP2.f":84 86 {*movsi_internal}
     (nil))
(insn 163 162 164 14 (set (reg:DI 142 [ _56 ])
        (sign_extend:DI (reg:SI 208))) "CALDWP2.f":84 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 208)
        (nil)))
(insn 164 163 165 14 (parallel [
            (set (reg:DI 143 [ _57 ])
                (plus:DI (reg:DI 141 [ _55 ])
                    (reg:DI 142 [ _56 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":84 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ _56 ])
        (expr_list:REG_DEAD (reg:DI 141 [ _55 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 165 164 166 14 (parallel [
            (set (reg:DI 144 [ _58 ])
                (plus:DI (reg:DI 143 [ _57 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":84 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 143 [ _57 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 166 165 167 14 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 tdwp+0 S8 A64])) "CALDWP2.f":84 85 {*movdi_internal}
     (nil))
(insn 167 166 168 14 (set (reg:SF 145 [ _59 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 144 [ _58 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 209)) [4 *tdwp_104(D) S4 A32])) "CALDWP2.f":84 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 209)
        (expr_list:REG_DEAD (reg:DI 144 [ _58 ])
            (nil))))
(insn 168 167 169 14 (set (reg:SI 210)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDWP2.f":84 86 {*movsi_internal}
     (nil))
(insn 169 168 170 14 (set (reg:DI 146 [ _60 ])
        (sign_extend:DI (reg:SI 210))) "CALDWP2.f":84 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 210)
        (nil)))
(insn 170 169 171 14 (parallel [
            (set (reg:DI 147 [ _61 ])
                (mult:DI (reg:DI 146 [ _60 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":84 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 146 [ _60 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 170 172 14 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDWP2.f":84 86 {*movsi_internal}
     (nil))
(insn 172 171 173 14 (set (reg:DI 148 [ _62 ])
        (sign_extend:DI (reg:SI 211))) "CALDWP2.f":84 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 211)
        (nil)))
(insn 173 172 174 14 (parallel [
            (set (reg:DI 149 [ _63 ])
                (plus:DI (reg:DI 147 [ _61 ])
                    (reg:DI 148 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":84 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 148 [ _62 ])
        (expr_list:REG_DEAD (reg:DI 147 [ _61 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 174 173 175 14 (parallel [
            (set (reg:DI 150 [ _64 ])
                (plus:DI (reg:DI 149 [ _63 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":84 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 149 [ _63 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 175 174 176 14 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 t1d+0 S8 A64])) "CALDWP2.f":84 85 {*movdi_internal}
     (nil))
(insn 176 175 177 14 (set (reg:SF 151 [ _65 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 150 [ _64 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 212)) [4 *t1d_112(D) S4 A32])) "CALDWP2.f":84 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 212)
        (expr_list:REG_DEAD (reg:DI 150 [ _64 ])
            (nil))))
(insn 177 176 178 14 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 145 [ _59 ])
            (reg:SF 151 [ _65 ]))) "CALDWP2.f":84 53 {*cmpisf}
     (expr_list:REG_DEAD (reg:SF 151 [ _65 ])
        (expr_list:REG_DEAD (reg:SF 145 [ _59 ])
            (nil))))
(jump_insn 178 177 182 14 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 201)
            (pc))) "CALDWP2.f":84 682 {*jcc}
     (expr_list:REG_DEAD (reg:CCFP 17 flags)
        (nil))
 -> 201)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 152 153 154 155 156 157 158 159 160 161 162 213 214 215 216 217 218
(note 182 178 183 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 15 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDWP2.f":84 86 {*movsi_internal}
     (nil))
(insn 184 183 185 15 (set (reg:DI 152 [ _66 ])
        (sign_extend:DI (reg:SI 213))) "CALDWP2.f":84 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 213)
        (nil)))
(insn 185 184 186 15 (parallel [
            (set (reg:DI 153 [ _67 ])
                (mult:DI (reg:DI 152 [ _66 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":84 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 152 [ _66 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 186 185 187 15 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDWP2.f":84 86 {*movsi_internal}
     (nil))
(insn 187 186 188 15 (set (reg:DI 154 [ _68 ])
        (sign_extend:DI (reg:SI 214))) "CALDWP2.f":84 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 214)
        (nil)))
(insn 188 187 189 15 (parallel [
            (set (reg:DI 155 [ _69 ])
                (plus:DI (reg:DI 153 [ _67 ])
                    (reg:DI 154 [ _68 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":84 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 154 [ _68 ])
        (expr_list:REG_DEAD (reg:DI 153 [ _67 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 189 188 190 15 (parallel [
            (set (reg:DI 156 [ _70 ])
                (plus:DI (reg:DI 155 [ _69 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":84 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 155 [ _69 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 190 189 191 15 (set (reg:SI 215)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDWP2.f":84 86 {*movsi_internal}
     (nil))
(insn 191 190 192 15 (set (reg:DI 157 [ _71 ])
        (sign_extend:DI (reg:SI 215))) "CALDWP2.f":84 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 215)
        (nil)))
(insn 192 191 193 15 (parallel [
            (set (reg:DI 158 [ _72 ])
                (mult:DI (reg:DI 157 [ _71 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":84 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 157 [ _71 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 193 192 194 15 (set (reg:SI 216)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDWP2.f":84 86 {*movsi_internal}
     (nil))
(insn 194 193 195 15 (set (reg:DI 159 [ _73 ])
        (sign_extend:DI (reg:SI 216))) "CALDWP2.f":84 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 216)
        (nil)))
(insn 195 194 196 15 (parallel [
            (set (reg:DI 160 [ _74 ])
                (plus:DI (reg:DI 158 [ _72 ])
                    (reg:DI 159 [ _73 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":84 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 159 [ _73 ])
        (expr_list:REG_DEAD (reg:DI 158 [ _72 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 196 195 197 15 (parallel [
            (set (reg:DI 161 [ _75 ])
                (plus:DI (reg:DI 160 [ _74 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":84 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 160 [ _74 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 197 196 198 15 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 t1d+0 S8 A64])) "CALDWP2.f":84 85 {*movdi_internal}
     (nil))
(insn 198 197 199 15 (set (reg:SF 162 [ _76 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 156 [ _70 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 217)) [4 *t1d_112(D) S4 A32])) "CALDWP2.f":84 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 217)
        (expr_list:REG_DEAD (reg:DI 156 [ _70 ])
            (nil))))
(insn 199 198 200 15 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 tdwp+0 S8 A64])) "CALDWP2.f":84 85 {*movdi_internal}
     (nil))
(insn 200 199 201 15 (set (mem:SF (plus:DI (mult:DI (reg:DI 161 [ _75 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 218)) [4 *tdwp_104(D) S4 A32])
        (reg:SF 162 [ _76 ])) "CALDWP2.f":84 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 218)
        (expr_list:REG_DEAD (reg:SF 162 [ _76 ])
            (expr_list:REG_DEAD (reg:DI 161 [ _75 ])
                (nil)))))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 22, flags: (RTL)
;;  pred:       15 (FALLTHRU)
;;              14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 201 200 202 16 9 (nil) [1 uses])
(note 202 201 203 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 227 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":83 221 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 227 203 228 16 (set (pc)
        (label_ref 204)) "CALDWP2.f":83 683 {jump}
     (nil)
 -> 204)
;;  succ:       13 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170

(barrier 228 227 241)
;; basic block 22, loop depth 0, maybe hot
;;  prev block 16, next block 17, flags: (RTL)
;;  pred:       13
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 241 228 240 22 18 (nil) [1 uses])
(note 240 241 242 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 242 240 207 22 (const_int 0 [0]) "CALDWP2.f":84 718 {nop}
     (nil))
;;  succ:       17 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170

;; basic block 17, loop depth 0, maybe hot
;;  prev block 22, next block 21, flags: (RTL)
;;  pred:       22 [always]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 207 242 208 17 8 (nil) [0 uses])
(note 208 207 209 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 229 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDWP2.f":82 221 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 229 209 230 17 (set (pc)
        (label_ref 210)) "CALDWP2.f":82 683 {jump}
     (nil)
 -> 210)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 170

(barrier 230 229 238)
;; basic block 21, loop depth 0, maybe hot
;;  prev block 17, next block 18, flags: (RTL)
;;  pred:       11
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 238 230 237 21 17 (nil) [1 uses])
(note 237 238 239 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 239 237 213 21 (const_int 0 [0]) "CALDWP2.f":83 718 {nop}
     (nil))
;;  succ:       18 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 21, next block 1, flags: (RTL)
;;  pred:       21 [always]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 213 239 214 18 7 (nil) [0 uses])
(note 214 213 222 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 222 214 0 18 (const_int 0 [0]) "CALDWP2.f":90 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

