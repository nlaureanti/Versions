
;; Function boundl (boundl_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)

boundl (real(kind=4)[0:D.3877] * restrict fld, real(kind=4) & restrict fmin, real(kind=4) & restrict fmax, integer(kind=4) & restrict im, integer(kind=4) & restrict jm)
{
  real(kind=4) D.3876;
  real(kind=4) M.6;
  real(kind=4) D.3874;
  real(kind=4) D.3873;
  real(kind=4) M.5;
  real(kind=4) D.3871;
  logical(kind=4) D.3870;
  integer(kind=4) D.3867;
  logical(kind=4) D.3866;
  integer(kind=4) D.3863;
  integer(kind=4) D.3862;
  sizetype D.3879;
  bitsizetype D.3878;
  integer(kind=8) D.3877;
  integer(kind=4) j;
  integer(kind=4) i;
  integer(kind=8) size.4;
  integer(kind=8) offset.3;
  integer(kind=8) stride.2;
  integer(kind=8) ubound.1;
  integer(kind=8) ubound.0;
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=4) _1;
  integer(kind=4) _2;
  sizetype size.7_3;
  bitsizetype _4;
  sizetype size.8_5;
  integer(kind=8) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  integer(kind=8) _10;
  logical(kind=4) _11;
  logical(kind=4) _12;
  logical(kind=4) _13;
  integer(kind=8) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  logical(kind=4) _24;
  logical(kind=4) _25;
  logical(kind=4) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  integer(kind=8) _31;
  real(kind=4) M.5_34;
  real(kind=4) M.6_35;
  integer(kind=8) stride.2_41;
  integer(kind=8) stride.2_42;
  integer(kind=8) size.4_45;
  integer(kind=8) size.4_46;
  integer(kind=8) _47;
  bitsizetype _48;
  sizetype _49;
  integer(kind=8) offset.3_50;
  integer(kind=4) _51;
  integer(kind=4) _52;
  logical(kind=4) _54;
  integer(kind=4) _55;
  logical(kind=4) _57;
  real(kind=4) _59;
  real(kind=4) M.5_60;
  real(kind=4) _62;
  real(kind=4) M.5_63;
  real(kind=4) _65;
  real(kind=4) M.6_66;
  real(kind=4) _68;
  real(kind=4) M.6_69;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *im_39(D);
  ubound.0_40 = (integer(kind=8)) _1;
  stride.2_41 = ubound.0_40;
  stride.2_42 = MAX_EXPR <stride.2_41, 0>;
  _2 = *jm_43(D);
  ubound.1_44 = (integer(kind=8)) _2;
  size.4_45 = stride.2_42 * ubound.1_44;
  size.4_46 = MAX_EXPR <size.4_45, 0>;
  _47 = size.4_46 + -1;
  size.7_3 = (sizetype) size.4_46;
  _4 = (bitsizetype) size.7_3;
  _48 = _4 * 32;
  size.8_5 = (sizetype) size.4_46;
  _49 = size.8_5 * 4;
  offset.3_50 = ~stride.2_42;
  _51 = parallel.jsta;
  _52 = parallel.jend;
  j_53 = _51;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                11
  # j_33 = PHI <j_53(2), j_72(11)>
  _54 = j_33 > _52;
  if (_54 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       12
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _55 = *im_39(D);
  i_56 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                10
  # i_32 = PHI <i_56(4), i_71(10)>
  _57 = i_32 > _55;
  if (_57 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       11
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _59 = *fmin_58(D);
  M.5_60 = _59;
  _6 = (integer(kind=8)) j_33;
  _7 = stride.2_42 * _6;
  _8 = offset.3_50 + _7;
  _9 = (integer(kind=8)) i_32;
  _10 = _8 + _9;
  _62 = *fld_61(D)[_10];
  _11 = _62 > M.5_60;
  _12 = M.5_60 unord M.5_60;
  _13 = _11 | _12;
  if (_13 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 2
;;    pred:       6
  M.5_63 = _62;
;;    succ:       8

;;   basic block 8, loop depth 2
;;    pred:       6
;;                7
  # M.5_34 = PHI <M.5_60(6), M.5_63(7)>
  _14 = (integer(kind=8)) j_33;
  _15 = stride.2_42 * _14;
  _16 = offset.3_50 + _15;
  _17 = (integer(kind=8)) i_32;
  _18 = _16 + _17;
  *fld_61(D)[_18] = M.5_34;
  _19 = (integer(kind=8)) j_33;
  _20 = stride.2_42 * _19;
  _21 = offset.3_50 + _20;
  _22 = (integer(kind=8)) i_32;
  _23 = _21 + _22;
  _65 = *fld_61(D)[_23];
  M.6_66 = _65;
  _68 = *fmax_67(D);
  _24 = _68 < M.6_66;
  _25 = M.6_66 unord M.6_66;
  _26 = _24 | _25;
  if (_26 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       9
;;                10

;;   basic block 9, loop depth 2
;;    pred:       8
  M.6_69 = _68;
;;    succ:       10

;;   basic block 10, loop depth 2
;;    pred:       8
;;                9
  # M.6_35 = PHI <M.6_66(8), M.6_69(9)>
  _27 = (integer(kind=8)) j_33;
  _28 = stride.2_42 * _27;
  _29 = offset.3_50 + _28;
  _30 = (integer(kind=8)) i_32;
  _31 = _29 + _30;
  *fld_61(D)[_31] = M.6_35;
  i_71 = i_32 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 11, loop depth 1
;;    pred:       5
  j_72 = j_33 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 12, loop depth 0
;;    pred:       3
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       12
<L14>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (size.7_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (size.8_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (i_32 - 32 )
Partition 33 (j_33 - 33 )
Partition 34 (M.5_34 - 34 )
Partition 35 (M.6_35 - 35 )
Partition 39 (im_39(D) - 39 )
Partition 40 (ubound.0_40 - 40 )
Partition 41 (stride.2_41 - 41 )
Partition 42 (stride.2_42 - 42 )
Partition 43 (jm_43(D) - 43 )
Partition 44 (ubound.1_44 - 44 )
Partition 45 (size.4_45 - 45 )
Partition 46 (size.4_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (offset.3_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (j_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (i_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (fmin_58(D) - 58 )
Partition 59 (_59 - 59 )
Partition 60 (M.5_60 - 60 )
Partition 61 (fld_61(D) - 61 )
Partition 62 (_62 - 62 )
Partition 63 (M.5_63 - 63 )
Partition 65 (_65 - 65 )
Partition 66 (M.6_66 - 66 )
Partition 67 (fmax_67(D) - 67 )
Partition 68 (_68 - 68 )
Partition 69 (M.6_69 - 69 )
Partition 71 (i_71 - 71 )
Partition 72 (j_72 - 72 )


Coalescible Partition map 

Partition 0, base 0 (i_32 - 32 56 71 )
Partition 1, base 1 (j_33 - 33 53 72 )
Partition 2, base 2 (M.5_34 - 34 59 60 62 63 )
Partition 3, base 3 (M.6_35 - 35 65 66 68 69 )
Partition 4, base 4 (im_39(D) - 39 )
Partition 5, base 5 (jm_43(D) - 43 )
Partition 8, base 6 (fmin_58(D) - 58 )
Partition 11, base 7 (fld_61(D) - 61 )
Partition 16, base 8 (fmax_67(D) - 67 )


Partition map 

Partition 0 (i_32 - 32 )
Partition 1 (j_33 - 33 )
Partition 2 (M.5_34 - 34 )
Partition 3 (M.6_35 - 35 )
Partition 4 (im_39(D) - 39 )
Partition 5 (jm_43(D) - 43 )
Partition 6 (j_53 - 53 )
Partition 7 (i_56 - 56 )
Partition 8 (fmin_58(D) - 58 )
Partition 9 (_59 - 59 )
Partition 10 (M.5_60 - 60 )
Partition 11 (fld_61(D) - 61 )
Partition 12 (_62 - 62 )
Partition 13 (M.5_63 - 63 )
Partition 14 (_65 - 65 )
Partition 15 (M.6_66 - 66 )
Partition 16 (fmax_67(D) - 67 )
Partition 17 (_68 - 68 )
Partition 18 (M.6_69 - 69 )
Partition 19 (i_71 - 71 )
Partition 20 (j_72 - 72 )


Conflict graph:
10: 12
12: 10
15: 17
17: 15

After sorting:
Sorted Coalesce list:
(2147483646, 0) j_33 <-> j_53
(2147483646, 0) j_33 <-> j_72
(2147483646, 0) i_32 <-> i_56
(2147483646, 0) i_32 <-> i_71
(20000, 0) M.5_34 <-> M.5_60
(20000, 0) M.6_35 <-> M.6_66
(10000, 0) _59 <-> M.5_60
(10000, 0) _62 <-> M.5_63
(10000, 0) M.5_34 <-> M.5_63
(10000, 0) _65 <-> M.6_66
(10000, 0) _68 <-> M.6_69
(10000, 0) M.6_35 <-> M.6_69

Partition map 

Partition 0 (i_32 - 32 )
Partition 1 (j_33 - 33 )
Partition 2 (M.5_34 - 34 )
Partition 3 (M.6_35 - 35 )
Partition 4 (im_39(D) - 39 )
Partition 5 (jm_43(D) - 43 )
Partition 6 (j_53 - 53 )
Partition 7 (i_56 - 56 )
Partition 8 (fmin_58(D) - 58 )
Partition 9 (_59 - 59 )
Partition 10 (M.5_60 - 60 )
Partition 11 (fld_61(D) - 61 )
Partition 12 (_62 - 62 )
Partition 13 (M.5_63 - 63 )
Partition 14 (_65 - 65 )
Partition 15 (M.6_66 - 66 )
Partition 16 (fmax_67(D) - 67 )
Partition 17 (_68 - 68 )
Partition 18 (M.6_69 - 69 )
Partition 19 (i_71 - 71 )
Partition 20 (j_72 - 72 )

Coalesce list: (33)j_33 & (53)j_53 [map: 1, 6] : Success -> 1
Coalesce list: (33)j_33 & (72)j_72 [map: 1, 20] : Success -> 1
Coalesce list: (32)i_32 & (56)i_56 [map: 0, 7] : Success -> 0
Coalesce list: (32)i_32 & (71)i_71 [map: 0, 19] : Success -> 0
Coalesce list: (34)M.5_34 & (60)M.5_60 [map: 2, 10] : Success -> 2
Coalesce list: (35)M.6_35 & (66)M.6_66 [map: 3, 15] : Success -> 3
Coalesce list: (59)_59 & (60)M.5_34 [map: 9, 2] : Success -> 2
Coalesce list: (62)_62 & (63)M.5_63 [map: 12, 13] : Success -> 12
Coalesce list: (34)M.5_34 & (63)_62 [map: 2, 12] : Fail due to conflict
Coalesce list: (65)_65 & (66)M.6_35 [map: 14, 3] : Success -> 3
Coalesce list: (68)_68 & (69)M.6_69 [map: 17, 18] : Success -> 17
Coalesce list: (35)M.6_35 & (69)_68 [map: 3, 17] : Fail due to conflict
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (size.7_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (size.8_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (i_32 - 32 56 71 )
Partition 32 (j_33 - 33 53 72 )
Partition 33 (M.5_34 - 34 59 60 )
Partition 34 (M.6_35 - 35 65 66 )
Partition 35 (im_39(D) - 39 )
Partition 36 (ubound.0_40 - 40 )
Partition 37 (stride.2_41 - 41 )
Partition 38 (stride.2_42 - 42 )
Partition 39 (jm_43(D) - 43 )
Partition 40 (ubound.1_44 - 44 )
Partition 41 (size.4_45 - 45 )
Partition 42 (size.4_46 - 46 )
Partition 43 (_47 - 47 )
Partition 44 (_48 - 48 )
Partition 45 (_49 - 49 )
Partition 46 (offset.3_50 - 50 )
Partition 47 (_51 - 51 )
Partition 48 (_52 - 52 )
Partition 49 (_54 - 54 )
Partition 50 (_55 - 55 )
Partition 51 (_57 - 57 )
Partition 52 (fmin_58(D) - 58 )
Partition 53 (fld_61(D) - 61 )
Partition 54 (_62 - 62 63 )
Partition 55 (fmax_67(D) - 67 )
Partition 56 (_68 - 68 69 )

boundl (real(kind=4)[0:D.3877] * restrict fld, real(kind=4) & restrict fmin, real(kind=4) & restrict fmax, integer(kind=4) & restrict im, integer(kind=4) & restrict jm)
{
  real(kind=4) D.3876;
  real(kind=4) M.6;
  real(kind=4) D.3874;
  real(kind=4) D.3873;
  real(kind=4) M.5;
  real(kind=4) D.3871;
  logical(kind=4) D.3870;
  integer(kind=4) D.3867;
  logical(kind=4) D.3866;
  integer(kind=4) D.3863;
  integer(kind=4) D.3862;
  sizetype D.3879;
  bitsizetype D.3878;
  integer(kind=8) D.3877;
  integer(kind=4) j;
  integer(kind=4) i;
  integer(kind=8) size.4;
  integer(kind=8) offset.3;
  integer(kind=8) stride.2;
  integer(kind=8) ubound.1;
  integer(kind=8) ubound.0;
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=4) _1;
  integer(kind=4) _2;
  sizetype size.7_3;
  bitsizetype _4;
  sizetype size.8_5;
  integer(kind=8) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  integer(kind=8) _10;
  logical(kind=4) _11;
  logical(kind=4) _12;
  logical(kind=4) _13;
  integer(kind=8) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  logical(kind=4) _24;
  logical(kind=4) _25;
  logical(kind=4) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  integer(kind=8) _31;
  real(kind=4) M.5_34;
  real(kind=4) M.6_35;
  integer(kind=8) stride.2_41;
  integer(kind=8) stride.2_42;
  integer(kind=8) size.4_45;
  integer(kind=8) size.4_46;
  integer(kind=8) _47;
  bitsizetype _48;
  sizetype _49;
  integer(kind=8) offset.3_50;
  integer(kind=4) _51;
  integer(kind=4) _52;
  logical(kind=4) _54;
  integer(kind=4) _55;
  logical(kind=4) _57;
  real(kind=4) _59;
  real(kind=4) M.5_60;
  real(kind=4) _62;
  real(kind=4) M.5_63;
  real(kind=4) _65;
  real(kind=4) M.6_66;
  real(kind=4) _68;
  real(kind=4) M.6_69;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *im_39(D);
  ubound.0_40 = (integer(kind=8)) _1;
  stride.2_41 = ubound.0_40;
  stride.2_42 = MAX_EXPR <stride.2_41, 0>;
  _2 = *jm_43(D);
  ubound.1_44 = (integer(kind=8)) _2;
  size.4_45 = stride.2_42 * ubound.1_44;
  size.4_46 = MAX_EXPR <size.4_45, 0>;
  _47 = size.4_46 + -1;
  size.7_3 = (sizetype) size.4_46;
  _4 = (bitsizetype) size.7_3;
  _48 = _4 * 32;
  size.8_5 = (sizetype) size.4_46;
  _49 = size.8_5 * 4;
  offset.3_50 = ~stride.2_42;
  _51 = parallel.jsta;
  _52 = parallel.jend;
  j_53 = _51;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                11
  # j_33 = PHI <j_53(2), j_72(11)>
  _54 = j_33 > _52;
  if (_54 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       12
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _55 = *im_39(D);
  i_56 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                10
  # i_32 = PHI <i_56(4), i_71(10)>
  _57 = i_32 > _55;
  if (_57 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       11
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _59 = *fmin_58(D);
  M.5_60 = _59;
  _6 = (integer(kind=8)) j_33;
  _7 = stride.2_42 * _6;
  _8 = offset.3_50 + _7;
  _9 = (integer(kind=8)) i_32;
  _10 = _8 + _9;
  _62 = *fld_61(D)[_10];
  _11 = _62 > M.5_60;
  _12 = M.5_60 unord M.5_60;
  _13 = _11 | _12;
  if (_13 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 2
;;    pred:       6
  M.5_63 = _62;
;;    succ:       8

;;   basic block 8, loop depth 2
;;    pred:       6
;;                7
  # M.5_34 = PHI <M.5_60(6), M.5_63(7)>
  _14 = (integer(kind=8)) j_33;
  _15 = stride.2_42 * _14;
  _16 = offset.3_50 + _15;
  _17 = (integer(kind=8)) i_32;
  _18 = _16 + _17;
  *fld_61(D)[_18] = M.5_34;
  _19 = (integer(kind=8)) j_33;
  _20 = stride.2_42 * _19;
  _21 = offset.3_50 + _20;
  _22 = (integer(kind=8)) i_32;
  _23 = _21 + _22;
  _65 = *fld_61(D)[_23];
  M.6_66 = _65;
  _68 = *fmax_67(D);
  _24 = _68 < M.6_66;
  _25 = M.6_66 unord M.6_66;
  _26 = _24 | _25;
  if (_26 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       9
;;                10

;;   basic block 9, loop depth 2
;;    pred:       8
  M.6_69 = _68;
;;    succ:       10

;;   basic block 10, loop depth 2
;;    pred:       8
;;                9
  # M.6_35 = PHI <M.6_66(8), M.6_69(9)>
  _27 = (integer(kind=8)) j_33;
  _28 = stride.2_42 * _27;
  _29 = offset.3_50 + _28;
  _30 = (integer(kind=8)) i_32;
  _31 = _29 + _30;
  *fld_61(D)[_31] = M.6_35;
  i_71 = i_32 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 11, loop depth 1
;;    pred:       5
  j_72 = j_33 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 12, loop depth 0
;;    pred:       3
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       12
<L14>:
  return;
;;    succ:       EXIT

}


Inserting a partition copy on edge BB7->BB8 : PART.33 = PART.54
Inserting a partition copy on edge BB9->BB10 : PART.34 = PART.56

;; Generating RTL for gimple basic block 2

;; _1 = *im_39(D);

(insn 12 11 13 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])) "BOUNDL.f":1 -1
     (nil))

(insn 13 12 0 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 135) [1 *im_39(D)+0 S4 A32])) "BOUNDL.f":1 -1
     (nil))

;; ubound.0_40 = (integer(kind=8)) _1;

(insn 14 13 15 (set (reg:DI 136)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "BOUNDL.f":1 -1
     (nil))

(insn 15 14 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])
        (reg:DI 136)) "BOUNDL.f":1 -1
     (nil))

;; stride.2_41 = ubound.0_40;

(insn 16 15 0 (set (reg:DI 120 [ stride.2_41 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])) "BOUNDL.f":1 -1
     (nil))

;; stride.2_42 = MAX_EXPR <stride.2_41, 0>;

(insn 18 16 17 (set (reg:DI 137)
        (const_int 0 [0])) "BOUNDL.f":1 -1
     (nil))

(insn 17 18 19 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 120 [ stride.2_41 ])
            (const_int 0 [0]))) "BOUNDL.f":1 -1
     (nil))

(insn 19 17 0 (set (reg:DI 121 [ stride.2_42 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 120 [ stride.2_41 ])
            (reg:DI 137))) "BOUNDL.f":1 -1
     (nil))

;; _2 = *jm_43(D);

(insn 20 19 21 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [5 jm+0 S8 A64])) "BOUNDL.f":1 -1
     (nil))

(insn 21 20 0 (set (reg:SI 88 [ _2 ])
        (mem:SI (reg/f:DI 138) [1 *jm_43(D)+0 S4 A32])) "BOUNDL.f":1 -1
     (nil))

;; ubound.1_44 = (integer(kind=8)) _2;

(insn 22 21 23 (set (reg:DI 139)
        (sign_extend:DI (reg:SI 88 [ _2 ]))) "BOUNDL.f":1 -1
     (nil))

(insn 23 22 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.1+0 S8 A64])
        (reg:DI 139)) "BOUNDL.f":1 -1
     (nil))

;; size.4_45 = stride.2_42 * ubound.1_44;

(insn 24 23 0 (parallel [
            (set (reg:DI 122 [ size.4_45 ])
                (mult:DI (reg:DI 121 [ stride.2_42 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":1 -1
     (nil))

;; size.4_46 = MAX_EXPR <size.4_45, 0>;

(insn 26 24 25 (set (reg:DI 140)
        (const_int 0 [0])) "BOUNDL.f":1 -1
     (nil))

(insn 25 26 27 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 122 [ size.4_45 ])
            (const_int 0 [0]))) "BOUNDL.f":1 -1
     (nil))

(insn 27 25 0 (set (reg:DI 123 [ size.4_46 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 122 [ size.4_45 ])
            (reg:DI 140))) "BOUNDL.f":1 -1
     (nil))

;; _47 = size.4_46 + -1;

(insn 28 27 0 (parallel [
            (set (reg:DI 124 [ _47 ])
                (plus:DI (reg:DI 123 [ size.4_46 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":1 -1
     (nil))

;; size.7_3 = (sizetype) size.4_46;

(insn 29 28 0 (set (reg:DI 89 [ size.7_3 ])
        (reg:DI 123 [ size.4_46 ])) "BOUNDL.f":1 -1
     (nil))

;; _4 = (bitsizetype) size.7_3;

(insn 30 29 31 (set (subreg:DI (reg:TI 90 [ _4 ]) 0)
        (reg:DI 89 [ size.7_3 ])) "BOUNDL.f":1 -1
     (nil))

(insn 31 30 0 (set (subreg:DI (reg:TI 90 [ _4 ]) 8)
        (const_int 0 [0])) "BOUNDL.f":1 -1
     (nil))

;; _48 = _4 * 32;

(insn 32 31 0 (parallel [
            (set (reg:TI 125 [ _48 ])
                (ashift:TI (reg:TI 90 [ _4 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":1 -1
     (nil))

;; size.8_5 = (sizetype) size.4_46;

(insn 33 32 0 (set (reg:DI 91 [ size.8_5 ])
        (reg:DI 123 [ size.4_46 ])) "BOUNDL.f":1 -1
     (nil))

;; _49 = size.8_5 * 4;

(insn 34 33 0 (parallel [
            (set (reg:DI 126 [ _49 ])
                (ashift:DI (reg:DI 91 [ size.8_5 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":1 -1
     (nil))

;; offset.3_50 = ~stride.2_42;

(insn 35 34 0 (set (reg:DI 127 [ offset.3_50 ])
        (not:DI (reg:DI 121 [ stride.2_42 ]))) "BOUNDL.f":1 -1
     (nil))

;; _51 = parallel.jsta;

(insn 36 35 0 (set (reg:SI 128 [ _51 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f065e850870 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "BOUNDL.f":57 -1
     (nil))

;; _52 = parallel.jend;

(insn 37 36 0 (set (reg:SI 129 [ _52 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f065e850870 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "BOUNDL.f":57 -1
     (nil))

;; j_53 = _51;

(insn 38 37 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 128 [ _51 ])) "BOUNDL.f":57 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _54 = j_33 > _52;

(insn 40 39 41 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 129 [ _52 ]))) "BOUNDL.f":57 -1
     (nil))

(insn 41 40 42 (set (reg:QI 141)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BOUNDL.f":57 -1
     (nil))

(insn 42 41 0 (set (reg:SI 130 [ _54 ])
        (zero_extend:SI (reg:QI 141))) "BOUNDL.f":57 -1
     (nil))

;; if (_54 != 0)

(insn 43 42 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ _54 ])
            (const_int 0 [0]))) "BOUNDL.f":57 -1
     (nil))

(jump_insn 44 43 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "BOUNDL.f":57 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _55 = *im_39(D);

(insn 46 45 47 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])) "BOUNDL.f":58 -1
     (nil))

(insn 47 46 0 (set (reg:SI 131 [ _55 ])
        (mem:SI (reg/f:DI 142) [1 *im_39(D)+0 S4 A32])) "BOUNDL.f":58 -1
     (nil))

;; i_56 = 1;

(insn 48 47 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "BOUNDL.f":58 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _57 = i_32 > _55;

(insn 50 49 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 131 [ _55 ]))) "BOUNDL.f":58 -1
     (nil))

(insn 51 50 52 (set (reg:QI 143)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BOUNDL.f":58 -1
     (nil))

(insn 52 51 0 (set (reg:SI 132 [ _57 ])
        (zero_extend:SI (reg:QI 143))) "BOUNDL.f":58 -1
     (nil))

;; if (_57 != 0)

(insn 53 52 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ _57 ])
            (const_int 0 [0]))) "BOUNDL.f":58 -1
     (nil))

(jump_insn 54 53 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "BOUNDL.f":58 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _59 = *fmin_58(D);

(insn 56 55 57 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [4 fmin+0 S8 A64])) "BOUNDL.f":59 -1
     (nil))

(insn 57 56 0 (set (reg:SF 118 [ M.5_34 ])
        (mem:SF (reg/f:DI 144) [7 *fmin_58(D)+0 S4 A32])) "BOUNDL.f":59 -1
     (nil))

;; M.5_60 = _59;

(nil)

;; _6 = (integer(kind=8)) j_33;

(insn 58 57 59 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUNDL.f":59 -1
     (nil))

(insn 59 58 0 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 145))) "BOUNDL.f":59 -1
     (nil))

;; _7 = stride.2_42 * _6;

(insn 60 59 0 (parallel [
            (set (reg:DI 93 [ _7 ])
                (mult:DI (reg:DI 121 [ stride.2_42 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))

;; _8 = offset.3_50 + _7;

(insn 61 60 0 (parallel [
            (set (reg:DI 94 [ _8 ])
                (plus:DI (reg:DI 127 [ offset.3_50 ])
                    (reg:DI 93 [ _7 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))

;; _9 = (integer(kind=8)) i_32;

(insn 62 61 63 (set (reg:SI 146)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUNDL.f":59 -1
     (nil))

(insn 63 62 0 (set (reg:DI 95 [ _9 ])
        (sign_extend:DI (reg:SI 146))) "BOUNDL.f":59 -1
     (nil))

;; _10 = _8 + _9;

(insn 64 63 0 (parallel [
            (set (reg:DI 96 [ _10 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))

;; _62 = *fld_61(D)[_10];

(insn 65 64 66 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUNDL.f":59 -1
     (nil))

(insn 66 65 0 (set (reg:SF 133 [ _62 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 96 [ _10 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 147)) [7 *fld_61(D) S4 A32])) "BOUNDL.f":59 -1
     (nil))

;; _11 = _62 > M.5_60;

(insn 67 66 68 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 133 [ _62 ])
            (reg:SF 118 [ M.5_34 ]))) "BOUNDL.f":59 -1
     (nil))

(insn 68 67 69 (set (reg:QI 148)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUNDL.f":59 -1
     (nil))

(insn 69 68 0 (set (reg:SI 97 [ _11 ])
        (zero_extend:SI (reg:QI 148))) "BOUNDL.f":59 -1
     (nil))

;; _12 = M.5_60 unord M.5_60;

(insn 70 69 71 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 118 [ M.5_34 ])
                    (reg:SF 118 [ M.5_34 ]))
            ] UNSPEC_NOTRAP)) "BOUNDL.f":59 -1
     (nil))

(insn 71 70 72 (set (reg:QI 149)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUNDL.f":59 -1
     (nil))

(insn 72 71 0 (set (reg:SI 98 [ _12 ])
        (zero_extend:SI (reg:QI 149))) "BOUNDL.f":59 -1
     (nil))

;; _13 = _11 | _12;

(insn 73 72 0 (parallel [
            (set (reg:SI 99 [ _13 ])
                (ior:SI (reg:SI 97 [ _11 ])
                    (reg:SI 98 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))

;; if (_13 != 0)

(insn 74 73 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ _13 ])
            (const_int 0 [0]))) "BOUNDL.f":59 -1
     (nil))

(jump_insn 75 74 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "BOUNDL.f":59 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; M.5_63 = _62;

(nil)

;; Generating RTL for gimple basic block 8

;; 

(code_label 77 76 78 4 (nil) [0 uses])

(note 78 77 0 NOTE_INSN_BASIC_BLOCK)

;; _14 = (integer(kind=8)) j_33;

(insn 79 78 80 (set (reg:SI 150)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUNDL.f":59 -1
     (nil))

(insn 80 79 0 (set (reg:DI 100 [ _14 ])
        (sign_extend:DI (reg:SI 150))) "BOUNDL.f":59 -1
     (nil))

;; _15 = stride.2_42 * _14;

(insn 81 80 0 (parallel [
            (set (reg:DI 101 [ _15 ])
                (mult:DI (reg:DI 121 [ stride.2_42 ])
                    (reg:DI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))

;; _16 = offset.3_50 + _15;

(insn 82 81 0 (parallel [
            (set (reg:DI 102 [ _16 ])
                (plus:DI (reg:DI 127 [ offset.3_50 ])
                    (reg:DI 101 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))

;; _17 = (integer(kind=8)) i_32;

(insn 83 82 84 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUNDL.f":59 -1
     (nil))

(insn 84 83 0 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 151))) "BOUNDL.f":59 -1
     (nil))

;; _18 = _16 + _17;

(insn 85 84 0 (parallel [
            (set (reg:DI 104 [ _18 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (reg:DI 103 [ _17 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))

;; *fld_61(D)[_18] = M.5_34;

(insn 86 85 87 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUNDL.f":59 -1
     (nil))

(insn 87 86 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 104 [ _18 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 152)) [7 *fld_61(D) S4 A32])
        (reg:SF 118 [ M.5_34 ])) "BOUNDL.f":59 -1
     (nil))

;; _19 = (integer(kind=8)) j_33;

(insn 88 87 89 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUNDL.f":60 -1
     (nil))

(insn 89 88 0 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 153))) "BOUNDL.f":60 -1
     (nil))

;; _20 = stride.2_42 * _19;

(insn 90 89 0 (parallel [
            (set (reg:DI 106 [ _20 ])
                (mult:DI (reg:DI 121 [ stride.2_42 ])
                    (reg:DI 105 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))

;; _21 = offset.3_50 + _20;

(insn 91 90 0 (parallel [
            (set (reg:DI 107 [ _21 ])
                (plus:DI (reg:DI 127 [ offset.3_50 ])
                    (reg:DI 106 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))

;; _22 = (integer(kind=8)) i_32;

(insn 92 91 93 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUNDL.f":60 -1
     (nil))

(insn 93 92 0 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 154))) "BOUNDL.f":60 -1
     (nil))

;; _23 = _21 + _22;

(insn 94 93 0 (parallel [
            (set (reg:DI 109 [ _23 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (reg:DI 108 [ _22 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))

;; _65 = *fld_61(D)[_23];

(insn 95 94 96 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUNDL.f":60 -1
     (nil))

(insn 96 95 0 (set (reg:SF 119 [ M.6_35 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 109 [ _23 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 155)) [7 *fld_61(D) S4 A32])) "BOUNDL.f":60 -1
     (nil))

;; M.6_66 = _65;

(nil)

;; _68 = *fmax_67(D);

(insn 97 96 98 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [4 fmax+0 S8 A64])) "BOUNDL.f":60 -1
     (nil))

(insn 98 97 0 (set (reg:SF 134 [ _68 ])
        (mem:SF (reg/f:DI 156) [7 *fmax_67(D)+0 S4 A32])) "BOUNDL.f":60 -1
     (nil))

;; _24 = _68 < M.6_66;

(insn 99 98 100 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 119 [ M.6_35 ])
            (reg:SF 134 [ _68 ]))) "BOUNDL.f":60 -1
     (nil))

(insn 100 99 101 (set (reg:QI 158)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUNDL.f":60 -1
     (nil))

(insn 101 100 0 (set (reg:SI 110 [ _24 ])
        (zero_extend:SI (reg:QI 158))) "BOUNDL.f":60 -1
     (nil))

;; _25 = M.6_66 unord M.6_66;

(insn 102 101 103 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 119 [ M.6_35 ])
                    (reg:SF 119 [ M.6_35 ]))
            ] UNSPEC_NOTRAP)) "BOUNDL.f":60 -1
     (nil))

(insn 103 102 104 (set (reg:QI 159)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUNDL.f":60 -1
     (nil))

(insn 104 103 0 (set (reg:SI 111 [ _25 ])
        (zero_extend:SI (reg:QI 159))) "BOUNDL.f":60 -1
     (nil))

;; _26 = _24 | _25;

(insn 105 104 0 (parallel [
            (set (reg:SI 112 [ _26 ])
                (ior:SI (reg:SI 110 [ _24 ])
                    (reg:SI 111 [ _25 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))

;; if (_26 != 0)

(insn 106 105 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ _26 ])
            (const_int 0 [0]))) "BOUNDL.f":60 -1
     (nil))

(jump_insn 107 106 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "BOUNDL.f":60 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; M.6_69 = _68;

(nil)

;; Generating RTL for gimple basic block 10

;; 

(code_label 109 108 110 5 (nil) [0 uses])

(note 110 109 0 NOTE_INSN_BASIC_BLOCK)

;; _27 = (integer(kind=8)) j_33;

(insn 111 110 112 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUNDL.f":60 -1
     (nil))

(insn 112 111 0 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 160))) "BOUNDL.f":60 -1
     (nil))

;; _28 = stride.2_42 * _27;

(insn 113 112 0 (parallel [
            (set (reg:DI 114 [ _28 ])
                (mult:DI (reg:DI 121 [ stride.2_42 ])
                    (reg:DI 113 [ _27 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))

;; _29 = offset.3_50 + _28;

(insn 114 113 0 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 127 [ offset.3_50 ])
                    (reg:DI 114 [ _28 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))

;; _30 = (integer(kind=8)) i_32;

(insn 115 114 116 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUNDL.f":60 -1
     (nil))

(insn 116 115 0 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 161))) "BOUNDL.f":60 -1
     (nil))

;; _31 = _29 + _30;

(insn 117 116 0 (parallel [
            (set (reg:DI 117 [ _31 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (reg:DI 116 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))

;; *fld_61(D)[_31] = M.6_35;

(insn 118 117 119 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUNDL.f":60 -1
     (nil))

(insn 119 118 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 117 [ _31 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 162)) [7 *fld_61(D) S4 A32])
        (reg:SF 119 [ M.6_35 ])) "BOUNDL.f":60 -1
     (nil))

;; i_71 = i_32 + 1;

(insn 120 119 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":58 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 124 123 125 3 (nil) [0 uses])

(note 125 124 0 NOTE_INSN_BASIC_BLOCK)

;; j_72 = j_33 + 1;

(insn 126 125 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":57 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 130 129 131 2 (nil) [0 uses])

(note 131 130 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 13

;; <L14>:

(code_label 132 131 133 8 (nil) [0 uses])

(note 133 132 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Merging block 15 into block 13...
Merged blocks 13 and 15.
Merged 13 and 15 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])
        (reg:DI 5 di [ fld ])) "BOUNDL.f":1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [4 fmin+0 S8 A64])
        (reg:DI 4 si [ fmin ])) "BOUNDL.f":1 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [4 fmax+0 S8 A64])
        (reg:DI 1 dx [ fmax ])) "BOUNDL.f":1 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])
        (reg:DI 2 cx [ im ])) "BOUNDL.f":1 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [5 jm+0 S8 A64])
        (reg:DI 37 r8 [ jm ])) "BOUNDL.f":1 -1
     (nil))
(note 7 6 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 7 13 2 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])) "BOUNDL.f":1 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 135) [1 *im_39(D)+0 S4 A32])) "BOUNDL.f":1 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 136)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "BOUNDL.f":1 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])
        (reg:DI 136)) "BOUNDL.f":1 -1
     (nil))
(insn 16 15 18 2 (set (reg:DI 120 [ stride.2_41 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])) "BOUNDL.f":1 -1
     (nil))
(insn 18 16 17 2 (set (reg:DI 137)
        (const_int 0 [0])) "BOUNDL.f":1 -1
     (nil))
(insn 17 18 19 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 120 [ stride.2_41 ])
            (const_int 0 [0]))) "BOUNDL.f":1 -1
     (nil))
(insn 19 17 20 2 (set (reg:DI 121 [ stride.2_42 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 120 [ stride.2_41 ])
            (reg:DI 137))) "BOUNDL.f":1 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [5 jm+0 S8 A64])) "BOUNDL.f":1 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 88 [ _2 ])
        (mem:SI (reg/f:DI 138) [1 *jm_43(D)+0 S4 A32])) "BOUNDL.f":1 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 139)
        (sign_extend:DI (reg:SI 88 [ _2 ]))) "BOUNDL.f":1 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.1+0 S8 A64])
        (reg:DI 139)) "BOUNDL.f":1 -1
     (nil))
(insn 24 23 26 2 (parallel [
            (set (reg:DI 122 [ size.4_45 ])
                (mult:DI (reg:DI 121 [ stride.2_42 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":1 -1
     (nil))
(insn 26 24 25 2 (set (reg:DI 140)
        (const_int 0 [0])) "BOUNDL.f":1 -1
     (nil))
(insn 25 26 27 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 122 [ size.4_45 ])
            (const_int 0 [0]))) "BOUNDL.f":1 -1
     (nil))
(insn 27 25 28 2 (set (reg:DI 123 [ size.4_46 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 122 [ size.4_45 ])
            (reg:DI 140))) "BOUNDL.f":1 -1
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 124 [ _47 ])
                (plus:DI (reg:DI 123 [ size.4_46 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":1 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 89 [ size.7_3 ])
        (reg:DI 123 [ size.4_46 ])) "BOUNDL.f":1 -1
     (nil))
(insn 30 29 31 2 (set (subreg:DI (reg:TI 90 [ _4 ]) 0)
        (reg:DI 89 [ size.7_3 ])) "BOUNDL.f":1 -1
     (nil))
(insn 31 30 32 2 (set (subreg:DI (reg:TI 90 [ _4 ]) 8)
        (const_int 0 [0])) "BOUNDL.f":1 -1
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg:TI 125 [ _48 ])
                (ashift:TI (reg:TI 90 [ _4 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":1 -1
     (nil))
(insn 33 32 34 2 (set (reg:DI 91 [ size.8_5 ])
        (reg:DI 123 [ size.4_46 ])) "BOUNDL.f":1 -1
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg:DI 126 [ _49 ])
                (ashift:DI (reg:DI 91 [ size.8_5 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":1 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 127 [ offset.3_50 ])
        (not:DI (reg:DI 121 [ stride.2_42 ]))) "BOUNDL.f":1 -1
     (nil))
(insn 36 35 37 2 (set (reg:SI 128 [ _51 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f065e850870 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "BOUNDL.f":57 -1
     (nil))
(insn 37 36 38 2 (set (reg:SI 129 [ _52 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f065e850870 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "BOUNDL.f":57 -1
     (nil))
(insn 38 37 127 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 128 [ _51 ])) "BOUNDL.f":57 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              12 (DFS_BACK)
(code_label 127 38 39 4 7 (nil) [1 uses])
(note 39 127 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 129 [ _52 ]))) "BOUNDL.f":57 -1
     (nil))
(insn 41 40 42 4 (set (reg:QI 141)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BOUNDL.f":57 -1
     (nil))
(insn 42 41 43 4 (set (reg:SI 130 [ _54 ])
        (zero_extend:SI (reg:QI 141))) "BOUNDL.f":57 -1
     (nil))
(insn 43 42 44 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ _54 ])
            (const_int 0 [0]))) "BOUNDL.f":57 -1
     (nil))
(jump_insn 44 43 45 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) "BOUNDL.f":57 -1
     (nil)
 -> 130)
;;  succ:       13
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 5 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])) "BOUNDL.f":58 -1
     (nil))
(insn 47 46 48 5 (set (reg:SI 131 [ _55 ])
        (mem:SI (reg/f:DI 142) [1 *im_39(D)+0 S4 A32])) "BOUNDL.f":58 -1
     (nil))
(insn 48 47 121 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "BOUNDL.f":58 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              11 (DFS_BACK)
(code_label 121 48 49 6 6 (nil) [1 uses])
(note 49 121 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 131 [ _55 ]))) "BOUNDL.f":58 -1
     (nil))
(insn 51 50 52 6 (set (reg:QI 143)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BOUNDL.f":58 -1
     (nil))
(insn 52 51 53 6 (set (reg:SI 132 [ _57 ])
        (zero_extend:SI (reg:QI 143))) "BOUNDL.f":58 -1
     (nil))
(insn 53 52 54 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ _57 ])
            (const_int 0 [0]))) "BOUNDL.f":58 -1
     (nil))
(jump_insn 54 53 55 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "BOUNDL.f":58 -1
     (nil)
 -> 124)
;;  succ:       12
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 7 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [4 fmin+0 S8 A64])) "BOUNDL.f":59 -1
     (nil))
(insn 57 56 58 7 (set (reg:SF 118 [ M.5_34 ])
        (mem:SF (reg/f:DI 144) [7 *fmin_58(D)+0 S4 A32])) "BOUNDL.f":59 -1
     (nil))
(insn 58 57 59 7 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUNDL.f":59 -1
     (nil))
(insn 59 58 60 7 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 145))) "BOUNDL.f":59 -1
     (nil))
(insn 60 59 61 7 (parallel [
            (set (reg:DI 93 [ _7 ])
                (mult:DI (reg:DI 121 [ stride.2_42 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))
(insn 61 60 62 7 (parallel [
            (set (reg:DI 94 [ _8 ])
                (plus:DI (reg:DI 127 [ offset.3_50 ])
                    (reg:DI 93 [ _7 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))
(insn 62 61 63 7 (set (reg:SI 146)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUNDL.f":59 -1
     (nil))
(insn 63 62 64 7 (set (reg:DI 95 [ _9 ])
        (sign_extend:DI (reg:SI 146))) "BOUNDL.f":59 -1
     (nil))
(insn 64 63 65 7 (parallel [
            (set (reg:DI 96 [ _10 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))
(insn 65 64 66 7 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUNDL.f":59 -1
     (nil))
(insn 66 65 67 7 (set (reg:SF 133 [ _62 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 96 [ _10 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 147)) [7 *fld_61(D) S4 A32])) "BOUNDL.f":59 -1
     (nil))
(insn 67 66 68 7 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 133 [ _62 ])
            (reg:SF 118 [ M.5_34 ]))) "BOUNDL.f":59 -1
     (nil))
(insn 68 67 69 7 (set (reg:QI 148)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUNDL.f":59 -1
     (nil))
(insn 69 68 70 7 (set (reg:SI 97 [ _11 ])
        (zero_extend:SI (reg:QI 148))) "BOUNDL.f":59 -1
     (nil))
(insn 70 69 71 7 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 118 [ M.5_34 ])
                    (reg:SF 118 [ M.5_34 ]))
            ] UNSPEC_NOTRAP)) "BOUNDL.f":59 -1
     (nil))
(insn 71 70 72 7 (set (reg:QI 149)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUNDL.f":59 -1
     (nil))
(insn 72 71 73 7 (set (reg:SI 98 [ _12 ])
        (zero_extend:SI (reg:QI 149))) "BOUNDL.f":59 -1
     (nil))
(insn 73 72 74 7 (parallel [
            (set (reg:SI 99 [ _13 ])
                (ior:SI (reg:SI 97 [ _11 ])
                    (reg:SI 98 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))
(insn 74 73 75 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ _13 ])
            (const_int 0 [0]))) "BOUNDL.f":59 -1
     (nil))
(jump_insn 75 74 76 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "BOUNDL.f":59 -1
     (nil)
 -> 77)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 2, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
(note 76 75 8 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 8 76 77 8 (set (reg:SF 118 [ M.5_34 ])
        (reg:SF 133 [ _62 ])) "BOUNDL.f":59 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 2, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              8 (FALLTHRU)
(code_label 77 8 78 9 4 (nil) [1 uses])
(note 78 77 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 9 (set (reg:SI 150)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUNDL.f":59 -1
     (nil))
(insn 80 79 81 9 (set (reg:DI 100 [ _14 ])
        (sign_extend:DI (reg:SI 150))) "BOUNDL.f":59 -1
     (nil))
(insn 81 80 82 9 (parallel [
            (set (reg:DI 101 [ _15 ])
                (mult:DI (reg:DI 121 [ stride.2_42 ])
                    (reg:DI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))
(insn 82 81 83 9 (parallel [
            (set (reg:DI 102 [ _16 ])
                (plus:DI (reg:DI 127 [ offset.3_50 ])
                    (reg:DI 101 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))
(insn 83 82 84 9 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUNDL.f":59 -1
     (nil))
(insn 84 83 85 9 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 151))) "BOUNDL.f":59 -1
     (nil))
(insn 85 84 86 9 (parallel [
            (set (reg:DI 104 [ _18 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (reg:DI 103 [ _17 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":59 -1
     (nil))
(insn 86 85 87 9 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUNDL.f":59 -1
     (nil))
(insn 87 86 88 9 (set (mem:SF (plus:DI (mult:DI (reg:DI 104 [ _18 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 152)) [7 *fld_61(D) S4 A32])
        (reg:SF 118 [ M.5_34 ])) "BOUNDL.f":59 -1
     (nil))
(insn 88 87 89 9 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUNDL.f":60 -1
     (nil))
(insn 89 88 90 9 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 153))) "BOUNDL.f":60 -1
     (nil))
(insn 90 89 91 9 (parallel [
            (set (reg:DI 106 [ _20 ])
                (mult:DI (reg:DI 121 [ stride.2_42 ])
                    (reg:DI 105 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))
(insn 91 90 92 9 (parallel [
            (set (reg:DI 107 [ _21 ])
                (plus:DI (reg:DI 127 [ offset.3_50 ])
                    (reg:DI 106 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))
(insn 92 91 93 9 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUNDL.f":60 -1
     (nil))
(insn 93 92 94 9 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 154))) "BOUNDL.f":60 -1
     (nil))
(insn 94 93 95 9 (parallel [
            (set (reg:DI 109 [ _23 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (reg:DI 108 [ _22 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))
(insn 95 94 96 9 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUNDL.f":60 -1
     (nil))
(insn 96 95 97 9 (set (reg:SF 119 [ M.6_35 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 109 [ _23 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 155)) [7 *fld_61(D) S4 A32])) "BOUNDL.f":60 -1
     (nil))
(insn 97 96 98 9 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [4 fmax+0 S8 A64])) "BOUNDL.f":60 -1
     (nil))
(insn 98 97 99 9 (set (reg:SF 134 [ _68 ])
        (mem:SF (reg/f:DI 156) [7 *fmax_67(D)+0 S4 A32])) "BOUNDL.f":60 -1
     (nil))
(insn 99 98 100 9 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 119 [ M.6_35 ])
            (reg:SF 134 [ _68 ]))) "BOUNDL.f":60 -1
     (nil))
(insn 100 99 101 9 (set (reg:QI 158)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUNDL.f":60 -1
     (nil))
(insn 101 100 102 9 (set (reg:SI 110 [ _24 ])
        (zero_extend:SI (reg:QI 158))) "BOUNDL.f":60 -1
     (nil))
(insn 102 101 103 9 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 119 [ M.6_35 ])
                    (reg:SF 119 [ M.6_35 ]))
            ] UNSPEC_NOTRAP)) "BOUNDL.f":60 -1
     (nil))
(insn 103 102 104 9 (set (reg:QI 159)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUNDL.f":60 -1
     (nil))
(insn 104 103 105 9 (set (reg:SI 111 [ _25 ])
        (zero_extend:SI (reg:QI 159))) "BOUNDL.f":60 -1
     (nil))
(insn 105 104 106 9 (parallel [
            (set (reg:SI 112 [ _26 ])
                (ior:SI (reg:SI 110 [ _24 ])
                    (reg:SI 111 [ _25 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))
(insn 106 105 107 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ _26 ])
            (const_int 0 [0]))) "BOUNDL.f":60 -1
     (nil))
(jump_insn 107 106 108 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "BOUNDL.f":60 -1
     (nil)
 -> 109)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 2, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
(note 108 107 9 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 9 108 109 10 (set (reg:SF 119 [ M.6_35 ])
        (reg:SF 134 [ _68 ])) "BOUNDL.f":60 -1
     (nil))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 2, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU)
(code_label 109 9 110 11 5 (nil) [1 uses])
(note 110 109 111 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 11 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUNDL.f":60 -1
     (nil))
(insn 112 111 113 11 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 160))) "BOUNDL.f":60 -1
     (nil))
(insn 113 112 114 11 (parallel [
            (set (reg:DI 114 [ _28 ])
                (mult:DI (reg:DI 121 [ stride.2_42 ])
                    (reg:DI 113 [ _27 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))
(insn 114 113 115 11 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 127 [ offset.3_50 ])
                    (reg:DI 114 [ _28 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))
(insn 115 114 116 11 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUNDL.f":60 -1
     (nil))
(insn 116 115 117 11 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 161))) "BOUNDL.f":60 -1
     (nil))
(insn 117 116 118 11 (parallel [
            (set (reg:DI 117 [ _31 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (reg:DI 116 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":60 -1
     (nil))
(insn 118 117 119 11 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUNDL.f":60 -1
     (nil))
(insn 119 118 120 11 (set (mem:SF (plus:DI (mult:DI (reg:DI 117 [ _31 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 162)) [7 *fld_61(D) S4 A32])
        (reg:SF 119 [ M.6_35 ])) "BOUNDL.f":60 -1
     (nil))
(insn 120 119 122 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":58 -1
     (nil))
(jump_insn 122 120 123 11 (set (pc)
        (label_ref 121)) "BOUNDL.f":58 -1
     (nil)
 -> 121)
;;  succ:       6 (DFS_BACK)

(barrier 123 122 124)
;; basic block 12, loop depth 1, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 124 123 125 12 3 (nil) [1 uses])
(note 125 124 126 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 128 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BOUNDL.f":57 -1
     (nil))
(jump_insn 128 126 129 12 (set (pc)
        (label_ref 127)) "BOUNDL.f":57 -1
     (nil)
 -> 127)
;;  succ:       4 (DFS_BACK)

(barrier 129 128 130)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 130 129 131 13 2 (nil) [1 uses])
(note 131 130 136 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 136 131 0 13 (const_int 0 [0]) "BOUNDL.f":66 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

