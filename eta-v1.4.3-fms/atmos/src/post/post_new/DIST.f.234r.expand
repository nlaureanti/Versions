
;; Function dist (dist_, funcdef_no=0, decl_uid=3769, cgraph_uid=0, symbol_order=0)

dist (real(kind=4)[29631] * restrict a)
{
  integer(kind=4) finally_tmp.8;
  integer(kind=8) D.3907;
  integer(kind=8) D.3906;
  integer(kind=8) S.5;
  integer(kind=8) S.4;
  integer(kind=8) D.3903;
  integer(kind=8) D.3902;
  integer(kind=8) D.3901;
  integer(kind=8) D.3900;
  integer(kind=8) D.3899;
  integer(kind=8) D.3898;
  sizetype D.3912;
  bitsizetype D.3911;
  integer(kind=8) D.3910;
  integer(kind=4) ierr;
  real(kind=4)[0:D.3910] * restrict b;
  integer(kind=8) size.3;
  integer(kind=8) offset.2;
  integer(kind=8) ubound.1;
  integer(kind=8) lbound.0;
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static integer(kind=4) mpi_weights_empty[1] [value-expr: mpi_fortran_weights_empty.mpi_weights_empty];
  static integer(kind=4) mpi_unweighted[1] [value-expr: mpi_fortran_unweighted.mpi_unweighted];
  static integer(kind=4) mpi_statuses_ignore[6] [value-expr: mpi_fortran_statuses_ignore.mpi_statuses_ignore];
  static integer(kind=4) mpi_status_ignore[6] [value-expr: mpi_fortran_status_ignore.mpi_status_ignore];
  static integer(kind=4) mpi_in_place [value-expr: mpi_fortran_in_place.mpi_in_place];
  static integer(kind=4) mpi_errcodes_ignore[1] [value-expr: mpi_fortran_errcodes_ignore.mpi_errcodes_ignore];
  static integer(kind=4) mpi_bottom [value-expr: mpi_fortran_bottom.mpi_bottom];
  static character(kind=1) mpi_argvs_null[1][1:1] [value-expr: mpi_fortran_argvs_null.mpi_argvs_null];
  static character(kind=1) mpi_argv_null[1][1:1] [value-expr: mpi_fortran_argv_null.mpi_argv_null];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  void * restrict D.3913;
  integer(kind=4) _1;
  integer(kind=4) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  sizetype size.6_5;
  bitsizetype _6;
  sizetype size.7_7;
  integer(kind=8) _8;
  unsigned long _9;
  unsigned long _10;
  integer(kind=8) _11;
  integer(kind=4) _12;
  integer(kind=4) _13;
  integer(kind=8) _14;
  integer(kind=4) * _15;
  integer(kind=4) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  real(kind=4) * _21;
  integer(kind=4) _22;
  integer(kind=4) _23;
  integer(kind=4) _24;
  integer(kind=4) _25;
  integer(kind=8) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  real(kind=4) _31;
  integer(kind=8) S.4_32;
  integer(kind=8) S.5_33;
  integer(kind=4) finally_tmp.8_34;
  integer(kind=8) size.3_42;
  integer(kind=8) size.3_43;
  integer(kind=8) _44;
  bitsizetype _45;
  sizetype _46;
  void * restrict _48;
  integer(kind=8) offset.2_50;
  integer(kind=4) finally_tmp.8_51;
  integer(kind=8) _54;
  integer(kind=8) _55;
  integer(kind=8) _56;
  integer(kind=8) _57;
  integer(kind=8) _58;
  integer(kind=8) _59;
  integer(kind=8) S.4_60;
  integer(kind=8) _61;
  integer(kind=8) _62;
  integer(kind=8) S.5_63;
  integer(kind=8) S.5_65;
  integer(kind=8) S.4_66;
  integer(kind=4) finally_tmp.8_67;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = parallel.jsta;
  lbound.0_40 = (integer(kind=8)) _1;
  _2 = parallel.jend;
  ubound.1_41 = (integer(kind=8)) _2;
  _3 = 1 - lbound.0_40;
  _4 = ubound.1_41 + _3;
  size.3_42 = _4 * 119;
  size.3_43 = MAX_EXPR <size.3_42, 0>;
  _44 = size.3_43 + -1;
  size.6_5 = (sizetype) size.3_43;
  _6 = (bitsizetype) size.6_5;
  _45 = _6 * 32;
  size.7_7 = (sizetype) size.3_43;
  _46 = size.7_7 * 4;
  _8 = size.3_43 * 4;
  _9 = (unsigned long) _8;
  _10 = MAX_EXPR <_9, 1>;
  _48 = __builtin_malloc (_10);
  b_49 = _48;
  _11 = lbound.0_40 * 119;
  offset.2_50 = ~_11;
  _12 = parallel.num_procs;
  if (_12 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  // predicted unlikely by early return (on trees) predictor.
  finally_tmp.8_51 = 0;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 4, loop depth 0
;;    pred:       2
  _13 = parallel.me;
  _14 = (integer(kind=8)) _13;
  _15 = &parallel.icnt[_14];
  _16 = parallel.jsta;
  _17 = (integer(kind=8)) _16;
  _18 = _17 * 119;
  _19 = offset.2_50 + _18;
  _20 = _19 + 1;
  _21 = &*b_49[_20];
  mpi_scatterv (a_52(D), &parallel.icnt, &parallel.idsp, &C.3893, _21, _15, &C.3894, &C.3895, &C.3896, &ierr);
  _54 = offset.2_50;
  _22 = parallel.jsta;
  _55 = (integer(kind=8)) _22;
  _23 = parallel.jend;
  _56 = (integer(kind=8)) _23;
  _24 = parallel.jsta;
  _57 = (integer(kind=8)) _24;
  _25 = parallel.jend;
  _58 = (integer(kind=8)) _25;
  _59 = _57 - _55;
  S.4_60 = _55;
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       4
;;                9
  # S.4_32 = PHI <S.4_60(4), S.4_66(9)>
  if (S.4_32 > _56)
    goto <bb 10>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  _26 = S.4_32 * 119;
  _61 = _54 + _26;
  _27 = S.4_32 + _59;
  _28 = _27 * 119;
  _62 = _28 + -120;
  S.5_63 = 1;
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       6
;;                8
  # S.5_33 = PHI <S.5_63(6), S.5_65(8)>
  if (S.5_33 > 119)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       9
;;                8

;;   basic block 8, loop depth 2
;;    pred:       7
  _29 = S.5_33 + _61;
  _30 = S.5_33 + _62;
  _31 = *b_49[_29];
  *a_52(D)[_30] = _31;
  S.5_65 = S.5_33 + 1;
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 9, loop depth 1
;;    pred:       7
  S.4_66 = S.4_32 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 10, loop depth 0
;;    pred:       5
  finally_tmp.8_67 = 1;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       3
;;                10
  # finally_tmp.8_34 = PHI <finally_tmp.8_51(3), finally_tmp.8_67(10)>
  __builtin_free (b_49);
  if (finally_tmp.8_34 == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       14
;;                12

;;   basic block 12, loop depth 0
;;    pred:       11
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       12
  ierr ={v} {CLOBBER};
  goto <bb 15>; [INV]
;;    succ:       15

;;   basic block 14, loop depth 0
;;    pred:       11
  ierr ={v} {CLOBBER};
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       13
;;                14
<L15>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (size.6_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (size.7_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (S.4_32 - 32 )
Partition 33 (S.5_33 - 33 )
Partition 34 (finally_tmp.8_34 - 34 )
Partition 40 (lbound.0_40 - 40 )
Partition 41 (ubound.1_41 - 41 )
Partition 42 (size.3_42 - 42 )
Partition 43 (size.3_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 48 (_48 - 48 )
Partition 49 (b_49 - 49 )
Partition 50 (offset.2_50 - 50 )
Partition 51 (finally_tmp.8_51 - 51 )
Partition 52 (a_52(D) - 52 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (S.4_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (S.5_63 - 63 )
Partition 65 (S.5_65 - 65 )
Partition 66 (S.4_66 - 66 )
Partition 67 (finally_tmp.8_67 - 67 )


Coalescible Partition map 

Partition 0, base 0 (S.4_32 - 32 55 60 66 )
Partition 1, base 1 (S.5_33 - 33 63 65 )
Partition 2, base 2 (finally_tmp.8_34 - 34 51 67 )
Partition 3, base 3 (offset.2_50 - 50 54 )
Partition 5, base 4 (a_52(D) - 52 )


Partition map 

Partition 0 (S.4_32 - 32 )
Partition 1 (S.5_33 - 33 )
Partition 2 (finally_tmp.8_34 - 34 )
Partition 3 (offset.2_50 - 50 )
Partition 4 (finally_tmp.8_51 - 51 )
Partition 5 (a_52(D) - 52 )
Partition 6 (_54 - 54 )
Partition 7 (_55 - 55 )
Partition 8 (S.4_60 - 60 )
Partition 9 (S.5_63 - 63 )
Partition 10 (S.5_65 - 65 )
Partition 11 (S.4_66 - 66 )
Partition 12 (finally_tmp.8_67 - 67 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(10000, 0) offset.2_50 <-> _54
(10000, 0) _55 <-> S.4_60
(10000, 0) S.4_32 <-> S.4_60
(10000, 0) S.4_32 <-> S.4_66
(10000, 0) S.5_33 <-> S.5_63
(10000, 0) S.5_33 <-> S.5_65
(10000, 0) finally_tmp.8_34 <-> finally_tmp.8_51
(10000, 0) finally_tmp.8_34 <-> finally_tmp.8_67

Partition map 

Partition 0 (S.4_32 - 32 )
Partition 1 (S.5_33 - 33 )
Partition 2 (finally_tmp.8_34 - 34 )
Partition 3 (offset.2_50 - 50 )
Partition 4 (finally_tmp.8_51 - 51 )
Partition 5 (a_52(D) - 52 )
Partition 6 (_54 - 54 )
Partition 7 (_55 - 55 )
Partition 8 (S.4_60 - 60 )
Partition 9 (S.5_63 - 63 )
Partition 10 (S.5_65 - 65 )
Partition 11 (S.4_66 - 66 )
Partition 12 (finally_tmp.8_67 - 67 )

Coalesce list: (50)offset.2_50 & (54)_54 [map: 3, 6] : Success -> 3
Coalesce list: (55)_55 & (60)S.4_60 [map: 7, 8] : Success -> 7
Coalesce list: (32)S.4_32 & (60)_55 [map: 0, 7] : Success -> 7
Coalesce list: (32)_55 & (66)S.4_66 [map: 7, 11] : Success -> 7
Coalesce list: (33)S.5_33 & (63)S.5_63 [map: 1, 9] : Success -> 1
Coalesce list: (33)S.5_33 & (65)S.5_65 [map: 1, 10] : Success -> 1
Coalesce list: (34)finally_tmp.8_34 & (51)finally_tmp.8_51 [map: 2, 4] : Success -> 2
Coalesce list: (34)finally_tmp.8_34 & (67)finally_tmp.8_67 [map: 2, 12] : Success -> 2
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (size.6_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (size.7_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (S.5_33 - 33 63 65 )
Partition 32 (finally_tmp.8_34 - 34 51 67 )
Partition 33 (lbound.0_40 - 40 )
Partition 34 (ubound.1_41 - 41 )
Partition 35 (size.3_42 - 42 )
Partition 36 (size.3_43 - 43 )
Partition 37 (_44 - 44 )
Partition 38 (_45 - 45 )
Partition 39 (_46 - 46 )
Partition 40 (_48 - 48 )
Partition 41 (b_49 - 49 )
Partition 42 (offset.2_50 - 50 54 )
Partition 43 (a_52(D) - 52 )
Partition 44 (_55 - 32 55 60 66 )
Partition 45 (_56 - 56 )
Partition 46 (_57 - 57 )
Partition 47 (_58 - 58 )
Partition 48 (_59 - 59 )
Partition 49 (_61 - 61 )
Partition 50 (_62 - 62 )

dist (real(kind=4)[29631] * restrict a)
{
  integer(kind=4) finally_tmp.8;
  integer(kind=8) D.3907;
  integer(kind=8) D.3906;
  integer(kind=8) S.5;
  integer(kind=8) S.4;
  integer(kind=8) D.3903;
  integer(kind=8) D.3902;
  integer(kind=8) D.3901;
  integer(kind=8) D.3900;
  integer(kind=8) D.3899;
  integer(kind=8) D.3898;
  sizetype D.3912;
  bitsizetype D.3911;
  integer(kind=8) D.3910;
  integer(kind=4) ierr;
  real(kind=4)[0:D.3910] * restrict b;
  integer(kind=8) size.3;
  integer(kind=8) offset.2;
  integer(kind=8) ubound.1;
  integer(kind=8) lbound.0;
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static integer(kind=4) mpi_weights_empty[1] [value-expr: mpi_fortran_weights_empty.mpi_weights_empty];
  static integer(kind=4) mpi_unweighted[1] [value-expr: mpi_fortran_unweighted.mpi_unweighted];
  static integer(kind=4) mpi_statuses_ignore[6] [value-expr: mpi_fortran_statuses_ignore.mpi_statuses_ignore];
  static integer(kind=4) mpi_status_ignore[6] [value-expr: mpi_fortran_status_ignore.mpi_status_ignore];
  static integer(kind=4) mpi_in_place [value-expr: mpi_fortran_in_place.mpi_in_place];
  static integer(kind=4) mpi_errcodes_ignore[1] [value-expr: mpi_fortran_errcodes_ignore.mpi_errcodes_ignore];
  static integer(kind=4) mpi_bottom [value-expr: mpi_fortran_bottom.mpi_bottom];
  static character(kind=1) mpi_argvs_null[1][1:1] [value-expr: mpi_fortran_argvs_null.mpi_argvs_null];
  static character(kind=1) mpi_argv_null[1][1:1] [value-expr: mpi_fortran_argv_null.mpi_argv_null];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  void * restrict D.3913;
  integer(kind=4) _1;
  integer(kind=4) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  sizetype size.6_5;
  bitsizetype _6;
  sizetype size.7_7;
  integer(kind=8) _8;
  unsigned long _9;
  unsigned long _10;
  integer(kind=8) _11;
  integer(kind=4) _12;
  integer(kind=4) _13;
  integer(kind=8) _14;
  integer(kind=4) * _15;
  integer(kind=4) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  real(kind=4) * _21;
  integer(kind=4) _22;
  integer(kind=4) _23;
  integer(kind=4) _24;
  integer(kind=4) _25;
  integer(kind=8) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  real(kind=4) _31;
  integer(kind=8) S.4_32;
  integer(kind=8) S.5_33;
  integer(kind=4) finally_tmp.8_34;
  integer(kind=8) size.3_42;
  integer(kind=8) size.3_43;
  integer(kind=8) _44;
  bitsizetype _45;
  sizetype _46;
  void * restrict _48;
  integer(kind=8) offset.2_50;
  integer(kind=4) finally_tmp.8_51;
  integer(kind=8) _54;
  integer(kind=8) _55;
  integer(kind=8) _56;
  integer(kind=8) _57;
  integer(kind=8) _58;
  integer(kind=8) _59;
  integer(kind=8) S.4_60;
  integer(kind=8) _61;
  integer(kind=8) _62;
  integer(kind=8) S.5_63;
  integer(kind=8) S.5_65;
  integer(kind=8) S.4_66;
  integer(kind=4) finally_tmp.8_67;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = parallel.jsta;
  lbound.0_40 = (integer(kind=8)) _1;
  _2 = parallel.jend;
  ubound.1_41 = (integer(kind=8)) _2;
  _3 = 1 - lbound.0_40;
  _4 = ubound.1_41 + _3;
  size.3_42 = _4 * 119;
  size.3_43 = MAX_EXPR <size.3_42, 0>;
  _44 = size.3_43 + -1;
  size.6_5 = (sizetype) size.3_43;
  _6 = (bitsizetype) size.6_5;
  _45 = _6 * 32;
  size.7_7 = (sizetype) size.3_43;
  _46 = size.7_7 * 4;
  _8 = size.3_43 * 4;
  _9 = (unsigned long) _8;
  _10 = MAX_EXPR <_9, 1>;
  _48 = __builtin_malloc (_10);
  b_49 = _48;
  _11 = lbound.0_40 * 119;
  offset.2_50 = ~_11;
  _12 = parallel.num_procs;
  if (_12 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  // predicted unlikely by early return (on trees) predictor.
  finally_tmp.8_51 = 0;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 4, loop depth 0
;;    pred:       2
  _13 = parallel.me;
  _14 = (integer(kind=8)) _13;
  _15 = &parallel.icnt[_14];
  _16 = parallel.jsta;
  _17 = (integer(kind=8)) _16;
  _18 = _17 * 119;
  _19 = offset.2_50 + _18;
  _20 = _19 + 1;
  _21 = &*b_49[_20];
  mpi_scatterv (a_52(D), &parallel.icnt, &parallel.idsp, &C.3893, _21, _15, &C.3894, &C.3895, &C.3896, &ierr);
  _54 = offset.2_50;
  _22 = parallel.jsta;
  _55 = (integer(kind=8)) _22;
  _23 = parallel.jend;
  _56 = (integer(kind=8)) _23;
  _24 = parallel.jsta;
  _57 = (integer(kind=8)) _24;
  _25 = parallel.jend;
  _58 = (integer(kind=8)) _25;
  _59 = _57 - _55;
  S.4_60 = _55;
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       4
;;                9
  # S.4_32 = PHI <S.4_60(4), S.4_66(9)>
  if (S.4_32 > _56)
    goto <bb 10>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  _26 = S.4_32 * 119;
  _61 = _54 + _26;
  _27 = S.4_32 + _59;
  _28 = _27 * 119;
  _62 = _28 + -120;
  S.5_63 = 1;
;;    succ:       7

;;   basic block 7, loop depth 2
;;    pred:       6
;;                8
  # S.5_33 = PHI <S.5_63(6), S.5_65(8)>
  if (S.5_33 > 119)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       9
;;                8

;;   basic block 8, loop depth 2
;;    pred:       7
  _29 = S.5_33 + _61;
  _30 = S.5_33 + _62;
  _31 = *b_49[_29];
  *a_52(D)[_30] = _31;
  S.5_65 = S.5_33 + 1;
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 9, loop depth 1
;;    pred:       7
  S.4_66 = S.4_32 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 10, loop depth 0
;;    pred:       5
  finally_tmp.8_67 = 1;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       3
;;                10
  # finally_tmp.8_34 = PHI <finally_tmp.8_51(3), finally_tmp.8_67(10)>
  __builtin_free (b_49);
  if (finally_tmp.8_34 == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       14
;;                12

;;   basic block 12, loop depth 0
;;    pred:       11
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       12
  ierr ={v} {CLOBBER};
  goto <bb 15>; [INV]
;;    succ:       15

;;   basic block 14, loop depth 0
;;    pred:       11
  ierr ={v} {CLOBBER};
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       13
;;                14
<L15>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = parallel.jsta;

(insn 6 5 0 (set (reg:SI 87 [ _1 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 8 [0x8]))) [3 parallel.jsta+0 S4 A64])) "DIST.f":1 -1
     (nil))

;; lbound.0_40 = (integer(kind=8)) _1;

(insn 7 6 8 (set (reg:DI 134)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "DIST.f":40 -1
     (nil))

(insn 8 7 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 lbound.0+0 S8 A64])
        (reg:DI 134)) "DIST.f":40 -1
     (nil))

;; _2 = parallel.jend;

(insn 9 8 0 (set (reg:SI 88 [ _2 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 12 [0xc]))) [3 parallel.jend+0 S4 A32])) "DIST.f":1 -1
     (nil))

;; ubound.1_41 = (integer(kind=8)) _2;

(insn 10 9 11 (set (reg:DI 135)
        (sign_extend:DI (reg:SI 88 [ _2 ]))) "DIST.f":40 -1
     (nil))

(insn 11 10 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 ubound.1+0 S8 A64])
        (reg:DI 135)) "DIST.f":40 -1
     (nil))

;; _3 = 1 - lbound.0_40;

(insn 12 11 13 (set (reg:DI 136)
        (const_int 1 [0x1])) "DIST.f":40 -1
     (nil))

(insn 13 12 0 (parallel [
            (set (reg:DI 89 [ _3 ])
                (minus:DI (reg:DI 136)
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 lbound.0+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))

;; _4 = ubound.1_41 + _3;

(insn 14 13 15 (set (reg:DI 137)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 ubound.1+0 S8 A64])) "DIST.f":40 -1
     (nil))

(insn 15 14 0 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 89 [ _3 ])
                    (reg:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (expr_list:REG_EQUAL (plus:DI (reg:DI 89 [ _3 ])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ubound.1+0 S8 A64]))
        (nil)))

;; size.3_42 = _4 * 119;

(insn 16 15 0 (parallel [
            (set (reg:DI 120 [ size.3_42 ])
                (mult:DI (reg:DI 90 [ _4 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))

;; size.3_43 = MAX_EXPR <size.3_42, 0>;

(insn 18 16 17 (set (reg:DI 138)
        (const_int 0 [0])) "DIST.f":40 -1
     (nil))

(insn 17 18 19 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 120 [ size.3_42 ])
            (const_int 0 [0]))) "DIST.f":40 -1
     (nil))

(insn 19 17 0 (set (reg:DI 121 [ size.3_43 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 120 [ size.3_42 ])
            (reg:DI 138))) "DIST.f":40 -1
     (nil))

;; _44 = size.3_43 + -1;

(insn 20 19 0 (parallel [
            (set (reg:DI 122 [ _44 ])
                (plus:DI (reg:DI 121 [ size.3_43 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))

;; size.6_5 = (sizetype) size.3_43;

(insn 21 20 0 (set (reg:DI 91 [ size.6_5 ])
        (reg:DI 121 [ size.3_43 ])) "DIST.f":40 -1
     (nil))

;; _6 = (bitsizetype) size.6_5;

(insn 22 21 23 (set (subreg:DI (reg:TI 92 [ _6 ]) 0)
        (reg:DI 91 [ size.6_5 ])) "DIST.f":40 -1
     (nil))

(insn 23 22 0 (set (subreg:DI (reg:TI 92 [ _6 ]) 8)
        (const_int 0 [0])) "DIST.f":40 -1
     (nil))

;; _45 = _6 * 32;

(insn 24 23 0 (parallel [
            (set (reg:TI 123 [ _45 ])
                (ashift:TI (reg:TI 92 [ _6 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))

;; size.7_7 = (sizetype) size.3_43;

(insn 25 24 0 (set (reg:DI 93 [ size.7_7 ])
        (reg:DI 121 [ size.3_43 ])) "DIST.f":40 -1
     (nil))

;; _46 = size.7_7 * 4;

(insn 26 25 0 (parallel [
            (set (reg:DI 124 [ _46 ])
                (ashift:DI (reg:DI 93 [ size.7_7 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))

;; _8 = size.3_43 * 4;

(insn 27 26 0 (parallel [
            (set (reg:DI 94 [ _8 ])
                (ashift:DI (reg:DI 121 [ size.3_43 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))

;; _9 = (unsigned long) _8;

(insn 28 27 0 (set (reg:DI 95 [ _9 ])
        (reg:DI 94 [ _8 ])) "DIST.f":40 -1
     (nil))

;; _10 = MAX_EXPR <_9, 1>;

(insn 30 28 29 (set (reg:DI 139)
        (const_int 1 [0x1])) "DIST.f":40 -1
     (nil))

(insn 29 30 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 95 [ _9 ])
            (const_int 0 [0]))) "DIST.f":40 -1
     (nil))

(insn 31 29 0 (set (reg:DI 96 [ _10 ])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 95 [ _9 ])
            (reg:DI 139))) "DIST.f":40 -1
     (nil))

;; _48 = __builtin_malloc (_10);

(insn 32 31 33 (set (reg:DI 5 di)
        (reg:DI 96 [ _10 ])) "DIST.f":40 -1
     (nil))

(call_insn 33 32 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fb8d7935f00 __builtin_malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "DIST.f":40 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 34 33 35 (set (reg/f:DI 140)
        (reg:DI 0 ax)) "DIST.f":40 -1
     (expr_list:REG_NOALIAS (reg/f:DI 140)
        (nil)))

(insn 35 34 0 (set (reg/f:DI 125 [ _48 ])
        (reg/f:DI 140)) "DIST.f":40 -1
     (nil))

;; b_49 = _48;

(insn 36 35 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 b+0 S8 A64])
        (reg/f:DI 125 [ _48 ])) "DIST.f":40 -1
     (nil))

;; _11 = lbound.0_40 * 119;

(insn 37 36 38 (set (reg:DI 141)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 lbound.0+0 S8 A64])) "DIST.f":40 -1
     (nil))

(insn 38 37 0 (parallel [
            (set (reg:DI 97 [ _11 ])
                (mult:DI (reg:DI 141)
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))

;; offset.2_50 = ~_11;

(insn 39 38 0 (set (reg:DI 126 [ offset.2_50 ])
        (not:DI (reg:DI 97 [ _11 ]))) "DIST.f":40 -1
     (nil))

;; _12 = parallel.num_procs;

(insn 40 39 0 (set (reg:SI 98 [ _12 ])
        (mem/c:SI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>) [3 parallel.num_procs+0 S4 A128])) "DIST.f":1 -1
     (nil))

;; if (_12 == 1)

(insn 41 40 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ _12 ])
            (const_int 1 [0x1]))) "DIST.f":44 -1
     (nil))

(jump_insn 42 41 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "DIST.f":44 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; finally_tmp.8_51 = 0;

(insn 44 43 0 (set (reg:SI 119 [ finally_tmp.8_34 ])
        (const_int 0 [0])) -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 47 46 48 2 (nil) [0 uses])

(note 48 47 0 NOTE_INSN_BASIC_BLOCK)

;; _13 = parallel.me;

(insn 49 48 0 (set (reg:SI 99 [ _13 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 4 [0x4]))) [3 parallel.me+0 S4 A32])) "DIST.f":1 -1
     (nil))

;; _14 = (integer(kind=8)) _13;

(insn 50 49 0 (set (reg:DI 100 [ _14 ])
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "DIST.f":46 -1
     (nil))

;; _15 = &parallel.icnt[_14];

(insn 51 50 52 (parallel [
            (set (reg:DI 142)
                (plus:DI (reg:DI 100 [ _14 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))

(insn 52 51 53 (parallel [
            (set (reg:DI 143)
                (ashift:DI (reg:DI 142)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))

(insn 53 52 0 (parallel [
            (set (reg/f:DI 101 [ _15 ])
                (plus:DI (reg:DI 143)
                    (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))

;; _16 = parallel.jsta;

(insn 54 53 0 (set (reg:SI 102 [ _16 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 8 [0x8]))) [3 parallel.jsta+0 S4 A64])) "DIST.f":1 -1
     (nil))

;; _17 = (integer(kind=8)) _16;

(insn 55 54 0 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 102 [ _16 ]))) "DIST.f":46 -1
     (nil))

;; _18 = _17 * 119;

(insn 56 55 0 (parallel [
            (set (reg:DI 104 [ _18 ])
                (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))

;; _19 = offset.2_50 + _18;

(insn 57 56 0 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 126 [ offset.2_50 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))

;; _20 = _19 + 1;

(insn 58 57 0 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))

;; _21 = &*b_49[_20];

(insn 59 58 60 (parallel [
            (set (reg:DI 144)
                (ashift:DI (reg:DI 106 [ _20 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))

(insn 60 59 61 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 b+0 S8 A64])) "DIST.f":46 -1
     (nil))

(insn 61 60 0 (parallel [
            (set (reg/f:DI 107 [ _21 ])
                (plus:DI (reg:DI 144)
                    (reg/f:DI 145)))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 b+0 S8 A64])
            (reg:DI 144))
        (nil)))

;; mpi_scatterv (a_52(D), &parallel.icnt, &parallel.idsp, &C.3893, _21, _15, &C.3894, &C.3895, &C.3896, &ierr);

(insn 62 61 63 (set (reg:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 a+0 S8 A64])) "DIST.f":46 -1
     (nil))

(insn 63 62 64 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))

(insn 64 63 65 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 147)) "DIST.f":46 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 65 64 66 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb8d7ae1ab0 *.LC1>)) "DIST.f":46 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(insn 66 65 67 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb8d7ae1ab0 *.LC1>)) "DIST.f":46 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))

(insn 67 66 68 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fb8d7ae1a20 *.LC0>)) "DIST.f":46 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))

(insn 68 67 69 (set (reg:DI 38 r9)
        (reg/f:DI 101 [ _15 ])) "DIST.f":46 -1
     (nil))

(insn 69 68 70 (set (reg:DI 37 r8)
        (reg/f:DI 107 [ _21 ])) "DIST.f":46 -1
     (nil))

(insn 70 69 71 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fb8d7ae1a20 *.LC0>)) "DIST.f":46 -1
     (nil))

(insn 71 70 72 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                (const_int 4136 [0x1028])))) "DIST.f":46 -1
     (nil))

(insn 72 71 73 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                (const_int 40 [0x28])))) "DIST.f":46 -1
     (nil))

(insn 73 72 74 (set (reg:DI 5 di)
        (reg:DI 146)) "DIST.f":46 -1
     (nil))

(insn 74 73 75 (set (reg:QI 0 ax)
        (const_int 0 [0])) "DIST.f":46 -1
     (nil))

(call_insn 75 74 76 (call (mem:QI (symbol_ref:DI ("mpi_scatterv_") [flags 0x41]  <function_decl 0x7fb8d7aaf600 mpi_scatterv>) [0 mpi_scatterv S1 A8])
        (const_int 32 [0x20])) "DIST.f":46 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))

(insn 76 75 0 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _54 = offset.2_50;

(nil)

;; _22 = parallel.jsta;

(insn 77 76 0 (set (reg:SI 108 [ _22 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 8 [0x8]))) [3 parallel.jsta+0 S4 A64])) "DIST.f":1 -1
     (nil))

;; _55 = (integer(kind=8)) _22;

(insn 78 77 0 (set (reg:DI 127 [ _55 ])
        (sign_extend:DI (reg:SI 108 [ _22 ]))) "DIST.f":48 -1
     (nil))

;; _23 = parallel.jend;

(insn 79 78 0 (set (reg:SI 109 [ _23 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 12 [0xc]))) [3 parallel.jend+0 S4 A32])) "DIST.f":1 -1
     (nil))

;; _56 = (integer(kind=8)) _23;

(insn 80 79 0 (set (reg:DI 128 [ _56 ])
        (sign_extend:DI (reg:SI 109 [ _23 ]))) "DIST.f":48 -1
     (nil))

;; _24 = parallel.jsta;

(insn 81 80 0 (set (reg:SI 110 [ _24 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 8 [0x8]))) [3 parallel.jsta+0 S4 A64])) "DIST.f":1 -1
     (nil))

;; _57 = (integer(kind=8)) _24;

(insn 82 81 0 (set (reg:DI 129 [ _57 ])
        (sign_extend:DI (reg:SI 110 [ _24 ]))) "DIST.f":48 -1
     (nil))

;; _25 = parallel.jend;

(insn 83 82 0 (set (reg:SI 111 [ _25 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 12 [0xc]))) [3 parallel.jend+0 S4 A32])) "DIST.f":1 -1
     (nil))

;; _58 = (integer(kind=8)) _25;

(insn 84 83 0 (set (reg:DI 130 [ _58 ])
        (sign_extend:DI (reg:SI 111 [ _25 ]))) "DIST.f":48 -1
     (nil))

;; _59 = _57 - _55;

(insn 85 84 0 (parallel [
            (set (reg:DI 131 [ _59 ])
                (minus:DI (reg:DI 129 [ _57 ])
                    (reg:DI 127 [ _55 ])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))

;; S.4_60 = _55;

(nil)

;; Generating RTL for gimple basic block 5

;; if (S.4_32 > _56)

(insn 87 86 88 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 127 [ _55 ])
            (reg:DI 128 [ _56 ]))) "DIST.f":48 -1
     (nil))

(jump_insn 88 87 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "DIST.f":48 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _26 = S.4_32 * 119;

(insn 90 89 0 (parallel [
            (set (reg:DI 112 [ _26 ])
                (mult:DI (reg:DI 127 [ _55 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))

;; _61 = _54 + _26;

(insn 91 90 0 (parallel [
            (set (reg:DI 132 [ _61 ])
                (plus:DI (reg:DI 126 [ offset.2_50 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))

;; _27 = S.4_32 + _59;

(insn 92 91 0 (parallel [
            (set (reg:DI 113 [ _27 ])
                (plus:DI (reg:DI 127 [ _55 ])
                    (reg:DI 131 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))

;; _28 = _27 * 119;

(insn 93 92 0 (parallel [
            (set (reg:DI 114 [ _28 ])
                (mult:DI (reg:DI 113 [ _27 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))

;; _62 = _28 + -120;

(insn 94 93 0 (parallel [
            (set (reg:DI 133 [ _62 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))

;; S.5_63 = 1;

(insn 95 94 0 (set (reg:DI 118 [ S.5_33 ])
        (const_int 1 [0x1])) "DIST.f":48 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; if (S.5_33 > 119)

(insn 97 96 98 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 118 [ S.5_33 ])
            (const_int 119 [0x77]))) "DIST.f":48 -1
     (nil))

(jump_insn 98 97 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "DIST.f":48 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _29 = S.5_33 + _61;

(insn 100 99 0 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 118 [ S.5_33 ])
                    (reg:DI 132 [ _61 ])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))

;; _30 = S.5_33 + _62;

(insn 101 100 0 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 118 [ S.5_33 ])
                    (reg:DI 133 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))

;; _31 = *b_49[_29];

(insn 102 101 103 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 b+0 S8 A64])) "DIST.f":48 -1
     (nil))

(insn 103 102 0 (set (reg:SF 117 [ _31 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 115 [ _29 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 148)) [6 *b_49 S4 A32])) "DIST.f":48 -1
     (nil))

;; *a_52(D)[_30] = _31;

(insn 104 103 105 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 a+0 S8 A64])) "DIST.f":48 -1
     (nil))

(insn 105 104 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 116 [ _30 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 149)) [6 *a_52(D) S4 A32])
        (reg:SF 117 [ _31 ])) "DIST.f":48 -1
     (nil))

;; S.5_65 = S.5_33 + 1;

(insn 106 105 0 (parallel [
            (set (reg:DI 118 [ S.5_33 ])
                (plus:DI (reg:DI 118 [ S.5_33 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 110 109 111 5 (nil) [0 uses])

(note 111 110 0 NOTE_INSN_BASIC_BLOCK)

;; S.4_66 = S.4_32 + 1;

(insn 112 111 0 (parallel [
            (set (reg:DI 127 [ _55 ])
                (plus:DI (reg:DI 127 [ _55 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 116 115 117 4 (nil) [0 uses])

(note 117 116 0 NOTE_INSN_BASIC_BLOCK)

;; finally_tmp.8_67 = 1;

(insn 118 117 0 (set (reg:SI 119 [ finally_tmp.8_34 ])
        (const_int 1 [0x1])) "DIST.f":40 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 119 118 120 3 (nil) [0 uses])

(note 120 119 0 NOTE_INSN_BASIC_BLOCK)

;; __builtin_free (b_49);

(insn 121 120 122 (set (reg:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 b+0 S8 A64])) "DIST.f":40 -1
     (nil))

(insn 122 121 123 (set (reg:DI 5 di)
        (reg:DI 150)) "DIST.f":40 -1
     (nil))

(call_insn 123 122 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb8d7935e00 __builtin_free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "DIST.f":40 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; if (finally_tmp.8_34 == 1)

(insn 124 123 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ finally_tmp.8_34 ])
            (const_int 1 [0x1]))) "DIST.f":40 -1
     (nil))

(jump_insn 125 124 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "DIST.f":40 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; ierr ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 14

;; 

(code_label 130 129 131 8 (nil) [0 uses])

(note 131 130 0 NOTE_INSN_BASIC_BLOCK)

;; ierr ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 15

;; <L15>:

(code_label 132 131 133 9 (nil) [0 uses])

(note 133 132 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 12->15 redirected to 17
Replacing insn 125 by jump 136
deleting block 13
deleting block 14
deleting block 15
deleting block 16
Removing jump 136.
Merging block 17 into block 12...
Merged blocks 12 and 17.
Merged 12 and 17 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 a+0 S8 A64])
        (reg:DI 5 di [ a ])) "DIST.f":1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 87 [ _1 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 8 [0x8]))) [3 parallel.jsta+0 S4 A64])) "DIST.f":1 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 134)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "DIST.f":40 -1
     (nil))
(insn 8 7 9 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 lbound.0+0 S8 A64])
        (reg:DI 134)) "DIST.f":40 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ _2 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 12 [0xc]))) [3 parallel.jend+0 S4 A32])) "DIST.f":1 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 135)
        (sign_extend:DI (reg:SI 88 [ _2 ]))) "DIST.f":40 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 ubound.1+0 S8 A64])
        (reg:DI 135)) "DIST.f":40 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 136)
        (const_int 1 [0x1])) "DIST.f":40 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 89 [ _3 ])
                (minus:DI (reg:DI 136)
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 lbound.0+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 137)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 ubound.1+0 S8 A64])) "DIST.f":40 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 89 [ _3 ])
                    (reg:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (expr_list:REG_EQUAL (plus:DI (reg:DI 89 [ _3 ])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [1 ubound.1+0 S8 A64]))
        (nil)))
(insn 16 15 18 2 (parallel [
            (set (reg:DI 120 [ size.3_42 ])
                (mult:DI (reg:DI 90 [ _4 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))
(insn 18 16 17 2 (set (reg:DI 138)
        (const_int 0 [0])) "DIST.f":40 -1
     (nil))
(insn 17 18 19 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 120 [ size.3_42 ])
            (const_int 0 [0]))) "DIST.f":40 -1
     (nil))
(insn 19 17 20 2 (set (reg:DI 121 [ size.3_43 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 120 [ size.3_42 ])
            (reg:DI 138))) "DIST.f":40 -1
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 122 [ _44 ])
                (plus:DI (reg:DI 121 [ size.3_43 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 91 [ size.6_5 ])
        (reg:DI 121 [ size.3_43 ])) "DIST.f":40 -1
     (nil))
(insn 22 21 23 2 (set (subreg:DI (reg:TI 92 [ _6 ]) 0)
        (reg:DI 91 [ size.6_5 ])) "DIST.f":40 -1
     (nil))
(insn 23 22 24 2 (set (subreg:DI (reg:TI 92 [ _6 ]) 8)
        (const_int 0 [0])) "DIST.f":40 -1
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:TI 123 [ _45 ])
                (ashift:TI (reg:TI 92 [ _6 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 93 [ size.7_7 ])
        (reg:DI 121 [ size.3_43 ])) "DIST.f":40 -1
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg:DI 124 [ _46 ])
                (ashift:DI (reg:DI 93 [ size.7_7 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg:DI 94 [ _8 ])
                (ashift:DI (reg:DI 121 [ size.3_43 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))
(insn 28 27 30 2 (set (reg:DI 95 [ _9 ])
        (reg:DI 94 [ _8 ])) "DIST.f":40 -1
     (nil))
(insn 30 28 29 2 (set (reg:DI 139)
        (const_int 1 [0x1])) "DIST.f":40 -1
     (nil))
(insn 29 30 31 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 95 [ _9 ])
            (const_int 0 [0]))) "DIST.f":40 -1
     (nil))
(insn 31 29 32 2 (set (reg:DI 96 [ _10 ])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 95 [ _9 ])
            (reg:DI 139))) "DIST.f":40 -1
     (nil))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg:DI 96 [ _10 ])) "DIST.f":40 -1
     (nil))
(call_insn 33 32 34 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fb8d7935f00 __builtin_malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "DIST.f":40 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 34 33 35 2 (set (reg/f:DI 140)
        (reg:DI 0 ax)) "DIST.f":40 -1
     (expr_list:REG_NOALIAS (reg/f:DI 140)
        (nil)))
(insn 35 34 36 2 (set (reg/f:DI 125 [ _48 ])
        (reg/f:DI 140)) "DIST.f":40 -1
     (nil))
(insn 36 35 37 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 b+0 S8 A64])
        (reg/f:DI 125 [ _48 ])) "DIST.f":40 -1
     (nil))
(insn 37 36 38 2 (set (reg:DI 141)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 lbound.0+0 S8 A64])) "DIST.f":40 -1
     (nil))
(insn 38 37 39 2 (parallel [
            (set (reg:DI 97 [ _11 ])
                (mult:DI (reg:DI 141)
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":40 -1
     (nil))
(insn 39 38 40 2 (set (reg:DI 126 [ offset.2_50 ])
        (not:DI (reg:DI 97 [ _11 ]))) "DIST.f":40 -1
     (nil))
(insn 40 39 41 2 (set (reg:SI 98 [ _12 ])
        (mem/c:SI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>) [3 parallel.num_procs+0 S4 A128])) "DIST.f":1 -1
     (nil))
(insn 41 40 42 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ _12 ])
            (const_int 1 [0x1]))) "DIST.f":44 -1
     (nil))
(jump_insn 42 41 43 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "DIST.f":44 -1
     (nil)
 -> 47)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 43 42 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 4 (set (reg:SI 119 [ finally_tmp.8_34 ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 45 44 46 4 (set (pc)
        (label_ref 119)) "DIST.f":44 -1
     (nil)
 -> 119)
;;  succ:       12

(barrier 46 45 47)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 47 46 48 5 2 (nil) [1 uses])
(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 5 (set (reg:SI 99 [ _13 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 4 [0x4]))) [3 parallel.me+0 S4 A32])) "DIST.f":1 -1
     (nil))
(insn 50 49 51 5 (set (reg:DI 100 [ _14 ])
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "DIST.f":46 -1
     (nil))
(insn 51 50 52 5 (parallel [
            (set (reg:DI 142)
                (plus:DI (reg:DI 100 [ _14 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))
(insn 52 51 53 5 (parallel [
            (set (reg:DI 143)
                (ashift:DI (reg:DI 142)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))
(insn 53 52 54 5 (parallel [
            (set (reg/f:DI 101 [ _15 ])
                (plus:DI (reg:DI 143)
                    (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))
(insn 54 53 55 5 (set (reg:SI 102 [ _16 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 8 [0x8]))) [3 parallel.jsta+0 S4 A64])) "DIST.f":1 -1
     (nil))
(insn 55 54 56 5 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 102 [ _16 ]))) "DIST.f":46 -1
     (nil))
(insn 56 55 57 5 (parallel [
            (set (reg:DI 104 [ _18 ])
                (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))
(insn 57 56 58 5 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 126 [ offset.2_50 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))
(insn 58 57 59 5 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))
(insn 59 58 60 5 (parallel [
            (set (reg:DI 144)
                (ashift:DI (reg:DI 106 [ _20 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))
(insn 60 59 61 5 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 b+0 S8 A64])) "DIST.f":46 -1
     (nil))
(insn 61 60 62 5 (parallel [
            (set (reg/f:DI 107 [ _21 ])
                (plus:DI (reg:DI 144)
                    (reg/f:DI 145)))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 b+0 S8 A64])
            (reg:DI 144))
        (nil)))
(insn 62 61 63 5 (set (reg:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 a+0 S8 A64])) "DIST.f":46 -1
     (nil))
(insn 63 62 64 5 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (nil))
(insn 64 63 65 5 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 147)) "DIST.f":46 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 65 64 66 5 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb8d7ae1ab0 *.LC1>)) "DIST.f":46 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 66 65 67 5 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb8d7ae1ab0 *.LC1>)) "DIST.f":46 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 67 66 68 5 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fb8d7ae1a20 *.LC0>)) "DIST.f":46 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 68 67 69 5 (set (reg:DI 38 r9)
        (reg/f:DI 101 [ _15 ])) "DIST.f":46 -1
     (nil))
(insn 69 68 70 5 (set (reg:DI 37 r8)
        (reg/f:DI 107 [ _21 ])) "DIST.f":46 -1
     (nil))
(insn 70 69 71 5 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fb8d7ae1a20 *.LC0>)) "DIST.f":46 -1
     (nil))
(insn 71 70 72 5 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                (const_int 4136 [0x1028])))) "DIST.f":46 -1
     (nil))
(insn 72 71 73 5 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                (const_int 40 [0x28])))) "DIST.f":46 -1
     (nil))
(insn 73 72 74 5 (set (reg:DI 5 di)
        (reg:DI 146)) "DIST.f":46 -1
     (nil))
(insn 74 73 75 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "DIST.f":46 -1
     (nil))
(call_insn 75 74 76 5 (call (mem:QI (symbol_ref:DI ("mpi_scatterv_") [flags 0x41]  <function_decl 0x7fb8d7aaf600 mpi_scatterv>) [0 mpi_scatterv S1 A8])
        (const_int 32 [0x20])) "DIST.f":46 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 76 75 77 5 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":46 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 77 76 78 5 (set (reg:SI 108 [ _22 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 8 [0x8]))) [3 parallel.jsta+0 S4 A64])) "DIST.f":1 -1
     (nil))
(insn 78 77 79 5 (set (reg:DI 127 [ _55 ])
        (sign_extend:DI (reg:SI 108 [ _22 ]))) "DIST.f":48 -1
     (nil))
(insn 79 78 80 5 (set (reg:SI 109 [ _23 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 12 [0xc]))) [3 parallel.jend+0 S4 A32])) "DIST.f":1 -1
     (nil))
(insn 80 79 81 5 (set (reg:DI 128 [ _56 ])
        (sign_extend:DI (reg:SI 109 [ _23 ]))) "DIST.f":48 -1
     (nil))
(insn 81 80 82 5 (set (reg:SI 110 [ _24 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 8 [0x8]))) [3 parallel.jsta+0 S4 A64])) "DIST.f":1 -1
     (nil))
(insn 82 81 83 5 (set (reg:DI 129 [ _57 ])
        (sign_extend:DI (reg:SI 110 [ _24 ]))) "DIST.f":48 -1
     (nil))
(insn 83 82 84 5 (set (reg:SI 111 [ _25 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb8d7ad92d0 parallel>)
                    (const_int 12 [0xc]))) [3 parallel.jend+0 S4 A32])) "DIST.f":1 -1
     (nil))
(insn 84 83 85 5 (set (reg:DI 130 [ _58 ])
        (sign_extend:DI (reg:SI 111 [ _25 ]))) "DIST.f":48 -1
     (nil))
(insn 85 84 113 5 (parallel [
            (set (reg:DI 131 [ _59 ])
                (minus:DI (reg:DI 129 [ _57 ])
                    (reg:DI 127 [ _55 ])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              10 (DFS_BACK)
(code_label 113 85 86 6 7 (nil) [1 uses])
(note 86 113 87 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 127 [ _55 ])
            (reg:DI 128 [ _56 ]))) "DIST.f":48 -1
     (nil))
(jump_insn 88 87 89 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "DIST.f":48 -1
     (nil)
 -> 116)
;;  succ:       11
;;              7 (FALLTHRU)

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 89 88 90 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 7 (parallel [
            (set (reg:DI 112 [ _26 ])
                (mult:DI (reg:DI 127 [ _55 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))
(insn 91 90 92 7 (parallel [
            (set (reg:DI 132 [ _61 ])
                (plus:DI (reg:DI 126 [ offset.2_50 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))
(insn 92 91 93 7 (parallel [
            (set (reg:DI 113 [ _27 ])
                (plus:DI (reg:DI 127 [ _55 ])
                    (reg:DI 131 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))
(insn 93 92 94 7 (parallel [
            (set (reg:DI 114 [ _28 ])
                (mult:DI (reg:DI 113 [ _27 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))
(insn 94 93 95 7 (parallel [
            (set (reg:DI 133 [ _62 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))
(insn 95 94 107 7 (set (reg:DI 118 [ S.5_33 ])
        (const_int 1 [0x1])) "DIST.f":48 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 2, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
;;              9 (DFS_BACK)
(code_label 107 95 96 8 6 (nil) [1 uses])
(note 96 107 97 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 118 [ S.5_33 ])
            (const_int 119 [0x77]))) "DIST.f":48 -1
     (nil))
(jump_insn 98 97 99 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) "DIST.f":48 -1
     (nil)
 -> 110)
;;  succ:       10
;;              9 (FALLTHRU)

;; basic block 9, loop depth 2, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 99 98 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 9 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 118 [ S.5_33 ])
                    (reg:DI 132 [ _61 ])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))
(insn 101 100 102 9 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 118 [ S.5_33 ])
                    (reg:DI 133 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))
(insn 102 101 103 9 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 b+0 S8 A64])) "DIST.f":48 -1
     (nil))
(insn 103 102 104 9 (set (reg:SF 117 [ _31 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 115 [ _29 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 148)) [6 *b_49 S4 A32])) "DIST.f":48 -1
     (nil))
(insn 104 103 105 9 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 a+0 S8 A64])) "DIST.f":48 -1
     (nil))
(insn 105 104 106 9 (set (mem:SF (plus:DI (mult:DI (reg:DI 116 [ _30 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 149)) [6 *a_52(D) S4 A32])
        (reg:SF 117 [ _31 ])) "DIST.f":48 -1
     (nil))
(insn 106 105 108 9 (parallel [
            (set (reg:DI 118 [ S.5_33 ])
                (plus:DI (reg:DI 118 [ S.5_33 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))
(jump_insn 108 106 109 9 (set (pc)
        (label_ref 107)) "DIST.f":48 -1
     (nil)
 -> 107)
;;  succ:       8 (DFS_BACK)

(barrier 109 108 110)
;; basic block 10, loop depth 1, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 110 109 111 10 5 (nil) [1 uses])
(note 111 110 112 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 114 10 (parallel [
            (set (reg:DI 127 [ _55 ])
                (plus:DI (reg:DI 127 [ _55 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "DIST.f":48 -1
     (nil))
(jump_insn 114 112 115 10 (set (pc)
        (label_ref 113)) "DIST.f":48 -1
     (nil)
 -> 113)
;;  succ:       6 (DFS_BACK)

(barrier 115 114 116)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 116 115 117 11 4 (nil) [1 uses])
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 11 (set (reg:SI 119 [ finally_tmp.8_34 ])
        (const_int 1 [0x1])) "DIST.f":40 -1
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              11 (FALLTHRU)
(code_label 119 118 120 12 3 (nil) [1 uses])
(note 120 119 121 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 12 (set (reg:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 b+0 S8 A64])) "DIST.f":40 -1
     (nil))
(insn 122 121 123 12 (set (reg:DI 5 di)
        (reg:DI 150)) "DIST.f":40 -1
     (nil))
(call_insn 123 122 124 12 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb8d7935e00 __builtin_free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "DIST.f":40 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 124 123 0 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ finally_tmp.8_34 ])
            (const_int 1 [0x1]))) "DIST.f":40 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

