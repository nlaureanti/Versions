
;; Function caldrg (caldrg_, funcdef_no=0, decl_uid=3769, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=96, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=80, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 29
	 Choosing alt 0 in insn 29:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 30:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 31:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 32:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 33:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 34:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 40:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 46:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 49:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 72:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 75
	 Choosing alt 0 in insn 75:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 76:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 77:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 78:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 83:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 89
	 Choosing alt 0 in insn 89:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 92:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 93:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 94:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 100
	 Choosing alt 0 in insn 100:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 101:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 103:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 104:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 106:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 107
	 Choosing alt 0 in insn 107:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 108:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 109:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 110:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 113:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 116:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 119:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 120
	 Choosing alt 0 in insn 120:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 121:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 122:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 123:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 124:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 126:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 127:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 129:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 130
	 Choosing alt 0 in insn 130:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 131:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 132:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 133:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 136:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 139:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 142:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 143
	 Choosing alt 0 in insn 143:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 144:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 145:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 146:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 147:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 148:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 150:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 152:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 154:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 155
	 Choosing alt 0 in insn 155:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 156:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 157:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 158:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 161:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 163:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 165:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 168:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 169
	 Choosing alt 0 in insn 169:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 170:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 171:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 172:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 173:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 174:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 176:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 178:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 180:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 181
	 Choosing alt 0 in insn 181:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 182:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 183:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 184:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 186:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 187:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 189:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 190:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 191:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 194:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 195
	 Choosing alt 0 in insn 195:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 196:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 197:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 198:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 199:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 200
	 Choosing alt 1 in insn 200:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 201:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 203:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 204:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 206:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 207
	 Choosing alt 0 in insn 207:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 208:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 209:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 210:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 212:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 213:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 215:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 216:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 219:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 220
	 Choosing alt 0 in insn 220:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 221:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 222:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 223:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 224:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 226:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 227:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 229:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 230
	 Choosing alt 0 in insn 230:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 231:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 232:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 233:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 235:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 236:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 238:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 239:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 242:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 243
	 Choosing alt 0 in insn 243:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 244:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 245:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 246:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 247:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 248:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 250:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 251:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 252:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 254:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 255
	 Choosing alt 0 in insn 255:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 256:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 257:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 258:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 260:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 261:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 262:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 263:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 264:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 265:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 268:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 269
	 Choosing alt 0 in insn 269:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 270:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 271:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 272:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 273:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 274:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 276:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 277:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 278:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 280:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 281
	 Choosing alt 0 in insn 281:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 282:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 283:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 284:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 286:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 287:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 289:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 290:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 291:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 292:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 294:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 295
	 Choosing alt 0 in insn 295:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 296:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 297:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 298:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 299:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 300
	 Choosing alt 1 in insn 300:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 301:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 302:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 303:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 304
	 Choosing alt 1 in insn 304:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 305:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 306:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 307:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 308
	 Choosing alt 1 in insn 308:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 309:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 310:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 311:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 312:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 313:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 314:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 315
	 Choosing alt 0 in insn 315:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 316:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 317:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 318:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 319:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 321:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 322:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 324:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 325
	 Choosing alt 0 in insn 325:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 326:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 327:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 328:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 329:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 330:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 332:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 333:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 334:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 336:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 337
	 Choosing alt 0 in insn 337:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 338:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 339:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 340:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 341:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 342:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 343:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 344:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 345:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 346:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 347:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 348:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 349
	 Choosing alt 0 in insn 349:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 350:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 351:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 352:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 353:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 354
	 Choosing alt 1 in insn 354:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 356:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 357
	 Choosing alt 1 in insn 357:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 358:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 360:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 361:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 362:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 363:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 364
	 Choosing alt 0 in insn 364:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 365:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 366:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 367:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 368:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 370:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 371:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 372:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 373:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 374
	 Choosing alt 0 in insn 374:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 375:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 376:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 377:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 378:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 379:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 380:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 381:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 382:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 383:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 384:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 385:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 386
	 Choosing alt 0 in insn 386:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 387:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 388:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 389:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 390:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 391:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 392:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 393:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 394:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 395:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 396:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 397:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 398
	 Choosing alt 0 in insn 398:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 399:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 400:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 401:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 402:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 403
	 Choosing alt 1 in insn 403:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 405:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 406
	 Choosing alt 1 in insn 406:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 407:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 408:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 409:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 411:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 412
	 Choosing alt 1 in insn 412:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 413:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 414:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 415:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 417:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 418
	 Choosing alt 1 in insn 418:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 419:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 420:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 421:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=479 from oldreg=465, assigning class SSE_REGS to r479
  421: r479:SF=r479:SF*[frame:DI-0x30]
      REG_DEAD r465:SF
    Inserting insn reload before:
  495: r479:SF=r465:SF
    Inserting insn reload after:
  496: r299:SF=r479:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 422:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 423:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 424
	 Choosing alt 1 in insn 424:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 425:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 427:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 428:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 429:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 430:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 431
	 Choosing alt 0 in insn 431:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 432:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 433:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 434:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 435:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 436:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 437:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 438:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 439:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 440
	 Choosing alt 0 in insn 440:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 441:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 442:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 443:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 444
	 Choosing alt 1 in insn 444:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 445:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 446:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 447:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 448:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 449:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 450:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 451
	 Choosing alt 0 in insn 451:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 452:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 453:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 454:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 455:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 456:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 457:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 463:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 16
EBB 7
EBB 15
EBB 8
EBB 9 10
EBB 11 12
EBB 18
EBB 13
EBB 17
EBB 14

********** Pseudo live ranges #1: **********

  BB 14
   Insn 473: point = 0, n_alt = -1
  BB 17
   Insn 490: point = 0, n_alt = -1
  BB 9
   Insn 60: point = 0, n_alt = -1
   Insn 59: point = 0, n_alt = 0
   Insn 58: point = 1, n_alt = 0
   Insn 57: point = 3, n_alt = 0
   Insn 56: point = 4, n_alt = 0
  BB 13
   Insn 480: point = 5, n_alt = -1
   Insn 463: point = 5, n_alt = 1
  BB 18
   Insn 493: point = 6, n_alt = -1
  BB 11
   Insn 68: point = 7, n_alt = -1
   Insn 67: point = 7, n_alt = 0
   Insn 66: point = 8, n_alt = 0
   Insn 65: point = 10, n_alt = 0
   Insn 64: point = 11, n_alt = 0
  BB 12
   Insn 478: point = 12, n_alt = -1
   Insn 457: point = 12, n_alt = 1
   Insn 456: point = 12, n_alt = 8
   Insn 455: point = 13, n_alt = 3
   Insn 454: point = 14, n_alt = 2
   Insn 453: point = 16, n_alt = 7
   Insn 452: point = 17, n_alt = 3
   Insn 451: point = 19, n_alt = 0
   Insn 450: point = 21, n_alt = 1
   Insn 449: point = 23, n_alt = 0
   Insn 448: point = 24, n_alt = 0
   Insn 447: point = 26, n_alt = 1
   Insn 446: point = 28, n_alt = 0
   Insn 445: point = 29, n_alt = 8
   Insn 444: point = 30, n_alt = 1
   Insn 443: point = 32, n_alt = 7
   Insn 442: point = 34, n_alt = 4
   Insn 441: point = 35, n_alt = 3
   Insn 440: point = 37, n_alt = 0
   Insn 439: point = 39, n_alt = 1
   Insn 438: point = 41, n_alt = 0
   Insn 437: point = 42, n_alt = 0
   Insn 436: point = 44, n_alt = 1
   Insn 435: point = 46, n_alt = 0
   Insn 434: point = 47, n_alt = 7
   Insn 433: point = 49, n_alt = 4
   Insn 432: point = 50, n_alt = 3
   Insn 431: point = 52, n_alt = 0
   Insn 430: point = 54, n_alt = 1
   Insn 429: point = 56, n_alt = 0
   Insn 428: point = 57, n_alt = 0
   Insn 427: point = 59, n_alt = 1
   Insn 426: point = 61, n_alt = 0
   Insn 425: point = 62, n_alt = 8
   Insn 424: point = 63, n_alt = 1
   Insn 423: point = 65, n_alt = 1
   Insn 422: point = 67, n_alt = 7
   Insn 496: point = 68, n_alt = -2
	Hard reg 22 is preferable by r479 with profit 1000
   Insn 421: point = 70, n_alt = 1
   Insn 495: point = 70, n_alt = -2
	Hard reg 22 is preferable by r479 with profit 1000
	Hard reg 21 is preferable by r479 with profit 1000
   Insn 420: point = 72, n_alt = 7
   Insn 419: point = 73, n_alt = 8
   Insn 418: point = 74, n_alt = 1
   Insn 417: point = 76, n_alt = 7
   Insn 416: point = 77, n_alt = -2
   Insn 415: point = 79, n_alt = 1
   Insn 414: point = 81, n_alt = 7
   Insn 413: point = 82, n_alt = 8
   Insn 412: point = 83, n_alt = 1
   Insn 411: point = 85, n_alt = 7
   Insn 410: point = 86, n_alt = -2
   Insn 409: point = 88, n_alt = 1
   Insn 408: point = 90, n_alt = 7
   Insn 407: point = 91, n_alt = 8
   Insn 406: point = 92, n_alt = 1
   Insn 405: point = 94, n_alt = 7
   Insn 404: point = 95, n_alt = -2
   Insn 403: point = 97, n_alt = 1
   Insn 402: point = 99, n_alt = 7
   Insn 401: point = 101, n_alt = 0
   Insn 400: point = 103, n_alt = 4
   Insn 399: point = 104, n_alt = 3
   Insn 398: point = 106, n_alt = 0
   Insn 397: point = 108, n_alt = 1
   Insn 396: point = 110, n_alt = 0
   Insn 395: point = 111, n_alt = 0
   Insn 394: point = 113, n_alt = 1
   Insn 393: point = 115, n_alt = 0
   Insn 392: point = 117, n_alt = 0
   Insn 391: point = 118, n_alt = 1
   Insn 390: point = 120, n_alt = 7
   Insn 389: point = 122, n_alt = 0
   Insn 388: point = 124, n_alt = 4
   Insn 387: point = 125, n_alt = 3
   Insn 386: point = 127, n_alt = 0
   Insn 385: point = 129, n_alt = 1
   Insn 384: point = 131, n_alt = 0
   Insn 383: point = 132, n_alt = 0
   Insn 382: point = 134, n_alt = 1
   Insn 381: point = 136, n_alt = 0
   Insn 380: point = 138, n_alt = 0
   Insn 379: point = 139, n_alt = 1
   Insn 378: point = 141, n_alt = 7
   Insn 377: point = 143, n_alt = 0
   Insn 376: point = 145, n_alt = 4
   Insn 375: point = 146, n_alt = 3
   Insn 374: point = 148, n_alt = 0
   Insn 373: point = 150, n_alt = 1
   Insn 372: point = 152, n_alt = 0
   Insn 371: point = 153, n_alt = 0
   Insn 370: point = 155, n_alt = 1
   Insn 369: point = 157, n_alt = 0
   Insn 368: point = 158, n_alt = 7
   Insn 367: point = 160, n_alt = 0
   Insn 366: point = 162, n_alt = 4
   Insn 365: point = 163, n_alt = 3
   Insn 364: point = 165, n_alt = 0
   Insn 363: point = 167, n_alt = 1
   Insn 362: point = 169, n_alt = 0
   Insn 361: point = 170, n_alt = 0
   Insn 360: point = 172, n_alt = 1
   Insn 359: point = 174, n_alt = 0
   Insn 358: point = 175, n_alt = 8
   Insn 357: point = 176, n_alt = 1
   Insn 356: point = 178, n_alt = 7
   Insn 355: point = 179, n_alt = -2
   Insn 354: point = 181, n_alt = 1
   Insn 353: point = 183, n_alt = 7
   Insn 352: point = 185, n_alt = 0
   Insn 351: point = 187, n_alt = 4
   Insn 350: point = 188, n_alt = 3
   Insn 349: point = 190, n_alt = 0
   Insn 348: point = 192, n_alt = 1
   Insn 347: point = 194, n_alt = 0
   Insn 346: point = 195, n_alt = 0
   Insn 345: point = 197, n_alt = 1
   Insn 344: point = 199, n_alt = 0
   Insn 343: point = 201, n_alt = 0
   Insn 342: point = 202, n_alt = 1
   Insn 341: point = 204, n_alt = 7
   Insn 340: point = 206, n_alt = 0
   Insn 339: point = 208, n_alt = 4
   Insn 338: point = 209, n_alt = 3
   Insn 337: point = 211, n_alt = 0
   Insn 336: point = 213, n_alt = 1
   Insn 335: point = 215, n_alt = 0
   Insn 334: point = 216, n_alt = 0
   Insn 333: point = 218, n_alt = 1
   Insn 332: point = 220, n_alt = 0
   Insn 331: point = 222, n_alt = 0
   Insn 330: point = 223, n_alt = 1
   Insn 329: point = 225, n_alt = 7
   Insn 328: point = 227, n_alt = 0
   Insn 327: point = 229, n_alt = 4
   Insn 326: point = 230, n_alt = 3
   Insn 325: point = 232, n_alt = 0
   Insn 324: point = 234, n_alt = 1
   Insn 323: point = 236, n_alt = 0
   Insn 322: point = 237, n_alt = 0
   Insn 321: point = 239, n_alt = 1
   Insn 320: point = 241, n_alt = 0
   Insn 319: point = 242, n_alt = 7
   Insn 318: point = 244, n_alt = 0
   Insn 317: point = 246, n_alt = 4
   Insn 316: point = 247, n_alt = 3
   Insn 315: point = 249, n_alt = 0
   Insn 314: point = 251, n_alt = 1
   Insn 313: point = 253, n_alt = 0
   Insn 312: point = 254, n_alt = 0
   Insn 311: point = 256, n_alt = 1
   Insn 310: point = 258, n_alt = 0
   Insn 309: point = 259, n_alt = 8
   Insn 308: point = 260, n_alt = 1
   Insn 307: point = 262, n_alt = 7
   Insn 306: point = 263, n_alt = 7
   Insn 305: point = 264, n_alt = 8
   Insn 304: point = 265, n_alt = 1
   Insn 303: point = 267, n_alt = 7
   Insn 302: point = 268, n_alt = 7
   Insn 301: point = 269, n_alt = 8
   Insn 300: point = 270, n_alt = 1
   Insn 299: point = 272, n_alt = 7
   Insn 298: point = 274, n_alt = 0
   Insn 297: point = 276, n_alt = 4
   Insn 296: point = 277, n_alt = 3
   Insn 295: point = 279, n_alt = 0
   Insn 294: point = 281, n_alt = 1
   Insn 293: point = 283, n_alt = 0
   Insn 292: point = 284, n_alt = 0
   Insn 291: point = 286, n_alt = 0
   Insn 290: point = 288, n_alt = 1
   Insn 289: point = 290, n_alt = 0
   Insn 288: point = 292, n_alt = 0
   Insn 287: point = 293, n_alt = 1
   Insn 286: point = 295, n_alt = 1
   Insn 285: point = 297, n_alt = 0
   Insn 284: point = 299, n_alt = 0
   Insn 283: point = 301, n_alt = 4
   Insn 282: point = 302, n_alt = 3
   Insn 281: point = 304, n_alt = 0
   Insn 280: point = 306, n_alt = 1
   Insn 279: point = 308, n_alt = 0
   Insn 278: point = 309, n_alt = 0
   Insn 277: point = 311, n_alt = 1
   Insn 276: point = 313, n_alt = 0
   Insn 275: point = 315, n_alt = 0
   Insn 274: point = 316, n_alt = 1
   Insn 273: point = 318, n_alt = 7
   Insn 272: point = 320, n_alt = 0
   Insn 271: point = 322, n_alt = 4
   Insn 270: point = 323, n_alt = 3
   Insn 269: point = 325, n_alt = 0
   Insn 268: point = 327, n_alt = 1
   Insn 267: point = 329, n_alt = 0
   Insn 266: point = 330, n_alt = 0
   Insn 265: point = 332, n_alt = 0
   Insn 264: point = 334, n_alt = 1
   Insn 263: point = 336, n_alt = 0
   Insn 262: point = 338, n_alt = 0
   Insn 261: point = 339, n_alt = 1
   Insn 260: point = 341, n_alt = 1
   Insn 259: point = 343, n_alt = 0
   Insn 258: point = 345, n_alt = 0
   Insn 257: point = 347, n_alt = 4
   Insn 256: point = 348, n_alt = 3
   Insn 255: point = 350, n_alt = 0
   Insn 254: point = 352, n_alt = 1
   Insn 253: point = 354, n_alt = 0
   Insn 252: point = 355, n_alt = 0
   Insn 251: point = 357, n_alt = 1
   Insn 250: point = 359, n_alt = 0
   Insn 249: point = 361, n_alt = 0
   Insn 248: point = 362, n_alt = 1
   Insn 247: point = 364, n_alt = 7
   Insn 246: point = 366, n_alt = 0
   Insn 245: point = 368, n_alt = 4
   Insn 244: point = 369, n_alt = 3
   Insn 243: point = 371, n_alt = 0
   Insn 242: point = 373, n_alt = 1
   Insn 241: point = 375, n_alt = 0
   Insn 240: point = 376, n_alt = 0
   Insn 239: point = 378, n_alt = 0
   Insn 238: point = 380, n_alt = 1
   Insn 237: point = 382, n_alt = 0
   Insn 236: point = 383, n_alt = 1
   Insn 235: point = 385, n_alt = 1
   Insn 234: point = 387, n_alt = 0
   Insn 233: point = 389, n_alt = 0
   Insn 232: point = 391, n_alt = 4
   Insn 231: point = 392, n_alt = 3
   Insn 230: point = 394, n_alt = 0
   Insn 229: point = 396, n_alt = 1
   Insn 228: point = 398, n_alt = 0
   Insn 227: point = 399, n_alt = 0
   Insn 226: point = 401, n_alt = 1
   Insn 225: point = 403, n_alt = 0
   Insn 224: point = 404, n_alt = 7
   Insn 223: point = 406, n_alt = 0
   Insn 222: point = 408, n_alt = 4
   Insn 221: point = 409, n_alt = 3
   Insn 220: point = 411, n_alt = 0
   Insn 219: point = 413, n_alt = 1
   Insn 218: point = 415, n_alt = 0
   Insn 217: point = 416, n_alt = 0
   Insn 216: point = 418, n_alt = 0
   Insn 215: point = 420, n_alt = 1
   Insn 214: point = 422, n_alt = 0
   Insn 213: point = 423, n_alt = 1
   Insn 212: point = 425, n_alt = 1
   Insn 211: point = 427, n_alt = 0
   Insn 210: point = 429, n_alt = 0
   Insn 209: point = 431, n_alt = 4
   Insn 208: point = 432, n_alt = 3
   Insn 207: point = 434, n_alt = 0
   Insn 206: point = 436, n_alt = 1
   Insn 205: point = 438, n_alt = 0
   Insn 204: point = 439, n_alt = 0
   Insn 203: point = 441, n_alt = 1
   Insn 202: point = 443, n_alt = 0
   Insn 201: point = 444, n_alt = 8
   Insn 200: point = 445, n_alt = 1
   Insn 199: point = 447, n_alt = 7
   Insn 198: point = 449, n_alt = 0
   Insn 197: point = 451, n_alt = 4
   Insn 196: point = 452, n_alt = 3
   Insn 195: point = 454, n_alt = 0
   Insn 194: point = 456, n_alt = 1
   Insn 193: point = 458, n_alt = 0
   Insn 192: point = 459, n_alt = 0
   Insn 191: point = 461, n_alt = 0
   Insn 190: point = 463, n_alt = 1
   Insn 189: point = 465, n_alt = 0
   Insn 188: point = 467, n_alt = 0
   Insn 187: point = 468, n_alt = 1
   Insn 186: point = 470, n_alt = 1
   Insn 185: point = 472, n_alt = 0
   Insn 184: point = 474, n_alt = 0
   Insn 183: point = 476, n_alt = 4
   Insn 182: point = 477, n_alt = 3
   Insn 181: point = 479, n_alt = 0
   Insn 180: point = 481, n_alt = 1
   Insn 179: point = 483, n_alt = 0
   Insn 178: point = 484, n_alt = 0
   Insn 177: point = 486, n_alt = 1
   Insn 176: point = 488, n_alt = 0
   Insn 175: point = 490, n_alt = 0
   Insn 174: point = 491, n_alt = 1
   Insn 173: point = 493, n_alt = 7
   Insn 172: point = 495, n_alt = 0
   Insn 171: point = 497, n_alt = 4
   Insn 170: point = 498, n_alt = 3
   Insn 169: point = 500, n_alt = 0
   Insn 168: point = 502, n_alt = 1
   Insn 167: point = 504, n_alt = 0
   Insn 166: point = 505, n_alt = 0
   Insn 165: point = 507, n_alt = 0
   Insn 164: point = 509, n_alt = 1
   Insn 163: point = 511, n_alt = 0
   Insn 162: point = 513, n_alt = 0
   Insn 161: point = 514, n_alt = 1
   Insn 160: point = 516, n_alt = 1
   Insn 159: point = 518, n_alt = 0
   Insn 158: point = 520, n_alt = 0
   Insn 157: point = 522, n_alt = 4
   Insn 156: point = 523, n_alt = 3
   Insn 155: point = 525, n_alt = 0
   Insn 154: point = 527, n_alt = 1
   Insn 153: point = 529, n_alt = 0
   Insn 152: point = 530, n_alt = 0
   Insn 151: point = 532, n_alt = 1
   Insn 150: point = 534, n_alt = 0
   Insn 149: point = 536, n_alt = 0
   Insn 148: point = 537, n_alt = 1
   Insn 147: point = 539, n_alt = 7
   Insn 146: point = 541, n_alt = 0
   Insn 145: point = 543, n_alt = 4
   Insn 144: point = 544, n_alt = 3
   Insn 143: point = 546, n_alt = 0
   Insn 142: point = 548, n_alt = 1
   Insn 141: point = 550, n_alt = 0
   Insn 140: point = 551, n_alt = 0
   Insn 139: point = 553, n_alt = 0
   Insn 138: point = 555, n_alt = 1
   Insn 137: point = 557, n_alt = 0
   Insn 136: point = 558, n_alt = 1
   Insn 135: point = 560, n_alt = 1
   Insn 134: point = 562, n_alt = 0
   Insn 133: point = 564, n_alt = 0
   Insn 132: point = 566, n_alt = 4
   Insn 131: point = 567, n_alt = 3
   Insn 130: point = 569, n_alt = 0
   Insn 129: point = 571, n_alt = 1
   Insn 128: point = 573, n_alt = 0
   Insn 127: point = 574, n_alt = 0
   Insn 126: point = 576, n_alt = 1
   Insn 125: point = 578, n_alt = 0
   Insn 124: point = 579, n_alt = 7
   Insn 123: point = 581, n_alt = 0
   Insn 122: point = 583, n_alt = 4
   Insn 121: point = 584, n_alt = 3
   Insn 120: point = 586, n_alt = 0
   Insn 119: point = 588, n_alt = 1
   Insn 118: point = 590, n_alt = 0
   Insn 117: point = 591, n_alt = 0
   Insn 116: point = 593, n_alt = 0
   Insn 115: point = 595, n_alt = 1
   Insn 114: point = 597, n_alt = 0
   Insn 113: point = 598, n_alt = 1
   Insn 112: point = 600, n_alt = 1
   Insn 111: point = 602, n_alt = 0
   Insn 110: point = 604, n_alt = 0
   Insn 109: point = 606, n_alt = 4
   Insn 108: point = 607, n_alt = 3
   Insn 107: point = 609, n_alt = 0
   Insn 106: point = 611, n_alt = 1
   Insn 105: point = 613, n_alt = 0
   Insn 104: point = 614, n_alt = 0
   Insn 103: point = 616, n_alt = 1
   Insn 102: point = 618, n_alt = 0
   Insn 101: point = 619, n_alt = 1
   Insn 100: point = 620, n_alt = 0
   Insn 99: point = 622, n_alt = 0
   Insn 95: point = 623, n_alt = 0
   Insn 94: point = 625, n_alt = 0
   Insn 93: point = 627, n_alt = 0
   Insn 92: point = 629, n_alt = 1
   Insn 91: point = 631, n_alt = 0
   Insn 90: point = 632, n_alt = 1
   Insn 89: point = 633, n_alt = 0
   Insn 88: point = 635, n_alt = 0
   Insn 84: point = 636, n_alt = 0
   Insn 83: point = 638, n_alt = 0
   Insn 82: point = 640, n_alt = 1
   Insn 81: point = 642, n_alt = 0
   Insn 80: point = 643, n_alt = 1
   Insn 79: point = 644, n_alt = 0
   Insn 78: point = 646, n_alt = 0
   Insn 77: point = 648, n_alt = 4
   Insn 76: point = 649, n_alt = 3
   Insn 75: point = 651, n_alt = 0
   Insn 74: point = 653, n_alt = 1
   Insn 73: point = 655, n_alt = 0
   Insn 72: point = 656, n_alt = 0
   Insn 71: point = 658, n_alt = 1
   Insn 70: point = 660, n_alt = 0
  BB 10
   Insn 62: point = 662, n_alt = 1
  BB 8
   Insn 54: point = 663, n_alt = 1
   Insn 53: point = 664, n_alt = 0
   Insn 52: point = 665, n_alt = 0
   Insn 51: point = 666, n_alt = 0
   Insn 50: point = 666, n_alt = 3
   Insn 49: point = 666, n_alt = 4
   Insn 48: point = 666, n_alt = 0
   Insn 47: point = 666, n_alt = 3
   Insn 46: point = 666, n_alt = 4
  BB 15
   Insn 484: point = 666, n_alt = -1
  BB 3
   Insn 14: point = 666, n_alt = -1
   Insn 13: point = 666, n_alt = 0
   Insn 12: point = 667, n_alt = 0
   Insn 11: point = 669, n_alt = 0
   Insn 10: point = 670, n_alt = 0
  BB 7
   Insn 476: point = 671, n_alt = -1
   Insn 40: point = 671, n_alt = 1
  BB 16
   Insn 487: point = 672, n_alt = -1
  BB 5
   Insn 22: point = 673, n_alt = -1
   Insn 21: point = 673, n_alt = 0
   Insn 20: point = 674, n_alt = 0
   Insn 19: point = 676, n_alt = 0
   Insn 18: point = 677, n_alt = 0
  BB 6
   Insn 474: point = 678, n_alt = -1
   Insn 34: point = 678, n_alt = 1
   Insn 33: point = 678, n_alt = 8
   Insn 32: point = 679, n_alt = 7
   Insn 31: point = 680, n_alt = 3
   Insn 30: point = 681, n_alt = 3
   Insn 29: point = 683, n_alt = 0
   Insn 28: point = 685, n_alt = 1
   Insn 27: point = 687, n_alt = 0
   Insn 26: point = 688, n_alt = 0
   Insn 25: point = 690, n_alt = 1
   Insn 24: point = 692, n_alt = 0
  BB 4
   Insn 16: point = 694, n_alt = 1
  BB 2
   Insn 8: point = 695, n_alt = 1
   Insn 7: point = 696, n_alt = 0
   Insn 6: point = 697, n_alt = 0
   Insn 2: point = 698, n_alt = 5
 r87: [689..690]
 r88: [684..688]
 r89: [684..685]
 r90: [682..683]
 r91: [678..681]
 r92: [657..658]
 r93: [652..656]
 r94: [652..653]
 r95: [650..651]
 r96: [647..649]
 r97: [639..640]
 r98: [637..638]
 r99: [634..636]
 r100: [628..629]
 r101: [626..627]
 r102: [621..623]
 r103: [615..616]
 r104: [610..614]
 r105: [610..611]
 r106: [608..609]
 r107: [605..607]
 r108: [601..602]
 r109: [599..600]
 r110: [592..598]
 r111: [594..595]
 r112: [592..593]
 r113: [587..591]
 r114: [587..588]
 r115: [585..586]
 r116: [582..584]
 r117: [538..579]
 r118: [575..576]
 r119: [570..574]
 r120: [570..571]
 r121: [568..569]
 r122: [565..567]
 r123: [561..562]
 r124: [559..560]
 r125: [552..558]
 r126: [554..555]
 r127: [552..553]
 r128: [547..551]
 r129: [547..548]
 r130: [545..546]
 r131: [542..544]
 r132: [538..539]
 r133: [492..537]
 r134: [533..534]
 r135: [531..532]
 r136: [526..530]
 r137: [526..527]
 r138: [524..525]
 r139: [521..523]
 r140: [517..518]
 r141: [515..516]
 r142: [506..514]
 r143: [510..511]
 r144: [508..509]
 r145: [506..507]
 r146: [501..505]
 r147: [501..502]
 r148: [499..500]
 r149: [496..498]
 r150: [492..493]
 r151: [446..491]
 r152: [487..488]
 r153: [485..486]
 r154: [480..484]
 r155: [480..481]
 r156: [478..479]
 r157: [475..477]
 r158: [471..472]
 r159: [469..470]
 r160: [460..468]
 r161: [464..465]
 r162: [462..463]
 r163: [460..461]
 r164: [455..459]
 r165: [455..456]
 r166: [453..454]
 r167: [450..452]
 r168: [446..447]
 r169: [440..441]
 r170: [435..439]
 r171: [435..436]
 r172: [433..434]
 r173: [430..432]
 r174: [426..427]
 r175: [424..425]
 r176: [417..423]
 r177: [419..420]
 r178: [417..418]
 r179: [412..416]
 r180: [412..413]
 r181: [410..411]
 r182: [407..409]
 r183: [363..404]
 r184: [400..401]
 r185: [395..399]
 r186: [395..396]
 r187: [393..394]
 r188: [390..392]
 r189: [386..387]
 r190: [384..385]
 r191: [377..383]
 r192: [379..380]
 r193: [377..378]
 r194: [372..376]
 r195: [372..373]
 r196: [370..371]
 r197: [367..369]
 r198: [363..364]
 r199: [317..362]
 r200: [358..359]
 r201: [356..357]
 r202: [351..355]
 r203: [351..352]
 r204: [349..350]
 r205: [346..348]
 r206: [342..343]
 r207: [340..341]
 r208: [331..339]
 r209: [335..336]
 r210: [333..334]
 r211: [331..332]
 r212: [326..330]
 r213: [326..327]
 r214: [324..325]
 r215: [321..323]
 r216: [317..318]
 r217: [271..316]
 r218: [312..313]
 r219: [310..311]
 r220: [305..309]
 r221: [305..306]
 r222: [303..304]
 r223: [300..302]
 r224: [296..297]
 r225: [294..295]
 r226: [285..293]
 r227: [289..290]
 r228: [287..288]
 r229: [285..286]
 r230: [280..284]
 r231: [280..281]
 r232: [278..279]
 r233: [275..277]
 r234: [271..272]
 r235: [255..256]
 r236: [250..254]
 r237: [250..251]
 r238: [248..249]
 r239: [245..247]
 r240: [224..242]
 r241: [238..239]
 r242: [233..237]
 r243: [233..234]
 r244: [231..232]
 r245: [228..230]
 r246: [224..225]
 r247: [203..223]
 r248: [219..220]
 r249: [217..218]
 r250: [212..216]
 r251: [212..213]
 r252: [210..211]
 r253: [207..209]
 r254: [203..204]
 r255: [182..202]
 r256: [198..199]
 r257: [196..197]
 r258: [191..195]
 r259: [191..192]
 r260: [189..190]
 r261: [186..188]
 r262: [182..183]
 r263: [180..181]
 r264: [177..179]
 r265: [171..172]
 r266: [166..170]
 r267: [166..167]
 r268: [164..165]
 r269: [161..163]
 r270: [140..158]
 r271: [154..155]
 r272: [149..153]
 r273: [149..150]
 r274: [147..148]
 r275: [144..146]
 r276: [140..141]
 r277: [119..139]
 r278: [135..136]
 r279: [133..134]
 r280: [128..132]
 r281: [128..129]
 r282: [126..127]
 r283: [123..125]
 r284: [119..120]
 r285: [98..118]
 r286: [114..115]
 r287: [112..113]
 r288: [107..111]
 r289: [107..108]
 r290: [105..106]
 r291: [102..104]
 r292: [98..99]
 r293: [96..97]
 r294: [93..95]
 r295: [87..88]
 r296: [84..86]
 r297: [78..79]
 r298: [75..77]
 r299: [64..68]
 r300: [64..65]
 r301: [58..59]
 r302: [53..57]
 r303: [53..54]
 r304: [51..52]
 r305: [48..50]
 r306: [31..47]
 r307: [43..44]
 r308: [38..42]
 r309: [38..39]
 r310: [36..37]
 r311: [33..35]
 r312: [31..32]
 r313: [25..26]
 r314: [20..24]
 r315: [20..21]
 r316: [18..19]
 r317: [12..17]
 r318: [12..14]
 r319: [695..697]
 r320: [666..696]
 r321: [666..667]
 r322: [673..674]
 r323: [663..665]
 r324: [0..664]
 r325: [0..1]
 r326: [7..8]
 r327: [668..669]
 r328: [675..676]
 r329: [691..692]
 r330: [686..687]
 r331: [678..680]
 r332: [678..679]
 r333: [2..3]
 r334: [9..10]
 r335: [659..660]
 r336: [654..655]
 r337: [645..648]
 r338: [645..646]
 r339: [643..644]
 r340: [641..642]
 r343: [632..633]
 r344: [634..635]
 r345: [630..631]
 r346: [624..625]
 r349: [619..620]
 r350: [621..622]
 r351: [617..618]
 r352: [612..613]
 r353: [603..606]
 r354: [603..604]
 r355: [596..597]
 r356: [589..590]
 r357: [580..583]
 r358: [580..581]
 r359: [577..578]
 r360: [572..573]
 r361: [563..566]
 r362: [563..564]
 r363: [556..557]
 r364: [549..550]
 r365: [540..543]
 r366: [540..541]
 r367: [535..536]
 r368: [528..529]
 r369: [519..522]
 r370: [519..520]
 r371: [512..513]
 r372: [503..504]
 r373: [494..497]
 r374: [494..495]
 r375: [489..490]
 r376: [482..483]
 r377: [473..476]
 r378: [473..474]
 r379: [466..467]
 r380: [457..458]
 r381: [448..451]
 r382: [448..449]
 r383: [444..445]
 r384: [442..443]
 r385: [437..438]
 r386: [428..431]
 r387: [428..429]
 r388: [421..422]
 r389: [414..415]
 r390: [405..408]
 r391: [405..406]
 r392: [402..403]
 r393: [397..398]
 r394: [388..391]
 r395: [388..389]
 r396: [381..382]
 r397: [374..375]
 r398: [365..368]
 r399: [365..366]
 r400: [360..361]
 r401: [353..354]
 r402: [344..347]
 r403: [344..345]
 r404: [337..338]
 r405: [328..329]
 r406: [319..322]
 r407: [319..320]
 r408: [314..315]
 r409: [307..308]
 r410: [298..301]
 r411: [298..299]
 r412: [291..292]
 r413: [282..283]
 r414: [273..276]
 r415: [273..274]
 r416: [269..270]
 r417: [264..265]
 r418: [266..268]
 r419: [266..267]
 r420: [259..260]
 r421: [261..263]
 r422: [261..262]
 r423: [257..258]
 r424: [252..253]
 r425: [243..246]
 r426: [243..244]
 r427: [240..241]
 r428: [235..236]
 r429: [226..229]
 r430: [226..227]
 r431: [221..222]
 r432: [214..215]
 r433: [205..208]
 r434: [205..206]
 r435: [200..201]
 r436: [193..194]
 r437: [184..187]
 r438: [184..185]
 r439: [175..176]
 r440: [177..178]
 r441: [173..174]
 r442: [168..169]
 r443: [159..162]
 r444: [159..160]
 r445: [156..157]
 r446: [151..152]
 r447: [142..145]
 r448: [142..143]
 r449: [137..138]
 r450: [130..131]
 r451: [121..124]
 r452: [121..122]
 r453: [116..117]
 r454: [109..110]
 r455: [100..103]
 r456: [100..101]
 r457: [91..92]
 r458: [93..94]
 r459: [89..90]
 r460: [82..83]
 r461: [84..85]
 r462: [80..81]
 r463: [73..74]
 r464: [75..76]
 r465: [71..72]
 r466: [66..67]
 r467: [62..63]
 r468: [60..61]
 r469: [55..56]
 r470: [48..49]
 r471: [45..46]
 r472: [40..41]
 r473: [33..34]
 r474: [29..30]
 r475: [27..28]
 r476: [22..23]
 r477: [15..16]
 r478: [12..13]
 r479: [69..70]
Compressing live ranges: from 698 to 594 - 85%
Ranges after the compression:
 r87: [588..589]
 r88: [584..587]
 r89: [584..585]
 r90: [582..583]
 r91: [580..581]
 r92: [566..567]
 r93: [562..565]
 r94: [562..563]
 r95: [560..561]
 r96: [558..559]
 r97: [550..551]
 r98: [548..549]
 r99: [546..547]
 r100: [540..541]
 r101: [538..539]
 r102: [534..535]
 r103: [528..529]
 r104: [524..527]
 r105: [524..525]
 r106: [522..523]
 r107: [520..521]
 r108: [516..517]
 r109: [514..515]
 r110: [508..513]
 r111: [510..511]
 r112: [508..509]
 r113: [504..507]
 r114: [504..505]
 r115: [502..503]
 r116: [500..501]
 r117: [462..497]
 r118: [494..495]
 r119: [490..493]
 r120: [490..491]
 r121: [488..489]
 r122: [486..487]
 r123: [482..483]
 r124: [480..481]
 r125: [474..479]
 r126: [476..477]
 r127: [474..475]
 r128: [470..473]
 r129: [470..471]
 r130: [468..469]
 r131: [466..467]
 r132: [462..463]
 r133: [422..461]
 r134: [458..459]
 r135: [456..457]
 r136: [452..455]
 r137: [452..453]
 r138: [450..451]
 r139: [448..449]
 r140: [444..445]
 r141: [442..443]
 r142: [434..441]
 r143: [438..439]
 r144: [436..437]
 r145: [434..435]
 r146: [430..433]
 r147: [430..431]
 r148: [428..429]
 r149: [426..427]
 r150: [422..423]
 r151: [382..421]
 r152: [418..419]
 r153: [416..417]
 r154: [412..415]
 r155: [412..413]
 r156: [410..411]
 r157: [408..409]
 r158: [404..405]
 r159: [402..403]
 r160: [394..401]
 r161: [398..399]
 r162: [396..397]
 r163: [394..395]
 r164: [390..393]
 r165: [390..391]
 r166: [388..389]
 r167: [386..387]
 r168: [382..383]
 r169: [376..377]
 r170: [372..375]
 r171: [372..373]
 r172: [370..371]
 r173: [368..369]
 r174: [364..365]
 r175: [362..363]
 r176: [356..361]
 r177: [358..359]
 r178: [356..357]
 r179: [352..355]
 r180: [352..353]
 r181: [350..351]
 r182: [348..349]
 r183: [310..345]
 r184: [342..343]
 r185: [338..341]
 r186: [338..339]
 r187: [336..337]
 r188: [334..335]
 r189: [330..331]
 r190: [328..329]
 r191: [322..327]
 r192: [324..325]
 r193: [322..323]
 r194: [318..321]
 r195: [318..319]
 r196: [316..317]
 r197: [314..315]
 r198: [310..311]
 r199: [270..309]
 r200: [306..307]
 r201: [304..305]
 r202: [300..303]
 r203: [300..301]
 r204: [298..299]
 r205: [296..297]
 r206: [292..293]
 r207: [290..291]
 r208: [282..289]
 r209: [286..287]
 r210: [284..285]
 r211: [282..283]
 r212: [278..281]
 r213: [278..279]
 r214: [276..277]
 r215: [274..275]
 r216: [270..271]
 r217: [230..269]
 r218: [266..267]
 r219: [264..265]
 r220: [260..263]
 r221: [260..261]
 r222: [258..259]
 r223: [256..257]
 r224: [252..253]
 r225: [250..251]
 r226: [242..249]
 r227: [246..247]
 r228: [244..245]
 r229: [242..243]
 r230: [238..241]
 r231: [238..239]
 r232: [236..237]
 r233: [234..235]
 r234: [230..231]
 r235: [216..217]
 r236: [212..215]
 r237: [212..213]
 r238: [210..211]
 r239: [208..209]
 r240: [190..205]
 r241: [202..203]
 r242: [198..201]
 r243: [198..199]
 r244: [196..197]
 r245: [194..195]
 r246: [190..191]
 r247: [172..189]
 r248: [186..187]
 r249: [184..185]
 r250: [180..183]
 r251: [180..181]
 r252: [178..179]
 r253: [176..177]
 r254: [172..173]
 r255: [154..171]
 r256: [168..169]
 r257: [166..167]
 r258: [162..165]
 r259: [162..163]
 r260: [160..161]
 r261: [158..159]
 r262: [154..155]
 r263: [152..153]
 r264: [150..151]
 r265: [144..145]
 r266: [140..143]
 r267: [140..141]
 r268: [138..139]
 r269: [136..137]
 r270: [118..133]
 r271: [130..131]
 r272: [126..129]
 r273: [126..127]
 r274: [124..125]
 r275: [122..123]
 r276: [118..119]
 r277: [100..117]
 r278: [114..115]
 r279: [112..113]
 r280: [108..111]
 r281: [108..109]
 r282: [106..107]
 r283: [104..105]
 r284: [100..101]
 r285: [82..99]
 r286: [96..97]
 r287: [94..95]
 r288: [90..93]
 r289: [90..91]
 r290: [88..89]
 r291: [86..87]
 r292: [82..83]
 r293: [80..81]
 r294: [78..79]
 r295: [72..73]
 r296: [70..71]
 r297: [64..65]
 r298: [62..63]
 r299: [52..55]
 r300: [52..53]
 r301: [46..47]
 r302: [42..45]
 r303: [42..43]
 r304: [40..41]
 r305: [38..39]
 r306: [24..37]
 r307: [34..35]
 r308: [30..33]
 r309: [30..31]
 r310: [28..29]
 r311: [26..27]
 r312: [24..25]
 r313: [18..19]
 r314: [14..17]
 r315: [14..15]
 r316: [12..13]
 r317: [8..11]
 r318: [8..9]
 r319: [592..593]
 r320: [572..593]
 r321: [572..573]
 r322: [576..577]
 r323: [570..571]
 r324: [0..571]
 r325: [0..1]
 r326: [4..5]
 r327: [574..575]
 r328: [578..579]
 r329: [590..591]
 r330: [586..587]
 r331: [580..581]
 r332: [580..581]
 r333: [2..3]
 r334: [6..7]
 r335: [568..569]
 r336: [564..565]
 r337: [556..559]
 r338: [556..557]
 r339: [554..555]
 r340: [552..553]
 r343: [544..545]
 r344: [546..547]
 r345: [542..543]
 r346: [536..537]
 r349: [532..533]
 r350: [534..535]
 r351: [530..531]
 r352: [526..527]
 r353: [518..521]
 r354: [518..519]
 r355: [512..513]
 r356: [506..507]
 r357: [498..501]
 r358: [498..499]
 r359: [496..497]
 r360: [492..493]
 r361: [484..487]
 r362: [484..485]
 r363: [478..479]
 r364: [472..473]
 r365: [464..467]
 r366: [464..465]
 r367: [460..461]
 r368: [454..455]
 r369: [446..449]
 r370: [446..447]
 r371: [440..441]
 r372: [432..433]
 r373: [424..427]
 r374: [424..425]
 r375: [420..421]
 r376: [414..415]
 r377: [406..409]
 r378: [406..407]
 r379: [400..401]
 r380: [392..393]
 r381: [384..387]
 r382: [384..385]
 r383: [380..381]
 r384: [378..379]
 r385: [374..375]
 r386: [366..369]
 r387: [366..367]
 r388: [360..361]
 r389: [354..355]
 r390: [346..349]
 r391: [346..347]
 r392: [344..345]
 r393: [340..341]
 r394: [332..335]
 r395: [332..333]
 r396: [326..327]
 r397: [320..321]
 r398: [312..315]
 r399: [312..313]
 r400: [308..309]
 r401: [302..303]
 r402: [294..297]
 r403: [294..295]
 r404: [288..289]
 r405: [280..281]
 r406: [272..275]
 r407: [272..273]
 r408: [268..269]
 r409: [262..263]
 r410: [254..257]
 r411: [254..255]
 r412: [248..249]
 r413: [240..241]
 r414: [232..235]
 r415: [232..233]
 r416: [228..229]
 r417: [224..225]
 r418: [226..227]
 r419: [226..227]
 r420: [220..221]
 r421: [222..223]
 r422: [222..223]
 r423: [218..219]
 r424: [214..215]
 r425: [206..209]
 r426: [206..207]
 r427: [204..205]
 r428: [200..201]
 r429: [192..195]
 r430: [192..193]
 r431: [188..189]
 r432: [182..183]
 r433: [174..177]
 r434: [174..175]
 r435: [170..171]
 r436: [164..165]
 r437: [156..159]
 r438: [156..157]
 r439: [148..149]
 r440: [150..151]
 r441: [146..147]
 r442: [142..143]
 r443: [134..137]
 r444: [134..135]
 r445: [132..133]
 r446: [128..129]
 r447: [120..123]
 r448: [120..121]
 r449: [116..117]
 r450: [110..111]
 r451: [102..105]
 r452: [102..103]
 r453: [98..99]
 r454: [92..93]
 r455: [84..87]
 r456: [84..85]
 r457: [76..77]
 r458: [78..79]
 r459: [74..75]
 r460: [68..69]
 r461: [70..71]
 r462: [66..67]
 r463: [60..61]
 r464: [62..63]
 r465: [58..59]
 r466: [54..55]
 r467: [50..51]
 r468: [48..49]
 r469: [44..45]
 r470: [38..39]
 r471: [36..37]
 r472: [32..33]
 r473: [26..27]
 r474: [22..23]
 r475: [20..21]
 r476: [16..17]
 r477: [10..11]
 r478: [8..9]
 r479: [56..57]

********** Assignment #1: **********

	 Assigning to 479 (cl=SSE_REGS, orig=465, freq=3000, tfirst=479, tfreq=3000)...
	   Assign 22 to reload r479 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=96, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=80, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 33
changing reg in insn 71
changing reg in insn 72
changing reg in insn 72
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 76
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 89
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 94
changing reg in insn 95
changing reg in insn 100
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 108
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 112
changing reg in insn 113
changing reg in insn 113
changing reg in insn 117
changing reg in insn 115
changing reg in insn 116
changing reg in insn 116
changing reg in insn 117
changing reg in insn 117
changing reg in insn 119
changing reg in insn 120
changing reg in insn 121
changing reg in insn 121
changing reg in insn 123
changing reg in insn 124
changing reg in insn 148
changing reg in insn 126
changing reg in insn 127
changing reg in insn 127
changing reg in insn 129
changing reg in insn 130
changing reg in insn 131
changing reg in insn 131
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 135
changing reg in insn 136
changing reg in insn 136
changing reg in insn 140
changing reg in insn 138
changing reg in insn 139
changing reg in insn 139
changing reg in insn 140
changing reg in insn 140
changing reg in insn 142
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 146
changing reg in insn 147
changing reg in insn 148
changing reg in insn 148
changing reg in insn 174
changing reg in insn 150
changing reg in insn 151
changing reg in insn 151
changing reg in insn 152
changing reg in insn 152
changing reg in insn 154
changing reg in insn 155
changing reg in insn 156
changing reg in insn 156
changing reg in insn 158
changing reg in insn 159
changing reg in insn 160
changing reg in insn 160
changing reg in insn 161
changing reg in insn 161
changing reg in insn 166
changing reg in insn 163
changing reg in insn 164
changing reg in insn 164
changing reg in insn 165
changing reg in insn 165
changing reg in insn 166
changing reg in insn 166
changing reg in insn 168
changing reg in insn 169
changing reg in insn 170
changing reg in insn 170
changing reg in insn 172
changing reg in insn 173
changing reg in insn 174
changing reg in insn 174
changing reg in insn 176
changing reg in insn 177
changing reg in insn 177
changing reg in insn 178
changing reg in insn 178
changing reg in insn 180
changing reg in insn 181
changing reg in insn 182
changing reg in insn 182
changing reg in insn 184
changing reg in insn 185
changing reg in insn 186
changing reg in insn 186
changing reg in insn 187
changing reg in insn 187
changing reg in insn 192
changing reg in insn 189
changing reg in insn 190
changing reg in insn 190
changing reg in insn 191
changing reg in insn 191
changing reg in insn 192
changing reg in insn 192
changing reg in insn 194
changing reg in insn 195
changing reg in insn 196
changing reg in insn 196
changing reg in insn 198
changing reg in insn 199
changing reg in insn 203
changing reg in insn 204
changing reg in insn 204
changing reg in insn 206
changing reg in insn 207
changing reg in insn 208
changing reg in insn 208
changing reg in insn 210
changing reg in insn 211
changing reg in insn 212
changing reg in insn 212
changing reg in insn 213
changing reg in insn 213
changing reg in insn 217
changing reg in insn 215
changing reg in insn 216
changing reg in insn 216
changing reg in insn 217
changing reg in insn 217
changing reg in insn 219
changing reg in insn 220
changing reg in insn 221
changing reg in insn 221
changing reg in insn 223
changing reg in insn 224
changing reg in insn 248
changing reg in insn 226
changing reg in insn 227
changing reg in insn 227
changing reg in insn 229
changing reg in insn 230
changing reg in insn 231
changing reg in insn 231
changing reg in insn 233
changing reg in insn 234
changing reg in insn 235
changing reg in insn 235
changing reg in insn 236
changing reg in insn 236
changing reg in insn 240
changing reg in insn 238
changing reg in insn 239
changing reg in insn 239
changing reg in insn 240
changing reg in insn 240
changing reg in insn 242
changing reg in insn 243
changing reg in insn 244
changing reg in insn 244
changing reg in insn 246
changing reg in insn 247
changing reg in insn 248
changing reg in insn 248
changing reg in insn 274
changing reg in insn 250
changing reg in insn 251
changing reg in insn 251
changing reg in insn 252
changing reg in insn 252
changing reg in insn 254
changing reg in insn 255
changing reg in insn 256
changing reg in insn 256
changing reg in insn 258
changing reg in insn 259
changing reg in insn 260
changing reg in insn 260
changing reg in insn 261
changing reg in insn 261
changing reg in insn 266
changing reg in insn 263
changing reg in insn 264
changing reg in insn 264
changing reg in insn 265
changing reg in insn 265
changing reg in insn 266
changing reg in insn 266
changing reg in insn 268
changing reg in insn 269
changing reg in insn 270
changing reg in insn 270
changing reg in insn 272
changing reg in insn 273
changing reg in insn 274
changing reg in insn 274
changing reg in insn 276
changing reg in insn 277
changing reg in insn 277
changing reg in insn 278
changing reg in insn 278
changing reg in insn 280
changing reg in insn 281
changing reg in insn 282
changing reg in insn 282
changing reg in insn 284
changing reg in insn 285
changing reg in insn 286
changing reg in insn 286
changing reg in insn 287
changing reg in insn 287
changing reg in insn 292
changing reg in insn 289
changing reg in insn 290
changing reg in insn 290
changing reg in insn 291
changing reg in insn 291
changing reg in insn 292
changing reg in insn 292
changing reg in insn 294
changing reg in insn 295
changing reg in insn 296
changing reg in insn 296
changing reg in insn 298
changing reg in insn 299
changing reg in insn 311
changing reg in insn 312
changing reg in insn 312
changing reg in insn 314
changing reg in insn 315
changing reg in insn 316
changing reg in insn 316
changing reg in insn 318
changing reg in insn 319
changing reg in insn 330
changing reg in insn 321
changing reg in insn 322
changing reg in insn 322
changing reg in insn 324
changing reg in insn 325
changing reg in insn 326
changing reg in insn 326
changing reg in insn 328
changing reg in insn 329
changing reg in insn 330
changing reg in insn 330
changing reg in insn 342
changing reg in insn 332
changing reg in insn 333
changing reg in insn 333
changing reg in insn 334
changing reg in insn 334
changing reg in insn 336
changing reg in insn 337
changing reg in insn 338
changing reg in insn 338
changing reg in insn 340
changing reg in insn 341
changing reg in insn 342
changing reg in insn 342
changing reg in insn 344
changing reg in insn 345
changing reg in insn 345
changing reg in insn 346
changing reg in insn 346
changing reg in insn 348
changing reg in insn 349
changing reg in insn 350
changing reg in insn 350
changing reg in insn 352
changing reg in insn 353
changing reg in insn 354
changing reg in insn 355
changing reg in insn 355
changing reg in insn 360
changing reg in insn 361
changing reg in insn 361
changing reg in insn 363
changing reg in insn 364
changing reg in insn 365
changing reg in insn 365
changing reg in insn 367
changing reg in insn 368
changing reg in insn 379
changing reg in insn 370
changing reg in insn 371
changing reg in insn 371
changing reg in insn 373
changing reg in insn 374
changing reg in insn 375
changing reg in insn 375
changing reg in insn 377
changing reg in insn 378
changing reg in insn 379
changing reg in insn 379
changing reg in insn 391
changing reg in insn 381
changing reg in insn 382
changing reg in insn 382
changing reg in insn 383
changing reg in insn 383
changing reg in insn 385
changing reg in insn 386
changing reg in insn 387
changing reg in insn 387
changing reg in insn 389
changing reg in insn 390
changing reg in insn 391
changing reg in insn 391
changing reg in insn 393
changing reg in insn 394
changing reg in insn 394
changing reg in insn 395
changing reg in insn 395
changing reg in insn 397
changing reg in insn 398
changing reg in insn 399
changing reg in insn 399
changing reg in insn 401
changing reg in insn 402
changing reg in insn 403
changing reg in insn 404
changing reg in insn 404
changing reg in insn 409
changing reg in insn 410
changing reg in insn 410
changing reg in insn 415
changing reg in insn 416
changing reg in insn 416
changing reg in insn 423
changing reg in insn 427
changing reg in insn 428
changing reg in insn 428
changing reg in insn 430
changing reg in insn 431
changing reg in insn 432
changing reg in insn 432
changing reg in insn 434
changing reg in insn 434
changing reg in insn 436
changing reg in insn 437
changing reg in insn 437
changing reg in insn 439
changing reg in insn 440
changing reg in insn 441
changing reg in insn 441
changing reg in insn 443
changing reg in insn 443
changing reg in insn 447
changing reg in insn 448
changing reg in insn 448
changing reg in insn 450
changing reg in insn 451
changing reg in insn 452
changing reg in insn 452
changing reg in insn 456
changing reg in insn 454
changing reg in insn 456
changing reg in insn 6
changing reg in insn 8
changing reg in insn 7
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
changing reg in insn 20
changing reg in insn 21
changing reg in insn 52
changing reg in insn 54
changing reg in insn 53
changing reg in insn 56
changing reg in insn 58
changing reg in insn 59
changing reg in insn 66
changing reg in insn 67
changing reg in insn 11
changing reg in insn 12
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 31
changing reg in insn 33
changing reg in insn 32
changing reg in insn 33
changing reg in insn 57
changing reg in insn 58
changing reg in insn 65
changing reg in insn 66
changing reg in insn 70
changing reg in insn 71
changing reg in insn 73
changing reg in insn 74
changing reg in insn 77
changing reg in insn 79
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 89
changing reg in insn 90
changing reg in insn 88
changing reg in insn 91
changing reg in insn 92
changing reg in insn 94
changing reg in insn 95
changing reg in insn 100
changing reg in insn 101
changing reg in insn 99
changing reg in insn 102
changing reg in insn 103
changing reg in insn 105
changing reg in insn 106
changing reg in insn 109
changing reg in insn 111
changing reg in insn 110
changing reg in insn 111
changing reg in insn 114
changing reg in insn 115
changing reg in insn 118
changing reg in insn 119
changing reg in insn 122
changing reg in insn 124
changing reg in insn 123
changing reg in insn 124
changing reg in insn 125
changing reg in insn 126
changing reg in insn 128
changing reg in insn 129
changing reg in insn 132
changing reg in insn 134
changing reg in insn 133
changing reg in insn 134
changing reg in insn 137
changing reg in insn 138
changing reg in insn 141
changing reg in insn 142
changing reg in insn 145
changing reg in insn 147
changing reg in insn 146
changing reg in insn 147
changing reg in insn 149
changing reg in insn 150
changing reg in insn 153
changing reg in insn 154
changing reg in insn 157
changing reg in insn 159
changing reg in insn 158
changing reg in insn 159
changing reg in insn 162
changing reg in insn 163
changing reg in insn 167
changing reg in insn 168
changing reg in insn 171
changing reg in insn 173
changing reg in insn 172
changing reg in insn 173
changing reg in insn 175
changing reg in insn 176
changing reg in insn 179
changing reg in insn 180
changing reg in insn 183
changing reg in insn 185
changing reg in insn 184
changing reg in insn 185
changing reg in insn 188
changing reg in insn 189
changing reg in insn 193
changing reg in insn 194
changing reg in insn 197
changing reg in insn 199
changing reg in insn 198
changing reg in insn 199
changing reg in insn 200
changing reg in insn 201
changing reg in insn 202
changing reg in insn 203
changing reg in insn 205
changing reg in insn 206
changing reg in insn 209
changing reg in insn 211
changing reg in insn 210
changing reg in insn 211
changing reg in insn 214
changing reg in insn 215
changing reg in insn 218
changing reg in insn 219
changing reg in insn 222
changing reg in insn 224
changing reg in insn 223
changing reg in insn 224
changing reg in insn 225
changing reg in insn 226
changing reg in insn 228
changing reg in insn 229
changing reg in insn 232
changing reg in insn 234
changing reg in insn 233
changing reg in insn 234
changing reg in insn 237
changing reg in insn 238
changing reg in insn 241
changing reg in insn 242
changing reg in insn 245
changing reg in insn 247
changing reg in insn 246
changing reg in insn 247
changing reg in insn 249
changing reg in insn 250
changing reg in insn 253
changing reg in insn 254
changing reg in insn 257
changing reg in insn 259
changing reg in insn 258
changing reg in insn 259
changing reg in insn 262
changing reg in insn 263
changing reg in insn 267
changing reg in insn 268
changing reg in insn 271
changing reg in insn 273
changing reg in insn 272
changing reg in insn 273
changing reg in insn 275
changing reg in insn 276
changing reg in insn 279
changing reg in insn 280
changing reg in insn 283
changing reg in insn 285
changing reg in insn 284
changing reg in insn 285
changing reg in insn 288
changing reg in insn 289
changing reg in insn 293
changing reg in insn 294
changing reg in insn 297
changing reg in insn 299
changing reg in insn 298
changing reg in insn 299
changing reg in insn 300
changing reg in insn 301
changing reg in insn 304
changing reg in insn 305
changing reg in insn 302
changing reg in insn 303
changing reg in insn 308
changing reg in insn 309
changing reg in insn 306
changing reg in insn 307
changing reg in insn 310
changing reg in insn 311
changing reg in insn 313
changing reg in insn 314
changing reg in insn 317
changing reg in insn 319
changing reg in insn 318
changing reg in insn 319
changing reg in insn 320
changing reg in insn 321
changing reg in insn 323
changing reg in insn 324
changing reg in insn 327
changing reg in insn 329
changing reg in insn 328
changing reg in insn 329
changing reg in insn 331
changing reg in insn 332
changing reg in insn 335
changing reg in insn 336
changing reg in insn 339
changing reg in insn 341
changing reg in insn 340
changing reg in insn 341
changing reg in insn 343
changing reg in insn 344
changing reg in insn 347
changing reg in insn 348
changing reg in insn 351
changing reg in insn 353
changing reg in insn 352
changing reg in insn 353
changing reg in insn 357
changing reg in insn 358
changing reg in insn 356
changing reg in insn 359
changing reg in insn 360
changing reg in insn 362
changing reg in insn 363
changing reg in insn 366
changing reg in insn 368
changing reg in insn 367
changing reg in insn 368
changing reg in insn 369
changing reg in insn 370
changing reg in insn 372
changing reg in insn 373
changing reg in insn 376
changing reg in insn 378
changing reg in insn 377
changing reg in insn 378
changing reg in insn 380
changing reg in insn 381
changing reg in insn 384
changing reg in insn 385
changing reg in insn 388
changing reg in insn 390
changing reg in insn 389
changing reg in insn 390
changing reg in insn 392
changing reg in insn 393
changing reg in insn 396
changing reg in insn 397
changing reg in insn 400
changing reg in insn 402
changing reg in insn 401
changing reg in insn 402
changing reg in insn 406
changing reg in insn 407
changing reg in insn 405
changing reg in insn 408
changing reg in insn 409
changing reg in insn 412
changing reg in insn 413
changing reg in insn 411
changing reg in insn 414
changing reg in insn 415
changing reg in insn 418
changing reg in insn 419
changing reg in insn 417
changing reg in insn 420
changing reg in insn 422
changing reg in insn 423
changing reg in insn 424
changing reg in insn 425
changing reg in insn 426
changing reg in insn 427
changing reg in insn 429
changing reg in insn 430
changing reg in insn 433
changing reg in insn 434
changing reg in insn 435
changing reg in insn 436
changing reg in insn 438
changing reg in insn 439
changing reg in insn 442
changing reg in insn 443
changing reg in insn 444
changing reg in insn 445
changing reg in insn 446
changing reg in insn 447
changing reg in insn 449
changing reg in insn 450
changing reg in insn 453
changing reg in insn 454
changing reg in insn 455
changing reg in insn 456
deleting insn with uid = 496.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 51.


caldrg

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1]
;;  ref usage 	r0={7d,4u} r1={235d,232u} r2={96d,93u,2e} r4={3d} r5={5d,3u} r6={1d,124u} r7={1d,20u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={159d,8u} r18={2d} r19={2d} r20={1d,1u,14e} r21={44d,41u} r22={24d,21u} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 1275{712d,547u,16e} in 440{438 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 319 320
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 dragco+0 S8 A64])
        (reg:DI 5 di [ dragco ])) "CALDRG.f":1 85 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 1 dx [orig:319 _242 ] [319])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fded5071000 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALDRG.f":66 86 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 ax [orig:320 _243 ] [320])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fded5071000 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALDRG.f":66 86 {*movsi_internal}
     (nil))
(insn 8 7 41 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:319 _242 ] [319])) "CALDRG.f":66 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320
;; lr  def 	 17 [flags] 321 327
(code_label 41 8 9 3 5 (nil) [1 uses])
(note 9 41 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:320 _243 ] [320]))) "CALDRG.f":66 11 {*cmpsi_1}
     (nil))
(insn 11 10 12 3 (set (reg:QI 1 dx [327])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALDRG.f":66 678 {*setcc_qi}
     (nil))
(insn 12 11 13 3 (set (reg:SI 1 dx [orig:321 _245 ] [321])
        (zero_extend:SI (reg:QI 1 dx [327]))) "CALDRG.f":66 140 {*zero_extendqisi2}
     (nil))
(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:321 _245 ] [321])
            (const_int 0 [0]))) "CALDRG.f":66 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 483)
            (pc))) "CALDRG.f":66 682 {*jcc}
     (nil)
 -> 483)
;;  succ:       15
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 35 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALDRG.f":67 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 322 328
(code_label 35 16 17 5 4 (nil) [1 uses])
(note 17 35 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALDRG.f":67 11 {*cmpsi_1}
     (nil))
(insn 19 18 20 5 (set (reg:QI 1 dx [328])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALDRG.f":67 678 {*setcc_qi}
     (nil))
(insn 20 19 21 5 (set (reg:SI 1 dx [orig:322 _247 ] [322])
        (zero_extend:SI (reg:QI 1 dx [328]))) "CALDRG.f":67 140 {*zero_extendqisi2}
     (nil))
(insn 21 20 22 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:322 _247 ] [322])
            (const_int 0 [0]))) "CALDRG.f":67 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 22 21 23 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 486)
            (pc))) "CALDRG.f":67 682 {*jcc}
     (nil)
 -> 486)
;;  succ:       16
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 16, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 329 330 331 332
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg:SI 1 dx [329])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":68 86 {*movsi_internal}
     (nil))
(insn 25 24 26 6 (set (reg:DI 1 dx [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 1 dx [329]))) "CALDRG.f":68 149 {*extendsidi2_rex64}
     (nil))
(insn 26 25 27 6 (parallel [
            (set (reg:DI 2 cx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 1 dx [orig:87 _1 ] [87])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":68 349 {*muldi3_1}
     (nil))
(insn 27 26 28 6 (set (reg:SI 1 dx [330])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":68 86 {*movsi_internal}
     (nil))
(insn 28 27 29 6 (set (reg:DI 1 dx [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 1 dx [330]))) "CALDRG.f":68 149 {*extendsidi2_rex64}
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg:DI 1 dx [orig:90 _4 ] [90])
                (plus:DI (reg:DI 1 dx [orig:89 _3 ] [89])
                    (reg:DI 2 cx [orig:88 _2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":68 222 {*adddi_1}
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg:DI 2 cx [orig:91 _5 ] [91])
                (plus:DI (reg:DI 1 dx [orig:90 _4 ] [90])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":68 222 {*adddi_1}
     (nil))
(insn 31 30 32 6 (set (reg/f:DI 1 dx [331])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 dragco+0 S8 A64])) "CALDRG.f":68 85 {*movdi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:SF 21 xmm0 [332])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALDRG.f":68 131 {*movsf_internal}
     (nil))
(insn 33 32 34 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:91 _5 ] [91])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [331])) [2 *dragco_248(D) S4 A32])
        (reg:SF 21 xmm0 [332])) "CALDRG.f":68 131 {*movsf_internal}
     (nil))
(insn 34 33 474 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":67 221 {*addsi_1}
     (nil))
(jump_insn 474 34 475 6 (set (pc)
        (label_ref 35)) "CALDRG.f":67 683 {jump}
     (nil)
 -> 35)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320

(barrier 475 474 486)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 486 475 485 16 12 (nil) [1 uses])
(note 485 486 487 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 487 485 38 16 (const_int 0 [0]) "CALDRG.f":68 718 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320

;; basic block 7, loop depth 0, maybe hot
;;  prev block 16, next block 15, flags: (RTL, MODIFIED)
;;  pred:       16 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 38 487 39 7 3 (nil) [0 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 476 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":66 221 {*addsi_1}
     (nil))
(jump_insn 476 40 477 7 (set (pc)
        (label_ref 41)) "CALDRG.f":66 683 {jump}
     (nil)
 -> 41)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 320

(barrier 477 476 483)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 483 477 482 15 11 (nil) [1 uses])
(note 482 483 484 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 484 482 44 15 (const_int 0 [0]) "CALDRG.f":67 718 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 15, next block 9, flags: (RTL, MODIFIED)
;;  pred:       15 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 323 324
(code_label 44 484 45 8 2 (nil) [0 uses])
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fded5071870 pvrbls>)
                (const_int 592620 [0x90aec])))) "CALDRG.f":74 85 {*movdi_internal}
     (nil))
(insn 47 46 48 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALDRG.f":74 88 {*movqi_internal}
     (nil))
(call_insn 48 47 49 8 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fded5063600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALDRG.f":74 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 49 48 50 8 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fded5071870 pvrbls>)
                (const_int 711144 [0xad9e8])))) "CALDRG.f":75 85 {*movdi_internal}
     (nil))
(insn 50 49 51 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALDRG.f":75 88 {*movqi_internal}
     (nil))
(call_insn 51 50 52 8 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fded5063600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALDRG.f":75 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 52 51 53 8 (set (reg:SI 1 dx [orig:323 _254 ] [323])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fded5071000 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALDRG.f":79 86 {*movsi_internal}
     (nil))
(insn 53 52 54 8 (set (reg:SI 0 ax [orig:324 _255 ] [324])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fded5071000 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALDRG.f":79 86 {*movsi_internal}
     (nil))
(insn 54 53 464 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:323 _254 ] [323])) "CALDRG.f":79 86 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              13 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324
;; lr  def 	 17 [flags] 325 333
(code_label 464 54 55 9 9 (nil) [1 uses])
(note 55 464 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:324 _255 ] [324]))) "CALDRG.f":79 11 {*cmpsi_1}
     (nil))
(insn 57 56 58 9 (set (reg:QI 1 dx [333])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALDRG.f":79 678 {*setcc_qi}
     (nil))
(insn 58 57 59 9 (set (reg:SI 1 dx [orig:325 _257 ] [325])
        (zero_extend:SI (reg:QI 1 dx [333]))) "CALDRG.f":79 140 {*zero_extendqisi2}
     (nil))
(insn 59 58 60 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:325 _257 ] [325])
            (const_int 0 [0]))) "CALDRG.f":79 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 60 59 61 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 489)
            (pc))) "CALDRG.f":79 682 {*jcc}
     (nil)
 -> 489)
;;  succ:       17
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 458 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALDRG.f":80 86 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              12 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 326 334
(code_label 458 62 63 11 8 (nil) [1 uses])
(note 63 458 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALDRG.f":80 11 {*cmpsi_1}
     (nil))
(insn 65 64 66 11 (set (reg:QI 1 dx [334])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALDRG.f":80 678 {*setcc_qi}
     (nil))
(insn 66 65 67 11 (set (reg:SI 1 dx [orig:326 _259 ] [326])
        (zero_extend:SI (reg:QI 1 dx [334]))) "CALDRG.f":80 140 {*zero_extendqisi2}
     (nil))
(insn 67 66 68 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:326 _259 ] [326])
            (const_int 0 [0]))) "CALDRG.f":80 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 68 67 69 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 492)
            (pc))) "CALDRG.f":80 682 {*jcc}
     (nil)
 -> 492)
;;  succ:       18
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 18, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags
(note 69 68 70 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 12 (set (reg:SI 1 dx [335])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":85 86 {*movsi_internal}
     (nil))
(insn 71 70 72 12 (set (reg:DI 1 dx [orig:92 _6 ] [92])
        (sign_extend:DI (reg:SI 1 dx [335]))) "CALDRG.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 72 71 73 12 (parallel [
            (set (reg:DI 2 cx [orig:93 _7 ] [93])
                (mult:DI (reg:DI 1 dx [orig:92 _6 ] [92])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":85 349 {*muldi3_1}
     (nil))
(insn 73 72 74 12 (set (reg:SI 1 dx [336])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":85 86 {*movsi_internal}
     (nil))
(insn 74 73 75 12 (set (reg:DI 1 dx [orig:94 _8 ] [94])
        (sign_extend:DI (reg:SI 1 dx [336]))) "CALDRG.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 75 74 76 12 (parallel [
            (set (reg:DI 1 dx [orig:95 _9 ] [95])
                (plus:DI (reg:DI 1 dx [orig:94 _8 ] [94])
                    (reg:DI 2 cx [orig:93 _7 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":85 222 {*adddi_1}
     (nil))
(insn 76 75 77 12 (parallel [
            (set (reg:DI 2 cx [orig:96 _10 ] [96])
                (plus:DI (reg:DI 1 dx [orig:95 _9 ] [95])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":85 222 {*adddi_1}
     (nil))
(insn 77 76 78 12 (set (reg/f:DI 1 dx [337])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fded506ab40 loops>)) "CALDRG.f":85 85 {*movdi_internal}
     (nil))
(insn 78 77 79 12 (parallel [
            (set (reg:DI 2 cx [338])
                (plus:DI (reg:DI 2 cx [orig:96 _10 ] [96])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":85 222 {*adddi_1}
     (nil))
(insn 79 78 80 12 (set (reg:SI 1 dx [339])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [338])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [337])) [1 loops.lmh S4 A32])) "CALDRG.f":85 86 {*movsi_internal}
     (nil))
(insn 80 79 81 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [1 lmhk+0 S4 A32])
        (reg:SI 1 dx [339])) "CALDRG.f":85 86 {*movsi_internal}
     (nil))
(insn 81 80 82 12 (set (reg:SI 1 dx [340])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":86 86 {*movsi_internal}
     (nil))
(insn 82 81 83 12 (set (reg:DI 1 dx [orig:97 _11 ] [97])
        (sign_extend:DI (reg:SI 1 dx [340]))) "CALDRG.f":86 149 {*extendsidi2_rex64}
     (nil))
(insn 83 82 84 12 (parallel [
            (set (reg:DI 1 dx [orig:98 _12 ] [98])
                (plus:DI (reg:DI 1 dx [orig:97 _11 ] [97])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":86 222 {*adddi_1}
     (nil))
(insn 84 83 88 12 (set (reg:SI 2 cx [orig:99 _13 ] [99])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:98 _12 ] [98])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fded506a870 indx>)) [1 indx.ihe S4 A32])) "CALDRG.f":86 86 {*movsi_internal}
     (nil))
(insn 88 84 89 12 (set (reg:SI 1 dx [344])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":86 86 {*movsi_internal}
     (nil))
(insn 89 88 90 12 (parallel [
            (set (reg:SI 1 dx [343])
                (plus:SI (reg:SI 1 dx [344])
                    (reg:SI 2 cx [orig:99 _13 ] [99])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":86 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:99 _13 ] [99])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 90 89 91 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 ie+0 S4 A32])
        (reg:SI 1 dx [343])) "CALDRG.f":86 86 {*movsi_internal}
     (nil))
(insn 91 90 92 12 (set (reg:SI 1 dx [345])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":87 86 {*movsi_internal}
     (nil))
(insn 92 91 93 12 (set (reg:DI 1 dx [orig:100 _14 ] [100])
        (sign_extend:DI (reg:SI 1 dx [345]))) "CALDRG.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 93 92 94 12 (parallel [
            (set (reg:DI 1 dx [orig:101 _15 ] [101])
                (plus:DI (reg:DI 1 dx [orig:100 _14 ] [100])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":87 222 {*adddi_1}
     (nil))
(insn 94 93 95 12 (parallel [
            (set (reg:DI 1 dx [346])
                (plus:DI (reg:DI 1 dx [orig:101 _15 ] [101])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":87 222 {*adddi_1}
     (nil))
(insn 95 94 99 12 (set (reg:SI 2 cx [orig:102 _16 ] [102])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [346])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fded506a870 indx>)) [1 indx.ihw S4 A32])) "CALDRG.f":87 86 {*movsi_internal}
     (nil))
(insn 99 95 100 12 (set (reg:SI 1 dx [350])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":87 86 {*movsi_internal}
     (nil))
(insn 100 99 101 12 (parallel [
            (set (reg:SI 1 dx [349])
                (plus:SI (reg:SI 1 dx [350])
                    (reg:SI 2 cx [orig:102 _16 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":87 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:102 _16 ] [102])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 101 100 102 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 iw+0 S4 A32])
        (reg:SI 1 dx [349])) "CALDRG.f":87 86 {*movsi_internal}
     (nil))
(insn 102 101 103 12 (set (reg:SI 1 dx [351])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 103 102 104 12 (set (reg:DI 1 dx [orig:103 _17 ] [103])
        (sign_extend:DI (reg:SI 1 dx [351]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 104 103 105 12 (parallel [
            (set (reg:DI 2 cx [orig:104 _18 ] [104])
                (mult:DI (reg:DI 1 dx [orig:103 _17 ] [103])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 349 {*muldi3_1}
     (nil))
(insn 105 104 106 12 (set (reg:SI 1 dx [352])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 ie+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 106 105 107 12 (set (reg:DI 1 dx [orig:105 _19 ] [105])
        (sign_extend:DI (reg:SI 1 dx [352]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 107 106 108 12 (parallel [
            (set (reg:DI 1 dx [orig:106 _20 ] [106])
                (plus:DI (reg:DI 1 dx [orig:105 _19 ] [105])
                    (reg:DI 2 cx [orig:104 _18 ] [104])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 108 107 109 12 (parallel [
            (set (reg:DI 2 cx [orig:107 _21 ] [107])
                (plus:DI (reg:DI 1 dx [orig:106 _20 ] [106])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 109 108 110 12 (set (reg/f:DI 1 dx [353])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fded506ab40 loops>)) "CALDRG.f":89 85 {*movdi_internal}
     (nil))
(insn 110 109 111 12 (parallel [
            (set (reg:DI 2 cx [354])
                (plus:DI (reg:DI 2 cx [orig:107 _21 ] [107])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 111 110 112 12 (set (reg:SI 1 dx [orig:108 _22 ] [108])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [354])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [353])) [1 loops.lmv S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 112 111 113 12 (set (reg:DI 1 dx [orig:109 _23 ] [109])
        (sign_extend:DI (reg:SI 1 dx [orig:108 _22 ] [108]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 113 112 114 12 (parallel [
            (set (reg:DI 2 cx [orig:110 _24 ] [110])
                (mult:DI (reg:DI 1 dx [orig:109 _23 ] [109])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 349 {*muldi3_1}
     (nil))
(insn 114 113 115 12 (set (reg:SI 1 dx [355])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 115 114 116 12 (set (reg:DI 1 dx [orig:111 _25 ] [111])
        (sign_extend:DI (reg:SI 1 dx [355]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 116 115 117 12 (parallel [
            (set (reg:DI 1 dx [orig:112 _26 ] [112])
                (mult:DI (reg:DI 1 dx [orig:111 _25 ] [111])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 349 {*muldi3_1}
     (nil))
(insn 117 116 118 12 (parallel [
            (set (reg:DI 2 cx [orig:113 _27 ] [113])
                (plus:DI (reg:DI 2 cx [orig:110 _24 ] [110])
                    (reg:DI 1 dx [orig:112 _26 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 118 117 119 12 (set (reg:SI 1 dx [356])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 ie+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 119 118 120 12 (set (reg:DI 1 dx [orig:114 _28 ] [114])
        (sign_extend:DI (reg:SI 1 dx [356]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 120 119 121 12 (parallel [
            (set (reg:DI 1 dx [orig:115 _29 ] [115])
                (plus:DI (reg:DI 1 dx [orig:114 _28 ] [114])
                    (reg:DI 2 cx [orig:113 _27 ] [113])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 121 120 122 12 (parallel [
            (set (reg:DI 2 cx [orig:116 _30 ] [116])
                (plus:DI (reg:DI 1 dx [orig:115 _29 ] [115])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 122 121 123 12 (set (reg/f:DI 1 dx [357])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fded5078cf0 vrbls>)) "CALDRG.f":89 85 {*movdi_internal}
     (nil))
(insn 123 122 124 12 (parallel [
            (set (reg:DI 2 cx [358])
                (plus:DI (reg:DI 2 cx [orig:116 _30 ] [116])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 124 123 125 12 (set (reg:SF 22 xmm1 [orig:117 _31 ] [117])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [358])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [357])) [2 vrbls.u S4 A32])) "CALDRG.f":89 131 {*movsf_internal}
     (nil))
(insn 125 124 126 12 (set (reg:SI 1 dx [359])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 126 125 127 12 (set (reg:DI 1 dx [orig:118 _32 ] [118])
        (sign_extend:DI (reg:SI 1 dx [359]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 127 126 128 12 (parallel [
            (set (reg:DI 2 cx [orig:119 _33 ] [119])
                (mult:DI (reg:DI 1 dx [orig:118 _32 ] [118])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 349 {*muldi3_1}
     (nil))
(insn 128 127 129 12 (set (reg:SI 1 dx [360])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 iw+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 129 128 130 12 (set (reg:DI 1 dx [orig:120 _34 ] [120])
        (sign_extend:DI (reg:SI 1 dx [360]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 130 129 131 12 (parallel [
            (set (reg:DI 1 dx [orig:121 _35 ] [121])
                (plus:DI (reg:DI 1 dx [orig:120 _34 ] [120])
                    (reg:DI 2 cx [orig:119 _33 ] [119])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 131 130 132 12 (parallel [
            (set (reg:DI 2 cx [orig:122 _36 ] [122])
                (plus:DI (reg:DI 1 dx [orig:121 _35 ] [121])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 132 131 133 12 (set (reg/f:DI 1 dx [361])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fded506ab40 loops>)) "CALDRG.f":89 85 {*movdi_internal}
     (nil))
(insn 133 132 134 12 (parallel [
            (set (reg:DI 2 cx [362])
                (plus:DI (reg:DI 2 cx [orig:122 _36 ] [122])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 134 133 135 12 (set (reg:SI 1 dx [orig:123 _37 ] [123])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [362])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [361])) [1 loops.lmv S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 135 134 136 12 (set (reg:DI 1 dx [orig:124 _38 ] [124])
        (sign_extend:DI (reg:SI 1 dx [orig:123 _37 ] [123]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 136 135 137 12 (parallel [
            (set (reg:DI 2 cx [orig:125 _39 ] [125])
                (mult:DI (reg:DI 1 dx [orig:124 _38 ] [124])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 349 {*muldi3_1}
     (nil))
(insn 137 136 138 12 (set (reg:SI 1 dx [363])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 138 137 139 12 (set (reg:DI 1 dx [orig:126 _40 ] [126])
        (sign_extend:DI (reg:SI 1 dx [363]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 139 138 140 12 (parallel [
            (set (reg:DI 1 dx [orig:127 _41 ] [127])
                (mult:DI (reg:DI 1 dx [orig:126 _40 ] [126])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 349 {*muldi3_1}
     (nil))
(insn 140 139 141 12 (parallel [
            (set (reg:DI 2 cx [orig:128 _42 ] [128])
                (plus:DI (reg:DI 2 cx [orig:125 _39 ] [125])
                    (reg:DI 1 dx [orig:127 _41 ] [127])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 141 140 142 12 (set (reg:SI 1 dx [364])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 iw+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 142 141 143 12 (set (reg:DI 1 dx [orig:129 _43 ] [129])
        (sign_extend:DI (reg:SI 1 dx [364]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 143 142 144 12 (parallel [
            (set (reg:DI 1 dx [orig:130 _44 ] [130])
                (plus:DI (reg:DI 1 dx [orig:129 _43 ] [129])
                    (reg:DI 2 cx [orig:128 _42 ] [128])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 144 143 145 12 (parallel [
            (set (reg:DI 2 cx [orig:131 _45 ] [131])
                (plus:DI (reg:DI 1 dx [orig:130 _44 ] [130])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 145 144 146 12 (set (reg/f:DI 1 dx [365])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fded5078cf0 vrbls>)) "CALDRG.f":89 85 {*movdi_internal}
     (nil))
(insn 146 145 147 12 (parallel [
            (set (reg:DI 2 cx [366])
                (plus:DI (reg:DI 2 cx [orig:131 _45 ] [131])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 147 146 148 12 (set (reg:SF 21 xmm0 [orig:132 _46 ] [132])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [366])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [365])) [2 vrbls.u S4 A32])) "CALDRG.f":89 131 {*movsf_internal}
     (nil))
(insn 148 147 149 12 (set (reg:SF 22 xmm1 [orig:133 _47 ] [133])
        (plus:SF (reg:SF 22 xmm1 [orig:117 _31 ] [117])
            (reg:SF 21 xmm0 [orig:132 _46 ] [132]))) "CALDRG.f":89 838 {*fop_sf_comm}
     (nil))
(insn 149 148 150 12 (set (reg:SI 1 dx [367])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 150 149 151 12 (parallel [
            (set (reg:SI 1 dx [orig:134 _48 ] [134])
                (plus:SI (reg:SI 1 dx [367])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 151 150 152 12 (set (reg:DI 1 dx [orig:135 _49 ] [135])
        (sign_extend:DI (reg:SI 1 dx [orig:134 _48 ] [134]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 152 151 153 12 (parallel [
            (set (reg:DI 2 cx [orig:136 _50 ] [136])
                (mult:DI (reg:DI 1 dx [orig:135 _49 ] [135])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 349 {*muldi3_1}
     (nil))
(insn 153 152 154 12 (set (reg:SI 1 dx [368])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 154 153 155 12 (set (reg:DI 1 dx [orig:137 _51 ] [137])
        (sign_extend:DI (reg:SI 1 dx [368]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 155 154 156 12 (parallel [
            (set (reg:DI 1 dx [orig:138 _52 ] [138])
                (plus:DI (reg:DI 1 dx [orig:137 _51 ] [137])
                    (reg:DI 2 cx [orig:136 _50 ] [136])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 156 155 157 12 (parallel [
            (set (reg:DI 2 cx [orig:139 _53 ] [139])
                (plus:DI (reg:DI 1 dx [orig:138 _52 ] [138])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 157 156 158 12 (set (reg/f:DI 1 dx [369])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fded506ab40 loops>)) "CALDRG.f":89 85 {*movdi_internal}
     (nil))
(insn 158 157 159 12 (parallel [
            (set (reg:DI 2 cx [370])
                (plus:DI (reg:DI 2 cx [orig:139 _53 ] [139])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 159 158 160 12 (set (reg:SI 1 dx [orig:140 _54 ] [140])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [370])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [369])) [1 loops.lmv S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 160 159 161 12 (set (reg:DI 1 dx [orig:141 _55 ] [141])
        (sign_extend:DI (reg:SI 1 dx [orig:140 _54 ] [140]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 161 160 162 12 (parallel [
            (set (reg:DI 2 cx [orig:142 _56 ] [142])
                (mult:DI (reg:DI 1 dx [orig:141 _55 ] [141])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 349 {*muldi3_1}
     (nil))
(insn 162 161 163 12 (set (reg:SI 1 dx [371])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 163 162 164 12 (parallel [
            (set (reg:SI 1 dx [orig:143 _57 ] [143])
                (plus:SI (reg:SI 1 dx [371])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 164 163 165 12 (set (reg:DI 1 dx [orig:144 _58 ] [144])
        (sign_extend:DI (reg:SI 1 dx [orig:143 _57 ] [143]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 165 164 166 12 (parallel [
            (set (reg:DI 1 dx [orig:145 _59 ] [145])
                (mult:DI (reg:DI 1 dx [orig:144 _58 ] [144])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 349 {*muldi3_1}
     (nil))
(insn 166 165 167 12 (parallel [
            (set (reg:DI 2 cx [orig:146 _60 ] [146])
                (plus:DI (reg:DI 2 cx [orig:142 _56 ] [142])
                    (reg:DI 1 dx [orig:145 _59 ] [145])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 167 166 168 12 (set (reg:SI 1 dx [372])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 168 167 169 12 (set (reg:DI 1 dx [orig:147 _61 ] [147])
        (sign_extend:DI (reg:SI 1 dx [372]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 169 168 170 12 (parallel [
            (set (reg:DI 1 dx [orig:148 _62 ] [148])
                (plus:DI (reg:DI 1 dx [orig:147 _61 ] [147])
                    (reg:DI 2 cx [orig:146 _60 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 170 169 171 12 (parallel [
            (set (reg:DI 2 cx [orig:149 _63 ] [149])
                (plus:DI (reg:DI 1 dx [orig:148 _62 ] [148])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 171 170 172 12 (set (reg/f:DI 1 dx [373])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fded5078cf0 vrbls>)) "CALDRG.f":89 85 {*movdi_internal}
     (nil))
(insn 172 171 173 12 (parallel [
            (set (reg:DI 2 cx [374])
                (plus:DI (reg:DI 2 cx [orig:149 _63 ] [149])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 173 172 174 12 (set (reg:SF 21 xmm0 [orig:150 _64 ] [150])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [374])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [373])) [2 vrbls.u S4 A32])) "CALDRG.f":89 131 {*movsf_internal}
     (nil))
(insn 174 173 175 12 (set (reg:SF 22 xmm1 [orig:151 _65 ] [151])
        (plus:SF (reg:SF 22 xmm1 [orig:133 _47 ] [133])
            (reg:SF 21 xmm0 [orig:150 _64 ] [150]))) "CALDRG.f":89 838 {*fop_sf_comm}
     (nil))
(insn 175 174 176 12 (set (reg:SI 1 dx [375])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 176 175 177 12 (parallel [
            (set (reg:SI 1 dx [orig:152 _66 ] [152])
                (plus:SI (reg:SI 1 dx [375])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 177 176 178 12 (set (reg:DI 1 dx [orig:153 _67 ] [153])
        (sign_extend:DI (reg:SI 1 dx [orig:152 _66 ] [152]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 178 177 179 12 (parallel [
            (set (reg:DI 2 cx [orig:154 _68 ] [154])
                (mult:DI (reg:DI 1 dx [orig:153 _67 ] [153])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 349 {*muldi3_1}
     (nil))
(insn 179 178 180 12 (set (reg:SI 1 dx [376])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 180 179 181 12 (set (reg:DI 1 dx [orig:155 _69 ] [155])
        (sign_extend:DI (reg:SI 1 dx [376]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 181 180 182 12 (parallel [
            (set (reg:DI 1 dx [orig:156 _70 ] [156])
                (plus:DI (reg:DI 1 dx [orig:155 _69 ] [155])
                    (reg:DI 2 cx [orig:154 _68 ] [154])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 182 181 183 12 (parallel [
            (set (reg:DI 2 cx [orig:157 _71 ] [157])
                (plus:DI (reg:DI 1 dx [orig:156 _70 ] [156])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 183 182 184 12 (set (reg/f:DI 1 dx [377])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fded506ab40 loops>)) "CALDRG.f":89 85 {*movdi_internal}
     (nil))
(insn 184 183 185 12 (parallel [
            (set (reg:DI 2 cx [378])
                (plus:DI (reg:DI 2 cx [orig:157 _71 ] [157])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 185 184 186 12 (set (reg:SI 1 dx [orig:158 _72 ] [158])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [378])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [377])) [1 loops.lmv S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 186 185 187 12 (set (reg:DI 1 dx [orig:159 _73 ] [159])
        (sign_extend:DI (reg:SI 1 dx [orig:158 _72 ] [158]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 187 186 188 12 (parallel [
            (set (reg:DI 2 cx [orig:160 _74 ] [160])
                (mult:DI (reg:DI 1 dx [orig:159 _73 ] [159])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 349 {*muldi3_1}
     (nil))
(insn 188 187 189 12 (set (reg:SI 1 dx [379])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 189 188 190 12 (parallel [
            (set (reg:SI 1 dx [orig:161 _75 ] [161])
                (plus:SI (reg:SI 1 dx [379])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 190 189 191 12 (set (reg:DI 1 dx [orig:162 _76 ] [162])
        (sign_extend:DI (reg:SI 1 dx [orig:161 _75 ] [161]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 191 190 192 12 (parallel [
            (set (reg:DI 1 dx [orig:163 _77 ] [163])
                (mult:DI (reg:DI 1 dx [orig:162 _76 ] [162])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 349 {*muldi3_1}
     (nil))
(insn 192 191 193 12 (parallel [
            (set (reg:DI 2 cx [orig:164 _78 ] [164])
                (plus:DI (reg:DI 2 cx [orig:160 _74 ] [160])
                    (reg:DI 1 dx [orig:163 _77 ] [163])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 193 192 194 12 (set (reg:SI 1 dx [380])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":89 86 {*movsi_internal}
     (nil))
(insn 194 193 195 12 (set (reg:DI 1 dx [orig:165 _79 ] [165])
        (sign_extend:DI (reg:SI 1 dx [380]))) "CALDRG.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 195 194 196 12 (parallel [
            (set (reg:DI 1 dx [orig:166 _80 ] [166])
                (plus:DI (reg:DI 1 dx [orig:165 _79 ] [165])
                    (reg:DI 2 cx [orig:164 _78 ] [164])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 196 195 197 12 (parallel [
            (set (reg:DI 2 cx [orig:167 _81 ] [167])
                (plus:DI (reg:DI 1 dx [orig:166 _80 ] [166])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 197 196 198 12 (set (reg/f:DI 1 dx [381])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fded5078cf0 vrbls>)) "CALDRG.f":89 85 {*movdi_internal}
     (nil))
(insn 198 197 199 12 (parallel [
            (set (reg:DI 2 cx [382])
                (plus:DI (reg:DI 2 cx [orig:167 _81 ] [167])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":89 222 {*adddi_1}
     (nil))
(insn 199 198 200 12 (set (reg:SF 21 xmm0 [orig:168 _82 ] [168])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [382])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [381])) [2 vrbls.u S4 A32])) "CALDRG.f":89 131 {*movsf_internal}
     (nil))
(insn 200 199 201 12 (set (reg:SF 21 xmm0 [383])
        (plus:SF (reg:SF 21 xmm0 [orig:168 _82 ] [168])
            (reg:SF 22 xmm1 [orig:151 _65 ] [151]))) "CALDRG.f":89 838 {*fop_sf_comm}
     (nil))
(insn 201 200 202 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 sumu+0 S4 A32])
        (reg:SF 21 xmm0 [383])) "CALDRG.f":89 131 {*movsf_internal}
     (nil))
(insn 202 201 203 12 (set (reg:SI 1 dx [384])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 203 202 204 12 (set (reg:DI 1 dx [orig:169 _83 ] [169])
        (sign_extend:DI (reg:SI 1 dx [384]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 204 203 205 12 (parallel [
            (set (reg:DI 2 cx [orig:170 _84 ] [170])
                (mult:DI (reg:DI 1 dx [orig:169 _83 ] [169])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 349 {*muldi3_1}
     (nil))
(insn 205 204 206 12 (set (reg:SI 1 dx [385])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 ie+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 206 205 207 12 (set (reg:DI 1 dx [orig:171 _85 ] [171])
        (sign_extend:DI (reg:SI 1 dx [385]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 207 206 208 12 (parallel [
            (set (reg:DI 1 dx [orig:172 _86 ] [172])
                (plus:DI (reg:DI 1 dx [orig:171 _85 ] [171])
                    (reg:DI 2 cx [orig:170 _84 ] [170])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 208 207 209 12 (parallel [
            (set (reg:DI 2 cx [orig:173 _87 ] [173])
                (plus:DI (reg:DI 1 dx [orig:172 _86 ] [172])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 209 208 210 12 (set (reg/f:DI 1 dx [386])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fded506ab40 loops>)) "CALDRG.f":91 85 {*movdi_internal}
     (nil))
(insn 210 209 211 12 (parallel [
            (set (reg:DI 2 cx [387])
                (plus:DI (reg:DI 2 cx [orig:173 _87 ] [173])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 211 210 212 12 (set (reg:SI 1 dx [orig:174 _88 ] [174])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [387])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [386])) [1 loops.lmv S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 212 211 213 12 (set (reg:DI 1 dx [orig:175 _89 ] [175])
        (sign_extend:DI (reg:SI 1 dx [orig:174 _88 ] [174]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 213 212 214 12 (parallel [
            (set (reg:DI 2 cx [orig:176 _90 ] [176])
                (mult:DI (reg:DI 1 dx [orig:175 _89 ] [175])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 349 {*muldi3_1}
     (nil))
(insn 214 213 215 12 (set (reg:SI 1 dx [388])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 215 214 216 12 (set (reg:DI 1 dx [orig:177 _91 ] [177])
        (sign_extend:DI (reg:SI 1 dx [388]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 216 215 217 12 (parallel [
            (set (reg:DI 1 dx [orig:178 _92 ] [178])
                (mult:DI (reg:DI 1 dx [orig:177 _91 ] [177])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 349 {*muldi3_1}
     (nil))
(insn 217 216 218 12 (parallel [
            (set (reg:DI 2 cx [orig:179 _93 ] [179])
                (plus:DI (reg:DI 2 cx [orig:176 _90 ] [176])
                    (reg:DI 1 dx [orig:178 _92 ] [178])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 218 217 219 12 (set (reg:SI 1 dx [389])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 ie+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 219 218 220 12 (set (reg:DI 1 dx [orig:180 _94 ] [180])
        (sign_extend:DI (reg:SI 1 dx [389]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 220 219 221 12 (parallel [
            (set (reg:DI 1 dx [orig:181 _95 ] [181])
                (plus:DI (reg:DI 1 dx [orig:180 _94 ] [180])
                    (reg:DI 2 cx [orig:179 _93 ] [179])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 221 220 222 12 (parallel [
            (set (reg:DI 2 cx [orig:182 _96 ] [182])
                (plus:DI (reg:DI 1 dx [orig:181 _95 ] [181])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 222 221 223 12 (set (reg/f:DI 1 dx [390])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fded5078cf0 vrbls>)) "CALDRG.f":91 85 {*movdi_internal}
     (nil))
(insn 223 222 224 12 (parallel [
            (set (reg:DI 2 cx [391])
                (plus:DI (reg:DI 2 cx [orig:182 _96 ] [182])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 224 223 225 12 (set (reg:SF 22 xmm1 [orig:183 _97 ] [183])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [391])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [390])) [2 vrbls.v S4 A32])) "CALDRG.f":91 131 {*movsf_internal}
     (nil))
(insn 225 224 226 12 (set (reg:SI 1 dx [392])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 226 225 227 12 (set (reg:DI 1 dx [orig:184 _98 ] [184])
        (sign_extend:DI (reg:SI 1 dx [392]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 227 226 228 12 (parallel [
            (set (reg:DI 2 cx [orig:185 _99 ] [185])
                (mult:DI (reg:DI 1 dx [orig:184 _98 ] [184])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 349 {*muldi3_1}
     (nil))
(insn 228 227 229 12 (set (reg:SI 1 dx [393])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 iw+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 229 228 230 12 (set (reg:DI 1 dx [orig:186 _100 ] [186])
        (sign_extend:DI (reg:SI 1 dx [393]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 230 229 231 12 (parallel [
            (set (reg:DI 1 dx [orig:187 _101 ] [187])
                (plus:DI (reg:DI 1 dx [orig:186 _100 ] [186])
                    (reg:DI 2 cx [orig:185 _99 ] [185])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 231 230 232 12 (parallel [
            (set (reg:DI 2 cx [orig:188 _102 ] [188])
                (plus:DI (reg:DI 1 dx [orig:187 _101 ] [187])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 232 231 233 12 (set (reg/f:DI 1 dx [394])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fded506ab40 loops>)) "CALDRG.f":91 85 {*movdi_internal}
     (nil))
(insn 233 232 234 12 (parallel [
            (set (reg:DI 2 cx [395])
                (plus:DI (reg:DI 2 cx [orig:188 _102 ] [188])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 234 233 235 12 (set (reg:SI 1 dx [orig:189 _103 ] [189])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [395])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [394])) [1 loops.lmv S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 235 234 236 12 (set (reg:DI 1 dx [orig:190 _104 ] [190])
        (sign_extend:DI (reg:SI 1 dx [orig:189 _103 ] [189]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 236 235 237 12 (parallel [
            (set (reg:DI 2 cx [orig:191 _105 ] [191])
                (mult:DI (reg:DI 1 dx [orig:190 _104 ] [190])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 349 {*muldi3_1}
     (nil))
(insn 237 236 238 12 (set (reg:SI 1 dx [396])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 238 237 239 12 (set (reg:DI 1 dx [orig:192 _106 ] [192])
        (sign_extend:DI (reg:SI 1 dx [396]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 239 238 240 12 (parallel [
            (set (reg:DI 1 dx [orig:193 _107 ] [193])
                (mult:DI (reg:DI 1 dx [orig:192 _106 ] [192])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 349 {*muldi3_1}
     (nil))
(insn 240 239 241 12 (parallel [
            (set (reg:DI 2 cx [orig:194 _108 ] [194])
                (plus:DI (reg:DI 2 cx [orig:191 _105 ] [191])
                    (reg:DI 1 dx [orig:193 _107 ] [193])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 241 240 242 12 (set (reg:SI 1 dx [397])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 iw+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 242 241 243 12 (set (reg:DI 1 dx [orig:195 _109 ] [195])
        (sign_extend:DI (reg:SI 1 dx [397]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 243 242 244 12 (parallel [
            (set (reg:DI 1 dx [orig:196 _110 ] [196])
                (plus:DI (reg:DI 1 dx [orig:195 _109 ] [195])
                    (reg:DI 2 cx [orig:194 _108 ] [194])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 244 243 245 12 (parallel [
            (set (reg:DI 2 cx [orig:197 _111 ] [197])
                (plus:DI (reg:DI 1 dx [orig:196 _110 ] [196])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 245 244 246 12 (set (reg/f:DI 1 dx [398])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fded5078cf0 vrbls>)) "CALDRG.f":91 85 {*movdi_internal}
     (nil))
(insn 246 245 247 12 (parallel [
            (set (reg:DI 2 cx [399])
                (plus:DI (reg:DI 2 cx [orig:197 _111 ] [197])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 247 246 248 12 (set (reg:SF 21 xmm0 [orig:198 _112 ] [198])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [399])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [398])) [2 vrbls.v S4 A32])) "CALDRG.f":91 131 {*movsf_internal}
     (nil))
(insn 248 247 249 12 (set (reg:SF 22 xmm1 [orig:199 _113 ] [199])
        (plus:SF (reg:SF 22 xmm1 [orig:183 _97 ] [183])
            (reg:SF 21 xmm0 [orig:198 _112 ] [198]))) "CALDRG.f":91 838 {*fop_sf_comm}
     (nil))
(insn 249 248 250 12 (set (reg:SI 1 dx [400])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 250 249 251 12 (parallel [
            (set (reg:SI 1 dx [orig:200 _114 ] [200])
                (plus:SI (reg:SI 1 dx [400])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 251 250 252 12 (set (reg:DI 1 dx [orig:201 _115 ] [201])
        (sign_extend:DI (reg:SI 1 dx [orig:200 _114 ] [200]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 252 251 253 12 (parallel [
            (set (reg:DI 2 cx [orig:202 _116 ] [202])
                (mult:DI (reg:DI 1 dx [orig:201 _115 ] [201])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 349 {*muldi3_1}
     (nil))
(insn 253 252 254 12 (set (reg:SI 1 dx [401])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 254 253 255 12 (set (reg:DI 1 dx [orig:203 _117 ] [203])
        (sign_extend:DI (reg:SI 1 dx [401]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 255 254 256 12 (parallel [
            (set (reg:DI 1 dx [orig:204 _118 ] [204])
                (plus:DI (reg:DI 1 dx [orig:203 _117 ] [203])
                    (reg:DI 2 cx [orig:202 _116 ] [202])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 256 255 257 12 (parallel [
            (set (reg:DI 2 cx [orig:205 _119 ] [205])
                (plus:DI (reg:DI 1 dx [orig:204 _118 ] [204])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 257 256 258 12 (set (reg/f:DI 1 dx [402])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fded506ab40 loops>)) "CALDRG.f":91 85 {*movdi_internal}
     (nil))
(insn 258 257 259 12 (parallel [
            (set (reg:DI 2 cx [403])
                (plus:DI (reg:DI 2 cx [orig:205 _119 ] [205])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 259 258 260 12 (set (reg:SI 1 dx [orig:206 _120 ] [206])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [403])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [402])) [1 loops.lmv S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 260 259 261 12 (set (reg:DI 1 dx [orig:207 _121 ] [207])
        (sign_extend:DI (reg:SI 1 dx [orig:206 _120 ] [206]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 261 260 262 12 (parallel [
            (set (reg:DI 2 cx [orig:208 _122 ] [208])
                (mult:DI (reg:DI 1 dx [orig:207 _121 ] [207])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 349 {*muldi3_1}
     (nil))
(insn 262 261 263 12 (set (reg:SI 1 dx [404])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 263 262 264 12 (parallel [
            (set (reg:SI 1 dx [orig:209 _123 ] [209])
                (plus:SI (reg:SI 1 dx [404])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 264 263 265 12 (set (reg:DI 1 dx [orig:210 _124 ] [210])
        (sign_extend:DI (reg:SI 1 dx [orig:209 _123 ] [209]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 265 264 266 12 (parallel [
            (set (reg:DI 1 dx [orig:211 _125 ] [211])
                (mult:DI (reg:DI 1 dx [orig:210 _124 ] [210])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 349 {*muldi3_1}
     (nil))
(insn 266 265 267 12 (parallel [
            (set (reg:DI 2 cx [orig:212 _126 ] [212])
                (plus:DI (reg:DI 2 cx [orig:208 _122 ] [208])
                    (reg:DI 1 dx [orig:211 _125 ] [211])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 267 266 268 12 (set (reg:SI 1 dx [405])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 268 267 269 12 (set (reg:DI 1 dx [orig:213 _127 ] [213])
        (sign_extend:DI (reg:SI 1 dx [405]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 269 268 270 12 (parallel [
            (set (reg:DI 1 dx [orig:214 _128 ] [214])
                (plus:DI (reg:DI 1 dx [orig:213 _127 ] [213])
                    (reg:DI 2 cx [orig:212 _126 ] [212])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 270 269 271 12 (parallel [
            (set (reg:DI 2 cx [orig:215 _129 ] [215])
                (plus:DI (reg:DI 1 dx [orig:214 _128 ] [214])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 271 270 272 12 (set (reg/f:DI 1 dx [406])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fded5078cf0 vrbls>)) "CALDRG.f":91 85 {*movdi_internal}
     (nil))
(insn 272 271 273 12 (parallel [
            (set (reg:DI 2 cx [407])
                (plus:DI (reg:DI 2 cx [orig:215 _129 ] [215])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 273 272 274 12 (set (reg:SF 21 xmm0 [orig:216 _130 ] [216])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [407])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [406])) [2 vrbls.v S4 A32])) "CALDRG.f":91 131 {*movsf_internal}
     (nil))
(insn 274 273 275 12 (set (reg:SF 22 xmm1 [orig:217 _131 ] [217])
        (plus:SF (reg:SF 22 xmm1 [orig:199 _113 ] [199])
            (reg:SF 21 xmm0 [orig:216 _130 ] [216]))) "CALDRG.f":91 838 {*fop_sf_comm}
     (nil))
(insn 275 274 276 12 (set (reg:SI 1 dx [408])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 276 275 277 12 (parallel [
            (set (reg:SI 1 dx [orig:218 _132 ] [218])
                (plus:SI (reg:SI 1 dx [408])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 277 276 278 12 (set (reg:DI 1 dx [orig:219 _133 ] [219])
        (sign_extend:DI (reg:SI 1 dx [orig:218 _132 ] [218]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 278 277 279 12 (parallel [
            (set (reg:DI 2 cx [orig:220 _134 ] [220])
                (mult:DI (reg:DI 1 dx [orig:219 _133 ] [219])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 349 {*muldi3_1}
     (nil))
(insn 279 278 280 12 (set (reg:SI 1 dx [409])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 280 279 281 12 (set (reg:DI 1 dx [orig:221 _135 ] [221])
        (sign_extend:DI (reg:SI 1 dx [409]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 281 280 282 12 (parallel [
            (set (reg:DI 1 dx [orig:222 _136 ] [222])
                (plus:DI (reg:DI 1 dx [orig:221 _135 ] [221])
                    (reg:DI 2 cx [orig:220 _134 ] [220])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 282 281 283 12 (parallel [
            (set (reg:DI 2 cx [orig:223 _137 ] [223])
                (plus:DI (reg:DI 1 dx [orig:222 _136 ] [222])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 283 282 284 12 (set (reg/f:DI 1 dx [410])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fded506ab40 loops>)) "CALDRG.f":91 85 {*movdi_internal}
     (nil))
(insn 284 283 285 12 (parallel [
            (set (reg:DI 2 cx [411])
                (plus:DI (reg:DI 2 cx [orig:223 _137 ] [223])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 285 284 286 12 (set (reg:SI 1 dx [orig:224 _138 ] [224])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [411])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [410])) [1 loops.lmv S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 286 285 287 12 (set (reg:DI 1 dx [orig:225 _139 ] [225])
        (sign_extend:DI (reg:SI 1 dx [orig:224 _138 ] [224]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 287 286 288 12 (parallel [
            (set (reg:DI 2 cx [orig:226 _140 ] [226])
                (mult:DI (reg:DI 1 dx [orig:225 _139 ] [225])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 349 {*muldi3_1}
     (nil))
(insn 288 287 289 12 (set (reg:SI 1 dx [412])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 289 288 290 12 (parallel [
            (set (reg:SI 1 dx [orig:227 _141 ] [227])
                (plus:SI (reg:SI 1 dx [412])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 290 289 291 12 (set (reg:DI 1 dx [orig:228 _142 ] [228])
        (sign_extend:DI (reg:SI 1 dx [orig:227 _141 ] [227]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 291 290 292 12 (parallel [
            (set (reg:DI 1 dx [orig:229 _143 ] [229])
                (mult:DI (reg:DI 1 dx [orig:228 _142 ] [228])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 349 {*muldi3_1}
     (nil))
(insn 292 291 293 12 (parallel [
            (set (reg:DI 2 cx [orig:230 _144 ] [230])
                (plus:DI (reg:DI 2 cx [orig:226 _140 ] [226])
                    (reg:DI 1 dx [orig:229 _143 ] [229])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 293 292 294 12 (set (reg:SI 1 dx [413])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":91 86 {*movsi_internal}
     (nil))
(insn 294 293 295 12 (set (reg:DI 1 dx [orig:231 _145 ] [231])
        (sign_extend:DI (reg:SI 1 dx [413]))) "CALDRG.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 295 294 296 12 (parallel [
            (set (reg:DI 1 dx [orig:232 _146 ] [232])
                (plus:DI (reg:DI 1 dx [orig:231 _145 ] [231])
                    (reg:DI 2 cx [orig:230 _144 ] [230])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 296 295 297 12 (parallel [
            (set (reg:DI 2 cx [orig:233 _147 ] [233])
                (plus:DI (reg:DI 1 dx [orig:232 _146 ] [232])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 297 296 298 12 (set (reg/f:DI 1 dx [414])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fded5078cf0 vrbls>)) "CALDRG.f":91 85 {*movdi_internal}
     (nil))
(insn 298 297 299 12 (parallel [
            (set (reg:DI 2 cx [415])
                (plus:DI (reg:DI 2 cx [orig:233 _147 ] [233])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":91 222 {*adddi_1}
     (nil))
(insn 299 298 300 12 (set (reg:SF 21 xmm0 [orig:234 _148 ] [234])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [415])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [414])) [2 vrbls.v S4 A32])) "CALDRG.f":91 131 {*movsf_internal}
     (nil))
(insn 300 299 301 12 (set (reg:SF 21 xmm0 [416])
        (plus:SF (reg:SF 21 xmm0 [orig:234 _148 ] [234])
            (reg:SF 22 xmm1 [orig:217 _131 ] [217]))) "CALDRG.f":91 838 {*fop_sf_comm}
     (nil))
(insn 301 300 302 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 sumv+0 S4 A32])
        (reg:SF 21 xmm0 [416])) "CALDRG.f":91 131 {*movsf_internal}
     (nil))
(insn 302 301 303 12 (set (reg:SF 22 xmm1 [418])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 sumu+0 S4 A32])) "CALDRG.f":92 131 {*movsf_internal}
     (nil))
(insn 303 302 304 12 (set (reg:SF 21 xmm0 [419])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALDRG.f":92 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 304 303 305 12 (set (reg:SF 21 xmm0 [417])
        (mult:SF (reg:SF 21 xmm0 [419])
            (reg:SF 22 xmm1 [418]))) "CALDRG.f":92 838 {*fop_sf_comm}
     (nil))
(insn 305 304 306 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 ulmh+0 S4 A32])
        (reg:SF 21 xmm0 [417])) "CALDRG.f":92 131 {*movsf_internal}
     (nil))
(insn 306 305 307 12 (set (reg:SF 22 xmm1 [421])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 sumv+0 S4 A32])) "CALDRG.f":93 131 {*movsf_internal}
     (nil))
(insn 307 306 308 12 (set (reg:SF 21 xmm0 [422])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALDRG.f":93 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 308 307 309 12 (set (reg:SF 21 xmm0 [420])
        (mult:SF (reg:SF 21 xmm0 [422])
            (reg:SF 22 xmm1 [421]))) "CALDRG.f":93 838 {*fop_sf_comm}
     (nil))
(insn 309 308 310 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 vlmh+0 S4 A32])
        (reg:SF 21 xmm0 [420])) "CALDRG.f":93 131 {*movsf_internal}
     (nil))
(insn 310 309 311 12 (set (reg:SI 1 dx [423])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":97 86 {*movsi_internal}
     (nil))
(insn 311 310 312 12 (set (reg:DI 1 dx [orig:235 _149 ] [235])
        (sign_extend:DI (reg:SI 1 dx [423]))) "CALDRG.f":97 149 {*extendsidi2_rex64}
     (nil))
(insn 312 311 313 12 (parallel [
            (set (reg:DI 2 cx [orig:236 _150 ] [236])
                (mult:DI (reg:DI 1 dx [orig:235 _149 ] [235])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 349 {*muldi3_1}
     (nil))
(insn 313 312 314 12 (set (reg:SI 1 dx [424])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 ie+0 S4 A32])) "CALDRG.f":97 86 {*movsi_internal}
     (nil))
(insn 314 313 315 12 (set (reg:DI 1 dx [orig:237 _151 ] [237])
        (sign_extend:DI (reg:SI 1 dx [424]))) "CALDRG.f":97 149 {*extendsidi2_rex64}
     (nil))
(insn 315 314 316 12 (parallel [
            (set (reg:DI 1 dx [orig:238 _152 ] [238])
                (plus:DI (reg:DI 1 dx [orig:237 _151 ] [237])
                    (reg:DI 2 cx [orig:236 _150 ] [236])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 222 {*adddi_1}
     (nil))
(insn 316 315 317 12 (parallel [
            (set (reg:DI 2 cx [orig:239 _153 ] [239])
                (plus:DI (reg:DI 1 dx [orig:238 _152 ] [238])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 222 {*adddi_1}
     (nil))
(insn 317 316 318 12 (set (reg/f:DI 1 dx [425])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fded5071870 pvrbls>)) "CALDRG.f":97 85 {*movdi_internal}
     (nil))
(insn 318 317 319 12 (parallel [
            (set (reg:DI 2 cx [426])
                (plus:DI (reg:DI 2 cx [orig:239 _153 ] [239])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 222 {*adddi_1}
     (nil))
(insn 319 318 320 12 (set (reg:SF 22 xmm1 [orig:240 _154 ] [240])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [426])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [425])) [2 pvrbls.uz0 S4 A32])) "CALDRG.f":97 131 {*movsf_internal}
     (nil))
(insn 320 319 321 12 (set (reg:SI 1 dx [427])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":97 86 {*movsi_internal}
     (nil))
(insn 321 320 322 12 (set (reg:DI 1 dx [orig:241 _155 ] [241])
        (sign_extend:DI (reg:SI 1 dx [427]))) "CALDRG.f":97 149 {*extendsidi2_rex64}
     (nil))
(insn 322 321 323 12 (parallel [
            (set (reg:DI 2 cx [orig:242 _156 ] [242])
                (mult:DI (reg:DI 1 dx [orig:241 _155 ] [241])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 349 {*muldi3_1}
     (nil))
(insn 323 322 324 12 (set (reg:SI 1 dx [428])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 iw+0 S4 A32])) "CALDRG.f":97 86 {*movsi_internal}
     (nil))
(insn 324 323 325 12 (set (reg:DI 1 dx [orig:243 _157 ] [243])
        (sign_extend:DI (reg:SI 1 dx [428]))) "CALDRG.f":97 149 {*extendsidi2_rex64}
     (nil))
(insn 325 324 326 12 (parallel [
            (set (reg:DI 1 dx [orig:244 _158 ] [244])
                (plus:DI (reg:DI 1 dx [orig:243 _157 ] [243])
                    (reg:DI 2 cx [orig:242 _156 ] [242])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 222 {*adddi_1}
     (nil))
(insn 326 325 327 12 (parallel [
            (set (reg:DI 2 cx [orig:245 _159 ] [245])
                (plus:DI (reg:DI 1 dx [orig:244 _158 ] [244])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 222 {*adddi_1}
     (nil))
(insn 327 326 328 12 (set (reg/f:DI 1 dx [429])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fded5071870 pvrbls>)) "CALDRG.f":97 85 {*movdi_internal}
     (nil))
(insn 328 327 329 12 (parallel [
            (set (reg:DI 2 cx [430])
                (plus:DI (reg:DI 2 cx [orig:245 _159 ] [245])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 222 {*adddi_1}
     (nil))
(insn 329 328 330 12 (set (reg:SF 21 xmm0 [orig:246 _160 ] [246])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [430])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [429])) [2 pvrbls.uz0 S4 A32])) "CALDRG.f":97 131 {*movsf_internal}
     (nil))
(insn 330 329 331 12 (set (reg:SF 22 xmm1 [orig:247 _161 ] [247])
        (plus:SF (reg:SF 22 xmm1 [orig:240 _154 ] [240])
            (reg:SF 21 xmm0 [orig:246 _160 ] [246]))) "CALDRG.f":97 838 {*fop_sf_comm}
     (nil))
(insn 331 330 332 12 (set (reg:SI 1 dx [431])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":97 86 {*movsi_internal}
     (nil))
(insn 332 331 333 12 (parallel [
            (set (reg:SI 1 dx [orig:248 _162 ] [248])
                (plus:SI (reg:SI 1 dx [431])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 333 332 334 12 (set (reg:DI 1 dx [orig:249 _163 ] [249])
        (sign_extend:DI (reg:SI 1 dx [orig:248 _162 ] [248]))) "CALDRG.f":97 149 {*extendsidi2_rex64}
     (nil))
(insn 334 333 335 12 (parallel [
            (set (reg:DI 2 cx [orig:250 _164 ] [250])
                (mult:DI (reg:DI 1 dx [orig:249 _163 ] [249])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 349 {*muldi3_1}
     (nil))
(insn 335 334 336 12 (set (reg:SI 1 dx [432])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":97 86 {*movsi_internal}
     (nil))
(insn 336 335 337 12 (set (reg:DI 1 dx [orig:251 _165 ] [251])
        (sign_extend:DI (reg:SI 1 dx [432]))) "CALDRG.f":97 149 {*extendsidi2_rex64}
     (nil))
(insn 337 336 338 12 (parallel [
            (set (reg:DI 1 dx [orig:252 _166 ] [252])
                (plus:DI (reg:DI 1 dx [orig:251 _165 ] [251])
                    (reg:DI 2 cx [orig:250 _164 ] [250])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 222 {*adddi_1}
     (nil))
(insn 338 337 339 12 (parallel [
            (set (reg:DI 2 cx [orig:253 _167 ] [253])
                (plus:DI (reg:DI 1 dx [orig:252 _166 ] [252])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 222 {*adddi_1}
     (nil))
(insn 339 338 340 12 (set (reg/f:DI 1 dx [433])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fded5071870 pvrbls>)) "CALDRG.f":97 85 {*movdi_internal}
     (nil))
(insn 340 339 341 12 (parallel [
            (set (reg:DI 2 cx [434])
                (plus:DI (reg:DI 2 cx [orig:253 _167 ] [253])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 222 {*adddi_1}
     (nil))
(insn 341 340 342 12 (set (reg:SF 21 xmm0 [orig:254 _168 ] [254])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [434])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [433])) [2 pvrbls.uz0 S4 A32])) "CALDRG.f":97 131 {*movsf_internal}
     (nil))
(insn 342 341 343 12 (set (reg:SF 22 xmm1 [orig:255 _169 ] [255])
        (plus:SF (reg:SF 22 xmm1 [orig:247 _161 ] [247])
            (reg:SF 21 xmm0 [orig:254 _168 ] [254]))) "CALDRG.f":97 838 {*fop_sf_comm}
     (nil))
(insn 343 342 344 12 (set (reg:SI 1 dx [435])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":97 86 {*movsi_internal}
     (nil))
(insn 344 343 345 12 (parallel [
            (set (reg:SI 1 dx [orig:256 _170 ] [256])
                (plus:SI (reg:SI 1 dx [435])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 345 344 346 12 (set (reg:DI 1 dx [orig:257 _171 ] [257])
        (sign_extend:DI (reg:SI 1 dx [orig:256 _170 ] [256]))) "CALDRG.f":97 149 {*extendsidi2_rex64}
     (nil))
(insn 346 345 347 12 (parallel [
            (set (reg:DI 2 cx [orig:258 _172 ] [258])
                (mult:DI (reg:DI 1 dx [orig:257 _171 ] [257])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 349 {*muldi3_1}
     (nil))
(insn 347 346 348 12 (set (reg:SI 1 dx [436])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":97 86 {*movsi_internal}
     (nil))
(insn 348 347 349 12 (set (reg:DI 1 dx [orig:259 _173 ] [259])
        (sign_extend:DI (reg:SI 1 dx [436]))) "CALDRG.f":97 149 {*extendsidi2_rex64}
     (nil))
(insn 349 348 350 12 (parallel [
            (set (reg:DI 1 dx [orig:260 _174 ] [260])
                (plus:DI (reg:DI 1 dx [orig:259 _173 ] [259])
                    (reg:DI 2 cx [orig:258 _172 ] [258])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 222 {*adddi_1}
     (nil))
(insn 350 349 351 12 (parallel [
            (set (reg:DI 2 cx [orig:261 _175 ] [261])
                (plus:DI (reg:DI 1 dx [orig:260 _174 ] [260])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 222 {*adddi_1}
     (nil))
(insn 351 350 352 12 (set (reg/f:DI 1 dx [437])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fded5071870 pvrbls>)) "CALDRG.f":97 85 {*movdi_internal}
     (nil))
(insn 352 351 353 12 (parallel [
            (set (reg:DI 2 cx [438])
                (plus:DI (reg:DI 2 cx [orig:261 _175 ] [261])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":97 222 {*adddi_1}
     (nil))
(insn 353 352 354 12 (set (reg:SF 21 xmm0 [orig:262 _176 ] [262])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [438])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [437])) [2 pvrbls.uz0 S4 A32])) "CALDRG.f":97 131 {*movsf_internal}
     (nil))
(insn 354 353 355 12 (set (reg:SF 21 xmm0 [orig:263 _177 ] [263])
        (plus:SF (reg:SF 21 xmm0 [orig:262 _176 ] [262])
            (reg:SF 22 xmm1 [orig:255 _169 ] [255]))) "CALDRG.f":97 838 {*fop_sf_comm}
     (nil))
(insn 355 354 356 12 (set (reg:SF 22 xmm1 [orig:264 _178 ] [264])
        (reg:SF 21 xmm0 [orig:263 _177 ] [263])) "CALDRG.f":97 131 {*movsf_internal}
     (nil))
(insn 356 355 357 12 (set (reg:SF 21 xmm0 [440])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALDRG.f":97 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 357 356 358 12 (set (reg:SF 21 xmm0 [439])
        (mult:SF (reg:SF 21 xmm0 [440])
            (reg:SF 22 xmm1 [orig:264 _178 ] [264]))) "CALDRG.f":97 838 {*fop_sf_comm}
     (nil))
(insn 358 357 359 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 uz0h+0 S4 A32])
        (reg:SF 21 xmm0 [439])) "CALDRG.f":97 131 {*movsf_internal}
     (nil))
(insn 359 358 360 12 (set (reg:SI 1 dx [441])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":98 86 {*movsi_internal}
     (nil))
(insn 360 359 361 12 (set (reg:DI 1 dx [orig:265 _179 ] [265])
        (sign_extend:DI (reg:SI 1 dx [441]))) "CALDRG.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 361 360 362 12 (parallel [
            (set (reg:DI 2 cx [orig:266 _180 ] [266])
                (mult:DI (reg:DI 1 dx [orig:265 _179 ] [265])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 349 {*muldi3_1}
     (nil))
(insn 362 361 363 12 (set (reg:SI 1 dx [442])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 ie+0 S4 A32])) "CALDRG.f":98 86 {*movsi_internal}
     (nil))
(insn 363 362 364 12 (set (reg:DI 1 dx [orig:267 _181 ] [267])
        (sign_extend:DI (reg:SI 1 dx [442]))) "CALDRG.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 364 363 365 12 (parallel [
            (set (reg:DI 1 dx [orig:268 _182 ] [268])
                (plus:DI (reg:DI 1 dx [orig:267 _181 ] [267])
                    (reg:DI 2 cx [orig:266 _180 ] [266])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 222 {*adddi_1}
     (nil))
(insn 365 364 366 12 (parallel [
            (set (reg:DI 2 cx [orig:269 _183 ] [269])
                (plus:DI (reg:DI 1 dx [orig:268 _182 ] [268])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 222 {*adddi_1}
     (nil))
(insn 366 365 367 12 (set (reg/f:DI 1 dx [443])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fded5071870 pvrbls>)) "CALDRG.f":98 85 {*movdi_internal}
     (nil))
(insn 367 366 368 12 (parallel [
            (set (reg:DI 2 cx [444])
                (plus:DI (reg:DI 2 cx [orig:269 _183 ] [269])
                    (const_int 177786 [0x2b67a])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 222 {*adddi_1}
     (nil))
(insn 368 367 369 12 (set (reg:SF 22 xmm1 [orig:270 _184 ] [270])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [444])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [443])) [2 pvrbls.vz0 S4 A32])) "CALDRG.f":98 131 {*movsf_internal}
     (nil))
(insn 369 368 370 12 (set (reg:SI 1 dx [445])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":98 86 {*movsi_internal}
     (nil))
(insn 370 369 371 12 (set (reg:DI 1 dx [orig:271 _185 ] [271])
        (sign_extend:DI (reg:SI 1 dx [445]))) "CALDRG.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 371 370 372 12 (parallel [
            (set (reg:DI 2 cx [orig:272 _186 ] [272])
                (mult:DI (reg:DI 1 dx [orig:271 _185 ] [271])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 349 {*muldi3_1}
     (nil))
(insn 372 371 373 12 (set (reg:SI 1 dx [446])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 iw+0 S4 A32])) "CALDRG.f":98 86 {*movsi_internal}
     (nil))
(insn 373 372 374 12 (set (reg:DI 1 dx [orig:273 _187 ] [273])
        (sign_extend:DI (reg:SI 1 dx [446]))) "CALDRG.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 374 373 375 12 (parallel [
            (set (reg:DI 1 dx [orig:274 _188 ] [274])
                (plus:DI (reg:DI 1 dx [orig:273 _187 ] [273])
                    (reg:DI 2 cx [orig:272 _186 ] [272])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 222 {*adddi_1}
     (nil))
(insn 375 374 376 12 (parallel [
            (set (reg:DI 2 cx [orig:275 _189 ] [275])
                (plus:DI (reg:DI 1 dx [orig:274 _188 ] [274])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 222 {*adddi_1}
     (nil))
(insn 376 375 377 12 (set (reg/f:DI 1 dx [447])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fded5071870 pvrbls>)) "CALDRG.f":98 85 {*movdi_internal}
     (nil))
(insn 377 376 378 12 (parallel [
            (set (reg:DI 2 cx [448])
                (plus:DI (reg:DI 2 cx [orig:275 _189 ] [275])
                    (const_int 177786 [0x2b67a])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 222 {*adddi_1}
     (nil))
(insn 378 377 379 12 (set (reg:SF 21 xmm0 [orig:276 _190 ] [276])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [448])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [447])) [2 pvrbls.vz0 S4 A32])) "CALDRG.f":98 131 {*movsf_internal}
     (nil))
(insn 379 378 380 12 (set (reg:SF 22 xmm1 [orig:277 _191 ] [277])
        (plus:SF (reg:SF 22 xmm1 [orig:270 _184 ] [270])
            (reg:SF 21 xmm0 [orig:276 _190 ] [276]))) "CALDRG.f":98 838 {*fop_sf_comm}
     (nil))
(insn 380 379 381 12 (set (reg:SI 1 dx [449])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":98 86 {*movsi_internal}
     (nil))
(insn 381 380 382 12 (parallel [
            (set (reg:SI 1 dx [orig:278 _192 ] [278])
                (plus:SI (reg:SI 1 dx [449])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 382 381 383 12 (set (reg:DI 1 dx [orig:279 _193 ] [279])
        (sign_extend:DI (reg:SI 1 dx [orig:278 _192 ] [278]))) "CALDRG.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 383 382 384 12 (parallel [
            (set (reg:DI 2 cx [orig:280 _194 ] [280])
                (mult:DI (reg:DI 1 dx [orig:279 _193 ] [279])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 349 {*muldi3_1}
     (nil))
(insn 384 383 385 12 (set (reg:SI 1 dx [450])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":98 86 {*movsi_internal}
     (nil))
(insn 385 384 386 12 (set (reg:DI 1 dx [orig:281 _195 ] [281])
        (sign_extend:DI (reg:SI 1 dx [450]))) "CALDRG.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 386 385 387 12 (parallel [
            (set (reg:DI 1 dx [orig:282 _196 ] [282])
                (plus:DI (reg:DI 1 dx [orig:281 _195 ] [281])
                    (reg:DI 2 cx [orig:280 _194 ] [280])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 222 {*adddi_1}
     (nil))
(insn 387 386 388 12 (parallel [
            (set (reg:DI 2 cx [orig:283 _197 ] [283])
                (plus:DI (reg:DI 1 dx [orig:282 _196 ] [282])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 222 {*adddi_1}
     (nil))
(insn 388 387 389 12 (set (reg/f:DI 1 dx [451])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fded5071870 pvrbls>)) "CALDRG.f":98 85 {*movdi_internal}
     (nil))
(insn 389 388 390 12 (parallel [
            (set (reg:DI 2 cx [452])
                (plus:DI (reg:DI 2 cx [orig:283 _197 ] [283])
                    (const_int 177786 [0x2b67a])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 222 {*adddi_1}
     (nil))
(insn 390 389 391 12 (set (reg:SF 21 xmm0 [orig:284 _198 ] [284])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [452])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [451])) [2 pvrbls.vz0 S4 A32])) "CALDRG.f":98 131 {*movsf_internal}
     (nil))
(insn 391 390 392 12 (set (reg:SF 22 xmm1 [orig:285 _199 ] [285])
        (plus:SF (reg:SF 22 xmm1 [orig:277 _191 ] [277])
            (reg:SF 21 xmm0 [orig:284 _198 ] [284]))) "CALDRG.f":98 838 {*fop_sf_comm}
     (nil))
(insn 392 391 393 12 (set (reg:SI 1 dx [453])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":98 86 {*movsi_internal}
     (nil))
(insn 393 392 394 12 (parallel [
            (set (reg:SI 1 dx [orig:286 _200 ] [286])
                (plus:SI (reg:SI 1 dx [453])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 394 393 395 12 (set (reg:DI 1 dx [orig:287 _201 ] [287])
        (sign_extend:DI (reg:SI 1 dx [orig:286 _200 ] [286]))) "CALDRG.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 395 394 396 12 (parallel [
            (set (reg:DI 2 cx [orig:288 _202 ] [288])
                (mult:DI (reg:DI 1 dx [orig:287 _201 ] [287])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 349 {*muldi3_1}
     (nil))
(insn 396 395 397 12 (set (reg:SI 1 dx [454])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":98 86 {*movsi_internal}
     (nil))
(insn 397 396 398 12 (set (reg:DI 1 dx [orig:289 _203 ] [289])
        (sign_extend:DI (reg:SI 1 dx [454]))) "CALDRG.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 398 397 399 12 (parallel [
            (set (reg:DI 1 dx [orig:290 _204 ] [290])
                (plus:DI (reg:DI 1 dx [orig:289 _203 ] [289])
                    (reg:DI 2 cx [orig:288 _202 ] [288])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 222 {*adddi_1}
     (nil))
(insn 399 398 400 12 (parallel [
            (set (reg:DI 2 cx [orig:291 _205 ] [291])
                (plus:DI (reg:DI 1 dx [orig:290 _204 ] [290])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 222 {*adddi_1}
     (nil))
(insn 400 399 401 12 (set (reg/f:DI 1 dx [455])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fded5071870 pvrbls>)) "CALDRG.f":98 85 {*movdi_internal}
     (nil))
(insn 401 400 402 12 (parallel [
            (set (reg:DI 2 cx [456])
                (plus:DI (reg:DI 2 cx [orig:291 _205 ] [291])
                    (const_int 177786 [0x2b67a])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":98 222 {*adddi_1}
     (nil))
(insn 402 401 403 12 (set (reg:SF 21 xmm0 [orig:292 _206 ] [292])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [456])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [455])) [2 pvrbls.vz0 S4 A32])) "CALDRG.f":98 131 {*movsf_internal}
     (nil))
(insn 403 402 404 12 (set (reg:SF 21 xmm0 [orig:293 _207 ] [293])
        (plus:SF (reg:SF 21 xmm0 [orig:292 _206 ] [292])
            (reg:SF 22 xmm1 [orig:285 _199 ] [285]))) "CALDRG.f":98 838 {*fop_sf_comm}
     (nil))
(insn 404 403 405 12 (set (reg:SF 22 xmm1 [orig:294 _208 ] [294])
        (reg:SF 21 xmm0 [orig:293 _207 ] [293])) "CALDRG.f":98 131 {*movsf_internal}
     (nil))
(insn 405 404 406 12 (set (reg:SF 21 xmm0 [458])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALDRG.f":98 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 406 405 407 12 (set (reg:SF 21 xmm0 [457])
        (mult:SF (reg:SF 21 xmm0 [458])
            (reg:SF 22 xmm1 [orig:294 _208 ] [294]))) "CALDRG.f":98 838 {*fop_sf_comm}
     (nil))
(insn 407 406 408 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 vz0h+0 S4 A32])
        (reg:SF 21 xmm0 [457])) "CALDRG.f":98 131 {*movsf_internal}
     (nil))
(insn 408 407 409 12 (set (reg:SF 21 xmm0 [459])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 ulmh+0 S4 A32])) "CALDRG.f":103 131 {*movsf_internal}
     (nil))
(insn 409 408 410 12 (set (reg:SF 21 xmm0 [orig:295 _209 ] [295])
        (plus:SF (reg:SF 21 xmm0 [459])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 uz0h+0 S4 A32]))) "CALDRG.f":103 838 {*fop_sf_comm}
     (nil))
(insn 410 409 411 12 (set (reg:SF 22 xmm1 [orig:296 _210 ] [296])
        (reg:SF 21 xmm0 [orig:295 _209 ] [295])) "CALDRG.f":103 131 {*movsf_internal}
     (nil))
(insn 411 410 412 12 (set (reg:SF 21 xmm0 [461])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALDRG.f":103 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 412 411 413 12 (set (reg:SF 21 xmm0 [460])
        (mult:SF (reg:SF 21 xmm0 [461])
            (reg:SF 22 xmm1 [orig:296 _210 ] [296]))) "CALDRG.f":103 838 {*fop_sf_comm}
     (nil))
(insn 413 412 414 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 ubar+0 S4 A32])
        (reg:SF 21 xmm0 [460])) "CALDRG.f":103 131 {*movsf_internal}
     (nil))
(insn 414 413 415 12 (set (reg:SF 21 xmm0 [462])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 vlmh+0 S4 A32])) "CALDRG.f":104 131 {*movsf_internal}
     (nil))
(insn 415 414 416 12 (set (reg:SF 21 xmm0 [orig:297 _211 ] [297])
        (plus:SF (reg:SF 21 xmm0 [462])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 vz0h+0 S4 A32]))) "CALDRG.f":104 838 {*fop_sf_comm}
     (nil))
(insn 416 415 417 12 (set (reg:SF 22 xmm1 [orig:298 _212 ] [298])
        (reg:SF 21 xmm0 [orig:297 _211 ] [297])) "CALDRG.f":104 131 {*movsf_internal}
     (nil))
(insn 417 416 418 12 (set (reg:SF 21 xmm0 [464])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALDRG.f":104 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 418 417 419 12 (set (reg:SF 21 xmm0 [463])
        (mult:SF (reg:SF 21 xmm0 [464])
            (reg:SF 22 xmm1 [orig:298 _212 ] [298]))) "CALDRG.f":104 838 {*fop_sf_comm}
     (nil))
(insn 419 418 420 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 vbar+0 S4 A32])
        (reg:SF 21 xmm0 [463])) "CALDRG.f":104 131 {*movsf_internal}
     (nil))
(insn 420 419 495 12 (set (reg:SF 21 xmm0 [465])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 ubar+0 S4 A32])) "CALDRG.f":105 131 {*movsf_internal}
     (nil))
(insn 495 420 421 12 (set (reg:SF 22 xmm1 [465])
        (reg:SF 21 xmm0 [465])) "CALDRG.f":105 131 {*movsf_internal}
     (nil))
(insn 421 495 422 12 (set (reg:SF 22 xmm1 [465])
        (mult:SF (reg:SF 22 xmm1 [465])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 ubar+0 S4 A32]))) "CALDRG.f":105 838 {*fop_sf_comm}
     (nil))
(insn 422 421 423 12 (set (reg:SF 21 xmm0 [466])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 vbar+0 S4 A32])) "CALDRG.f":105 131 {*movsf_internal}
     (nil))
(insn 423 422 424 12 (set (reg:SF 21 xmm0 [orig:300 _214 ] [300])
        (mult:SF (reg:SF 21 xmm0 [466])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 vbar+0 S4 A32]))) "CALDRG.f":105 838 {*fop_sf_comm}
     (nil))
(insn 424 423 425 12 (set (reg:SF 21 xmm0 [467])
        (plus:SF (reg:SF 21 xmm0 [orig:300 _214 ] [300])
            (reg:SF 22 xmm1 [orig:299 _213 ] [299]))) "CALDRG.f":105 838 {*fop_sf_comm}
     (nil))
(insn 425 424 426 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 wspdsq+0 S4 A32])
        (reg:SF 21 xmm0 [467])) "CALDRG.f":105 131 {*movsf_internal}
     (nil))
(insn 426 425 427 12 (set (reg:SI 1 dx [468])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":109 86 {*movsi_internal}
     (nil))
(insn 427 426 428 12 (set (reg:DI 1 dx [orig:301 _215 ] [301])
        (sign_extend:DI (reg:SI 1 dx [468]))) "CALDRG.f":109 149 {*extendsidi2_rex64}
     (nil))
(insn 428 427 429 12 (parallel [
            (set (reg:DI 2 cx [orig:302 _216 ] [302])
                (mult:DI (reg:DI 1 dx [orig:301 _215 ] [301])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":109 349 {*muldi3_1}
     (nil))
(insn 429 428 430 12 (set (reg:SI 1 dx [469])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":109 86 {*movsi_internal}
     (nil))
(insn 430 429 431 12 (set (reg:DI 1 dx [orig:303 _217 ] [303])
        (sign_extend:DI (reg:SI 1 dx [469]))) "CALDRG.f":109 149 {*extendsidi2_rex64}
     (nil))
(insn 431 430 432 12 (parallel [
            (set (reg:DI 1 dx [orig:304 _218 ] [304])
                (plus:DI (reg:DI 1 dx [orig:303 _217 ] [303])
                    (reg:DI 2 cx [orig:302 _216 ] [302])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":109 222 {*adddi_1}
     (nil))
(insn 432 431 433 12 (parallel [
            (set (reg:DI 2 cx [orig:305 _219 ] [305])
                (plus:DI (reg:DI 1 dx [orig:304 _218 ] [304])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":109 222 {*adddi_1}
     (nil))
(insn 433 432 434 12 (set (reg/f:DI 1 dx [470])
        (symbol_ref:DI ("srfdsp_") [flags 0x202]  <var_decl 0x7fded5078480 srfdsp>)) "CALDRG.f":109 85 {*movdi_internal}
     (nil))
(insn 434 433 435 12 (set (reg:SF 22 xmm1 [orig:306 _220 ] [306])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:305 _219 ] [305])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [470])) [2 srfdsp.ustar S4 A32])) "CALDRG.f":109 131 {*movsf_internal}
     (nil))
(insn 435 434 436 12 (set (reg:SI 1 dx [471])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":109 86 {*movsi_internal}
     (nil))
(insn 436 435 437 12 (set (reg:DI 1 dx [orig:307 _221 ] [307])
        (sign_extend:DI (reg:SI 1 dx [471]))) "CALDRG.f":109 149 {*extendsidi2_rex64}
     (nil))
(insn 437 436 438 12 (parallel [
            (set (reg:DI 2 cx [orig:308 _222 ] [308])
                (mult:DI (reg:DI 1 dx [orig:307 _221 ] [307])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":109 349 {*muldi3_1}
     (nil))
(insn 438 437 439 12 (set (reg:SI 1 dx [472])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":109 86 {*movsi_internal}
     (nil))
(insn 439 438 440 12 (set (reg:DI 1 dx [orig:309 _223 ] [309])
        (sign_extend:DI (reg:SI 1 dx [472]))) "CALDRG.f":109 149 {*extendsidi2_rex64}
     (nil))
(insn 440 439 441 12 (parallel [
            (set (reg:DI 1 dx [orig:310 _224 ] [310])
                (plus:DI (reg:DI 1 dx [orig:309 _223 ] [309])
                    (reg:DI 2 cx [orig:308 _222 ] [308])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":109 222 {*adddi_1}
     (nil))
(insn 441 440 442 12 (parallel [
            (set (reg:DI 2 cx [orig:311 _225 ] [311])
                (plus:DI (reg:DI 1 dx [orig:310 _224 ] [310])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":109 222 {*adddi_1}
     (nil))
(insn 442 441 443 12 (set (reg/f:DI 1 dx [473])
        (symbol_ref:DI ("srfdsp_") [flags 0x202]  <var_decl 0x7fded5078480 srfdsp>)) "CALDRG.f":109 85 {*movdi_internal}
     (nil))
(insn 443 442 444 12 (set (reg:SF 21 xmm0 [orig:312 _226 ] [312])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:311 _225 ] [311])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [473])) [2 srfdsp.ustar S4 A32])) "CALDRG.f":109 131 {*movsf_internal}
     (nil))
(insn 444 443 445 12 (set (reg:SF 21 xmm0 [474])
        (mult:SF (reg:SF 21 xmm0 [orig:312 _226 ] [312])
            (reg:SF 22 xmm1 [orig:306 _220 ] [306]))) "CALDRG.f":109 838 {*fop_sf_comm}
     (nil))
(insn 445 444 446 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 ustrsq+0 S4 A32])
        (reg:SF 21 xmm0 [474])) "CALDRG.f":109 131 {*movsf_internal}
     (nil))
(insn 446 445 447 12 (set (reg:SI 1 dx [475])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALDRG.f":110 86 {*movsi_internal}
     (nil))
(insn 447 446 448 12 (set (reg:DI 1 dx [orig:313 _227 ] [313])
        (sign_extend:DI (reg:SI 1 dx [475]))) "CALDRG.f":110 149 {*extendsidi2_rex64}
     (nil))
(insn 448 447 449 12 (parallel [
            (set (reg:DI 2 cx [orig:314 _228 ] [314])
                (mult:DI (reg:DI 1 dx [orig:313 _227 ] [313])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":110 349 {*muldi3_1}
     (nil))
(insn 449 448 450 12 (set (reg:SI 1 dx [476])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALDRG.f":110 86 {*movsi_internal}
     (nil))
(insn 450 449 451 12 (set (reg:DI 1 dx [orig:315 _229 ] [315])
        (sign_extend:DI (reg:SI 1 dx [476]))) "CALDRG.f":110 149 {*extendsidi2_rex64}
     (nil))
(insn 451 450 452 12 (parallel [
            (set (reg:DI 1 dx [orig:316 _230 ] [316])
                (plus:DI (reg:DI 1 dx [orig:315 _229 ] [315])
                    (reg:DI 2 cx [orig:314 _228 ] [314])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":110 222 {*adddi_1}
     (nil))
(insn 452 451 453 12 (parallel [
            (set (reg:DI 2 cx [orig:317 _231 ] [317])
                (plus:DI (reg:DI 1 dx [orig:316 _230 ] [316])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":110 222 {*adddi_1}
     (nil))
(insn 453 452 454 12 (set (reg:SF 21 xmm0 [477])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 ustrsq+0 S4 A32])) "CALDRG.f":110 131 {*movsf_internal}
     (nil))
(insn 454 453 455 12 (set (reg:SF 21 xmm0 [orig:318 _232 ] [318])
        (div:SF (reg:SF 21 xmm0 [477])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 wspdsq+0 S4 A32]))) "CALDRG.f":110 841 {*fop_sf_1}
     (nil))
(insn 455 454 456 12 (set (reg/f:DI 1 dx [478])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 dragco+0 S8 A64])) "CALDRG.f":110 85 {*movdi_internal}
     (nil))
(insn 456 455 457 12 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:317 _231 ] [317])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [478])) [2 *dragco_248(D) S4 A32])
        (reg:SF 21 xmm0 [orig:318 _232 ] [318])) "CALDRG.f":110 131 {*movsf_internal}
     (nil))
(insn 457 456 478 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":80 221 {*addsi_1}
     (nil))
(jump_insn 478 457 479 12 (set (pc)
        (label_ref 458)) "CALDRG.f":80 683 {jump}
     (nil)
 -> 458)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324

(barrier 479 478 492)
;; basic block 18, loop depth 0, maybe hot
;;  prev block 12, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 492 479 491 18 14 (nil) [1 uses])
(note 491 492 493 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 493 491 461 18 (const_int 0 [0]) "CALDRG.f":110 718 {nop}
     (nil))
;;  succ:       13 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324

;; basic block 13, loop depth 0, maybe hot
;;  prev block 18, next block 17, flags: (RTL, MODIFIED)
;;  pred:       18 [always]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 461 493 462 13 7 (nil) [0 uses])
(note 462 461 463 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 463 462 480 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALDRG.f":79 221 {*addsi_1}
     (nil))
(jump_insn 480 463 481 13 (set (pc)
        (label_ref 464)) "CALDRG.f":79 683 {jump}
     (nil)
 -> 464)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 324

(barrier 481 480 489)
;; basic block 17, loop depth 0, maybe hot
;;  prev block 13, next block 14, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 489 481 488 17 13 (nil) [1 uses])
(note 488 489 490 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 490 488 467 17 (const_int 0 [0]) "CALDRG.f":80 718 {nop}
     (nil))
;;  succ:       14 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 17, next block 1, flags: (RTL, MODIFIED)
;;  pred:       17 [always]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 467 490 468 14 6 (nil) [0 uses])
(note 468 467 473 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 473 468 494 14 (const_int 0 [0]) "CALDRG.f":117 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 494 473 0 NOTE_INSN_DELETED)
