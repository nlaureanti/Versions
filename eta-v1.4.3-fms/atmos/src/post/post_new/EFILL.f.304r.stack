
;; Function efill (efill_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns


efill

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12]
;;  ref usage 	r0={25d,22u} r1={17d,13u} r2={34d,29u} r3={4d,9u} r4={15d,11u} r5={10d,6u} r6={3d,88u} r7={9d,37u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={34d,14u} r18={4d} r19={4d} r20={1d,1u} r21={21d,16u} r22={14d,9u} r23={6d,1u} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={7d,1u} r38={6d} r39={4d} r40={4d} r41={4d,7u} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 723{459d,264u,0e} in 178{174 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 6 1 281 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 281 6 282 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) "EFILL.f":1 -1
     (nil))
(insn/f 282 281 283 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) "EFILL.f":1 -1
     (nil))
(insn/f 283 282 284 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) "EFILL.f":1 -1
     (nil))
(insn/f 284 283 285 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "EFILL.f":1 -1
     (nil))
(insn/f 285 284 286 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -624 [0xfffffffffffffd90])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "EFILL.f":1 -1
     (nil))
(note 286 285 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 286 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -616 [0xfffffffffffffd98])) [11 egrid+0 S8 A64])
        (reg:DI 5 di [ egrid ])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -624 [0xfffffffffffffd90])) [12 im+0 S8 A64])
        (reg:DI 4 si [ im ])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -632 [0xfffffffffffffd88])) [12 jm+0 S8 A64])
        (reg:DI 1 dx [ jm ])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [145])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -624 [0xfffffffffffffd90])) [12 im+0 S8 A64])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [145]) [1 *im_58(D)+0 S4 A32])) "EFILL.f":1 86 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [146])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "EFILL.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 11 10 12 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 ubound.0+0 S8 A64])
        (reg:DI 0 ax [146])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 12 11 14 2 (set (reg:DI 0 ax [orig:129 stride.2_60 ] [129])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 ubound.0+0 S8 A64])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 14 12 13 2 (set (reg:DI 1 dx [147])
        (const_int 0 [0])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 13 14 258 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:129 stride.2_60 ] [129])
            (const_int 0 [0]))) "EFILL.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 258 13 15 2 (set (reg:DI 3 bx [147])
        (reg:DI 1 dx [147])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 15 258 16 2 (set (reg:DI 3 bx [147])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:129 stride.2_60 ] [129])
            (reg:DI 3 bx [147]))) "EFILL.f":1 1003 {*movdicc_noc}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [148])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -632 [0xfffffffffffffd88])) [12 jm+0 S8 A64])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 0 ax [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 0 ax [148]) [1 *jm_62(D)+0 S4 A32])) "EFILL.f":1 86 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 0 ax [149])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _2 ] [88]))) "EFILL.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 19 18 260 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 ubound.1+0 S8 A64])
        (reg:DI 0 ax [149])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 260 19 20 2 (set (reg:DI 0 ax [orig:131 size.4_64 ] [131])
        (reg:DI 3 bx [orig:130 stride.2_61 ] [130])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 20 260 22 2 (parallel [
            (set (reg:DI 0 ax [orig:131 size.4_64 ] [131])
                (mult:DI (reg:DI 0 ax [orig:131 size.4_64 ] [131])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [3 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":1 349 {*muldi3_1}
     (nil))
(insn 22 20 21 2 (set (reg:DI 1 dx [150])
        (const_int 0 [0])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 21 22 23 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:131 size.4_64 ] [131])
            (const_int 0 [0]))) "EFILL.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 23 21 26 2 (set (reg:DI 0 ax [orig:132 size.4_65 ] [132])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:131 size.4_64 ] [131])
            (reg:DI 1 dx [150]))) "EFILL.f":1 1003 {*movdicc_noc}
     (nil))
(insn 26 23 27 2 (set (reg:DI 37 r8 [orig:90 _4 ] [90])
        (reg:DI 0 ax [orig:89 size.6_3 ] [89])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 27 26 262 2 (set (reg:DI 38 r9 [ _4+8 ])
        (const_int 0 [0])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 262 27 31 2 (set (reg:DI 41 r12 [orig:136 offset.3_69 ] [136])
        (reg:DI 3 bx [orig:130 stride.2_61 ] [130])) "EFILL.f":1 85 {*movdi_internal}
     (nil))
(insn 31 262 277 2 (set (reg:DI 41 r12 [orig:136 offset.3_69 ] [136])
        (not:DI (reg:DI 41 r12 [orig:136 offset.3_69 ] [136]))) "EFILL.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 277 31 278 2 (set (reg:DI 5 di [151])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -64 [0xffffffffffffffc0]))) "EFILL.f":60 218 {*leadi}
     (nil))
(insn 278 277 34 2 (set (reg:DI 2 cx [152])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -68 [0xffffffffffffffbc]))) "EFILL.f":60 218 {*leadi}
     (nil))
(insn 34 278 35 2 (set (reg:DI 1 dx [153])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -632 [0xfffffffffffffd88])) [12 jm+0 S8 A64])) "EFILL.f":60 85 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 4 si [154])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -624 [0xfffffffffffffd90])) [12 im+0 S8 A64])) "EFILL.f":60 85 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:DI 0 ax [155])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -616 [0xfffffffffffffd98])) [11 egrid+0 S8 A64])) "EFILL.f":60 85 {*movdi_internal}
     (nil))
(insn 37 36 41 2 (set (reg:DI 37 r8)
        (reg:DI 5 di [151])) "EFILL.f":60 85 {*movdi_internal}
     (nil))
(insn 41 37 42 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [155])) "EFILL.f":60 85 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "EFILL.f":60 88 {*movqi_internal}
     (nil))
(call_insn 43 42 44 2 (call (mem:QI (symbol_ref:DI ("minmax_") [flags 0x41]  <function_decl 0x7f09ef033600 minmax>) [0 minmax S1 A8])
        (const_int 0 [0])) "EFILL.f":60 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 44 43 45 2 (set (reg:SF 21 xmm0 [orig:92 fmax.8_6 ] [92])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [4 fmax+0 S4 A128])) "EFILL.f":61 131 {*movsf_internal}
     (nil))
(insn 45 44 46 2 (set (reg:SF 22 xmm1 [orig:93 _7 ] [93])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f09f60a6e10 options>) [4 options.spval+0 S4 A128])) "EFILL.f":1 131 {*movsf_internal}
     (nil))
(insn 46 45 279 2 (set (reg:SF 21 xmm0 [orig:94 _8 ] [94])
        (minus:SF (reg:SF 21 xmm0 [orig:92 fmax.8_6 ] [92])
            (reg:SF 22 xmm1 [orig:93 _7 ] [93]))) "EFILL.f":61 841 {*fop_sf_1}
     (nil))
(insn 279 46 280 2 (set (reg:V4SF 22 xmm1 [156])
        (vec_merge:V4SF (vec_duplicate:V4SF (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A128]))
            (const_vector:V4SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ])
            (const_int 1 [0x1]))) "EFILL.f":61 2520 {vec_setv4sf_0}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 280 279 49 2 (set (reg:V4SF 21 xmm0 [orig:95 _9 ] [95])
        (and:V4SF (reg:V4SF 21 xmm0 [orig:94 _8 ] [94])
            (reg:V4SF 22 xmm1 [156]))) "EFILL.f":61 1816 {*andv4sf3}
     (nil))
(insn 49 280 50 2 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:95 _9 ] [95])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32]))) "EFILL.f":61 53 {*cmpisf}
     (nil))
(jump_insn 50 49 226 2 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 224)
            (pc))) "EFILL.f":61 682 {*jcc}
     (nil)
 -> 224)
;;  succ:       22
;;              3 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 21 [xmm0]
(note 226 50 59 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 59 226 276 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 npts+0 S4 A32])
        (const_int 0 [0])) "EFILL.f":65 86 {*movsi_internal}
     (nil))
(insn 276 59 61 3 (set (reg:DF 21 xmm0 [157])
        (const_double:DF 0.0 [0x0.0p+0])) "EFILL.f":66 130 {*movdf_internal}
     (nil))
(insn 61 276 62 3 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 sum+0 S8 A64])
        (reg:DF 21 xmm0 [157])) "EFILL.f":66 130 {*movdf_internal}
     (nil))
(insn 62 61 63 3 (set (reg/f:DI 0 ax [158])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -632 [0xfffffffffffffd88])) [12 jm+0 S8 A64])) "EFILL.f":68 85 {*movdi_internal}
     (nil))
(insn 63 62 64 3 (set (reg:SI 0 ax [orig:137 _74 ] [137])
        (mem:SI (reg/f:DI 0 ax [158]) [1 *jm_62(D)+0 S4 A32])) "EFILL.f":68 86 {*movsi_internal}
     (nil))
(insn 64 63 124 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "EFILL.f":68 86 {*movsi_internal}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              10 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 124 64 65 4 10 (nil) [1 uses])
(note 65 124 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:137 _74 ] [137]))) "EFILL.f":68 11 {*cmpsi_1}
     (nil))
(insn 67 66 68 4 (set (reg:QI 1 dx [159])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "EFILL.f":68 678 {*setcc_qi}
     (nil))
(insn 68 67 69 4 (set (reg:SI 1 dx [orig:138 _76 ] [138])
        (zero_extend:SI (reg:QI 1 dx [159]))) "EFILL.f":68 140 {*zero_extendqisi2}
     (nil))
(insn 69 68 70 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:138 _76 ] [138])
            (const_int 0 [0]))) "EFILL.f":68 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 70 69 71 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 246)
            (pc))) "EFILL.f":68 682 {*jcc}
     (nil)
 -> 246)
;;  succ:       11
;;              5 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx]
(note 71 70 72 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 5 (set (reg/f:DI 1 dx [160])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -624 [0xfffffffffffffd90])) [12 im+0 S8 A64])) "EFILL.f":69 85 {*movdi_internal}
     (nil))
(insn 73 72 74 5 (set (reg:SI 1 dx [orig:139 _77 ] [139])
        (mem:SI (reg/f:DI 1 dx [160]) [1 *im_58(D)+0 S4 A32])) "EFILL.f":69 86 {*movsi_internal}
     (nil))
(insn 74 73 118 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "EFILL.f":69 86 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              9 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
(code_label 118 74 75 6 9 (nil) [1 uses])
(note 75 118 76 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (reg:SI 1 dx [orig:139 _77 ] [139]))) "EFILL.f":69 11 {*cmpsi_1}
     (nil))
(insn 77 76 78 6 (set (reg:QI 2 cx [161])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "EFILL.f":69 678 {*setcc_qi}
     (nil))
(insn 78 77 79 6 (set (reg:SI 2 cx [orig:140 _79 ] [140])
        (zero_extend:SI (reg:QI 2 cx [161]))) "EFILL.f":69 140 {*zero_extendqisi2}
     (nil))
(insn 79 78 80 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx [orig:140 _79 ] [140])
            (const_int 0 [0]))) "EFILL.f":69 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 80 79 81 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 249)
            (pc))) "EFILL.f":69 682 {*jcc}
     (nil)
 -> 249)
;;  succ:       10
;;              7 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 2 [cx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 81 80 82 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 7 (set (reg:SI 2 cx [162])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "EFILL.f":70 86 {*movsi_internal}
     (nil))
(insn 83 82 84 7 (set (reg:DI 2 cx [orig:96 _10 ] [96])
        (sign_extend:DI (reg:SI 2 cx [162]))) "EFILL.f":70 149 {*extendsidi2_rex64}
     (nil))
(insn 84 83 273 7 (parallel [
            (set (reg:DI 2 cx [orig:97 _11 ] [97])
                (mult:DI (reg:DI 2 cx [orig:96 _10 ] [96])
                    (reg:DI 3 bx [orig:130 stride.2_61 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":70 349 {*muldi3_1}
     (nil))
(insn 273 84 86 7 (set (reg:DI 4 si [orig:98 _12 ] [98])
        (plus:DI (reg:DI 41 r12 [orig:136 offset.3_69 ] [136])
            (reg:DI 2 cx [orig:97 _11 ] [97]))) "EFILL.f":70 218 {*leadi}
     (nil))
(insn 86 273 87 7 (set (reg:SI 2 cx [163])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "EFILL.f":70 86 {*movsi_internal}
     (nil))
(insn 87 86 88 7 (set (reg:DI 2 cx [orig:99 _13 ] [99])
        (sign_extend:DI (reg:SI 2 cx [163]))) "EFILL.f":70 149 {*extendsidi2_rex64}
     (nil))
(insn 88 87 89 7 (parallel [
            (set (reg:DI 4 si [orig:100 _14 ] [100])
                (plus:DI (reg:DI 4 si [orig:98 _12 ] [98])
                    (reg:DI 2 cx [orig:99 _13 ] [99])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":70 222 {*adddi_1}
     (nil))
(insn 89 88 90 7 (set (reg/f:DI 2 cx [164])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -616 [0xfffffffffffffd98])) [11 egrid+0 S8 A64])) "EFILL.f":70 85 {*movdi_internal}
     (nil))
(insn 90 89 91 7 (set (reg:SF 21 xmm0 [orig:101 _15 ] [101])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:100 _14 ] [100])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [164])) [4 *egrid_70(D) S4 A32])) "EFILL.f":70 131 {*movsf_internal}
     (nil))
(insn 91 90 92 7 (set (reg:SF 22 xmm1 [orig:102 _16 ] [102])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f09f60a6e10 options>) [4 options.spval+0 S4 A128])) "EFILL.f":1 131 {*movsf_internal}
     (nil))
(insn 92 91 274 7 (set (reg:SF 21 xmm0 [orig:103 _17 ] [103])
        (minus:SF (reg:SF 21 xmm0 [orig:101 _15 ] [101])
            (reg:SF 22 xmm1 [orig:102 _16 ] [102]))) "EFILL.f":70 841 {*fop_sf_1}
     (nil))
(insn 274 92 275 7 (set (reg:V4SF 22 xmm1 [165])
        (vec_merge:V4SF (vec_duplicate:V4SF (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A128]))
            (const_vector:V4SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ])
            (const_int 1 [0x1]))) "EFILL.f":70 2520 {vec_setv4sf_0}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 275 274 95 7 (set (reg:V4SF 21 xmm0 [orig:104 _18 ] [104])
        (and:V4SF (reg:V4SF 21 xmm0 [orig:103 _17 ] [103])
            (reg:V4SF 22 xmm1 [165]))) "EFILL.f":70 1816 {*andv4sf3}
     (nil))
(insn 95 275 96 7 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:104 _18 ] [104])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32]))) "EFILL.f":70 53 {*cmpisf}
     (nil))
(jump_insn 96 95 100 7 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 115)
            (pc))) "EFILL.f":70 682 {*jcc}
     (nil)
 -> 115)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 2 [cx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 100 96 101 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 npts+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 npts+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":71 221 {*addsi_1}
     (nil))
(insn 102 101 103 8 (set (reg:SI 2 cx [166])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "EFILL.f":72 86 {*movsi_internal}
     (nil))
(insn 103 102 104 8 (set (reg:DI 2 cx [orig:105 _19 ] [105])
        (sign_extend:DI (reg:SI 2 cx [166]))) "EFILL.f":72 149 {*extendsidi2_rex64}
     (nil))
(insn 104 103 272 8 (parallel [
            (set (reg:DI 2 cx [orig:106 _20 ] [106])
                (mult:DI (reg:DI 2 cx [orig:105 _19 ] [105])
                    (reg:DI 3 bx [orig:130 stride.2_61 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":72 349 {*muldi3_1}
     (nil))
(insn 272 104 106 8 (set (reg:DI 4 si [orig:107 _21 ] [107])
        (plus:DI (reg:DI 41 r12 [orig:136 offset.3_69 ] [136])
            (reg:DI 2 cx [orig:106 _20 ] [106]))) "EFILL.f":72 218 {*leadi}
     (nil))
(insn 106 272 107 8 (set (reg:SI 2 cx [167])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "EFILL.f":72 86 {*movsi_internal}
     (nil))
(insn 107 106 108 8 (set (reg:DI 2 cx [orig:108 _22 ] [108])
        (sign_extend:DI (reg:SI 2 cx [167]))) "EFILL.f":72 149 {*extendsidi2_rex64}
     (nil))
(insn 108 107 109 8 (parallel [
            (set (reg:DI 4 si [orig:109 _23 ] [109])
                (plus:DI (reg:DI 4 si [orig:107 _21 ] [107])
                    (reg:DI 2 cx [orig:108 _22 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":72 222 {*adddi_1}
     (nil))
(insn 109 108 110 8 (set (reg/f:DI 2 cx [168])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -616 [0xfffffffffffffd98])) [11 egrid+0 S8 A64])) "EFILL.f":72 85 {*movdi_internal}
     (nil))
(insn 110 109 111 8 (set (reg:SF 21 xmm0 [orig:110 _24 ] [110])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:109 _23 ] [109])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [168])) [4 *egrid_70(D) S4 A32])) "EFILL.f":72 131 {*movsf_internal}
     (nil))
(insn 111 110 112 8 (set (reg:DF 21 xmm0 [orig:111 _25 ] [111])
        (float_extend:DF (reg:SF 21 xmm0 [orig:110 _24 ] [110]))) "EFILL.f":72 158 {*extendsfdf2}
     (nil))
(insn 112 111 113 8 (set (reg:DF 22 xmm1 [170])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 sum+0 S8 A64])) "EFILL.f":72 130 {*movdf_internal}
     (nil))
(insn 113 112 114 8 (set (reg:DF 21 xmm0 [169])
        (plus:DF (reg:DF 21 xmm0 [orig:111 _25 ] [111])
            (reg:DF 22 xmm1 [170]))) "EFILL.f":72 839 {*fop_df_comm}
     (nil))
(insn 114 113 115 8 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 sum+0 S8 A64])
        (reg:DF 21 xmm0 [169])) "EFILL.f":72 130 {*movdf_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 115 114 116 9 7 (nil) [1 uses])
(note 116 115 117 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 235 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":69 221 {*addsi_1}
     (nil))
(jump_insn 235 117 236 9 (set (pc)
        (label_ref 118)) "EFILL.f":69 683 {jump}
     (nil)
 -> 118)
;;  succ:       6 [always] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 236 235 249)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 249 236 248 10 22 (nil) [1 uses])
(note 248 249 250 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 250 248 123 10 (const_int 0 [0]) "EFILL.f":70 718 {nop}
     (nil))
(insn 123 250 237 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":68 221 {*addsi_1}
     (nil))
(jump_insn 237 123 238 10 (set (pc)
        (label_ref 124)) "EFILL.f":68 683 {jump}
     (nil)
 -> 124)
;;  succ:       4 [always] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 238 237 246)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 246 238 245 11 21 (nil) [1 uses])
(note 245 246 247 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 247 245 129 11 (const_int 0 [0]) "EFILL.f":69 718 {nop}
     (nil))
(insn 129 247 130 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 npts+0 S4 A32])
            (const_int 0 [0]))) "EFILL.f":76 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 130 129 131 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) "EFILL.f":76 682 {*jcc}
     (nil)
 -> 150)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 131 130 132 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -600 [0xfffffffffffffda8])) [7 dt_parm.5.common.filename+0 S8 A64])
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f09ef0432d0 *.LC3>)) "EFILL.f":77 85 {*movdi_internal}
     (nil))
(insn 133 132 134 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -592 [0xfffffffffffffdb0])) [1 dt_parm.5.common.line+0 S4 A128])
        (const_int 77 [0x4d])) "EFILL.f":77 86 {*movsi_internal}
     (nil))
(insn 134 133 135 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -608 [0xfffffffffffffda0])) [1 dt_parm.5.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "EFILL.f":77 86 {*movsi_internal}
     (nil))
(insn 135 134 136 12 (set (reg:SI 0 ax [orig:112 _26 ] [112])
        (mem/c:SI (symbol_ref:DI ("iounit_") [flags 0x2]  <var_decl 0x7f09f60a6ab0 iounit>) [1 iounit.stdout+0 S4 A128])) "EFILL.f":1 86 {*movsi_internal}
     (nil))
(insn 136 135 269 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -604 [0xfffffffffffffda4])) [1 dt_parm.5.common.unit+0 S4 A32])
        (reg:SI 0 ax [orig:112 _26 ] [112])) "EFILL.f":77 86 {*movsi_internal}
     (nil))
(insn 269 136 138 12 (set (reg:DI 0 ax [171])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -608 [0xfffffffffffffda0]))) "EFILL.f":77 218 {*leadi}
     (nil))
(insn 138 269 139 12 (set (reg:DI 5 di)
        (reg:DI 0 ax [171])) "EFILL.f":77 85 {*movdi_internal}
     (nil))
(call_insn 139 138 270 12 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x7f09ef030400 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "EFILL.f":77 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 270 139 141 12 (set (reg:DI 0 ax [172])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -608 [0xfffffffffffffda0]))) "EFILL.f":77 218 {*leadi}
     (nil))
(insn 141 270 142 12 (set (reg:DI 1 dx)
        (const_int 37 [0x25])) "EFILL.f":77 85 {*movdi_internal}
     (nil))
(insn 142 141 143 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f09ef043360 *.LC4>)) "EFILL.f":77 85 {*movdi_internal}
     (nil))
(insn 143 142 144 12 (set (reg:DI 5 di)
        (reg:DI 0 ax [172])) "EFILL.f":77 85 {*movdi_internal}
     (nil))
(call_insn 144 143 271 12 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x7f09ef02d500 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "EFILL.f":77 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 271 144 146 12 (set (reg:DI 0 ax [173])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -608 [0xfffffffffffffda0]))) "EFILL.f":77 218 {*leadi}
     (nil))
(insn 146 271 147 12 (set (reg:DI 5 di)
        (reg:DI 0 ax [173])) "EFILL.f":77 85 {*movdi_internal}
     (nil))
(call_insn 147 146 239 12 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x7f09ef030f00 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "EFILL.f":77 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 239 147 240 12 (set (pc)
        (label_ref 224)) "EFILL.f":78 683 {jump}
     (nil)
 -> 224)
;;  succ:       22 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 240 239 150)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 21 [xmm0] 22 [xmm1] 23 [xmm2]
(code_label 150 240 151 13 11 (nil) [1 uses])
(note 151 150 152 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 13 (set (reg:DF 22 xmm1 [orig:113 _27 ] [113])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 npts+0 S4 A32]))) "EFILL.f":80 205 {*floatsidf2_mixed}
     (nil))
(insn 153 152 154 13 (set (reg:DF 21 xmm0 [174])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 sum+0 S8 A64])) "EFILL.f":80 130 {*movdf_internal}
     (nil))
(insn 154 153 155 13 (set (reg:DF 21 xmm0 [orig:114 _28 ] [114])
        (div:DF (reg:DF 21 xmm0 [174])
            (reg:DF 22 xmm1 [orig:113 _27 ] [113]))) "EFILL.f":80 842 {*fop_df_1}
     (nil))
(insn 155 154 264 13 (set (reg:SF 23 xmm2 [191])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:114 _28 ] [114]))) "EFILL.f":80 161 {*truncdfsf_fast_mixed}
     (nil))
(insn 264 155 156 13 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [4 avg+0 S4 A32])
        (reg:SF 23 xmm2 [191])) "EFILL.f":80 131 {*movsf_internal}
     (nil))
(insn 156 264 157 13 (set (reg/f:DI 0 ax [175])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -632 [0xfffffffffffffd88])) [12 jm+0 S8 A64])) "EFILL.f":85 85 {*movdi_internal}
     (nil))
(insn 157 156 158 13 (set (reg:SI 0 ax [orig:141 _93 ] [141])
        (mem:SI (reg/f:DI 0 ax [175]) [1 *jm_62(D)+0 S4 A32])) "EFILL.f":85 86 {*movsi_internal}
     (nil))
(insn 158 157 215 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "EFILL.f":85 86 {*movsi_internal}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              20 [always] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 215 158 159 14 17 (nil) [1 uses])
(note 159 215 160 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:141 _93 ] [141]))) "EFILL.f":85 11 {*cmpsi_1}
     (nil))
(insn 161 160 162 14 (set (reg:QI 1 dx [176])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "EFILL.f":85 678 {*setcc_qi}
     (nil))
(insn 162 161 163 14 (set (reg:SI 1 dx [orig:142 _95 ] [142])
        (zero_extend:SI (reg:QI 1 dx [176]))) "EFILL.f":85 140 {*zero_extendqisi2}
     (nil))
(insn 163 162 164 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:142 _95 ] [142])
            (const_int 0 [0]))) "EFILL.f":85 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 164 163 165 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 252)
            (pc))) "EFILL.f":85 682 {*jcc}
     (nil)
 -> 252)
;;  succ:       21
;;              15 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx]
(note 165 164 166 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 15 (set (reg/f:DI 1 dx [177])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -624 [0xfffffffffffffd90])) [12 im+0 S8 A64])) "EFILL.f":86 85 {*movdi_internal}
     (nil))
(insn 167 166 168 15 (set (reg:SI 1 dx [orig:143 _96 ] [143])
        (mem:SI (reg/f:DI 1 dx [177]) [1 *im_58(D)+0 S4 A32])) "EFILL.f":86 86 {*movsi_internal}
     (nil))
(insn 168 167 209 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "EFILL.f":86 86 {*movsi_internal}
     (nil))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;;              19 [always] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
(code_label 209 168 169 16 16 (nil) [1 uses])
(note 169 209 170 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (reg:SI 1 dx [orig:143 _96 ] [143]))) "EFILL.f":86 11 {*cmpsi_1}
     (nil))
(insn 171 170 172 16 (set (reg:QI 2 cx [178])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "EFILL.f":86 678 {*setcc_qi}
     (nil))
(insn 172 171 173 16 (set (reg:SI 2 cx [orig:144 _98 ] [144])
        (zero_extend:SI (reg:QI 2 cx [178]))) "EFILL.f":86 140 {*zero_extendqisi2}
     (nil))
(insn 173 172 174 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx [orig:144 _98 ] [144])
            (const_int 0 [0]))) "EFILL.f":86 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 174 173 175 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 255)
            (pc))) "EFILL.f":86 682 {*jcc}
     (nil)
 -> 255)
;;  succ:       20
;;              17 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 2 [cx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 175 174 176 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 17 (set (reg:SI 2 cx [179])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "EFILL.f":87 86 {*movsi_internal}
     (nil))
(insn 177 176 178 17 (set (reg:DI 2 cx [orig:115 _29 ] [115])
        (sign_extend:DI (reg:SI 2 cx [179]))) "EFILL.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 178 177 266 17 (parallel [
            (set (reg:DI 2 cx [orig:116 _30 ] [116])
                (mult:DI (reg:DI 2 cx [orig:115 _29 ] [115])
                    (reg:DI 3 bx [orig:130 stride.2_61 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":87 349 {*muldi3_1}
     (nil))
(insn 266 178 180 17 (set (reg:DI 4 si [orig:117 _31 ] [117])
        (plus:DI (reg:DI 41 r12 [orig:136 offset.3_69 ] [136])
            (reg:DI 2 cx [orig:116 _30 ] [116]))) "EFILL.f":87 218 {*leadi}
     (nil))
(insn 180 266 181 17 (set (reg:SI 2 cx [180])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "EFILL.f":87 86 {*movsi_internal}
     (nil))
(insn 181 180 182 17 (set (reg:DI 2 cx [orig:118 _32 ] [118])
        (sign_extend:DI (reg:SI 2 cx [180]))) "EFILL.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 182 181 183 17 (parallel [
            (set (reg:DI 4 si [orig:119 _33 ] [119])
                (plus:DI (reg:DI 4 si [orig:117 _31 ] [117])
                    (reg:DI 2 cx [orig:118 _32 ] [118])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":87 222 {*adddi_1}
     (nil))
(insn 183 182 184 17 (set (reg/f:DI 2 cx [181])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -616 [0xfffffffffffffd98])) [11 egrid+0 S8 A64])) "EFILL.f":87 85 {*movdi_internal}
     (nil))
(insn 184 183 185 17 (set (reg:SF 21 xmm0 [orig:120 _34 ] [120])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:119 _33 ] [119])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [181])) [4 *egrid_70(D) S4 A32])) "EFILL.f":87 131 {*movsf_internal}
     (nil))
(insn 185 184 186 17 (set (reg:SF 22 xmm1 [orig:121 _35 ] [121])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f09f60a6e10 options>) [4 options.spval+0 S4 A128])) "EFILL.f":1 131 {*movsf_internal}
     (nil))
(insn 186 185 267 17 (set (reg:SF 21 xmm0 [orig:122 _36 ] [122])
        (minus:SF (reg:SF 21 xmm0 [orig:120 _34 ] [120])
            (reg:SF 22 xmm1 [orig:121 _35 ] [121]))) "EFILL.f":87 841 {*fop_sf_1}
     (nil))
(insn 267 186 268 17 (set (reg:V4SF 22 xmm1 [182])
        (vec_merge:V4SF (vec_duplicate:V4SF (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A128]))
            (const_vector:V4SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ])
            (const_int 1 [0x1]))) "EFILL.f":87 2520 {vec_setv4sf_0}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 268 267 189 17 (set (reg:V4SF 22 xmm1 [orig:123 _37 ] [123])
        (and:V4SF (reg:V4SF 22 xmm1 [182])
            (reg:V4SF 21 xmm0 [orig:122 _36 ] [122]))) "EFILL.f":87 1816 {*andv4sf3}
     (nil))
(insn 189 268 190 17 (set (reg:SF 21 xmm0 [183])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "EFILL.f":87 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.999999960041972002500187954865396022796630859375e-13 [0x0.8cbcccp-39])
        (nil)))
(insn 190 189 191 17 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [183])
            (reg:SF 22 xmm1 [orig:123 _37 ] [123]))) "EFILL.f":87 53 {*cmpisf}
     (nil))
(jump_insn 191 190 195 17 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 206)
            (pc))) "EFILL.f":87 682 {*jcc}
     (nil)
 -> 206)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 2 [cx] 4 [si] 17 [flags] 21 [xmm0]
(note 195 191 196 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 18 (set (reg:SI 2 cx [184])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "EFILL.f":87 86 {*movsi_internal}
     (nil))
(insn 197 196 198 18 (set (reg:DI 2 cx [orig:124 _38 ] [124])
        (sign_extend:DI (reg:SI 2 cx [184]))) "EFILL.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 198 197 265 18 (parallel [
            (set (reg:DI 2 cx [orig:125 _39 ] [125])
                (mult:DI (reg:DI 2 cx [orig:124 _38 ] [124])
                    (reg:DI 3 bx [orig:130 stride.2_61 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":87 349 {*muldi3_1}
     (nil))
(insn 265 198 200 18 (set (reg:DI 4 si [orig:126 _40 ] [126])
        (plus:DI (reg:DI 41 r12 [orig:136 offset.3_69 ] [136])
            (reg:DI 2 cx [orig:125 _39 ] [125]))) "EFILL.f":87 218 {*leadi}
     (nil))
(insn 200 265 201 18 (set (reg:SI 2 cx [185])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "EFILL.f":87 86 {*movsi_internal}
     (nil))
(insn 201 200 202 18 (set (reg:DI 2 cx [orig:127 _41 ] [127])
        (sign_extend:DI (reg:SI 2 cx [185]))) "EFILL.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 202 201 203 18 (parallel [
            (set (reg:DI 4 si [orig:128 _42 ] [128])
                (plus:DI (reg:DI 4 si [orig:126 _40 ] [126])
                    (reg:DI 2 cx [orig:127 _41 ] [127])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":87 222 {*adddi_1}
     (nil))
(insn 203 202 204 18 (set (reg/f:DI 2 cx [186])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -616 [0xfffffffffffffd98])) [11 egrid+0 S8 A64])) "EFILL.f":87 85 {*movdi_internal}
     (nil))
(insn 204 203 205 18 (set (reg:SF 21 xmm0 [187])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [4 avg+0 S4 A32])) "EFILL.f":87 131 {*movsf_internal}
     (nil))
(insn 205 204 206 18 (set (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:128 _42 ] [128])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [186])) [4 *egrid_70(D) S4 A32])
        (reg:SF 21 xmm0 [187])) "EFILL.f":87 131 {*movsf_internal}
     (nil))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;;              17
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 206 205 207 19 14 (nil) [1 uses])
(note 207 206 208 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 241 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":86 221 {*addsi_1}
     (nil))
(jump_insn 241 208 242 19 (set (pc)
        (label_ref 209)) "EFILL.f":86 683 {jump}
     (nil)
 -> 209)
;;  succ:       16 [always] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 242 241 255)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 255 242 254 20 24 (nil) [1 uses])
(note 254 255 256 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 256 254 214 20 (const_int 0 [0]) "EFILL.f":87 718 {nop}
     (nil))
(insn 214 256 243 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "EFILL.f":85 221 {*addsi_1}
     (nil))
(jump_insn 243 214 244 20 (set (pc)
        (label_ref 215)) "EFILL.f":85 683 {jump}
     (nil)
 -> 215)
;;  succ:       14 [always] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 244 243 252)
;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 252 244 251 21 23 (nil) [1 uses])
(note 251 252 253 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 253 251 234 21 (const_int 0 [0]) "EFILL.f":86 718 {nop}
     (nil))
(insn 234 253 224 21 (const_int 0 [0]) "EFILL.f":95 718 {nop}
     (nil))
;;  succ:       22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;;              2
;;              12 [always] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 224 234 225 22 1 (nil) [2 uses])
(note 225 224 287 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(note 287 225 288 22 NOTE_INSN_EPILOGUE_BEG)
(insn 288 287 289 22 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 624 [0x270])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "EFILL.f":96 -1
     (nil))
(insn 289 288 290 22 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "EFILL.f":96 -1
     (nil))
(insn 290 289 291 22 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "EFILL.f":96 -1
     (nil))
(insn/f 291 290 292 22 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "EFILL.f":96 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 292 291 293 22 (simple_return) "EFILL.f":96 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 293 292 257)
(note 257 293 0 NOTE_INSN_DELETED)
